items:
- uid: System.Linq.Expressions.MemberAssignment
  commentId: T:System.Linq.Expressions.MemberAssignment
  id: MemberAssignment
  parent: System.Linq.Expressions
  children:
  - System.Linq.Expressions.MemberAssignment.Expression
  - System.Linq.Expressions.MemberAssignment.Update(System.Linq.Expressions.Expression)
  langs:
  - csharp
  - vb
  name: MemberAssignment
  fullName: System.Linq.Expressions.MemberAssignment
  type: Class
  source:
    remote:
      path: src/System.Linq.Expressions/ref/System.Linq.Expressions.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: MemberAssignment
    path: src/System.Linq.Expressions/ref/System.Linq.Expressions.cs
    startLine: 674
  assemblies:
  - System.Linq.Expressions
  namespace: System.Linq.Expressions
  summary: "\n<p>Represents assignment operation for a field or property of an object.</p>\n"
  syntax:
    content: 'public sealed class MemberAssignment : MemberBinding'
    content.vb: >-
      Public NotInheritable Class MemberAssignment
          Inherits MemberBinding
  inheritance:
  - System.Object
  - System.Linq.Expressions.MemberBinding
  inheritedMembers:
  - System.Linq.Expressions.MemberBinding.BindingType
  - System.Linq.Expressions.MemberBinding.Member
  - System.Linq.Expressions.MemberBinding.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  modifiers.csharp:
  - public
  - sealed
  - class
  modifiers.vb:
  - Public
  - NotInheritable
  - Class
  nameWithType: MemberAssignment
- uid: System.Linq.Expressions.MemberAssignment.Expression
  commentId: P:System.Linq.Expressions.MemberAssignment.Expression
  id: Expression
  parent: System.Linq.Expressions.MemberAssignment
  langs:
  - csharp
  - vb
  name: Expression
  fullName: System.Linq.Expressions.MemberAssignment.Expression
  type: Property
  source:
    remote:
      path: src/System.Linq.Expressions/ref/System.Linq.Expressions.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: Expression
    path: src/System.Linq.Expressions/ref/System.Linq.Expressions.cs
    startLine: 677
  assemblies:
  - System.Linq.Expressions
  namespace: System.Linq.Expressions
  summary: "\n<p>Gets the expression to assign to the field or property.</p>\n"
  syntax:
    content: public Expression Expression { get; }
    content.vb: Public ReadOnly Property Expression As Expression
    parameters: []
    return:
      type: System.Linq.Expressions.Expression
      description: "\n<p>The <xref href=\"System.Linq.Expressions.Expression\" data-throw-if-not-resolved=\"false\"></xref> that represents the value to assign to the field or property.</p>\n"
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
  nameWithType: MemberAssignment.Expression
- uid: System.Linq.Expressions.MemberAssignment.Update(System.Linq.Expressions.Expression)
  commentId: M:System.Linq.Expressions.MemberAssignment.Update(System.Linq.Expressions.Expression)
  id: Update(System.Linq.Expressions.Expression)
  parent: System.Linq.Expressions.MemberAssignment
  langs:
  - csharp
  - vb
  name: Update(Expression)
  fullName: System.Linq.Expressions.MemberAssignment.Update(System.Linq.Expressions.Expression)
  type: Method
  source:
    remote:
      path: src/System.Linq.Expressions/ref/System.Linq.Expressions.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: Update
    path: src/System.Linq.Expressions/ref/System.Linq.Expressions.cs
    startLine: 678
  assemblies:
  - System.Linq.Expressions
  namespace: System.Linq.Expressions
  summary: "\n<p>Creates a new expression that is like this one, but using the supplied children. If all of the children are the same, it will return this expression.</p>\n"
  syntax:
    content: public MemberAssignment Update(Expression expression)
    content.vb: Public Function Update(expression As Expression) As MemberAssignment
    parameters:
    - id: expression
      type: System.Linq.Expressions.Expression
      description: "\n<p>The <xref href=\"System.Linq.Expressions.MemberAssignment.Expression\" data-throw-if-not-resolved=\"false\"></xref> property of the result.</p>\n"
    return:
      type: System.Linq.Expressions.MemberAssignment
      description: "\n<p>This expression if no children are changed or an expression with the updated children.</p>\n"
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  nameWithType: MemberAssignment.Update(Expression)
references:
- uid: System.Linq.Expressions
  isExternal: false
  name: System.Linq.Expressions
  fullName: System.Linq.Expressions
  commentId: N:System.Linq.Expressions
  nameWithType: System.Linq.Expressions
- uid: System.Object
  parent: System
  isExternal: false
  name: Object
  fullName: System.Object
  commentId: T:System.Object
  nameWithType: Object
- uid: System.Linq.Expressions.MemberBinding
  parent: System.Linq.Expressions
  isExternal: false
  name: MemberBinding
  fullName: System.Linq.Expressions.MemberBinding
  commentId: T:System.Linq.Expressions.MemberBinding
  nameWithType: MemberBinding
- uid: System.Linq.Expressions.MemberBinding.BindingType
  parent: System.Linq.Expressions.MemberBinding
  isExternal: false
  name: BindingType
  fullName: System.Linq.Expressions.MemberBinding.BindingType
  commentId: P:System.Linq.Expressions.MemberBinding.BindingType
  nameWithType: MemberBinding.BindingType
- uid: System.Linq.Expressions.MemberBinding.Member
  parent: System.Linq.Expressions.MemberBinding
  isExternal: false
  name: Member
  fullName: System.Linq.Expressions.MemberBinding.Member
  commentId: P:System.Linq.Expressions.MemberBinding.Member
  nameWithType: MemberBinding.Member
- uid: System.Linq.Expressions.MemberBinding.ToString
  parent: System.Linq.Expressions.MemberBinding
  isExternal: false
  name: ToString()
  fullName: System.Linq.Expressions.MemberBinding.ToString()
  spec.csharp:
  - uid: System.Linq.Expressions.MemberBinding.ToString
    name: ToString
    fullName: System.Linq.Expressions.MemberBinding.ToString
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Linq.Expressions.MemberBinding.ToString
    name: ToString
    fullName: System.Linq.Expressions.MemberBinding.ToString
  - name: (
    fullName: (
  - name: )
    fullName: )
  commentId: M:System.Linq.Expressions.MemberBinding.ToString
  nameWithType: MemberBinding.ToString()
- uid: System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
  commentId: M:System.Object.Equals(System.Object)
  nameWithType: Object.Equals(Object)
- uid: System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
  commentId: M:System.Object.Equals(System.Object,System.Object)
  nameWithType: Object.Equals(Object, Object)
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
- uid: System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  commentId: M:System.Object.GetHashCode
  nameWithType: Object.GetHashCode()
- uid: System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  commentId: M:System.Object.GetType
  nameWithType: Object.GetType()
- uid: System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  commentId: M:System.Object.MemberwiseClone
  nameWithType: Object.MemberwiseClone()
- uid: System
  isExternal: false
  name: System
  fullName: System
  commentId: N:System
  nameWithType: System
- uid: System.Linq.Expressions.Expression
  parent: System.Linq.Expressions
  isExternal: false
  name: Expression
  fullName: System.Linq.Expressions.Expression
  commentId: T:System.Linq.Expressions.Expression
  nameWithType: Expression
- uid: System.Linq.Expressions.MemberAssignment
  parent: System.Linq.Expressions
  isExternal: false
  name: MemberAssignment
  fullName: System.Linq.Expressions.MemberAssignment
  commentId: T:System.Linq.Expressions.MemberAssignment
  nameWithType: MemberAssignment
