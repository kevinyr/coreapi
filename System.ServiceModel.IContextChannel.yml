### YamlMime:ManagedReference
items:
- uid: System.ServiceModel.IContextChannel
  commentId: T:System.ServiceModel.IContextChannel
  id: IContextChannel
  parent: System.ServiceModel
  children:
  - System.ServiceModel.IContextChannel.AllowOutputBatching
  - System.ServiceModel.IContextChannel.InputSession
  - System.ServiceModel.IContextChannel.LocalAddress
  - System.ServiceModel.IContextChannel.OperationTimeout
  - System.ServiceModel.IContextChannel.OutputSession
  - System.ServiceModel.IContextChannel.RemoteAddress
  - System.ServiceModel.IContextChannel.SessionId
  langs:
  - csharp
  - vb
  name: IContextChannel
  nameWithType: IContextChannel
  fullName: System.ServiceModel.IContextChannel
  type: Interface
  source:
    remote:
      path: src/System.Private.ServiceModel/src/System/ServiceModel/IContextChannel.cs
      branch: master
      repo: https://github.com/dotnet/wcf.git
    id: IContextChannel
    path: src/System.Private.ServiceModel/src/System/ServiceModel/IContextChannel.cs
    startLine: 15
  assemblies:
  - System.ServiceModel.Primitives
  namespace: System.ServiceModel
  summary: "\n<p>Defines the interface for the context control of a channel.</p>\n"
  syntax:
    content: 'public interface IContextChannel : IChannel, ICommunicationObject, IExtensibleObject<IContextChannel>'
    content.vb: >-
      Public Interface IContextChannel
          Inherits IChannel, IExtensibleObject(Of IContextChannel)
  inheritedMembers:
  - System.ServiceModel.Channels.IChannel.GetProperty``1
  - System.ServiceModel.ICommunicationObject.State
  - System.ServiceModel.ICommunicationObject.Closed
  - System.ServiceModel.ICommunicationObject.Closing
  - System.ServiceModel.ICommunicationObject.Faulted
  - System.ServiceModel.ICommunicationObject.Opened
  - System.ServiceModel.ICommunicationObject.Opening
  - System.ServiceModel.ICommunicationObject.Abort
  - System.ServiceModel.ICommunicationObject.BeginClose(System.AsyncCallback,System.Object)
  - System.ServiceModel.ICommunicationObject.BeginClose(System.TimeSpan,System.AsyncCallback,System.Object)
  - System.ServiceModel.ICommunicationObject.BeginOpen(System.AsyncCallback,System.Object)
  - System.ServiceModel.ICommunicationObject.BeginOpen(System.TimeSpan,System.AsyncCallback,System.Object)
  - System.ServiceModel.ICommunicationObject.Close
  - System.ServiceModel.ICommunicationObject.Close(System.TimeSpan)
  - System.ServiceModel.ICommunicationObject.EndClose(System.IAsyncResult)
  - System.ServiceModel.ICommunicationObject.EndOpen(System.IAsyncResult)
  - System.ServiceModel.ICommunicationObject.Open
  - System.ServiceModel.ICommunicationObject.Open(System.TimeSpan)
  - System.ServiceModel.IExtensibleObject{System.ServiceModel.IContextChannel}.Extensions
  modifiers.csharp:
  - public
  - interface
  modifiers.vb:
  - Public
  - Interface
- uid: System.ServiceModel.IContextChannel.AllowOutputBatching
  commentId: P:System.ServiceModel.IContextChannel.AllowOutputBatching
  id: AllowOutputBatching
  parent: System.ServiceModel.IContextChannel
  langs:
  - csharp
  - vb
  name: AllowOutputBatching
  nameWithType: IContextChannel.AllowOutputBatching
  fullName: System.ServiceModel.IContextChannel.AllowOutputBatching
  type: Property
  source:
    remote:
      path: src/System.Private.ServiceModel/src/System/ServiceModel/IContextChannel.cs
      branch: master
      repo: https://github.com/dotnet/wcf.git
    id: AllowOutputBatching
    path: src/System.Private.ServiceModel/src/System/ServiceModel/IContextChannel.cs
    startLine: 17
  assemblies:
  - System.ServiceModel.Primitives
  namespace: System.ServiceModel
  summary: "\n<p>Gets or sets a value that instructs Windows Communication Foundation (WCF) to store a set of messages before giving the messages to the transport.</p>\n"
  syntax:
    content: bool AllowOutputBatching { get; set; }
    content.vb: Property AllowOutputBatching As Boolean
    parameters: []
    return:
      type: System.Boolean
      description: "\n<p>\n<strong>true</strong> if the batching of outgoing messages is allowed; otherwise, <strong>false</strong>.</p>\n"
  modifiers.csharp:
  - get
  - set
- uid: System.ServiceModel.IContextChannel.InputSession
  commentId: P:System.ServiceModel.IContextChannel.InputSession
  id: InputSession
  parent: System.ServiceModel.IContextChannel
  langs:
  - csharp
  - vb
  name: InputSession
  nameWithType: IContextChannel.InputSession
  fullName: System.ServiceModel.IContextChannel.InputSession
  type: Property
  source:
    remote:
      path: src/System.Private.ServiceModel/src/System/ServiceModel/IContextChannel.cs
      branch: master
      repo: https://github.com/dotnet/wcf.git
    id: InputSession
    path: src/System.Private.ServiceModel/src/System/ServiceModel/IContextChannel.cs
    startLine: 18
  assemblies:
  - System.ServiceModel.Primitives
  namespace: System.ServiceModel
  summary: "\n<p>Gets the input session for the channel.</p>\n"
  syntax:
    content: IInputSession InputSession { get; }
    content.vb: ReadOnly Property InputSession As IInputSession
    parameters: []
    return:
      type: System.ServiceModel.Channels.IInputSession
      description: "\n<p>The <xref href=\"System.ServiceModel.Channels.IInputSession\" data-throw-if-not-resolved=\"false\"></xref> for the channel.</p>\n"
  modifiers.csharp:
  - get
  modifiers.vb:
  - ReadOnly
- uid: System.ServiceModel.IContextChannel.LocalAddress
  commentId: P:System.ServiceModel.IContextChannel.LocalAddress
  id: LocalAddress
  parent: System.ServiceModel.IContextChannel
  langs:
  - csharp
  - vb
  name: LocalAddress
  nameWithType: IContextChannel.LocalAddress
  fullName: System.ServiceModel.IContextChannel.LocalAddress
  type: Property
  source:
    remote:
      path: src/System.Private.ServiceModel/src/System/ServiceModel/IContextChannel.cs
      branch: master
      repo: https://github.com/dotnet/wcf.git
    id: LocalAddress
    path: src/System.Private.ServiceModel/src/System/ServiceModel/IContextChannel.cs
    startLine: 19
  assemblies:
  - System.ServiceModel.Primitives
  namespace: System.ServiceModel
  summary: "\n<p>Gets the local endpoint for the channel.</p>\n"
  syntax:
    content: EndpointAddress LocalAddress { get; }
    content.vb: ReadOnly Property LocalAddress As EndpointAddress
    parameters: []
    return:
      type: System.ServiceModel.EndpointAddress
      description: "\n<p>The local <xref href=\"System.ServiceModel.EndpointAddress\" data-throw-if-not-resolved=\"false\"></xref> for the channel.</p>\n"
  modifiers.csharp:
  - get
  modifiers.vb:
  - ReadOnly
- uid: System.ServiceModel.IContextChannel.OperationTimeout
  commentId: P:System.ServiceModel.IContextChannel.OperationTimeout
  id: OperationTimeout
  parent: System.ServiceModel.IContextChannel
  langs:
  - csharp
  - vb
  name: OperationTimeout
  nameWithType: IContextChannel.OperationTimeout
  fullName: System.ServiceModel.IContextChannel.OperationTimeout
  type: Property
  source:
    remote:
      path: src/System.Private.ServiceModel/src/System/ServiceModel/IContextChannel.cs
      branch: master
      repo: https://github.com/dotnet/wcf.git
    id: OperationTimeout
    path: src/System.Private.ServiceModel/src/System/ServiceModel/IContextChannel.cs
    startLine: 20
  assemblies:
  - System.ServiceModel.Primitives
  namespace: System.ServiceModel
  summary: "\n<p>Gets or sets the time period within which an operation must complete or an exception is thrown.</p>\n"
  syntax:
    content: TimeSpan OperationTimeout { get; set; }
    content.vb: Property OperationTimeout As TimeSpan
    parameters: []
    return:
      type: System.TimeSpan
      description: "\n<p>The <xref href=\"System.TimeSpan\" data-throw-if-not-resolved=\"false\"></xref> that specifies the time period within which an operation must complete.</p>\n"
  modifiers.csharp:
  - get
  - set
- uid: System.ServiceModel.IContextChannel.OutputSession
  commentId: P:System.ServiceModel.IContextChannel.OutputSession
  id: OutputSession
  parent: System.ServiceModel.IContextChannel
  langs:
  - csharp
  - vb
  name: OutputSession
  nameWithType: IContextChannel.OutputSession
  fullName: System.ServiceModel.IContextChannel.OutputSession
  type: Property
  source:
    remote:
      path: src/System.Private.ServiceModel/src/System/ServiceModel/IContextChannel.cs
      branch: master
      repo: https://github.com/dotnet/wcf.git
    id: OutputSession
    path: src/System.Private.ServiceModel/src/System/ServiceModel/IContextChannel.cs
    startLine: 21
  assemblies:
  - System.ServiceModel.Primitives
  namespace: System.ServiceModel
  summary: "\n<p>Gets the output session associated with the channel, if any.</p>\n"
  syntax:
    content: IOutputSession OutputSession { get; }
    content.vb: ReadOnly Property OutputSession As IOutputSession
    parameters: []
    return:
      type: System.ServiceModel.Channels.IOutputSession
      description: "\n<p>A <xref href=\"System.ServiceModel.Channels.IOutputSession\" data-throw-if-not-resolved=\"false\"></xref> implementation if an input session exists; otherwise, <strong>null</strong>.</p>\n"
  modifiers.csharp:
  - get
  modifiers.vb:
  - ReadOnly
- uid: System.ServiceModel.IContextChannel.RemoteAddress
  commentId: P:System.ServiceModel.IContextChannel.RemoteAddress
  id: RemoteAddress
  parent: System.ServiceModel.IContextChannel
  langs:
  - csharp
  - vb
  name: RemoteAddress
  nameWithType: IContextChannel.RemoteAddress
  fullName: System.ServiceModel.IContextChannel.RemoteAddress
  type: Property
  source:
    remote:
      path: src/System.Private.ServiceModel/src/System/ServiceModel/IContextChannel.cs
      branch: master
      repo: https://github.com/dotnet/wcf.git
    id: RemoteAddress
    path: src/System.Private.ServiceModel/src/System/ServiceModel/IContextChannel.cs
    startLine: 22
  assemblies:
  - System.ServiceModel.Primitives
  namespace: System.ServiceModel
  summary: "\n<p>Gets the remote address associated with the channel.</p>\n"
  syntax:
    content: EndpointAddress RemoteAddress { get; }
    content.vb: ReadOnly Property RemoteAddress As EndpointAddress
    parameters: []
    return:
      type: System.ServiceModel.EndpointAddress
      description: "\n<p>The remote <xref href=\"System.ServiceModel.EndpointAddress\" data-throw-if-not-resolved=\"false\"></xref> for the channel.</p>\n"
  modifiers.csharp:
  - get
  modifiers.vb:
  - ReadOnly
- uid: System.ServiceModel.IContextChannel.SessionId
  commentId: P:System.ServiceModel.IContextChannel.SessionId
  id: SessionId
  parent: System.ServiceModel.IContextChannel
  langs:
  - csharp
  - vb
  name: SessionId
  nameWithType: IContextChannel.SessionId
  fullName: System.ServiceModel.IContextChannel.SessionId
  type: Property
  source:
    remote:
      path: src/System.Private.ServiceModel/src/System/ServiceModel/IContextChannel.cs
      branch: master
      repo: https://github.com/dotnet/wcf.git
    id: SessionId
    path: src/System.Private.ServiceModel/src/System/ServiceModel/IContextChannel.cs
    startLine: 23
  assemblies:
  - System.ServiceModel.Primitives
  namespace: System.ServiceModel
  summary: "\n<p>Returns an identifier for the current session, if any.</p>\n"
  syntax:
    content: string SessionId { get; }
    content.vb: ReadOnly Property SessionId As String
    parameters: []
    return:
      type: System.String
      description: "\n<p>The current session identifier, if any.</p>\n"
  modifiers.csharp:
  - get
  modifiers.vb:
  - ReadOnly
references:
- uid: System.ServiceModel
  commentId: N:System.ServiceModel
  isExternal: false
  name: System.ServiceModel
  nameWithType: System.ServiceModel
  fullName: System.ServiceModel
- uid: System.ServiceModel.Channels.IChannel.GetProperty``1
  commentId: M:System.ServiceModel.Channels.IChannel.GetProperty``1
  parent: System.ServiceModel.Channels.IChannel
  definition: System.ServiceModel.Channels.IChannel.GetProperty``1
  isExternal: false
  name: GetProperty<T>()
  nameWithType: IChannel.GetProperty<T>()
  fullName: System.ServiceModel.Channels.IChannel.GetProperty<T>()
  nameWithType.vb: IChannel.GetProperty(Of T)()
  fullname.vb: System.ServiceModel.Channels.IChannel.GetProperty(Of T)()
  name.vb: GetProperty(Of T)()
  spec.csharp:
  - uid: System.ServiceModel.Channels.IChannel.GetProperty``1
    name: GetProperty<T>
    nameWithType: IChannel.GetProperty<T>
    fullName: System.ServiceModel.Channels.IChannel.GetProperty<T>
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.ServiceModel.Channels.IChannel.GetProperty``1
    name: GetProperty(Of T)
    nameWithType: IChannel.GetProperty(Of T)
    fullName: System.ServiceModel.Channels.IChannel.GetProperty(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.ServiceModel.ICommunicationObject.State
  commentId: P:System.ServiceModel.ICommunicationObject.State
  parent: System.ServiceModel.ICommunicationObject
  isExternal: false
  name: State
  nameWithType: ICommunicationObject.State
  fullName: System.ServiceModel.ICommunicationObject.State
- uid: System.ServiceModel.ICommunicationObject.Closed
  commentId: E:System.ServiceModel.ICommunicationObject.Closed
  parent: System.ServiceModel.ICommunicationObject
  isExternal: false
  name: Closed
  nameWithType: ICommunicationObject.Closed
  fullName: System.ServiceModel.ICommunicationObject.Closed
- uid: System.ServiceModel.ICommunicationObject.Closing
  commentId: E:System.ServiceModel.ICommunicationObject.Closing
  parent: System.ServiceModel.ICommunicationObject
  isExternal: false
  name: Closing
  nameWithType: ICommunicationObject.Closing
  fullName: System.ServiceModel.ICommunicationObject.Closing
- uid: System.ServiceModel.ICommunicationObject.Faulted
  commentId: E:System.ServiceModel.ICommunicationObject.Faulted
  parent: System.ServiceModel.ICommunicationObject
  isExternal: false
  name: Faulted
  nameWithType: ICommunicationObject.Faulted
  fullName: System.ServiceModel.ICommunicationObject.Faulted
- uid: System.ServiceModel.ICommunicationObject.Opened
  commentId: E:System.ServiceModel.ICommunicationObject.Opened
  parent: System.ServiceModel.ICommunicationObject
  isExternal: false
  name: Opened
  nameWithType: ICommunicationObject.Opened
  fullName: System.ServiceModel.ICommunicationObject.Opened
- uid: System.ServiceModel.ICommunicationObject.Opening
  commentId: E:System.ServiceModel.ICommunicationObject.Opening
  parent: System.ServiceModel.ICommunicationObject
  isExternal: false
  name: Opening
  nameWithType: ICommunicationObject.Opening
  fullName: System.ServiceModel.ICommunicationObject.Opening
- uid: System.ServiceModel.ICommunicationObject.Abort
  commentId: M:System.ServiceModel.ICommunicationObject.Abort
  parent: System.ServiceModel.ICommunicationObject
  isExternal: false
  name: Abort()
  nameWithType: ICommunicationObject.Abort()
  fullName: System.ServiceModel.ICommunicationObject.Abort()
  spec.csharp:
  - uid: System.ServiceModel.ICommunicationObject.Abort
    name: Abort
    nameWithType: ICommunicationObject.Abort
    fullName: System.ServiceModel.ICommunicationObject.Abort
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.ServiceModel.ICommunicationObject.Abort
    name: Abort
    nameWithType: ICommunicationObject.Abort
    fullName: System.ServiceModel.ICommunicationObject.Abort
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.ServiceModel.ICommunicationObject.BeginClose(System.AsyncCallback,System.Object)
  commentId: M:System.ServiceModel.ICommunicationObject.BeginClose(System.AsyncCallback,System.Object)
  parent: System.ServiceModel.ICommunicationObject
  isExternal: true
  name: BeginClose(AsyncCallback, Object)
  nameWithType: ICommunicationObject.BeginClose(AsyncCallback, Object)
  fullName: System.ServiceModel.ICommunicationObject.BeginClose(System.AsyncCallback, System.Object)
  spec.csharp:
  - uid: System.ServiceModel.ICommunicationObject.BeginClose(System.AsyncCallback,System.Object)
    name: BeginClose
    nameWithType: ICommunicationObject.BeginClose
    fullName: System.ServiceModel.ICommunicationObject.BeginClose
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.AsyncCallback
    name: AsyncCallback
    nameWithType: AsyncCallback
    fullName: System.AsyncCallback
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.ServiceModel.ICommunicationObject.BeginClose(System.AsyncCallback,System.Object)
    name: BeginClose
    nameWithType: ICommunicationObject.BeginClose
    fullName: System.ServiceModel.ICommunicationObject.BeginClose
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.AsyncCallback
    name: AsyncCallback
    nameWithType: AsyncCallback
    fullName: System.AsyncCallback
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.ServiceModel.ICommunicationObject.BeginClose(System.TimeSpan,System.AsyncCallback,System.Object)
  commentId: M:System.ServiceModel.ICommunicationObject.BeginClose(System.TimeSpan,System.AsyncCallback,System.Object)
  parent: System.ServiceModel.ICommunicationObject
  isExternal: true
  name: BeginClose(TimeSpan, AsyncCallback, Object)
  nameWithType: ICommunicationObject.BeginClose(TimeSpan, AsyncCallback, Object)
  fullName: System.ServiceModel.ICommunicationObject.BeginClose(System.TimeSpan, System.AsyncCallback, System.Object)
  spec.csharp:
  - uid: System.ServiceModel.ICommunicationObject.BeginClose(System.TimeSpan,System.AsyncCallback,System.Object)
    name: BeginClose
    nameWithType: ICommunicationObject.BeginClose
    fullName: System.ServiceModel.ICommunicationObject.BeginClose
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.TimeSpan
    name: TimeSpan
    nameWithType: TimeSpan
    fullName: System.TimeSpan
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.AsyncCallback
    name: AsyncCallback
    nameWithType: AsyncCallback
    fullName: System.AsyncCallback
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.ServiceModel.ICommunicationObject.BeginClose(System.TimeSpan,System.AsyncCallback,System.Object)
    name: BeginClose
    nameWithType: ICommunicationObject.BeginClose
    fullName: System.ServiceModel.ICommunicationObject.BeginClose
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.TimeSpan
    name: TimeSpan
    nameWithType: TimeSpan
    fullName: System.TimeSpan
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.AsyncCallback
    name: AsyncCallback
    nameWithType: AsyncCallback
    fullName: System.AsyncCallback
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.ServiceModel.ICommunicationObject.BeginOpen(System.AsyncCallback,System.Object)
  commentId: M:System.ServiceModel.ICommunicationObject.BeginOpen(System.AsyncCallback,System.Object)
  parent: System.ServiceModel.ICommunicationObject
  isExternal: true
  name: BeginOpen(AsyncCallback, Object)
  nameWithType: ICommunicationObject.BeginOpen(AsyncCallback, Object)
  fullName: System.ServiceModel.ICommunicationObject.BeginOpen(System.AsyncCallback, System.Object)
  spec.csharp:
  - uid: System.ServiceModel.ICommunicationObject.BeginOpen(System.AsyncCallback,System.Object)
    name: BeginOpen
    nameWithType: ICommunicationObject.BeginOpen
    fullName: System.ServiceModel.ICommunicationObject.BeginOpen
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.AsyncCallback
    name: AsyncCallback
    nameWithType: AsyncCallback
    fullName: System.AsyncCallback
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.ServiceModel.ICommunicationObject.BeginOpen(System.AsyncCallback,System.Object)
    name: BeginOpen
    nameWithType: ICommunicationObject.BeginOpen
    fullName: System.ServiceModel.ICommunicationObject.BeginOpen
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.AsyncCallback
    name: AsyncCallback
    nameWithType: AsyncCallback
    fullName: System.AsyncCallback
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.ServiceModel.ICommunicationObject.BeginOpen(System.TimeSpan,System.AsyncCallback,System.Object)
  commentId: M:System.ServiceModel.ICommunicationObject.BeginOpen(System.TimeSpan,System.AsyncCallback,System.Object)
  parent: System.ServiceModel.ICommunicationObject
  isExternal: true
  name: BeginOpen(TimeSpan, AsyncCallback, Object)
  nameWithType: ICommunicationObject.BeginOpen(TimeSpan, AsyncCallback, Object)
  fullName: System.ServiceModel.ICommunicationObject.BeginOpen(System.TimeSpan, System.AsyncCallback, System.Object)
  spec.csharp:
  - uid: System.ServiceModel.ICommunicationObject.BeginOpen(System.TimeSpan,System.AsyncCallback,System.Object)
    name: BeginOpen
    nameWithType: ICommunicationObject.BeginOpen
    fullName: System.ServiceModel.ICommunicationObject.BeginOpen
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.TimeSpan
    name: TimeSpan
    nameWithType: TimeSpan
    fullName: System.TimeSpan
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.AsyncCallback
    name: AsyncCallback
    nameWithType: AsyncCallback
    fullName: System.AsyncCallback
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.ServiceModel.ICommunicationObject.BeginOpen(System.TimeSpan,System.AsyncCallback,System.Object)
    name: BeginOpen
    nameWithType: ICommunicationObject.BeginOpen
    fullName: System.ServiceModel.ICommunicationObject.BeginOpen
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.TimeSpan
    name: TimeSpan
    nameWithType: TimeSpan
    fullName: System.TimeSpan
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.AsyncCallback
    name: AsyncCallback
    nameWithType: AsyncCallback
    fullName: System.AsyncCallback
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.ServiceModel.ICommunicationObject.Close
  commentId: M:System.ServiceModel.ICommunicationObject.Close
  parent: System.ServiceModel.ICommunicationObject
  isExternal: false
  name: Close()
  nameWithType: ICommunicationObject.Close()
  fullName: System.ServiceModel.ICommunicationObject.Close()
  spec.csharp:
  - uid: System.ServiceModel.ICommunicationObject.Close
    name: Close
    nameWithType: ICommunicationObject.Close
    fullName: System.ServiceModel.ICommunicationObject.Close
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.ServiceModel.ICommunicationObject.Close
    name: Close
    nameWithType: ICommunicationObject.Close
    fullName: System.ServiceModel.ICommunicationObject.Close
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.ServiceModel.ICommunicationObject.Close(System.TimeSpan)
  commentId: M:System.ServiceModel.ICommunicationObject.Close(System.TimeSpan)
  parent: System.ServiceModel.ICommunicationObject
  isExternal: true
  name: Close(TimeSpan)
  nameWithType: ICommunicationObject.Close(TimeSpan)
  fullName: System.ServiceModel.ICommunicationObject.Close(System.TimeSpan)
  spec.csharp:
  - uid: System.ServiceModel.ICommunicationObject.Close(System.TimeSpan)
    name: Close
    nameWithType: ICommunicationObject.Close
    fullName: System.ServiceModel.ICommunicationObject.Close
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.TimeSpan
    name: TimeSpan
    nameWithType: TimeSpan
    fullName: System.TimeSpan
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.ServiceModel.ICommunicationObject.Close(System.TimeSpan)
    name: Close
    nameWithType: ICommunicationObject.Close
    fullName: System.ServiceModel.ICommunicationObject.Close
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.TimeSpan
    name: TimeSpan
    nameWithType: TimeSpan
    fullName: System.TimeSpan
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.ServiceModel.ICommunicationObject.EndClose(System.IAsyncResult)
  commentId: M:System.ServiceModel.ICommunicationObject.EndClose(System.IAsyncResult)
  parent: System.ServiceModel.ICommunicationObject
  isExternal: true
  name: EndClose(IAsyncResult)
  nameWithType: ICommunicationObject.EndClose(IAsyncResult)
  fullName: System.ServiceModel.ICommunicationObject.EndClose(System.IAsyncResult)
  spec.csharp:
  - uid: System.ServiceModel.ICommunicationObject.EndClose(System.IAsyncResult)
    name: EndClose
    nameWithType: ICommunicationObject.EndClose
    fullName: System.ServiceModel.ICommunicationObject.EndClose
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.IAsyncResult
    name: IAsyncResult
    nameWithType: IAsyncResult
    fullName: System.IAsyncResult
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.ServiceModel.ICommunicationObject.EndClose(System.IAsyncResult)
    name: EndClose
    nameWithType: ICommunicationObject.EndClose
    fullName: System.ServiceModel.ICommunicationObject.EndClose
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.IAsyncResult
    name: IAsyncResult
    nameWithType: IAsyncResult
    fullName: System.IAsyncResult
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.ServiceModel.ICommunicationObject.EndOpen(System.IAsyncResult)
  commentId: M:System.ServiceModel.ICommunicationObject.EndOpen(System.IAsyncResult)
  parent: System.ServiceModel.ICommunicationObject
  isExternal: true
  name: EndOpen(IAsyncResult)
  nameWithType: ICommunicationObject.EndOpen(IAsyncResult)
  fullName: System.ServiceModel.ICommunicationObject.EndOpen(System.IAsyncResult)
  spec.csharp:
  - uid: System.ServiceModel.ICommunicationObject.EndOpen(System.IAsyncResult)
    name: EndOpen
    nameWithType: ICommunicationObject.EndOpen
    fullName: System.ServiceModel.ICommunicationObject.EndOpen
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.IAsyncResult
    name: IAsyncResult
    nameWithType: IAsyncResult
    fullName: System.IAsyncResult
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.ServiceModel.ICommunicationObject.EndOpen(System.IAsyncResult)
    name: EndOpen
    nameWithType: ICommunicationObject.EndOpen
    fullName: System.ServiceModel.ICommunicationObject.EndOpen
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.IAsyncResult
    name: IAsyncResult
    nameWithType: IAsyncResult
    fullName: System.IAsyncResult
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.ServiceModel.ICommunicationObject.Open
  commentId: M:System.ServiceModel.ICommunicationObject.Open
  parent: System.ServiceModel.ICommunicationObject
  isExternal: false
  name: Open()
  nameWithType: ICommunicationObject.Open()
  fullName: System.ServiceModel.ICommunicationObject.Open()
  spec.csharp:
  - uid: System.ServiceModel.ICommunicationObject.Open
    name: Open
    nameWithType: ICommunicationObject.Open
    fullName: System.ServiceModel.ICommunicationObject.Open
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.ServiceModel.ICommunicationObject.Open
    name: Open
    nameWithType: ICommunicationObject.Open
    fullName: System.ServiceModel.ICommunicationObject.Open
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.ServiceModel.ICommunicationObject.Open(System.TimeSpan)
  commentId: M:System.ServiceModel.ICommunicationObject.Open(System.TimeSpan)
  parent: System.ServiceModel.ICommunicationObject
  isExternal: true
  name: Open(TimeSpan)
  nameWithType: ICommunicationObject.Open(TimeSpan)
  fullName: System.ServiceModel.ICommunicationObject.Open(System.TimeSpan)
  spec.csharp:
  - uid: System.ServiceModel.ICommunicationObject.Open(System.TimeSpan)
    name: Open
    nameWithType: ICommunicationObject.Open
    fullName: System.ServiceModel.ICommunicationObject.Open
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.TimeSpan
    name: TimeSpan
    nameWithType: TimeSpan
    fullName: System.TimeSpan
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.ServiceModel.ICommunicationObject.Open(System.TimeSpan)
    name: Open
    nameWithType: ICommunicationObject.Open
    fullName: System.ServiceModel.ICommunicationObject.Open
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.TimeSpan
    name: TimeSpan
    nameWithType: TimeSpan
    fullName: System.TimeSpan
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.ServiceModel.IExtensibleObject{System.ServiceModel.IContextChannel}.Extensions
  commentId: P:System.ServiceModel.IExtensibleObject{System.ServiceModel.IContextChannel}.Extensions
  parent: System.ServiceModel.IExtensibleObject{System.ServiceModel.IContextChannel}
  definition: System.ServiceModel.IExtensibleObject`1.Extensions
  name: Extensions
  nameWithType: IExtensibleObject<IContextChannel>.Extensions
  fullName: System.ServiceModel.IExtensibleObject<System.ServiceModel.IContextChannel>.Extensions
  nameWithType.vb: IExtensibleObject(Of IContextChannel).Extensions
  fullname.vb: System.ServiceModel.IExtensibleObject(Of System.ServiceModel.IContextChannel).Extensions
- uid: System.ServiceModel.Channels.IChannel
  commentId: T:System.ServiceModel.Channels.IChannel
  parent: System.ServiceModel.Channels
  isExternal: false
  name: IChannel
  nameWithType: IChannel
  fullName: System.ServiceModel.Channels.IChannel
- uid: System.ServiceModel.ICommunicationObject
  commentId: T:System.ServiceModel.ICommunicationObject
  parent: System.ServiceModel
  isExternal: false
  name: ICommunicationObject
  nameWithType: ICommunicationObject
  fullName: System.ServiceModel.ICommunicationObject
- uid: System.ServiceModel.IExtensibleObject`1.Extensions
  commentId: P:System.ServiceModel.IExtensibleObject`1.Extensions
  isExternal: false
  name: Extensions
  nameWithType: IExtensibleObject<T>.Extensions
  fullName: System.ServiceModel.IExtensibleObject<T>.Extensions
  nameWithType.vb: IExtensibleObject(Of T).Extensions
  fullname.vb: System.ServiceModel.IExtensibleObject(Of T).Extensions
- uid: System.ServiceModel.IExtensibleObject{System.ServiceModel.IContextChannel}
  commentId: T:System.ServiceModel.IExtensibleObject{System.ServiceModel.IContextChannel}
  parent: System.ServiceModel
  definition: System.ServiceModel.IExtensibleObject`1
  name: IExtensibleObject<IContextChannel>
  nameWithType: IExtensibleObject<IContextChannel>
  fullName: System.ServiceModel.IExtensibleObject<System.ServiceModel.IContextChannel>
  nameWithType.vb: IExtensibleObject(Of IContextChannel)
  fullname.vb: System.ServiceModel.IExtensibleObject(Of System.ServiceModel.IContextChannel)
  name.vb: IExtensibleObject(Of IContextChannel)
  spec.csharp:
  - uid: System.ServiceModel.IExtensibleObject`1
    name: IExtensibleObject
    nameWithType: IExtensibleObject
    fullName: System.ServiceModel.IExtensibleObject
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.ServiceModel.IContextChannel
    name: IContextChannel
    nameWithType: IContextChannel
    fullName: System.ServiceModel.IContextChannel
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.ServiceModel.IExtensibleObject`1
    name: IExtensibleObject
    nameWithType: IExtensibleObject
    fullName: System.ServiceModel.IExtensibleObject
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.ServiceModel.IContextChannel
    name: IContextChannel
    nameWithType: IContextChannel
    fullName: System.ServiceModel.IContextChannel
  - name: )
    nameWithType: )
    fullName: )
- uid: System.ServiceModel.Channels
  commentId: N:System.ServiceModel.Channels
  isExternal: false
  name: System.ServiceModel.Channels
  nameWithType: System.ServiceModel.Channels
  fullName: System.ServiceModel.Channels
- uid: System.ServiceModel.IExtensibleObject`1
  commentId: T:System.ServiceModel.IExtensibleObject`1
  isExternal: false
  name: IExtensibleObject<T>
  nameWithType: IExtensibleObject<T>
  fullName: System.ServiceModel.IExtensibleObject<T>
  nameWithType.vb: IExtensibleObject(Of T)
  fullname.vb: System.ServiceModel.IExtensibleObject(Of T)
  name.vb: IExtensibleObject(Of T)
  spec.csharp:
  - uid: System.ServiceModel.IExtensibleObject`1
    name: IExtensibleObject
    nameWithType: IExtensibleObject
    fullName: System.ServiceModel.IExtensibleObject
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.ServiceModel.IExtensibleObject`1
    name: IExtensibleObject
    nameWithType: IExtensibleObject
    fullName: System.ServiceModel.IExtensibleObject
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: false
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: System.ServiceModel.Channels.IInputSession
  commentId: T:System.ServiceModel.Channels.IInputSession
  parent: System.ServiceModel.Channels
  isExternal: false
  name: IInputSession
  nameWithType: IInputSession
  fullName: System.ServiceModel.Channels.IInputSession
- uid: System.ServiceModel.EndpointAddress
  commentId: T:System.ServiceModel.EndpointAddress
  parent: System.ServiceModel
  isExternal: false
  name: EndpointAddress
  nameWithType: EndpointAddress
  fullName: System.ServiceModel.EndpointAddress
- uid: System.TimeSpan
  commentId: T:System.TimeSpan
  parent: System
  isExternal: false
  name: TimeSpan
  nameWithType: TimeSpan
  fullName: System.TimeSpan
- uid: System.ServiceModel.Channels.IOutputSession
  commentId: T:System.ServiceModel.Channels.IOutputSession
  parent: System.ServiceModel.Channels
  isExternal: false
  name: IOutputSession
  nameWithType: IOutputSession
  fullName: System.ServiceModel.Channels.IOutputSession
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: false
  name: String
  nameWithType: String
  fullName: System.String
