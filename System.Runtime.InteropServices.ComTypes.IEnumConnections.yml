### YamlMime:ManagedReference
items:
- uid: System.Runtime.InteropServices.ComTypes.IEnumConnections
  commentId: T:System.Runtime.InteropServices.ComTypes.IEnumConnections
  id: IEnumConnections
  parent: System.Runtime.InteropServices.ComTypes
  children:
  - System.Runtime.InteropServices.ComTypes.IEnumConnections.Clone(System.Runtime.InteropServices.ComTypes.IEnumConnections@)
  - System.Runtime.InteropServices.ComTypes.IEnumConnections.Next(System.Int32,System.Runtime.InteropServices.ComTypes.CONNECTDATA[],System.IntPtr)
  - System.Runtime.InteropServices.ComTypes.IEnumConnections.Reset
  - System.Runtime.InteropServices.ComTypes.IEnumConnections.Skip(System.Int32)
  langs:
  - csharp
  - vb
  name: IEnumConnections
  nameWithType: IEnumConnections
  fullName: System.Runtime.InteropServices.ComTypes.IEnumConnections
  type: Interface
  source:
    remote:
      path: src/mscorlib/src/System/Runtime/InteropServices/ComTypes/IEnumConnections.cs
      branch: master
      repo: https://github.com/dotnet/coreclr.git
    id: IEnumConnections
    path: src/mscorlib/src/System/Runtime/InteropServices/ComTypes/IEnumConnections.cs
    startLine: 26
  assemblies:
  - System.Runtime.InteropServices
  namespace: System.Runtime.InteropServices.ComTypes
  summary: "\n<p>Manages the definition of the <strong>IEnumConnections</strong> interface.</p>\n"
  syntax:
    content: >-
      [Guid("B196B287-BAB4-101A-B69C-00AA00341D07")]

      [InterfaceType(ComInterfaceType.InterfaceIsIUnknown)]

      [ComImport]

      public interface IEnumConnections
    content.vb: >-
      <Guid("B196B287-BAB4-101A-B69C-00AA00341D07")>

      <InterfaceType(ComInterfaceType.InterfaceIsIUnknown)>

      <ComImport>

      Public Interface IEnumConnections
  attributes:
  - type: System.Runtime.InteropServices.InterfaceTypeAttribute
    ctor: System.Runtime.InteropServices.InterfaceTypeAttribute.#ctor(System.Runtime.InteropServices.ComInterfaceType)
    arguments:
    - type: System.Runtime.InteropServices.ComInterfaceType
      value: 1
  modifiers.csharp:
  - public
  - interface
  modifiers.vb:
  - Public
  - Interface
- uid: System.Runtime.InteropServices.ComTypes.IEnumConnections.Clone(System.Runtime.InteropServices.ComTypes.IEnumConnections@)
  commentId: M:System.Runtime.InteropServices.ComTypes.IEnumConnections.Clone(System.Runtime.InteropServices.ComTypes.IEnumConnections@)
  id: Clone(System.Runtime.InteropServices.ComTypes.IEnumConnections@)
  parent: System.Runtime.InteropServices.ComTypes.IEnumConnections
  langs:
  - csharp
  - vb
  name: Clone(out IEnumConnections)
  nameWithType: IEnumConnections.Clone(out IEnumConnections)
  fullName: System.Runtime.InteropServices.ComTypes.IEnumConnections.Clone(out System.Runtime.InteropServices.ComTypes.IEnumConnections)
  type: Method
  source:
    remote:
      path: src/mscorlib/src/System/Runtime/InteropServices/ComTypes/IEnumConnections.cs
      branch: master
      repo: https://github.com/dotnet/coreclr.git
    id: Clone
    path: src/mscorlib/src/System/Runtime/InteropServices/ComTypes/IEnumConnections.cs
    startLine: 36
  assemblies:
  - System.Runtime.InteropServices
  namespace: System.Runtime.InteropServices.ComTypes
  summary: "\n<p>Creates a new enumerator that contains the same enumeration state as the current one.</p>\n"
  syntax:
    content: void Clone(out IEnumConnections ppenum)
    content.vb: Sub Clone(ByRef ppenum As IEnumConnections)
    parameters:
    - id: ppenum
      type: System.Runtime.InteropServices.ComTypes.IEnumConnections
      description: "\n<p>When this method returns, contains a reference to the newly created enumerator. This parameter is passed uninitialized.</p>\n"
  nameWithType.vb: IEnumConnections.Clone(ByRef IEnumConnections)
  fullName.vb: System.Runtime.InteropServices.ComTypes.IEnumConnections.Clone(ByRef System.Runtime.InteropServices.ComTypes.IEnumConnections)
  name.vb: Clone(ByRef IEnumConnections)
- uid: System.Runtime.InteropServices.ComTypes.IEnumConnections.Next(System.Int32,System.Runtime.InteropServices.ComTypes.CONNECTDATA[],System.IntPtr)
  commentId: M:System.Runtime.InteropServices.ComTypes.IEnumConnections.Next(System.Int32,System.Runtime.InteropServices.ComTypes.CONNECTDATA[],System.IntPtr)
  id: Next(System.Int32,System.Runtime.InteropServices.ComTypes.CONNECTDATA[],System.IntPtr)
  parent: System.Runtime.InteropServices.ComTypes.IEnumConnections
  langs:
  - csharp
  - vb
  name: Next(Int32, CONNECTDATA[], IntPtr)
  nameWithType: IEnumConnections.Next(Int32, CONNECTDATA[], IntPtr)
  fullName: System.Runtime.InteropServices.ComTypes.IEnumConnections.Next(System.Int32, System.Runtime.InteropServices.ComTypes.CONNECTDATA[], System.IntPtr)
  type: Method
  source:
    remote:
      path: src/mscorlib/src/System/Runtime/InteropServices/ComTypes/IEnumConnections.cs
      branch: master
      repo: https://github.com/dotnet/coreclr.git
    id: Next
    path: src/mscorlib/src/System/Runtime/InteropServices/ComTypes/IEnumConnections.cs
    startLine: 31
  assemblies:
  - System.Runtime.InteropServices
  namespace: System.Runtime.InteropServices.ComTypes
  summary: "\n<p>Retrieves a specified number of items in the enumeration sequence.</p>\n"
  syntax:
    content: >-
      [PreserveSig]

      int Next(int celt, [MarshalAs(UnmanagedType.LPArray, SizeParamIndex = (short)0), Out] CONNECTDATA[] rgelt, IntPtr pceltFetched)
    content.vb: >-
      <PreserveSig>

      Function Next(celt As Integer, rgelt As CONNECTDATA(), pceltFetched As IntPtr) As Integer
    parameters:
    - id: celt
      type: System.Int32
      description: "\n<p>The number of <xref href=\"System.Runtime.InteropServices.CONNECTDATA\" data-throw-if-not-resolved=\"false\"></xref> structures to return in <em>rgelt</em>. </p>\n"
    - id: rgelt
      type: System.Runtime.InteropServices.ComTypes.CONNECTDATA[]
      description: "\n<p>When this method returns, contains a reference to the enumerated connections. This parameter is passed uninitialized.</p>\n"
      attributes:
      - type: System.Runtime.InteropServices.MarshalAsAttribute
        ctor: System.Runtime.InteropServices.MarshalAsAttribute.#ctor(System.Runtime.InteropServices.UnmanagedType)
        arguments:
        - type: System.Runtime.InteropServices.UnmanagedType
          value: 42
        namedArguments:
        - name: SizeParamIndex
          type: System.Int16
          value: 0
      - type: System.Runtime.InteropServices.OutAttribute
        ctor: System.Runtime.InteropServices.OutAttribute.#ctor
        arguments: []
    - id: pceltFetched
      type: System.IntPtr
      description: "\n<p>When this method returns, contains a reference to the actual number of connections enumerated in <em>rgelt</em>. </p>\n"
    return:
      type: System.Int32
      description: "\n<p>\n<strong>S_OK</strong> if the <em>pceltFetched</em> parameter equals the <em>celt</em> parameter; otherwise, <strong>S_FALSE</strong>.</p>\n"
  nameWithType.vb: IEnumConnections.Next(Int32, CONNECTDATA(), IntPtr)
  fullName.vb: System.Runtime.InteropServices.ComTypes.IEnumConnections.Next(System.Int32, System.Runtime.InteropServices.ComTypes.CONNECTDATA(), System.IntPtr)
  name.vb: Next(Int32, CONNECTDATA(), IntPtr)
- uid: System.Runtime.InteropServices.ComTypes.IEnumConnections.Reset
  commentId: M:System.Runtime.InteropServices.ComTypes.IEnumConnections.Reset
  id: Reset
  parent: System.Runtime.InteropServices.ComTypes.IEnumConnections
  langs:
  - csharp
  - vb
  name: Reset()
  nameWithType: IEnumConnections.Reset()
  fullName: System.Runtime.InteropServices.ComTypes.IEnumConnections.Reset()
  type: Method
  source:
    remote:
      path: src/mscorlib/src/System/Runtime/InteropServices/ComTypes/IEnumConnections.cs
      branch: master
      repo: https://github.com/dotnet/coreclr.git
    id: Reset
    path: src/mscorlib/src/System/Runtime/InteropServices/ComTypes/IEnumConnections.cs
    startLine: 35
  assemblies:
  - System.Runtime.InteropServices
  namespace: System.Runtime.InteropServices.ComTypes
  summary: "\n<p>Resets the enumeration sequence to the beginning.</p>\n"
  syntax:
    content: void Reset()
    content.vb: Sub Reset
- uid: System.Runtime.InteropServices.ComTypes.IEnumConnections.Skip(System.Int32)
  commentId: M:System.Runtime.InteropServices.ComTypes.IEnumConnections.Skip(System.Int32)
  id: Skip(System.Int32)
  parent: System.Runtime.InteropServices.ComTypes.IEnumConnections
  langs:
  - csharp
  - vb
  name: Skip(Int32)
  nameWithType: IEnumConnections.Skip(Int32)
  fullName: System.Runtime.InteropServices.ComTypes.IEnumConnections.Skip(System.Int32)
  type: Method
  source:
    remote:
      path: src/mscorlib/src/System/Runtime/InteropServices/ComTypes/IEnumConnections.cs
      branch: master
      repo: https://github.com/dotnet/coreclr.git
    id: Skip
    path: src/mscorlib/src/System/Runtime/InteropServices/ComTypes/IEnumConnections.cs
    startLine: 33
  assemblies:
  - System.Runtime.InteropServices
  namespace: System.Runtime.InteropServices.ComTypes
  summary: "\n<p>Skips a specified number of items in the enumeration sequence.</p>\n"
  syntax:
    content: >-
      [PreserveSig]

      int Skip(int celt)
    content.vb: >-
      <PreserveSig>

      Function Skip(celt As Integer) As Integer
    parameters:
    - id: celt
      type: System.Int32
      description: "\n<p>The number of elements to skip in the enumeration. </p>\n"
    return:
      type: System.Int32
      description: "\n<p>\n<strong>S_OK</strong> if the number of elements skipped equals the <em>celt</em> parameter; otherwise, <strong>S_FALSE</strong>.</p>\n"
references:
- uid: System.Runtime.InteropServices.ComTypes
  commentId: N:System.Runtime.InteropServices.ComTypes
  isExternal: false
  name: System.Runtime.InteropServices.ComTypes
  nameWithType: System.Runtime.InteropServices.ComTypes
  fullName: System.Runtime.InteropServices.ComTypes
- uid: System.Runtime.InteropServices.ComTypes.IEnumConnections
  commentId: T:System.Runtime.InteropServices.ComTypes.IEnumConnections
  parent: System.Runtime.InteropServices.ComTypes
  isExternal: false
  name: IEnumConnections
  nameWithType: IEnumConnections
  fullName: System.Runtime.InteropServices.ComTypes.IEnumConnections
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: false
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Runtime.InteropServices.ComTypes.CONNECTDATA[]
  name: CONNECTDATA[]
  nameWithType: CONNECTDATA[]
  fullName: System.Runtime.InteropServices.ComTypes.CONNECTDATA[]
  nameWithType.vb: CONNECTDATA()
  fullname.vb: System.Runtime.InteropServices.ComTypes.CONNECTDATA()
  name.vb: CONNECTDATA()
  spec.csharp:
  - uid: System.Runtime.InteropServices.ComTypes.CONNECTDATA
    name: CONNECTDATA
    nameWithType: CONNECTDATA
    fullName: System.Runtime.InteropServices.ComTypes.CONNECTDATA
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  spec.vb:
  - uid: System.Runtime.InteropServices.ComTypes.CONNECTDATA
    name: CONNECTDATA
    nameWithType: CONNECTDATA
    fullName: System.Runtime.InteropServices.ComTypes.CONNECTDATA
  - name: ()
    nameWithType: ()
    fullName: ()
- uid: System.IntPtr
  commentId: T:System.IntPtr
  parent: System
  isExternal: false
  name: IntPtr
  nameWithType: IntPtr
  fullName: System.IntPtr
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
