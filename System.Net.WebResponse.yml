items:
- uid: System.Net.WebResponse
  commentId: T:System.Net.WebResponse
  id: WebResponse
  parent: System.Net
  children:
  - System.Net.WebResponse.#ctor
  - System.Net.WebResponse.ContentLength
  - System.Net.WebResponse.ContentType
  - System.Net.WebResponse.Dispose
  - System.Net.WebResponse.Dispose(System.Boolean)
  - System.Net.WebResponse.GetResponseStream
  - System.Net.WebResponse.Headers
  - System.Net.WebResponse.ResponseUri
  - System.Net.WebResponse.SupportsHeaders
  langs:
  - csharp
  - vb
  name: WebResponse
  fullName: System.Net.WebResponse
  type: Class
  source:
    remote:
      path: src/System.Net.Requests/ref/System.Net.Requests.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: WebResponse
    path: src/System.Net.Requests/ref/System.Net.Requests.cs
    startLine: 113
  assemblies:
  - System.Net.Requests
  namespace: System.Net
  summary: "\n<p>Provides a response from a Uniform Resource Identifier (URI). This is an <strong>abstract</strong> class.</p>\n"
  syntax:
    content: 'public abstract class WebResponse : IDisposable'
    content.vb: >-
      Public MustInherit Class WebResponse
          Implements IDisposable
  inheritance:
  - System.Object
  implements:
  - System.IDisposable
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  modifiers.csharp:
  - public
  - abstract
  - class
  modifiers.vb:
  - Public
  - MustInherit
  - Class
  nameWithType: WebResponse
- uid: System.Net.WebResponse.#ctor
  commentId: M:System.Net.WebResponse.#ctor
  id: '#ctor'
  parent: System.Net.WebResponse
  langs:
  - csharp
  - vb
  name: WebResponse()
  fullName: System.Net.WebResponse.WebResponse()
  type: Constructor
  source:
    remote:
      path: src/System.Net.Requests/ref/System.Net.Requests.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: .ctor
    path: src/System.Net.Requests/ref/System.Net.Requests.cs
    startLine: 115
  assemblies:
  - System.Net.Requests
  namespace: System.Net
  summary: "\n<p>Initializes a new instance of the <xref href=\"System.Net.WebResponse\" data-throw-if-not-resolved=\"false\"></xref> class.</p>\n"
  syntax:
    content: protected WebResponse()
    content.vb: Protected Sub New
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
  nameWithType: WebResponse.WebResponse()
- uid: System.Net.WebResponse.ContentLength
  commentId: P:System.Net.WebResponse.ContentLength
  id: ContentLength
  parent: System.Net.WebResponse
  langs:
  - csharp
  - vb
  name: ContentLength
  fullName: System.Net.WebResponse.ContentLength
  type: Property
  source:
    remote:
      path: src/System.Net.Requests/ref/System.Net.Requests.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: ContentLength
    path: src/System.Net.Requests/ref/System.Net.Requests.cs
    startLine: 116
  assemblies:
  - System.Net.Requests
  namespace: System.Net
  summary: "\n<p>When overridden in a descendant class, gets or sets the content length of data being received.</p>\n"
  syntax:
    content: public abstract long ContentLength { get; }
    content.vb: Public MustOverride ReadOnly Property ContentLength As Long
    parameters: []
    return:
      type: System.Int64
      description: "\n<p>The number of bytes returned from the Internet resource.</p>\n"
  exceptions:
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "\n<p>Any attempt is made to get or set the property, when the property is not overridden in a descendant class. </p>\n"
  seealso:
  - type: System.Net.HttpWebResponse.ContentLength
    commentId: P:System.Net.HttpWebResponse.ContentLength
  modifiers.csharp:
  - public
  - abstract
  - get
  modifiers.vb:
  - Public
  - MustOverride
  - ReadOnly
  nameWithType: WebResponse.ContentLength
- uid: System.Net.WebResponse.ContentType
  commentId: P:System.Net.WebResponse.ContentType
  id: ContentType
  parent: System.Net.WebResponse
  langs:
  - csharp
  - vb
  name: ContentType
  fullName: System.Net.WebResponse.ContentType
  type: Property
  source:
    remote:
      path: src/System.Net.Requests/ref/System.Net.Requests.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: ContentType
    path: src/System.Net.Requests/ref/System.Net.Requests.cs
    startLine: 117
  assemblies:
  - System.Net.Requests
  namespace: System.Net
  summary: "\n<p>When overridden in a derived class, gets or sets the content type of the data being received.</p>\n"
  syntax:
    content: public abstract string ContentType { get; }
    content.vb: Public MustOverride ReadOnly Property ContentType As String
    parameters: []
    return:
      type: System.String
      description: "\n<p>A string that contains the content type of the response.</p>\n"
  exceptions:
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "\n<p>Any attempt is made to get or set the property, when the property is not overridden in a descendant class. </p>\n"
  seealso:
  - type: System.Net.HttpWebResponse.ContentType
    commentId: P:System.Net.HttpWebResponse.ContentType
  modifiers.csharp:
  - public
  - abstract
  - get
  modifiers.vb:
  - Public
  - MustOverride
  - ReadOnly
  nameWithType: WebResponse.ContentType
- uid: System.Net.WebResponse.Headers
  commentId: P:System.Net.WebResponse.Headers
  id: Headers
  parent: System.Net.WebResponse
  langs:
  - csharp
  - vb
  name: Headers
  fullName: System.Net.WebResponse.Headers
  type: Property
  source:
    remote:
      path: src/System.Net.Requests/ref/System.Net.Requests.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: Headers
    path: src/System.Net.Requests/ref/System.Net.Requests.cs
    startLine: 118
  assemblies:
  - System.Net.Requests
  namespace: System.Net
  summary: "\n<p>When overridden in a derived class, gets a collection of header name-value pairs associated with this request.</p>\n"
  syntax:
    content: public virtual WebHeaderCollection Headers { get; }
    content.vb: Public Overridable ReadOnly Property Headers As WebHeaderCollection
    parameters: []
    return:
      type: System.Net.WebHeaderCollection
      description: "\n<p>An instance of the <xref href=\"System.Net.WebHeaderCollection\" data-throw-if-not-resolved=\"false\"></xref> class that contains header values associated with this response.</p>\n"
  exceptions:
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "\n<p>Any attempt is made to get or set the property, when the property is not overridden in a descendant class. </p>\n"
  seealso:
  - type: System.Net.WebHeaderCollection
    commentId: T:System.Net.WebHeaderCollection
  - type: System.Net.HttpWebResponse.Headers
    commentId: P:System.Net.HttpWebResponse.Headers
  modifiers.csharp:
  - public
  - virtual
  - get
  modifiers.vb:
  - Public
  - Overridable
  - ReadOnly
  nameWithType: WebResponse.Headers
- uid: System.Net.WebResponse.ResponseUri
  commentId: P:System.Net.WebResponse.ResponseUri
  id: ResponseUri
  parent: System.Net.WebResponse
  langs:
  - csharp
  - vb
  name: ResponseUri
  fullName: System.Net.WebResponse.ResponseUri
  type: Property
  source:
    remote:
      path: src/System.Net.Requests/ref/System.Net.Requests.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: ResponseUri
    path: src/System.Net.Requests/ref/System.Net.Requests.cs
    startLine: 119
  assemblies:
  - System.Net.Requests
  namespace: System.Net
  summary: "\n<p>When overridden in a derived class, gets the URI of the Internet resource that actually responded to the request.</p>\n"
  syntax:
    content: public abstract Uri ResponseUri { get; }
    content.vb: Public MustOverride ReadOnly Property ResponseUri As Uri
    parameters: []
    return:
      type: System.Uri
      description: "\n<p>An instance of the <xref href=\"System.Uri\" data-throw-if-not-resolved=\"false\"></xref> class that contains the URI of the Internet resource that actually responded to the request.</p>\n"
  exceptions:
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "\n<p>Any attempt is made to get or set the property, when the property is not overridden in a descendant class. </p>\n"
  modifiers.csharp:
  - public
  - abstract
  - get
  modifiers.vb:
  - Public
  - MustOverride
  - ReadOnly
  nameWithType: WebResponse.ResponseUri
- uid: System.Net.WebResponse.SupportsHeaders
  commentId: P:System.Net.WebResponse.SupportsHeaders
  id: SupportsHeaders
  parent: System.Net.WebResponse
  langs:
  - csharp
  - vb
  name: SupportsHeaders
  fullName: System.Net.WebResponse.SupportsHeaders
  type: Property
  source:
    remote:
      path: src/System.Net.Requests/ref/System.Net.Requests.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: SupportsHeaders
    path: src/System.Net.Requests/ref/System.Net.Requests.cs
    startLine: 120
  assemblies:
  - System.Net.Requests
  namespace: System.Net
  summary: "\n<p>Gets a value that indicates if headers are supported.</p>\n"
  syntax:
    content: public virtual bool SupportsHeaders { get; }
    content.vb: Public Overridable ReadOnly Property SupportsHeaders As Boolean
    parameters: []
    return:
      type: System.Boolean
      description: "\n<p>Returns <xref href=\"System.Boolean\" data-throw-if-not-resolved=\"false\"></xref>.</p>\n<p>\n<strong>true</strong> if headers are supported; otherwise, <strong>false</strong>.</p>\n"
  modifiers.csharp:
  - public
  - virtual
  - get
  modifiers.vb:
  - Public
  - Overridable
  - ReadOnly
  nameWithType: WebResponse.SupportsHeaders
- uid: System.Net.WebResponse.Dispose
  commentId: M:System.Net.WebResponse.Dispose
  id: Dispose
  parent: System.Net.WebResponse
  langs:
  - csharp
  - vb
  name: Dispose()
  fullName: System.Net.WebResponse.Dispose()
  type: Method
  source:
    remote:
      path: src/System.Net.Requests/ref/System.Net.Requests.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: Dispose
    path: src/System.Net.Requests/ref/System.Net.Requests.cs
    startLine: 121
  assemblies:
  - System.Net.Requests
  namespace: System.Net
  summary: "\n<p>Releases the unmanaged resources used by the <xref href=\"System.Net.WebResponse\" data-throw-if-not-resolved=\"false\"></xref> object.</p>\n"
  syntax:
    content: public void Dispose()
    content.vb: Public Sub Dispose
  implements:
  - System.IDisposable.Dispose
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  nameWithType: WebResponse.Dispose()
- uid: System.Net.WebResponse.Dispose(System.Boolean)
  commentId: M:System.Net.WebResponse.Dispose(System.Boolean)
  id: Dispose(System.Boolean)
  parent: System.Net.WebResponse
  langs:
  - csharp
  - vb
  name: Dispose(Boolean)
  fullName: System.Net.WebResponse.Dispose(System.Boolean)
  type: Method
  source:
    remote:
      path: src/System.Net.Requests/ref/System.Net.Requests.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: Dispose
    path: src/System.Net.Requests/ref/System.Net.Requests.cs
    startLine: 122
  assemblies:
  - System.Net.Requests
  namespace: System.Net
  summary: "\n<p>Releases the unmanaged resources used by the <xref href=\"System.Net.WebResponse\" data-throw-if-not-resolved=\"false\"></xref> object, and optionally disposes of the managed resources.</p>\n"
  syntax:
    content: protected virtual void Dispose(bool disposing)
    content.vb: Protected Overridable Sub Dispose(disposing As Boolean)
    parameters:
    - id: disposing
      type: System.Boolean
      description: "\n<p>\n<strong>true</strong> to release both managed and unmanaged resources; <strong>false</strong> to releases only unmanaged resources. </p>\n"
  modifiers.csharp:
  - protected
  - virtual
  modifiers.vb:
  - Protected
  - Overridable
  nameWithType: WebResponse.Dispose(Boolean)
- uid: System.Net.WebResponse.GetResponseStream
  commentId: M:System.Net.WebResponse.GetResponseStream
  id: GetResponseStream
  parent: System.Net.WebResponse
  langs:
  - csharp
  - vb
  name: GetResponseStream()
  fullName: System.Net.WebResponse.GetResponseStream()
  type: Method
  source:
    remote:
      path: src/System.Net.Requests/ref/System.Net.Requests.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: GetResponseStream
    path: src/System.Net.Requests/ref/System.Net.Requests.cs
    startLine: 123
  assemblies:
  - System.Net.Requests
  namespace: System.Net
  summary: "\n<p>When overridden in a descendant class, returns the data stream from the Internet resource.</p>\n"
  syntax:
    content: public abstract Stream GetResponseStream()
    content.vb: Public MustOverride Function GetResponseStream As Stream
    return:
      type: System.IO.Stream
      description: "\n<p>An instance of the <xref href=\"System.IO.Stream\" data-throw-if-not-resolved=\"false\"></xref> class for reading data from the Internet resource.</p>\n"
  exceptions:
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "\n<p>Any attempt is made to access the method, when the method is not overridden in a descendant class. </p>\n"
  modifiers.csharp:
  - public
  - abstract
  modifiers.vb:
  - Public
  - MustOverride
  nameWithType: WebResponse.GetResponseStream()
references:
- uid: System.Net
  isExternal: false
  name: System.Net
  fullName: System.Net
  commentId: N:System.Net
  nameWithType: System.Net
- uid: System.Object
  parent: System
  isExternal: false
  name: Object
  fullName: System.Object
  commentId: T:System.Object
  nameWithType: Object
- uid: System.IDisposable
  parent: System
  isExternal: false
  name: IDisposable
  fullName: System.IDisposable
  commentId: T:System.IDisposable
  nameWithType: IDisposable
- uid: System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  commentId: M:System.Object.ToString
  nameWithType: Object.ToString()
- uid: System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
  commentId: M:System.Object.Equals(System.Object)
  nameWithType: Object.Equals(Object)
- uid: System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
  commentId: M:System.Object.Equals(System.Object,System.Object)
  nameWithType: Object.Equals(Object, Object)
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
- uid: System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  commentId: M:System.Object.GetHashCode
  nameWithType: Object.GetHashCode()
- uid: System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  commentId: M:System.Object.GetType
  nameWithType: Object.GetType()
- uid: System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  commentId: M:System.Object.MemberwiseClone
  nameWithType: Object.MemberwiseClone()
- uid: System
  isExternal: false
  name: System
  fullName: System
  commentId: N:System
  nameWithType: System
- uid: System.Int64
  parent: System
  isExternal: false
  name: Int64
  fullName: System.Int64
  commentId: T:System.Int64
  nameWithType: Int64
- uid: System.String
  parent: System
  isExternal: false
  name: String
  fullName: System.String
  commentId: T:System.String
  nameWithType: String
- uid: System.Net.WebHeaderCollection
  isExternal: false
  name: WebHeaderCollection
  fullName: System.Net.WebHeaderCollection
  commentId: T:System.Net.WebHeaderCollection
  nameWithType: WebHeaderCollection
- uid: System.Uri
  parent: System
  isExternal: false
  name: Uri
  fullName: System.Uri
  commentId: T:System.Uri
  nameWithType: Uri
- uid: System.Boolean
  parent: System
  isExternal: false
  name: Boolean
  fullName: System.Boolean
  commentId: T:System.Boolean
  nameWithType: Boolean
- uid: System.IDisposable.Dispose
  parent: System.IDisposable
  isExternal: false
  name: Dispose()
  fullName: System.IDisposable.Dispose()
  spec.csharp:
  - uid: System.IDisposable.Dispose
    name: Dispose
    fullName: System.IDisposable.Dispose
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.IDisposable.Dispose
    name: Dispose
    fullName: System.IDisposable.Dispose
  - name: (
    fullName: (
  - name: )
    fullName: )
  commentId: M:System.IDisposable.Dispose
  nameWithType: IDisposable.Dispose()
- uid: System.IO.Stream
  parent: System.IO
  isExternal: false
  name: Stream
  fullName: System.IO.Stream
  commentId: T:System.IO.Stream
  nameWithType: Stream
- uid: System.IO
  isExternal: false
  name: System.IO
  fullName: System.IO
  commentId: N:System.IO
  nameWithType: System.IO
- uid: System.NotSupportedException
  parent: System
  isExternal: false
  name: NotSupportedException
  fullName: System.NotSupportedException
  nameWithType: NotSupportedException
  commentId: T:System.NotSupportedException
