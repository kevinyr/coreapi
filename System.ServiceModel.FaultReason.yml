### YamlMime:ManagedReference
items:
- uid: System.ServiceModel.FaultReason
  commentId: T:System.ServiceModel.FaultReason
  id: FaultReason
  parent: System.ServiceModel
  children:
  - System.ServiceModel.FaultReason.#ctor(System.Collections.Generic.IEnumerable{System.ServiceModel.FaultReasonText})
  - System.ServiceModel.FaultReason.#ctor(System.ServiceModel.FaultReasonText)
  - System.ServiceModel.FaultReason.#ctor(System.String)
  - System.ServiceModel.FaultReason.GetMatchingTranslation
  - System.ServiceModel.FaultReason.GetMatchingTranslation(System.Globalization.CultureInfo)
  - System.ServiceModel.FaultReason.ToString
  langs:
  - csharp
  - vb
  name: FaultReason
  nameWithType: FaultReason
  fullName: System.ServiceModel.FaultReason
  type: Class
  source:
    remote:
      path: src/System.Private.ServiceModel/src/System/ServiceModel/FaultReason.cs
      branch: master
      repo: https://github.com/dotnet/wcf.git
    id: FaultReason
    path: src/System.Private.ServiceModel/src/System/ServiceModel/FaultReason.cs
    startLine: 11
  assemblies:
  - System.ServiceModel.Primitives
  namespace: System.ServiceModel
  summary: "\n<p>Provides a text description of a SOAP fault. </p>\n"
  syntax:
    content: public class FaultReason
    content.vb: Public Class FaultReason
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: System.ServiceModel.FaultReason.#ctor(System.Collections.Generic.IEnumerable{System.ServiceModel.FaultReasonText})
  commentId: M:System.ServiceModel.FaultReason.#ctor(System.Collections.Generic.IEnumerable{System.ServiceModel.FaultReasonText})
  id: '#ctor(System.Collections.Generic.IEnumerable{System.ServiceModel.FaultReasonText})'
  parent: System.ServiceModel.FaultReason
  langs:
  - csharp
  - vb
  name: FaultReason(IEnumerable<FaultReasonText>)
  nameWithType: FaultReason.FaultReason(IEnumerable<FaultReasonText>)
  fullName: System.ServiceModel.FaultReason.FaultReason(System.Collections.Generic.IEnumerable<System.ServiceModel.FaultReasonText>)
  type: Constructor
  source:
    remote:
      path: src/System.Private.ServiceModel/src/System/ServiceModel/FaultReason.cs
      branch: master
      repo: https://github.com/dotnet/wcf.git
    id: .ctor
    path: src/System.Private.ServiceModel/src/System/ServiceModel/FaultReason.cs
    startLine: 41
  assemblies:
  - System.ServiceModel.Primitives
  namespace: System.ServiceModel
  summary: "\n<p>Initializes a new instance of the <xref href=\"System.ServiceModel.FaultReason\" data-throw-if-not-resolved=\"false\"></xref> class using the specified list of fault translations. </p>\n"
  syntax:
    content: public FaultReason(IEnumerable<FaultReasonText> translations)
    content.vb: Public Sub New(translations As IEnumerable(Of FaultReasonText))
    parameters:
    - id: translations
      type: System.Collections.Generic.IEnumerable{System.ServiceModel.FaultReasonText}
      description: "\n<p>A list of <xref href=\"System.ServiceModel.FaultReasonText\" data-throw-if-not-resolved=\"false\"></xref> objects; each object describes the fault in a specific language. </p>\n"
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "\n<p>\n<em>translations</em> is <strong>null</strong>. </p>\n"
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "\n<p>\n<em>translations</em> is empty or one or more items is <strong>null</strong>. </p>\n"
  nameWithType.vb: FaultReason.FaultReason(IEnumerable(Of FaultReasonText))
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: System.ServiceModel.FaultReason.FaultReason(System.Collections.Generic.IEnumerable(Of System.ServiceModel.FaultReasonText))
  name.vb: FaultReason(IEnumerable(Of FaultReasonText))
- uid: System.ServiceModel.FaultReason.#ctor(System.ServiceModel.FaultReasonText)
  commentId: M:System.ServiceModel.FaultReason.#ctor(System.ServiceModel.FaultReasonText)
  id: '#ctor(System.ServiceModel.FaultReasonText)'
  parent: System.ServiceModel.FaultReason
  langs:
  - csharp
  - vb
  name: FaultReason(FaultReasonText)
  nameWithType: FaultReason.FaultReason(FaultReasonText)
  fullName: System.ServiceModel.FaultReason.FaultReason(System.ServiceModel.FaultReasonText)
  type: Constructor
  source:
    remote:
      path: src/System.Private.ServiceModel/src/System/ServiceModel/FaultReason.cs
      branch: master
      repo: https://github.com/dotnet/wcf.git
    id: .ctor
    path: src/System.Private.ServiceModel/src/System/ServiceModel/FaultReason.cs
    startLine: 15
  assemblies:
  - System.ServiceModel.Primitives
  namespace: System.ServiceModel
  summary: "\n<p>Initializes a new instance of the <xref href=\"System.ServiceModel.FaultReason\" data-throw-if-not-resolved=\"false\"></xref> class using the specified text element that describes the fault in a specific language. </p>\n"
  syntax:
    content: public FaultReason(FaultReasonText translation)
    content.vb: Public Sub New(translation As FaultReasonText)
    parameters:
    - id: translation
      type: System.ServiceModel.FaultReasonText
      description: "\n<p>An array of <xref href=\"System.ServiceModel.FaultReasonText\" data-throw-if-not-resolved=\"false\"></xref> objects that correspond to fault descriptions in different languages. </p>\n"
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: System.ServiceModel.FaultReason.#ctor(System.String)
  commentId: M:System.ServiceModel.FaultReason.#ctor(System.String)
  id: '#ctor(System.String)'
  parent: System.ServiceModel.FaultReason
  langs:
  - csharp
  - vb
  name: FaultReason(String)
  nameWithType: FaultReason.FaultReason(String)
  fullName: System.ServiceModel.FaultReason.FaultReason(System.String)
  type: Constructor
  source:
    remote:
      path: src/System.Private.ServiceModel/src/System/ServiceModel/FaultReason.cs
      branch: master
      repo: https://github.com/dotnet/wcf.git
    id: .ctor
    path: src/System.Private.ServiceModel/src/System/ServiceModel/FaultReason.cs
    startLine: 23
  assemblies:
  - System.ServiceModel.Primitives
  namespace: System.ServiceModel
  summary: "\n<p>Initializes a new instance of the <xref href=\"System.ServiceModel.FaultReason\" data-throw-if-not-resolved=\"false\"></xref> class using the specified fault description. </p>\n"
  syntax:
    content: public FaultReason(string text)
    content.vb: Public Sub New(text As String)
    parameters:
    - id: text
      type: System.String
      description: "\n<p>A description of the reason the fault occurred. </p>\n"
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: System.ServiceModel.FaultReason.GetMatchingTranslation
  commentId: M:System.ServiceModel.FaultReason.GetMatchingTranslation
  id: GetMatchingTranslation
  parent: System.ServiceModel.FaultReason
  langs:
  - csharp
  - vb
  name: GetMatchingTranslation()
  nameWithType: FaultReason.GetMatchingTranslation()
  fullName: System.ServiceModel.FaultReason.GetMatchingTranslation()
  type: Method
  source:
    remote:
      path: src/System.Private.ServiceModel/src/System/ServiceModel/FaultReason.cs
      branch: master
      repo: https://github.com/dotnet/wcf.git
    id: GetMatchingTranslation
    path: src/System.Private.ServiceModel/src/System/ServiceModel/FaultReason.cs
    startLine: 72
  assemblies:
  - System.ServiceModel.Primitives
  namespace: System.ServiceModel
  summary: "\n<p>Gets the fault description in the language used by the current thread. </p>\n"
  syntax:
    content: public FaultReasonText GetMatchingTranslation()
    content.vb: Public Function GetMatchingTranslation As FaultReasonText
    return:
      type: System.ServiceModel.FaultReasonText
      description: "\n<p>A <xref href=\"System.ServiceModel.FaultReasonText\" data-throw-if-not-resolved=\"false\"></xref> object that contains the fault description. </p>\n"
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: System.ServiceModel.FaultReason.GetMatchingTranslation(System.Globalization.CultureInfo)
  commentId: M:System.ServiceModel.FaultReason.GetMatchingTranslation(System.Globalization.CultureInfo)
  id: GetMatchingTranslation(System.Globalization.CultureInfo)
  parent: System.ServiceModel.FaultReason
  langs:
  - csharp
  - vb
  name: GetMatchingTranslation(CultureInfo)
  nameWithType: FaultReason.GetMatchingTranslation(CultureInfo)
  fullName: System.ServiceModel.FaultReason.GetMatchingTranslation(System.Globalization.CultureInfo)
  type: Method
  source:
    remote:
      path: src/System.Private.ServiceModel/src/System/ServiceModel/FaultReason.cs
      branch: master
      repo: https://github.com/dotnet/wcf.git
    id: GetMatchingTranslation
    path: src/System.Private.ServiceModel/src/System/ServiceModel/FaultReason.cs
    startLine: 77
  assemblies:
  - System.ServiceModel.Primitives
  namespace: System.ServiceModel
  summary: "\n<p>Gets the fault description in the specified language. </p>\n"
  syntax:
    content: public FaultReasonText GetMatchingTranslation(CultureInfo cultureInfo)
    content.vb: Public Function GetMatchingTranslation(cultureInfo As CultureInfo) As FaultReasonText
    parameters:
    - id: cultureInfo
      type: System.Globalization.CultureInfo
      description: "\n<p>A <xref href=\"System.Globalization.CultureInfo\" data-throw-if-not-resolved=\"false\"></xref> object that specifies the language of the fault description. </p>\n"
    return:
      type: System.ServiceModel.FaultReasonText
      description: "\n<p>The fault text in the specified language.</p>\n"
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "\n<p>The <xref href=\"System.Globalization.CultureInfo\" data-throw-if-not-resolved=\"false\"></xref> is <strong>null</strong>.</p>\n"
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: System.ServiceModel.FaultReason.ToString
  commentId: M:System.ServiceModel.FaultReason.ToString
  id: ToString
  parent: System.ServiceModel.FaultReason
  langs:
  - csharp
  - vb
  name: ToString()
  nameWithType: FaultReason.ToString()
  fullName: System.ServiceModel.FaultReason.ToString()
  type: Method
  source:
    remote:
      path: src/System.Private.ServiceModel/src/System/ServiceModel/FaultReason.cs
      branch: master
      repo: https://github.com/dotnet/wcf.git
    id: ToString
    path: src/System.Private.ServiceModel/src/System/ServiceModel/FaultReason.cs
    startLine: 124
  assemblies:
  - System.ServiceModel.Primitives
  namespace: System.ServiceModel
  summary: "\n<p>Returns the fault reason as a string.</p>\n"
  syntax:
    content: public override string ToString()
    content.vb: Public Overrides Function ToString As String
    return:
      type: System.String
      description: "\n<p>A string containing the reason for the fault.</p>\n"
  overridden: System.Object.ToString
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
references:
- uid: System.ServiceModel
  commentId: N:System.ServiceModel
  isExternal: false
  name: System.ServiceModel
  nameWithType: System.ServiceModel
  fullName: System.ServiceModel
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: false
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: System.Collections.Generic.IEnumerable{System.ServiceModel.FaultReasonText}
  commentId: T:System.Collections.Generic.IEnumerable{System.ServiceModel.FaultReasonText}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IEnumerable`1
  name: IEnumerable<FaultReasonText>
  nameWithType: IEnumerable<FaultReasonText>
  fullName: System.Collections.Generic.IEnumerable<System.ServiceModel.FaultReasonText>
  nameWithType.vb: IEnumerable(Of FaultReasonText)
  fullname.vb: System.Collections.Generic.IEnumerable(Of System.ServiceModel.FaultReasonText)
  name.vb: IEnumerable(Of FaultReasonText)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.ServiceModel.FaultReasonText
    name: FaultReasonText
    nameWithType: FaultReasonText
    fullName: System.ServiceModel.FaultReasonText
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.ServiceModel.FaultReasonText
    name: FaultReasonText
    nameWithType: FaultReasonText
    fullName: System.ServiceModel.FaultReasonText
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.IEnumerable`1
  commentId: T:System.Collections.Generic.IEnumerable`1
  isExternal: false
  name: IEnumerable<T>
  nameWithType: IEnumerable<T>
  fullName: System.Collections.Generic.IEnumerable<T>
  nameWithType.vb: IEnumerable(Of T)
  fullname.vb: System.Collections.Generic.IEnumerable(Of T)
  name.vb: IEnumerable(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: false
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
- uid: System.ServiceModel.FaultReasonText
  commentId: T:System.ServiceModel.FaultReasonText
  parent: System.ServiceModel
  isExternal: false
  name: FaultReasonText
  nameWithType: FaultReasonText
  fullName: System.ServiceModel.FaultReasonText
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: false
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Globalization.CultureInfo
  commentId: T:System.Globalization.CultureInfo
  parent: System.Globalization
  isExternal: false
  name: CultureInfo
  nameWithType: CultureInfo
  fullName: System.Globalization.CultureInfo
- uid: System.Globalization
  commentId: N:System.Globalization
  isExternal: false
  name: System.Globalization
  nameWithType: System.Globalization
  fullName: System.Globalization
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.ArgumentNullException
  commentId: T:System.ArgumentNullException
  isExternal: false
  name: ArgumentNullException
  nameWithType: ArgumentNullException
  fullName: System.ArgumentNullException
- uid: System.ArgumentException
  commentId: T:System.ArgumentException
  parent: System
  isExternal: false
  name: ArgumentException
  nameWithType: ArgumentException
  fullName: System.ArgumentException
