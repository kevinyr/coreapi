### YamlMime:ManagedReference
items:
- uid: System.ServiceModel.Channels.BodyWriter
  commentId: T:System.ServiceModel.Channels.BodyWriter
  id: BodyWriter
  parent: System.ServiceModel.Channels
  children:
  - System.ServiceModel.Channels.BodyWriter.#ctor(System.Boolean)
  - System.ServiceModel.Channels.BodyWriter.CreateBufferedCopy(System.Int32)
  - System.ServiceModel.Channels.BodyWriter.IsBuffered
  - System.ServiceModel.Channels.BodyWriter.OnCreateBufferedCopy(System.Int32)
  - System.ServiceModel.Channels.BodyWriter.OnWriteBodyContents(System.Xml.XmlDictionaryWriter)
  - System.ServiceModel.Channels.BodyWriter.WriteBodyContents(System.Xml.XmlDictionaryWriter)
  langs:
  - csharp
  - vb
  name: BodyWriter
  nameWithType: BodyWriter
  fullName: System.ServiceModel.Channels.BodyWriter
  type: Class
  source:
    remote:
      path: src/System.ServiceModel.Primitives/ref/System.ServiceModel.Primitives.cs
      branch: master
      repo: https://github.com/dotnet/wcf.git
    id: BodyWriter
    path: src/System.ServiceModel.Primitives/ref/System.ServiceModel.Primitives.cs
    startLine: 658
  assemblies:
  - System.ServiceModel.Primitives
  namespace: System.ServiceModel.Channels
  summary: "\n<p>Represents the writer of the message body.</p>\n"
  syntax:
    content: public abstract class BodyWriter
    content.vb: Public MustInherit Class BodyWriter
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  modifiers.csharp:
  - public
  - abstract
  - class
  modifiers.vb:
  - Public
  - MustInherit
  - Class
- uid: System.ServiceModel.Channels.BodyWriter.#ctor(System.Boolean)
  commentId: M:System.ServiceModel.Channels.BodyWriter.#ctor(System.Boolean)
  id: '#ctor(System.Boolean)'
  parent: System.ServiceModel.Channels.BodyWriter
  langs:
  - csharp
  - vb
  name: BodyWriter(Boolean)
  nameWithType: BodyWriter.BodyWriter(Boolean)
  fullName: System.ServiceModel.Channels.BodyWriter.BodyWriter(System.Boolean)
  type: Constructor
  source:
    remote:
      path: src/System.ServiceModel.Primitives/ref/System.ServiceModel.Primitives.cs
      branch: master
      repo: https://github.com/dotnet/wcf.git
    id: .ctor
    path: src/System.ServiceModel.Primitives/ref/System.ServiceModel.Primitives.cs
    startLine: 660
  assemblies:
  - System.ServiceModel.Primitives
  namespace: System.ServiceModel.Channels
  summary: "\n<p>Initializes a new instance of the <xref href=\"System.ServiceModel.Channels.BodyWriter\" data-throw-if-not-resolved=\"false\"></xref> class that explicitly indicates whether to buffer.</p>\n"
  syntax:
    content: protected BodyWriter(bool isBuffered)
    content.vb: Protected Sub New(isBuffered As Boolean)
    parameters:
    - id: isBuffered
      type: System.Boolean
      description: "\n<p>\n<strong>true</strong> if the body writer can be called multiple times; otherwise <strong>false</strong>.</p>\n"
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: System.ServiceModel.Channels.BodyWriter.IsBuffered
  commentId: P:System.ServiceModel.Channels.BodyWriter.IsBuffered
  id: IsBuffered
  parent: System.ServiceModel.Channels.BodyWriter
  langs:
  - csharp
  - vb
  name: IsBuffered
  nameWithType: BodyWriter.IsBuffered
  fullName: System.ServiceModel.Channels.BodyWriter.IsBuffered
  type: Property
  source:
    remote:
      path: src/System.ServiceModel.Primitives/ref/System.ServiceModel.Primitives.cs
      branch: master
      repo: https://github.com/dotnet/wcf.git
    id: IsBuffered
    path: src/System.ServiceModel.Primitives/ref/System.ServiceModel.Primitives.cs
    startLine: 661
  assemblies:
  - System.ServiceModel.Primitives
  namespace: System.ServiceModel.Channels
  summary: "\n<p>Gets a value that indicates whether the write method can be called multiple times.</p>\n"
  syntax:
    content: public bool IsBuffered { get; }
    content.vb: Public ReadOnly Property IsBuffered As Boolean
    parameters: []
    return:
      type: System.Boolean
      description: "\n<p>\n<strong>true</strong> if the body writer can be called multiple times; otherwise <strong>false</strong>.</p>\n"
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: System.ServiceModel.Channels.BodyWriter.CreateBufferedCopy(System.Int32)
  commentId: M:System.ServiceModel.Channels.BodyWriter.CreateBufferedCopy(System.Int32)
  id: CreateBufferedCopy(System.Int32)
  parent: System.ServiceModel.Channels.BodyWriter
  langs:
  - csharp
  - vb
  name: CreateBufferedCopy(Int32)
  nameWithType: BodyWriter.CreateBufferedCopy(Int32)
  fullName: System.ServiceModel.Channels.BodyWriter.CreateBufferedCopy(System.Int32)
  type: Method
  source:
    remote:
      path: src/System.ServiceModel.Primitives/ref/System.ServiceModel.Primitives.cs
      branch: master
      repo: https://github.com/dotnet/wcf.git
    id: CreateBufferedCopy
    path: src/System.ServiceModel.Primitives/ref/System.ServiceModel.Primitives.cs
    startLine: 662
  assemblies:
  - System.ServiceModel.Primitives
  namespace: System.ServiceModel.Channels
  summary: "\n<p>Creates a buffered copy of the body.</p>\n"
  syntax:
    content: public BodyWriter CreateBufferedCopy(int maxBufferSize)
    content.vb: Public Function CreateBufferedCopy(maxBufferSize As Integer) As BodyWriter
    parameters:
    - id: maxBufferSize
      type: System.Int32
      description: "\n<p>The maximum size of the buffer for the body.</p>\n"
    return:
      type: System.ServiceModel.Channels.BodyWriter
      description: "\n<p>A <xref href=\"System.ServiceModel.Channels.BodyWriter\" data-throw-if-not-resolved=\"false\"></xref> that contains a copy of this object.</p>\n"
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "\n<p>The <em>maxBufferSize</em> is less than zero.</p>\n"
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "\n<p>The body has already been written and cannot be written again, or the body writer is not buffered.</p>\n"
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: System.ServiceModel.Channels.BodyWriter.OnCreateBufferedCopy(System.Int32)
  commentId: M:System.ServiceModel.Channels.BodyWriter.OnCreateBufferedCopy(System.Int32)
  id: OnCreateBufferedCopy(System.Int32)
  parent: System.ServiceModel.Channels.BodyWriter
  langs:
  - csharp
  - vb
  name: OnCreateBufferedCopy(Int32)
  nameWithType: BodyWriter.OnCreateBufferedCopy(Int32)
  fullName: System.ServiceModel.Channels.BodyWriter.OnCreateBufferedCopy(System.Int32)
  type: Method
  source:
    remote:
      path: src/System.ServiceModel.Primitives/ref/System.ServiceModel.Primitives.cs
      branch: master
      repo: https://github.com/dotnet/wcf.git
    id: OnCreateBufferedCopy
    path: src/System.ServiceModel.Primitives/ref/System.ServiceModel.Primitives.cs
    startLine: 663
  assemblies:
  - System.ServiceModel.Primitives
  namespace: System.ServiceModel.Channels
  summary: "\n<p>Provides an extensibility point when the body contents are written.</p>\n"
  syntax:
    content: protected virtual BodyWriter OnCreateBufferedCopy(int maxBufferSize)
    content.vb: Protected Overridable Function OnCreateBufferedCopy(maxBufferSize As Integer) As BodyWriter
    parameters:
    - id: maxBufferSize
      type: System.Int32
      description: "\n<p>The maximum size of the buffer for the body.</p>\n"
    return:
      type: System.ServiceModel.Channels.BodyWriter
      description: "\n<p>The <xref href=\"System.ServiceModel.Channels.BodyWriter\" data-throw-if-not-resolved=\"false\"></xref> with the specified maximum buffer size.</p>\n"
  modifiers.csharp:
  - protected
  - virtual
  modifiers.vb:
  - Protected
  - Overridable
- uid: System.ServiceModel.Channels.BodyWriter.OnWriteBodyContents(System.Xml.XmlDictionaryWriter)
  commentId: M:System.ServiceModel.Channels.BodyWriter.OnWriteBodyContents(System.Xml.XmlDictionaryWriter)
  id: OnWriteBodyContents(System.Xml.XmlDictionaryWriter)
  parent: System.ServiceModel.Channels.BodyWriter
  langs:
  - csharp
  - vb
  name: OnWriteBodyContents(Xml.XmlDictionaryWriter)
  nameWithType: BodyWriter.OnWriteBodyContents(Xml.XmlDictionaryWriter)
  fullName: System.ServiceModel.Channels.BodyWriter.OnWriteBodyContents(System.Xml.XmlDictionaryWriter)
  type: Method
  source:
    remote:
      path: src/System.ServiceModel.Primitives/ref/System.ServiceModel.Primitives.cs
      branch: master
      repo: https://github.com/dotnet/wcf.git
    id: OnWriteBodyContents
    path: src/System.ServiceModel.Primitives/ref/System.ServiceModel.Primitives.cs
    startLine: 664
  assemblies:
  - System.ServiceModel.Primitives
  namespace: System.ServiceModel.Channels
  summary: "\n<p>When implemented, provides an extensibility point when the body contents are written.</p>\n"
  syntax:
    content: protected abstract void OnWriteBodyContents(Xml.XmlDictionaryWriter writer)
    content.vb: Protected MustOverride Sub OnWriteBodyContents(writer As Xml.XmlDictionaryWriter)
    parameters:
    - id: writer
      type: System.Xml.XmlDictionaryWriter
      description: "\n<p>The <xref href=\"System.Xml.XmlDictionaryWriter\" data-throw-if-not-resolved=\"false\"></xref> used to write out the message body.</p>\n"
  modifiers.csharp:
  - protected
  - abstract
  modifiers.vb:
  - Protected
  - MustOverride
- uid: System.ServiceModel.Channels.BodyWriter.WriteBodyContents(System.Xml.XmlDictionaryWriter)
  commentId: M:System.ServiceModel.Channels.BodyWriter.WriteBodyContents(System.Xml.XmlDictionaryWriter)
  id: WriteBodyContents(System.Xml.XmlDictionaryWriter)
  parent: System.ServiceModel.Channels.BodyWriter
  langs:
  - csharp
  - vb
  name: WriteBodyContents(Xml.XmlDictionaryWriter)
  nameWithType: BodyWriter.WriteBodyContents(Xml.XmlDictionaryWriter)
  fullName: System.ServiceModel.Channels.BodyWriter.WriteBodyContents(System.Xml.XmlDictionaryWriter)
  type: Method
  source:
    remote:
      path: src/System.ServiceModel.Primitives/ref/System.ServiceModel.Primitives.cs
      branch: master
      repo: https://github.com/dotnet/wcf.git
    id: WriteBodyContents
    path: src/System.ServiceModel.Primitives/ref/System.ServiceModel.Primitives.cs
    startLine: 665
  assemblies:
  - System.ServiceModel.Primitives
  namespace: System.ServiceModel.Channels
  summary: "\n<p>Writes out the contents of the message body.</p>\n"
  syntax:
    content: public void WriteBodyContents(Xml.XmlDictionaryWriter writer)
    content.vb: Public Sub WriteBodyContents(writer As Xml.XmlDictionaryWriter)
    parameters:
    - id: writer
      type: System.Xml.XmlDictionaryWriter
      description: "\n<p>The <xref href=\"System.Xml.XmlDictionaryWriter\" data-throw-if-not-resolved=\"false\"></xref> used to write out the message body.</p>\n"
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "\n<p>\n<em>writer</em> is <strong>null</strong>.</p>\n"
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
references:
- uid: System.ServiceModel.Channels
  commentId: N:System.ServiceModel.Channels
  isExternal: false
  name: System.ServiceModel.Channels
  nameWithType: System.ServiceModel.Channels
  fullName: System.ServiceModel.Channels
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: false
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: false
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: false
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.ServiceModel.Channels.BodyWriter
  commentId: T:System.ServiceModel.Channels.BodyWriter
  parent: System.ServiceModel.Channels
  isExternal: false
  name: BodyWriter
  nameWithType: BodyWriter
  fullName: System.ServiceModel.Channels.BodyWriter
- uid: System.Xml.XmlDictionaryWriter
  commentId: T:System.Xml.XmlDictionaryWriter
  parent: System.Xml
  isExternal: false
  name: XmlDictionaryWriter
  nameWithType: XmlDictionaryWriter
  fullName: System.Xml.XmlDictionaryWriter
- uid: System.Xml
  commentId: N:System.Xml
  isExternal: false
  name: System.Xml
  nameWithType: System.Xml
  fullName: System.Xml
- uid: System.ArgumentOutOfRangeException
  commentId: T:System.ArgumentOutOfRangeException
  isExternal: false
  name: ArgumentOutOfRangeException
  nameWithType: ArgumentOutOfRangeException
  fullName: System.ArgumentOutOfRangeException
- uid: System.InvalidOperationException
  commentId: T:System.InvalidOperationException
  parent: System
  isExternal: false
  name: InvalidOperationException
  nameWithType: InvalidOperationException
  fullName: System.InvalidOperationException
- uid: System.ArgumentNullException
  commentId: T:System.ArgumentNullException
  isExternal: false
  name: ArgumentNullException
  nameWithType: ArgumentNullException
  fullName: System.ArgumentNullException
