items:
- uid: System.ServiceModel.MessageSecurityOverTcp
  commentId: T:System.ServiceModel.MessageSecurityOverTcp
  id: MessageSecurityOverTcp
  parent: System.ServiceModel
  children:
  - System.ServiceModel.MessageSecurityOverTcp.#ctor
  - System.ServiceModel.MessageSecurityOverTcp.ClientCredentialType
  langs:
  - csharp
  - vb
  name: MessageSecurityOverTcp
  fullName: System.ServiceModel.MessageSecurityOverTcp
  type: Class
  source:
    remote:
      path: src/System.Private.ServiceModel/src/System/ServiceModel/MessageSecurityOverTcp.cs
      branch: master
      repo: https://github.com/dotnet/wcf.git
    id: MessageSecurityOverTcp
    path: src/System.Private.ServiceModel/src/System/ServiceModel/MessageSecurityOverTcp.cs
    startLine: 10
  assemblies:
  - System.ServiceModel.NetTcp
  namespace: System.ServiceModel
  summary: "\n<p>Configures the message-level security for a message sent using the TCP transport. </p>\n"
  syntax:
    content: public sealed class MessageSecurityOverTcp
    content.vb: Public NotInheritable Class MessageSecurityOverTcp
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  modifiers.csharp:
  - public
  - sealed
  - class
  modifiers.vb:
  - Public
  - NotInheritable
  - Class
  nameWithType: MessageSecurityOverTcp
- uid: System.ServiceModel.MessageSecurityOverTcp.#ctor
  commentId: M:System.ServiceModel.MessageSecurityOverTcp.#ctor
  id: '#ctor'
  parent: System.ServiceModel.MessageSecurityOverTcp
  langs:
  - csharp
  - vb
  name: MessageSecurityOverTcp()
  fullName: System.ServiceModel.MessageSecurityOverTcp.MessageSecurityOverTcp()
  type: Constructor
  source:
    remote:
      path: src/System.Private.ServiceModel/src/System/ServiceModel/MessageSecurityOverTcp.cs
      branch: master
      repo: https://github.com/dotnet/wcf.git
    id: .ctor
    path: src/System.Private.ServiceModel/src/System/ServiceModel/MessageSecurityOverTcp.cs
    startLine: 15
  assemblies:
  - System.ServiceModel.NetTcp
  namespace: System.ServiceModel
  summary: "\n<p>Initializes a new instance of the <xref href=\"System.ServiceModel.MessageSecurityOverTcp\" data-throw-if-not-resolved=\"false\"></xref> class.</p>\n"
  syntax:
    content: public MessageSecurityOverTcp()
    content.vb: Public Sub New
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  nameWithType: MessageSecurityOverTcp.MessageSecurityOverTcp()
- uid: System.ServiceModel.MessageSecurityOverTcp.ClientCredentialType
  commentId: P:System.ServiceModel.MessageSecurityOverTcp.ClientCredentialType
  id: ClientCredentialType
  parent: System.ServiceModel.MessageSecurityOverTcp
  langs:
  - csharp
  - vb
  name: ClientCredentialType
  fullName: System.ServiceModel.MessageSecurityOverTcp.ClientCredentialType
  type: Property
  source:
    remote:
      path: src/System.Private.ServiceModel/src/System/ServiceModel/MessageSecurityOverTcp.cs
      branch: master
      repo: https://github.com/dotnet/wcf.git
    id: ClientCredentialType
    path: src/System.Private.ServiceModel/src/System/ServiceModel/MessageSecurityOverTcp.cs
    startLine: 20
  assemblies:
  - System.ServiceModel.NetTcp
  namespace: System.ServiceModel
  summary: "\n<p>Specifies the type of client credential the client uses to authenticate itself to the service at the SOAP level. </p>\n"
  syntax:
    content: public MessageCredentialType ClientCredentialType { get; set; }
    content.vb: Public Property ClientCredentialType As MessageCredentialType
    parameters: []
    return:
      type: System.ServiceModel.MessageCredentialType
      description: "\n<p>A <xref href=\"System.ServiceModel.MessageCredentialType\" data-throw-if-not-resolved=\"false\"></xref>. The default is <xref href=\"System.ServiceModel.MessageCredentialType.Windows\" data-throw-if-not-resolved=\"false\"></xref>.</p>\n"
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "\n<p>The value of <xref href=\"System.ServiceModel.MessageSecurityOverTcp.ClientCredentialType\" data-throw-if-not-resolved=\"false\"></xref> is not a valid <xref href=\"System.ServiceModel.MessageCredentialType\" data-throw-if-not-resolved=\"false\"></xref>.</p>\n"
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
  nameWithType: MessageSecurityOverTcp.ClientCredentialType
references:
- uid: System.ServiceModel
  isExternal: false
  name: System.ServiceModel
  fullName: System.ServiceModel
  nameWithType: System.ServiceModel
  commentId: N:System.ServiceModel
- uid: System.Object
  parent: System
  isExternal: false
  name: Object
  fullName: System.Object
  nameWithType: Object
  commentId: T:System.Object
- uid: System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  nameWithType: Object.ToString()
  commentId: M:System.Object.ToString
- uid: System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
  nameWithType: Object.Equals(Object)
  commentId: M:System.Object.Equals(System.Object)
- uid: System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
  nameWithType: Object.Equals(Object, Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
  nameWithType: Object.ReferenceEquals(Object, Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
- uid: System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  nameWithType: Object.GetHashCode()
  commentId: M:System.Object.GetHashCode
- uid: System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  nameWithType: Object.GetType()
  commentId: M:System.Object.GetType
- uid: System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  nameWithType: Object.MemberwiseClone()
  commentId: M:System.Object.MemberwiseClone
- uid: System
  isExternal: false
  name: System
  fullName: System
  nameWithType: System
  commentId: N:System
- uid: System.ServiceModel.MessageCredentialType
  parent: System.ServiceModel
  isExternal: false
  name: MessageCredentialType
  fullName: System.ServiceModel.MessageCredentialType
  nameWithType: MessageCredentialType
  commentId: T:System.ServiceModel.MessageCredentialType
- uid: System.ArgumentOutOfRangeException
  isExternal: false
  name: ArgumentOutOfRangeException
  fullName: System.ArgumentOutOfRangeException
  nameWithType: ArgumentOutOfRangeException
  commentId: T:System.ArgumentOutOfRangeException
