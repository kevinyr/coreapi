### YamlMime:ManagedReference
items:
- uid: System.ServiceModel.ClientBase`1.BeginOperationDelegate
  commentId: T:System.ServiceModel.ClientBase`1.BeginOperationDelegate
  id: ClientBase`1.BeginOperationDelegate
  parent: System.ServiceModel
  children: []
  langs:
  - csharp
  - vb
  name: ClientBase<TChannel>.BeginOperationDelegate
  nameWithType: ClientBase<TChannel>.BeginOperationDelegate
  fullName: System.ServiceModel.ClientBase<TChannel>.BeginOperationDelegate
  type: Delegate
  source:
    remote:
      path: src/System.ServiceModel.Primitives/ref/System.ServiceModel.Primitives.cs
      branch: master
      repo: https://github.com/dotnet/wcf.git
    id: BeginOperationDelegate
    path: src/System.ServiceModel.Primitives/ref/System.ServiceModel.Primitives.cs
    startLine: 89
  assemblies:
  - System.ServiceModel.Primitives
  namespace: System.ServiceModel
  summary: "\n<p>A delegate that is used by <xref href=\"System.ServiceModel.ClientBase`1.InvokeAsync(System.ServiceModel.ClientBase{`0}.BeginOperationDelegate,System.Object[],System.ServiceModel.ClientBase{`0}.EndOperationDelegate,System.Threading.SendOrPostCallback,System.Object)\" data-throw-if-not-resolved=\"false\"></xref> for calling asynchronous operations on the client. </p>\n"
  syntax:
    content: protected delegate IAsyncResult BeginOperationDelegate(object[] inValues, AsyncCallback asyncCallback, object state);
    content.vb: Protected Delegate Function BeginOperationDelegate(inValues As Object(), asyncCallback As AsyncCallback, state As Object) As IAsyncResult
    parameters:
    - id: inValues
      type: System.Object[]
      description: "\n<p>The input values to the asynchronous call.</p>\n"
    - id: asyncCallback
      type: System.AsyncCallback
      description: "\n<p>Reference to the method to be called when the corresponding asynchronous operation completes.</p>\n"
    - id: state
      type: System.Object
      description: "\n<p>An <xref href=\"System.Object\" data-throw-if-not-resolved=\"false\"></xref> that lets the client distinguish between different asynchronous calls. It is made available to the client in the arguments parameter of the event completion callback.</p>\n"
    return:
      type: System.IAsyncResult
  extensionMethods:
  - System.Delegate.System.Reflection.RuntimeReflectionExtensions.GetMethodInfo
  nameWithType.vb: ClientBase(Of TChannel).BeginOperationDelegate
  modifiers.csharp:
  - protected
  - delegate
  modifiers.vb:
  - Protected
  - Delegate
  fullName.vb: System.ServiceModel.ClientBase(Of TChannel).BeginOperationDelegate
  name.vb: ClientBase(Of TChannel).BeginOperationDelegate
references:
- uid: System.ServiceModel
  commentId: N:System.ServiceModel
  isExternal: false
  name: System.ServiceModel
  nameWithType: System.ServiceModel
  fullName: System.ServiceModel
- uid: System.Delegate.System.Reflection.RuntimeReflectionExtensions.GetMethodInfo
  commentId: M:System.Reflection.RuntimeReflectionExtensions.GetMethodInfo(System.Delegate)
  parent: System.Reflection.RuntimeReflectionExtensions
  definition: System.Reflection.RuntimeReflectionExtensions.GetMethodInfo(System.Delegate)
  name: GetMethodInfo()
  nameWithType: RuntimeReflectionExtensions.GetMethodInfo()
  fullName: System.Reflection.RuntimeReflectionExtensions.GetMethodInfo()
  spec.csharp:
  - uid: System.Reflection.RuntimeReflectionExtensions.GetMethodInfo
    name: GetMethodInfo
    nameWithType: RuntimeReflectionExtensions.GetMethodInfo
    fullName: System.Reflection.RuntimeReflectionExtensions.GetMethodInfo
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Reflection.RuntimeReflectionExtensions.GetMethodInfo
    name: GetMethodInfo
    nameWithType: RuntimeReflectionExtensions.GetMethodInfo
    fullName: System.Reflection.RuntimeReflectionExtensions.GetMethodInfo
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object[]
  name: Object[]
  nameWithType: Object[]
  fullName: System.Object[]
  nameWithType.vb: Object()
  fullname.vb: System.Object()
  name.vb: Object()
  spec.csharp:
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  spec.vb:
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
- uid: System.AsyncCallback
  commentId: T:System.AsyncCallback
  parent: System
  isExternal: false
  name: AsyncCallback
  nameWithType: AsyncCallback
  fullName: System.AsyncCallback
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: false
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.IAsyncResult
  commentId: T:System.IAsyncResult
  parent: System
  isExternal: false
  name: IAsyncResult
  nameWithType: IAsyncResult
  fullName: System.IAsyncResult
- uid: System.Reflection.RuntimeReflectionExtensions.GetMethodInfo(System.Delegate)
  commentId: M:System.Reflection.RuntimeReflectionExtensions.GetMethodInfo(System.Delegate)
  isExternal: true
  name: GetMethodInfo(Delegate)
  nameWithType: RuntimeReflectionExtensions.GetMethodInfo(Delegate)
  fullName: System.Reflection.RuntimeReflectionExtensions.GetMethodInfo(System.Delegate)
  spec.csharp:
  - uid: System.Reflection.RuntimeReflectionExtensions.GetMethodInfo(System.Delegate)
    name: GetMethodInfo
    nameWithType: RuntimeReflectionExtensions.GetMethodInfo
    fullName: System.Reflection.RuntimeReflectionExtensions.GetMethodInfo
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Delegate
    name: Delegate
    nameWithType: Delegate
    fullName: System.Delegate
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Reflection.RuntimeReflectionExtensions.GetMethodInfo(System.Delegate)
    name: GetMethodInfo
    nameWithType: RuntimeReflectionExtensions.GetMethodInfo
    fullName: System.Reflection.RuntimeReflectionExtensions.GetMethodInfo
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Delegate
    name: Delegate
    nameWithType: Delegate
    fullName: System.Delegate
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Reflection.RuntimeReflectionExtensions
  commentId: T:System.Reflection.RuntimeReflectionExtensions
  parent: System.Reflection
  isExternal: false
  name: RuntimeReflectionExtensions
  nameWithType: RuntimeReflectionExtensions
  fullName: System.Reflection.RuntimeReflectionExtensions
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: System.Reflection
  commentId: N:System.Reflection
  isExternal: false
  name: System.Reflection
  nameWithType: System.Reflection
  fullName: System.Reflection
