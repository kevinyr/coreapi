### YamlMime:ManagedReference
items:
- uid: System.Xml.XPath.Extensions
  commentId: T:System.Xml.XPath.Extensions
  id: Extensions
  parent: System.Xml.XPath
  children:
  - System.Xml.XPath.Extensions.CreateNavigator(System.Xml.Linq.XNode)
  - System.Xml.XPath.Extensions.CreateNavigator(System.Xml.Linq.XNode,System.Xml.XmlNameTable)
  - System.Xml.XPath.Extensions.XPathEvaluate(System.Xml.Linq.XNode,System.String)
  - System.Xml.XPath.Extensions.XPathEvaluate(System.Xml.Linq.XNode,System.String,System.Xml.IXmlNamespaceResolver)
  - System.Xml.XPath.Extensions.XPathSelectElement(System.Xml.Linq.XNode,System.String)
  - System.Xml.XPath.Extensions.XPathSelectElement(System.Xml.Linq.XNode,System.String,System.Xml.IXmlNamespaceResolver)
  - System.Xml.XPath.Extensions.XPathSelectElements(System.Xml.Linq.XNode,System.String)
  - System.Xml.XPath.Extensions.XPathSelectElements(System.Xml.Linq.XNode,System.String,System.Xml.IXmlNamespaceResolver)
  langs:
  - csharp
  - vb
  name: Extensions
  nameWithType: Extensions
  fullName: System.Xml.XPath.Extensions
  type: Class
  source:
    remote:
      path: src/System.Xml.XPath.XDocument/ref/System.Xml.XPath.XDocument.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: Extensions
    path: src/System.Xml.XPath.XDocument/ref/System.Xml.XPath.XDocument.cs
    startLine: 10
  assemblies:
  - System.Xml.XPath.XDocument
  namespace: System.Xml.XPath
  summary: "\n<p>This class contains the LINQ to XML extension methods that enable you to evaluate XPath expressions.</p>\n"
  syntax:
    content: public static class Extensions
    content.vb: Public Module Extensions
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  modifiers.csharp:
  - public
  - static
  - class
  modifiers.vb:
  - Public
  - Module
- uid: System.Xml.XPath.Extensions.CreateNavigator(System.Xml.Linq.XNode)
  commentId: M:System.Xml.XPath.Extensions.CreateNavigator(System.Xml.Linq.XNode)
  id: CreateNavigator(System.Xml.Linq.XNode)
  isExtensionMethod: true
  parent: System.Xml.XPath.Extensions
  langs:
  - csharp
  - vb
  name: CreateNavigator(Linq.XNode)
  nameWithType: Extensions.CreateNavigator(Linq.XNode)
  fullName: System.Xml.XPath.Extensions.CreateNavigator(System.Xml.Linq.XNode)
  type: Method
  source:
    remote:
      path: src/System.Xml.XPath.XDocument/ref/System.Xml.XPath.XDocument.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: CreateNavigator
    path: src/System.Xml.XPath.XDocument/ref/System.Xml.XPath.XDocument.cs
    startLine: 12
  assemblies:
  - System.Xml.XPath.XDocument
  namespace: System.Xml.XPath
  summary: "\n<p>Creates an <xref href=\"System.Xml.XPath.XPathNavigator\" data-throw-if-not-resolved=\"false\"></xref> for an <xref href=\"System.Xml.Linq.XNode\" data-throw-if-not-resolved=\"false\"></xref>.</p>\n"
  syntax:
    content: public static XPathNavigator CreateNavigator(this Linq.XNode node)
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function CreateNavigator(node As Linq.XNode) As XPathNavigator
    parameters:
    - id: node
      type: System.Xml.Linq.XNode
      description: "\n<p>An <xref href=\"System.Xml.Linq.XNode\" data-throw-if-not-resolved=\"false\"></xref> that can process XPath queries.</p>\n"
    return:
      type: System.Xml.XPath.XPathNavigator
      description: "\n<p>An <xref href=\"System.Xml.XPath.XPathNavigator\" data-throw-if-not-resolved=\"false\"></xref> that can process XPath queries.</p>\n"
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: System.Xml.XPath.Extensions.CreateNavigator(System.Xml.Linq.XNode,System.Xml.XmlNameTable)
  commentId: M:System.Xml.XPath.Extensions.CreateNavigator(System.Xml.Linq.XNode,System.Xml.XmlNameTable)
  id: CreateNavigator(System.Xml.Linq.XNode,System.Xml.XmlNameTable)
  isExtensionMethod: true
  parent: System.Xml.XPath.Extensions
  langs:
  - csharp
  - vb
  name: CreateNavigator(Linq.XNode, XmlNameTable)
  nameWithType: Extensions.CreateNavigator(Linq.XNode, XmlNameTable)
  fullName: System.Xml.XPath.Extensions.CreateNavigator(System.Xml.Linq.XNode, System.Xml.XmlNameTable)
  type: Method
  source:
    remote:
      path: src/System.Xml.XPath.XDocument/ref/System.Xml.XPath.XDocument.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: CreateNavigator
    path: src/System.Xml.XPath.XDocument/ref/System.Xml.XPath.XDocument.cs
    startLine: 13
  assemblies:
  - System.Xml.XPath.XDocument
  namespace: System.Xml.XPath
  summary: "\n<p>Creates an <xref href=\"System.Xml.XPath.XPathNavigator\" data-throw-if-not-resolved=\"false\"></xref> for an <xref href=\"System.Xml.Linq.XNode\" data-throw-if-not-resolved=\"false\"></xref>. The <xref href=\"System.Xml.XmlNameTable\" data-throw-if-not-resolved=\"false\"></xref> enables more efficient XPath expression processing.</p>\n"
  syntax:
    content: public static XPathNavigator CreateNavigator(this Linq.XNode node, XmlNameTable nameTable)
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function CreateNavigator(node As Linq.XNode, nameTable As XmlNameTable) As XPathNavigator
    parameters:
    - id: node
      type: System.Xml.Linq.XNode
      description: "\n<p>An <xref href=\"System.Xml.Linq.XNode\" data-throw-if-not-resolved=\"false\"></xref> that can process an XPath query.</p>\n"
    - id: nameTable
      type: System.Xml.XmlNameTable
      description: "\n<p>A <xref href=\"System.Xml.XmlNameTable\" data-throw-if-not-resolved=\"false\"></xref> to be used by <xref href=\"System.Xml.XPath.XPathNavigator\" data-throw-if-not-resolved=\"false\"></xref>.</p>\n"
    return:
      type: System.Xml.XPath.XPathNavigator
      description: "\n<p>An <xref href=\"System.Xml.XPath.XPathNavigator\" data-throw-if-not-resolved=\"false\"></xref> that can process XPath queries.</p>\n"
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: System.Xml.XPath.Extensions.XPathEvaluate(System.Xml.Linq.XNode,System.String)
  commentId: M:System.Xml.XPath.Extensions.XPathEvaluate(System.Xml.Linq.XNode,System.String)
  id: XPathEvaluate(System.Xml.Linq.XNode,System.String)
  isExtensionMethod: true
  parent: System.Xml.XPath.Extensions
  langs:
  - csharp
  - vb
  name: XPathEvaluate(Linq.XNode, String)
  nameWithType: Extensions.XPathEvaluate(Linq.XNode, String)
  fullName: System.Xml.XPath.Extensions.XPathEvaluate(System.Xml.Linq.XNode, System.String)
  type: Method
  source:
    remote:
      path: src/System.Xml.XPath.XDocument/ref/System.Xml.XPath.XDocument.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: XPathEvaluate
    path: src/System.Xml.XPath.XDocument/ref/System.Xml.XPath.XDocument.cs
    startLine: 14
  assemblies:
  - System.Xml.XPath.XDocument
  namespace: System.Xml.XPath
  summary: "\n<p>Evaluates an XPath expression.</p>\n"
  syntax:
    content: public static object XPathEvaluate(this Linq.XNode node, string expression)
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function XPathEvaluate(node As Linq.XNode, expression As String) As Object
    parameters:
    - id: node
      type: System.Xml.Linq.XNode
      description: "\n<p>The <xref href=\"System.Xml.Linq.XNode\" data-throw-if-not-resolved=\"false\"></xref> on which to evaluate the XPath expression.</p>\n"
    - id: expression
      type: System.String
      description: "\n<p>A <xref href=\"System.String\" data-throw-if-not-resolved=\"false\"></xref> that contains an XPath expression.</p>\n"
    return:
      type: System.Object
      description: "\n<p>An object that can contain a <strong>bool</strong>, a <strong>double</strong>, a <strong>string</strong>, or an <xref href=\"System.Collections.Generic.IEnumerable`1\" data-throw-if-not-resolved=\"false\"></xref>. </p>\n"
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: System.Xml.XPath.Extensions.XPathEvaluate(System.Xml.Linq.XNode,System.String,System.Xml.IXmlNamespaceResolver)
  commentId: M:System.Xml.XPath.Extensions.XPathEvaluate(System.Xml.Linq.XNode,System.String,System.Xml.IXmlNamespaceResolver)
  id: XPathEvaluate(System.Xml.Linq.XNode,System.String,System.Xml.IXmlNamespaceResolver)
  isExtensionMethod: true
  parent: System.Xml.XPath.Extensions
  langs:
  - csharp
  - vb
  name: XPathEvaluate(Linq.XNode, String, IXmlNamespaceResolver)
  nameWithType: Extensions.XPathEvaluate(Linq.XNode, String, IXmlNamespaceResolver)
  fullName: System.Xml.XPath.Extensions.XPathEvaluate(System.Xml.Linq.XNode, System.String, System.Xml.IXmlNamespaceResolver)
  type: Method
  source:
    remote:
      path: src/System.Xml.XPath.XDocument/ref/System.Xml.XPath.XDocument.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: XPathEvaluate
    path: src/System.Xml.XPath.XDocument/ref/System.Xml.XPath.XDocument.cs
    startLine: 15
  assemblies:
  - System.Xml.XPath.XDocument
  namespace: System.Xml.XPath
  summary: "\n<p>Evaluates an XPath expression, resolving namespace prefixes using the specified <xref href=\"System.Xml.IXmlNamespaceResolver\" data-throw-if-not-resolved=\"false\"></xref>.</p>\n"
  syntax:
    content: public static object XPathEvaluate(this Linq.XNode node, string expression, IXmlNamespaceResolver resolver)
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function XPathEvaluate(node As Linq.XNode, expression As String, resolver As IXmlNamespaceResolver) As Object
    parameters:
    - id: node
      type: System.Xml.Linq.XNode
      description: "\n<p>The <xref href=\"System.Xml.Linq.XNode\" data-throw-if-not-resolved=\"false\"></xref> on which to evaluate the XPath expression.</p>\n"
    - id: expression
      type: System.String
      description: "\n<p>A <xref href=\"System.String\" data-throw-if-not-resolved=\"false\"></xref> that contains an XPath expression.</p>\n"
    - id: resolver
      type: System.Xml.IXmlNamespaceResolver
      description: "\n<p>A <xref href=\"System.Xml.IXmlNamespaceResolver\" data-throw-if-not-resolved=\"false\"></xref> for the namespace prefixes in the XPath expression.</p>\n"
    return:
      type: System.Object
      description: "\n<p>An object that contains the result of evaluating the expression. The object can be a <strong>bool</strong>, a <strong>double</strong>, a <strong>string</strong>, or an <xref href=\"System.Collections.Generic.IEnumerable`1\" data-throw-if-not-resolved=\"false\"></xref>.</p>\n"
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: System.Xml.XPath.Extensions.XPathSelectElement(System.Xml.Linq.XNode,System.String)
  commentId: M:System.Xml.XPath.Extensions.XPathSelectElement(System.Xml.Linq.XNode,System.String)
  id: XPathSelectElement(System.Xml.Linq.XNode,System.String)
  isExtensionMethod: true
  parent: System.Xml.XPath.Extensions
  langs:
  - csharp
  - vb
  name: XPathSelectElement(Linq.XNode, String)
  nameWithType: Extensions.XPathSelectElement(Linq.XNode, String)
  fullName: System.Xml.XPath.Extensions.XPathSelectElement(System.Xml.Linq.XNode, System.String)
  type: Method
  source:
    remote:
      path: src/System.Xml.XPath.XDocument/ref/System.Xml.XPath.XDocument.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: XPathSelectElement
    path: src/System.Xml.XPath.XDocument/ref/System.Xml.XPath.XDocument.cs
    startLine: 16
  assemblies:
  - System.Xml.XPath.XDocument
  namespace: System.Xml.XPath
  summary: "\n<p>Selects an <xref href=\"System.Xml.Linq.XElement\" data-throw-if-not-resolved=\"false\"></xref> using a XPath expression.</p>\n"
  syntax:
    content: public static Linq.XElement XPathSelectElement(this Linq.XNode node, string expression)
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function XPathSelectElement(node As Linq.XNode, expression As String) As Linq.XElement
    parameters:
    - id: node
      type: System.Xml.Linq.XNode
      description: "\n<p>The <xref href=\"System.Xml.Linq.XNode\" data-throw-if-not-resolved=\"false\"></xref> on which to evaluate the XPath expression.</p>\n"
    - id: expression
      type: System.String
      description: "\n<p>A <xref href=\"System.String\" data-throw-if-not-resolved=\"false\"></xref> that contains an XPath expression.</p>\n"
    return:
      type: System.Xml.Linq.XElement
      description: "\n<p>An <xref href=\"System.Xml.Linq.XElement\" data-throw-if-not-resolved=\"false\"></xref>, or null.</p>\n"
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: System.Xml.XPath.Extensions.XPathSelectElement(System.Xml.Linq.XNode,System.String,System.Xml.IXmlNamespaceResolver)
  commentId: M:System.Xml.XPath.Extensions.XPathSelectElement(System.Xml.Linq.XNode,System.String,System.Xml.IXmlNamespaceResolver)
  id: XPathSelectElement(System.Xml.Linq.XNode,System.String,System.Xml.IXmlNamespaceResolver)
  isExtensionMethod: true
  parent: System.Xml.XPath.Extensions
  langs:
  - csharp
  - vb
  name: XPathSelectElement(Linq.XNode, String, IXmlNamespaceResolver)
  nameWithType: Extensions.XPathSelectElement(Linq.XNode, String, IXmlNamespaceResolver)
  fullName: System.Xml.XPath.Extensions.XPathSelectElement(System.Xml.Linq.XNode, System.String, System.Xml.IXmlNamespaceResolver)
  type: Method
  source:
    remote:
      path: src/System.Xml.XPath.XDocument/ref/System.Xml.XPath.XDocument.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: XPathSelectElement
    path: src/System.Xml.XPath.XDocument/ref/System.Xml.XPath.XDocument.cs
    startLine: 17
  assemblies:
  - System.Xml.XPath.XDocument
  namespace: System.Xml.XPath
  summary: "\n<p>Selects an <xref href=\"System.Xml.Linq.XElement\" data-throw-if-not-resolved=\"false\"></xref> using a XPath expression, resolving namespace prefixes using the specified <xref href=\"System.Xml.IXmlNamespaceResolver\" data-throw-if-not-resolved=\"false\"></xref>.</p>\n"
  syntax:
    content: public static Linq.XElement XPathSelectElement(this Linq.XNode node, string expression, IXmlNamespaceResolver resolver)
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function XPathSelectElement(node As Linq.XNode, expression As String, resolver As IXmlNamespaceResolver) As Linq.XElement
    parameters:
    - id: node
      type: System.Xml.Linq.XNode
      description: "\n<p>The <xref href=\"System.Xml.Linq.XNode\" data-throw-if-not-resolved=\"false\"></xref> on which to evaluate the XPath expression.</p>\n"
    - id: expression
      type: System.String
      description: "\n<p>A <xref href=\"System.String\" data-throw-if-not-resolved=\"false\"></xref> that contains an XPath expression.</p>\n"
    - id: resolver
      type: System.Xml.IXmlNamespaceResolver
      description: "\n<p>An <xref href=\"System.Xml.IXmlNamespaceResolver\" data-throw-if-not-resolved=\"false\"></xref> for the namespace prefixes in the XPath expression.</p>\n"
    return:
      type: System.Xml.Linq.XElement
      description: "\n<p>An <xref href=\"System.Xml.Linq.XElement\" data-throw-if-not-resolved=\"false\"></xref>, or null.</p>\n"
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: System.Xml.XPath.Extensions.XPathSelectElements(System.Xml.Linq.XNode,System.String)
  commentId: M:System.Xml.XPath.Extensions.XPathSelectElements(System.Xml.Linq.XNode,System.String)
  id: XPathSelectElements(System.Xml.Linq.XNode,System.String)
  isExtensionMethod: true
  parent: System.Xml.XPath.Extensions
  langs:
  - csharp
  - vb
  name: XPathSelectElements(Linq.XNode, String)
  nameWithType: Extensions.XPathSelectElements(Linq.XNode, String)
  fullName: System.Xml.XPath.Extensions.XPathSelectElements(System.Xml.Linq.XNode, System.String)
  type: Method
  source:
    remote:
      path: src/System.Xml.XPath.XDocument/ref/System.Xml.XPath.XDocument.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: XPathSelectElements
    path: src/System.Xml.XPath.XDocument/ref/System.Xml.XPath.XDocument.cs
    startLine: 18
  assemblies:
  - System.Xml.XPath.XDocument
  namespace: System.Xml.XPath
  summary: "\n<p>Selects a collection of elements using an XPath expression.</p>\n"
  syntax:
    content: public static IEnumerable<Linq.XElement> XPathSelectElements(this Linq.XNode node, string expression)
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function XPathSelectElements(node As Linq.XNode, expression As String) As IEnumerable(Of Linq.XElement)
    parameters:
    - id: node
      type: System.Xml.Linq.XNode
      description: "\n<p>The <xref href=\"System.Xml.Linq.XNode\" data-throw-if-not-resolved=\"false\"></xref> on which to evaluate the XPath expression.</p>\n"
    - id: expression
      type: System.String
      description: "\n<p>A <xref href=\"System.String\" data-throw-if-not-resolved=\"false\"></xref> that contains an XPath expression.</p>\n"
    return:
      type: System.Collections.Generic.IEnumerable{System.Xml.Linq.XElement}
      description: "\n<p>An <xref href=\"System.Collections.Generic.IEnumerable`1\" data-throw-if-not-resolved=\"false\"></xref> of <xref href=\"System.Xml.Linq.XElement\" data-throw-if-not-resolved=\"false\"></xref> that contains the selected elements.</p>\n"
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: System.Xml.XPath.Extensions.XPathSelectElements(System.Xml.Linq.XNode,System.String,System.Xml.IXmlNamespaceResolver)
  commentId: M:System.Xml.XPath.Extensions.XPathSelectElements(System.Xml.Linq.XNode,System.String,System.Xml.IXmlNamespaceResolver)
  id: XPathSelectElements(System.Xml.Linq.XNode,System.String,System.Xml.IXmlNamespaceResolver)
  isExtensionMethod: true
  parent: System.Xml.XPath.Extensions
  langs:
  - csharp
  - vb
  name: XPathSelectElements(Linq.XNode, String, IXmlNamespaceResolver)
  nameWithType: Extensions.XPathSelectElements(Linq.XNode, String, IXmlNamespaceResolver)
  fullName: System.Xml.XPath.Extensions.XPathSelectElements(System.Xml.Linq.XNode, System.String, System.Xml.IXmlNamespaceResolver)
  type: Method
  source:
    remote:
      path: src/System.Xml.XPath.XDocument/ref/System.Xml.XPath.XDocument.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: XPathSelectElements
    path: src/System.Xml.XPath.XDocument/ref/System.Xml.XPath.XDocument.cs
    startLine: 19
  assemblies:
  - System.Xml.XPath.XDocument
  namespace: System.Xml.XPath
  summary: "\n<p>Selects a collection of elements using an XPath expression, resolving namespace prefixes using the specified <xref href=\"System.Xml.IXmlNamespaceResolver\" data-throw-if-not-resolved=\"false\"></xref>.</p>\n"
  syntax:
    content: public static IEnumerable<Linq.XElement> XPathSelectElements(this Linq.XNode node, string expression, IXmlNamespaceResolver resolver)
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function XPathSelectElements(node As Linq.XNode, expression As String, resolver As IXmlNamespaceResolver) As IEnumerable(Of Linq.XElement)
    parameters:
    - id: node
      type: System.Xml.Linq.XNode
      description: "\n<p>The <xref href=\"System.Xml.Linq.XNode\" data-throw-if-not-resolved=\"false\"></xref> on which to evaluate the XPath expression.</p>\n"
    - id: expression
      type: System.String
      description: "\n<p>A <xref href=\"System.String\" data-throw-if-not-resolved=\"false\"></xref> that contains an XPath expression.</p>\n"
    - id: resolver
      type: System.Xml.IXmlNamespaceResolver
      description: "\n<p>A <xref href=\"System.Xml.IXmlNamespaceResolver\" data-throw-if-not-resolved=\"false\"></xref> for the namespace prefixes in the XPath expression.</p>\n"
    return:
      type: System.Collections.Generic.IEnumerable{System.Xml.Linq.XElement}
      description: "\n<p>An <xref href=\"System.Collections.Generic.IEnumerable`1\" data-throw-if-not-resolved=\"false\"></xref> of <xref href=\"System.Xml.Linq.XElement\" data-throw-if-not-resolved=\"false\"></xref> that contains the selected elements.</p>\n"
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
references:
- uid: System.Xml.XPath
  commentId: N:System.Xml.XPath
  isExternal: false
  name: System.Xml.XPath
  nameWithType: System.Xml.XPath
  fullName: System.Xml.XPath
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: false
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: System.Xml.Linq.XNode
  commentId: T:System.Xml.Linq.XNode
  parent: System.Xml.Linq
  isExternal: false
  name: Linq.XNode
  nameWithType: Linq.XNode
  fullName: System.Xml.Linq.XNode
- uid: System.Xml.XPath.XPathNavigator
  commentId: T:System.Xml.XPath.XPathNavigator
  parent: System.Xml.XPath
  isExternal: false
  name: XPathNavigator
  nameWithType: XPathNavigator
  fullName: System.Xml.XPath.XPathNavigator
- uid: System.Xml.Linq
  commentId: N:System.Xml.Linq
  isExternal: false
  name: System.Xml.Linq
  nameWithType: System.Xml.Linq
  fullName: System.Xml.Linq
- uid: System.Xml.XmlNameTable
  commentId: T:System.Xml.XmlNameTable
  parent: System.Xml
  isExternal: false
  name: XmlNameTable
  nameWithType: XmlNameTable
  fullName: System.Xml.XmlNameTable
- uid: System.Xml
  commentId: N:System.Xml
  isExternal: false
  name: System.Xml
  nameWithType: System.Xml
  fullName: System.Xml
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: false
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Xml.IXmlNamespaceResolver
  commentId: T:System.Xml.IXmlNamespaceResolver
  parent: System.Xml
  isExternal: false
  name: IXmlNamespaceResolver
  nameWithType: IXmlNamespaceResolver
  fullName: System.Xml.IXmlNamespaceResolver
- uid: System.Xml.Linq.XElement
  commentId: T:System.Xml.Linq.XElement
  parent: System.Xml.Linq
  isExternal: false
  name: Linq.XElement
  nameWithType: Linq.XElement
  fullName: System.Xml.Linq.XElement
- uid: System.Collections.Generic.IEnumerable{System.Xml.Linq.XElement}
  commentId: T:System.Collections.Generic.IEnumerable{System.Xml.Linq.XElement}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IEnumerable`1
  name: IEnumerable<Linq.XElement>
  nameWithType: IEnumerable<Linq.XElement>
  fullName: System.Collections.Generic.IEnumerable<System.Xml.Linq.XElement>
  nameWithType.vb: IEnumerable(Of Linq.XElement)
  fullname.vb: System.Collections.Generic.IEnumerable(Of System.Xml.Linq.XElement)
  name.vb: IEnumerable(Of Linq.XElement)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Xml.Linq.XElement
    name: Linq.XElement
    nameWithType: Linq.XElement
    fullName: System.Xml.Linq.XElement
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Xml.Linq.XElement
    name: Linq.XElement
    nameWithType: Linq.XElement
    fullName: System.Xml.Linq.XElement
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.IEnumerable`1
  commentId: T:System.Collections.Generic.IEnumerable`1
  isExternal: false
  name: IEnumerable<T>
  nameWithType: IEnumerable<T>
  fullName: System.Collections.Generic.IEnumerable<T>
  nameWithType.vb: IEnumerable(Of T)
  fullname.vb: System.Collections.Generic.IEnumerable(Of T)
  name.vb: IEnumerable(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: false
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
