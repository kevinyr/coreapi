items:
- uid: System.IO.MemoryMappedFiles.MemoryMappedViewStream
  commentId: T:System.IO.MemoryMappedFiles.MemoryMappedViewStream
  id: MemoryMappedViewStream
  parent: System.IO.MemoryMappedFiles
  children:
  - System.IO.MemoryMappedFiles.MemoryMappedViewStream.Dispose(System.Boolean)
  - System.IO.MemoryMappedFiles.MemoryMappedViewStream.Flush
  - System.IO.MemoryMappedFiles.MemoryMappedViewStream.PointerOffset
  - System.IO.MemoryMappedFiles.MemoryMappedViewStream.SafeMemoryMappedViewHandle
  - System.IO.MemoryMappedFiles.MemoryMappedViewStream.SetLength(System.Int64)
  langs:
  - csharp
  - vb
  name: MemoryMappedViewStream
  fullName: System.IO.MemoryMappedFiles.MemoryMappedViewStream
  type: Class
  source:
    remote:
      path: src/System.IO.MemoryMappedFiles/src/System/IO/MemoryMappedFiles/MemoryMappedViewStream.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: MemoryMappedViewStream
    path: src/System.IO.MemoryMappedFiles/src/System/IO/MemoryMappedFiles/MemoryMappedViewStream.cs
    startLine: 10
  assemblies:
  - System.IO.MemoryMappedFiles
  namespace: System.IO.MemoryMappedFiles
  summary: "\n<p>Represents a view of a memory-mapped file as a sequentially accessed stream.</p>\n"
  syntax:
    content: 'public sealed class MemoryMappedViewStream : UnmanagedMemoryStream, IDisposable'
    content.vb: >-
      Public NotInheritable Class MemoryMappedViewStream
          Inherits UnmanagedMemoryStream
          Implements IDisposable
  inheritance:
  - System.Object
  - System.MarshalByRefObject
  - System.IO.Stream
  - System.IO.UnmanagedMemoryStream
  implements:
  - System.IDisposable
  inheritedMembers:
  - System.IO.UnmanagedMemoryStream.Initialize(System.Runtime.InteropServices.SafeBuffer,System.Int64,System.Int64,System.IO.FileAccess)
  - System.IO.UnmanagedMemoryStream.Initialize(System.Byte*,System.Int64,System.Int64,System.IO.FileAccess)
  - System.IO.UnmanagedMemoryStream.FlushAsync(System.Threading.CancellationToken)
  - System.IO.UnmanagedMemoryStream.Read(System.Byte[],System.Int32,System.Int32)
  - System.IO.UnmanagedMemoryStream.ReadAsync(System.Byte[],System.Int32,System.Int32,System.Threading.CancellationToken)
  - System.IO.UnmanagedMemoryStream.ReadByte
  - System.IO.UnmanagedMemoryStream.Seek(System.Int64,System.IO.SeekOrigin)
  - System.IO.UnmanagedMemoryStream.Write(System.Byte[],System.Int32,System.Int32)
  - System.IO.UnmanagedMemoryStream.WriteAsync(System.Byte[],System.Int32,System.Int32,System.Threading.CancellationToken)
  - System.IO.UnmanagedMemoryStream.WriteByte(System.Byte)
  - System.IO.UnmanagedMemoryStream.CanRead
  - System.IO.UnmanagedMemoryStream.CanSeek
  - System.IO.UnmanagedMemoryStream.CanWrite
  - System.IO.UnmanagedMemoryStream.Length
  - System.IO.UnmanagedMemoryStream.Capacity
  - System.IO.UnmanagedMemoryStream.Position
  - System.IO.UnmanagedMemoryStream.PositionPointer
  - System.IO.Stream.Null
  - System.IO.Stream.CopyToAsync(System.IO.Stream)
  - System.IO.Stream.CopyToAsync(System.IO.Stream,System.Int32)
  - System.IO.Stream.CopyToAsync(System.IO.Stream,System.Int32,System.Threading.CancellationToken)
  - System.IO.Stream.CopyTo(System.IO.Stream)
  - System.IO.Stream.CopyTo(System.IO.Stream,System.Int32)
  - System.IO.Stream.Close
  - System.IO.Stream.Dispose
  - System.IO.Stream.FlushAsync
  - System.IO.Stream.CreateWaitHandle
  - System.IO.Stream.BeginRead(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)
  - System.IO.Stream.EndRead(System.IAsyncResult)
  - System.IO.Stream.ReadAsync(System.Byte[],System.Int32,System.Int32)
  - System.IO.Stream.BeginWrite(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)
  - System.IO.Stream.EndWrite(System.IAsyncResult)
  - System.IO.Stream.WriteAsync(System.Byte[],System.Int32,System.Int32)
  - System.IO.Stream.Synchronized(System.IO.Stream)
  - System.IO.Stream.ObjectInvariant
  - System.IO.Stream.CanTimeout
  - System.IO.Stream.ReadTimeout
  - System.IO.Stream.WriteTimeout
  - System.MarshalByRefObject.MemberwiseClone(System.Boolean)
  - System.MarshalByRefObject.GetLifetimeService
  - System.MarshalByRefObject.InitializeLifetimeService
  - System.MarshalByRefObject.CreateObjRef(System.Type)
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  modifiers.csharp:
  - public
  - sealed
  - class
  modifiers.vb:
  - Public
  - NotInheritable
  - Class
  nameWithType: MemoryMappedViewStream
  extensionMethods:
  - System.IO.Stream.System.IO.WindowsRuntimeStreamExtensions.AsInputStream
  - System.IO.Stream.System.IO.WindowsRuntimeStreamExtensions.AsOutputStream
  - System.IO.Stream.System.IO.WindowsRuntimeStreamExtensions.AsRandomAccessStream
- uid: System.IO.MemoryMappedFiles.MemoryMappedViewStream.PointerOffset
  commentId: P:System.IO.MemoryMappedFiles.MemoryMappedViewStream.PointerOffset
  id: PointerOffset
  parent: System.IO.MemoryMappedFiles.MemoryMappedViewStream
  langs:
  - csharp
  - vb
  name: PointerOffset
  fullName: System.IO.MemoryMappedFiles.MemoryMappedViewStream.PointerOffset
  type: Property
  source:
    remote:
      path: src/System.IO.MemoryMappedFiles/src/System/IO/MemoryMappedFiles/MemoryMappedViewStream.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: PointerOffset
    path: src/System.IO.MemoryMappedFiles/src/System/IO/MemoryMappedFiles/MemoryMappedViewStream.cs
    startLine: 34
  assemblies:
  - System.IO.MemoryMappedFiles
  namespace: System.IO.MemoryMappedFiles
  summary: "\n<p>[Supported in the .NET Framework 4.5.1 and later versions] </p>\n<p>Gets the number of bytes by which the starting position of this view is offset from the beginning of the memory-mapped file.</p>\n"
  syntax:
    content: public long PointerOffset { get; }
    content.vb: Public ReadOnly Property PointerOffset As Long
    parameters: []
    return:
      type: System.Int64
      description: "\n<p>The number of bytes between the starting position of this view and the beginning of the memory-mapped file. </p>\n"
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "\n<p>The object from which this instance was created is <strong>null</strong>. </p>\n"
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
  nameWithType: MemoryMappedViewStream.PointerOffset
- uid: System.IO.MemoryMappedFiles.MemoryMappedViewStream.SafeMemoryMappedViewHandle
  commentId: P:System.IO.MemoryMappedFiles.MemoryMappedViewStream.SafeMemoryMappedViewHandle
  id: SafeMemoryMappedViewHandle
  parent: System.IO.MemoryMappedFiles.MemoryMappedViewStream
  langs:
  - csharp
  - vb
  name: SafeMemoryMappedViewHandle
  fullName: System.IO.MemoryMappedFiles.MemoryMappedViewStream.SafeMemoryMappedViewHandle
  type: Property
  source:
    remote:
      path: src/System.IO.MemoryMappedFiles/src/System/IO/MemoryMappedFiles/MemoryMappedViewStream.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: SafeMemoryMappedViewHandle
    path: src/System.IO.MemoryMappedFiles/src/System/IO/MemoryMappedFiles/MemoryMappedViewStream.cs
    startLine: 23
  assemblies:
  - System.IO.MemoryMappedFiles
  namespace: System.IO.MemoryMappedFiles
  summary: "\n<p>Gets a handle to the view of a memory-mapped file.</p>\n"
  syntax:
    content: >-
      public SafeMemoryMappedViewHandle SafeMemoryMappedViewHandle

      {
          [SecurityCritical]
          get;
      }
    content.vb: Public ReadOnly Property SafeMemoryMappedViewHandle As SafeMemoryMappedViewHandle
    parameters: []
    return:
      type: Microsoft.Win32.SafeHandles.SafeMemoryMappedViewHandle
      description: "\n<p>A wrapper for the operating system's handle to the view of the file. </p>\n"
  see:
  - type: System.Security.Permissions.SecurityPermission
    commentId: T:System.Security.Permissions.SecurityPermission
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
  nameWithType: MemoryMappedViewStream.SafeMemoryMappedViewHandle
- uid: System.IO.MemoryMappedFiles.MemoryMappedViewStream.Dispose(System.Boolean)
  commentId: M:System.IO.MemoryMappedFiles.MemoryMappedViewStream.Dispose(System.Boolean)
  id: Dispose(System.Boolean)
  parent: System.IO.MemoryMappedFiles.MemoryMappedViewStream
  langs:
  - csharp
  - vb
  name: Dispose(Boolean)
  fullName: System.IO.MemoryMappedFiles.MemoryMappedViewStream.Dispose(System.Boolean)
  type: Method
  source:
    remote:
      path: src/System.IO.MemoryMappedFiles/src/System/IO/MemoryMappedFiles/MemoryMappedViewStream.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: Dispose
    path: src/System.IO.MemoryMappedFiles/src/System/IO/MemoryMappedFiles/MemoryMappedViewStream.cs
    startLine: 39
  assemblies:
  - System.IO.MemoryMappedFiles
  namespace: System.IO.MemoryMappedFiles
  syntax:
    content: >-
      [SecuritySafeCritical]

      protected override void Dispose(bool disposing)
    content.vb: >-
      <SecuritySafeCritical>

      Protected Overrides Sub Dispose(disposing As Boolean)
    parameters:
    - id: disposing
      type: System.Boolean
  overridden: System.IO.UnmanagedMemoryStream.Dispose(System.Boolean)
  modifiers.csharp:
  - protected
  - override
  modifiers.vb:
  - Protected
  - Overrides
  nameWithType: MemoryMappedViewStream.Dispose(Boolean)
- uid: System.IO.MemoryMappedFiles.MemoryMappedViewStream.Flush
  commentId: M:System.IO.MemoryMappedFiles.MemoryMappedViewStream.Flush
  id: Flush
  parent: System.IO.MemoryMappedFiles.MemoryMappedViewStream
  langs:
  - csharp
  - vb
  name: Flush()
  fullName: System.IO.MemoryMappedFiles.MemoryMappedViewStream.Flush()
  type: Method
  source:
    remote:
      path: src/System.IO.MemoryMappedFiles/src/System/IO/MemoryMappedFiles/MemoryMappedViewStream.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: Flush
    path: src/System.IO.MemoryMappedFiles/src/System/IO/MemoryMappedFiles/MemoryMappedViewStream.cs
    startLine: 67
  assemblies:
  - System.IO.MemoryMappedFiles
  namespace: System.IO.MemoryMappedFiles
  summary: "\n<p>Clears all buffers for this stream and causes any buffered data to be written to the underlying file.</p>\n"
  syntax:
    content: >-
      [SecurityCritical]

      public override void Flush()
    content.vb: >-
      <SecurityCritical>

      Public Overrides Sub Flush
  overridden: System.IO.UnmanagedMemoryStream.Flush
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
  nameWithType: MemoryMappedViewStream.Flush()
- uid: System.IO.MemoryMappedFiles.MemoryMappedViewStream.SetLength(System.Int64)
  commentId: M:System.IO.MemoryMappedFiles.MemoryMappedViewStream.SetLength(System.Int64)
  id: SetLength(System.Int64)
  parent: System.IO.MemoryMappedFiles.MemoryMappedViewStream
  langs:
  - csharp
  - vb
  name: SetLength(Int64)
  fullName: System.IO.MemoryMappedFiles.MemoryMappedViewStream.SetLength(System.Int64)
  type: Method
  source:
    remote:
      path: src/System.IO.MemoryMappedFiles/src/System/IO/MemoryMappedFiles/MemoryMappedViewStream.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: SetLength
    path: src/System.IO.MemoryMappedFiles/src/System/IO/MemoryMappedFiles/MemoryMappedViewStream.cs
    startLine: 29
  assemblies:
  - System.IO.MemoryMappedFiles
  namespace: System.IO.MemoryMappedFiles
  summary: "\n<p>Sets the length of the current stream.</p>\n"
  syntax:
    content: public override void SetLength(long value)
    content.vb: Public Overrides Sub SetLength(value As Long)
    parameters:
    - id: value
      type: System.Int64
      description: "\n<p>The desired length of the current stream in bytes.</p>\n"
  overridden: System.IO.UnmanagedMemoryStream.SetLength(System.Int64)
  exceptions:
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "\n<p>This method is not supported.</p>\n"
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
  nameWithType: MemoryMappedViewStream.SetLength(Int64)
references:
- uid: System.IO.MemoryMappedFiles
  isExternal: false
  name: System.IO.MemoryMappedFiles
  fullName: System.IO.MemoryMappedFiles
  nameWithType: System.IO.MemoryMappedFiles
  commentId: N:System.IO.MemoryMappedFiles
- uid: System.Object
  parent: System
  isExternal: false
  name: Object
  fullName: System.Object
  nameWithType: Object
  commentId: T:System.Object
- uid: System.MarshalByRefObject
  parent: System
  isExternal: true
  name: MarshalByRefObject
  fullName: System.MarshalByRefObject
  nameWithType: MarshalByRefObject
  commentId: T:System.MarshalByRefObject
- uid: System.IO.Stream
  parent: System.IO
  isExternal: false
  name: Stream
  fullName: System.IO.Stream
  nameWithType: Stream
  commentId: T:System.IO.Stream
- uid: System.IO.UnmanagedMemoryStream
  parent: System.IO
  isExternal: false
  name: UnmanagedMemoryStream
  fullName: System.IO.UnmanagedMemoryStream
  nameWithType: UnmanagedMemoryStream
  commentId: T:System.IO.UnmanagedMemoryStream
- uid: System.IDisposable
  parent: System
  isExternal: false
  name: IDisposable
  fullName: System.IDisposable
  nameWithType: IDisposable
  commentId: T:System.IDisposable
- uid: System.IO.UnmanagedMemoryStream.Initialize(System.Runtime.InteropServices.SafeBuffer,System.Int64,System.Int64,System.IO.FileAccess)
  parent: System.IO.UnmanagedMemoryStream
  isExternal: true
  name: Initialize(SafeBuffer, Int64, Int64, FileAccess)
  fullName: System.IO.UnmanagedMemoryStream.Initialize(System.Runtime.InteropServices.SafeBuffer, System.Int64, System.Int64, System.IO.FileAccess)
  spec.csharp:
  - uid: System.IO.UnmanagedMemoryStream.Initialize(System.Runtime.InteropServices.SafeBuffer,System.Int64,System.Int64,System.IO.FileAccess)
    name: Initialize
    fullName: System.IO.UnmanagedMemoryStream.Initialize
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Runtime.InteropServices.SafeBuffer
    name: SafeBuffer
    fullName: System.Runtime.InteropServices.SafeBuffer
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Int64
    name: Int64
    fullName: System.Int64
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Int64
    name: Int64
    fullName: System.Int64
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.IO.FileAccess
    name: FileAccess
    fullName: System.IO.FileAccess
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.IO.UnmanagedMemoryStream.Initialize(System.Runtime.InteropServices.SafeBuffer,System.Int64,System.Int64,System.IO.FileAccess)
    name: Initialize
    fullName: System.IO.UnmanagedMemoryStream.Initialize
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Runtime.InteropServices.SafeBuffer
    name: SafeBuffer
    fullName: System.Runtime.InteropServices.SafeBuffer
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Int64
    name: Int64
    fullName: System.Int64
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Int64
    name: Int64
    fullName: System.Int64
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.IO.FileAccess
    name: FileAccess
    fullName: System.IO.FileAccess
    isExternal: true
  - name: )
    fullName: )
  nameWithType: UnmanagedMemoryStream.Initialize(SafeBuffer, Int64, Int64, FileAccess)
  commentId: M:System.IO.UnmanagedMemoryStream.Initialize(System.Runtime.InteropServices.SafeBuffer,System.Int64,System.Int64,System.IO.FileAccess)
- uid: System.IO.UnmanagedMemoryStream.Initialize(System.Byte*,System.Int64,System.Int64,System.IO.FileAccess)
  parent: System.IO.UnmanagedMemoryStream
  isExternal: true
  name: Initialize(Byte*, Int64, Int64, FileAccess)
  fullName: System.IO.UnmanagedMemoryStream.Initialize(System.Byte*, System.Int64, System.Int64, System.IO.FileAccess)
  spec.csharp:
  - uid: System.IO.UnmanagedMemoryStream.Initialize(System.Byte*,System.Int64,System.Int64,System.IO.FileAccess)
    name: Initialize
    fullName: System.IO.UnmanagedMemoryStream.Initialize
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Byte
    name: Byte
    fullName: System.Byte
    isExternal: true
  - name: '*'
    fullName: '*'
  - name: ', '
    fullName: ', '
  - uid: System.Int64
    name: Int64
    fullName: System.Int64
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Int64
    name: Int64
    fullName: System.Int64
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.IO.FileAccess
    name: FileAccess
    fullName: System.IO.FileAccess
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.IO.UnmanagedMemoryStream.Initialize(System.Byte*,System.Int64,System.Int64,System.IO.FileAccess)
    name: Initialize
    fullName: System.IO.UnmanagedMemoryStream.Initialize
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Byte
    name: Byte
    fullName: System.Byte
    isExternal: true
  - name: '*'
    fullName: '*'
  - name: ', '
    fullName: ', '
  - uid: System.Int64
    name: Int64
    fullName: System.Int64
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Int64
    name: Int64
    fullName: System.Int64
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.IO.FileAccess
    name: FileAccess
    fullName: System.IO.FileAccess
    isExternal: true
  - name: )
    fullName: )
  nameWithType: UnmanagedMemoryStream.Initialize(Byte*, Int64, Int64, FileAccess)
  commentId: M:System.IO.UnmanagedMemoryStream.Initialize(System.Byte*,System.Int64,System.Int64,System.IO.FileAccess)
- uid: System.IO.UnmanagedMemoryStream.FlushAsync(System.Threading.CancellationToken)
  parent: System.IO.UnmanagedMemoryStream
  isExternal: true
  name: FlushAsync(CancellationToken)
  fullName: System.IO.UnmanagedMemoryStream.FlushAsync(System.Threading.CancellationToken)
  spec.csharp:
  - uid: System.IO.UnmanagedMemoryStream.FlushAsync(System.Threading.CancellationToken)
    name: FlushAsync
    fullName: System.IO.UnmanagedMemoryStream.FlushAsync
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.IO.UnmanagedMemoryStream.FlushAsync(System.Threading.CancellationToken)
    name: FlushAsync
    fullName: System.IO.UnmanagedMemoryStream.FlushAsync
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    fullName: )
  nameWithType: UnmanagedMemoryStream.FlushAsync(CancellationToken)
  commentId: M:System.IO.UnmanagedMemoryStream.FlushAsync(System.Threading.CancellationToken)
- uid: System.IO.UnmanagedMemoryStream.Read(System.Byte[],System.Int32,System.Int32)
  parent: System.IO.UnmanagedMemoryStream
  isExternal: true
  name: Read(Byte[], Int32, Int32)
  fullName: System.IO.UnmanagedMemoryStream.Read(System.Byte[], System.Int32, System.Int32)
  fullname.vb: System.IO.UnmanagedMemoryStream.Read(System.Byte(), System.Int32, System.Int32)
  name.vb: Read(Byte(), Int32, Int32)
  spec.csharp:
  - uid: System.IO.UnmanagedMemoryStream.Read(System.Byte[],System.Int32,System.Int32)
    name: Read
    fullName: System.IO.UnmanagedMemoryStream.Read
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Byte
    name: Byte
    fullName: System.Byte
    isExternal: true
  - name: '[]'
    fullName: '[]'
  - name: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.IO.UnmanagedMemoryStream.Read(System.Byte[],System.Int32,System.Int32)
    name: Read
    fullName: System.IO.UnmanagedMemoryStream.Read
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Byte
    name: Byte
    fullName: System.Byte
    isExternal: true
  - name: ()
    fullName: ()
  - name: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    fullName: )
  nameWithType: UnmanagedMemoryStream.Read(Byte[], Int32, Int32)
  nameWithType.vb: UnmanagedMemoryStream.Read(Byte(), Int32, Int32)
  commentId: M:System.IO.UnmanagedMemoryStream.Read(System.Byte[],System.Int32,System.Int32)
- uid: System.IO.UnmanagedMemoryStream.ReadAsync(System.Byte[],System.Int32,System.Int32,System.Threading.CancellationToken)
  parent: System.IO.UnmanagedMemoryStream
  isExternal: true
  name: ReadAsync(Byte[], Int32, Int32, CancellationToken)
  fullName: System.IO.UnmanagedMemoryStream.ReadAsync(System.Byte[], System.Int32, System.Int32, System.Threading.CancellationToken)
  fullname.vb: System.IO.UnmanagedMemoryStream.ReadAsync(System.Byte(), System.Int32, System.Int32, System.Threading.CancellationToken)
  name.vb: ReadAsync(Byte(), Int32, Int32, CancellationToken)
  spec.csharp:
  - uid: System.IO.UnmanagedMemoryStream.ReadAsync(System.Byte[],System.Int32,System.Int32,System.Threading.CancellationToken)
    name: ReadAsync
    fullName: System.IO.UnmanagedMemoryStream.ReadAsync
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Byte
    name: Byte
    fullName: System.Byte
    isExternal: true
  - name: '[]'
    fullName: '[]'
  - name: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.IO.UnmanagedMemoryStream.ReadAsync(System.Byte[],System.Int32,System.Int32,System.Threading.CancellationToken)
    name: ReadAsync
    fullName: System.IO.UnmanagedMemoryStream.ReadAsync
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Byte
    name: Byte
    fullName: System.Byte
    isExternal: true
  - name: ()
    fullName: ()
  - name: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    fullName: )
  nameWithType: UnmanagedMemoryStream.ReadAsync(Byte[], Int32, Int32, CancellationToken)
  nameWithType.vb: UnmanagedMemoryStream.ReadAsync(Byte(), Int32, Int32, CancellationToken)
  commentId: M:System.IO.UnmanagedMemoryStream.ReadAsync(System.Byte[],System.Int32,System.Int32,System.Threading.CancellationToken)
- uid: System.IO.UnmanagedMemoryStream.ReadByte
  parent: System.IO.UnmanagedMemoryStream
  isExternal: true
  name: ReadByte()
  fullName: System.IO.UnmanagedMemoryStream.ReadByte()
  spec.csharp:
  - uid: System.IO.UnmanagedMemoryStream.ReadByte
    name: ReadByte
    fullName: System.IO.UnmanagedMemoryStream.ReadByte
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.IO.UnmanagedMemoryStream.ReadByte
    name: ReadByte
    fullName: System.IO.UnmanagedMemoryStream.ReadByte
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  nameWithType: UnmanagedMemoryStream.ReadByte()
  commentId: M:System.IO.UnmanagedMemoryStream.ReadByte
- uid: System.IO.UnmanagedMemoryStream.Seek(System.Int64,System.IO.SeekOrigin)
  parent: System.IO.UnmanagedMemoryStream
  isExternal: true
  name: Seek(Int64, SeekOrigin)
  fullName: System.IO.UnmanagedMemoryStream.Seek(System.Int64, System.IO.SeekOrigin)
  spec.csharp:
  - uid: System.IO.UnmanagedMemoryStream.Seek(System.Int64,System.IO.SeekOrigin)
    name: Seek
    fullName: System.IO.UnmanagedMemoryStream.Seek
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Int64
    name: Int64
    fullName: System.Int64
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.IO.SeekOrigin
    name: SeekOrigin
    fullName: System.IO.SeekOrigin
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.IO.UnmanagedMemoryStream.Seek(System.Int64,System.IO.SeekOrigin)
    name: Seek
    fullName: System.IO.UnmanagedMemoryStream.Seek
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Int64
    name: Int64
    fullName: System.Int64
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.IO.SeekOrigin
    name: SeekOrigin
    fullName: System.IO.SeekOrigin
    isExternal: true
  - name: )
    fullName: )
  nameWithType: UnmanagedMemoryStream.Seek(Int64, SeekOrigin)
  commentId: M:System.IO.UnmanagedMemoryStream.Seek(System.Int64,System.IO.SeekOrigin)
- uid: System.IO.UnmanagedMemoryStream.Write(System.Byte[],System.Int32,System.Int32)
  parent: System.IO.UnmanagedMemoryStream
  isExternal: true
  name: Write(Byte[], Int32, Int32)
  fullName: System.IO.UnmanagedMemoryStream.Write(System.Byte[], System.Int32, System.Int32)
  fullname.vb: System.IO.UnmanagedMemoryStream.Write(System.Byte(), System.Int32, System.Int32)
  name.vb: Write(Byte(), Int32, Int32)
  spec.csharp:
  - uid: System.IO.UnmanagedMemoryStream.Write(System.Byte[],System.Int32,System.Int32)
    name: Write
    fullName: System.IO.UnmanagedMemoryStream.Write
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Byte
    name: Byte
    fullName: System.Byte
    isExternal: true
  - name: '[]'
    fullName: '[]'
  - name: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.IO.UnmanagedMemoryStream.Write(System.Byte[],System.Int32,System.Int32)
    name: Write
    fullName: System.IO.UnmanagedMemoryStream.Write
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Byte
    name: Byte
    fullName: System.Byte
    isExternal: true
  - name: ()
    fullName: ()
  - name: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    fullName: )
  nameWithType: UnmanagedMemoryStream.Write(Byte[], Int32, Int32)
  nameWithType.vb: UnmanagedMemoryStream.Write(Byte(), Int32, Int32)
  commentId: M:System.IO.UnmanagedMemoryStream.Write(System.Byte[],System.Int32,System.Int32)
- uid: System.IO.UnmanagedMemoryStream.WriteAsync(System.Byte[],System.Int32,System.Int32,System.Threading.CancellationToken)
  parent: System.IO.UnmanagedMemoryStream
  isExternal: true
  name: WriteAsync(Byte[], Int32, Int32, CancellationToken)
  fullName: System.IO.UnmanagedMemoryStream.WriteAsync(System.Byte[], System.Int32, System.Int32, System.Threading.CancellationToken)
  fullname.vb: System.IO.UnmanagedMemoryStream.WriteAsync(System.Byte(), System.Int32, System.Int32, System.Threading.CancellationToken)
  name.vb: WriteAsync(Byte(), Int32, Int32, CancellationToken)
  spec.csharp:
  - uid: System.IO.UnmanagedMemoryStream.WriteAsync(System.Byte[],System.Int32,System.Int32,System.Threading.CancellationToken)
    name: WriteAsync
    fullName: System.IO.UnmanagedMemoryStream.WriteAsync
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Byte
    name: Byte
    fullName: System.Byte
    isExternal: true
  - name: '[]'
    fullName: '[]'
  - name: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.IO.UnmanagedMemoryStream.WriteAsync(System.Byte[],System.Int32,System.Int32,System.Threading.CancellationToken)
    name: WriteAsync
    fullName: System.IO.UnmanagedMemoryStream.WriteAsync
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Byte
    name: Byte
    fullName: System.Byte
    isExternal: true
  - name: ()
    fullName: ()
  - name: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    fullName: )
  nameWithType: UnmanagedMemoryStream.WriteAsync(Byte[], Int32, Int32, CancellationToken)
  nameWithType.vb: UnmanagedMemoryStream.WriteAsync(Byte(), Int32, Int32, CancellationToken)
  commentId: M:System.IO.UnmanagedMemoryStream.WriteAsync(System.Byte[],System.Int32,System.Int32,System.Threading.CancellationToken)
- uid: System.IO.UnmanagedMemoryStream.WriteByte(System.Byte)
  parent: System.IO.UnmanagedMemoryStream
  isExternal: true
  name: WriteByte(Byte)
  fullName: System.IO.UnmanagedMemoryStream.WriteByte(System.Byte)
  spec.csharp:
  - uid: System.IO.UnmanagedMemoryStream.WriteByte(System.Byte)
    name: WriteByte
    fullName: System.IO.UnmanagedMemoryStream.WriteByte
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Byte
    name: Byte
    fullName: System.Byte
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.IO.UnmanagedMemoryStream.WriteByte(System.Byte)
    name: WriteByte
    fullName: System.IO.UnmanagedMemoryStream.WriteByte
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Byte
    name: Byte
    fullName: System.Byte
    isExternal: true
  - name: )
    fullName: )
  nameWithType: UnmanagedMemoryStream.WriteByte(Byte)
  commentId: M:System.IO.UnmanagedMemoryStream.WriteByte(System.Byte)
- uid: System.IO.UnmanagedMemoryStream.CanRead
  parent: System.IO.UnmanagedMemoryStream
  isExternal: true
  name: CanRead
  fullName: System.IO.UnmanagedMemoryStream.CanRead
  nameWithType: UnmanagedMemoryStream.CanRead
  commentId: P:System.IO.UnmanagedMemoryStream.CanRead
- uid: System.IO.UnmanagedMemoryStream.CanSeek
  parent: System.IO.UnmanagedMemoryStream
  isExternal: true
  name: CanSeek
  fullName: System.IO.UnmanagedMemoryStream.CanSeek
  nameWithType: UnmanagedMemoryStream.CanSeek
  commentId: P:System.IO.UnmanagedMemoryStream.CanSeek
- uid: System.IO.UnmanagedMemoryStream.CanWrite
  parent: System.IO.UnmanagedMemoryStream
  isExternal: true
  name: CanWrite
  fullName: System.IO.UnmanagedMemoryStream.CanWrite
  nameWithType: UnmanagedMemoryStream.CanWrite
  commentId: P:System.IO.UnmanagedMemoryStream.CanWrite
- uid: System.IO.UnmanagedMemoryStream.Length
  parent: System.IO.UnmanagedMemoryStream
  isExternal: true
  name: Length
  fullName: System.IO.UnmanagedMemoryStream.Length
  nameWithType: UnmanagedMemoryStream.Length
  commentId: P:System.IO.UnmanagedMemoryStream.Length
- uid: System.IO.UnmanagedMemoryStream.Capacity
  parent: System.IO.UnmanagedMemoryStream
  isExternal: true
  name: Capacity
  fullName: System.IO.UnmanagedMemoryStream.Capacity
  nameWithType: UnmanagedMemoryStream.Capacity
  commentId: P:System.IO.UnmanagedMemoryStream.Capacity
- uid: System.IO.UnmanagedMemoryStream.Position
  parent: System.IO.UnmanagedMemoryStream
  isExternal: true
  name: Position
  fullName: System.IO.UnmanagedMemoryStream.Position
  nameWithType: UnmanagedMemoryStream.Position
  commentId: P:System.IO.UnmanagedMemoryStream.Position
- uid: System.IO.UnmanagedMemoryStream.PositionPointer
  parent: System.IO.UnmanagedMemoryStream
  isExternal: true
  name: PositionPointer
  fullName: System.IO.UnmanagedMemoryStream.PositionPointer
  nameWithType: UnmanagedMemoryStream.PositionPointer
  commentId: P:System.IO.UnmanagedMemoryStream.PositionPointer
- uid: System.IO.Stream.Null
  parent: System.IO.Stream
  isExternal: false
  fullName: System.IO.Stream.Null
  nameWithType: Stream.Null
  commentId: F:System.IO.Stream.Null
- uid: System.IO.Stream.CopyToAsync(System.IO.Stream)
  parent: System.IO.Stream
  isExternal: false
  name: CopyToAsync(Stream)
  fullName: System.IO.Stream.CopyToAsync(System.IO.Stream)
  spec.csharp:
  - uid: System.IO.Stream.CopyToAsync(System.IO.Stream)
    name: CopyToAsync
    fullName: System.IO.Stream.CopyToAsync
  - name: (
    fullName: (
  - uid: System.IO.Stream
    name: Stream
    fullName: System.IO.Stream
  - name: )
    fullName: )
  spec.vb:
  - uid: System.IO.Stream.CopyToAsync(System.IO.Stream)
    name: CopyToAsync
    fullName: System.IO.Stream.CopyToAsync
  - name: (
    fullName: (
  - uid: System.IO.Stream
    name: Stream
    fullName: System.IO.Stream
  - name: )
    fullName: )
  nameWithType: Stream.CopyToAsync(Stream)
  commentId: M:System.IO.Stream.CopyToAsync(System.IO.Stream)
- uid: System.IO.Stream.CopyToAsync(System.IO.Stream,System.Int32)
  parent: System.IO.Stream
  isExternal: true
  name: CopyToAsync(Stream, Int32)
  fullName: System.IO.Stream.CopyToAsync(System.IO.Stream, System.Int32)
  spec.csharp:
  - uid: System.IO.Stream.CopyToAsync(System.IO.Stream,System.Int32)
    name: CopyToAsync
    fullName: System.IO.Stream.CopyToAsync
  - name: (
    fullName: (
  - uid: System.IO.Stream
    name: Stream
    fullName: System.IO.Stream
  - name: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.IO.Stream.CopyToAsync(System.IO.Stream,System.Int32)
    name: CopyToAsync
    fullName: System.IO.Stream.CopyToAsync
  - name: (
    fullName: (
  - uid: System.IO.Stream
    name: Stream
    fullName: System.IO.Stream
  - name: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    fullName: )
  nameWithType: Stream.CopyToAsync(Stream, Int32)
  commentId: M:System.IO.Stream.CopyToAsync(System.IO.Stream,System.Int32)
- uid: System.IO.Stream.CopyToAsync(System.IO.Stream,System.Int32,System.Threading.CancellationToken)
  parent: System.IO.Stream
  isExternal: true
  name: CopyToAsync(Stream, Int32, CancellationToken)
  fullName: System.IO.Stream.CopyToAsync(System.IO.Stream, System.Int32, System.Threading.CancellationToken)
  spec.csharp:
  - uid: System.IO.Stream.CopyToAsync(System.IO.Stream,System.Int32,System.Threading.CancellationToken)
    name: CopyToAsync
    fullName: System.IO.Stream.CopyToAsync
  - name: (
    fullName: (
  - uid: System.IO.Stream
    name: Stream
    fullName: System.IO.Stream
  - name: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.IO.Stream.CopyToAsync(System.IO.Stream,System.Int32,System.Threading.CancellationToken)
    name: CopyToAsync
    fullName: System.IO.Stream.CopyToAsync
  - name: (
    fullName: (
  - uid: System.IO.Stream
    name: Stream
    fullName: System.IO.Stream
  - name: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    fullName: )
  nameWithType: Stream.CopyToAsync(Stream, Int32, CancellationToken)
  commentId: M:System.IO.Stream.CopyToAsync(System.IO.Stream,System.Int32,System.Threading.CancellationToken)
- uid: System.IO.Stream.CopyTo(System.IO.Stream)
  parent: System.IO.Stream
  isExternal: false
  name: CopyTo(Stream)
  fullName: System.IO.Stream.CopyTo(System.IO.Stream)
  spec.csharp:
  - uid: System.IO.Stream.CopyTo(System.IO.Stream)
    name: CopyTo
    fullName: System.IO.Stream.CopyTo
  - name: (
    fullName: (
  - uid: System.IO.Stream
    name: Stream
    fullName: System.IO.Stream
  - name: )
    fullName: )
  spec.vb:
  - uid: System.IO.Stream.CopyTo(System.IO.Stream)
    name: CopyTo
    fullName: System.IO.Stream.CopyTo
  - name: (
    fullName: (
  - uid: System.IO.Stream
    name: Stream
    fullName: System.IO.Stream
  - name: )
    fullName: )
  nameWithType: Stream.CopyTo(Stream)
  commentId: M:System.IO.Stream.CopyTo(System.IO.Stream)
- uid: System.IO.Stream.CopyTo(System.IO.Stream,System.Int32)
  parent: System.IO.Stream
  isExternal: true
  name: CopyTo(Stream, Int32)
  fullName: System.IO.Stream.CopyTo(System.IO.Stream, System.Int32)
  spec.csharp:
  - uid: System.IO.Stream.CopyTo(System.IO.Stream,System.Int32)
    name: CopyTo
    fullName: System.IO.Stream.CopyTo
  - name: (
    fullName: (
  - uid: System.IO.Stream
    name: Stream
    fullName: System.IO.Stream
  - name: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.IO.Stream.CopyTo(System.IO.Stream,System.Int32)
    name: CopyTo
    fullName: System.IO.Stream.CopyTo
  - name: (
    fullName: (
  - uid: System.IO.Stream
    name: Stream
    fullName: System.IO.Stream
  - name: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    fullName: )
  nameWithType: Stream.CopyTo(Stream, Int32)
  commentId: M:System.IO.Stream.CopyTo(System.IO.Stream,System.Int32)
- uid: System.IO.Stream.Close
  parent: System.IO.Stream
  isExternal: true
  name: Close()
  fullName: System.IO.Stream.Close()
  spec.csharp:
  - uid: System.IO.Stream.Close
    name: Close
    fullName: System.IO.Stream.Close
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.IO.Stream.Close
    name: Close
    fullName: System.IO.Stream.Close
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  nameWithType: Stream.Close()
  commentId: M:System.IO.Stream.Close
- uid: System.IO.Stream.Dispose
  parent: System.IO.Stream
  isExternal: false
  name: Dispose()
  fullName: System.IO.Stream.Dispose()
  spec.csharp:
  - uid: System.IO.Stream.Dispose
    name: Dispose
    fullName: System.IO.Stream.Dispose
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.IO.Stream.Dispose
    name: Dispose
    fullName: System.IO.Stream.Dispose
  - name: (
    fullName: (
  - name: )
    fullName: )
  nameWithType: Stream.Dispose()
  commentId: M:System.IO.Stream.Dispose
- uid: System.IO.Stream.FlushAsync
  parent: System.IO.Stream
  isExternal: false
  name: FlushAsync()
  fullName: System.IO.Stream.FlushAsync()
  spec.csharp:
  - uid: System.IO.Stream.FlushAsync
    name: FlushAsync
    fullName: System.IO.Stream.FlushAsync
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.IO.Stream.FlushAsync
    name: FlushAsync
    fullName: System.IO.Stream.FlushAsync
  - name: (
    fullName: (
  - name: )
    fullName: )
  nameWithType: Stream.FlushAsync()
  commentId: M:System.IO.Stream.FlushAsync
- uid: System.IO.Stream.CreateWaitHandle
  parent: System.IO.Stream
  isExternal: true
  name: CreateWaitHandle()
  fullName: System.IO.Stream.CreateWaitHandle()
  spec.csharp:
  - uid: System.IO.Stream.CreateWaitHandle
    name: CreateWaitHandle
    fullName: System.IO.Stream.CreateWaitHandle
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.IO.Stream.CreateWaitHandle
    name: CreateWaitHandle
    fullName: System.IO.Stream.CreateWaitHandle
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  nameWithType: Stream.CreateWaitHandle()
  commentId: M:System.IO.Stream.CreateWaitHandle
- uid: System.IO.Stream.BeginRead(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)
  parent: System.IO.Stream
  isExternal: true
  name: BeginRead(Byte[], Int32, Int32, AsyncCallback, Object)
  fullName: System.IO.Stream.BeginRead(System.Byte[], System.Int32, System.Int32, System.AsyncCallback, System.Object)
  fullname.vb: System.IO.Stream.BeginRead(System.Byte(), System.Int32, System.Int32, System.AsyncCallback, System.Object)
  name.vb: BeginRead(Byte(), Int32, Int32, AsyncCallback, Object)
  spec.csharp:
  - uid: System.IO.Stream.BeginRead(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)
    name: BeginRead
    fullName: System.IO.Stream.BeginRead
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Byte
    name: Byte
    fullName: System.Byte
    isExternal: true
  - name: '[]'
    fullName: '[]'
  - name: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.AsyncCallback
    name: AsyncCallback
    fullName: System.AsyncCallback
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.IO.Stream.BeginRead(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)
    name: BeginRead
    fullName: System.IO.Stream.BeginRead
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Byte
    name: Byte
    fullName: System.Byte
    isExternal: true
  - name: ()
    fullName: ()
  - name: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.AsyncCallback
    name: AsyncCallback
    fullName: System.AsyncCallback
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
  nameWithType: Stream.BeginRead(Byte[], Int32, Int32, AsyncCallback, Object)
  nameWithType.vb: Stream.BeginRead(Byte(), Int32, Int32, AsyncCallback, Object)
  commentId: M:System.IO.Stream.BeginRead(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)
- uid: System.IO.Stream.EndRead(System.IAsyncResult)
  parent: System.IO.Stream
  isExternal: true
  name: EndRead(IAsyncResult)
  fullName: System.IO.Stream.EndRead(System.IAsyncResult)
  spec.csharp:
  - uid: System.IO.Stream.EndRead(System.IAsyncResult)
    name: EndRead
    fullName: System.IO.Stream.EndRead
    isExternal: true
  - name: (
    fullName: (
  - uid: System.IAsyncResult
    name: IAsyncResult
    fullName: System.IAsyncResult
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.IO.Stream.EndRead(System.IAsyncResult)
    name: EndRead
    fullName: System.IO.Stream.EndRead
    isExternal: true
  - name: (
    fullName: (
  - uid: System.IAsyncResult
    name: IAsyncResult
    fullName: System.IAsyncResult
    isExternal: true
  - name: )
    fullName: )
  nameWithType: Stream.EndRead(IAsyncResult)
  commentId: M:System.IO.Stream.EndRead(System.IAsyncResult)
- uid: System.IO.Stream.ReadAsync(System.Byte[],System.Int32,System.Int32)
  parent: System.IO.Stream
  isExternal: true
  name: ReadAsync(Byte[], Int32, Int32)
  fullName: System.IO.Stream.ReadAsync(System.Byte[], System.Int32, System.Int32)
  fullname.vb: System.IO.Stream.ReadAsync(System.Byte(), System.Int32, System.Int32)
  name.vb: ReadAsync(Byte(), Int32, Int32)
  spec.csharp:
  - uid: System.IO.Stream.ReadAsync(System.Byte[],System.Int32,System.Int32)
    name: ReadAsync
    fullName: System.IO.Stream.ReadAsync
  - name: (
    fullName: (
  - uid: System.Byte
    name: Byte
    fullName: System.Byte
    isExternal: true
  - name: '[]'
    fullName: '[]'
  - name: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.IO.Stream.ReadAsync(System.Byte[],System.Int32,System.Int32)
    name: ReadAsync
    fullName: System.IO.Stream.ReadAsync
  - name: (
    fullName: (
  - uid: System.Byte
    name: Byte
    fullName: System.Byte
    isExternal: true
  - name: ()
    fullName: ()
  - name: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    fullName: )
  nameWithType: Stream.ReadAsync(Byte[], Int32, Int32)
  nameWithType.vb: Stream.ReadAsync(Byte(), Int32, Int32)
  commentId: M:System.IO.Stream.ReadAsync(System.Byte[],System.Int32,System.Int32)
- uid: System.IO.Stream.BeginWrite(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)
  parent: System.IO.Stream
  isExternal: true
  name: BeginWrite(Byte[], Int32, Int32, AsyncCallback, Object)
  fullName: System.IO.Stream.BeginWrite(System.Byte[], System.Int32, System.Int32, System.AsyncCallback, System.Object)
  fullname.vb: System.IO.Stream.BeginWrite(System.Byte(), System.Int32, System.Int32, System.AsyncCallback, System.Object)
  name.vb: BeginWrite(Byte(), Int32, Int32, AsyncCallback, Object)
  spec.csharp:
  - uid: System.IO.Stream.BeginWrite(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)
    name: BeginWrite
    fullName: System.IO.Stream.BeginWrite
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Byte
    name: Byte
    fullName: System.Byte
    isExternal: true
  - name: '[]'
    fullName: '[]'
  - name: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.AsyncCallback
    name: AsyncCallback
    fullName: System.AsyncCallback
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.IO.Stream.BeginWrite(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)
    name: BeginWrite
    fullName: System.IO.Stream.BeginWrite
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Byte
    name: Byte
    fullName: System.Byte
    isExternal: true
  - name: ()
    fullName: ()
  - name: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.AsyncCallback
    name: AsyncCallback
    fullName: System.AsyncCallback
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
  nameWithType: Stream.BeginWrite(Byte[], Int32, Int32, AsyncCallback, Object)
  nameWithType.vb: Stream.BeginWrite(Byte(), Int32, Int32, AsyncCallback, Object)
  commentId: M:System.IO.Stream.BeginWrite(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)
- uid: System.IO.Stream.EndWrite(System.IAsyncResult)
  parent: System.IO.Stream
  isExternal: true
  name: EndWrite(IAsyncResult)
  fullName: System.IO.Stream.EndWrite(System.IAsyncResult)
  spec.csharp:
  - uid: System.IO.Stream.EndWrite(System.IAsyncResult)
    name: EndWrite
    fullName: System.IO.Stream.EndWrite
    isExternal: true
  - name: (
    fullName: (
  - uid: System.IAsyncResult
    name: IAsyncResult
    fullName: System.IAsyncResult
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.IO.Stream.EndWrite(System.IAsyncResult)
    name: EndWrite
    fullName: System.IO.Stream.EndWrite
    isExternal: true
  - name: (
    fullName: (
  - uid: System.IAsyncResult
    name: IAsyncResult
    fullName: System.IAsyncResult
    isExternal: true
  - name: )
    fullName: )
  nameWithType: Stream.EndWrite(IAsyncResult)
  commentId: M:System.IO.Stream.EndWrite(System.IAsyncResult)
- uid: System.IO.Stream.WriteAsync(System.Byte[],System.Int32,System.Int32)
  parent: System.IO.Stream
  isExternal: true
  name: WriteAsync(Byte[], Int32, Int32)
  fullName: System.IO.Stream.WriteAsync(System.Byte[], System.Int32, System.Int32)
  fullname.vb: System.IO.Stream.WriteAsync(System.Byte(), System.Int32, System.Int32)
  name.vb: WriteAsync(Byte(), Int32, Int32)
  spec.csharp:
  - uid: System.IO.Stream.WriteAsync(System.Byte[],System.Int32,System.Int32)
    name: WriteAsync
    fullName: System.IO.Stream.WriteAsync
  - name: (
    fullName: (
  - uid: System.Byte
    name: Byte
    fullName: System.Byte
    isExternal: true
  - name: '[]'
    fullName: '[]'
  - name: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.IO.Stream.WriteAsync(System.Byte[],System.Int32,System.Int32)
    name: WriteAsync
    fullName: System.IO.Stream.WriteAsync
  - name: (
    fullName: (
  - uid: System.Byte
    name: Byte
    fullName: System.Byte
    isExternal: true
  - name: ()
    fullName: ()
  - name: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    fullName: )
  nameWithType: Stream.WriteAsync(Byte[], Int32, Int32)
  nameWithType.vb: Stream.WriteAsync(Byte(), Int32, Int32)
  commentId: M:System.IO.Stream.WriteAsync(System.Byte[],System.Int32,System.Int32)
- uid: System.IO.Stream.Synchronized(System.IO.Stream)
  parent: System.IO.Stream
  isExternal: true
  name: Synchronized(Stream)
  fullName: System.IO.Stream.Synchronized(System.IO.Stream)
  spec.csharp:
  - uid: System.IO.Stream.Synchronized(System.IO.Stream)
    name: Synchronized
    fullName: System.IO.Stream.Synchronized
    isExternal: true
  - name: (
    fullName: (
  - uid: System.IO.Stream
    name: Stream
    fullName: System.IO.Stream
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.IO.Stream.Synchronized(System.IO.Stream)
    name: Synchronized
    fullName: System.IO.Stream.Synchronized
    isExternal: true
  - name: (
    fullName: (
  - uid: System.IO.Stream
    name: Stream
    fullName: System.IO.Stream
    isExternal: true
  - name: )
    fullName: )
  nameWithType: Stream.Synchronized(Stream)
  commentId: M:System.IO.Stream.Synchronized(System.IO.Stream)
- uid: System.IO.Stream.ObjectInvariant
  parent: System.IO.Stream
  isExternal: true
  name: ObjectInvariant()
  fullName: System.IO.Stream.ObjectInvariant()
  spec.csharp:
  - uid: System.IO.Stream.ObjectInvariant
    name: ObjectInvariant
    fullName: System.IO.Stream.ObjectInvariant
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.IO.Stream.ObjectInvariant
    name: ObjectInvariant
    fullName: System.IO.Stream.ObjectInvariant
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  nameWithType: Stream.ObjectInvariant()
  commentId: M:System.IO.Stream.ObjectInvariant
- uid: System.IO.Stream.CanTimeout
  parent: System.IO.Stream
  isExternal: false
  name: CanTimeout
  fullName: System.IO.Stream.CanTimeout
  nameWithType: Stream.CanTimeout
  commentId: P:System.IO.Stream.CanTimeout
- uid: System.IO.Stream.ReadTimeout
  parent: System.IO.Stream
  isExternal: false
  name: ReadTimeout
  fullName: System.IO.Stream.ReadTimeout
  nameWithType: Stream.ReadTimeout
  commentId: P:System.IO.Stream.ReadTimeout
- uid: System.IO.Stream.WriteTimeout
  parent: System.IO.Stream
  isExternal: false
  name: WriteTimeout
  fullName: System.IO.Stream.WriteTimeout
  nameWithType: Stream.WriteTimeout
  commentId: P:System.IO.Stream.WriteTimeout
- uid: System.MarshalByRefObject.MemberwiseClone(System.Boolean)
  parent: System.MarshalByRefObject
  isExternal: true
  name: MemberwiseClone(Boolean)
  fullName: System.MarshalByRefObject.MemberwiseClone(System.Boolean)
  spec.csharp:
  - uid: System.MarshalByRefObject.MemberwiseClone(System.Boolean)
    name: MemberwiseClone
    fullName: System.MarshalByRefObject.MemberwiseClone
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Boolean
    name: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.MarshalByRefObject.MemberwiseClone(System.Boolean)
    name: MemberwiseClone
    fullName: System.MarshalByRefObject.MemberwiseClone
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Boolean
    name: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    fullName: )
  nameWithType: MarshalByRefObject.MemberwiseClone(Boolean)
  commentId: M:System.MarshalByRefObject.MemberwiseClone(System.Boolean)
- uid: System.MarshalByRefObject.GetLifetimeService
  parent: System.MarshalByRefObject
  isExternal: true
  name: GetLifetimeService()
  fullName: System.MarshalByRefObject.GetLifetimeService()
  spec.csharp:
  - uid: System.MarshalByRefObject.GetLifetimeService
    name: GetLifetimeService
    fullName: System.MarshalByRefObject.GetLifetimeService
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.MarshalByRefObject.GetLifetimeService
    name: GetLifetimeService
    fullName: System.MarshalByRefObject.GetLifetimeService
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  nameWithType: MarshalByRefObject.GetLifetimeService()
  commentId: M:System.MarshalByRefObject.GetLifetimeService
- uid: System.MarshalByRefObject.InitializeLifetimeService
  parent: System.MarshalByRefObject
  isExternal: true
  name: InitializeLifetimeService()
  fullName: System.MarshalByRefObject.InitializeLifetimeService()
  spec.csharp:
  - uid: System.MarshalByRefObject.InitializeLifetimeService
    name: InitializeLifetimeService
    fullName: System.MarshalByRefObject.InitializeLifetimeService
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.MarshalByRefObject.InitializeLifetimeService
    name: InitializeLifetimeService
    fullName: System.MarshalByRefObject.InitializeLifetimeService
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  nameWithType: MarshalByRefObject.InitializeLifetimeService()
  commentId: M:System.MarshalByRefObject.InitializeLifetimeService
- uid: System.MarshalByRefObject.CreateObjRef(System.Type)
  parent: System.MarshalByRefObject
  isExternal: true
  name: CreateObjRef(Type)
  fullName: System.MarshalByRefObject.CreateObjRef(System.Type)
  spec.csharp:
  - uid: System.MarshalByRefObject.CreateObjRef(System.Type)
    name: CreateObjRef
    fullName: System.MarshalByRefObject.CreateObjRef
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Type
    name: Type
    fullName: System.Type
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.MarshalByRefObject.CreateObjRef(System.Type)
    name: CreateObjRef
    fullName: System.MarshalByRefObject.CreateObjRef
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Type
    name: Type
    fullName: System.Type
    isExternal: true
  - name: )
    fullName: )
  nameWithType: MarshalByRefObject.CreateObjRef(Type)
  commentId: M:System.MarshalByRefObject.CreateObjRef(System.Type)
- uid: System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  nameWithType: Object.ToString()
  commentId: M:System.Object.ToString
- uid: System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
  nameWithType: Object.Equals(Object)
  commentId: M:System.Object.Equals(System.Object)
- uid: System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
  nameWithType: Object.Equals(Object, Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
  nameWithType: Object.ReferenceEquals(Object, Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
- uid: System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  nameWithType: Object.GetHashCode()
  commentId: M:System.Object.GetHashCode
- uid: System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  nameWithType: Object.GetType()
  commentId: M:System.Object.GetType
- uid: System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  nameWithType: Object.MemberwiseClone()
  commentId: M:System.Object.MemberwiseClone
- uid: System.IO.Stream.System.IO.WindowsRuntimeStreamExtensions.AsInputStream
  parent: System.IO.WindowsRuntimeStreamExtensions
  definition: System.IO.WindowsRuntimeStreamExtensions.AsInputStream(System.IO.Stream)
  name: AsInputStream()
  fullName: System.IO.WindowsRuntimeStreamExtensions.AsInputStream()
  spec.csharp:
  - uid: System.IO.WindowsRuntimeStreamExtensions.AsInputStream
    name: AsInputStream
    fullName: System.IO.WindowsRuntimeStreamExtensions.AsInputStream
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.IO.WindowsRuntimeStreamExtensions.AsInputStream
    name: AsInputStream
    fullName: System.IO.WindowsRuntimeStreamExtensions.AsInputStream
  - name: (
    fullName: (
  - name: )
    fullName: )
  nameWithType: WindowsRuntimeStreamExtensions.AsInputStream()
  commentId: M:System.IO.WindowsRuntimeStreamExtensions.AsInputStream(System.IO.Stream)
- uid: System.IO.Stream.System.IO.WindowsRuntimeStreamExtensions.AsOutputStream
  parent: System.IO.WindowsRuntimeStreamExtensions
  definition: System.IO.WindowsRuntimeStreamExtensions.AsOutputStream(System.IO.Stream)
  name: AsOutputStream()
  fullName: System.IO.WindowsRuntimeStreamExtensions.AsOutputStream()
  spec.csharp:
  - uid: System.IO.WindowsRuntimeStreamExtensions.AsOutputStream
    name: AsOutputStream
    fullName: System.IO.WindowsRuntimeStreamExtensions.AsOutputStream
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.IO.WindowsRuntimeStreamExtensions.AsOutputStream
    name: AsOutputStream
    fullName: System.IO.WindowsRuntimeStreamExtensions.AsOutputStream
  - name: (
    fullName: (
  - name: )
    fullName: )
  nameWithType: WindowsRuntimeStreamExtensions.AsOutputStream()
  commentId: M:System.IO.WindowsRuntimeStreamExtensions.AsOutputStream(System.IO.Stream)
- uid: System.IO.Stream.System.IO.WindowsRuntimeStreamExtensions.AsRandomAccessStream
  parent: System.IO.WindowsRuntimeStreamExtensions
  definition: System.IO.WindowsRuntimeStreamExtensions.AsRandomAccessStream(System.IO.Stream)
  name: AsRandomAccessStream()
  fullName: System.IO.WindowsRuntimeStreamExtensions.AsRandomAccessStream()
  spec.csharp:
  - uid: System.IO.WindowsRuntimeStreamExtensions.AsRandomAccessStream
    name: AsRandomAccessStream
    fullName: System.IO.WindowsRuntimeStreamExtensions.AsRandomAccessStream
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.IO.WindowsRuntimeStreamExtensions.AsRandomAccessStream
    name: AsRandomAccessStream
    fullName: System.IO.WindowsRuntimeStreamExtensions.AsRandomAccessStream
  - name: (
    fullName: (
  - name: )
    fullName: )
  nameWithType: WindowsRuntimeStreamExtensions.AsRandomAccessStream()
  commentId: M:System.IO.WindowsRuntimeStreamExtensions.AsRandomAccessStream(System.IO.Stream)
- uid: System
  isExternal: false
  name: System
  fullName: System
  nameWithType: System
  commentId: N:System
- uid: System.IO
  isExternal: false
  name: System.IO
  fullName: System.IO
  nameWithType: System.IO
  commentId: N:System.IO
- uid: System.IO.WindowsRuntimeStreamExtensions.AsInputStream(System.IO.Stream)
  isExternal: true
  name: AsInputStream(Stream)
  fullName: System.IO.WindowsRuntimeStreamExtensions.AsInputStream(System.IO.Stream)
  spec.csharp:
  - uid: System.IO.WindowsRuntimeStreamExtensions.AsInputStream(System.IO.Stream)
    name: AsInputStream
    fullName: System.IO.WindowsRuntimeStreamExtensions.AsInputStream
  - name: (
    fullName: (
  - uid: System.IO.Stream
    name: Stream
    fullName: System.IO.Stream
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.IO.WindowsRuntimeStreamExtensions.AsInputStream(System.IO.Stream)
    name: AsInputStream
    fullName: System.IO.WindowsRuntimeStreamExtensions.AsInputStream
  - name: (
    fullName: (
  - uid: System.IO.Stream
    name: Stream
    fullName: System.IO.Stream
    isExternal: true
  - name: )
    fullName: )
  nameWithType: WindowsRuntimeStreamExtensions.AsInputStream(Stream)
  commentId: M:System.IO.WindowsRuntimeStreamExtensions.AsInputStream(System.IO.Stream)
- uid: System.IO.WindowsRuntimeStreamExtensions
  parent: System.IO
  isExternal: false
  name: WindowsRuntimeStreamExtensions
  fullName: System.IO.WindowsRuntimeStreamExtensions
  nameWithType: WindowsRuntimeStreamExtensions
  commentId: T:System.IO.WindowsRuntimeStreamExtensions
- uid: System.IO.WindowsRuntimeStreamExtensions.AsOutputStream(System.IO.Stream)
  isExternal: true
  name: AsOutputStream(Stream)
  fullName: System.IO.WindowsRuntimeStreamExtensions.AsOutputStream(System.IO.Stream)
  spec.csharp:
  - uid: System.IO.WindowsRuntimeStreamExtensions.AsOutputStream(System.IO.Stream)
    name: AsOutputStream
    fullName: System.IO.WindowsRuntimeStreamExtensions.AsOutputStream
  - name: (
    fullName: (
  - uid: System.IO.Stream
    name: Stream
    fullName: System.IO.Stream
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.IO.WindowsRuntimeStreamExtensions.AsOutputStream(System.IO.Stream)
    name: AsOutputStream
    fullName: System.IO.WindowsRuntimeStreamExtensions.AsOutputStream
  - name: (
    fullName: (
  - uid: System.IO.Stream
    name: Stream
    fullName: System.IO.Stream
    isExternal: true
  - name: )
    fullName: )
  nameWithType: WindowsRuntimeStreamExtensions.AsOutputStream(Stream)
  commentId: M:System.IO.WindowsRuntimeStreamExtensions.AsOutputStream(System.IO.Stream)
- uid: System.IO.WindowsRuntimeStreamExtensions.AsRandomAccessStream(System.IO.Stream)
  isExternal: true
  name: AsRandomAccessStream(Stream)
  fullName: System.IO.WindowsRuntimeStreamExtensions.AsRandomAccessStream(System.IO.Stream)
  spec.csharp:
  - uid: System.IO.WindowsRuntimeStreamExtensions.AsRandomAccessStream(System.IO.Stream)
    name: AsRandomAccessStream
    fullName: System.IO.WindowsRuntimeStreamExtensions.AsRandomAccessStream
  - name: (
    fullName: (
  - uid: System.IO.Stream
    name: Stream
    fullName: System.IO.Stream
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.IO.WindowsRuntimeStreamExtensions.AsRandomAccessStream(System.IO.Stream)
    name: AsRandomAccessStream
    fullName: System.IO.WindowsRuntimeStreamExtensions.AsRandomAccessStream
  - name: (
    fullName: (
  - uid: System.IO.Stream
    name: Stream
    fullName: System.IO.Stream
    isExternal: true
  - name: )
    fullName: )
  nameWithType: WindowsRuntimeStreamExtensions.AsRandomAccessStream(Stream)
  commentId: M:System.IO.WindowsRuntimeStreamExtensions.AsRandomAccessStream(System.IO.Stream)
- uid: System.Int64
  parent: System
  isExternal: false
  name: Int64
  fullName: System.Int64
  nameWithType: Int64
  commentId: T:System.Int64
- uid: Microsoft.Win32.SafeHandles.SafeMemoryMappedViewHandle
  parent: Microsoft.Win32.SafeHandles
  isExternal: false
  name: SafeMemoryMappedViewHandle
  fullName: Microsoft.Win32.SafeHandles.SafeMemoryMappedViewHandle
  nameWithType: SafeMemoryMappedViewHandle
  commentId: T:Microsoft.Win32.SafeHandles.SafeMemoryMappedViewHandle
- uid: Microsoft.Win32.SafeHandles
  isExternal: false
  name: Microsoft.Win32.SafeHandles
  fullName: Microsoft.Win32.SafeHandles
  nameWithType: Microsoft.Win32.SafeHandles
  commentId: N:Microsoft.Win32.SafeHandles
- uid: System.IO.UnmanagedMemoryStream.Dispose(System.Boolean)
  parent: System.IO.UnmanagedMemoryStream
  isExternal: true
  name: Dispose(Boolean)
  fullName: System.IO.UnmanagedMemoryStream.Dispose(System.Boolean)
  spec.csharp:
  - uid: System.IO.UnmanagedMemoryStream.Dispose(System.Boolean)
    name: Dispose
    fullName: System.IO.UnmanagedMemoryStream.Dispose
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Boolean
    name: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.IO.UnmanagedMemoryStream.Dispose(System.Boolean)
    name: Dispose
    fullName: System.IO.UnmanagedMemoryStream.Dispose
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Boolean
    name: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    fullName: )
  nameWithType: UnmanagedMemoryStream.Dispose(Boolean)
  commentId: M:System.IO.UnmanagedMemoryStream.Dispose(System.Boolean)
- uid: System.Boolean
  parent: System
  isExternal: false
  name: Boolean
  fullName: System.Boolean
  nameWithType: Boolean
  commentId: T:System.Boolean
- uid: System.IO.UnmanagedMemoryStream.Flush
  parent: System.IO.UnmanagedMemoryStream
  isExternal: true
  name: Flush()
  fullName: System.IO.UnmanagedMemoryStream.Flush()
  spec.csharp:
  - uid: System.IO.UnmanagedMemoryStream.Flush
    name: Flush
    fullName: System.IO.UnmanagedMemoryStream.Flush
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.IO.UnmanagedMemoryStream.Flush
    name: Flush
    fullName: System.IO.UnmanagedMemoryStream.Flush
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  nameWithType: UnmanagedMemoryStream.Flush()
  commentId: M:System.IO.UnmanagedMemoryStream.Flush
- uid: System.IO.UnmanagedMemoryStream.SetLength(System.Int64)
  parent: System.IO.UnmanagedMemoryStream
  isExternal: true
  name: SetLength(Int64)
  fullName: System.IO.UnmanagedMemoryStream.SetLength(System.Int64)
  spec.csharp:
  - uid: System.IO.UnmanagedMemoryStream.SetLength(System.Int64)
    name: SetLength
    fullName: System.IO.UnmanagedMemoryStream.SetLength
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Int64
    name: Int64
    fullName: System.Int64
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.IO.UnmanagedMemoryStream.SetLength(System.Int64)
    name: SetLength
    fullName: System.IO.UnmanagedMemoryStream.SetLength
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Int64
    name: Int64
    fullName: System.Int64
    isExternal: true
  - name: )
    fullName: )
  nameWithType: UnmanagedMemoryStream.SetLength(Int64)
  commentId: M:System.IO.UnmanagedMemoryStream.SetLength(System.Int64)
- uid: System.InvalidOperationException
  parent: System
  isExternal: false
  name: InvalidOperationException
  fullName: System.InvalidOperationException
  nameWithType: InvalidOperationException
  commentId: T:System.InvalidOperationException
- uid: System.NotSupportedException
  parent: System
  isExternal: false
  name: NotSupportedException
  fullName: System.NotSupportedException
  nameWithType: NotSupportedException
  commentId: T:System.NotSupportedException
