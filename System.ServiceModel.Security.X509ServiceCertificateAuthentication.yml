### YamlMime:ManagedReference
items:
- uid: System.ServiceModel.Security.X509ServiceCertificateAuthentication
  commentId: T:System.ServiceModel.Security.X509ServiceCertificateAuthentication
  id: X509ServiceCertificateAuthentication
  parent: System.ServiceModel.Security
  children:
  - System.ServiceModel.Security.X509ServiceCertificateAuthentication.#ctor
  - System.ServiceModel.Security.X509ServiceCertificateAuthentication.CertificateValidationMode
  - System.ServiceModel.Security.X509ServiceCertificateAuthentication.CustomCertificateValidator
  - System.ServiceModel.Security.X509ServiceCertificateAuthentication.RevocationMode
  - System.ServiceModel.Security.X509ServiceCertificateAuthentication.TrustedStoreLocation
  langs:
  - csharp
  - vb
  name: X509ServiceCertificateAuthentication
  nameWithType: X509ServiceCertificateAuthentication
  fullName: System.ServiceModel.Security.X509ServiceCertificateAuthentication
  type: Class
  source:
    remote:
      path: src/System.Private.ServiceModel/src/System/ServiceModel/Security/X509ServiceCertificateAuthentication.cs
      branch: master
      repo: https://github.com/dotnet/wcf.git
    id: X509ServiceCertificateAuthentication
    path: src/System.Private.ServiceModel/src/System/ServiceModel/Security/X509ServiceCertificateAuthentication.cs
    startLine: 11
  assemblies:
  - System.ServiceModel.Primitives
  namespace: System.ServiceModel.Security
  summary: "\n<p>Represents the settings used by the client proxy to authenticate service certificates that are obtained using SSL/TLS negotiation.</p>\n"
  syntax:
    content: public sealed class X509ServiceCertificateAuthentication
    content.vb: Public NotInheritable Class X509ServiceCertificateAuthentication
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  modifiers.csharp:
  - public
  - sealed
  - class
  modifiers.vb:
  - Public
  - NotInheritable
  - Class
- uid: System.ServiceModel.Security.X509ServiceCertificateAuthentication.#ctor
  commentId: M:System.ServiceModel.Security.X509ServiceCertificateAuthentication.#ctor
  id: '#ctor'
  parent: System.ServiceModel.Security.X509ServiceCertificateAuthentication
  langs:
  - csharp
  - vb
  name: X509ServiceCertificateAuthentication()
  nameWithType: X509ServiceCertificateAuthentication.X509ServiceCertificateAuthentication()
  fullName: System.ServiceModel.Security.X509ServiceCertificateAuthentication.X509ServiceCertificateAuthentication()
  type: Constructor
  source:
    remote:
      path: src/System.Private.ServiceModel/src/System/ServiceModel/Security/X509ServiceCertificateAuthentication.cs
      branch: master
      repo: https://github.com/dotnet/wcf.git
    id: .ctor
    path: src/System.Private.ServiceModel/src/System/ServiceModel/Security/X509ServiceCertificateAuthentication.cs
    startLine: 24
  assemblies:
  - System.ServiceModel.Primitives
  namespace: System.ServiceModel.Security
  summary: "\n<p>Initializes a new instance of the <xref href=\"System.ServiceModel.Security.X509ServiceCertificateAuthentication\" data-throw-if-not-resolved=\"false\"></xref> class.</p>\n"
  syntax:
    content: public X509ServiceCertificateAuthentication()
    content.vb: Public Sub New
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: System.ServiceModel.Security.X509ServiceCertificateAuthentication.CertificateValidationMode
  commentId: P:System.ServiceModel.Security.X509ServiceCertificateAuthentication.CertificateValidationMode
  id: CertificateValidationMode
  parent: System.ServiceModel.Security.X509ServiceCertificateAuthentication
  langs:
  - csharp
  - vb
  name: CertificateValidationMode
  nameWithType: X509ServiceCertificateAuthentication.CertificateValidationMode
  fullName: System.ServiceModel.Security.X509ServiceCertificateAuthentication.CertificateValidationMode
  type: Property
  source:
    remote:
      path: src/System.Private.ServiceModel/src/System/ServiceModel/Security/X509ServiceCertificateAuthentication.cs
      branch: master
      repo: https://github.com/dotnet/wcf.git
    id: CertificateValidationMode
    path: src/System.Private.ServiceModel/src/System/ServiceModel/Security/X509ServiceCertificateAuthentication.cs
    startLine: 52
  assemblies:
  - System.ServiceModel.Primitives
  namespace: System.ServiceModel.Security
  summary: "\n<p>Gets or sets the certificate validation mode.</p>\n"
  syntax:
    content: public X509CertificateValidationMode CertificateValidationMode { get; set; }
    content.vb: Public Property CertificateValidationMode As X509CertificateValidationMode
    parameters: []
    return:
      type: System.ServiceModel.Security.X509CertificateValidationMode
      description: "\n<p>A value from the enumeration in <xref href=\"System.ServiceModel.Security.X509CertificateValidationMode\" data-throw-if-not-resolved=\"false\"></xref>.</p>\n"
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: System.ServiceModel.Security.X509ServiceCertificateAuthentication.CustomCertificateValidator
  commentId: P:System.ServiceModel.Security.X509ServiceCertificateAuthentication.CustomCertificateValidator
  id: CustomCertificateValidator
  parent: System.ServiceModel.Security.X509ServiceCertificateAuthentication
  langs:
  - csharp
  - vb
  name: CustomCertificateValidator
  nameWithType: X509ServiceCertificateAuthentication.CustomCertificateValidator
  fullName: System.ServiceModel.Security.X509ServiceCertificateAuthentication.CustomCertificateValidator
  type: Property
  source:
    remote:
      path: src/System.Private.ServiceModel/src/System/ServiceModel/Security/X509ServiceCertificateAuthentication.cs
      branch: master
      repo: https://github.com/dotnet/wcf.git
    id: CustomCertificateValidator
    path: src/System.Private.ServiceModel/src/System/ServiceModel/Security/X509ServiceCertificateAuthentication.cs
    startLine: 92
  assemblies:
  - System.ServiceModel.Primitives
  namespace: System.ServiceModel.Security
  summary: "\n<p>Gets or sets a custom client certificate validator.</p>\n"
  syntax:
    content: public X509CertificateValidator CustomCertificateValidator { get; set; }
    content.vb: Public Property CustomCertificateValidator As X509CertificateValidator
    parameters: []
    return:
      type: System.IdentityModel.Selectors.X509CertificateValidator
      description: "\n<p>The custom client certificate validator.</p>\n"
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "\n<p>Attempted to set when credential is read-only.</p>\n"
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: System.ServiceModel.Security.X509ServiceCertificateAuthentication.RevocationMode
  commentId: P:System.ServiceModel.Security.X509ServiceCertificateAuthentication.RevocationMode
  id: RevocationMode
  parent: System.ServiceModel.Security.X509ServiceCertificateAuthentication
  langs:
  - csharp
  - vb
  name: RevocationMode
  nameWithType: X509ServiceCertificateAuthentication.RevocationMode
  fullName: System.ServiceModel.Security.X509ServiceCertificateAuthentication.RevocationMode
  type: Property
  source:
    remote:
      path: src/System.Private.ServiceModel/src/System/ServiceModel/Security/X509ServiceCertificateAuthentication.cs
      branch: master
      repo: https://github.com/dotnet/wcf.git
    id: RevocationMode
    path: src/System.Private.ServiceModel/src/System/ServiceModel/Security/X509ServiceCertificateAuthentication.cs
    startLine: 66
  assemblies:
  - System.ServiceModel.Primitives
  namespace: System.ServiceModel.Security
  summary: "\n<p>Gets or sets the certificate revocation mode for ChainTrust and PeerOrChainTrust X.509 certificate validation mode.</p>\n"
  syntax:
    content: public X509RevocationMode RevocationMode { get; set; }
    content.vb: Public Property RevocationMode As X509RevocationMode
    parameters: []
    return:
      type: X509RevocationMode
      description: "\n<p>One of the values in <xref href=\"System.Security.Cryptography.X509Certificates.X509RevocationMode\" data-throw-if-not-resolved=\"false\"></xref>: <strong>NoCheck</strong>, <strong>Online</strong>, or <strong>Offline</strong>.</p>\n"
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "\n<p>Attempted to set when credential is read-only.</p>\n"
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: System.ServiceModel.Security.X509ServiceCertificateAuthentication.TrustedStoreLocation
  commentId: P:System.ServiceModel.Security.X509ServiceCertificateAuthentication.TrustedStoreLocation
  id: TrustedStoreLocation
  parent: System.ServiceModel.Security.X509ServiceCertificateAuthentication
  langs:
  - csharp
  - vb
  name: TrustedStoreLocation
  nameWithType: X509ServiceCertificateAuthentication.TrustedStoreLocation
  fullName: System.ServiceModel.Security.X509ServiceCertificateAuthentication.TrustedStoreLocation
  type: Property
  source:
    remote:
      path: src/System.Private.ServiceModel/src/System/ServiceModel/Security/X509ServiceCertificateAuthentication.cs
      branch: master
      repo: https://github.com/dotnet/wcf.git
    id: TrustedStoreLocation
    path: src/System.Private.ServiceModel/src/System/ServiceModel/Security/X509ServiceCertificateAuthentication.cs
    startLine: 79
  assemblies:
  - System.ServiceModel.Primitives
  namespace: System.ServiceModel.Security
  summary: "\n<p>Gets or sets the trusted store location under which context the client certificate chain is validated.</p>\n"
  syntax:
    content: public StoreLocation TrustedStoreLocation { get; set; }
    content.vb: Public Property TrustedStoreLocation As StoreLocation
    parameters: []
    return:
      type: StoreLocation
      description: "\n<p>The trusted store location.</p>\n"
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "\n<p>Attempted to set when credential is read-only.</p>\n"
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
references:
- uid: System.ServiceModel.Security
  commentId: N:System.ServiceModel.Security
  isExternal: false
  name: System.ServiceModel.Security
  nameWithType: System.ServiceModel.Security
  fullName: System.ServiceModel.Security
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: false
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: System.ServiceModel.Security.X509CertificateValidationMode
  commentId: T:System.ServiceModel.Security.X509CertificateValidationMode
  parent: System.ServiceModel.Security
  isExternal: false
  name: X509CertificateValidationMode
  nameWithType: X509CertificateValidationMode
  fullName: System.ServiceModel.Security.X509CertificateValidationMode
- uid: System.IdentityModel.Selectors.X509CertificateValidator
  commentId: T:System.IdentityModel.Selectors.X509CertificateValidator
  parent: System.IdentityModel.Selectors
  isExternal: false
  name: X509CertificateValidator
  nameWithType: X509CertificateValidator
  fullName: System.IdentityModel.Selectors.X509CertificateValidator
- uid: System.IdentityModel.Selectors
  commentId: N:System.IdentityModel.Selectors
  isExternal: false
  name: System.IdentityModel.Selectors
  nameWithType: System.IdentityModel.Selectors
  fullName: System.IdentityModel.Selectors
- uid: System.Security.Cryptography.X509Certificates.X509RevocationMode
  commentId: T:System.Security.Cryptography.X509Certificates.X509RevocationMode
  parent: System.Security.Cryptography.X509Certificates
  isExternal: false
  name: X509RevocationMode
  nameWithType: X509RevocationMode
  fullName: System.Security.Cryptography.X509Certificates.X509RevocationMode
- uid: System.Security.Cryptography.X509Certificates
  commentId: N:System.Security.Cryptography.X509Certificates
  isExternal: false
  name: System.Security.Cryptography.X509Certificates
  nameWithType: System.Security.Cryptography.X509Certificates
  fullName: System.Security.Cryptography.X509Certificates
- uid: System.Security.Cryptography.X509Certificates.StoreLocation
  commentId: T:System.Security.Cryptography.X509Certificates.StoreLocation
  parent: System.Security.Cryptography.X509Certificates
  isExternal: false
  name: StoreLocation
  nameWithType: StoreLocation
  fullName: System.Security.Cryptography.X509Certificates.StoreLocation
- uid: System.InvalidOperationException
  commentId: T:System.InvalidOperationException
  parent: System
  isExternal: false
  name: InvalidOperationException
  nameWithType: InvalidOperationException
  fullName: System.InvalidOperationException
