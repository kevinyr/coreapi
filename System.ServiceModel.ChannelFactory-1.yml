items:
- uid: System.ServiceModel.ChannelFactory`1
  commentId: T:System.ServiceModel.ChannelFactory`1
  id: ChannelFactory`1
  parent: System.ServiceModel
  children:
  - System.ServiceModel.ChannelFactory`1.#ctor(System.ServiceModel.Channels.Binding,System.ServiceModel.EndpointAddress)
  - System.ServiceModel.ChannelFactory`1.#ctor(System.String)
  - System.ServiceModel.ChannelFactory`1.#ctor(System.String,System.ServiceModel.EndpointAddress)
  - System.ServiceModel.ChannelFactory`1.#ctor(System.Type)
  - System.ServiceModel.ChannelFactory`1.CreateChannel
  - System.ServiceModel.ChannelFactory`1.CreateChannel(System.ServiceModel.EndpointAddress)
  - System.ServiceModel.ChannelFactory`1.CreateChannel(System.ServiceModel.EndpointAddress,System.Uri)
  - System.ServiceModel.ChannelFactory`1.CreateDescription
  langs:
  - csharp
  - vb
  name: ChannelFactory<TChannel>
  fullName: System.ServiceModel.ChannelFactory<TChannel>
  type: Class
  source:
    remote:
      path: src/System.ServiceModel.Primitives/ref/System.ServiceModel.Primitives.cs
      branch: master
      repo: https://github.com/dotnet/wcf.git
    id: ChannelFactory
    path: src/System.ServiceModel.Primitives/ref/System.ServiceModel.Primitives.cs
    startLine: 46
  assemblies:
  - System.ServiceModel.Primitives
  namespace: System.ServiceModel
  summary: "\n<p>A factory that creates channels of different types that are used by clients to send messages to variously configured service endpoints.</p>\n"
  syntax:
    content: 'public class ChannelFactory<TChannel> : ChannelFactory, IDisposable, IChannelFactory<TChannel>, IChannelFactory, ICommunicationObject'
    content.vb: >-
      Public Class ChannelFactory(Of TChannel)
          Inherits ChannelFactory
          Implements IDisposable, IChannelFactory(Of TChannel), IChannelFactory, ICommunicationObject
    typeParameters:
    - id: TChannel
      description: "\n<p>The type of channel produced by the channel factory. This type must be either <xref href=\"System.ServiceModel.Channels.IOutputChannel\" data-throw-if-not-resolved=\"false\"></xref> or <xref href=\"System.ServiceModel.Channels.IRequestChannel\" data-throw-if-not-resolved=\"false\"></xref>.</p>\n"
  inheritance:
  - System.Object
  - System.ServiceModel.Channels.CommunicationObject
  - System.ServiceModel.ChannelFactory
  implements:
  - System.IDisposable
  - System.ServiceModel.Channels.IChannelFactory{{TChannel}}
  - System.ServiceModel.Channels.IChannelFactory
  - System.ServiceModel.ICommunicationObject
  inheritedMembers:
  - System.ServiceModel.ChannelFactory.Credentials
  - System.ServiceModel.ChannelFactory.DefaultCloseTimeout
  - System.ServiceModel.ChannelFactory.DefaultOpenTimeout
  - System.ServiceModel.ChannelFactory.Endpoint
  - System.ServiceModel.ChannelFactory.ApplyConfiguration(System.String)
  - System.ServiceModel.ChannelFactory.CreateFactory
  - System.ServiceModel.ChannelFactory.EnsureOpened
  - System.ServiceModel.ChannelFactory.GetProperty``1
  - System.ServiceModel.ChannelFactory.InitializeEndpoint(System.ServiceModel.Channels.Binding,System.ServiceModel.EndpointAddress)
  - System.ServiceModel.ChannelFactory.InitializeEndpoint(System.ServiceModel.Description.ServiceEndpoint)
  - System.ServiceModel.ChannelFactory.InitializeEndpoint(System.String,System.ServiceModel.EndpointAddress)
  - System.ServiceModel.ChannelFactory.OnAbort
  - System.ServiceModel.ChannelFactory.OnBeginClose(System.TimeSpan,System.AsyncCallback,System.Object)
  - System.ServiceModel.ChannelFactory.OnBeginOpen(System.TimeSpan,System.AsyncCallback,System.Object)
  - System.ServiceModel.ChannelFactory.OnClose(System.TimeSpan)
  - System.ServiceModel.ChannelFactory.OnEndClose(System.IAsyncResult)
  - System.ServiceModel.ChannelFactory.OnEndOpen(System.IAsyncResult)
  - System.ServiceModel.ChannelFactory.OnOpen(System.TimeSpan)
  - System.ServiceModel.ChannelFactory.OnOpened
  - System.ServiceModel.ChannelFactory.OnOpening
  - System.ServiceModel.ChannelFactory.System#IDisposable#Dispose
  - System.ServiceModel.Channels.CommunicationObject.IsDisposed
  - System.ServiceModel.Channels.CommunicationObject.State
  - System.ServiceModel.Channels.CommunicationObject.ThisLock
  - System.ServiceModel.Channels.CommunicationObject.Closed
  - System.ServiceModel.Channels.CommunicationObject.Closing
  - System.ServiceModel.Channels.CommunicationObject.Faulted
  - System.ServiceModel.Channels.CommunicationObject.Opened
  - System.ServiceModel.Channels.CommunicationObject.Opening
  - System.ServiceModel.Channels.CommunicationObject.Abort
  - System.ServiceModel.Channels.CommunicationObject.BeginClose(System.AsyncCallback,System.Object)
  - System.ServiceModel.Channels.CommunicationObject.BeginClose(System.TimeSpan,System.AsyncCallback,System.Object)
  - System.ServiceModel.Channels.CommunicationObject.BeginOpen(System.AsyncCallback,System.Object)
  - System.ServiceModel.Channels.CommunicationObject.BeginOpen(System.TimeSpan,System.AsyncCallback,System.Object)
  - System.ServiceModel.Channels.CommunicationObject.Close
  - System.ServiceModel.Channels.CommunicationObject.Close(System.TimeSpan)
  - System.ServiceModel.Channels.CommunicationObject.EndClose(System.IAsyncResult)
  - System.ServiceModel.Channels.CommunicationObject.EndOpen(System.IAsyncResult)
  - System.ServiceModel.Channels.CommunicationObject.Fault
  - System.ServiceModel.Channels.CommunicationObject.GetCommunicationObjectType
  - System.ServiceModel.Channels.CommunicationObject.OnClosed
  - System.ServiceModel.Channels.CommunicationObject.OnClosing
  - System.ServiceModel.Channels.CommunicationObject.OnFaulted
  - System.ServiceModel.Channels.CommunicationObject.Open
  - System.ServiceModel.Channels.CommunicationObject.Open(System.TimeSpan)
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
  fullName.vb: System.ServiceModel.ChannelFactory(Of TChannel)
  name.vb: ChannelFactory(Of TChannel)
  nameWithType: ChannelFactory<TChannel>
  nameWithType.vb: ChannelFactory(Of TChannel)
- uid: System.ServiceModel.ChannelFactory`1.#ctor(System.ServiceModel.Channels.Binding,System.ServiceModel.EndpointAddress)
  commentId: M:System.ServiceModel.ChannelFactory`1.#ctor(System.ServiceModel.Channels.Binding,System.ServiceModel.EndpointAddress)
  id: '#ctor(System.ServiceModel.Channels.Binding,System.ServiceModel.EndpointAddress)'
  parent: System.ServiceModel.ChannelFactory`1
  langs:
  - csharp
  - vb
  name: ChannelFactory(Binding, EndpointAddress)
  fullName: System.ServiceModel.ChannelFactory<TChannel>.ChannelFactory(System.ServiceModel.Channels.Binding, System.ServiceModel.EndpointAddress)
  type: Constructor
  source:
    remote:
      path: src/System.ServiceModel.Primitives/ref/System.ServiceModel.Primitives.cs
      branch: master
      repo: https://github.com/dotnet/wcf.git
    id: .ctor
    path: src/System.ServiceModel.Primitives/ref/System.ServiceModel.Primitives.cs
    startLine: 48
  assemblies:
  - System.ServiceModel.Primitives
  namespace: System.ServiceModel
  summary: "\n<p>Initializes a new instance of the <xref href=\"System.ServiceModel.ChannelFactory`1\" data-throw-if-not-resolved=\"false\"></xref> class with a specified binding and endpoint address.</p>\n"
  syntax:
    content: public ChannelFactory(Binding binding, EndpointAddress remoteAddress)
    content.vb: Public Sub New(binding As Binding, remoteAddress As EndpointAddress)
    parameters:
    - id: binding
      type: System.ServiceModel.Channels.Binding
      description: "\n<p>The <xref href=\"System.ServiceModel.Channels.Binding\" data-throw-if-not-resolved=\"false\"></xref> used to configure the endpoint.</p>\n"
    - id: remoteAddress
      type: System.ServiceModel.EndpointAddress
      description: "\n<p>The <xref href=\"System.ServiceModel.EndpointAddress\" data-throw-if-not-resolved=\"false\"></xref> that provides the location of the service.</p>\n"
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "\n<p>The <em>binding</em> is <strong>null</strong>.</p>\n"
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: System.ServiceModel.ChannelFactory(Of TChannel).ChannelFactory(System.ServiceModel.Channels.Binding, System.ServiceModel.EndpointAddress)
  nameWithType: ChannelFactory<TChannel>.ChannelFactory(Binding, EndpointAddress)
  nameWithType.vb: ChannelFactory(Of TChannel).ChannelFactory(Binding, EndpointAddress)
- uid: System.ServiceModel.ChannelFactory`1.#ctor(System.String)
  commentId: M:System.ServiceModel.ChannelFactory`1.#ctor(System.String)
  id: '#ctor(System.String)'
  parent: System.ServiceModel.ChannelFactory`1
  langs:
  - csharp
  - vb
  name: ChannelFactory(String)
  fullName: System.ServiceModel.ChannelFactory<TChannel>.ChannelFactory(System.String)
  type: Constructor
  source:
    remote:
      path: src/System.ServiceModel.Primitives/ref/System.ServiceModel.Primitives.cs
      branch: master
      repo: https://github.com/dotnet/wcf.git
    id: .ctor
    path: src/System.ServiceModel.Primitives/ref/System.ServiceModel.Primitives.cs
    startLine: 49
  assemblies:
  - System.ServiceModel.Primitives
  namespace: System.ServiceModel
  summary: "\n<p>Initializes a new instance of the <xref href=\"System.ServiceModel.ChannelFactory`1\" data-throw-if-not-resolved=\"false\"></xref> class with a specified endpoint configuration name.</p>\n"
  syntax:
    content: public ChannelFactory(string endpointConfigurationName)
    content.vb: Public Sub New(endpointConfigurationName As String)
    parameters:
    - id: endpointConfigurationName
      type: System.String
      description: "\n<p>The configuration name used for the endpoint.</p>\n"
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "\n<p>\n<em>endpointConfigurationName</em> is <strong>null</strong>.</p>\n"
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: System.ServiceModel.ChannelFactory(Of TChannel).ChannelFactory(System.String)
  nameWithType: ChannelFactory<TChannel>.ChannelFactory(String)
  nameWithType.vb: ChannelFactory(Of TChannel).ChannelFactory(String)
- uid: System.ServiceModel.ChannelFactory`1.#ctor(System.String,System.ServiceModel.EndpointAddress)
  commentId: M:System.ServiceModel.ChannelFactory`1.#ctor(System.String,System.ServiceModel.EndpointAddress)
  id: '#ctor(System.String,System.ServiceModel.EndpointAddress)'
  parent: System.ServiceModel.ChannelFactory`1
  langs:
  - csharp
  - vb
  name: ChannelFactory(String, EndpointAddress)
  fullName: System.ServiceModel.ChannelFactory<TChannel>.ChannelFactory(System.String, System.ServiceModel.EndpointAddress)
  type: Constructor
  source:
    remote:
      path: src/System.ServiceModel.Primitives/ref/System.ServiceModel.Primitives.cs
      branch: master
      repo: https://github.com/dotnet/wcf.git
    id: .ctor
    path: src/System.ServiceModel.Primitives/ref/System.ServiceModel.Primitives.cs
    startLine: 50
  assemblies:
  - System.ServiceModel.Primitives
  namespace: System.ServiceModel
  summary: "\n<p>Initializes a new instance of the <xref href=\"System.ServiceModel.ChannelFactory`1\" data-throw-if-not-resolved=\"false\"></xref> class associated with a specified name for the endpoint configuration and remote address.</p>\n"
  syntax:
    content: public ChannelFactory(string endpointConfigurationName, EndpointAddress remoteAddress)
    content.vb: Public Sub New(endpointConfigurationName As String, remoteAddress As EndpointAddress)
    parameters:
    - id: endpointConfigurationName
      type: System.String
      description: "\n<p>The configuration name used for the endpoint.</p>\n"
    - id: remoteAddress
      type: System.ServiceModel.EndpointAddress
      description: "\n<p>The <xref href=\"System.ServiceModel.EndpointAddress\" data-throw-if-not-resolved=\"false\"></xref> that provides the location of the service.</p>\n"
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "\n<p>\n<em>endpointConfigurationName</em> or <em>remoteAddress</em> is <strong>null</strong>.</p>\n"
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: System.ServiceModel.ChannelFactory(Of TChannel).ChannelFactory(System.String, System.ServiceModel.EndpointAddress)
  nameWithType: ChannelFactory<TChannel>.ChannelFactory(String, EndpointAddress)
  nameWithType.vb: ChannelFactory(Of TChannel).ChannelFactory(String, EndpointAddress)
- uid: System.ServiceModel.ChannelFactory`1.#ctor(System.Type)
  commentId: M:System.ServiceModel.ChannelFactory`1.#ctor(System.Type)
  id: '#ctor(System.Type)'
  parent: System.ServiceModel.ChannelFactory`1
  langs:
  - csharp
  - vb
  name: ChannelFactory(Type)
  fullName: System.ServiceModel.ChannelFactory<TChannel>.ChannelFactory(System.Type)
  type: Constructor
  source:
    remote:
      path: src/System.ServiceModel.Primitives/ref/System.ServiceModel.Primitives.cs
      branch: master
      repo: https://github.com/dotnet/wcf.git
    id: .ctor
    path: src/System.ServiceModel.Primitives/ref/System.ServiceModel.Primitives.cs
    startLine: 51
  assemblies:
  - System.ServiceModel.Primitives
  namespace: System.ServiceModel
  summary: "\n<p>Initializes a new instance of the <xref href=\"System.ServiceModel.ChannelFactory`1\" data-throw-if-not-resolved=\"false\"></xref> class.  </p>\n"
  syntax:
    content: protected ChannelFactory(Type channelType)
    content.vb: Protected Sub New(channelType As Type)
    parameters:
    - id: channelType
      type: System.Type
      description: "\n<p>The <xref href=\"System.Type\" data-throw-if-not-resolved=\"false\"></xref> of channel produced by the factory.</p>\n"
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "\n<p>The <em>channelType</em> is <strong>null</strong>.</p>\n"
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "\n<p>The <em>channelType</em> is a class or value type and is not an interface.</p>\n"
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
  fullName.vb: System.ServiceModel.ChannelFactory(Of TChannel).ChannelFactory(System.Type)
  nameWithType: ChannelFactory<TChannel>.ChannelFactory(Type)
  nameWithType.vb: ChannelFactory(Of TChannel).ChannelFactory(Type)
- uid: System.ServiceModel.ChannelFactory`1.CreateChannel
  commentId: M:System.ServiceModel.ChannelFactory`1.CreateChannel
  id: CreateChannel
  parent: System.ServiceModel.ChannelFactory`1
  langs:
  - csharp
  - vb
  name: CreateChannel()
  fullName: System.ServiceModel.ChannelFactory<TChannel>.CreateChannel()
  type: Method
  source:
    remote:
      path: src/System.ServiceModel.Primitives/ref/System.ServiceModel.Primitives.cs
      branch: master
      repo: https://github.com/dotnet/wcf.git
    id: CreateChannel
    path: src/System.ServiceModel.Primitives/ref/System.ServiceModel.Primitives.cs
    startLine: 52
  assemblies:
  - System.ServiceModel.Primitives
  namespace: System.ServiceModel
  summary: "\n<p>Creates a channel of a specified type to a specified endpoint address.</p>\n"
  syntax:
    content: public TChannel CreateChannel()
    content.vb: Public Function CreateChannel As TChannel
    return:
      type: '{TChannel}'
      description: "\n<p>The <em>TChannel</em> of type <xref href=\"System.ServiceModel.Channels.IChannel\" data-throw-if-not-resolved=\"false\"></xref> created by the factory.</p>\n"
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: System.ServiceModel.ChannelFactory(Of TChannel).CreateChannel()
  nameWithType: ChannelFactory<TChannel>.CreateChannel()
  nameWithType.vb: ChannelFactory(Of TChannel).CreateChannel()
- uid: System.ServiceModel.ChannelFactory`1.CreateChannel(System.ServiceModel.EndpointAddress)
  commentId: M:System.ServiceModel.ChannelFactory`1.CreateChannel(System.ServiceModel.EndpointAddress)
  id: CreateChannel(System.ServiceModel.EndpointAddress)
  parent: System.ServiceModel.ChannelFactory`1
  langs:
  - csharp
  - vb
  name: CreateChannel(EndpointAddress)
  fullName: System.ServiceModel.ChannelFactory<TChannel>.CreateChannel(System.ServiceModel.EndpointAddress)
  type: Method
  source:
    remote:
      path: src/System.ServiceModel.Primitives/ref/System.ServiceModel.Primitives.cs
      branch: master
      repo: https://github.com/dotnet/wcf.git
    id: CreateChannel
    path: src/System.ServiceModel.Primitives/ref/System.ServiceModel.Primitives.cs
    startLine: 53
  assemblies:
  - System.ServiceModel.Primitives
  namespace: System.ServiceModel
  summary: "\n<p>Creates a channel that is used to send messages to a service at a specific endpoint address.</p>\n"
  syntax:
    content: public TChannel CreateChannel(EndpointAddress address)
    content.vb: Public Function CreateChannel(address As EndpointAddress) As TChannel
    parameters:
    - id: address
      type: System.ServiceModel.EndpointAddress
      description: "\n<p>The <xref href=\"System.ServiceModel.EndpointAddress\" data-throw-if-not-resolved=\"false\"></xref> that provides the location of the service.</p>\n"
    return:
      type: '{TChannel}'
      description: "\n<p>The <em>TChannel</em> of type <xref href=\"System.ServiceModel.Channels.IChannel\" data-throw-if-not-resolved=\"false\"></xref> created by the factory.</p>\n"
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "\n<p>\n<em>address</em> is <strong>null</strong>.</p>\n"
  implements:
  - System.ServiceModel.Channels.IChannelFactory{{TChannel}}.CreateChannel(System.ServiceModel.EndpointAddress)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: System.ServiceModel.ChannelFactory(Of TChannel).CreateChannel(System.ServiceModel.EndpointAddress)
  nameWithType: ChannelFactory<TChannel>.CreateChannel(EndpointAddress)
  nameWithType.vb: ChannelFactory(Of TChannel).CreateChannel(EndpointAddress)
- uid: System.ServiceModel.ChannelFactory`1.CreateChannel(System.ServiceModel.EndpointAddress,System.Uri)
  commentId: M:System.ServiceModel.ChannelFactory`1.CreateChannel(System.ServiceModel.EndpointAddress,System.Uri)
  id: CreateChannel(System.ServiceModel.EndpointAddress,System.Uri)
  parent: System.ServiceModel.ChannelFactory`1
  langs:
  - csharp
  - vb
  name: CreateChannel(EndpointAddress, Uri)
  fullName: System.ServiceModel.ChannelFactory<TChannel>.CreateChannel(System.ServiceModel.EndpointAddress, System.Uri)
  type: Method
  source:
    remote:
      path: src/System.ServiceModel.Primitives/ref/System.ServiceModel.Primitives.cs
      branch: master
      repo: https://github.com/dotnet/wcf.git
    id: CreateChannel
    path: src/System.ServiceModel.Primitives/ref/System.ServiceModel.Primitives.cs
    startLine: 54
  assemblies:
  - System.ServiceModel.Primitives
  namespace: System.ServiceModel
  summary: "\n<p>Creates a channel that is used to send messages to a service at a specific endpoint address through a specified transport address.</p>\n"
  syntax:
    content: public virtual TChannel CreateChannel(EndpointAddress address, Uri via)
    content.vb: Public Overridable Function CreateChannel(address As EndpointAddress, via As Uri) As TChannel
    parameters:
    - id: address
      type: System.ServiceModel.EndpointAddress
      description: "\n<p>The <xref href=\"System.ServiceModel.EndpointAddress\" data-throw-if-not-resolved=\"false\"></xref> that provides the location of the service.</p>\n"
    - id: via
      type: System.Uri
      description: "\n<p>The <xref href=\"System.Uri\" data-throw-if-not-resolved=\"false\"></xref> that contains the transport address to which the channel sends messages.</p>\n"
    return:
      type: '{TChannel}'
      description: "\n<p>The <em>TChannel</em> of type <xref href=\"System.ServiceModel.Channels.IChannel\" data-throw-if-not-resolved=\"false\"></xref> created by the factory.</p>\n"
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "\n<p>\n<em>address</em> is <strong>null</strong>.</p>\n"
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "\n<p>The <xref href=\"System.ServiceModel.ChannelFactory\" data-throw-if-not-resolved=\"false\"></xref> has duplex operations it does not support.</p>\n"
  implements:
  - System.ServiceModel.Channels.IChannelFactory{{TChannel}}.CreateChannel(System.ServiceModel.EndpointAddress,System.Uri)
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
  fullName.vb: System.ServiceModel.ChannelFactory(Of TChannel).CreateChannel(System.ServiceModel.EndpointAddress, System.Uri)
  nameWithType: ChannelFactory<TChannel>.CreateChannel(EndpointAddress, Uri)
  nameWithType.vb: ChannelFactory(Of TChannel).CreateChannel(EndpointAddress, Uri)
- uid: System.ServiceModel.ChannelFactory`1.CreateDescription
  commentId: M:System.ServiceModel.ChannelFactory`1.CreateDescription
  id: CreateDescription
  parent: System.ServiceModel.ChannelFactory`1
  langs:
  - csharp
  - vb
  name: CreateDescription()
  fullName: System.ServiceModel.ChannelFactory<TChannel>.CreateDescription()
  type: Method
  source:
    remote:
      path: src/System.ServiceModel.Primitives/ref/System.ServiceModel.Primitives.cs
      branch: master
      repo: https://github.com/dotnet/wcf.git
    id: CreateDescription
    path: src/System.ServiceModel.Primitives/ref/System.ServiceModel.Primitives.cs
    startLine: 55
  assemblies:
  - System.ServiceModel.Primitives
  namespace: System.ServiceModel
  summary: "\n<p>Creates a description of the service endpoint.</p>\n"
  syntax:
    content: protected override ServiceEndpoint CreateDescription()
    content.vb: Protected Overrides Function CreateDescription As ServiceEndpoint
    return:
      type: System.ServiceModel.Description.ServiceEndpoint
      description: "\n<p>The <xref href=\"System.ServiceModel.Description.ServiceEndpoint\" data-throw-if-not-resolved=\"false\"></xref> of the service.</p>\n"
  overridden: System.ServiceModel.ChannelFactory.CreateDescription
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "\n<p>The callback contract is <strong>null</strong> but the service endpoint requires one that is non-<strong>null</strong>.</p>\n"
  modifiers.csharp:
  - protected
  - override
  modifiers.vb:
  - Protected
  - Overrides
  fullName.vb: System.ServiceModel.ChannelFactory(Of TChannel).CreateDescription()
  nameWithType: ChannelFactory<TChannel>.CreateDescription()
  nameWithType.vb: ChannelFactory(Of TChannel).CreateDescription()
references:
- uid: System.ServiceModel
  isExternal: false
  name: System.ServiceModel
  fullName: System.ServiceModel
  commentId: N:System.ServiceModel
  nameWithType: System.ServiceModel
- uid: System.Object
  parent: System
  isExternal: false
  name: Object
  fullName: System.Object
  commentId: T:System.Object
  nameWithType: Object
- uid: System.ServiceModel.Channels.CommunicationObject
  parent: System.ServiceModel.Channels
  isExternal: false
  name: CommunicationObject
  fullName: System.ServiceModel.Channels.CommunicationObject
  commentId: T:System.ServiceModel.Channels.CommunicationObject
  nameWithType: CommunicationObject
- uid: System.ServiceModel.ChannelFactory
  parent: System.ServiceModel
  isExternal: false
  name: ChannelFactory
  fullName: System.ServiceModel.ChannelFactory
  commentId: T:System.ServiceModel.ChannelFactory
  nameWithType: ChannelFactory
- uid: System.IDisposable
  parent: System
  isExternal: false
  name: IDisposable
  fullName: System.IDisposable
  commentId: T:System.IDisposable
  nameWithType: IDisposable
- uid: System.ServiceModel.Channels.IChannelFactory{{TChannel}}
  parent: System.ServiceModel.Channels
  definition: System.ServiceModel.Channels.IChannelFactory`1
  name: IChannelFactory<TChannel>
  fullName: System.ServiceModel.Channels.IChannelFactory<TChannel>
  fullname.vb: System.ServiceModel.Channels.IChannelFactory(Of TChannel)
  name.vb: IChannelFactory(Of TChannel)
  spec.csharp:
  - uid: System.ServiceModel.Channels.IChannelFactory`1
    name: IChannelFactory
    fullName: System.ServiceModel.Channels.IChannelFactory
  - name: <
    fullName: <
  - name: TChannel
    fullName: TChannel
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: System.ServiceModel.Channels.IChannelFactory`1
    name: IChannelFactory
    fullName: System.ServiceModel.Channels.IChannelFactory
  - name: '(Of '
    fullName: '(Of '
  - name: TChannel
    fullName: TChannel
  - name: )
    fullName: )
  commentId: T:System.ServiceModel.Channels.IChannelFactory{`0}
  nameWithType: IChannelFactory<TChannel>
  nameWithType.vb: IChannelFactory(Of TChannel)
- uid: System.ServiceModel.Channels.IChannelFactory
  parent: System.ServiceModel.Channels
  isExternal: false
  name: IChannelFactory
  fullName: System.ServiceModel.Channels.IChannelFactory
  commentId: T:System.ServiceModel.Channels.IChannelFactory
  nameWithType: IChannelFactory
- uid: System.ServiceModel.ICommunicationObject
  parent: System.ServiceModel
  isExternal: false
  name: ICommunicationObject
  fullName: System.ServiceModel.ICommunicationObject
  commentId: T:System.ServiceModel.ICommunicationObject
  nameWithType: ICommunicationObject
- uid: System.ServiceModel.ChannelFactory.Credentials
  parent: System.ServiceModel.ChannelFactory
  isExternal: false
  name: Credentials
  fullName: System.ServiceModel.ChannelFactory.Credentials
  commentId: P:System.ServiceModel.ChannelFactory.Credentials
  nameWithType: ChannelFactory.Credentials
- uid: System.ServiceModel.ChannelFactory.DefaultCloseTimeout
  parent: System.ServiceModel.ChannelFactory
  isExternal: false
  name: DefaultCloseTimeout
  fullName: System.ServiceModel.ChannelFactory.DefaultCloseTimeout
  commentId: P:System.ServiceModel.ChannelFactory.DefaultCloseTimeout
  nameWithType: ChannelFactory.DefaultCloseTimeout
- uid: System.ServiceModel.ChannelFactory.DefaultOpenTimeout
  parent: System.ServiceModel.ChannelFactory
  isExternal: false
  name: DefaultOpenTimeout
  fullName: System.ServiceModel.ChannelFactory.DefaultOpenTimeout
  commentId: P:System.ServiceModel.ChannelFactory.DefaultOpenTimeout
  nameWithType: ChannelFactory.DefaultOpenTimeout
- uid: System.ServiceModel.ChannelFactory.Endpoint
  parent: System.ServiceModel.ChannelFactory
  isExternal: false
  name: Endpoint
  fullName: System.ServiceModel.ChannelFactory.Endpoint
  commentId: P:System.ServiceModel.ChannelFactory.Endpoint
  nameWithType: ChannelFactory.Endpoint
- uid: System.ServiceModel.ChannelFactory.ApplyConfiguration(System.String)
  parent: System.ServiceModel.ChannelFactory
  isExternal: true
  name: ApplyConfiguration(String)
  fullName: System.ServiceModel.ChannelFactory.ApplyConfiguration(System.String)
  spec.csharp:
  - uid: System.ServiceModel.ChannelFactory.ApplyConfiguration(System.String)
    name: ApplyConfiguration
    fullName: System.ServiceModel.ChannelFactory.ApplyConfiguration
  - name: (
    fullName: (
  - uid: System.String
    name: String
    fullName: System.String
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.ServiceModel.ChannelFactory.ApplyConfiguration(System.String)
    name: ApplyConfiguration
    fullName: System.ServiceModel.ChannelFactory.ApplyConfiguration
  - name: (
    fullName: (
  - uid: System.String
    name: String
    fullName: System.String
    isExternal: true
  - name: )
    fullName: )
  commentId: M:System.ServiceModel.ChannelFactory.ApplyConfiguration(System.String)
  nameWithType: ChannelFactory.ApplyConfiguration(String)
- uid: System.ServiceModel.ChannelFactory.CreateFactory
  parent: System.ServiceModel.ChannelFactory
  isExternal: false
  name: CreateFactory()
  fullName: System.ServiceModel.ChannelFactory.CreateFactory()
  spec.csharp:
  - uid: System.ServiceModel.ChannelFactory.CreateFactory
    name: CreateFactory
    fullName: System.ServiceModel.ChannelFactory.CreateFactory
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.ServiceModel.ChannelFactory.CreateFactory
    name: CreateFactory
    fullName: System.ServiceModel.ChannelFactory.CreateFactory
  - name: (
    fullName: (
  - name: )
    fullName: )
  commentId: M:System.ServiceModel.ChannelFactory.CreateFactory
  nameWithType: ChannelFactory.CreateFactory()
- uid: System.ServiceModel.ChannelFactory.EnsureOpened
  parent: System.ServiceModel.ChannelFactory
  isExternal: false
  name: EnsureOpened()
  fullName: System.ServiceModel.ChannelFactory.EnsureOpened()
  spec.csharp:
  - uid: System.ServiceModel.ChannelFactory.EnsureOpened
    name: EnsureOpened
    fullName: System.ServiceModel.ChannelFactory.EnsureOpened
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.ServiceModel.ChannelFactory.EnsureOpened
    name: EnsureOpened
    fullName: System.ServiceModel.ChannelFactory.EnsureOpened
  - name: (
    fullName: (
  - name: )
    fullName: )
  commentId: M:System.ServiceModel.ChannelFactory.EnsureOpened
  nameWithType: ChannelFactory.EnsureOpened()
- uid: System.ServiceModel.ChannelFactory.GetProperty``1
  parent: System.ServiceModel.ChannelFactory
  isExternal: false
  name: GetProperty<T>()
  fullName: System.ServiceModel.ChannelFactory.GetProperty<T>()
  fullname.vb: System.ServiceModel.ChannelFactory.GetProperty(Of T)()
  name.vb: GetProperty(Of T)()
  spec.csharp:
  - uid: System.ServiceModel.ChannelFactory.GetProperty``1
    name: GetProperty<T>
    fullName: System.ServiceModel.ChannelFactory.GetProperty<T>
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.ServiceModel.ChannelFactory.GetProperty``1
    name: GetProperty(Of T)
    fullName: System.ServiceModel.ChannelFactory.GetProperty(Of T)
  - name: (
    fullName: (
  - name: )
    fullName: )
  commentId: M:System.ServiceModel.ChannelFactory.GetProperty``1
  nameWithType: ChannelFactory.GetProperty<T>()
  nameWithType.vb: ChannelFactory.GetProperty(Of T)()
- uid: System.ServiceModel.ChannelFactory.InitializeEndpoint(System.ServiceModel.Channels.Binding,System.ServiceModel.EndpointAddress)
  parent: System.ServiceModel.ChannelFactory
  isExternal: false
  name: InitializeEndpoint(Binding, EndpointAddress)
  fullName: System.ServiceModel.ChannelFactory.InitializeEndpoint(System.ServiceModel.Channels.Binding, System.ServiceModel.EndpointAddress)
  spec.csharp:
  - uid: System.ServiceModel.ChannelFactory.InitializeEndpoint(System.ServiceModel.Channels.Binding,System.ServiceModel.EndpointAddress)
    name: InitializeEndpoint
    fullName: System.ServiceModel.ChannelFactory.InitializeEndpoint
  - name: (
    fullName: (
  - uid: System.ServiceModel.Channels.Binding
    name: Binding
    fullName: System.ServiceModel.Channels.Binding
  - name: ', '
    fullName: ', '
  - uid: System.ServiceModel.EndpointAddress
    name: EndpointAddress
    fullName: System.ServiceModel.EndpointAddress
  - name: )
    fullName: )
  spec.vb:
  - uid: System.ServiceModel.ChannelFactory.InitializeEndpoint(System.ServiceModel.Channels.Binding,System.ServiceModel.EndpointAddress)
    name: InitializeEndpoint
    fullName: System.ServiceModel.ChannelFactory.InitializeEndpoint
  - name: (
    fullName: (
  - uid: System.ServiceModel.Channels.Binding
    name: Binding
    fullName: System.ServiceModel.Channels.Binding
  - name: ', '
    fullName: ', '
  - uid: System.ServiceModel.EndpointAddress
    name: EndpointAddress
    fullName: System.ServiceModel.EndpointAddress
  - name: )
    fullName: )
  commentId: M:System.ServiceModel.ChannelFactory.InitializeEndpoint(System.ServiceModel.Channels.Binding,System.ServiceModel.EndpointAddress)
  nameWithType: ChannelFactory.InitializeEndpoint(Binding, EndpointAddress)
- uid: System.ServiceModel.ChannelFactory.InitializeEndpoint(System.ServiceModel.Description.ServiceEndpoint)
  parent: System.ServiceModel.ChannelFactory
  isExternal: false
  name: InitializeEndpoint(ServiceEndpoint)
  fullName: System.ServiceModel.ChannelFactory.InitializeEndpoint(System.ServiceModel.Description.ServiceEndpoint)
  spec.csharp:
  - uid: System.ServiceModel.ChannelFactory.InitializeEndpoint(System.ServiceModel.Description.ServiceEndpoint)
    name: InitializeEndpoint
    fullName: System.ServiceModel.ChannelFactory.InitializeEndpoint
  - name: (
    fullName: (
  - uid: System.ServiceModel.Description.ServiceEndpoint
    name: ServiceEndpoint
    fullName: System.ServiceModel.Description.ServiceEndpoint
  - name: )
    fullName: )
  spec.vb:
  - uid: System.ServiceModel.ChannelFactory.InitializeEndpoint(System.ServiceModel.Description.ServiceEndpoint)
    name: InitializeEndpoint
    fullName: System.ServiceModel.ChannelFactory.InitializeEndpoint
  - name: (
    fullName: (
  - uid: System.ServiceModel.Description.ServiceEndpoint
    name: ServiceEndpoint
    fullName: System.ServiceModel.Description.ServiceEndpoint
  - name: )
    fullName: )
  commentId: M:System.ServiceModel.ChannelFactory.InitializeEndpoint(System.ServiceModel.Description.ServiceEndpoint)
  nameWithType: ChannelFactory.InitializeEndpoint(ServiceEndpoint)
- uid: System.ServiceModel.ChannelFactory.InitializeEndpoint(System.String,System.ServiceModel.EndpointAddress)
  parent: System.ServiceModel.ChannelFactory
  isExternal: true
  name: InitializeEndpoint(String, EndpointAddress)
  fullName: System.ServiceModel.ChannelFactory.InitializeEndpoint(System.String, System.ServiceModel.EndpointAddress)
  spec.csharp:
  - uid: System.ServiceModel.ChannelFactory.InitializeEndpoint(System.String,System.ServiceModel.EndpointAddress)
    name: InitializeEndpoint
    fullName: System.ServiceModel.ChannelFactory.InitializeEndpoint
  - name: (
    fullName: (
  - uid: System.String
    name: String
    fullName: System.String
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.ServiceModel.EndpointAddress
    name: EndpointAddress
    fullName: System.ServiceModel.EndpointAddress
  - name: )
    fullName: )
  spec.vb:
  - uid: System.ServiceModel.ChannelFactory.InitializeEndpoint(System.String,System.ServiceModel.EndpointAddress)
    name: InitializeEndpoint
    fullName: System.ServiceModel.ChannelFactory.InitializeEndpoint
  - name: (
    fullName: (
  - uid: System.String
    name: String
    fullName: System.String
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.ServiceModel.EndpointAddress
    name: EndpointAddress
    fullName: System.ServiceModel.EndpointAddress
  - name: )
    fullName: )
  commentId: M:System.ServiceModel.ChannelFactory.InitializeEndpoint(System.String,System.ServiceModel.EndpointAddress)
  nameWithType: ChannelFactory.InitializeEndpoint(String, EndpointAddress)
- uid: System.ServiceModel.ChannelFactory.OnAbort
  parent: System.ServiceModel.ChannelFactory
  isExternal: false
  name: OnAbort()
  fullName: System.ServiceModel.ChannelFactory.OnAbort()
  spec.csharp:
  - uid: System.ServiceModel.ChannelFactory.OnAbort
    name: OnAbort
    fullName: System.ServiceModel.ChannelFactory.OnAbort
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.ServiceModel.ChannelFactory.OnAbort
    name: OnAbort
    fullName: System.ServiceModel.ChannelFactory.OnAbort
  - name: (
    fullName: (
  - name: )
    fullName: )
  commentId: M:System.ServiceModel.ChannelFactory.OnAbort
  nameWithType: ChannelFactory.OnAbort()
- uid: System.ServiceModel.ChannelFactory.OnBeginClose(System.TimeSpan,System.AsyncCallback,System.Object)
  parent: System.ServiceModel.ChannelFactory
  isExternal: true
  name: OnBeginClose(TimeSpan, AsyncCallback, Object)
  fullName: System.ServiceModel.ChannelFactory.OnBeginClose(System.TimeSpan, System.AsyncCallback, System.Object)
  spec.csharp:
  - uid: System.ServiceModel.ChannelFactory.OnBeginClose(System.TimeSpan,System.AsyncCallback,System.Object)
    name: OnBeginClose
    fullName: System.ServiceModel.ChannelFactory.OnBeginClose
  - name: (
    fullName: (
  - uid: System.TimeSpan
    name: TimeSpan
    fullName: System.TimeSpan
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.AsyncCallback
    name: AsyncCallback
    fullName: System.AsyncCallback
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.ServiceModel.ChannelFactory.OnBeginClose(System.TimeSpan,System.AsyncCallback,System.Object)
    name: OnBeginClose
    fullName: System.ServiceModel.ChannelFactory.OnBeginClose
  - name: (
    fullName: (
  - uid: System.TimeSpan
    name: TimeSpan
    fullName: System.TimeSpan
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.AsyncCallback
    name: AsyncCallback
    fullName: System.AsyncCallback
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
  commentId: M:System.ServiceModel.ChannelFactory.OnBeginClose(System.TimeSpan,System.AsyncCallback,System.Object)
  nameWithType: ChannelFactory.OnBeginClose(TimeSpan, AsyncCallback, Object)
- uid: System.ServiceModel.ChannelFactory.OnBeginOpen(System.TimeSpan,System.AsyncCallback,System.Object)
  parent: System.ServiceModel.ChannelFactory
  isExternal: true
  name: OnBeginOpen(TimeSpan, AsyncCallback, Object)
  fullName: System.ServiceModel.ChannelFactory.OnBeginOpen(System.TimeSpan, System.AsyncCallback, System.Object)
  spec.csharp:
  - uid: System.ServiceModel.ChannelFactory.OnBeginOpen(System.TimeSpan,System.AsyncCallback,System.Object)
    name: OnBeginOpen
    fullName: System.ServiceModel.ChannelFactory.OnBeginOpen
  - name: (
    fullName: (
  - uid: System.TimeSpan
    name: TimeSpan
    fullName: System.TimeSpan
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.AsyncCallback
    name: AsyncCallback
    fullName: System.AsyncCallback
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.ServiceModel.ChannelFactory.OnBeginOpen(System.TimeSpan,System.AsyncCallback,System.Object)
    name: OnBeginOpen
    fullName: System.ServiceModel.ChannelFactory.OnBeginOpen
  - name: (
    fullName: (
  - uid: System.TimeSpan
    name: TimeSpan
    fullName: System.TimeSpan
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.AsyncCallback
    name: AsyncCallback
    fullName: System.AsyncCallback
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
  commentId: M:System.ServiceModel.ChannelFactory.OnBeginOpen(System.TimeSpan,System.AsyncCallback,System.Object)
  nameWithType: ChannelFactory.OnBeginOpen(TimeSpan, AsyncCallback, Object)
- uid: System.ServiceModel.ChannelFactory.OnClose(System.TimeSpan)
  parent: System.ServiceModel.ChannelFactory
  isExternal: true
  name: OnClose(TimeSpan)
  fullName: System.ServiceModel.ChannelFactory.OnClose(System.TimeSpan)
  spec.csharp:
  - uid: System.ServiceModel.ChannelFactory.OnClose(System.TimeSpan)
    name: OnClose
    fullName: System.ServiceModel.ChannelFactory.OnClose
  - name: (
    fullName: (
  - uid: System.TimeSpan
    name: TimeSpan
    fullName: System.TimeSpan
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.ServiceModel.ChannelFactory.OnClose(System.TimeSpan)
    name: OnClose
    fullName: System.ServiceModel.ChannelFactory.OnClose
  - name: (
    fullName: (
  - uid: System.TimeSpan
    name: TimeSpan
    fullName: System.TimeSpan
    isExternal: true
  - name: )
    fullName: )
  commentId: M:System.ServiceModel.ChannelFactory.OnClose(System.TimeSpan)
  nameWithType: ChannelFactory.OnClose(TimeSpan)
- uid: System.ServiceModel.ChannelFactory.OnEndClose(System.IAsyncResult)
  parent: System.ServiceModel.ChannelFactory
  isExternal: true
  name: OnEndClose(IAsyncResult)
  fullName: System.ServiceModel.ChannelFactory.OnEndClose(System.IAsyncResult)
  spec.csharp:
  - uid: System.ServiceModel.ChannelFactory.OnEndClose(System.IAsyncResult)
    name: OnEndClose
    fullName: System.ServiceModel.ChannelFactory.OnEndClose
  - name: (
    fullName: (
  - uid: System.IAsyncResult
    name: IAsyncResult
    fullName: System.IAsyncResult
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.ServiceModel.ChannelFactory.OnEndClose(System.IAsyncResult)
    name: OnEndClose
    fullName: System.ServiceModel.ChannelFactory.OnEndClose
  - name: (
    fullName: (
  - uid: System.IAsyncResult
    name: IAsyncResult
    fullName: System.IAsyncResult
    isExternal: true
  - name: )
    fullName: )
  commentId: M:System.ServiceModel.ChannelFactory.OnEndClose(System.IAsyncResult)
  nameWithType: ChannelFactory.OnEndClose(IAsyncResult)
- uid: System.ServiceModel.ChannelFactory.OnEndOpen(System.IAsyncResult)
  parent: System.ServiceModel.ChannelFactory
  isExternal: true
  name: OnEndOpen(IAsyncResult)
  fullName: System.ServiceModel.ChannelFactory.OnEndOpen(System.IAsyncResult)
  spec.csharp:
  - uid: System.ServiceModel.ChannelFactory.OnEndOpen(System.IAsyncResult)
    name: OnEndOpen
    fullName: System.ServiceModel.ChannelFactory.OnEndOpen
  - name: (
    fullName: (
  - uid: System.IAsyncResult
    name: IAsyncResult
    fullName: System.IAsyncResult
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.ServiceModel.ChannelFactory.OnEndOpen(System.IAsyncResult)
    name: OnEndOpen
    fullName: System.ServiceModel.ChannelFactory.OnEndOpen
  - name: (
    fullName: (
  - uid: System.IAsyncResult
    name: IAsyncResult
    fullName: System.IAsyncResult
    isExternal: true
  - name: )
    fullName: )
  commentId: M:System.ServiceModel.ChannelFactory.OnEndOpen(System.IAsyncResult)
  nameWithType: ChannelFactory.OnEndOpen(IAsyncResult)
- uid: System.ServiceModel.ChannelFactory.OnOpen(System.TimeSpan)
  parent: System.ServiceModel.ChannelFactory
  isExternal: true
  name: OnOpen(TimeSpan)
  fullName: System.ServiceModel.ChannelFactory.OnOpen(System.TimeSpan)
  spec.csharp:
  - uid: System.ServiceModel.ChannelFactory.OnOpen(System.TimeSpan)
    name: OnOpen
    fullName: System.ServiceModel.ChannelFactory.OnOpen
  - name: (
    fullName: (
  - uid: System.TimeSpan
    name: TimeSpan
    fullName: System.TimeSpan
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.ServiceModel.ChannelFactory.OnOpen(System.TimeSpan)
    name: OnOpen
    fullName: System.ServiceModel.ChannelFactory.OnOpen
  - name: (
    fullName: (
  - uid: System.TimeSpan
    name: TimeSpan
    fullName: System.TimeSpan
    isExternal: true
  - name: )
    fullName: )
  commentId: M:System.ServiceModel.ChannelFactory.OnOpen(System.TimeSpan)
  nameWithType: ChannelFactory.OnOpen(TimeSpan)
- uid: System.ServiceModel.ChannelFactory.OnOpened
  parent: System.ServiceModel.ChannelFactory
  isExternal: false
  name: OnOpened()
  fullName: System.ServiceModel.ChannelFactory.OnOpened()
  spec.csharp:
  - uid: System.ServiceModel.ChannelFactory.OnOpened
    name: OnOpened
    fullName: System.ServiceModel.ChannelFactory.OnOpened
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.ServiceModel.ChannelFactory.OnOpened
    name: OnOpened
    fullName: System.ServiceModel.ChannelFactory.OnOpened
  - name: (
    fullName: (
  - name: )
    fullName: )
  commentId: M:System.ServiceModel.ChannelFactory.OnOpened
  nameWithType: ChannelFactory.OnOpened()
- uid: System.ServiceModel.ChannelFactory.OnOpening
  parent: System.ServiceModel.ChannelFactory
  isExternal: false
  name: OnOpening()
  fullName: System.ServiceModel.ChannelFactory.OnOpening()
  spec.csharp:
  - uid: System.ServiceModel.ChannelFactory.OnOpening
    name: OnOpening
    fullName: System.ServiceModel.ChannelFactory.OnOpening
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.ServiceModel.ChannelFactory.OnOpening
    name: OnOpening
    fullName: System.ServiceModel.ChannelFactory.OnOpening
  - name: (
    fullName: (
  - name: )
    fullName: )
  commentId: M:System.ServiceModel.ChannelFactory.OnOpening
  nameWithType: ChannelFactory.OnOpening()
- uid: System.ServiceModel.ChannelFactory.System#IDisposable#Dispose
  parent: System.ServiceModel.ChannelFactory
  isExternal: false
  name: IDisposable.Dispose()
  fullName: System.ServiceModel.ChannelFactory.System.IDisposable.Dispose()
  name.vb: System.IDisposable.Dispose()
  spec.csharp:
  - uid: System.ServiceModel.ChannelFactory.System#IDisposable#Dispose
    name: IDisposable.Dispose
    fullName: System.ServiceModel.ChannelFactory.System.IDisposable.Dispose
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.ServiceModel.ChannelFactory.System#IDisposable#Dispose
    name: System.IDisposable.Dispose
    fullName: System.ServiceModel.ChannelFactory.System.IDisposable.Dispose
  - name: (
    fullName: (
  - name: )
    fullName: )
  commentId: M:System.ServiceModel.ChannelFactory.System#IDisposable#Dispose
  nameWithType: ChannelFactory.IDisposable.Dispose()
  nameWithType.vb: ChannelFactory.System.IDisposable.Dispose()
- uid: System.ServiceModel.Channels.CommunicationObject.IsDisposed
  parent: System.ServiceModel.Channels.CommunicationObject
  isExternal: false
  name: IsDisposed
  fullName: System.ServiceModel.Channels.CommunicationObject.IsDisposed
  commentId: P:System.ServiceModel.Channels.CommunicationObject.IsDisposed
  nameWithType: CommunicationObject.IsDisposed
- uid: System.ServiceModel.Channels.CommunicationObject.State
  parent: System.ServiceModel.Channels.CommunicationObject
  isExternal: false
  name: State
  fullName: System.ServiceModel.Channels.CommunicationObject.State
  commentId: P:System.ServiceModel.Channels.CommunicationObject.State
  nameWithType: CommunicationObject.State
- uid: System.ServiceModel.Channels.CommunicationObject.ThisLock
  parent: System.ServiceModel.Channels.CommunicationObject
  isExternal: false
  name: ThisLock
  fullName: System.ServiceModel.Channels.CommunicationObject.ThisLock
  commentId: P:System.ServiceModel.Channels.CommunicationObject.ThisLock
  nameWithType: CommunicationObject.ThisLock
- uid: System.ServiceModel.Channels.CommunicationObject.Closed
  parent: System.ServiceModel.Channels.CommunicationObject
  isExternal: false
  name: Closed
  fullName: System.ServiceModel.Channels.CommunicationObject.Closed
  commentId: E:System.ServiceModel.Channels.CommunicationObject.Closed
  nameWithType: CommunicationObject.Closed
- uid: System.ServiceModel.Channels.CommunicationObject.Closing
  parent: System.ServiceModel.Channels.CommunicationObject
  isExternal: false
  name: Closing
  fullName: System.ServiceModel.Channels.CommunicationObject.Closing
  commentId: E:System.ServiceModel.Channels.CommunicationObject.Closing
  nameWithType: CommunicationObject.Closing
- uid: System.ServiceModel.Channels.CommunicationObject.Faulted
  parent: System.ServiceModel.Channels.CommunicationObject
  isExternal: false
  name: Faulted
  fullName: System.ServiceModel.Channels.CommunicationObject.Faulted
  commentId: E:System.ServiceModel.Channels.CommunicationObject.Faulted
  nameWithType: CommunicationObject.Faulted
- uid: System.ServiceModel.Channels.CommunicationObject.Opened
  parent: System.ServiceModel.Channels.CommunicationObject
  isExternal: false
  name: Opened
  fullName: System.ServiceModel.Channels.CommunicationObject.Opened
  commentId: E:System.ServiceModel.Channels.CommunicationObject.Opened
  nameWithType: CommunicationObject.Opened
- uid: System.ServiceModel.Channels.CommunicationObject.Opening
  parent: System.ServiceModel.Channels.CommunicationObject
  isExternal: false
  name: Opening
  fullName: System.ServiceModel.Channels.CommunicationObject.Opening
  commentId: E:System.ServiceModel.Channels.CommunicationObject.Opening
  nameWithType: CommunicationObject.Opening
- uid: System.ServiceModel.Channels.CommunicationObject.Abort
  parent: System.ServiceModel.Channels.CommunicationObject
  isExternal: false
  name: Abort()
  fullName: System.ServiceModel.Channels.CommunicationObject.Abort()
  spec.csharp:
  - uid: System.ServiceModel.Channels.CommunicationObject.Abort
    name: Abort
    fullName: System.ServiceModel.Channels.CommunicationObject.Abort
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.ServiceModel.Channels.CommunicationObject.Abort
    name: Abort
    fullName: System.ServiceModel.Channels.CommunicationObject.Abort
  - name: (
    fullName: (
  - name: )
    fullName: )
  commentId: M:System.ServiceModel.Channels.CommunicationObject.Abort
  nameWithType: CommunicationObject.Abort()
- uid: System.ServiceModel.Channels.CommunicationObject.BeginClose(System.AsyncCallback,System.Object)
  parent: System.ServiceModel.Channels.CommunicationObject
  isExternal: true
  name: BeginClose(AsyncCallback, Object)
  fullName: System.ServiceModel.Channels.CommunicationObject.BeginClose(System.AsyncCallback, System.Object)
  spec.csharp:
  - uid: System.ServiceModel.Channels.CommunicationObject.BeginClose(System.AsyncCallback,System.Object)
    name: BeginClose
    fullName: System.ServiceModel.Channels.CommunicationObject.BeginClose
  - name: (
    fullName: (
  - uid: System.AsyncCallback
    name: AsyncCallback
    fullName: System.AsyncCallback
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.ServiceModel.Channels.CommunicationObject.BeginClose(System.AsyncCallback,System.Object)
    name: BeginClose
    fullName: System.ServiceModel.Channels.CommunicationObject.BeginClose
  - name: (
    fullName: (
  - uid: System.AsyncCallback
    name: AsyncCallback
    fullName: System.AsyncCallback
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
  commentId: M:System.ServiceModel.Channels.CommunicationObject.BeginClose(System.AsyncCallback,System.Object)
  nameWithType: CommunicationObject.BeginClose(AsyncCallback, Object)
- uid: System.ServiceModel.Channels.CommunicationObject.BeginClose(System.TimeSpan,System.AsyncCallback,System.Object)
  parent: System.ServiceModel.Channels.CommunicationObject
  isExternal: true
  name: BeginClose(TimeSpan, AsyncCallback, Object)
  fullName: System.ServiceModel.Channels.CommunicationObject.BeginClose(System.TimeSpan, System.AsyncCallback, System.Object)
  spec.csharp:
  - uid: System.ServiceModel.Channels.CommunicationObject.BeginClose(System.TimeSpan,System.AsyncCallback,System.Object)
    name: BeginClose
    fullName: System.ServiceModel.Channels.CommunicationObject.BeginClose
  - name: (
    fullName: (
  - uid: System.TimeSpan
    name: TimeSpan
    fullName: System.TimeSpan
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.AsyncCallback
    name: AsyncCallback
    fullName: System.AsyncCallback
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.ServiceModel.Channels.CommunicationObject.BeginClose(System.TimeSpan,System.AsyncCallback,System.Object)
    name: BeginClose
    fullName: System.ServiceModel.Channels.CommunicationObject.BeginClose
  - name: (
    fullName: (
  - uid: System.TimeSpan
    name: TimeSpan
    fullName: System.TimeSpan
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.AsyncCallback
    name: AsyncCallback
    fullName: System.AsyncCallback
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
  commentId: M:System.ServiceModel.Channels.CommunicationObject.BeginClose(System.TimeSpan,System.AsyncCallback,System.Object)
  nameWithType: CommunicationObject.BeginClose(TimeSpan, AsyncCallback, Object)
- uid: System.ServiceModel.Channels.CommunicationObject.BeginOpen(System.AsyncCallback,System.Object)
  parent: System.ServiceModel.Channels.CommunicationObject
  isExternal: true
  name: BeginOpen(AsyncCallback, Object)
  fullName: System.ServiceModel.Channels.CommunicationObject.BeginOpen(System.AsyncCallback, System.Object)
  spec.csharp:
  - uid: System.ServiceModel.Channels.CommunicationObject.BeginOpen(System.AsyncCallback,System.Object)
    name: BeginOpen
    fullName: System.ServiceModel.Channels.CommunicationObject.BeginOpen
  - name: (
    fullName: (
  - uid: System.AsyncCallback
    name: AsyncCallback
    fullName: System.AsyncCallback
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.ServiceModel.Channels.CommunicationObject.BeginOpen(System.AsyncCallback,System.Object)
    name: BeginOpen
    fullName: System.ServiceModel.Channels.CommunicationObject.BeginOpen
  - name: (
    fullName: (
  - uid: System.AsyncCallback
    name: AsyncCallback
    fullName: System.AsyncCallback
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
  commentId: M:System.ServiceModel.Channels.CommunicationObject.BeginOpen(System.AsyncCallback,System.Object)
  nameWithType: CommunicationObject.BeginOpen(AsyncCallback, Object)
- uid: System.ServiceModel.Channels.CommunicationObject.BeginOpen(System.TimeSpan,System.AsyncCallback,System.Object)
  parent: System.ServiceModel.Channels.CommunicationObject
  isExternal: true
  name: BeginOpen(TimeSpan, AsyncCallback, Object)
  fullName: System.ServiceModel.Channels.CommunicationObject.BeginOpen(System.TimeSpan, System.AsyncCallback, System.Object)
  spec.csharp:
  - uid: System.ServiceModel.Channels.CommunicationObject.BeginOpen(System.TimeSpan,System.AsyncCallback,System.Object)
    name: BeginOpen
    fullName: System.ServiceModel.Channels.CommunicationObject.BeginOpen
  - name: (
    fullName: (
  - uid: System.TimeSpan
    name: TimeSpan
    fullName: System.TimeSpan
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.AsyncCallback
    name: AsyncCallback
    fullName: System.AsyncCallback
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.ServiceModel.Channels.CommunicationObject.BeginOpen(System.TimeSpan,System.AsyncCallback,System.Object)
    name: BeginOpen
    fullName: System.ServiceModel.Channels.CommunicationObject.BeginOpen
  - name: (
    fullName: (
  - uid: System.TimeSpan
    name: TimeSpan
    fullName: System.TimeSpan
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.AsyncCallback
    name: AsyncCallback
    fullName: System.AsyncCallback
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
  commentId: M:System.ServiceModel.Channels.CommunicationObject.BeginOpen(System.TimeSpan,System.AsyncCallback,System.Object)
  nameWithType: CommunicationObject.BeginOpen(TimeSpan, AsyncCallback, Object)
- uid: System.ServiceModel.Channels.CommunicationObject.Close
  parent: System.ServiceModel.Channels.CommunicationObject
  isExternal: false
  name: Close()
  fullName: System.ServiceModel.Channels.CommunicationObject.Close()
  spec.csharp:
  - uid: System.ServiceModel.Channels.CommunicationObject.Close
    name: Close
    fullName: System.ServiceModel.Channels.CommunicationObject.Close
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.ServiceModel.Channels.CommunicationObject.Close
    name: Close
    fullName: System.ServiceModel.Channels.CommunicationObject.Close
  - name: (
    fullName: (
  - name: )
    fullName: )
  commentId: M:System.ServiceModel.Channels.CommunicationObject.Close
  nameWithType: CommunicationObject.Close()
- uid: System.ServiceModel.Channels.CommunicationObject.Close(System.TimeSpan)
  parent: System.ServiceModel.Channels.CommunicationObject
  isExternal: true
  name: Close(TimeSpan)
  fullName: System.ServiceModel.Channels.CommunicationObject.Close(System.TimeSpan)
  spec.csharp:
  - uid: System.ServiceModel.Channels.CommunicationObject.Close(System.TimeSpan)
    name: Close
    fullName: System.ServiceModel.Channels.CommunicationObject.Close
  - name: (
    fullName: (
  - uid: System.TimeSpan
    name: TimeSpan
    fullName: System.TimeSpan
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.ServiceModel.Channels.CommunicationObject.Close(System.TimeSpan)
    name: Close
    fullName: System.ServiceModel.Channels.CommunicationObject.Close
  - name: (
    fullName: (
  - uid: System.TimeSpan
    name: TimeSpan
    fullName: System.TimeSpan
    isExternal: true
  - name: )
    fullName: )
  commentId: M:System.ServiceModel.Channels.CommunicationObject.Close(System.TimeSpan)
  nameWithType: CommunicationObject.Close(TimeSpan)
- uid: System.ServiceModel.Channels.CommunicationObject.EndClose(System.IAsyncResult)
  parent: System.ServiceModel.Channels.CommunicationObject
  isExternal: true
  name: EndClose(IAsyncResult)
  fullName: System.ServiceModel.Channels.CommunicationObject.EndClose(System.IAsyncResult)
  spec.csharp:
  - uid: System.ServiceModel.Channels.CommunicationObject.EndClose(System.IAsyncResult)
    name: EndClose
    fullName: System.ServiceModel.Channels.CommunicationObject.EndClose
  - name: (
    fullName: (
  - uid: System.IAsyncResult
    name: IAsyncResult
    fullName: System.IAsyncResult
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.ServiceModel.Channels.CommunicationObject.EndClose(System.IAsyncResult)
    name: EndClose
    fullName: System.ServiceModel.Channels.CommunicationObject.EndClose
  - name: (
    fullName: (
  - uid: System.IAsyncResult
    name: IAsyncResult
    fullName: System.IAsyncResult
    isExternal: true
  - name: )
    fullName: )
  commentId: M:System.ServiceModel.Channels.CommunicationObject.EndClose(System.IAsyncResult)
  nameWithType: CommunicationObject.EndClose(IAsyncResult)
- uid: System.ServiceModel.Channels.CommunicationObject.EndOpen(System.IAsyncResult)
  parent: System.ServiceModel.Channels.CommunicationObject
  isExternal: true
  name: EndOpen(IAsyncResult)
  fullName: System.ServiceModel.Channels.CommunicationObject.EndOpen(System.IAsyncResult)
  spec.csharp:
  - uid: System.ServiceModel.Channels.CommunicationObject.EndOpen(System.IAsyncResult)
    name: EndOpen
    fullName: System.ServiceModel.Channels.CommunicationObject.EndOpen
  - name: (
    fullName: (
  - uid: System.IAsyncResult
    name: IAsyncResult
    fullName: System.IAsyncResult
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.ServiceModel.Channels.CommunicationObject.EndOpen(System.IAsyncResult)
    name: EndOpen
    fullName: System.ServiceModel.Channels.CommunicationObject.EndOpen
  - name: (
    fullName: (
  - uid: System.IAsyncResult
    name: IAsyncResult
    fullName: System.IAsyncResult
    isExternal: true
  - name: )
    fullName: )
  commentId: M:System.ServiceModel.Channels.CommunicationObject.EndOpen(System.IAsyncResult)
  nameWithType: CommunicationObject.EndOpen(IAsyncResult)
- uid: System.ServiceModel.Channels.CommunicationObject.Fault
  parent: System.ServiceModel.Channels.CommunicationObject
  isExternal: false
  name: Fault()
  fullName: System.ServiceModel.Channels.CommunicationObject.Fault()
  spec.csharp:
  - uid: System.ServiceModel.Channels.CommunicationObject.Fault
    name: Fault
    fullName: System.ServiceModel.Channels.CommunicationObject.Fault
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.ServiceModel.Channels.CommunicationObject.Fault
    name: Fault
    fullName: System.ServiceModel.Channels.CommunicationObject.Fault
  - name: (
    fullName: (
  - name: )
    fullName: )
  commentId: M:System.ServiceModel.Channels.CommunicationObject.Fault
  nameWithType: CommunicationObject.Fault()
- uid: System.ServiceModel.Channels.CommunicationObject.GetCommunicationObjectType
  parent: System.ServiceModel.Channels.CommunicationObject
  isExternal: false
  name: GetCommunicationObjectType()
  fullName: System.ServiceModel.Channels.CommunicationObject.GetCommunicationObjectType()
  spec.csharp:
  - uid: System.ServiceModel.Channels.CommunicationObject.GetCommunicationObjectType
    name: GetCommunicationObjectType
    fullName: System.ServiceModel.Channels.CommunicationObject.GetCommunicationObjectType
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.ServiceModel.Channels.CommunicationObject.GetCommunicationObjectType
    name: GetCommunicationObjectType
    fullName: System.ServiceModel.Channels.CommunicationObject.GetCommunicationObjectType
  - name: (
    fullName: (
  - name: )
    fullName: )
  commentId: M:System.ServiceModel.Channels.CommunicationObject.GetCommunicationObjectType
  nameWithType: CommunicationObject.GetCommunicationObjectType()
- uid: System.ServiceModel.Channels.CommunicationObject.OnClosed
  parent: System.ServiceModel.Channels.CommunicationObject
  isExternal: false
  name: OnClosed()
  fullName: System.ServiceModel.Channels.CommunicationObject.OnClosed()
  spec.csharp:
  - uid: System.ServiceModel.Channels.CommunicationObject.OnClosed
    name: OnClosed
    fullName: System.ServiceModel.Channels.CommunicationObject.OnClosed
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.ServiceModel.Channels.CommunicationObject.OnClosed
    name: OnClosed
    fullName: System.ServiceModel.Channels.CommunicationObject.OnClosed
  - name: (
    fullName: (
  - name: )
    fullName: )
  commentId: M:System.ServiceModel.Channels.CommunicationObject.OnClosed
  nameWithType: CommunicationObject.OnClosed()
- uid: System.ServiceModel.Channels.CommunicationObject.OnClosing
  parent: System.ServiceModel.Channels.CommunicationObject
  isExternal: false
  name: OnClosing()
  fullName: System.ServiceModel.Channels.CommunicationObject.OnClosing()
  spec.csharp:
  - uid: System.ServiceModel.Channels.CommunicationObject.OnClosing
    name: OnClosing
    fullName: System.ServiceModel.Channels.CommunicationObject.OnClosing
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.ServiceModel.Channels.CommunicationObject.OnClosing
    name: OnClosing
    fullName: System.ServiceModel.Channels.CommunicationObject.OnClosing
  - name: (
    fullName: (
  - name: )
    fullName: )
  commentId: M:System.ServiceModel.Channels.CommunicationObject.OnClosing
  nameWithType: CommunicationObject.OnClosing()
- uid: System.ServiceModel.Channels.CommunicationObject.OnFaulted
  parent: System.ServiceModel.Channels.CommunicationObject
  isExternal: false
  name: OnFaulted()
  fullName: System.ServiceModel.Channels.CommunicationObject.OnFaulted()
  spec.csharp:
  - uid: System.ServiceModel.Channels.CommunicationObject.OnFaulted
    name: OnFaulted
    fullName: System.ServiceModel.Channels.CommunicationObject.OnFaulted
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.ServiceModel.Channels.CommunicationObject.OnFaulted
    name: OnFaulted
    fullName: System.ServiceModel.Channels.CommunicationObject.OnFaulted
  - name: (
    fullName: (
  - name: )
    fullName: )
  commentId: M:System.ServiceModel.Channels.CommunicationObject.OnFaulted
  nameWithType: CommunicationObject.OnFaulted()
- uid: System.ServiceModel.Channels.CommunicationObject.Open
  parent: System.ServiceModel.Channels.CommunicationObject
  isExternal: false
  name: Open()
  fullName: System.ServiceModel.Channels.CommunicationObject.Open()
  spec.csharp:
  - uid: System.ServiceModel.Channels.CommunicationObject.Open
    name: Open
    fullName: System.ServiceModel.Channels.CommunicationObject.Open
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.ServiceModel.Channels.CommunicationObject.Open
    name: Open
    fullName: System.ServiceModel.Channels.CommunicationObject.Open
  - name: (
    fullName: (
  - name: )
    fullName: )
  commentId: M:System.ServiceModel.Channels.CommunicationObject.Open
  nameWithType: CommunicationObject.Open()
- uid: System.ServiceModel.Channels.CommunicationObject.Open(System.TimeSpan)
  parent: System.ServiceModel.Channels.CommunicationObject
  isExternal: true
  name: Open(TimeSpan)
  fullName: System.ServiceModel.Channels.CommunicationObject.Open(System.TimeSpan)
  spec.csharp:
  - uid: System.ServiceModel.Channels.CommunicationObject.Open(System.TimeSpan)
    name: Open
    fullName: System.ServiceModel.Channels.CommunicationObject.Open
  - name: (
    fullName: (
  - uid: System.TimeSpan
    name: TimeSpan
    fullName: System.TimeSpan
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.ServiceModel.Channels.CommunicationObject.Open(System.TimeSpan)
    name: Open
    fullName: System.ServiceModel.Channels.CommunicationObject.Open
  - name: (
    fullName: (
  - uid: System.TimeSpan
    name: TimeSpan
    fullName: System.TimeSpan
    isExternal: true
  - name: )
    fullName: )
  commentId: M:System.ServiceModel.Channels.CommunicationObject.Open(System.TimeSpan)
  nameWithType: CommunicationObject.Open(TimeSpan)
- uid: System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  commentId: M:System.Object.ToString
  nameWithType: Object.ToString()
- uid: System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
  commentId: M:System.Object.Equals(System.Object)
  nameWithType: Object.Equals(Object)
- uid: System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
  commentId: M:System.Object.Equals(System.Object,System.Object)
  nameWithType: Object.Equals(Object, Object)
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
- uid: System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  commentId: M:System.Object.GetHashCode
  nameWithType: Object.GetHashCode()
- uid: System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  commentId: M:System.Object.GetType
  nameWithType: Object.GetType()
- uid: System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  commentId: M:System.Object.MemberwiseClone
  nameWithType: Object.MemberwiseClone()
- uid: System
  isExternal: false
  name: System
  fullName: System
  commentId: N:System
  nameWithType: System
- uid: System.ServiceModel.Channels
  isExternal: false
  name: System.ServiceModel.Channels
  fullName: System.ServiceModel.Channels
  commentId: N:System.ServiceModel.Channels
  nameWithType: System.ServiceModel.Channels
- uid: System.ServiceModel.Channels.IChannelFactory`1
  isExternal: false
  name: IChannelFactory<TChannel>
  fullName: System.ServiceModel.Channels.IChannelFactory<TChannel>
  fullname.vb: System.ServiceModel.Channels.IChannelFactory(Of TChannel)
  name.vb: IChannelFactory(Of TChannel)
  spec.csharp:
  - uid: System.ServiceModel.Channels.IChannelFactory`1
    name: IChannelFactory
    fullName: System.ServiceModel.Channels.IChannelFactory
  - name: <
    fullName: <
  - name: TChannel
    fullName: TChannel
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: System.ServiceModel.Channels.IChannelFactory`1
    name: IChannelFactory
    fullName: System.ServiceModel.Channels.IChannelFactory
  - name: '(Of '
    fullName: '(Of '
  - name: TChannel
    fullName: TChannel
  - name: )
    fullName: )
  commentId: T:System.ServiceModel.Channels.IChannelFactory`1
  nameWithType: IChannelFactory<TChannel>
  nameWithType.vb: IChannelFactory(Of TChannel)
- uid: System.ServiceModel.Channels.Binding
  parent: System.ServiceModel.Channels
  isExternal: false
  name: Binding
  fullName: System.ServiceModel.Channels.Binding
  commentId: T:System.ServiceModel.Channels.Binding
  nameWithType: Binding
- uid: System.ServiceModel.EndpointAddress
  parent: System.ServiceModel
  isExternal: false
  name: EndpointAddress
  fullName: System.ServiceModel.EndpointAddress
  commentId: T:System.ServiceModel.EndpointAddress
  nameWithType: EndpointAddress
- uid: System.String
  parent: System
  isExternal: false
  name: String
  fullName: System.String
  commentId: T:System.String
  nameWithType: String
- uid: System.Type
  parent: System
  isExternal: false
  name: Type
  fullName: System.Type
  commentId: T:System.Type
  nameWithType: Type
- uid: '{TChannel}'
  definition: TChannel
  name: TChannel
  fullName: TChannel
  commentId: '!:TChannel'
  nameWithType: TChannel
- uid: TChannel
  isExternal: false
  name: TChannel
  fullName: TChannel
  nameWithType: TChannel
- uid: System.ServiceModel.Channels.IChannelFactory{{TChannel}}.CreateChannel(System.ServiceModel.EndpointAddress)
  parent: System.ServiceModel.Channels.IChannelFactory{{TChannel}}
  definition: System.ServiceModel.Channels.IChannelFactory`1.CreateChannel(System.ServiceModel.EndpointAddress)
  name: CreateChannel(EndpointAddress)
  fullName: System.ServiceModel.Channels.IChannelFactory<TChannel>.CreateChannel(System.ServiceModel.EndpointAddress)
  fullname.vb: System.ServiceModel.Channels.IChannelFactory(Of TChannel).CreateChannel(System.ServiceModel.EndpointAddress)
  spec.csharp:
  - uid: System.ServiceModel.Channels.IChannelFactory`1.CreateChannel(System.ServiceModel.EndpointAddress)
    name: CreateChannel
    fullName: System.ServiceModel.Channels.IChannelFactory<TChannel>.CreateChannel
  - name: (
    fullName: (
  - uid: System.ServiceModel.EndpointAddress
    name: EndpointAddress
    fullName: System.ServiceModel.EndpointAddress
  - name: )
    fullName: )
  spec.vb:
  - uid: System.ServiceModel.Channels.IChannelFactory`1.CreateChannel(System.ServiceModel.EndpointAddress)
    name: CreateChannel
    fullName: System.ServiceModel.Channels.IChannelFactory(Of TChannel).CreateChannel
  - name: (
    fullName: (
  - uid: System.ServiceModel.EndpointAddress
    name: EndpointAddress
    fullName: System.ServiceModel.EndpointAddress
  - name: )
    fullName: )
  commentId: M:System.ServiceModel.Channels.IChannelFactory{`0}.CreateChannel(System.ServiceModel.EndpointAddress)
  nameWithType: IChannelFactory<TChannel>.CreateChannel(EndpointAddress)
  nameWithType.vb: IChannelFactory(Of TChannel).CreateChannel(EndpointAddress)
- uid: System.ServiceModel.Channels.IChannelFactory`1.CreateChannel(System.ServiceModel.EndpointAddress)
  isExternal: false
  name: CreateChannel(EndpointAddress)
  fullName: System.ServiceModel.Channels.IChannelFactory<TChannel>.CreateChannel(System.ServiceModel.EndpointAddress)
  fullname.vb: System.ServiceModel.Channels.IChannelFactory(Of TChannel).CreateChannel(System.ServiceModel.EndpointAddress)
  spec.csharp:
  - uid: System.ServiceModel.Channels.IChannelFactory`1.CreateChannel(System.ServiceModel.EndpointAddress)
    name: CreateChannel
    fullName: System.ServiceModel.Channels.IChannelFactory<TChannel>.CreateChannel
  - name: (
    fullName: (
  - uid: System.ServiceModel.EndpointAddress
    name: EndpointAddress
    fullName: System.ServiceModel.EndpointAddress
  - name: )
    fullName: )
  spec.vb:
  - uid: System.ServiceModel.Channels.IChannelFactory`1.CreateChannel(System.ServiceModel.EndpointAddress)
    name: CreateChannel
    fullName: System.ServiceModel.Channels.IChannelFactory(Of TChannel).CreateChannel
  - name: (
    fullName: (
  - uid: System.ServiceModel.EndpointAddress
    name: EndpointAddress
    fullName: System.ServiceModel.EndpointAddress
  - name: )
    fullName: )
  commentId: M:System.ServiceModel.Channels.IChannelFactory`1.CreateChannel(System.ServiceModel.EndpointAddress)
  nameWithType: IChannelFactory<TChannel>.CreateChannel(EndpointAddress)
  nameWithType.vb: IChannelFactory(Of TChannel).CreateChannel(EndpointAddress)
- uid: System.ServiceModel.Channels.IChannelFactory{{TChannel}}.CreateChannel(System.ServiceModel.EndpointAddress,System.Uri)
  parent: System.ServiceModel.Channels.IChannelFactory{{TChannel}}
  definition: System.ServiceModel.Channels.IChannelFactory`1.CreateChannel(System.ServiceModel.EndpointAddress,System.Uri)
  name: CreateChannel(EndpointAddress, Uri)
  fullName: System.ServiceModel.Channels.IChannelFactory<TChannel>.CreateChannel(System.ServiceModel.EndpointAddress, System.Uri)
  fullname.vb: System.ServiceModel.Channels.IChannelFactory(Of TChannel).CreateChannel(System.ServiceModel.EndpointAddress, System.Uri)
  spec.csharp:
  - uid: System.ServiceModel.Channels.IChannelFactory`1.CreateChannel(System.ServiceModel.EndpointAddress,System.Uri)
    name: CreateChannel
    fullName: System.ServiceModel.Channels.IChannelFactory<TChannel>.CreateChannel
  - name: (
    fullName: (
  - uid: System.ServiceModel.EndpointAddress
    name: EndpointAddress
    fullName: System.ServiceModel.EndpointAddress
  - name: ', '
    fullName: ', '
  - uid: System.Uri
    name: Uri
    fullName: System.Uri
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.ServiceModel.Channels.IChannelFactory`1.CreateChannel(System.ServiceModel.EndpointAddress,System.Uri)
    name: CreateChannel
    fullName: System.ServiceModel.Channels.IChannelFactory(Of TChannel).CreateChannel
  - name: (
    fullName: (
  - uid: System.ServiceModel.EndpointAddress
    name: EndpointAddress
    fullName: System.ServiceModel.EndpointAddress
  - name: ', '
    fullName: ', '
  - uid: System.Uri
    name: Uri
    fullName: System.Uri
    isExternal: true
  - name: )
    fullName: )
  commentId: M:System.ServiceModel.Channels.IChannelFactory{`0}.CreateChannel(System.ServiceModel.EndpointAddress,System.Uri)
  nameWithType: IChannelFactory<TChannel>.CreateChannel(EndpointAddress, Uri)
  nameWithType.vb: IChannelFactory(Of TChannel).CreateChannel(EndpointAddress, Uri)
- uid: System.Uri
  parent: System
  isExternal: false
  name: Uri
  fullName: System.Uri
  commentId: T:System.Uri
  nameWithType: Uri
- uid: System.ServiceModel.Channels.IChannelFactory`1.CreateChannel(System.ServiceModel.EndpointAddress,System.Uri)
  isExternal: true
  name: CreateChannel(EndpointAddress, Uri)
  fullName: System.ServiceModel.Channels.IChannelFactory<TChannel>.CreateChannel(System.ServiceModel.EndpointAddress, System.Uri)
  fullname.vb: System.ServiceModel.Channels.IChannelFactory(Of TChannel).CreateChannel(System.ServiceModel.EndpointAddress, System.Uri)
  spec.csharp:
  - uid: System.ServiceModel.Channels.IChannelFactory`1.CreateChannel(System.ServiceModel.EndpointAddress,System.Uri)
    name: CreateChannel
    fullName: System.ServiceModel.Channels.IChannelFactory<TChannel>.CreateChannel
  - name: (
    fullName: (
  - uid: System.ServiceModel.EndpointAddress
    name: EndpointAddress
    fullName: System.ServiceModel.EndpointAddress
  - name: ', '
    fullName: ', '
  - uid: System.Uri
    name: Uri
    fullName: System.Uri
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.ServiceModel.Channels.IChannelFactory`1.CreateChannel(System.ServiceModel.EndpointAddress,System.Uri)
    name: CreateChannel
    fullName: System.ServiceModel.Channels.IChannelFactory(Of TChannel).CreateChannel
  - name: (
    fullName: (
  - uid: System.ServiceModel.EndpointAddress
    name: EndpointAddress
    fullName: System.ServiceModel.EndpointAddress
  - name: ', '
    fullName: ', '
  - uid: System.Uri
    name: Uri
    fullName: System.Uri
    isExternal: true
  - name: )
    fullName: )
  commentId: M:System.ServiceModel.Channels.IChannelFactory`1.CreateChannel(System.ServiceModel.EndpointAddress,System.Uri)
  nameWithType: IChannelFactory<TChannel>.CreateChannel(EndpointAddress, Uri)
  nameWithType.vb: IChannelFactory(Of TChannel).CreateChannel(EndpointAddress, Uri)
- uid: System.ServiceModel.ChannelFactory.CreateDescription
  parent: System.ServiceModel.ChannelFactory
  isExternal: false
  name: CreateDescription()
  fullName: System.ServiceModel.ChannelFactory.CreateDescription()
  spec.csharp:
  - uid: System.ServiceModel.ChannelFactory.CreateDescription
    name: CreateDescription
    fullName: System.ServiceModel.ChannelFactory.CreateDescription
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.ServiceModel.ChannelFactory.CreateDescription
    name: CreateDescription
    fullName: System.ServiceModel.ChannelFactory.CreateDescription
  - name: (
    fullName: (
  - name: )
    fullName: )
  commentId: M:System.ServiceModel.ChannelFactory.CreateDescription
  nameWithType: ChannelFactory.CreateDescription()
- uid: System.ServiceModel.Description.ServiceEndpoint
  parent: System.ServiceModel.Description
  isExternal: false
  name: ServiceEndpoint
  fullName: System.ServiceModel.Description.ServiceEndpoint
  commentId: T:System.ServiceModel.Description.ServiceEndpoint
  nameWithType: ServiceEndpoint
- uid: System.ServiceModel.Description
  isExternal: false
  name: System.ServiceModel.Description
  fullName: System.ServiceModel.Description
  commentId: N:System.ServiceModel.Description
  nameWithType: System.ServiceModel.Description
- uid: System.ArgumentNullException
  isExternal: false
  name: ArgumentNullException
  fullName: System.ArgumentNullException
  nameWithType: ArgumentNullException
  commentId: T:System.ArgumentNullException
- uid: System.InvalidOperationException
  parent: System
  isExternal: false
  name: InvalidOperationException
  fullName: System.InvalidOperationException
  nameWithType: InvalidOperationException
  commentId: T:System.InvalidOperationException
