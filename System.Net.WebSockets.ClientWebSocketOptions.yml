### YamlMime:ManagedReference
items:
- uid: System.Net.WebSockets.ClientWebSocketOptions
  commentId: T:System.Net.WebSockets.ClientWebSocketOptions
  id: ClientWebSocketOptions
  parent: System.Net.WebSockets
  children:
  - System.Net.WebSockets.ClientWebSocketOptions.AddSubProtocol(System.String)
  - System.Net.WebSockets.ClientWebSocketOptions.ClientCertificates
  - System.Net.WebSockets.ClientWebSocketOptions.Cookies
  - System.Net.WebSockets.ClientWebSocketOptions.Credentials
  - System.Net.WebSockets.ClientWebSocketOptions.KeepAliveInterval
  - System.Net.WebSockets.ClientWebSocketOptions.Proxy
  - System.Net.WebSockets.ClientWebSocketOptions.SetRequestHeader(System.String,System.String)
  langs:
  - csharp
  - vb
  name: ClientWebSocketOptions
  nameWithType: ClientWebSocketOptions
  fullName: System.Net.WebSockets.ClientWebSocketOptions
  type: Class
  source:
    remote:
      path: src/System.Net.WebSockets.Client/src/System/Net/WebSockets/ClientWebSocketOptions.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: ClientWebSocketOptions
    path: src/System.Net.WebSockets.Client/src/System/Net/WebSockets/ClientWebSocketOptions.cs
    startLine: 12
  assemblies:
  - System.Net.WebSockets.Client
  namespace: System.Net.WebSockets
  summary: "\n<p>Options to use with a  <xref href=\"System.Net.WebSockets.ClientWebSocket\" data-throw-if-not-resolved=\"false\"></xref> object.</p>\n"
  syntax:
    content: public sealed class ClientWebSocketOptions
    content.vb: Public NotInheritable Class ClientWebSocketOptions
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  modifiers.csharp:
  - public
  - sealed
  - class
  modifiers.vb:
  - Public
  - NotInheritable
  - Class
- uid: System.Net.WebSockets.ClientWebSocketOptions.ClientCertificates
  commentId: P:System.Net.WebSockets.ClientWebSocketOptions.ClientCertificates
  id: ClientCertificates
  parent: System.Net.WebSockets.ClientWebSocketOptions
  langs:
  - csharp
  - vb
  name: ClientCertificates
  nameWithType: ClientWebSocketOptions.ClientCertificates
  fullName: System.Net.WebSockets.ClientWebSocketOptions.ClientCertificates
  type: Property
  source:
    remote:
      path: src/System.Net.WebSockets.Client/src/System/Net/WebSockets/ClientWebSocketOptions.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: ClientCertificates
    path: src/System.Net.WebSockets.Client/src/System/Net/WebSockets/ClientWebSocketOptions.cs
    startLine: 70
  assemblies:
  - System.Net.WebSockets.Client
  namespace: System.Net.WebSockets
  summary: "\n<p>Gets or sets a collection of client side certificates.</p>\n"
  syntax:
    content: >-
      [SuppressMessage("Microsoft.Usage", "CA2227:CollectionPropertiesShouldBeReadOnly", Justification = "This collection will be handed off directly to HttpWebRequest.")]

      public X509CertificateCollection ClientCertificates { get; set; }
    content.vb: >-
      <SuppressMessage("Microsoft.Usage", "CA2227:CollectionPropertiesShouldBeReadOnly", Justification:="This collection will be handed off directly to HttpWebRequest.")>

      Public Property ClientCertificates As X509CertificateCollection
    parameters: []
    return:
      type: X509CertificateCollection
      description: "\n<p>Returns <xref href=\"System.Security.Cryptography.X509Certificates.X509CertificateCollection\" data-throw-if-not-resolved=\"false\"></xref>.</p>\n<p>A collection of client side certificates.</p>\n"
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: System.Net.WebSockets.ClientWebSocketOptions.Cookies
  commentId: P:System.Net.WebSockets.ClientWebSocketOptions.Cookies
  id: Cookies
  parent: System.Net.WebSockets.ClientWebSocketOptions
  langs:
  - csharp
  - vb
  name: Cookies
  nameWithType: ClientWebSocketOptions.Cookies
  fullName: System.Net.WebSockets.ClientWebSocketOptions.Cookies
  type: Property
  source:
    remote:
      path: src/System.Net.WebSockets.Client/src/System/Net/WebSockets/ClientWebSocketOptions.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: Cookies
    path: src/System.Net.WebSockets.Client/src/System/Net/WebSockets/ClientWebSocketOptions.cs
    startLine: 93
  assemblies:
  - System.Net.WebSockets.Client
  namespace: System.Net.WebSockets
  summary: "\n<p>Gets or sets the cookies associated with the request.</p>\n"
  syntax:
    content: public CookieContainer Cookies { get; set; }
    content.vb: Public Property Cookies As CookieContainer
    parameters: []
    return:
      type: CookieContainer
      description: "\n<p>Returns <xref href=\"System.Net.CookieContainer\" data-throw-if-not-resolved=\"false\"></xref>.</p>\n<p>The cookies associated with the request.</p>\n"
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: System.Net.WebSockets.ClientWebSocketOptions.Credentials
  commentId: P:System.Net.WebSockets.ClientWebSocketOptions.Credentials
  id: Credentials
  parent: System.Net.WebSockets.ClientWebSocketOptions
  langs:
  - csharp
  - vb
  name: Credentials
  nameWithType: ClientWebSocketOptions.Credentials
  fullName: System.Net.WebSockets.ClientWebSocketOptions.Credentials
  type: Property
  source:
    remote:
      path: src/System.Net.WebSockets.Client/src/System/Net/WebSockets/ClientWebSocketOptions.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: Credentials
    path: src/System.Net.WebSockets.Client/src/System/Net/WebSockets/ClientWebSocketOptions.cs
    startLine: 44
  assemblies:
  - System.Net.WebSockets.Client
  namespace: System.Net.WebSockets
  summary: "\n<p>Gets or sets the credential information for the client.</p>\n"
  syntax:
    content: public ICredentials Credentials { get; set; }
    content.vb: Public Property Credentials As ICredentials
    parameters: []
    return:
      type: ICredentials
      description: "\n<p>Returns <xref href=\"System.Net.ICredentials\" data-throw-if-not-resolved=\"false\"></xref>.</p>\n<p>The credential information for the client.</p>\n"
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: System.Net.WebSockets.ClientWebSocketOptions.KeepAliveInterval
  commentId: P:System.Net.WebSockets.ClientWebSocketOptions.KeepAliveInterval
  id: KeepAliveInterval
  parent: System.Net.WebSockets.ClientWebSocketOptions
  langs:
  - csharp
  - vb
  name: KeepAliveInterval
  nameWithType: ClientWebSocketOptions.KeepAliveInterval
  fullName: System.Net.WebSockets.ClientWebSocketOptions.KeepAliveInterval
  type: Property
  source:
    remote:
      path: src/System.Net.WebSockets.Client/src/System/Net/WebSockets/ClientWebSocketOptions.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: KeepAliveInterval
    path: src/System.Net.WebSockets.Client/src/System/Net/WebSockets/ClientWebSocketOptions.cs
    startLine: 126
  assemblies:
  - System.Net.WebSockets.Client
  namespace: System.Net.WebSockets
  summary: "\n<p>Gets or sets the WebSocket protocol keep-alive interval in milliseconds.</p>\n"
  syntax:
    content: public TimeSpan KeepAliveInterval { get; set; }
    content.vb: Public Property KeepAliveInterval As TimeSpan
    parameters: []
    return:
      type: System.TimeSpan
      description: "\n<p>Returns <xref href=\"System.TimeSpan\" data-throw-if-not-resolved=\"false\"></xref>.</p>\n<p>The WebSocket protocol keep-alive interval in milliseconds.</p>\n"
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: System.Net.WebSockets.ClientWebSocketOptions.Proxy
  commentId: P:System.Net.WebSockets.ClientWebSocketOptions.Proxy
  id: Proxy
  parent: System.Net.WebSockets.ClientWebSocketOptions
  langs:
  - csharp
  - vb
  name: Proxy
  nameWithType: ClientWebSocketOptions.Proxy
  fullName: System.Net.WebSockets.ClientWebSocketOptions.Proxy
  type: Property
  source:
    remote:
      path: src/System.Net.WebSockets.Client/src/System/Net/WebSockets/ClientWebSocketOptions.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: Proxy
    path: src/System.Net.WebSockets.Client/src/System/Net/WebSockets/ClientWebSocketOptions.cs
    startLine: 57
  assemblies:
  - System.Net.WebSockets.Client
  namespace: System.Net.WebSockets
  summary: "\n<p>Gets or sets the proxy for WebSocket requests.</p>\n"
  syntax:
    content: public IWebProxy Proxy { get; set; }
    content.vb: Public Property Proxy As IWebProxy
    parameters: []
    return:
      type: IWebProxy
      description: "\n<p>Returns <xref href=\"System.Net.IWebProxy\" data-throw-if-not-resolved=\"false\"></xref>.</p>\n<p>The proxy for WebSocket requests.</p>\n"
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: System.Net.WebSockets.ClientWebSocketOptions.AddSubProtocol(System.String)
  commentId: M:System.Net.WebSockets.ClientWebSocketOptions.AddSubProtocol(System.String)
  id: AddSubProtocol(System.String)
  parent: System.Net.WebSockets.ClientWebSocketOptions
  langs:
  - csharp
  - vb
  name: AddSubProtocol(String)
  nameWithType: ClientWebSocketOptions.AddSubProtocol(String)
  fullName: System.Net.WebSockets.ClientWebSocketOptions.AddSubProtocol(System.String)
  type: Method
  source:
    remote:
      path: src/System.Net.WebSockets.Client/src/System/Net/WebSockets/ClientWebSocketOptions.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: AddSubProtocol
    path: src/System.Net.WebSockets.Client/src/System/Net/WebSockets/ClientWebSocketOptions.cs
    startLine: 110
  assemblies:
  - System.Net.WebSockets.Client
  namespace: System.Net.WebSockets
  summary: "\n<p>Adds a sub-protocol to be negotiated during the WebSocket connection handshake.</p>\n"
  syntax:
    content: public void AddSubProtocol(string subProtocol)
    content.vb: Public Sub AddSubProtocol(subProtocol As String)
    parameters:
    - id: subProtocol
      type: System.String
      description: "\n<p>The WebSocket sub-protocol to add.</p>\n"
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: System.Net.WebSockets.ClientWebSocketOptions.SetRequestHeader(System.String,System.String)
  commentId: M:System.Net.WebSockets.ClientWebSocketOptions.SetRequestHeader(System.String,System.String)
  id: SetRequestHeader(System.String,System.String)
  parent: System.Net.WebSockets.ClientWebSocketOptions
  langs:
  - csharp
  - vb
  name: SetRequestHeader(String, String)
  nameWithType: ClientWebSocketOptions.SetRequestHeader(String, String)
  fullName: System.Net.WebSockets.ClientWebSocketOptions.SetRequestHeader(System.String, System.String)
  type: Method
  source:
    remote:
      path: src/System.Net.WebSockets.Client/src/System/Net/WebSockets/ClientWebSocketOptions.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: SetRequestHeader
    path: src/System.Net.WebSockets.Client/src/System/Net/WebSockets/ClientWebSocketOptions.cs
    startLine: 32
  assemblies:
  - System.Net.WebSockets.Client
  namespace: System.Net.WebSockets
  summary: "\n<p>Creates a HTTP request header and its value.</p>\n"
  syntax:
    content: public void SetRequestHeader(string headerName, string headerValue)
    content.vb: Public Sub SetRequestHeader(headerName As String, headerValue As String)
    parameters:
    - id: headerName
      type: System.String
      description: "\n<p>The name of the HTTP header.</p>\n"
    - id: headerValue
      type: System.String
      description: "\n<p>The value of the HTTP header.</p>\n"
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
references:
- uid: System.Net.WebSockets
  commentId: N:System.Net.WebSockets
  isExternal: false
  name: System.Net.WebSockets
  nameWithType: System.Net.WebSockets
  fullName: System.Net.WebSockets
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: false
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: System.Security.Cryptography.X509Certificates.X509CertificateCollection
  commentId: T:System.Security.Cryptography.X509Certificates.X509CertificateCollection
  parent: System.Security.Cryptography.X509Certificates
  isExternal: false
  name: X509CertificateCollection
  nameWithType: X509CertificateCollection
  fullName: System.Security.Cryptography.X509Certificates.X509CertificateCollection
- uid: System.Security.Cryptography.X509Certificates
  commentId: N:System.Security.Cryptography.X509Certificates
  isExternal: false
  name: System.Security.Cryptography.X509Certificates
  nameWithType: System.Security.Cryptography.X509Certificates
  fullName: System.Security.Cryptography.X509Certificates
- uid: System.Net.CookieContainer
  commentId: T:System.Net.CookieContainer
  isExternal: false
  name: CookieContainer
  nameWithType: CookieContainer
  fullName: System.Net.CookieContainer
- uid: System.Net.ICredentials
  commentId: T:System.Net.ICredentials
  parent: System.Net
  isExternal: false
  name: ICredentials
  nameWithType: ICredentials
  fullName: System.Net.ICredentials
- uid: System.Net
  commentId: N:System.Net
  isExternal: false
  name: System.Net
  nameWithType: System.Net
  fullName: System.Net
- uid: System.TimeSpan
  commentId: T:System.TimeSpan
  parent: System
  isExternal: false
  name: TimeSpan
  nameWithType: TimeSpan
  fullName: System.TimeSpan
- uid: System.Net.IWebProxy
  commentId: T:System.Net.IWebProxy
  isExternal: false
  name: IWebProxy
  nameWithType: IWebProxy
  fullName: System.Net.IWebProxy
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: false
  name: String
  nameWithType: String
  fullName: System.String
