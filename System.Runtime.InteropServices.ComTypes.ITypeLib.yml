### YamlMime:ManagedReference
items:
- uid: System.Runtime.InteropServices.ComTypes.ITypeLib
  commentId: T:System.Runtime.InteropServices.ComTypes.ITypeLib
  id: ITypeLib
  parent: System.Runtime.InteropServices.ComTypes
  children:
  - System.Runtime.InteropServices.ComTypes.ITypeLib.FindName(System.String,System.Int32,System.Runtime.InteropServices.ComTypes.ITypeInfo[],System.Int32[],System.Int16@)
  - System.Runtime.InteropServices.ComTypes.ITypeLib.GetDocumentation(System.Int32,System.String@,System.String@,System.Int32@,System.String@)
  - System.Runtime.InteropServices.ComTypes.ITypeLib.GetLibAttr(System.IntPtr@)
  - System.Runtime.InteropServices.ComTypes.ITypeLib.GetTypeComp(System.Runtime.InteropServices.ComTypes.ITypeComp@)
  - System.Runtime.InteropServices.ComTypes.ITypeLib.GetTypeInfo(System.Int32,System.Runtime.InteropServices.ComTypes.ITypeInfo@)
  - System.Runtime.InteropServices.ComTypes.ITypeLib.GetTypeInfoCount
  - System.Runtime.InteropServices.ComTypes.ITypeLib.GetTypeInfoOfGuid(System.Guid@,System.Runtime.InteropServices.ComTypes.ITypeInfo@)
  - System.Runtime.InteropServices.ComTypes.ITypeLib.GetTypeInfoType(System.Int32,System.Runtime.InteropServices.ComTypes.TYPEKIND@)
  - System.Runtime.InteropServices.ComTypes.ITypeLib.IsName(System.String,System.Int32)
  - System.Runtime.InteropServices.ComTypes.ITypeLib.ReleaseTLibAttr(System.IntPtr)
  langs:
  - csharp
  - vb
  name: ITypeLib
  nameWithType: ITypeLib
  fullName: System.Runtime.InteropServices.ComTypes.ITypeLib
  type: Interface
  source:
    remote:
      path: src/mscorlib/src/System/Runtime/InteropServices/ComTypes/ITypeLib.cs
      branch: master
      repo: https://github.com/dotnet/coreclr.git
    id: ITypeLib
    path: src/mscorlib/src/System/Runtime/InteropServices/ComTypes/ITypeLib.cs
    startLine: 48
  assemblies:
  - System.Runtime.InteropServices
  namespace: System.Runtime.InteropServices.ComTypes
  summary: "\n<p>Provides the managed definition of the <strong>ITypeLib</strong> interface.</p>\n"
  syntax:
    content: >-
      [Guid("00020402-0000-0000-C000-000000000046")]

      [InterfaceType(ComInterfaceType.InterfaceIsIUnknown)]

      [ComImport]

      public interface ITypeLib
    content.vb: >-
      <Guid("00020402-0000-0000-C000-000000000046")>

      <InterfaceType(ComInterfaceType.InterfaceIsIUnknown)>

      <ComImport>

      Public Interface ITypeLib
  attributes:
  - type: System.Runtime.InteropServices.InterfaceTypeAttribute
    ctor: System.Runtime.InteropServices.InterfaceTypeAttribute.#ctor(System.Runtime.InteropServices.ComInterfaceType)
    arguments:
    - type: System.Runtime.InteropServices.ComInterfaceType
      value: 1
  modifiers.csharp:
  - public
  - interface
  modifiers.vb:
  - Public
  - Interface
- uid: System.Runtime.InteropServices.ComTypes.ITypeLib.FindName(System.String,System.Int32,System.Runtime.InteropServices.ComTypes.ITypeInfo[],System.Int32[],System.Int16@)
  commentId: M:System.Runtime.InteropServices.ComTypes.ITypeLib.FindName(System.String,System.Int32,System.Runtime.InteropServices.ComTypes.ITypeInfo[],System.Int32[],System.Int16@)
  id: FindName(System.String,System.Int32,System.Runtime.InteropServices.ComTypes.ITypeInfo[],System.Int32[],System.Int16@)
  parent: System.Runtime.InteropServices.ComTypes.ITypeLib
  langs:
  - csharp
  - vb
  name: FindName(String, Int32, ITypeInfo[], Int32[], ref Int16)
  nameWithType: ITypeLib.FindName(String, Int32, ITypeInfo[], Int32[], ref Int16)
  fullName: System.Runtime.InteropServices.ComTypes.ITypeLib.FindName(System.String, System.Int32, System.Runtime.InteropServices.ComTypes.ITypeInfo[], System.Int32[], ref System.Int16)
  type: Method
  source:
    remote:
      path: src/mscorlib/src/System/Runtime/InteropServices/ComTypes/ITypeLib.cs
      branch: master
      repo: https://github.com/dotnet/coreclr.git
    id: FindName
    path: src/mscorlib/src/System/Runtime/InteropServices/ComTypes/ITypeLib.cs
    startLine: 63
  assemblies:
  - System.Runtime.InteropServices
  namespace: System.Runtime.InteropServices.ComTypes
  summary: "\n<p>Finds occurrences of a type description in a type library.</p>\n"
  syntax:
    content: void FindName([MarshalAs(UnmanagedType.LPWStr)] string szNameBuf, int lHashVal, [MarshalAs(UnmanagedType.LPArray), Out] ITypeInfo[] ppTInfo, [MarshalAs(UnmanagedType.LPArray), Out] int[] rgMemId, ref short pcFound)
    content.vb: Sub FindName(szNameBuf As String, lHashVal As Integer, ppTInfo As ITypeInfo(), rgMemId As Integer(), ByRef pcFound As Short)
    parameters:
    - id: szNameBuf
      type: System.String
      description: "\n<p>The name to search for. This is an in/out parameter.</p>\n"
      attributes:
      - type: System.Runtime.InteropServices.MarshalAsAttribute
        ctor: System.Runtime.InteropServices.MarshalAsAttribute.#ctor(System.Runtime.InteropServices.UnmanagedType)
        arguments:
        - type: System.Runtime.InteropServices.UnmanagedType
          value: 21
    - id: lHashVal
      type: System.Int32
      description: "\n<p>A hash value to speed up the search, computed by the <strong>LHashValOfNameSys</strong> function. If <em>lHashVal</em> is 0, a value is computed. </p>\n"
    - id: ppTInfo
      type: System.Runtime.InteropServices.ComTypes.ITypeInfo[]
      description: "\n<p>When this method returns, contains an array of pointers to the type descriptions that contain the name specified in <em>szNameBuf</em>. This parameter is passed uninitialized.</p>\n"
      attributes:
      - type: System.Runtime.InteropServices.MarshalAsAttribute
        ctor: System.Runtime.InteropServices.MarshalAsAttribute.#ctor(System.Runtime.InteropServices.UnmanagedType)
        arguments:
        - type: System.Runtime.InteropServices.UnmanagedType
          value: 42
      - type: System.Runtime.InteropServices.OutAttribute
        ctor: System.Runtime.InteropServices.OutAttribute.#ctor
        arguments: []
    - id: rgMemId
      type: System.Int32[]
      description: "\n<p>An array of the <strong>MEMBERID</strong> 's of the found items; <em>rgMemId</em> [i] is the <strong>MEMBERID</strong> that indexes into the type description specified by <em>ppTInfo</em> [i]. Cannot be <strong>null</strong>. </p>\n"
      attributes:
      - type: System.Runtime.InteropServices.MarshalAsAttribute
        ctor: System.Runtime.InteropServices.MarshalAsAttribute.#ctor(System.Runtime.InteropServices.UnmanagedType)
        arguments:
        - type: System.Runtime.InteropServices.UnmanagedType
          value: 42
      - type: System.Runtime.InteropServices.OutAttribute
        ctor: System.Runtime.InteropServices.OutAttribute.#ctor
        arguments: []
    - id: pcFound
      type: System.Int16
      description: "\n<p>On entry, indicates how many instances to look for. For example, <em>pcFound</em> = 1 can be called to find the first occurrence. The search stops when one instance is found.</p>\n<p>On exit, indicates the number of instances that were found. If the <strong>in</strong> and <strong>out</strong> values of <em>pcFound</em> are identical, there might be more type descriptions that contain the name. </p>\n"
  nameWithType.vb: ITypeLib.FindName(String, Int32, ITypeInfo(), Int32(), ByRef Int16)
  fullName.vb: System.Runtime.InteropServices.ComTypes.ITypeLib.FindName(System.String, System.Int32, System.Runtime.InteropServices.ComTypes.ITypeInfo(), System.Int32(), ByRef System.Int16)
  name.vb: FindName(String, Int32, ITypeInfo(), Int32(), ByRef Int16)
- uid: System.Runtime.InteropServices.ComTypes.ITypeLib.GetDocumentation(System.Int32,System.String@,System.String@,System.Int32@,System.String@)
  commentId: M:System.Runtime.InteropServices.ComTypes.ITypeLib.GetDocumentation(System.Int32,System.String@,System.String@,System.Int32@,System.String@)
  id: GetDocumentation(System.Int32,System.String@,System.String@,System.Int32@,System.String@)
  parent: System.Runtime.InteropServices.ComTypes.ITypeLib
  langs:
  - csharp
  - vb
  name: GetDocumentation(Int32, out String, out String, out Int32, out String)
  nameWithType: ITypeLib.GetDocumentation(Int32, out String, out String, out Int32, out String)
  fullName: System.Runtime.InteropServices.ComTypes.ITypeLib.GetDocumentation(System.Int32, out System.String, out System.String, out System.Int32, out System.String)
  type: Method
  source:
    remote:
      path: src/mscorlib/src/System/Runtime/InteropServices/ComTypes/ITypeLib.cs
      branch: master
      repo: https://github.com/dotnet/coreclr.git
    id: GetDocumentation
    path: src/mscorlib/src/System/Runtime/InteropServices/ComTypes/ITypeLib.cs
    startLine: 60
  assemblies:
  - System.Runtime.InteropServices
  namespace: System.Runtime.InteropServices.ComTypes
  summary: "\n<p>Retrieves the library's documentation string, the complete Help file name and path, and the context identifier for the library Help topic in the Help file.</p>\n"
  syntax:
    content: void GetDocumentation(int index, out string strName, out string strDocString, out int dwHelpContext, out string strHelpFile)
    content.vb: Sub GetDocumentation(index As Integer, ByRef strName As String, ByRef strDocString As String, ByRef dwHelpContext As Integer, ByRef strHelpFile As String)
    parameters:
    - id: index
      type: System.Int32
      description: "\n<p>The index of the type description whose documentation is to be returned. </p>\n"
    - id: strName
      type: System.String
      description: "\n<p>When this method returns, contains a string that represents the name of the specified item. This parameter is passed uninitialized.</p>\n"
    - id: strDocString
      type: System.String
      description: "\n<p>When this method returns, contains a string that represents the documentation string for the specified item. This parameter is passed uninitialized.</p>\n"
    - id: dwHelpContext
      type: System.Int32
      description: "\n<p>When this method returns, contains the Help context identifier associated with the specified item. This parameter is passed uninitialized.</p>\n"
    - id: strHelpFile
      type: System.String
      description: "\n<p>When this method returns, contains a string that represents the fully qualified name of the Help file. This parameter is passed uninitialized.</p>\n"
  nameWithType.vb: ITypeLib.GetDocumentation(Int32, ByRef String, ByRef String, ByRef Int32, ByRef String)
  fullName.vb: System.Runtime.InteropServices.ComTypes.ITypeLib.GetDocumentation(System.Int32, ByRef System.String, ByRef System.String, ByRef System.Int32, ByRef System.String)
  name.vb: GetDocumentation(Int32, ByRef String, ByRef String, ByRef Int32, ByRef String)
- uid: System.Runtime.InteropServices.ComTypes.ITypeLib.GetLibAttr(System.IntPtr@)
  commentId: M:System.Runtime.InteropServices.ComTypes.ITypeLib.GetLibAttr(System.IntPtr@)
  id: GetLibAttr(System.IntPtr@)
  parent: System.Runtime.InteropServices.ComTypes.ITypeLib
  langs:
  - csharp
  - vb
  name: GetLibAttr(out IntPtr)
  nameWithType: ITypeLib.GetLibAttr(out IntPtr)
  fullName: System.Runtime.InteropServices.ComTypes.ITypeLib.GetLibAttr(out System.IntPtr)
  type: Method
  source:
    remote:
      path: src/mscorlib/src/System/Runtime/InteropServices/ComTypes/ITypeLib.cs
      branch: master
      repo: https://github.com/dotnet/coreclr.git
    id: GetLibAttr
    path: src/mscorlib/src/System/Runtime/InteropServices/ComTypes/ITypeLib.cs
    startLine: 58
  assemblies:
  - System.Runtime.InteropServices
  namespace: System.Runtime.InteropServices.ComTypes
  summary: "\n<p>Retrieves the structure that contains the library's attributes.</p>\n"
  syntax:
    content: void GetLibAttr(out IntPtr ppTLibAttr)
    content.vb: Sub GetLibAttr(ByRef ppTLibAttr As IntPtr)
    parameters:
    - id: ppTLibAttr
      type: System.IntPtr
      description: "\n<p>When this method returns, contains a structure that contains the library's attributes. This parameter is passed uninitialized.</p>\n"
  nameWithType.vb: ITypeLib.GetLibAttr(ByRef IntPtr)
  fullName.vb: System.Runtime.InteropServices.ComTypes.ITypeLib.GetLibAttr(ByRef System.IntPtr)
  name.vb: GetLibAttr(ByRef IntPtr)
- uid: System.Runtime.InteropServices.ComTypes.ITypeLib.GetTypeComp(System.Runtime.InteropServices.ComTypes.ITypeComp@)
  commentId: M:System.Runtime.InteropServices.ComTypes.ITypeLib.GetTypeComp(System.Runtime.InteropServices.ComTypes.ITypeComp@)
  id: GetTypeComp(System.Runtime.InteropServices.ComTypes.ITypeComp@)
  parent: System.Runtime.InteropServices.ComTypes.ITypeLib
  langs:
  - csharp
  - vb
  name: GetTypeComp(out ITypeComp)
  nameWithType: ITypeLib.GetTypeComp(out ITypeComp)
  fullName: System.Runtime.InteropServices.ComTypes.ITypeLib.GetTypeComp(out System.Runtime.InteropServices.ComTypes.ITypeComp)
  type: Method
  source:
    remote:
      path: src/mscorlib/src/System/Runtime/InteropServices/ComTypes/ITypeLib.cs
      branch: master
      repo: https://github.com/dotnet/coreclr.git
    id: GetTypeComp
    path: src/mscorlib/src/System/Runtime/InteropServices/ComTypes/ITypeLib.cs
    startLine: 59
  assemblies:
  - System.Runtime.InteropServices
  namespace: System.Runtime.InteropServices.ComTypes
  summary: "\n<p>Enables a client compiler to bind to a library's types, variables, constants, and global functions.</p>\n"
  syntax:
    content: void GetTypeComp(out ITypeComp ppTComp)
    content.vb: Sub GetTypeComp(ByRef ppTComp As ITypeComp)
    parameters:
    - id: ppTComp
      type: System.Runtime.InteropServices.ComTypes.ITypeComp
      description: "\n<p>When this method returns, contains an instance of a <strong>ITypeComp</strong> instance for this <strong>ITypeLib</strong>. This parameter is passed uninitialized. </p>\n"
  nameWithType.vb: ITypeLib.GetTypeComp(ByRef ITypeComp)
  fullName.vb: System.Runtime.InteropServices.ComTypes.ITypeLib.GetTypeComp(ByRef System.Runtime.InteropServices.ComTypes.ITypeComp)
  name.vb: GetTypeComp(ByRef ITypeComp)
- uid: System.Runtime.InteropServices.ComTypes.ITypeLib.GetTypeInfo(System.Int32,System.Runtime.InteropServices.ComTypes.ITypeInfo@)
  commentId: M:System.Runtime.InteropServices.ComTypes.ITypeLib.GetTypeInfo(System.Int32,System.Runtime.InteropServices.ComTypes.ITypeInfo@)
  id: GetTypeInfo(System.Int32,System.Runtime.InteropServices.ComTypes.ITypeInfo@)
  parent: System.Runtime.InteropServices.ComTypes.ITypeLib
  langs:
  - csharp
  - vb
  name: GetTypeInfo(Int32, out ITypeInfo)
  nameWithType: ITypeLib.GetTypeInfo(Int32, out ITypeInfo)
  fullName: System.Runtime.InteropServices.ComTypes.ITypeLib.GetTypeInfo(System.Int32, out System.Runtime.InteropServices.ComTypes.ITypeInfo)
  type: Method
  source:
    remote:
      path: src/mscorlib/src/System/Runtime/InteropServices/ComTypes/ITypeLib.cs
      branch: master
      repo: https://github.com/dotnet/coreclr.git
    id: GetTypeInfo
    path: src/mscorlib/src/System/Runtime/InteropServices/ComTypes/ITypeLib.cs
    startLine: 55
  assemblies:
  - System.Runtime.InteropServices
  namespace: System.Runtime.InteropServices.ComTypes
  summary: "\n<p>Retrieves the specified type description in the library.</p>\n"
  syntax:
    content: void GetTypeInfo(int index, out ITypeInfo ppTI)
    content.vb: Sub GetTypeInfo(index As Integer, ByRef ppTI As ITypeInfo)
    parameters:
    - id: index
      type: System.Int32
      description: "\n<p>The index of the <strong>ITypeInfo</strong> interface to return. </p>\n"
    - id: ppTI
      type: System.Runtime.InteropServices.ComTypes.ITypeInfo
      description: "\n<p>When this method returns, contains an <strong>ITypeInfo</strong> describing the type referenced by <em>index</em>. This parameter is passed uninitialized.</p>\n"
  nameWithType.vb: ITypeLib.GetTypeInfo(Int32, ByRef ITypeInfo)
  fullName.vb: System.Runtime.InteropServices.ComTypes.ITypeLib.GetTypeInfo(System.Int32, ByRef System.Runtime.InteropServices.ComTypes.ITypeInfo)
  name.vb: GetTypeInfo(Int32, ByRef ITypeInfo)
- uid: System.Runtime.InteropServices.ComTypes.ITypeLib.GetTypeInfoCount
  commentId: M:System.Runtime.InteropServices.ComTypes.ITypeLib.GetTypeInfoCount
  id: GetTypeInfoCount
  parent: System.Runtime.InteropServices.ComTypes.ITypeLib
  langs:
  - csharp
  - vb
  name: GetTypeInfoCount()
  nameWithType: ITypeLib.GetTypeInfoCount()
  fullName: System.Runtime.InteropServices.ComTypes.ITypeLib.GetTypeInfoCount()
  type: Method
  source:
    remote:
      path: src/mscorlib/src/System/Runtime/InteropServices/ComTypes/ITypeLib.cs
      branch: master
      repo: https://github.com/dotnet/coreclr.git
    id: GetTypeInfoCount
    path: src/mscorlib/src/System/Runtime/InteropServices/ComTypes/ITypeLib.cs
    startLine: 53
  assemblies:
  - System.Runtime.InteropServices
  namespace: System.Runtime.InteropServices.ComTypes
  summary: "\n<p>Returns the number of type descriptions in the type library.</p>\n"
  syntax:
    content: >-
      [PreserveSig]

      int GetTypeInfoCount()
    content.vb: >-
      <PreserveSig>

      Function GetTypeInfoCount As Integer
    return:
      type: System.Int32
      description: "\n<p>The number of type descriptions in the type library.</p>\n"
- uid: System.Runtime.InteropServices.ComTypes.ITypeLib.GetTypeInfoOfGuid(System.Guid@,System.Runtime.InteropServices.ComTypes.ITypeInfo@)
  commentId: M:System.Runtime.InteropServices.ComTypes.ITypeLib.GetTypeInfoOfGuid(System.Guid@,System.Runtime.InteropServices.ComTypes.ITypeInfo@)
  id: GetTypeInfoOfGuid(System.Guid@,System.Runtime.InteropServices.ComTypes.ITypeInfo@)
  parent: System.Runtime.InteropServices.ComTypes.ITypeLib
  langs:
  - csharp
  - vb
  name: GetTypeInfoOfGuid(ref Guid, out ITypeInfo)
  nameWithType: ITypeLib.GetTypeInfoOfGuid(ref Guid, out ITypeInfo)
  fullName: System.Runtime.InteropServices.ComTypes.ITypeLib.GetTypeInfoOfGuid(ref System.Guid, out System.Runtime.InteropServices.ComTypes.ITypeInfo)
  type: Method
  source:
    remote:
      path: src/mscorlib/src/System/Runtime/InteropServices/ComTypes/ITypeLib.cs
      branch: master
      repo: https://github.com/dotnet/coreclr.git
    id: GetTypeInfoOfGuid
    path: src/mscorlib/src/System/Runtime/InteropServices/ComTypes/ITypeLib.cs
    startLine: 57
  assemblies:
  - System.Runtime.InteropServices
  namespace: System.Runtime.InteropServices.ComTypes
  summary: "\n<p>Retrieves the type description that corresponds to the specified GUID.</p>\n"
  syntax:
    content: void GetTypeInfoOfGuid(ref Guid guid, out ITypeInfo ppTInfo)
    content.vb: Sub GetTypeInfoOfGuid(ByRef guid As Guid, ByRef ppTInfo As ITypeInfo)
    parameters:
    - id: guid
      type: System.Guid
      description: "\n<p>The IID of the interface or CLSID of the class whose type info is requested. </p>\n"
    - id: ppTInfo
      type: System.Runtime.InteropServices.ComTypes.ITypeInfo
      description: "\n<p>When this method returns, contains the requested <strong>ITypeInfo</strong> interface. This parameter is passed uninitialized.</p>\n"
  nameWithType.vb: ITypeLib.GetTypeInfoOfGuid(ByRef Guid, ByRef ITypeInfo)
  fullName.vb: System.Runtime.InteropServices.ComTypes.ITypeLib.GetTypeInfoOfGuid(ByRef System.Guid, ByRef System.Runtime.InteropServices.ComTypes.ITypeInfo)
  name.vb: GetTypeInfoOfGuid(ByRef Guid, ByRef ITypeInfo)
- uid: System.Runtime.InteropServices.ComTypes.ITypeLib.GetTypeInfoType(System.Int32,System.Runtime.InteropServices.ComTypes.TYPEKIND@)
  commentId: M:System.Runtime.InteropServices.ComTypes.ITypeLib.GetTypeInfoType(System.Int32,System.Runtime.InteropServices.ComTypes.TYPEKIND@)
  id: GetTypeInfoType(System.Int32,System.Runtime.InteropServices.ComTypes.TYPEKIND@)
  parent: System.Runtime.InteropServices.ComTypes.ITypeLib
  langs:
  - csharp
  - vb
  name: GetTypeInfoType(Int32, out TYPEKIND)
  nameWithType: ITypeLib.GetTypeInfoType(Int32, out TYPEKIND)
  fullName: System.Runtime.InteropServices.ComTypes.ITypeLib.GetTypeInfoType(System.Int32, out System.Runtime.InteropServices.ComTypes.TYPEKIND)
  type: Method
  source:
    remote:
      path: src/mscorlib/src/System/Runtime/InteropServices/ComTypes/ITypeLib.cs
      branch: master
      repo: https://github.com/dotnet/coreclr.git
    id: GetTypeInfoType
    path: src/mscorlib/src/System/Runtime/InteropServices/ComTypes/ITypeLib.cs
    startLine: 56
  assemblies:
  - System.Runtime.InteropServices
  namespace: System.Runtime.InteropServices.ComTypes
  summary: "\n<p>Retrieves the type of a type description.</p>\n"
  syntax:
    content: void GetTypeInfoType(int index, out TYPEKIND pTKind)
    content.vb: Sub GetTypeInfoType(index As Integer, ByRef pTKind As TYPEKIND)
    parameters:
    - id: index
      type: System.Int32
      description: "\n<p>The index of the type description within the type library. </p>\n"
    - id: pTKind
      type: System.Runtime.InteropServices.ComTypes.TYPEKIND
      description: "\n<p>When this method returns, contains a reference to the <strong>TYPEKIND</strong> enumeration for the type description. This parameter is passed uninitialized.</p>\n"
  nameWithType.vb: ITypeLib.GetTypeInfoType(Int32, ByRef TYPEKIND)
  fullName.vb: System.Runtime.InteropServices.ComTypes.ITypeLib.GetTypeInfoType(System.Int32, ByRef System.Runtime.InteropServices.ComTypes.TYPEKIND)
  name.vb: GetTypeInfoType(Int32, ByRef TYPEKIND)
- uid: System.Runtime.InteropServices.ComTypes.ITypeLib.IsName(System.String,System.Int32)
  commentId: M:System.Runtime.InteropServices.ComTypes.ITypeLib.IsName(System.String,System.Int32)
  id: IsName(System.String,System.Int32)
  parent: System.Runtime.InteropServices.ComTypes.ITypeLib
  langs:
  - csharp
  - vb
  name: IsName(String, Int32)
  nameWithType: ITypeLib.IsName(String, Int32)
  fullName: System.Runtime.InteropServices.ComTypes.ITypeLib.IsName(System.String, System.Int32)
  type: Method
  source:
    remote:
      path: src/mscorlib/src/System/Runtime/InteropServices/ComTypes/ITypeLib.cs
      branch: master
      repo: https://github.com/dotnet/coreclr.git
    id: IsName
    path: src/mscorlib/src/System/Runtime/InteropServices/ComTypes/ITypeLib.cs
    startLine: 61
  assemblies:
  - System.Runtime.InteropServices
  namespace: System.Runtime.InteropServices.ComTypes
  summary: "\n<p>Indicates whether a passed-in string contains the name of a type or member described in the library.</p>\n"
  syntax:
    content: bool IsName([MarshalAs(UnmanagedType.LPWStr)] string szNameBuf, int lHashVal)
    content.vb: Function IsName(szNameBuf As String, lHashVal As Integer) As Boolean
    parameters:
    - id: szNameBuf
      type: System.String
      description: "\n<p>The string to test. This is an in/out parameter.</p>\n"
      attributes:
      - type: System.Runtime.InteropServices.MarshalAsAttribute
        ctor: System.Runtime.InteropServices.MarshalAsAttribute.#ctor(System.Runtime.InteropServices.UnmanagedType)
        arguments:
        - type: System.Runtime.InteropServices.UnmanagedType
          value: 21
    - id: lHashVal
      type: System.Int32
      description: "\n<p>The hash value of <em>szNameBuf</em>. </p>\n"
    return:
      type: System.Boolean
      description: "\n<p>\n<strong>true</strong> if <em>szNameBuf</em> was found in the type library; otherwise, <strong>false</strong>.</p>\n"
      attributes:
      - type: System.Runtime.InteropServices.MarshalAsAttribute
        ctor: System.Runtime.InteropServices.MarshalAsAttribute.#ctor(System.Runtime.InteropServices.UnmanagedType)
        arguments:
        - type: System.Runtime.InteropServices.UnmanagedType
          value: 2
- uid: System.Runtime.InteropServices.ComTypes.ITypeLib.ReleaseTLibAttr(System.IntPtr)
  commentId: M:System.Runtime.InteropServices.ComTypes.ITypeLib.ReleaseTLibAttr(System.IntPtr)
  id: ReleaseTLibAttr(System.IntPtr)
  parent: System.Runtime.InteropServices.ComTypes.ITypeLib
  langs:
  - csharp
  - vb
  name: ReleaseTLibAttr(IntPtr)
  nameWithType: ITypeLib.ReleaseTLibAttr(IntPtr)
  fullName: System.Runtime.InteropServices.ComTypes.ITypeLib.ReleaseTLibAttr(System.IntPtr)
  type: Method
  source:
    remote:
      path: src/mscorlib/src/System/Runtime/InteropServices/ComTypes/ITypeLib.cs
      branch: master
      repo: https://github.com/dotnet/coreclr.git
    id: ReleaseTLibAttr
    path: src/mscorlib/src/System/Runtime/InteropServices/ComTypes/ITypeLib.cs
    startLine: 64
  assemblies:
  - System.Runtime.InteropServices
  namespace: System.Runtime.InteropServices.ComTypes
  summary: "\n<p>Releases the <xref href=\"System.Runtime.InteropServices.TYPELIBATTR\" data-throw-if-not-resolved=\"false\"></xref> structure originally obtained from the <xref href=\"System.Runtime.InteropServices.ComTypes.ITypeLib.GetLibAttr(System.IntPtr@)\" data-throw-if-not-resolved=\"false\"></xref> method.</p>\n"
  syntax:
    content: >-
      [PreserveSig]

      void ReleaseTLibAttr(IntPtr pTLibAttr)
    content.vb: >-
      <PreserveSig>

      Sub ReleaseTLibAttr(pTLibAttr As IntPtr)
    parameters:
    - id: pTLibAttr
      type: System.IntPtr
      description: "\n<p>The <strong>TLIBATTR</strong> structure to release. </p>\n"
references:
- uid: System.Runtime.InteropServices.ComTypes
  commentId: N:System.Runtime.InteropServices.ComTypes
  isExternal: false
  name: System.Runtime.InteropServices.ComTypes
  nameWithType: System.Runtime.InteropServices.ComTypes
  fullName: System.Runtime.InteropServices.ComTypes
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: false
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: false
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Runtime.InteropServices.ComTypes.ITypeInfo[]
  name: ITypeInfo[]
  nameWithType: ITypeInfo[]
  fullName: System.Runtime.InteropServices.ComTypes.ITypeInfo[]
  nameWithType.vb: ITypeInfo()
  fullname.vb: System.Runtime.InteropServices.ComTypes.ITypeInfo()
  name.vb: ITypeInfo()
  spec.csharp:
  - uid: System.Runtime.InteropServices.ComTypes.ITypeInfo
    name: ITypeInfo
    nameWithType: ITypeInfo
    fullName: System.Runtime.InteropServices.ComTypes.ITypeInfo
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  spec.vb:
  - uid: System.Runtime.InteropServices.ComTypes.ITypeInfo
    name: ITypeInfo
    nameWithType: ITypeInfo
    fullName: System.Runtime.InteropServices.ComTypes.ITypeInfo
  - name: ()
    nameWithType: ()
    fullName: ()
- uid: System.Int32[]
  name: Int32[]
  nameWithType: Int32[]
  fullName: System.Int32[]
  nameWithType.vb: Int32()
  fullname.vb: System.Int32()
  name.vb: Int32()
  spec.csharp:
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  spec.vb:
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
- uid: System.Int16
  commentId: T:System.Int16
  parent: System
  isExternal: false
  name: Int16
  nameWithType: Int16
  fullName: System.Int16
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: System.IntPtr
  commentId: T:System.IntPtr
  parent: System
  isExternal: false
  name: IntPtr
  nameWithType: IntPtr
  fullName: System.IntPtr
- uid: System.Runtime.InteropServices.ComTypes.ITypeComp
  commentId: T:System.Runtime.InteropServices.ComTypes.ITypeComp
  parent: System.Runtime.InteropServices.ComTypes
  isExternal: false
  name: ITypeComp
  nameWithType: ITypeComp
  fullName: System.Runtime.InteropServices.ComTypes.ITypeComp
- uid: System.Runtime.InteropServices.ComTypes.ITypeInfo
  commentId: T:System.Runtime.InteropServices.ComTypes.ITypeInfo
  parent: System.Runtime.InteropServices.ComTypes
  isExternal: false
  name: ITypeInfo
  nameWithType: ITypeInfo
  fullName: System.Runtime.InteropServices.ComTypes.ITypeInfo
- uid: System.Guid
  commentId: T:System.Guid
  parent: System
  isExternal: false
  name: Guid
  nameWithType: Guid
  fullName: System.Guid
- uid: System.Runtime.InteropServices.ComTypes.TYPEKIND
  commentId: T:System.Runtime.InteropServices.ComTypes.TYPEKIND
  parent: System.Runtime.InteropServices.ComTypes
  isExternal: false
  name: TYPEKIND
  nameWithType: TYPEKIND
  fullName: System.Runtime.InteropServices.ComTypes.TYPEKIND
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: false
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
