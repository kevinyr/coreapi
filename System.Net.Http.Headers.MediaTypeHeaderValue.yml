### YamlMime:ManagedReference
items:
- uid: System.Net.Http.Headers.MediaTypeHeaderValue
  commentId: T:System.Net.Http.Headers.MediaTypeHeaderValue
  id: MediaTypeHeaderValue
  parent: System.Net.Http.Headers
  children:
  - System.Net.Http.Headers.MediaTypeHeaderValue.#ctor(System.Net.Http.Headers.MediaTypeHeaderValue)
  - System.Net.Http.Headers.MediaTypeHeaderValue.#ctor(System.String)
  - System.Net.Http.Headers.MediaTypeHeaderValue.CharSet
  - System.Net.Http.Headers.MediaTypeHeaderValue.Equals(System.Object)
  - System.Net.Http.Headers.MediaTypeHeaderValue.GetHashCode
  - System.Net.Http.Headers.MediaTypeHeaderValue.MediaType
  - System.Net.Http.Headers.MediaTypeHeaderValue.Parameters
  - System.Net.Http.Headers.MediaTypeHeaderValue.Parse(System.String)
  - System.Net.Http.Headers.MediaTypeHeaderValue.ToString
  - System.Net.Http.Headers.MediaTypeHeaderValue.TryParse(System.String,System.Net.Http.Headers.MediaTypeHeaderValue@)
  langs:
  - csharp
  - vb
  name: MediaTypeHeaderValue
  nameWithType: MediaTypeHeaderValue
  fullName: System.Net.Http.Headers.MediaTypeHeaderValue
  type: Class
  source:
    remote:
      path: src/System.Net.Http/src/System/Net/Http/Headers/MediaTypeHeaderValue.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: MediaTypeHeaderValue
    path: src/System.Net.Http/src/System/Net/Http/Headers/MediaTypeHeaderValue.cs
    startLine: 9
  assemblies:
  - System.Net.Http
  namespace: System.Net.Http.Headers
  summary: "\n<p>Represents a media type used in a Content-Type header as defined in the RFC 2616.</p>\n"
  syntax:
    content: 'public class MediaTypeHeaderValue : ICloneable'
    content.vb: >-
      Public Class MediaTypeHeaderValue
          Implements ICloneable
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetType
  - System.Object.MemberwiseClone
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: System.Net.Http.Headers.MediaTypeHeaderValue.#ctor(System.Net.Http.Headers.MediaTypeHeaderValue)
  commentId: M:System.Net.Http.Headers.MediaTypeHeaderValue.#ctor(System.Net.Http.Headers.MediaTypeHeaderValue)
  id: '#ctor(System.Net.Http.Headers.MediaTypeHeaderValue)'
  parent: System.Net.Http.Headers.MediaTypeHeaderValue
  langs:
  - csharp
  - vb
  name: MediaTypeHeaderValue(MediaTypeHeaderValue)
  nameWithType: MediaTypeHeaderValue.MediaTypeHeaderValue(MediaTypeHeaderValue)
  fullName: System.Net.Http.Headers.MediaTypeHeaderValue.MediaTypeHeaderValue(System.Net.Http.Headers.MediaTypeHeaderValue)
  type: Constructor
  source:
    remote:
      path: src/System.Net.Http/src/System/Net/Http/Headers/MediaTypeHeaderValue.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: .ctor
    path: src/System.Net.Http/src/System/Net/Http/Headers/MediaTypeHeaderValue.cs
    startLine: 81
  assemblies:
  - System.Net.Http
  namespace: System.Net.Http.Headers
  summary: "\n<p>Initializes a new instance of the <xref href=\"System.Net.Http.Headers.MediaTypeHeaderValue\" data-throw-if-not-resolved=\"false\"></xref> class.</p>\n"
  syntax:
    content: protected MediaTypeHeaderValue(MediaTypeHeaderValue source)
    content.vb: Protected Sub New(source As MediaTypeHeaderValue)
    parameters:
    - id: source
      type: System.Net.Http.Headers.MediaTypeHeaderValue
      description: "\n<p> A <xref href=\"System.Net.Http.Headers.MediaTypeHeaderValue\" data-throw-if-not-resolved=\"false\"></xref> object used to initialize the new instance.</p>\n"
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: System.Net.Http.Headers.MediaTypeHeaderValue.#ctor(System.String)
  commentId: M:System.Net.Http.Headers.MediaTypeHeaderValue.#ctor(System.String)
  id: '#ctor(System.String)'
  parent: System.Net.Http.Headers.MediaTypeHeaderValue
  langs:
  - csharp
  - vb
  name: MediaTypeHeaderValue(String)
  nameWithType: MediaTypeHeaderValue.MediaTypeHeaderValue(String)
  fullName: System.Net.Http.Headers.MediaTypeHeaderValue.MediaTypeHeaderValue(System.String)
  type: Constructor
  source:
    remote:
      path: src/System.Net.Http/src/System/Net/Http/Headers/MediaTypeHeaderValue.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: .ctor
    path: src/System.Net.Http/src/System/Net/Http/Headers/MediaTypeHeaderValue.cs
    startLine: 96
  assemblies:
  - System.Net.Http
  namespace: System.Net.Http.Headers
  summary: "\n<p>Initializes a new instance of the <xref href=\"System.Net.Http.Headers.MediaTypeHeaderValue\" data-throw-if-not-resolved=\"false\"></xref> class.</p>\n"
  syntax:
    content: public MediaTypeHeaderValue(string mediaType)
    content.vb: Public Sub New(mediaType As String)
    parameters:
    - id: mediaType
      type: System.String
      description: "\n<p>The source represented as a string to initialize the new instance. </p>\n"
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: System.Net.Http.Headers.MediaTypeHeaderValue.CharSet
  commentId: P:System.Net.Http.Headers.MediaTypeHeaderValue.CharSet
  id: CharSet
  parent: System.Net.Http.Headers.MediaTypeHeaderValue
  langs:
  - csharp
  - vb
  name: CharSet
  nameWithType: MediaTypeHeaderValue.CharSet
  fullName: System.Net.Http.Headers.MediaTypeHeaderValue.CharSet
  type: Property
  source:
    remote:
      path: src/System.Net.Http/src/System/Net/Http/Headers/MediaTypeHeaderValue.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: CharSet
    path: src/System.Net.Http/src/System/Net/Http/Headers/MediaTypeHeaderValue.cs
    startLine: 16
  assemblies:
  - System.Net.Http
  namespace: System.Net.Http.Headers
  summary: "\n<p>Gets or sets the character set.</p>\n"
  syntax:
    content: public string CharSet { get; set; }
    content.vb: Public Property CharSet As String
    parameters: []
    return:
      type: System.String
      description: "\n<p>Returns <xref href=\"System.String\" data-throw-if-not-resolved=\"false\"></xref>.</p>\n<p>The character set.</p>\n"
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: System.Net.Http.Headers.MediaTypeHeaderValue.MediaType
  commentId: P:System.Net.Http.Headers.MediaTypeHeaderValue.MediaType
  id: MediaType
  parent: System.Net.Http.Headers.MediaTypeHeaderValue
  langs:
  - csharp
  - vb
  name: MediaType
  nameWithType: MediaTypeHeaderValue.MediaType
  fullName: System.Net.Http.Headers.MediaTypeHeaderValue.MediaType
  type: Property
  source:
    remote:
      path: src/System.Net.Http/src/System/Net/Http/Headers/MediaTypeHeaderValue.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: MediaType
    path: src/System.Net.Http/src/System/Net/Http/Headers/MediaTypeHeaderValue.cs
    startLine: 66
  assemblies:
  - System.Net.Http
  namespace: System.Net.Http.Headers
  summary: "\n<p>Gets or sets the media-type header value.</p>\n"
  syntax:
    content: public string MediaType { get; set; }
    content.vb: Public Property MediaType As String
    parameters: []
    return:
      type: System.String
      description: "\n<p>Returns <xref href=\"System.String\" data-throw-if-not-resolved=\"false\"></xref>.</p>\n<p>The media-type header value.</p>\n"
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: System.Net.Http.Headers.MediaTypeHeaderValue.Parameters
  commentId: P:System.Net.Http.Headers.MediaTypeHeaderValue.Parameters
  id: Parameters
  parent: System.Net.Http.Headers.MediaTypeHeaderValue
  langs:
  - csharp
  - vb
  name: Parameters
  nameWithType: MediaTypeHeaderValue.Parameters
  fullName: System.Net.Http.Headers.MediaTypeHeaderValue.Parameters
  type: Property
  source:
    remote:
      path: src/System.Net.Http/src/System/Net/Http/Headers/MediaTypeHeaderValue.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: Parameters
    path: src/System.Net.Http/src/System/Net/Http/Headers/MediaTypeHeaderValue.cs
    startLine: 54
  assemblies:
  - System.Net.Http
  namespace: System.Net.Http.Headers
  summary: "\n<p>Gets or sets the media-type header value parameters.</p>\n"
  syntax:
    content: public ICollection<NameValueHeaderValue> Parameters { get; }
    content.vb: Public ReadOnly Property Parameters As ICollection(Of NameValueHeaderValue)
    parameters: []
    return:
      type: System.Collections.Generic.ICollection{System.Net.Http.Headers.NameValueHeaderValue}
      description: "\n<p>Returns <xref href=\"System.Collections.Generic.ICollection`1\" data-throw-if-not-resolved=\"false\"></xref>.</p>\n<p>The media-type header value parameters.</p>\n"
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: System.Net.Http.Headers.MediaTypeHeaderValue.Equals(System.Object)
  commentId: M:System.Net.Http.Headers.MediaTypeHeaderValue.Equals(System.Object)
  id: Equals(System.Object)
  parent: System.Net.Http.Headers.MediaTypeHeaderValue
  langs:
  - csharp
  - vb
  name: Equals(Object)
  nameWithType: MediaTypeHeaderValue.Equals(Object)
  fullName: System.Net.Http.Headers.MediaTypeHeaderValue.Equals(System.Object)
  type: Method
  source:
    remote:
      path: src/System.Net.Http/src/System/Net/Http/Headers/MediaTypeHeaderValue.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: Equals
    path: src/System.Net.Http/src/System/Net/Http/Headers/MediaTypeHeaderValue.cs
    startLine: 107
  assemblies:
  - System.Net.Http
  namespace: System.Net.Http.Headers
  summary: "\n<p>Determines whether the specified <xref href=\"System.Object\" data-throw-if-not-resolved=\"false\"></xref> is equal to the current <xref href=\"System.Net.Http.Headers.MediaTypeHeaderValue\" data-throw-if-not-resolved=\"false\"></xref> object.</p>\n"
  syntax:
    content: public override bool Equals(object obj)
    content.vb: Public Overrides Function Equals(obj As Object) As Boolean
    parameters:
    - id: obj
      type: System.Object
      description: "\n<p>The object to compare with the current object.</p>\n"
    return:
      type: System.Boolean
      description: "\n<p>Returns <xref href=\"System.Boolean\" data-throw-if-not-resolved=\"false\"></xref>.</p>\n<p>\n<strong>true</strong> if the specified <xref href=\"System.Object\" data-throw-if-not-resolved=\"false\"></xref> is equal to the current object; otherwise, <strong>false</strong>.</p>\n"
  overridden: System.Object.Equals(System.Object)
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
- uid: System.Net.Http.Headers.MediaTypeHeaderValue.GetHashCode
  commentId: M:System.Net.Http.Headers.MediaTypeHeaderValue.GetHashCode
  id: GetHashCode
  parent: System.Net.Http.Headers.MediaTypeHeaderValue
  langs:
  - csharp
  - vb
  name: GetHashCode()
  nameWithType: MediaTypeHeaderValue.GetHashCode()
  fullName: System.Net.Http.Headers.MediaTypeHeaderValue.GetHashCode()
  type: Method
  source:
    remote:
      path: src/System.Net.Http/src/System/Net/Http/Headers/MediaTypeHeaderValue.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: GetHashCode
    path: src/System.Net.Http/src/System/Net/Http/Headers/MediaTypeHeaderValue.cs
    startLine: 120
  assemblies:
  - System.Net.Http
  namespace: System.Net.Http.Headers
  summary: "\n<p>Serves as a hash function for an <xref href=\"System.Net.Http.Headers.MediaTypeHeaderValue\" data-throw-if-not-resolved=\"false\"></xref> object.</p>\n"
  syntax:
    content: public override int GetHashCode()
    content.vb: Public Overrides Function GetHashCode As Integer
    return:
      type: System.Int32
      description: "\n<p>Returns <xref href=\"System.Int32\" data-throw-if-not-resolved=\"false\"></xref>.</p>\n<p>A hash code for the current object.</p>\n"
  overridden: System.Object.GetHashCode
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
- uid: System.Net.Http.Headers.MediaTypeHeaderValue.Parse(System.String)
  commentId: M:System.Net.Http.Headers.MediaTypeHeaderValue.Parse(System.String)
  id: Parse(System.String)
  parent: System.Net.Http.Headers.MediaTypeHeaderValue
  langs:
  - csharp
  - vb
  name: Parse(String)
  nameWithType: MediaTypeHeaderValue.Parse(String)
  fullName: System.Net.Http.Headers.MediaTypeHeaderValue.Parse(System.String)
  type: Method
  source:
    remote:
      path: src/System.Net.Http/src/System/Net/Http/Headers/MediaTypeHeaderValue.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: Parse
    path: src/System.Net.Http/src/System/Net/Http/Headers/MediaTypeHeaderValue.cs
    startLine: 126
  assemblies:
  - System.Net.Http
  namespace: System.Net.Http.Headers
  summary: "\n<p>Converts a string to an <xref href=\"System.Net.Http.Headers.MediaTypeHeaderValue\" data-throw-if-not-resolved=\"false\"></xref> instance.</p>\n"
  syntax:
    content: public static MediaTypeHeaderValue Parse(string input)
    content.vb: Public Shared Function Parse(input As String) As MediaTypeHeaderValue
    parameters:
    - id: input
      type: System.String
      description: "\n<p>A string that represents media type header value information.</p>\n"
    return:
      type: System.Net.Http.Headers.MediaTypeHeaderValue
      description: "\n<p>Returns <xref href=\"System.Net.Http.Headers.MediaTypeHeaderValue\" data-throw-if-not-resolved=\"false\"></xref>.</p>\n<p>An <xref href=\"System.Net.Http.Headers.MediaTypeHeaderValue\" data-throw-if-not-resolved=\"false\"></xref> instance.</p>\n"
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "\n<p>\n<em>input</em> is a <strong>null</strong> reference.</p>\n"
  - type: System.FormatException
    commentId: T:System.FormatException
    description: "\n<p>\n<em>input</em> is not valid media type header value information.</p>\n"
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: System.Net.Http.Headers.MediaTypeHeaderValue.ToString
  commentId: M:System.Net.Http.Headers.MediaTypeHeaderValue.ToString
  id: ToString
  parent: System.Net.Http.Headers.MediaTypeHeaderValue
  langs:
  - csharp
  - vb
  name: ToString()
  nameWithType: MediaTypeHeaderValue.ToString()
  fullName: System.Net.Http.Headers.MediaTypeHeaderValue.ToString()
  type: Method
  source:
    remote:
      path: src/System.Net.Http/src/System/Net/Http/Headers/MediaTypeHeaderValue.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: ToString
    path: src/System.Net.Http/src/System/Net/Http/Headers/MediaTypeHeaderValue.cs
    startLine: 102
  assemblies:
  - System.Net.Http
  namespace: System.Net.Http.Headers
  summary: "\n<p>Returns a string that represents the current <xref href=\"System.Net.Http.Headers.MediaTypeHeaderValue\" data-throw-if-not-resolved=\"false\"></xref> object.</p>\n"
  syntax:
    content: public override string ToString()
    content.vb: Public Overrides Function ToString As String
    return:
      type: System.String
      description: "\n<p>Returns <xref href=\"System.String\" data-throw-if-not-resolved=\"false\"></xref>.</p>\n<p>A string that represents the current object.</p>\n"
  overridden: System.Object.ToString
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
- uid: System.Net.Http.Headers.MediaTypeHeaderValue.TryParse(System.String,System.Net.Http.Headers.MediaTypeHeaderValue@)
  commentId: M:System.Net.Http.Headers.MediaTypeHeaderValue.TryParse(System.String,System.Net.Http.Headers.MediaTypeHeaderValue@)
  id: TryParse(System.String,System.Net.Http.Headers.MediaTypeHeaderValue@)
  parent: System.Net.Http.Headers.MediaTypeHeaderValue
  langs:
  - csharp
  - vb
  name: TryParse(String, out MediaTypeHeaderValue)
  nameWithType: MediaTypeHeaderValue.TryParse(String, out MediaTypeHeaderValue)
  fullName: System.Net.Http.Headers.MediaTypeHeaderValue.TryParse(System.String, out System.Net.Http.Headers.MediaTypeHeaderValue)
  type: Method
  source:
    remote:
      path: src/System.Net.Http/src/System/Net/Http/Headers/MediaTypeHeaderValue.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: TryParse
    path: src/System.Net.Http/src/System/Net/Http/Headers/MediaTypeHeaderValue.cs
    startLine: 132
  assemblies:
  - System.Net.Http
  namespace: System.Net.Http.Headers
  summary: "\n<p>Determines whether a string is valid <xref href=\"System.Net.Http.Headers.MediaTypeHeaderValue\" data-throw-if-not-resolved=\"false\"></xref> information.</p>\n"
  syntax:
    content: public static bool TryParse(string input, out MediaTypeHeaderValue parsedValue)
    content.vb: Public Shared Function TryParse(input As String, ByRef parsedValue As MediaTypeHeaderValue) As Boolean
    parameters:
    - id: input
      type: System.String
      description: "\n<p>The string to validate.</p>\n"
    - id: parsedValue
      type: System.Net.Http.Headers.MediaTypeHeaderValue
      description: "\n<p>The <xref href=\"System.Net.Http.Headers.MediaTypeHeaderValue\" data-throw-if-not-resolved=\"false\"></xref> version of the string.</p>\n"
    return:
      type: System.Boolean
      description: "\n<p>Returns <xref href=\"System.Boolean\" data-throw-if-not-resolved=\"false\"></xref>.</p>\n<p>\n<strong>true</strong> if <em>input</em> is valid <xref href=\"System.Net.Http.Headers.MediaTypeHeaderValue\" data-throw-if-not-resolved=\"false\"></xref> information; otherwise, <strong>false</strong>.</p>\n"
  nameWithType.vb: MediaTypeHeaderValue.TryParse(String, ByRef MediaTypeHeaderValue)
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: System.Net.Http.Headers.MediaTypeHeaderValue.TryParse(System.String, ByRef System.Net.Http.Headers.MediaTypeHeaderValue)
  name.vb: TryParse(String, ByRef MediaTypeHeaderValue)
references:
- uid: System.Net.Http.Headers
  commentId: N:System.Net.Http.Headers
  isExternal: false
  name: System.Net.Http.Headers
  nameWithType: System.Net.Http.Headers
  fullName: System.Net.Http.Headers
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: false
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: System.Net.Http.Headers.MediaTypeHeaderValue
  commentId: T:System.Net.Http.Headers.MediaTypeHeaderValue
  parent: System.Net.Http.Headers
  isExternal: false
  name: MediaTypeHeaderValue
  nameWithType: MediaTypeHeaderValue
  fullName: System.Net.Http.Headers.MediaTypeHeaderValue
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: false
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Collections.Generic.ICollection{System.Net.Http.Headers.NameValueHeaderValue}
  commentId: T:System.Collections.Generic.ICollection{System.Net.Http.Headers.NameValueHeaderValue}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.ICollection`1
  name: ICollection<NameValueHeaderValue>
  nameWithType: ICollection<NameValueHeaderValue>
  fullName: System.Collections.Generic.ICollection<System.Net.Http.Headers.NameValueHeaderValue>
  nameWithType.vb: ICollection(Of NameValueHeaderValue)
  fullname.vb: System.Collections.Generic.ICollection(Of System.Net.Http.Headers.NameValueHeaderValue)
  name.vb: ICollection(Of NameValueHeaderValue)
  spec.csharp:
  - uid: System.Collections.Generic.ICollection`1
    name: ICollection
    nameWithType: ICollection
    fullName: System.Collections.Generic.ICollection
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Net.Http.Headers.NameValueHeaderValue
    name: NameValueHeaderValue
    nameWithType: NameValueHeaderValue
    fullName: System.Net.Http.Headers.NameValueHeaderValue
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.ICollection`1
    name: ICollection
    nameWithType: ICollection
    fullName: System.Collections.Generic.ICollection
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Net.Http.Headers.NameValueHeaderValue
    name: NameValueHeaderValue
    nameWithType: NameValueHeaderValue
    fullName: System.Net.Http.Headers.NameValueHeaderValue
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.ICollection`1
  commentId: T:System.Collections.Generic.ICollection`1
  isExternal: false
  name: ICollection<T>
  nameWithType: ICollection<T>
  fullName: System.Collections.Generic.ICollection<T>
  nameWithType.vb: ICollection(Of T)
  fullname.vb: System.Collections.Generic.ICollection(Of T)
  name.vb: ICollection(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.ICollection`1
    name: ICollection
    nameWithType: ICollection
    fullName: System.Collections.Generic.ICollection
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.ICollection`1
    name: ICollection
    nameWithType: ICollection
    fullName: System.Collections.Generic.ICollection
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: false
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: false
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: false
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.ArgumentNullException
  commentId: T:System.ArgumentNullException
  isExternal: false
  name: ArgumentNullException
  nameWithType: ArgumentNullException
  fullName: System.ArgumentNullException
- uid: System.FormatException
  commentId: T:System.FormatException
  parent: System
  isExternal: false
  name: FormatException
  nameWithType: FormatException
  fullName: System.FormatException
