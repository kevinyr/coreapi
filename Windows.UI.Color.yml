items:
- uid: Windows.UI.Color
  commentId: T:Windows.UI.Color
  id: Color
  parent: Windows.UI
  children:
  - Windows.UI.Color.A
  - Windows.UI.Color.B
  - Windows.UI.Color.Equals(System.Object)
  - Windows.UI.Color.Equals(Windows.UI.Color)
  - Windows.UI.Color.FromArgb(System.Byte,System.Byte,System.Byte,System.Byte)
  - Windows.UI.Color.G
  - Windows.UI.Color.GetHashCode
  - Windows.UI.Color.op_Equality(Windows.UI.Color,Windows.UI.Color)
  - Windows.UI.Color.op_Inequality(Windows.UI.Color,Windows.UI.Color)
  - Windows.UI.Color.R
  - Windows.UI.Color.System#IFormattable#ToString(System.String,System.IFormatProvider)
  - Windows.UI.Color.ToString
  - Windows.UI.Color.ToString(System.IFormatProvider)
  langs:
  - csharp
  - vb
  name: Color
  fullName: Windows.UI.Color
  type: Struct
  source:
    remote:
      path: src/System.Runtime.WindowsRuntime/src/System/Windows/UI/Color.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: Color
    path: src/System.Runtime.WindowsRuntime/src/System/Windows/UI/Color.cs
    startLine: 33
  assemblies:
  - System.Runtime.WindowsRuntime
  namespace: Windows.UI
  summary: Describes a color in terms of alpha, red, green, and blue channels.
  syntax:
    content: >-
      [StructLayout(LayoutKind.Sequential)]

      public struct Color : IFormattable
    content.vb: >-
      <StructLayout(LayoutKind.Sequential)>

      Public Structure Color
          Implements IFormattable
  implements:
  - System.IFormattable
  inheritedMembers:
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetType
  attributes:
  - type: System.Security.SecurityCriticalAttribute
    ctor: System.Security.SecurityCriticalAttribute.#ctor
    arguments: []
  - type: System.Runtime.InteropServices.StructLayoutAttribute
    ctor: System.Runtime.InteropServices.StructLayoutAttribute.#ctor(System.Runtime.InteropServices.LayoutKind)
    arguments:
    - type: System.Runtime.InteropServices.LayoutKind
      value: 0
  modifiers.csharp:
  - public
  - struct
  modifiers.vb:
  - Public
  - Structure
  nameWithType: Color
- uid: Windows.UI.Color.A
  commentId: P:Windows.UI.Color.A
  id: A
  parent: Windows.UI.Color
  langs:
  - csharp
  - vb
  name: A
  fullName: Windows.UI.Color.A
  type: Property
  source:
    remote:
      path: src/System.Runtime.WindowsRuntime/src/System/Windows/UI/Color.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: A
    path: src/System.Runtime.WindowsRuntime/src/System/Windows/UI/Color.cs
    startLine: 53
  assemblies:
  - System.Runtime.WindowsRuntime
  namespace: Windows.UI
  summary: Gets or sets the sRGB alpha channel value of the color.
  syntax:
    content: public byte A { get; set; }
    content.vb: Public Property A As Byte
    parameters: []
    return:
      type: System.Byte
      description: The sRGB alpha channel value of the color, as a value between 0 and 255.
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
  nameWithType: Color.A
- uid: Windows.UI.Color.B
  commentId: P:Windows.UI.Color.B
  id: B
  parent: Windows.UI.Color
  langs:
  - csharp
  - vb
  name: B
  fullName: Windows.UI.Color.B
  type: Property
  source:
    remote:
      path: src/System.Runtime.WindowsRuntime/src/System/Windows/UI/Color.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: B
    path: src/System.Runtime.WindowsRuntime/src/System/Windows/UI/Color.cs
    startLine: 71
  assemblies:
  - System.Runtime.WindowsRuntime
  namespace: Windows.UI
  summary: Gets or sets the sRGB blue channel value of the color.
  syntax:
    content: public byte B { get; set; }
    content.vb: Public Property B As Byte
    parameters: []
    return:
      type: System.Byte
      description: The sRGB blue channel value, as a value between 0 and 255.
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
  nameWithType: Color.B
- uid: Windows.UI.Color.G
  commentId: P:Windows.UI.Color.G
  id: G
  parent: Windows.UI.Color
  langs:
  - csharp
  - vb
  name: G
  fullName: Windows.UI.Color.G
  type: Property
  source:
    remote:
      path: src/System.Runtime.WindowsRuntime/src/System/Windows/UI/Color.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: G
    path: src/System.Runtime.WindowsRuntime/src/System/Windows/UI/Color.cs
    startLine: 65
  assemblies:
  - System.Runtime.WindowsRuntime
  namespace: Windows.UI
  summary: Gets or sets the sRGB green channel value of the color.
  syntax:
    content: public byte G { get; set; }
    content.vb: Public Property G As Byte
    parameters: []
    return:
      type: System.Byte
      description: The sRGB green channel value, as a value between 0 and 255.
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
  nameWithType: Color.G
- uid: Windows.UI.Color.R
  commentId: P:Windows.UI.Color.R
  id: R
  parent: Windows.UI.Color
  langs:
  - csharp
  - vb
  name: R
  fullName: Windows.UI.Color.R
  type: Property
  source:
    remote:
      path: src/System.Runtime.WindowsRuntime/src/System/Windows/UI/Color.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: R
    path: src/System.Runtime.WindowsRuntime/src/System/Windows/UI/Color.cs
    startLine: 59
  assemblies:
  - System.Runtime.WindowsRuntime
  namespace: Windows.UI
  summary: Gets or sets the sRGB red channel value of the color.
  syntax:
    content: public byte R { get; set; }
    content.vb: Public Property R As Byte
    parameters: []
    return:
      type: System.Byte
      description: The sRGB red channel value, as a value between 0 and 255.
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
  nameWithType: Color.R
- uid: Windows.UI.Color.Equals(System.Object)
  commentId: M:Windows.UI.Color.Equals(System.Object)
  id: Equals(System.Object)
  parent: Windows.UI.Color
  langs:
  - csharp
  - vb
  name: Equals(Object)
  fullName: Windows.UI.Color.Equals(System.Object)
  type: Method
  source:
    remote:
      path: src/System.Runtime.WindowsRuntime/src/System/Windows/UI/Color.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: Equals
    path: src/System.Runtime.WindowsRuntime/src/System/Windows/UI/Color.cs
    startLine: 124
  assemblies:
  - System.Runtime.WindowsRuntime
  namespace: Windows.UI
  summary: Determines whether the specified object is equal to a Color.
  syntax:
    content: public override bool Equals(object o)
    content.vb: Public Overrides Function Equals(o As Object) As Boolean
    parameters:
    - id: o
      type: System.Object
      description: Object to check for equality.
    return:
      type: System.Boolean
      description: true if o is equal to this Color; otherwise, false.
  overridden: System.ValueType.Equals(System.Object)
  attributes:
  - type: System.Security.SecuritySafeCriticalAttribute
    ctor: System.Security.SecuritySafeCriticalAttribute.#ctor
    arguments: []
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
  nameWithType: Color.Equals(Object)
- uid: Windows.UI.Color.Equals(Windows.UI.Color)
  commentId: M:Windows.UI.Color.Equals(Windows.UI.Color)
  id: Equals(Windows.UI.Color)
  parent: Windows.UI.Color
  langs:
  - csharp
  - vb
  name: Equals(Color)
  fullName: Windows.UI.Color.Equals(Windows.UI.Color)
  type: Method
  source:
    remote:
      path: src/System.Runtime.WindowsRuntime/src/System/Windows/UI/Color.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: Equals
    path: src/System.Runtime.WindowsRuntime/src/System/Windows/UI/Color.cs
    startLine: 129
  assemblies:
  - System.Runtime.WindowsRuntime
  namespace: Windows.UI
  summary: Compares two Color structures for equality.
  syntax:
    content: public bool Equals(Color color)
    content.vb: Public Function Equals(color As Color) As Boolean
    parameters:
    - id: color
      type: Windows.UI.Color
      description: The Color structure to compare to this Color.
    return:
      type: System.Boolean
      description: true if both Color structures contain the same values; otherwise, false.
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  nameWithType: Color.Equals(Color)
- uid: Windows.UI.Color.FromArgb(System.Byte,System.Byte,System.Byte,System.Byte)
  commentId: M:Windows.UI.Color.FromArgb(System.Byte,System.Byte,System.Byte,System.Byte)
  id: FromArgb(System.Byte,System.Byte,System.Byte,System.Byte)
  parent: Windows.UI.Color
  langs:
  - csharp
  - vb
  name: FromArgb(Byte, Byte, Byte, Byte)
  fullName: Windows.UI.Color.FromArgb(System.Byte, System.Byte, System.Byte, System.Byte)
  type: Method
  source:
    remote:
      path: src/System.Runtime.WindowsRuntime/src/System/Windows/UI/Color.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: FromArgb
    path: src/System.Runtime.WindowsRuntime/src/System/Windows/UI/Color.cs
    startLine: 41
  assemblies:
  - System.Runtime.WindowsRuntime
  namespace: Windows.UI
  summary: Creates a new Color structure by using the specified sRGB alpha channel and color channel values.
  syntax:
    content: public static Color FromArgb(byte a, byte r, byte g, byte b)
    content.vb: Public Shared Function FromArgb(a As Byte, r As Byte, g As Byte, b As Byte) As Color
    parameters:
    - id: a
      type: System.Byte
      description: The alpha channel, A, of the new color. The value must be between 0 and 255.
    - id: r
      type: System.Byte
      description: The red channel, R, of the new color. The value must be between 0 and 255.
    - id: g
      type: System.Byte
      description: The green channel, G, of the new color. The value must be between 0 and 255.
    - id: b
      type: System.Byte
      description: The blue channel, B, of the new color. The value must be between 0 and 255.
    return:
      type: Windows.UI.Color
      description: A Color structure with the specified values.
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  nameWithType: Color.FromArgb(Byte, Byte, Byte, Byte)
- uid: Windows.UI.Color.GetHashCode
  commentId: M:Windows.UI.Color.GetHashCode
  id: GetHashCode
  parent: Windows.UI.Color
  langs:
  - csharp
  - vb
  name: GetHashCode()
  fullName: Windows.UI.Color.GetHashCode()
  type: Method
  source:
    remote:
      path: src/System.Runtime.WindowsRuntime/src/System/Windows/UI/Color.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: GetHashCode
    path: src/System.Runtime.WindowsRuntime/src/System/Windows/UI/Color.cs
    startLine: 119
  assemblies:
  - System.Runtime.WindowsRuntime
  namespace: Windows.UI
  syntax:
    content: public override int GetHashCode()
    content.vb: Public Overrides Function GetHashCode As Integer
    return:
      type: System.Int32
  overridden: System.ValueType.GetHashCode
  attributes:
  - type: System.Security.SecuritySafeCriticalAttribute
    ctor: System.Security.SecuritySafeCriticalAttribute.#ctor
    arguments: []
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
  nameWithType: Color.GetHashCode()
- uid: Windows.UI.Color.op_Equality(Windows.UI.Color,Windows.UI.Color)
  commentId: M:Windows.UI.Color.op_Equality(Windows.UI.Color,Windows.UI.Color)
  id: op_Equality(Windows.UI.Color,Windows.UI.Color)
  parent: Windows.UI.Color
  langs:
  - csharp
  - vb
  name: Equality(Color, Color)
  fullName: Windows.UI.Color.Equality(Windows.UI.Color, Windows.UI.Color)
  type: Operator
  source:
    remote:
      path: src/System.Runtime.WindowsRuntime/src/System/Windows/UI/Color.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: op_Equality
    path: src/System.Runtime.WindowsRuntime/src/System/Windows/UI/Color.cs
    startLine: 134
  assemblies:
  - System.Runtime.WindowsRuntime
  namespace: Windows.UI
  summary: Compares two Color structures for equality.
  syntax:
    content: public static bool operator ==(Color color1, Color color2)
    content.vb: Public Shared Operator =(color1 As Color, color2 As Color) As Boolean
    parameters:
    - id: color1
      type: Windows.UI.Color
      description: The first Color structure to compare.
    - id: color2
      type: Windows.UI.Color
      description: The second Color structure to compare.
    return:
      type: System.Boolean
      description: true if all values of color1 and color2 are equal; otherwise, false.
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  nameWithType: Color.Equality(Color, Color)
- uid: Windows.UI.Color.op_Inequality(Windows.UI.Color,Windows.UI.Color)
  commentId: M:Windows.UI.Color.op_Inequality(Windows.UI.Color,Windows.UI.Color)
  id: op_Inequality(Windows.UI.Color,Windows.UI.Color)
  parent: Windows.UI.Color
  langs:
  - csharp
  - vb
  name: Inequality(Color, Color)
  fullName: Windows.UI.Color.Inequality(Windows.UI.Color, Windows.UI.Color)
  type: Operator
  source:
    remote:
      path: src/System.Runtime.WindowsRuntime/src/System/Windows/UI/Color.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: op_Inequality
    path: src/System.Runtime.WindowsRuntime/src/System/Windows/UI/Color.cs
    startLine: 143
  assemblies:
  - System.Runtime.WindowsRuntime
  namespace: Windows.UI
  summary: Compares two Color structures for inequality.
  syntax:
    content: public static bool operator !=(Color color1, Color color2)
    content.vb: Public Shared Operator <>(color1 As Color, color2 As Color) As Boolean
    parameters:
    - id: color1
      type: Windows.UI.Color
      description: The first Color structure to compare.
    - id: color2
      type: Windows.UI.Color
      description: The second Color structure to compare.
    return:
      type: System.Boolean
      description: true if color1 and color2 have different values; false if color1 and color2 have the same values.
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  nameWithType: Color.Inequality(Color, Color)
- uid: Windows.UI.Color.ToString
  commentId: M:Windows.UI.Color.ToString
  id: ToString
  parent: Windows.UI.Color
  langs:
  - csharp
  - vb
  name: ToString()
  fullName: Windows.UI.Color.ToString()
  type: Method
  source:
    remote:
      path: src/System.Runtime.WindowsRuntime/src/System/Windows/UI/Color.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: ToString
    path: src/System.Runtime.WindowsRuntime/src/System/Windows/UI/Color.cs
    startLine: 77
  assemblies:
  - System.Runtime.WindowsRuntime
  namespace: Windows.UI
  syntax:
    content: public override string ToString()
    content.vb: Public Overrides Function ToString As String
    return:
      type: System.String
  overridden: System.ValueType.ToString
  attributes:
  - type: System.Security.SecuritySafeCriticalAttribute
    ctor: System.Security.SecuritySafeCriticalAttribute.#ctor
    arguments: []
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
  nameWithType: Color.ToString()
- uid: Windows.UI.Color.ToString(System.IFormatProvider)
  commentId: M:Windows.UI.Color.ToString(System.IFormatProvider)
  id: ToString(System.IFormatProvider)
  parent: Windows.UI.Color
  langs:
  - csharp
  - vb
  name: ToString(IFormatProvider)
  fullName: Windows.UI.Color.ToString(System.IFormatProvider)
  type: Method
  source:
    remote:
      path: src/System.Runtime.WindowsRuntime/src/System/Windows/UI/Color.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: ToString
    path: src/System.Runtime.WindowsRuntime/src/System/Windows/UI/Color.cs
    startLine: 83
  assemblies:
  - System.Runtime.WindowsRuntime
  namespace: Windows.UI
  summary: Creates a String representation of this Color, using a specified formatter.
  syntax:
    content: public string ToString(IFormatProvider provider)
    content.vb: Public Function ToString(provider As IFormatProvider) As String
    parameters:
    - id: provider
      type: System.IFormatProvider
      description: Culture-specific formatting information.
    return:
      type: System.String
      description: A string representation of the current Color that is determined by the specified format provider.
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  nameWithType: Color.ToString(IFormatProvider)
- uid: Windows.UI.Color.System#IFormattable#ToString(System.String,System.IFormatProvider)
  commentId: M:Windows.UI.Color.System#IFormattable#ToString(System.String,System.IFormatProvider)
  id: System#IFormattable#ToString(System.String,System.IFormatProvider)
  isEii: true
  parent: Windows.UI.Color
  langs:
  - csharp
  - vb
  name: IFormattable.ToString(String, IFormatProvider)
  fullName: Windows.UI.Color.System.IFormattable.ToString(System.String, System.IFormatProvider)
  type: Method
  source:
    remote:
      path: src/System.Runtime.WindowsRuntime/src/System/Windows/UI/Color.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: System.IFormattable.ToString
    path: src/System.Runtime.WindowsRuntime/src/System/Windows/UI/Color.cs
    startLine: 89
  assemblies:
  - System.Runtime.WindowsRuntime
  namespace: Windows.UI
  syntax:
    content: string IFormattable.ToString(string format, IFormatProvider provider)
    content.vb: Function System.IFormattable.ToString(format As String, provider As IFormatProvider) As String Implements IFormattable.ToString
    parameters:
    - id: format
      type: System.String
    - id: provider
      type: System.IFormatProvider
    return:
      type: System.String
  implements:
  - System.IFormattable.ToString(System.String,System.IFormatProvider)
  attributes:
  - type: System.Security.SecuritySafeCriticalAttribute
    ctor: System.Security.SecuritySafeCriticalAttribute.#ctor
    arguments: []
  name.vb: System.IFormattable.ToString(String, IFormatProvider)
  nameWithType: Color.IFormattable.ToString(String, IFormatProvider)
  nameWithType.vb: Color.System.IFormattable.ToString(String, IFormatProvider)
references:
- uid: Windows.UI
  isExternal: false
  name: Windows.UI
  fullName: Windows.UI
  nameWithType: Windows.UI
  commentId: N:Windows.UI
- uid: System.IFormattable
  parent: System
  isExternal: false
  name: IFormattable
  fullName: System.IFormattable
  nameWithType: IFormattable
  commentId: T:System.IFormattable
- uid: System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
  nameWithType: Object.Equals(Object, Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
  nameWithType: Object.ReferenceEquals(Object, Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
- uid: System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  nameWithType: Object.GetType()
  commentId: M:System.Object.GetType
- uid: System
  isExternal: false
  name: System
  fullName: System
  nameWithType: System
  commentId: N:System
- uid: System.Object
  parent: System
  isExternal: false
  name: Object
  fullName: System.Object
  nameWithType: Object
  commentId: T:System.Object
- uid: System.Byte
  parent: System
  isExternal: false
  name: Byte
  fullName: System.Byte
  nameWithType: Byte
  commentId: T:System.Byte
- uid: System.ValueType.Equals(System.Object)
  parent: System.ValueType
  isExternal: true
  name: Equals(Object)
  fullName: System.ValueType.Equals(System.Object)
  spec.csharp:
  - uid: System.ValueType.Equals(System.Object)
    name: Equals
    fullName: System.ValueType.Equals
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.ValueType.Equals(System.Object)
    name: Equals
    fullName: System.ValueType.Equals
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
  nameWithType: ValueType.Equals(Object)
  commentId: M:System.ValueType.Equals(System.Object)
- uid: System.Boolean
  parent: System
  isExternal: false
  name: Boolean
  fullName: System.Boolean
  nameWithType: Boolean
  commentId: T:System.Boolean
- uid: System.ValueType
  parent: System
  isExternal: false
  name: ValueType
  fullName: System.ValueType
  nameWithType: ValueType
  commentId: T:System.ValueType
- uid: Windows.UI.Color
  parent: Windows.UI
  isExternal: false
  name: Color
  fullName: Windows.UI.Color
  nameWithType: Color
  commentId: T:Windows.UI.Color
- uid: System.ValueType.GetHashCode
  parent: System.ValueType
  isExternal: false
  name: GetHashCode()
  fullName: System.ValueType.GetHashCode()
  spec.csharp:
  - uid: System.ValueType.GetHashCode
    name: GetHashCode
    fullName: System.ValueType.GetHashCode
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.ValueType.GetHashCode
    name: GetHashCode
    fullName: System.ValueType.GetHashCode
  - name: (
    fullName: (
  - name: )
    fullName: )
  nameWithType: ValueType.GetHashCode()
  commentId: M:System.ValueType.GetHashCode
- uid: System.Int32
  parent: System
  isExternal: false
  name: Int32
  fullName: System.Int32
  nameWithType: Int32
  commentId: T:System.Int32
- uid: System.ValueType.ToString
  parent: System.ValueType
  isExternal: false
  name: ToString()
  fullName: System.ValueType.ToString()
  spec.csharp:
  - uid: System.ValueType.ToString
    name: ToString
    fullName: System.ValueType.ToString
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.ValueType.ToString
    name: ToString
    fullName: System.ValueType.ToString
  - name: (
    fullName: (
  - name: )
    fullName: )
  nameWithType: ValueType.ToString()
  commentId: M:System.ValueType.ToString
- uid: System.String
  parent: System
  isExternal: false
  name: String
  fullName: System.String
  nameWithType: String
  commentId: T:System.String
- uid: System.IFormatProvider
  parent: System
  isExternal: false
  name: IFormatProvider
  fullName: System.IFormatProvider
  nameWithType: IFormatProvider
  commentId: T:System.IFormatProvider
- uid: System.IFormattable.ToString(System.String,System.IFormatProvider)
  parent: System.IFormattable
  isExternal: true
  name: ToString(String, IFormatProvider)
  fullName: System.IFormattable.ToString(System.String, System.IFormatProvider)
  spec.csharp:
  - uid: System.IFormattable.ToString(System.String,System.IFormatProvider)
    name: ToString
    fullName: System.IFormattable.ToString
  - name: (
    fullName: (
  - uid: System.String
    name: String
    fullName: System.String
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.IFormatProvider
    name: IFormatProvider
    fullName: System.IFormatProvider
  - name: )
    fullName: )
  spec.vb:
  - uid: System.IFormattable.ToString(System.String,System.IFormatProvider)
    name: ToString
    fullName: System.IFormattable.ToString
  - name: (
    fullName: (
  - uid: System.String
    name: String
    fullName: System.String
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.IFormatProvider
    name: IFormatProvider
    fullName: System.IFormatProvider
  - name: )
    fullName: )
  nameWithType: IFormattable.ToString(String, IFormatProvider)
  commentId: M:System.IFormattable.ToString(System.String,System.IFormatProvider)
