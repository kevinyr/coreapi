### YamlMime:ManagedReference
items:
- uid: System.ServiceModel.Channels.IChannelFactory`1
  commentId: T:System.ServiceModel.Channels.IChannelFactory`1
  id: IChannelFactory`1
  parent: System.ServiceModel.Channels
  children:
  - System.ServiceModel.Channels.IChannelFactory`1.CreateChannel(System.ServiceModel.EndpointAddress)
  - System.ServiceModel.Channels.IChannelFactory`1.CreateChannel(System.ServiceModel.EndpointAddress,System.Uri)
  langs:
  - csharp
  - vb
  name: IChannelFactory<TChannel>
  nameWithType: IChannelFactory<TChannel>
  fullName: System.ServiceModel.Channels.IChannelFactory<TChannel>
  type: Interface
  source:
    remote:
      path: src/System.ServiceModel.Primitives/ref/System.ServiceModel.Primitives.cs
      branch: master
      repo: https://github.com/dotnet/wcf.git
    id: IChannelFactory
    path: src/System.ServiceModel.Primitives/ref/System.ServiceModel.Primitives.cs
    startLine: 811
  assemblies:
  - System.ServiceModel.Primitives
  namespace: System.ServiceModel.Channels
  summary: "\n<p>Defines the interface that must be implemented by channel factories that create type-specific channels.</p>\n"
  syntax:
    content: 'public interface IChannelFactory<TChannel> : IChannelFactory, ICommunicationObject'
    content.vb: >-
      Public Interface IChannelFactory(Of TChannel)
          Inherits IChannelFactory, ICommunicationObject
    typeParameters:
    - id: TChannel
      description: "\n<p>The type of channel that the channel factory creates.</p>\n"
  inheritedMembers:
  - System.ServiceModel.Channels.IChannelFactory.GetProperty``1
  - System.ServiceModel.ICommunicationObject.State
  - System.ServiceModel.ICommunicationObject.Closed
  - System.ServiceModel.ICommunicationObject.Closing
  - System.ServiceModel.ICommunicationObject.Faulted
  - System.ServiceModel.ICommunicationObject.Opened
  - System.ServiceModel.ICommunicationObject.Opening
  - System.ServiceModel.ICommunicationObject.Abort
  - System.ServiceModel.ICommunicationObject.BeginClose(System.AsyncCallback,System.Object)
  - System.ServiceModel.ICommunicationObject.BeginClose(System.TimeSpan,System.AsyncCallback,System.Object)
  - System.ServiceModel.ICommunicationObject.BeginOpen(System.AsyncCallback,System.Object)
  - System.ServiceModel.ICommunicationObject.BeginOpen(System.TimeSpan,System.AsyncCallback,System.Object)
  - System.ServiceModel.ICommunicationObject.Close
  - System.ServiceModel.ICommunicationObject.Close(System.TimeSpan)
  - System.ServiceModel.ICommunicationObject.EndClose(System.IAsyncResult)
  - System.ServiceModel.ICommunicationObject.EndOpen(System.IAsyncResult)
  - System.ServiceModel.ICommunicationObject.Open
  - System.ServiceModel.ICommunicationObject.Open(System.TimeSpan)
  nameWithType.vb: IChannelFactory(Of TChannel)
  modifiers.csharp:
  - public
  - interface
  modifiers.vb:
  - Public
  - Interface
  fullName.vb: System.ServiceModel.Channels.IChannelFactory(Of TChannel)
  name.vb: IChannelFactory(Of TChannel)
- uid: System.ServiceModel.Channels.IChannelFactory`1.CreateChannel(System.ServiceModel.EndpointAddress)
  commentId: M:System.ServiceModel.Channels.IChannelFactory`1.CreateChannel(System.ServiceModel.EndpointAddress)
  id: CreateChannel(System.ServiceModel.EndpointAddress)
  parent: System.ServiceModel.Channels.IChannelFactory`1
  langs:
  - csharp
  - vb
  name: CreateChannel(EndpointAddress)
  nameWithType: IChannelFactory<TChannel>.CreateChannel(EndpointAddress)
  fullName: System.ServiceModel.Channels.IChannelFactory<TChannel>.CreateChannel(System.ServiceModel.EndpointAddress)
  type: Method
  source:
    remote:
      path: src/System.ServiceModel.Primitives/ref/System.ServiceModel.Primitives.cs
      branch: master
      repo: https://github.com/dotnet/wcf.git
    id: CreateChannel
    path: src/System.ServiceModel.Primitives/ref/System.ServiceModel.Primitives.cs
    startLine: 813
  assemblies:
  - System.ServiceModel.Primitives
  namespace: System.ServiceModel.Channels
  summary: "\n<p>Creates a channel of a specified type to a specified endpoint address.</p>\n"
  syntax:
    content: TChannel CreateChannel(EndpointAddress to)
    content.vb: Function CreateChannel(to As EndpointAddress) As TChannel
    parameters:
    - id: to
      type: System.ServiceModel.EndpointAddress
      description: "\n<p>The <xref href=\"System.ServiceModel.EndpointAddress\" data-throw-if-not-resolved=\"false\"></xref> that provides the location of the service.</p>\n"
    return:
      type: '{TChannel}'
      description: "\n<p>A channel of type <em>TChannel</em> to the specified endpoint address.</p>\n"
  nameWithType.vb: IChannelFactory(Of TChannel).CreateChannel(EndpointAddress)
  fullName.vb: System.ServiceModel.Channels.IChannelFactory(Of TChannel).CreateChannel(System.ServiceModel.EndpointAddress)
- uid: System.ServiceModel.Channels.IChannelFactory`1.CreateChannel(System.ServiceModel.EndpointAddress,System.Uri)
  commentId: M:System.ServiceModel.Channels.IChannelFactory`1.CreateChannel(System.ServiceModel.EndpointAddress,System.Uri)
  id: CreateChannel(System.ServiceModel.EndpointAddress,System.Uri)
  parent: System.ServiceModel.Channels.IChannelFactory`1
  langs:
  - csharp
  - vb
  name: CreateChannel(EndpointAddress, Uri)
  nameWithType: IChannelFactory<TChannel>.CreateChannel(EndpointAddress, Uri)
  fullName: System.ServiceModel.Channels.IChannelFactory<TChannel>.CreateChannel(System.ServiceModel.EndpointAddress, System.Uri)
  type: Method
  source:
    remote:
      path: src/System.ServiceModel.Primitives/ref/System.ServiceModel.Primitives.cs
      branch: master
      repo: https://github.com/dotnet/wcf.git
    id: CreateChannel
    path: src/System.ServiceModel.Primitives/ref/System.ServiceModel.Primitives.cs
    startLine: 814
  assemblies:
  - System.ServiceModel.Primitives
  namespace: System.ServiceModel.Channels
  summary: "\n<p>Creates a channel of a specified type to a specified endpoint address and transport address to which messages are sent.</p>\n"
  syntax:
    content: TChannel CreateChannel(EndpointAddress to, Uri via)
    content.vb: Function CreateChannel(to As EndpointAddress, via As Uri) As TChannel
    parameters:
    - id: to
      type: System.ServiceModel.EndpointAddress
      description: "\n<p>The <xref href=\"System.ServiceModel.EndpointAddress\" data-throw-if-not-resolved=\"false\"></xref> that provides the location of the service.</p>\n"
    - id: via
      type: System.Uri
      description: "\n<p>The <xref href=\"System.Uri\" data-throw-if-not-resolved=\"false\"></xref> that contains the transport address to which the message is sent.</p>\n"
    return:
      type: '{TChannel}'
      description: "\n<p>A channel of type <em>TChannel</em> to the specified endpoint address and transport address.</p>\n"
  nameWithType.vb: IChannelFactory(Of TChannel).CreateChannel(EndpointAddress, Uri)
  fullName.vb: System.ServiceModel.Channels.IChannelFactory(Of TChannel).CreateChannel(System.ServiceModel.EndpointAddress, System.Uri)
references:
- uid: System.ServiceModel.Channels
  commentId: N:System.ServiceModel.Channels
  isExternal: false
  name: System.ServiceModel.Channels
  nameWithType: System.ServiceModel.Channels
  fullName: System.ServiceModel.Channels
- uid: System.ServiceModel.Channels.IChannelFactory.GetProperty``1
  commentId: M:System.ServiceModel.Channels.IChannelFactory.GetProperty``1
  parent: System.ServiceModel.Channels.IChannelFactory
  definition: System.ServiceModel.Channels.IChannelFactory.GetProperty``1
  isExternal: false
  name: GetProperty<T>()
  nameWithType: IChannelFactory.GetProperty<T>()
  fullName: System.ServiceModel.Channels.IChannelFactory.GetProperty<T>()
  nameWithType.vb: IChannelFactory.GetProperty(Of T)()
  fullname.vb: System.ServiceModel.Channels.IChannelFactory.GetProperty(Of T)()
  name.vb: GetProperty(Of T)()
  spec.csharp:
  - uid: System.ServiceModel.Channels.IChannelFactory.GetProperty``1
    name: GetProperty<T>
    nameWithType: IChannelFactory.GetProperty<T>
    fullName: System.ServiceModel.Channels.IChannelFactory.GetProperty<T>
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.ServiceModel.Channels.IChannelFactory.GetProperty``1
    name: GetProperty(Of T)
    nameWithType: IChannelFactory.GetProperty(Of T)
    fullName: System.ServiceModel.Channels.IChannelFactory.GetProperty(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.ServiceModel.ICommunicationObject.State
  commentId: P:System.ServiceModel.ICommunicationObject.State
  parent: System.ServiceModel.ICommunicationObject
  isExternal: false
  name: State
  nameWithType: ICommunicationObject.State
  fullName: System.ServiceModel.ICommunicationObject.State
- uid: System.ServiceModel.ICommunicationObject.Closed
  commentId: E:System.ServiceModel.ICommunicationObject.Closed
  parent: System.ServiceModel.ICommunicationObject
  isExternal: false
  name: Closed
  nameWithType: ICommunicationObject.Closed
  fullName: System.ServiceModel.ICommunicationObject.Closed
- uid: System.ServiceModel.ICommunicationObject.Closing
  commentId: E:System.ServiceModel.ICommunicationObject.Closing
  parent: System.ServiceModel.ICommunicationObject
  isExternal: false
  name: Closing
  nameWithType: ICommunicationObject.Closing
  fullName: System.ServiceModel.ICommunicationObject.Closing
- uid: System.ServiceModel.ICommunicationObject.Faulted
  commentId: E:System.ServiceModel.ICommunicationObject.Faulted
  parent: System.ServiceModel.ICommunicationObject
  isExternal: false
  name: Faulted
  nameWithType: ICommunicationObject.Faulted
  fullName: System.ServiceModel.ICommunicationObject.Faulted
- uid: System.ServiceModel.ICommunicationObject.Opened
  commentId: E:System.ServiceModel.ICommunicationObject.Opened
  parent: System.ServiceModel.ICommunicationObject
  isExternal: false
  name: Opened
  nameWithType: ICommunicationObject.Opened
  fullName: System.ServiceModel.ICommunicationObject.Opened
- uid: System.ServiceModel.ICommunicationObject.Opening
  commentId: E:System.ServiceModel.ICommunicationObject.Opening
  parent: System.ServiceModel.ICommunicationObject
  isExternal: false
  name: Opening
  nameWithType: ICommunicationObject.Opening
  fullName: System.ServiceModel.ICommunicationObject.Opening
- uid: System.ServiceModel.ICommunicationObject.Abort
  commentId: M:System.ServiceModel.ICommunicationObject.Abort
  parent: System.ServiceModel.ICommunicationObject
  isExternal: false
  name: Abort()
  nameWithType: ICommunicationObject.Abort()
  fullName: System.ServiceModel.ICommunicationObject.Abort()
  spec.csharp:
  - uid: System.ServiceModel.ICommunicationObject.Abort
    name: Abort
    nameWithType: ICommunicationObject.Abort
    fullName: System.ServiceModel.ICommunicationObject.Abort
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.ServiceModel.ICommunicationObject.Abort
    name: Abort
    nameWithType: ICommunicationObject.Abort
    fullName: System.ServiceModel.ICommunicationObject.Abort
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.ServiceModel.ICommunicationObject.BeginClose(System.AsyncCallback,System.Object)
  commentId: M:System.ServiceModel.ICommunicationObject.BeginClose(System.AsyncCallback,System.Object)
  parent: System.ServiceModel.ICommunicationObject
  isExternal: true
  name: BeginClose(AsyncCallback, Object)
  nameWithType: ICommunicationObject.BeginClose(AsyncCallback, Object)
  fullName: System.ServiceModel.ICommunicationObject.BeginClose(System.AsyncCallback, System.Object)
  spec.csharp:
  - uid: System.ServiceModel.ICommunicationObject.BeginClose(System.AsyncCallback,System.Object)
    name: BeginClose
    nameWithType: ICommunicationObject.BeginClose
    fullName: System.ServiceModel.ICommunicationObject.BeginClose
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.AsyncCallback
    name: AsyncCallback
    nameWithType: AsyncCallback
    fullName: System.AsyncCallback
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.ServiceModel.ICommunicationObject.BeginClose(System.AsyncCallback,System.Object)
    name: BeginClose
    nameWithType: ICommunicationObject.BeginClose
    fullName: System.ServiceModel.ICommunicationObject.BeginClose
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.AsyncCallback
    name: AsyncCallback
    nameWithType: AsyncCallback
    fullName: System.AsyncCallback
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.ServiceModel.ICommunicationObject.BeginClose(System.TimeSpan,System.AsyncCallback,System.Object)
  commentId: M:System.ServiceModel.ICommunicationObject.BeginClose(System.TimeSpan,System.AsyncCallback,System.Object)
  parent: System.ServiceModel.ICommunicationObject
  isExternal: true
  name: BeginClose(TimeSpan, AsyncCallback, Object)
  nameWithType: ICommunicationObject.BeginClose(TimeSpan, AsyncCallback, Object)
  fullName: System.ServiceModel.ICommunicationObject.BeginClose(System.TimeSpan, System.AsyncCallback, System.Object)
  spec.csharp:
  - uid: System.ServiceModel.ICommunicationObject.BeginClose(System.TimeSpan,System.AsyncCallback,System.Object)
    name: BeginClose
    nameWithType: ICommunicationObject.BeginClose
    fullName: System.ServiceModel.ICommunicationObject.BeginClose
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.TimeSpan
    name: TimeSpan
    nameWithType: TimeSpan
    fullName: System.TimeSpan
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.AsyncCallback
    name: AsyncCallback
    nameWithType: AsyncCallback
    fullName: System.AsyncCallback
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.ServiceModel.ICommunicationObject.BeginClose(System.TimeSpan,System.AsyncCallback,System.Object)
    name: BeginClose
    nameWithType: ICommunicationObject.BeginClose
    fullName: System.ServiceModel.ICommunicationObject.BeginClose
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.TimeSpan
    name: TimeSpan
    nameWithType: TimeSpan
    fullName: System.TimeSpan
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.AsyncCallback
    name: AsyncCallback
    nameWithType: AsyncCallback
    fullName: System.AsyncCallback
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.ServiceModel.ICommunicationObject.BeginOpen(System.AsyncCallback,System.Object)
  commentId: M:System.ServiceModel.ICommunicationObject.BeginOpen(System.AsyncCallback,System.Object)
  parent: System.ServiceModel.ICommunicationObject
  isExternal: true
  name: BeginOpen(AsyncCallback, Object)
  nameWithType: ICommunicationObject.BeginOpen(AsyncCallback, Object)
  fullName: System.ServiceModel.ICommunicationObject.BeginOpen(System.AsyncCallback, System.Object)
  spec.csharp:
  - uid: System.ServiceModel.ICommunicationObject.BeginOpen(System.AsyncCallback,System.Object)
    name: BeginOpen
    nameWithType: ICommunicationObject.BeginOpen
    fullName: System.ServiceModel.ICommunicationObject.BeginOpen
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.AsyncCallback
    name: AsyncCallback
    nameWithType: AsyncCallback
    fullName: System.AsyncCallback
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.ServiceModel.ICommunicationObject.BeginOpen(System.AsyncCallback,System.Object)
    name: BeginOpen
    nameWithType: ICommunicationObject.BeginOpen
    fullName: System.ServiceModel.ICommunicationObject.BeginOpen
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.AsyncCallback
    name: AsyncCallback
    nameWithType: AsyncCallback
    fullName: System.AsyncCallback
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.ServiceModel.ICommunicationObject.BeginOpen(System.TimeSpan,System.AsyncCallback,System.Object)
  commentId: M:System.ServiceModel.ICommunicationObject.BeginOpen(System.TimeSpan,System.AsyncCallback,System.Object)
  parent: System.ServiceModel.ICommunicationObject
  isExternal: true
  name: BeginOpen(TimeSpan, AsyncCallback, Object)
  nameWithType: ICommunicationObject.BeginOpen(TimeSpan, AsyncCallback, Object)
  fullName: System.ServiceModel.ICommunicationObject.BeginOpen(System.TimeSpan, System.AsyncCallback, System.Object)
  spec.csharp:
  - uid: System.ServiceModel.ICommunicationObject.BeginOpen(System.TimeSpan,System.AsyncCallback,System.Object)
    name: BeginOpen
    nameWithType: ICommunicationObject.BeginOpen
    fullName: System.ServiceModel.ICommunicationObject.BeginOpen
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.TimeSpan
    name: TimeSpan
    nameWithType: TimeSpan
    fullName: System.TimeSpan
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.AsyncCallback
    name: AsyncCallback
    nameWithType: AsyncCallback
    fullName: System.AsyncCallback
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.ServiceModel.ICommunicationObject.BeginOpen(System.TimeSpan,System.AsyncCallback,System.Object)
    name: BeginOpen
    nameWithType: ICommunicationObject.BeginOpen
    fullName: System.ServiceModel.ICommunicationObject.BeginOpen
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.TimeSpan
    name: TimeSpan
    nameWithType: TimeSpan
    fullName: System.TimeSpan
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.AsyncCallback
    name: AsyncCallback
    nameWithType: AsyncCallback
    fullName: System.AsyncCallback
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.ServiceModel.ICommunicationObject.Close
  commentId: M:System.ServiceModel.ICommunicationObject.Close
  parent: System.ServiceModel.ICommunicationObject
  isExternal: false
  name: Close()
  nameWithType: ICommunicationObject.Close()
  fullName: System.ServiceModel.ICommunicationObject.Close()
  spec.csharp:
  - uid: System.ServiceModel.ICommunicationObject.Close
    name: Close
    nameWithType: ICommunicationObject.Close
    fullName: System.ServiceModel.ICommunicationObject.Close
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.ServiceModel.ICommunicationObject.Close
    name: Close
    nameWithType: ICommunicationObject.Close
    fullName: System.ServiceModel.ICommunicationObject.Close
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.ServiceModel.ICommunicationObject.Close(System.TimeSpan)
  commentId: M:System.ServiceModel.ICommunicationObject.Close(System.TimeSpan)
  parent: System.ServiceModel.ICommunicationObject
  isExternal: true
  name: Close(TimeSpan)
  nameWithType: ICommunicationObject.Close(TimeSpan)
  fullName: System.ServiceModel.ICommunicationObject.Close(System.TimeSpan)
  spec.csharp:
  - uid: System.ServiceModel.ICommunicationObject.Close(System.TimeSpan)
    name: Close
    nameWithType: ICommunicationObject.Close
    fullName: System.ServiceModel.ICommunicationObject.Close
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.TimeSpan
    name: TimeSpan
    nameWithType: TimeSpan
    fullName: System.TimeSpan
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.ServiceModel.ICommunicationObject.Close(System.TimeSpan)
    name: Close
    nameWithType: ICommunicationObject.Close
    fullName: System.ServiceModel.ICommunicationObject.Close
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.TimeSpan
    name: TimeSpan
    nameWithType: TimeSpan
    fullName: System.TimeSpan
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.ServiceModel.ICommunicationObject.EndClose(System.IAsyncResult)
  commentId: M:System.ServiceModel.ICommunicationObject.EndClose(System.IAsyncResult)
  parent: System.ServiceModel.ICommunicationObject
  isExternal: true
  name: EndClose(IAsyncResult)
  nameWithType: ICommunicationObject.EndClose(IAsyncResult)
  fullName: System.ServiceModel.ICommunicationObject.EndClose(System.IAsyncResult)
  spec.csharp:
  - uid: System.ServiceModel.ICommunicationObject.EndClose(System.IAsyncResult)
    name: EndClose
    nameWithType: ICommunicationObject.EndClose
    fullName: System.ServiceModel.ICommunicationObject.EndClose
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.IAsyncResult
    name: IAsyncResult
    nameWithType: IAsyncResult
    fullName: System.IAsyncResult
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.ServiceModel.ICommunicationObject.EndClose(System.IAsyncResult)
    name: EndClose
    nameWithType: ICommunicationObject.EndClose
    fullName: System.ServiceModel.ICommunicationObject.EndClose
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.IAsyncResult
    name: IAsyncResult
    nameWithType: IAsyncResult
    fullName: System.IAsyncResult
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.ServiceModel.ICommunicationObject.EndOpen(System.IAsyncResult)
  commentId: M:System.ServiceModel.ICommunicationObject.EndOpen(System.IAsyncResult)
  parent: System.ServiceModel.ICommunicationObject
  isExternal: true
  name: EndOpen(IAsyncResult)
  nameWithType: ICommunicationObject.EndOpen(IAsyncResult)
  fullName: System.ServiceModel.ICommunicationObject.EndOpen(System.IAsyncResult)
  spec.csharp:
  - uid: System.ServiceModel.ICommunicationObject.EndOpen(System.IAsyncResult)
    name: EndOpen
    nameWithType: ICommunicationObject.EndOpen
    fullName: System.ServiceModel.ICommunicationObject.EndOpen
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.IAsyncResult
    name: IAsyncResult
    nameWithType: IAsyncResult
    fullName: System.IAsyncResult
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.ServiceModel.ICommunicationObject.EndOpen(System.IAsyncResult)
    name: EndOpen
    nameWithType: ICommunicationObject.EndOpen
    fullName: System.ServiceModel.ICommunicationObject.EndOpen
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.IAsyncResult
    name: IAsyncResult
    nameWithType: IAsyncResult
    fullName: System.IAsyncResult
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.ServiceModel.ICommunicationObject.Open
  commentId: M:System.ServiceModel.ICommunicationObject.Open
  parent: System.ServiceModel.ICommunicationObject
  isExternal: false
  name: Open()
  nameWithType: ICommunicationObject.Open()
  fullName: System.ServiceModel.ICommunicationObject.Open()
  spec.csharp:
  - uid: System.ServiceModel.ICommunicationObject.Open
    name: Open
    nameWithType: ICommunicationObject.Open
    fullName: System.ServiceModel.ICommunicationObject.Open
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.ServiceModel.ICommunicationObject.Open
    name: Open
    nameWithType: ICommunicationObject.Open
    fullName: System.ServiceModel.ICommunicationObject.Open
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.ServiceModel.ICommunicationObject.Open(System.TimeSpan)
  commentId: M:System.ServiceModel.ICommunicationObject.Open(System.TimeSpan)
  parent: System.ServiceModel.ICommunicationObject
  isExternal: true
  name: Open(TimeSpan)
  nameWithType: ICommunicationObject.Open(TimeSpan)
  fullName: System.ServiceModel.ICommunicationObject.Open(System.TimeSpan)
  spec.csharp:
  - uid: System.ServiceModel.ICommunicationObject.Open(System.TimeSpan)
    name: Open
    nameWithType: ICommunicationObject.Open
    fullName: System.ServiceModel.ICommunicationObject.Open
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.TimeSpan
    name: TimeSpan
    nameWithType: TimeSpan
    fullName: System.TimeSpan
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.ServiceModel.ICommunicationObject.Open(System.TimeSpan)
    name: Open
    nameWithType: ICommunicationObject.Open
    fullName: System.ServiceModel.ICommunicationObject.Open
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.TimeSpan
    name: TimeSpan
    nameWithType: TimeSpan
    fullName: System.TimeSpan
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.ServiceModel.Channels.IChannelFactory
  commentId: T:System.ServiceModel.Channels.IChannelFactory
  parent: System.ServiceModel.Channels
  isExternal: false
  name: IChannelFactory
  nameWithType: IChannelFactory
  fullName: System.ServiceModel.Channels.IChannelFactory
- uid: System.ServiceModel.ICommunicationObject
  commentId: T:System.ServiceModel.ICommunicationObject
  parent: System.ServiceModel
  isExternal: false
  name: ICommunicationObject
  nameWithType: ICommunicationObject
  fullName: System.ServiceModel.ICommunicationObject
- uid: System.ServiceModel
  commentId: N:System.ServiceModel
  isExternal: false
  name: System.ServiceModel
  nameWithType: System.ServiceModel
  fullName: System.ServiceModel
- uid: System.ServiceModel.EndpointAddress
  commentId: T:System.ServiceModel.EndpointAddress
  parent: System.ServiceModel
  isExternal: false
  name: EndpointAddress
  nameWithType: EndpointAddress
  fullName: System.ServiceModel.EndpointAddress
- uid: '{TChannel}'
  commentId: '!:TChannel'
  definition: TChannel
  name: TChannel
  nameWithType: TChannel
  fullName: TChannel
- uid: TChannel
  isExternal: false
  name: TChannel
  nameWithType: TChannel
  fullName: TChannel
- uid: System.Uri
  commentId: T:System.Uri
  parent: System
  isExternal: false
  name: Uri
  nameWithType: Uri
  fullName: System.Uri
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
