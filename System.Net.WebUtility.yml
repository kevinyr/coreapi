items:
- uid: System.Net.WebUtility
  commentId: T:System.Net.WebUtility
  id: WebUtility
  parent: System.Net
  children:
  - System.Net.WebUtility.HtmlDecode(System.String)
  - System.Net.WebUtility.HtmlEncode(System.String)
  - System.Net.WebUtility.UrlDecode(System.String)
  - System.Net.WebUtility.UrlDecodeToBytes(System.Byte[],System.Int32,System.Int32)
  - System.Net.WebUtility.UrlEncode(System.String)
  - System.Net.WebUtility.UrlEncodeToBytes(System.Byte[],System.Int32,System.Int32)
  langs:
  - csharp
  - vb
  name: WebUtility
  fullName: System.Net.WebUtility
  type: Class
  source:
    remote:
      path: src/System.Runtime.Extensions/ref/System.Runtime.Extensions.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: WebUtility
    path: src/System.Runtime.Extensions/ref/System.Runtime.Extensions.cs
    startLine: 640
  assemblies:
  - System.Runtime.Extensions
  namespace: System.Net
  summary: "\n<p>Provides methods for encoding and decoding URLs when processing Web requests. </p>\n"
  syntax:
    content: public static class WebUtility
    content.vb: Public Module WebUtility
  seealso:
  - type: System.Uri
    commentId: T:System.Uri
  - type: System.Web.HttpUtility
    commentId: T:System.Web.HttpUtility
  - type: System.Web.HttpServerUtility
    commentId: T:System.Web.HttpServerUtility
  - type: System.Web.HttpContext.Server
    commentId: P:System.Web.HttpContext.Server
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  modifiers.csharp:
  - public
  - static
  - class
  modifiers.vb:
  - Public
  - Module
  nameWithType: WebUtility
- uid: System.Net.WebUtility.HtmlDecode(System.String)
  commentId: M:System.Net.WebUtility.HtmlDecode(System.String)
  id: HtmlDecode(System.String)
  parent: System.Net.WebUtility
  langs:
  - csharp
  - vb
  name: HtmlDecode(String)
  fullName: System.Net.WebUtility.HtmlDecode(System.String)
  type: Method
  source:
    remote:
      path: src/System.Runtime.Extensions/ref/System.Runtime.Extensions.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: HtmlDecode
    path: src/System.Runtime.Extensions/ref/System.Runtime.Extensions.cs
    startLine: 642
  assemblies:
  - System.Runtime.Extensions
  namespace: System.Net
  summary: "\n<p>Converts a string that has been HTML-encoded for HTTP transmission into a decoded string.</p>\n"
  syntax:
    content: public static string HtmlDecode(string value)
    content.vb: Public Shared Function HtmlDecode(value As String) As String
    parameters:
    - id: value
      type: System.String
      description: "\n<p>The string to decode.</p>\n"
    return:
      type: System.String
      description: "\n<p>A decoded string.</p>\n"
  seealso:
  - type: System.Net.WebUtility.HtmlEncode(System.String)
    commentId: M:System.Net.WebUtility.HtmlEncode(System.String)
  - type: System.Web.HttpUtility.HtmlEncode(System.String)
    commentId: M:System.Web.HttpUtility.HtmlEncode(System.String)
  - type: System.Uri
    commentId: T:System.Uri
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  nameWithType: WebUtility.HtmlDecode(String)
- uid: System.Net.WebUtility.HtmlEncode(System.String)
  commentId: M:System.Net.WebUtility.HtmlEncode(System.String)
  id: HtmlEncode(System.String)
  parent: System.Net.WebUtility
  langs:
  - csharp
  - vb
  name: HtmlEncode(String)
  fullName: System.Net.WebUtility.HtmlEncode(System.String)
  type: Method
  source:
    remote:
      path: src/System.Runtime.Extensions/ref/System.Runtime.Extensions.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: HtmlEncode
    path: src/System.Runtime.Extensions/ref/System.Runtime.Extensions.cs
    startLine: 643
  assemblies:
  - System.Runtime.Extensions
  namespace: System.Net
  summary: "\n<p>Converts a string to an HTML-encoded string.</p>\n"
  syntax:
    content: public static string HtmlEncode(string value)
    content.vb: Public Shared Function HtmlEncode(value As String) As String
    parameters:
    - id: value
      type: System.String
      description: "\n<p>The string to encode.</p>\n"
    return:
      type: System.String
      description: "\n<p>An encoded string.</p>\n"
  seealso:
  - type: System.Net.WebUtility.HtmlDecode(System.String)
    commentId: M:System.Net.WebUtility.HtmlDecode(System.String)
  - type: System.Web.HttpUtility.HtmlDecode(System.String)
    commentId: M:System.Web.HttpUtility.HtmlDecode(System.String)
  - type: System.Uri
    commentId: T:System.Uri
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  nameWithType: WebUtility.HtmlEncode(String)
- uid: System.Net.WebUtility.UrlDecode(System.String)
  commentId: M:System.Net.WebUtility.UrlDecode(System.String)
  id: UrlDecode(System.String)
  parent: System.Net.WebUtility
  langs:
  - csharp
  - vb
  name: UrlDecode(String)
  fullName: System.Net.WebUtility.UrlDecode(System.String)
  type: Method
  source:
    remote:
      path: src/System.Runtime.Extensions/ref/System.Runtime.Extensions.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: UrlDecode
    path: src/System.Runtime.Extensions/ref/System.Runtime.Extensions.cs
    startLine: 644
  assemblies:
  - System.Runtime.Extensions
  namespace: System.Net
  summary: "\n<p>Converts a string that has been encoded for transmission in a URL into a decoded string.</p>\n"
  syntax:
    content: public static string UrlDecode(string encodedValue)
    content.vb: Public Shared Function UrlDecode(encodedValue As String) As String
    parameters:
    - id: encodedValue
      type: System.String
      description: "\n<p>A URL-encoded string to decode.</p>\n"
    return:
      type: System.String
      description: "\n<p>Returns <xref href=\"System.String\" data-throw-if-not-resolved=\"false\"></xref>.</p>\n<p>A decoded string.</p>\n"
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  nameWithType: WebUtility.UrlDecode(String)
- uid: System.Net.WebUtility.UrlDecodeToBytes(System.Byte[],System.Int32,System.Int32)
  commentId: M:System.Net.WebUtility.UrlDecodeToBytes(System.Byte[],System.Int32,System.Int32)
  id: UrlDecodeToBytes(System.Byte[],System.Int32,System.Int32)
  parent: System.Net.WebUtility
  langs:
  - csharp
  - vb
  name: UrlDecodeToBytes(Byte[], Int32, Int32)
  fullName: System.Net.WebUtility.UrlDecodeToBytes(System.Byte[], System.Int32, System.Int32)
  type: Method
  source:
    remote:
      path: src/System.Runtime.Extensions/ref/System.Runtime.Extensions.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: UrlDecodeToBytes
    path: src/System.Runtime.Extensions/ref/System.Runtime.Extensions.cs
    startLine: 645
  assemblies:
  - System.Runtime.Extensions
  namespace: System.Net
  summary: "\n<p>Converts an encoded byte array that has been encoded for transmission in a URL into a decoded byte array.</p>\n"
  syntax:
    content: public static byte[] UrlDecodeToBytes(byte[] encodedValue, int offset, int count)
    content.vb: Public Shared Function UrlDecodeToBytes(encodedValue As Byte(), offset As Integer, count As Integer) As Byte()
    parameters:
    - id: encodedValue
      type: System.Byte[]
      description: "\n<p>A URL-encoded <xref href=\"System.Byte\" data-throw-if-not-resolved=\"false\"></xref> array to decode.</p>\n"
    - id: offset
      type: System.Int32
      description: "\n<p>The offset, in bytes, from the start of the <xref href=\"System.Byte\" data-throw-if-not-resolved=\"false\"></xref> array to decode.</p>\n"
    - id: count
      type: System.Int32
      description: "\n<p>The count, in bytes, to decode from the <xref href=\"System.Byte\" data-throw-if-not-resolved=\"false\"></xref> array.</p>\n"
    return:
      type: System.Byte[]
      description: "\n<p>Returns <xref href=\"System.Byte\" data-throw-if-not-resolved=\"false\"></xref>.</p>\n<p>A decoded <xref href=\"System.Byte\" data-throw-if-not-resolved=\"false\"></xref> array.</p>\n"
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: System.Net.WebUtility.UrlDecodeToBytes(System.Byte(), System.Int32, System.Int32)
  name.vb: UrlDecodeToBytes(Byte(), Int32, Int32)
  nameWithType: WebUtility.UrlDecodeToBytes(Byte[], Int32, Int32)
  nameWithType.vb: WebUtility.UrlDecodeToBytes(Byte(), Int32, Int32)
- uid: System.Net.WebUtility.UrlEncode(System.String)
  commentId: M:System.Net.WebUtility.UrlEncode(System.String)
  id: UrlEncode(System.String)
  parent: System.Net.WebUtility
  langs:
  - csharp
  - vb
  name: UrlEncode(String)
  fullName: System.Net.WebUtility.UrlEncode(System.String)
  type: Method
  source:
    remote:
      path: src/System.Runtime.Extensions/ref/System.Runtime.Extensions.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: UrlEncode
    path: src/System.Runtime.Extensions/ref/System.Runtime.Extensions.cs
    startLine: 646
  assemblies:
  - System.Runtime.Extensions
  namespace: System.Net
  summary: "\n<p>Converts a text string into a URL-encoded string.</p>\n"
  syntax:
    content: public static string UrlEncode(string value)
    content.vb: Public Shared Function UrlEncode(value As String) As String
    parameters:
    - id: value
      type: System.String
      description: "\n<p>The text to URL-encode.</p>\n"
    return:
      type: System.String
      description: "\n<p>Returns <xref href=\"System.String\" data-throw-if-not-resolved=\"false\"></xref>.</p>\n<p>A URL-encoded string.</p>\n"
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  nameWithType: WebUtility.UrlEncode(String)
- uid: System.Net.WebUtility.UrlEncodeToBytes(System.Byte[],System.Int32,System.Int32)
  commentId: M:System.Net.WebUtility.UrlEncodeToBytes(System.Byte[],System.Int32,System.Int32)
  id: UrlEncodeToBytes(System.Byte[],System.Int32,System.Int32)
  parent: System.Net.WebUtility
  langs:
  - csharp
  - vb
  name: UrlEncodeToBytes(Byte[], Int32, Int32)
  fullName: System.Net.WebUtility.UrlEncodeToBytes(System.Byte[], System.Int32, System.Int32)
  type: Method
  source:
    remote:
      path: src/System.Runtime.Extensions/ref/System.Runtime.Extensions.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: UrlEncodeToBytes
    path: src/System.Runtime.Extensions/ref/System.Runtime.Extensions.cs
    startLine: 647
  assemblies:
  - System.Runtime.Extensions
  namespace: System.Net
  summary: "\n<p>Converts a byte array into a URL-encoded byte array.</p>\n"
  syntax:
    content: public static byte[] UrlEncodeToBytes(byte[] value, int offset, int count)
    content.vb: Public Shared Function UrlEncodeToBytes(value As Byte(), offset As Integer, count As Integer) As Byte()
    parameters:
    - id: value
      type: System.Byte[]
      description: "\n<p>The <xref href=\"System.Byte\" data-throw-if-not-resolved=\"false\"></xref> array to URL-encode.</p>\n"
    - id: offset
      type: System.Int32
      description: "\n<p>The offset, in bytes, from the start of the <xref href=\"System.Byte\" data-throw-if-not-resolved=\"false\"></xref> array to encode.</p>\n"
    - id: count
      type: System.Int32
      description: "\n<p>The count, in bytes, to encode from the <xref href=\"System.Byte\" data-throw-if-not-resolved=\"false\"></xref> array.</p>\n"
    return:
      type: System.Byte[]
      description: "\n<p>Returns <xref href=\"System.Byte\" data-throw-if-not-resolved=\"false\"></xref>.</p>\n<p>An encoded <xref href=\"System.Byte\" data-throw-if-not-resolved=\"false\"></xref> array.</p>\n"
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: System.Net.WebUtility.UrlEncodeToBytes(System.Byte(), System.Int32, System.Int32)
  name.vb: UrlEncodeToBytes(Byte(), Int32, Int32)
  nameWithType: WebUtility.UrlEncodeToBytes(Byte[], Int32, Int32)
  nameWithType.vb: WebUtility.UrlEncodeToBytes(Byte(), Int32, Int32)
references:
- uid: System.Net
  isExternal: false
  name: System.Net
  fullName: System.Net
  commentId: N:System.Net
  nameWithType: System.Net
- uid: System.Object
  parent: System
  isExternal: false
  name: Object
  fullName: System.Object
  commentId: T:System.Object
  nameWithType: Object
- uid: System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  commentId: M:System.Object.ToString
  nameWithType: Object.ToString()
- uid: System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
  commentId: M:System.Object.Equals(System.Object)
  nameWithType: Object.Equals(Object)
- uid: System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
  commentId: M:System.Object.Equals(System.Object,System.Object)
  nameWithType: Object.Equals(Object, Object)
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
- uid: System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  commentId: M:System.Object.GetHashCode
  nameWithType: Object.GetHashCode()
- uid: System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  commentId: M:System.Object.GetType
  nameWithType: Object.GetType()
- uid: System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  commentId: M:System.Object.MemberwiseClone
  nameWithType: Object.MemberwiseClone()
- uid: System
  isExternal: false
  name: System
  fullName: System
  commentId: N:System
  nameWithType: System
- uid: System.String
  parent: System
  isExternal: false
  name: String
  fullName: System.String
  commentId: T:System.String
  nameWithType: String
- uid: System.Byte[]
  name: Byte[]
  fullName: System.Byte[]
  fullname.vb: System.Byte()
  name.vb: Byte()
  spec.csharp:
  - uid: System.Byte
    name: Byte
    fullName: System.Byte
    isExternal: true
  - name: '[]'
    fullName: '[]'
  spec.vb:
  - uid: System.Byte
    name: Byte
    fullName: System.Byte
    isExternal: true
  - name: ()
    fullName: ()
  nameWithType: Byte[]
  nameWithType.vb: Byte()
- uid: System.Int32
  parent: System
  isExternal: false
  name: Int32
  fullName: System.Int32
  commentId: T:System.Int32
  nameWithType: Int32
