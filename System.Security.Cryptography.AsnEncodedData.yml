items:
- uid: System.Security.Cryptography.AsnEncodedData
  commentId: T:System.Security.Cryptography.AsnEncodedData
  id: AsnEncodedData
  parent: System.Security.Cryptography
  children:
  - System.Security.Cryptography.AsnEncodedData.#ctor
  - System.Security.Cryptography.AsnEncodedData.#ctor(System.Byte[])
  - System.Security.Cryptography.AsnEncodedData.#ctor(System.Security.Cryptography.AsnEncodedData)
  - System.Security.Cryptography.AsnEncodedData.#ctor(System.Security.Cryptography.Oid,System.Byte[])
  - System.Security.Cryptography.AsnEncodedData.#ctor(System.String,System.Byte[])
  - System.Security.Cryptography.AsnEncodedData.CopyFrom(System.Security.Cryptography.AsnEncodedData)
  - System.Security.Cryptography.AsnEncodedData.Format(System.Boolean)
  - System.Security.Cryptography.AsnEncodedData.Oid
  - System.Security.Cryptography.AsnEncodedData.RawData
  langs:
  - csharp
  - vb
  name: AsnEncodedData
  fullName: System.Security.Cryptography.AsnEncodedData
  type: Class
  source:
    remote:
      path: src/System.Security.Cryptography.Encoding/ref/System.Security.Cryptography.Encoding.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: AsnEncodedData
    path: src/System.Security.Cryptography.Encoding/ref/System.Security.Cryptography.Encoding.cs
    startLine: 10
  assemblies:
  - System.Security.Cryptography.Encoding
  namespace: System.Security.Cryptography
  summary: "\n<p>Represents Abstract Syntax Notation One (ASN.1)-encoded data.</p>\n"
  syntax:
    content: public class AsnEncodedData
    content.vb: Public Class AsnEncodedData
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
  nameWithType: AsnEncodedData
- uid: System.Security.Cryptography.AsnEncodedData.#ctor
  commentId: M:System.Security.Cryptography.AsnEncodedData.#ctor
  id: '#ctor'
  parent: System.Security.Cryptography.AsnEncodedData
  langs:
  - csharp
  - vb
  name: AsnEncodedData()
  fullName: System.Security.Cryptography.AsnEncodedData.AsnEncodedData()
  type: Constructor
  source:
    remote:
      path: src/System.Security.Cryptography.Encoding/ref/System.Security.Cryptography.Encoding.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: .ctor
    path: src/System.Security.Cryptography.Encoding/ref/System.Security.Cryptography.Encoding.cs
    startLine: 12
  assemblies:
  - System.Security.Cryptography.Encoding
  namespace: System.Security.Cryptography
  summary: "\n<p>Initializes a new instance of the <xref href=\"System.Security.Cryptography.AsnEncodedData\" data-throw-if-not-resolved=\"false\"></xref> class.</p>\n"
  syntax:
    content: protected AsnEncodedData()
    content.vb: Protected Sub New
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
  nameWithType: AsnEncodedData.AsnEncodedData()
- uid: System.Security.Cryptography.AsnEncodedData.#ctor(System.Byte[])
  commentId: M:System.Security.Cryptography.AsnEncodedData.#ctor(System.Byte[])
  id: '#ctor(System.Byte[])'
  parent: System.Security.Cryptography.AsnEncodedData
  langs:
  - csharp
  - vb
  name: AsnEncodedData(Byte[])
  fullName: System.Security.Cryptography.AsnEncodedData.AsnEncodedData(System.Byte[])
  type: Constructor
  source:
    remote:
      path: src/System.Security.Cryptography.Encoding/ref/System.Security.Cryptography.Encoding.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: .ctor
    path: src/System.Security.Cryptography.Encoding/ref/System.Security.Cryptography.Encoding.cs
    startLine: 13
  assemblies:
  - System.Security.Cryptography.Encoding
  namespace: System.Security.Cryptography
  summary: "\n<p>Initializes a new instance of the <xref href=\"System.Security.Cryptography.AsnEncodedData\" data-throw-if-not-resolved=\"false\"></xref> class using a byte array.</p>\n"
  syntax:
    content: public AsnEncodedData(byte[] rawData)
    content.vb: Public Sub New(rawData As Byte())
    parameters:
    - id: rawData
      type: System.Byte[]
      description: "\n<p>A byte array that contains Abstract Syntax Notation One (ASN.1)-encoded data.</p>\n"
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: System.Security.Cryptography.AsnEncodedData.AsnEncodedData(System.Byte())
  name.vb: AsnEncodedData(Byte())
  nameWithType: AsnEncodedData.AsnEncodedData(Byte[])
  nameWithType.vb: AsnEncodedData.AsnEncodedData(Byte())
- uid: System.Security.Cryptography.AsnEncodedData.#ctor(System.Security.Cryptography.AsnEncodedData)
  commentId: M:System.Security.Cryptography.AsnEncodedData.#ctor(System.Security.Cryptography.AsnEncodedData)
  id: '#ctor(System.Security.Cryptography.AsnEncodedData)'
  parent: System.Security.Cryptography.AsnEncodedData
  langs:
  - csharp
  - vb
  name: AsnEncodedData(AsnEncodedData)
  fullName: System.Security.Cryptography.AsnEncodedData.AsnEncodedData(System.Security.Cryptography.AsnEncodedData)
  type: Constructor
  source:
    remote:
      path: src/System.Security.Cryptography.Encoding/ref/System.Security.Cryptography.Encoding.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: .ctor
    path: src/System.Security.Cryptography.Encoding/ref/System.Security.Cryptography.Encoding.cs
    startLine: 14
  assemblies:
  - System.Security.Cryptography.Encoding
  namespace: System.Security.Cryptography
  summary: "\n<p>Initializes a new instance of the <xref href=\"System.Security.Cryptography.AsnEncodedData\" data-throw-if-not-resolved=\"false\"></xref> class using an instance of the <xref href=\"System.Security.Cryptography.AsnEncodedData\" data-throw-if-not-resolved=\"false\"></xref> class.</p>\n"
  syntax:
    content: public AsnEncodedData(AsnEncodedData asnEncodedData)
    content.vb: Public Sub New(asnEncodedData As AsnEncodedData)
    parameters:
    - id: asnEncodedData
      type: System.Security.Cryptography.AsnEncodedData
      description: "\n<p>An instance of the <xref href=\"System.Security.Cryptography.AsnEncodedData\" data-throw-if-not-resolved=\"false\"></xref> class.</p>\n"
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "\n<p>\n<em>asnEncodedData</em> is <strong>null</strong>.</p>\n"
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  nameWithType: AsnEncodedData.AsnEncodedData(AsnEncodedData)
- uid: System.Security.Cryptography.AsnEncodedData.#ctor(System.Security.Cryptography.Oid,System.Byte[])
  commentId: M:System.Security.Cryptography.AsnEncodedData.#ctor(System.Security.Cryptography.Oid,System.Byte[])
  id: '#ctor(System.Security.Cryptography.Oid,System.Byte[])'
  parent: System.Security.Cryptography.AsnEncodedData
  langs:
  - csharp
  - vb
  name: AsnEncodedData(Oid, Byte[])
  fullName: System.Security.Cryptography.AsnEncodedData.AsnEncodedData(System.Security.Cryptography.Oid, System.Byte[])
  type: Constructor
  source:
    remote:
      path: src/System.Security.Cryptography.Encoding/ref/System.Security.Cryptography.Encoding.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: .ctor
    path: src/System.Security.Cryptography.Encoding/ref/System.Security.Cryptography.Encoding.cs
    startLine: 15
  assemblies:
  - System.Security.Cryptography.Encoding
  namespace: System.Security.Cryptography
  summary: "\n<p>Initializes a new instance of the <xref href=\"System.Security.Cryptography.AsnEncodedData\" data-throw-if-not-resolved=\"false\"></xref> class using an <xref href=\"System.Security.Cryptography.Oid\" data-throw-if-not-resolved=\"false\"></xref> object and a byte array.</p>\n"
  syntax:
    content: public AsnEncodedData(Oid oid, byte[] rawData)
    content.vb: Public Sub New(oid As Oid, rawData As Byte())
    parameters:
    - id: oid
      type: System.Security.Cryptography.Oid
      description: "\n<p>An <xref href=\"System.Security.Cryptography.Oid\" data-throw-if-not-resolved=\"false\"></xref> object.</p>\n"
    - id: rawData
      type: System.Byte[]
      description: "\n<p>A byte array that contains Abstract Syntax Notation One (ASN.1)-encoded data.</p>\n"
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: System.Security.Cryptography.AsnEncodedData.AsnEncodedData(System.Security.Cryptography.Oid, System.Byte())
  name.vb: AsnEncodedData(Oid, Byte())
  nameWithType: AsnEncodedData.AsnEncodedData(Oid, Byte[])
  nameWithType.vb: AsnEncodedData.AsnEncodedData(Oid, Byte())
- uid: System.Security.Cryptography.AsnEncodedData.#ctor(System.String,System.Byte[])
  commentId: M:System.Security.Cryptography.AsnEncodedData.#ctor(System.String,System.Byte[])
  id: '#ctor(System.String,System.Byte[])'
  parent: System.Security.Cryptography.AsnEncodedData
  langs:
  - csharp
  - vb
  name: AsnEncodedData(String, Byte[])
  fullName: System.Security.Cryptography.AsnEncodedData.AsnEncodedData(System.String, System.Byte[])
  type: Constructor
  source:
    remote:
      path: src/System.Security.Cryptography.Encoding/ref/System.Security.Cryptography.Encoding.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: .ctor
    path: src/System.Security.Cryptography.Encoding/ref/System.Security.Cryptography.Encoding.cs
    startLine: 16
  assemblies:
  - System.Security.Cryptography.Encoding
  namespace: System.Security.Cryptography
  summary: "\n<p>Initializes a new instance of the <xref href=\"System.Security.Cryptography.AsnEncodedData\" data-throw-if-not-resolved=\"false\"></xref> class using a byte array.</p>\n"
  syntax:
    content: public AsnEncodedData(string oid, byte[] rawData)
    content.vb: Public Sub New(oid As String, rawData As Byte())
    parameters:
    - id: oid
      type: System.String
      description: "\n<p>A string that represents <xref href=\"System.Security.Cryptography.Oid\" data-throw-if-not-resolved=\"false\"></xref> information.</p>\n"
    - id: rawData
      type: System.Byte[]
      description: "\n<p>A byte array that contains Abstract Syntax Notation One (ASN.1)-encoded data.</p>\n"
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: System.Security.Cryptography.AsnEncodedData.AsnEncodedData(System.String, System.Byte())
  name.vb: AsnEncodedData(String, Byte())
  nameWithType: AsnEncodedData.AsnEncodedData(String, Byte[])
  nameWithType.vb: AsnEncodedData.AsnEncodedData(String, Byte())
- uid: System.Security.Cryptography.AsnEncodedData.Oid
  commentId: P:System.Security.Cryptography.AsnEncodedData.Oid
  id: Oid
  parent: System.Security.Cryptography.AsnEncodedData
  langs:
  - csharp
  - vb
  name: Oid
  fullName: System.Security.Cryptography.AsnEncodedData.Oid
  type: Property
  source:
    remote:
      path: src/System.Security.Cryptography.Encoding/ref/System.Security.Cryptography.Encoding.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: Oid
    path: src/System.Security.Cryptography.Encoding/ref/System.Security.Cryptography.Encoding.cs
    startLine: 17
  assemblies:
  - System.Security.Cryptography.Encoding
  namespace: System.Security.Cryptography
  summary: "\n<p>Gets or sets the <xref href=\"System.Security.Cryptography.Oid\" data-throw-if-not-resolved=\"false\"></xref> value for an <xref href=\"System.Security.Cryptography.AsnEncodedData\" data-throw-if-not-resolved=\"false\"></xref> object.</p>\n"
  syntax:
    content: public Oid Oid { get; set; }
    content.vb: Public Property Oid As Oid
    parameters: []
    return:
      type: System.Security.Cryptography.Oid
      description: "\n<p>An <xref href=\"System.Security.Cryptography.Oid\" data-throw-if-not-resolved=\"false\"></xref> object.</p>\n"
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
  nameWithType: AsnEncodedData.Oid
- uid: System.Security.Cryptography.AsnEncodedData.RawData
  commentId: P:System.Security.Cryptography.AsnEncodedData.RawData
  id: RawData
  parent: System.Security.Cryptography.AsnEncodedData
  langs:
  - csharp
  - vb
  name: RawData
  fullName: System.Security.Cryptography.AsnEncodedData.RawData
  type: Property
  source:
    remote:
      path: src/System.Security.Cryptography.Encoding/ref/System.Security.Cryptography.Encoding.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: RawData
    path: src/System.Security.Cryptography.Encoding/ref/System.Security.Cryptography.Encoding.cs
    startLine: 18
  assemblies:
  - System.Security.Cryptography.Encoding
  namespace: System.Security.Cryptography
  summary: "\n<p>Gets or sets the Abstract Syntax Notation One (ASN.1)-encoded data represented in a byte array.</p>\n"
  syntax:
    content: public byte[] RawData { get; set; }
    content.vb: Public Property RawData As Byte()
    parameters: []
    return:
      type: System.Byte[]
      description: "\n<p>A byte array that represents the Abstract Syntax Notation One (ASN.1)-encoded data.</p>\n"
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "\n<p>The value is <strong>null</strong>.</p>\n"
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
  nameWithType: AsnEncodedData.RawData
- uid: System.Security.Cryptography.AsnEncodedData.CopyFrom(System.Security.Cryptography.AsnEncodedData)
  commentId: M:System.Security.Cryptography.AsnEncodedData.CopyFrom(System.Security.Cryptography.AsnEncodedData)
  id: CopyFrom(System.Security.Cryptography.AsnEncodedData)
  parent: System.Security.Cryptography.AsnEncodedData
  langs:
  - csharp
  - vb
  name: CopyFrom(AsnEncodedData)
  fullName: System.Security.Cryptography.AsnEncodedData.CopyFrom(System.Security.Cryptography.AsnEncodedData)
  type: Method
  source:
    remote:
      path: src/System.Security.Cryptography.Encoding/ref/System.Security.Cryptography.Encoding.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: CopyFrom
    path: src/System.Security.Cryptography.Encoding/ref/System.Security.Cryptography.Encoding.cs
    startLine: 19
  assemblies:
  - System.Security.Cryptography.Encoding
  namespace: System.Security.Cryptography
  summary: "\n<p>Copies information from an <xref href=\"System.Security.Cryptography.AsnEncodedData\" data-throw-if-not-resolved=\"false\"></xref> object.</p>\n"
  syntax:
    content: public virtual void CopyFrom(AsnEncodedData asnEncodedData)
    content.vb: Public Overridable Sub CopyFrom(asnEncodedData As AsnEncodedData)
    parameters:
    - id: asnEncodedData
      type: System.Security.Cryptography.AsnEncodedData
      description: "\n<p>The <xref href=\"System.Security.Cryptography.AsnEncodedData\" data-throw-if-not-resolved=\"false\"></xref> object to base the new object on.</p>\n"
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "\n<p>\n<em>asnEncodedData </em>is <strong>null</strong>.</p>\n"
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
  nameWithType: AsnEncodedData.CopyFrom(AsnEncodedData)
- uid: System.Security.Cryptography.AsnEncodedData.Format(System.Boolean)
  commentId: M:System.Security.Cryptography.AsnEncodedData.Format(System.Boolean)
  id: Format(System.Boolean)
  parent: System.Security.Cryptography.AsnEncodedData
  langs:
  - csharp
  - vb
  name: Format(Boolean)
  fullName: System.Security.Cryptography.AsnEncodedData.Format(System.Boolean)
  type: Method
  source:
    remote:
      path: src/System.Security.Cryptography.Encoding/ref/System.Security.Cryptography.Encoding.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: Format
    path: src/System.Security.Cryptography.Encoding/ref/System.Security.Cryptography.Encoding.cs
    startLine: 20
  assemblies:
  - System.Security.Cryptography.Encoding
  namespace: System.Security.Cryptography
  summary: "\n<p>Returns a formatted version of the Abstract Syntax Notation One (ASN.1)-encoded data as a string.</p>\n"
  syntax:
    content: public virtual string Format(bool multiLine)
    content.vb: Public Overridable Function Format(multiLine As Boolean) As String
    parameters:
    - id: multiLine
      type: System.Boolean
      description: "\n<p>\n<strong>true</strong> if the return string should contain carriage returns; otherwise, <strong>false</strong>.</p>\n"
    return:
      type: System.String
      description: "\n<p>A formatted string that represents the Abstract Syntax Notation One (ASN.1)-encoded data.</p>\n"
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
  nameWithType: AsnEncodedData.Format(Boolean)
references:
- uid: System.Security.Cryptography
  isExternal: false
  name: System.Security.Cryptography
  fullName: System.Security.Cryptography
  commentId: N:System.Security.Cryptography
  nameWithType: System.Security.Cryptography
- uid: System.Object
  parent: System
  isExternal: false
  name: Object
  fullName: System.Object
  commentId: T:System.Object
  nameWithType: Object
- uid: System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  commentId: M:System.Object.ToString
  nameWithType: Object.ToString()
- uid: System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
  commentId: M:System.Object.Equals(System.Object)
  nameWithType: Object.Equals(Object)
- uid: System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
  commentId: M:System.Object.Equals(System.Object,System.Object)
  nameWithType: Object.Equals(Object, Object)
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
- uid: System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  commentId: M:System.Object.GetHashCode
  nameWithType: Object.GetHashCode()
- uid: System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  commentId: M:System.Object.GetType
  nameWithType: Object.GetType()
- uid: System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  commentId: M:System.Object.MemberwiseClone
  nameWithType: Object.MemberwiseClone()
- uid: System
  isExternal: false
  name: System
  fullName: System
  commentId: N:System
  nameWithType: System
- uid: System.Byte[]
  name: Byte[]
  fullName: System.Byte[]
  fullname.vb: System.Byte()
  name.vb: Byte()
  spec.csharp:
  - uid: System.Byte
    name: Byte
    fullName: System.Byte
    isExternal: true
  - name: '[]'
    fullName: '[]'
  spec.vb:
  - uid: System.Byte
    name: Byte
    fullName: System.Byte
    isExternal: true
  - name: ()
    fullName: ()
  nameWithType: Byte[]
  nameWithType.vb: Byte()
- uid: System.Security.Cryptography.AsnEncodedData
  parent: System.Security.Cryptography
  isExternal: false
  name: AsnEncodedData
  fullName: System.Security.Cryptography.AsnEncodedData
  commentId: T:System.Security.Cryptography.AsnEncodedData
  nameWithType: AsnEncodedData
- uid: System.Security.Cryptography.Oid
  parent: System.Security.Cryptography
  isExternal: false
  name: Oid
  fullName: System.Security.Cryptography.Oid
  commentId: T:System.Security.Cryptography.Oid
  nameWithType: Oid
- uid: System.String
  parent: System
  isExternal: false
  name: String
  fullName: System.String
  commentId: T:System.String
  nameWithType: String
- uid: System.Boolean
  parent: System
  isExternal: false
  name: Boolean
  fullName: System.Boolean
  commentId: T:System.Boolean
  nameWithType: Boolean
- uid: System.ArgumentNullException
  isExternal: false
  name: ArgumentNullException
  fullName: System.ArgumentNullException
  nameWithType: ArgumentNullException
  commentId: T:System.ArgumentNullException
