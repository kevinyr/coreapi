### YamlMime:ManagedReference
items:
- uid: System.ServiceModel.Channels.MessageEncodingBindingElement
  commentId: T:System.ServiceModel.Channels.MessageEncodingBindingElement
  id: MessageEncodingBindingElement
  parent: System.ServiceModel.Channels
  children:
  - System.ServiceModel.Channels.MessageEncodingBindingElement.#ctor
  - System.ServiceModel.Channels.MessageEncodingBindingElement.#ctor(System.ServiceModel.Channels.MessageEncodingBindingElement)
  - System.ServiceModel.Channels.MessageEncodingBindingElement.CreateMessageEncoderFactory
  - System.ServiceModel.Channels.MessageEncodingBindingElement.GetProperty``1(System.ServiceModel.Channels.BindingContext)
  - System.ServiceModel.Channels.MessageEncodingBindingElement.MessageVersion
  langs:
  - csharp
  - vb
  name: MessageEncodingBindingElement
  nameWithType: MessageEncodingBindingElement
  fullName: System.ServiceModel.Channels.MessageEncodingBindingElement
  type: Class
  source:
    remote:
      path: src/System.Private.ServiceModel/src/System/ServiceModel/Channels/MessageEncodingBindingElement.cs
      branch: master
      repo: https://github.com/dotnet/wcf.git
    id: MessageEncodingBindingElement
    path: src/System.Private.ServiceModel/src/System/ServiceModel/Channels/MessageEncodingBindingElement.cs
    startLine: 7
  assemblies:
  - System.ServiceModel.Primitives
  namespace: System.ServiceModel.Channels
  summary: "\n<p>The binding element that specifies the message version used to encode messages.</p>\n"
  syntax:
    content: 'public abstract class MessageEncodingBindingElement : BindingElement'
    content.vb: >-
      Public MustInherit Class MessageEncodingBindingElement
          Inherits BindingElement
  inheritance:
  - System.Object
  - System.ServiceModel.Channels.BindingElement
  inheritedMembers:
  - System.ServiceModel.Channels.BindingElement.BuildChannelFactory``1(System.ServiceModel.Channels.BindingContext)
  - System.ServiceModel.Channels.BindingElement.CanBuildChannelFactory``1(System.ServiceModel.Channels.BindingContext)
  - System.ServiceModel.Channels.BindingElement.Clone
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  modifiers.csharp:
  - public
  - abstract
  - class
  modifiers.vb:
  - Public
  - MustInherit
  - Class
- uid: System.ServiceModel.Channels.MessageEncodingBindingElement.#ctor
  commentId: M:System.ServiceModel.Channels.MessageEncodingBindingElement.#ctor
  id: '#ctor'
  parent: System.ServiceModel.Channels.MessageEncodingBindingElement
  langs:
  - csharp
  - vb
  name: MessageEncodingBindingElement()
  nameWithType: MessageEncodingBindingElement.MessageEncodingBindingElement()
  fullName: System.ServiceModel.Channels.MessageEncodingBindingElement.MessageEncodingBindingElement()
  type: Constructor
  source:
    remote:
      path: src/System.Private.ServiceModel/src/System/ServiceModel/Channels/MessageEncodingBindingElement.cs
      branch: master
      repo: https://github.com/dotnet/wcf.git
    id: .ctor
    path: src/System.Private.ServiceModel/src/System/ServiceModel/Channels/MessageEncodingBindingElement.cs
    startLine: 9
  assemblies:
  - System.ServiceModel.Primitives
  namespace: System.ServiceModel.Channels
  summary: "\n<p>Initializes a new instance of the <xref href=\"System.ServiceModel.Channels.MessageEncodingBindingElement\" data-throw-if-not-resolved=\"false\"></xref> class.  </p>\n"
  syntax:
    content: protected MessageEncodingBindingElement()
    content.vb: Protected Sub New
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: System.ServiceModel.Channels.MessageEncodingBindingElement.#ctor(System.ServiceModel.Channels.MessageEncodingBindingElement)
  commentId: M:System.ServiceModel.Channels.MessageEncodingBindingElement.#ctor(System.ServiceModel.Channels.MessageEncodingBindingElement)
  id: '#ctor(System.ServiceModel.Channels.MessageEncodingBindingElement)'
  parent: System.ServiceModel.Channels.MessageEncodingBindingElement
  langs:
  - csharp
  - vb
  name: MessageEncodingBindingElement(MessageEncodingBindingElement)
  nameWithType: MessageEncodingBindingElement.MessageEncodingBindingElement(MessageEncodingBindingElement)
  fullName: System.ServiceModel.Channels.MessageEncodingBindingElement.MessageEncodingBindingElement(System.ServiceModel.Channels.MessageEncodingBindingElement)
  type: Constructor
  source:
    remote:
      path: src/System.Private.ServiceModel/src/System/ServiceModel/Channels/MessageEncodingBindingElement.cs
      branch: master
      repo: https://github.com/dotnet/wcf.git
    id: .ctor
    path: src/System.Private.ServiceModel/src/System/ServiceModel/Channels/MessageEncodingBindingElement.cs
    startLine: 13
  assemblies:
  - System.ServiceModel.Primitives
  namespace: System.ServiceModel.Channels
  summary: "\n<p>Initializes a new instance of the <xref href=\"System.ServiceModel.Channels.MessageEncodingBindingElement\" data-throw-if-not-resolved=\"false\"></xref> class initialized from an existing element.</p>\n"
  syntax:
    content: protected MessageEncodingBindingElement(MessageEncodingBindingElement elementToBeCloned)
    content.vb: Protected Sub New(elementToBeCloned As MessageEncodingBindingElement)
    parameters:
    - id: elementToBeCloned
      type: System.ServiceModel.Channels.MessageEncodingBindingElement
      description: "\n<p>The <xref href=\"System.ServiceModel.Channels.MessageEncodingBindingElement\" data-throw-if-not-resolved=\"false\"></xref> to be cloned.</p>\n"
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: System.ServiceModel.Channels.MessageEncodingBindingElement.MessageVersion
  commentId: P:System.ServiceModel.Channels.MessageEncodingBindingElement.MessageVersion
  id: MessageVersion
  parent: System.ServiceModel.Channels.MessageEncodingBindingElement
  langs:
  - csharp
  - vb
  name: MessageVersion
  nameWithType: MessageEncodingBindingElement.MessageVersion
  fullName: System.ServiceModel.Channels.MessageEncodingBindingElement.MessageVersion
  type: Property
  source:
    remote:
      path: src/System.Private.ServiceModel/src/System/ServiceModel/Channels/MessageEncodingBindingElement.cs
      branch: master
      repo: https://github.com/dotnet/wcf.git
    id: MessageVersion
    path: src/System.Private.ServiceModel/src/System/ServiceModel/Channels/MessageEncodingBindingElement.cs
    startLine: 18
  assemblies:
  - System.ServiceModel.Primitives
  namespace: System.ServiceModel.Channels
  summary: "\n<p>When overridden in a derived class, gets or sets the message version that can be handled by the message encoders produced by the message encoder factory.</p>\n"
  syntax:
    content: public abstract MessageVersion MessageVersion { get; set; }
    content.vb: Public MustOverride Property MessageVersion As MessageVersion
    parameters: []
    return:
      type: System.ServiceModel.Channels.MessageVersion
      description: "\n<p>The <xref href=\"System.ServiceModel.Channels.MessageVersion\" data-throw-if-not-resolved=\"false\"></xref> used by the encoders produced by the message encoder factory.</p>\n"
  modifiers.csharp:
  - public
  - abstract
  - get
  - set
  modifiers.vb:
  - Public
  - MustOverride
- uid: System.ServiceModel.Channels.MessageEncodingBindingElement.CreateMessageEncoderFactory
  commentId: M:System.ServiceModel.Channels.MessageEncodingBindingElement.CreateMessageEncoderFactory
  id: CreateMessageEncoderFactory
  parent: System.ServiceModel.Channels.MessageEncodingBindingElement
  langs:
  - csharp
  - vb
  name: CreateMessageEncoderFactory()
  nameWithType: MessageEncodingBindingElement.CreateMessageEncoderFactory()
  fullName: System.ServiceModel.Channels.MessageEncodingBindingElement.CreateMessageEncoderFactory()
  type: Method
  source:
    remote:
      path: src/System.Private.ServiceModel/src/System/ServiceModel/Channels/MessageEncodingBindingElement.cs
      branch: master
      repo: https://github.com/dotnet/wcf.git
    id: CreateMessageEncoderFactory
    path: src/System.Private.ServiceModel/src/System/ServiceModel/Channels/MessageEncodingBindingElement.cs
    startLine: 48
  assemblies:
  - System.ServiceModel.Primitives
  namespace: System.ServiceModel.Channels
  summary: "\n<p>When overridden in a derived class, creates a factory for producing message encoders.</p>\n"
  syntax:
    content: public abstract MessageEncoderFactory CreateMessageEncoderFactory()
    content.vb: Public MustOverride Function CreateMessageEncoderFactory As MessageEncoderFactory
    return:
      type: System.ServiceModel.Channels.MessageEncoderFactory
      description: "\n<p>The <xref href=\"System.ServiceModel.Channels.MessageEncoderFactory\" data-throw-if-not-resolved=\"false\"></xref> used to produce message encoders.</p>\n"
  modifiers.csharp:
  - public
  - abstract
  modifiers.vb:
  - Public
  - MustOverride
- uid: System.ServiceModel.Channels.MessageEncodingBindingElement.GetProperty``1(System.ServiceModel.Channels.BindingContext)
  commentId: M:System.ServiceModel.Channels.MessageEncodingBindingElement.GetProperty``1(System.ServiceModel.Channels.BindingContext)
  id: GetProperty``1(System.ServiceModel.Channels.BindingContext)
  parent: System.ServiceModel.Channels.MessageEncodingBindingElement
  langs:
  - csharp
  - vb
  name: GetProperty<T>(BindingContext)
  nameWithType: MessageEncodingBindingElement.GetProperty<T>(BindingContext)
  fullName: System.ServiceModel.Channels.MessageEncodingBindingElement.GetProperty<T>(System.ServiceModel.Channels.BindingContext)
  type: Method
  source:
    remote:
      path: src/System.Private.ServiceModel/src/System/ServiceModel/Channels/MessageEncodingBindingElement.cs
      branch: master
      repo: https://github.com/dotnet/wcf.git
    id: GetProperty
    path: src/System.Private.ServiceModel/src/System/ServiceModel/Channels/MessageEncodingBindingElement.cs
    startLine: 50
  assemblies:
  - System.ServiceModel.Primitives
  namespace: System.ServiceModel.Channels
  summary: "\n<p>Returns the typed object requested, if present, from the appropriate layer in the channel stack.</p>\n"
  syntax:
    content: 'public override T GetProperty<T>(BindingContext context)where T : class'
    content.vb: Public Overrides Function GetProperty(Of T As Class)(context As BindingContext) As T
    parameters:
    - id: context
      type: System.ServiceModel.Channels.BindingContext
      description: "\n<p>The <xref href=\"System.ServiceModel.Channels.BindingContext\" data-throw-if-not-resolved=\"false\"></xref> for the current binding element.</p>\n"
    typeParameters:
    - id: T
      description: "\n<p>The typed object for which the method is querying.</p>\n"
    return:
      type: '{T}'
      description: "\n<p>The typed object <em>T</em> requested if it is present or <strong>null</strong> if it is not.</p>\n"
  overridden: System.ServiceModel.Channels.BindingElement.GetProperty``1(System.ServiceModel.Channels.BindingContext)
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "\n<p>\n<em>context</em> is <strong>null</strong>.</p>\n"
  nameWithType.vb: MessageEncodingBindingElement.GetProperty(Of T)(BindingContext)
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
  fullName.vb: System.ServiceModel.Channels.MessageEncodingBindingElement.GetProperty(Of T)(System.ServiceModel.Channels.BindingContext)
  name.vb: GetProperty(Of T)(BindingContext)
references:
- uid: System.ServiceModel.Channels
  commentId: N:System.ServiceModel.Channels
  isExternal: false
  name: System.ServiceModel.Channels
  nameWithType: System.ServiceModel.Channels
  fullName: System.ServiceModel.Channels
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: false
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.ServiceModel.Channels.BindingElement
  commentId: T:System.ServiceModel.Channels.BindingElement
  parent: System.ServiceModel.Channels
  isExternal: false
  name: BindingElement
  nameWithType: BindingElement
  fullName: System.ServiceModel.Channels.BindingElement
- uid: System.ServiceModel.Channels.BindingElement.BuildChannelFactory``1(System.ServiceModel.Channels.BindingContext)
  commentId: M:System.ServiceModel.Channels.BindingElement.BuildChannelFactory``1(System.ServiceModel.Channels.BindingContext)
  parent: System.ServiceModel.Channels.BindingElement
  isExternal: false
  name: BuildChannelFactory<TChannel>(BindingContext)
  nameWithType: BindingElement.BuildChannelFactory<TChannel>(BindingContext)
  fullName: System.ServiceModel.Channels.BindingElement.BuildChannelFactory<TChannel>(System.ServiceModel.Channels.BindingContext)
  nameWithType.vb: BindingElement.BuildChannelFactory(Of TChannel)(BindingContext)
  fullname.vb: System.ServiceModel.Channels.BindingElement.BuildChannelFactory(Of TChannel)(System.ServiceModel.Channels.BindingContext)
  name.vb: BuildChannelFactory(Of TChannel)(BindingContext)
  spec.csharp:
  - uid: System.ServiceModel.Channels.BindingElement.BuildChannelFactory``1(System.ServiceModel.Channels.BindingContext)
    name: BuildChannelFactory<TChannel>
    nameWithType: BindingElement.BuildChannelFactory<TChannel>
    fullName: System.ServiceModel.Channels.BindingElement.BuildChannelFactory<TChannel>
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.ServiceModel.Channels.BindingContext
    name: BindingContext
    nameWithType: BindingContext
    fullName: System.ServiceModel.Channels.BindingContext
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.ServiceModel.Channels.BindingElement.BuildChannelFactory``1(System.ServiceModel.Channels.BindingContext)
    name: BuildChannelFactory(Of TChannel)
    nameWithType: BindingElement.BuildChannelFactory(Of TChannel)
    fullName: System.ServiceModel.Channels.BindingElement.BuildChannelFactory(Of TChannel)
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.ServiceModel.Channels.BindingContext
    name: BindingContext
    nameWithType: BindingContext
    fullName: System.ServiceModel.Channels.BindingContext
  - name: )
    nameWithType: )
    fullName: )
- uid: System.ServiceModel.Channels.BindingElement.CanBuildChannelFactory``1(System.ServiceModel.Channels.BindingContext)
  commentId: M:System.ServiceModel.Channels.BindingElement.CanBuildChannelFactory``1(System.ServiceModel.Channels.BindingContext)
  parent: System.ServiceModel.Channels.BindingElement
  isExternal: false
  name: CanBuildChannelFactory<TChannel>(BindingContext)
  nameWithType: BindingElement.CanBuildChannelFactory<TChannel>(BindingContext)
  fullName: System.ServiceModel.Channels.BindingElement.CanBuildChannelFactory<TChannel>(System.ServiceModel.Channels.BindingContext)
  nameWithType.vb: BindingElement.CanBuildChannelFactory(Of TChannel)(BindingContext)
  fullname.vb: System.ServiceModel.Channels.BindingElement.CanBuildChannelFactory(Of TChannel)(System.ServiceModel.Channels.BindingContext)
  name.vb: CanBuildChannelFactory(Of TChannel)(BindingContext)
  spec.csharp:
  - uid: System.ServiceModel.Channels.BindingElement.CanBuildChannelFactory``1(System.ServiceModel.Channels.BindingContext)
    name: CanBuildChannelFactory<TChannel>
    nameWithType: BindingElement.CanBuildChannelFactory<TChannel>
    fullName: System.ServiceModel.Channels.BindingElement.CanBuildChannelFactory<TChannel>
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.ServiceModel.Channels.BindingContext
    name: BindingContext
    nameWithType: BindingContext
    fullName: System.ServiceModel.Channels.BindingContext
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.ServiceModel.Channels.BindingElement.CanBuildChannelFactory``1(System.ServiceModel.Channels.BindingContext)
    name: CanBuildChannelFactory(Of TChannel)
    nameWithType: BindingElement.CanBuildChannelFactory(Of TChannel)
    fullName: System.ServiceModel.Channels.BindingElement.CanBuildChannelFactory(Of TChannel)
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.ServiceModel.Channels.BindingContext
    name: BindingContext
    nameWithType: BindingContext
    fullName: System.ServiceModel.Channels.BindingContext
  - name: )
    nameWithType: )
    fullName: )
- uid: System.ServiceModel.Channels.BindingElement.Clone
  commentId: M:System.ServiceModel.Channels.BindingElement.Clone
  parent: System.ServiceModel.Channels.BindingElement
  isExternal: false
  name: Clone()
  nameWithType: BindingElement.Clone()
  fullName: System.ServiceModel.Channels.BindingElement.Clone()
  spec.csharp:
  - uid: System.ServiceModel.Channels.BindingElement.Clone
    name: Clone
    nameWithType: BindingElement.Clone
    fullName: System.ServiceModel.Channels.BindingElement.Clone
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.ServiceModel.Channels.BindingElement.Clone
    name: Clone
    nameWithType: BindingElement.Clone
    fullName: System.ServiceModel.Channels.BindingElement.Clone
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: System.ServiceModel.Channels.MessageEncodingBindingElement
  commentId: T:System.ServiceModel.Channels.MessageEncodingBindingElement
  parent: System.ServiceModel.Channels
  isExternal: false
  name: MessageEncodingBindingElement
  nameWithType: MessageEncodingBindingElement
  fullName: System.ServiceModel.Channels.MessageEncodingBindingElement
- uid: System.ServiceModel.Channels.MessageVersion
  commentId: T:System.ServiceModel.Channels.MessageVersion
  parent: System.ServiceModel.Channels
  isExternal: false
  name: MessageVersion
  nameWithType: MessageVersion
  fullName: System.ServiceModel.Channels.MessageVersion
- uid: System.ServiceModel.Channels.MessageEncoderFactory
  commentId: T:System.ServiceModel.Channels.MessageEncoderFactory
  parent: System.ServiceModel.Channels
  isExternal: false
  name: MessageEncoderFactory
  nameWithType: MessageEncoderFactory
  fullName: System.ServiceModel.Channels.MessageEncoderFactory
- uid: System.ServiceModel.Channels.BindingElement.GetProperty``1(System.ServiceModel.Channels.BindingContext)
  commentId: M:System.ServiceModel.Channels.BindingElement.GetProperty``1(System.ServiceModel.Channels.BindingContext)
  parent: System.ServiceModel.Channels.BindingElement
  isExternal: false
  name: GetProperty<T>(BindingContext)
  nameWithType: BindingElement.GetProperty<T>(BindingContext)
  fullName: System.ServiceModel.Channels.BindingElement.GetProperty<T>(System.ServiceModel.Channels.BindingContext)
  nameWithType.vb: BindingElement.GetProperty(Of T)(BindingContext)
  fullname.vb: System.ServiceModel.Channels.BindingElement.GetProperty(Of T)(System.ServiceModel.Channels.BindingContext)
  name.vb: GetProperty(Of T)(BindingContext)
  spec.csharp:
  - uid: System.ServiceModel.Channels.BindingElement.GetProperty``1(System.ServiceModel.Channels.BindingContext)
    name: GetProperty<T>
    nameWithType: BindingElement.GetProperty<T>
    fullName: System.ServiceModel.Channels.BindingElement.GetProperty<T>
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.ServiceModel.Channels.BindingContext
    name: BindingContext
    nameWithType: BindingContext
    fullName: System.ServiceModel.Channels.BindingContext
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.ServiceModel.Channels.BindingElement.GetProperty``1(System.ServiceModel.Channels.BindingContext)
    name: GetProperty(Of T)
    nameWithType: BindingElement.GetProperty(Of T)
    fullName: System.ServiceModel.Channels.BindingElement.GetProperty(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.ServiceModel.Channels.BindingContext
    name: BindingContext
    nameWithType: BindingContext
    fullName: System.ServiceModel.Channels.BindingContext
  - name: )
    nameWithType: )
    fullName: )
- uid: System.ServiceModel.Channels.BindingContext
  commentId: T:System.ServiceModel.Channels.BindingContext
  parent: System.ServiceModel.Channels
  isExternal: false
  name: BindingContext
  nameWithType: BindingContext
  fullName: System.ServiceModel.Channels.BindingContext
- uid: '{T}'
  commentId: '!:T'
  definition: T
  name: T
  nameWithType: T
  fullName: T
- uid: T
  isExternal: false
  name: T
  nameWithType: T
  fullName: T
- uid: System.ArgumentNullException
  commentId: T:System.ArgumentNullException
  isExternal: false
  name: ArgumentNullException
  nameWithType: ArgumentNullException
  fullName: System.ArgumentNullException
