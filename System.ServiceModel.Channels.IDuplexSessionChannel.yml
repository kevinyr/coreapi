items:
- uid: System.ServiceModel.Channels.IDuplexSessionChannel
  commentId: T:System.ServiceModel.Channels.IDuplexSessionChannel
  id: IDuplexSessionChannel
  parent: System.ServiceModel.Channels
  children: []
  langs:
  - csharp
  - vb
  name: IDuplexSessionChannel
  fullName: System.ServiceModel.Channels.IDuplexSessionChannel
  type: Interface
  source:
    remote:
      path: src/System.Private.ServiceModel/src/System/ServiceModel/Channels/IDuplexSessionChannel.cs
      branch: master
      repo: https://github.com/dotnet/wcf.git
    id: IDuplexSessionChannel
    path: src/System.Private.ServiceModel/src/System/ServiceModel/Channels/IDuplexSessionChannel.cs
    startLine: 9
  assemblies:
  - System.ServiceModel.Primitives
  namespace: System.ServiceModel.Channels
  summary: "\n<p>Defines the interface that associates a duplex channel with a session.</p>\n"
  syntax:
    content: 'public interface IDuplexSessionChannel : IDuplexChannel, IInputChannel, IOutputChannel, IChannel, ICommunicationObject, ISessionChannel<IDuplexSession>'
    content.vb: >-
      Public Interface IDuplexSessionChannel
          Inherits IDuplexChannel, ISessionChannel(Of IDuplexSession)
  inheritedMembers:
  - System.ServiceModel.Channels.IInputChannel.LocalAddress
  - System.ServiceModel.Channels.IInputChannel.BeginReceive(System.AsyncCallback,System.Object)
  - System.ServiceModel.Channels.IInputChannel.BeginReceive(System.TimeSpan,System.AsyncCallback,System.Object)
  - System.ServiceModel.Channels.IInputChannel.BeginTryReceive(System.TimeSpan,System.AsyncCallback,System.Object)
  - System.ServiceModel.Channels.IInputChannel.BeginWaitForMessage(System.TimeSpan,System.AsyncCallback,System.Object)
  - System.ServiceModel.Channels.IInputChannel.EndReceive(System.IAsyncResult)
  - System.ServiceModel.Channels.IInputChannel.EndTryReceive(System.IAsyncResult,System.ServiceModel.Channels.Message@)
  - System.ServiceModel.Channels.IInputChannel.EndWaitForMessage(System.IAsyncResult)
  - System.ServiceModel.Channels.IInputChannel.Receive
  - System.ServiceModel.Channels.IInputChannel.Receive(System.TimeSpan)
  - System.ServiceModel.Channels.IInputChannel.TryReceive(System.TimeSpan,System.ServiceModel.Channels.Message@)
  - System.ServiceModel.Channels.IInputChannel.WaitForMessage(System.TimeSpan)
  - System.ServiceModel.Channels.IOutputChannel.RemoteAddress
  - System.ServiceModel.Channels.IOutputChannel.Via
  - System.ServiceModel.Channels.IOutputChannel.BeginSend(System.ServiceModel.Channels.Message,System.AsyncCallback,System.Object)
  - System.ServiceModel.Channels.IOutputChannel.BeginSend(System.ServiceModel.Channels.Message,System.TimeSpan,System.AsyncCallback,System.Object)
  - System.ServiceModel.Channels.IOutputChannel.EndSend(System.IAsyncResult)
  - System.ServiceModel.Channels.IOutputChannel.Send(System.ServiceModel.Channels.Message)
  - System.ServiceModel.Channels.IOutputChannel.Send(System.ServiceModel.Channels.Message,System.TimeSpan)
  - System.ServiceModel.Channels.IChannel.GetProperty``1
  - System.ServiceModel.Channels.ISessionChannel{System.ServiceModel.Channels.IDuplexSession}.Session
  - System.ServiceModel.ICommunicationObject.State
  - System.ServiceModel.ICommunicationObject.Closed
  - System.ServiceModel.ICommunicationObject.Closing
  - System.ServiceModel.ICommunicationObject.Faulted
  - System.ServiceModel.ICommunicationObject.Opened
  - System.ServiceModel.ICommunicationObject.Opening
  - System.ServiceModel.ICommunicationObject.Abort
  - System.ServiceModel.ICommunicationObject.BeginClose(System.AsyncCallback,System.Object)
  - System.ServiceModel.ICommunicationObject.BeginClose(System.TimeSpan,System.AsyncCallback,System.Object)
  - System.ServiceModel.ICommunicationObject.BeginOpen(System.AsyncCallback,System.Object)
  - System.ServiceModel.ICommunicationObject.BeginOpen(System.TimeSpan,System.AsyncCallback,System.Object)
  - System.ServiceModel.ICommunicationObject.Close
  - System.ServiceModel.ICommunicationObject.Close(System.TimeSpan)
  - System.ServiceModel.ICommunicationObject.EndClose(System.IAsyncResult)
  - System.ServiceModel.ICommunicationObject.EndOpen(System.IAsyncResult)
  - System.ServiceModel.ICommunicationObject.Open
  - System.ServiceModel.ICommunicationObject.Open(System.TimeSpan)
  modifiers.csharp:
  - public
  - interface
  modifiers.vb:
  - Public
  - Interface
  nameWithType: IDuplexSessionChannel
references:
- uid: System.ServiceModel.Channels
  isExternal: false
  name: System.ServiceModel.Channels
  fullName: System.ServiceModel.Channels
  nameWithType: System.ServiceModel.Channels
  commentId: N:System.ServiceModel.Channels
- uid: System.ServiceModel.Channels.IInputChannel.LocalAddress
  parent: System.ServiceModel.Channels.IInputChannel
  isExternal: false
  name: LocalAddress
  fullName: System.ServiceModel.Channels.IInputChannel.LocalAddress
  nameWithType: IInputChannel.LocalAddress
  commentId: P:System.ServiceModel.Channels.IInputChannel.LocalAddress
- uid: System.ServiceModel.Channels.IInputChannel.BeginReceive(System.AsyncCallback,System.Object)
  parent: System.ServiceModel.Channels.IInputChannel
  isExternal: true
  name: BeginReceive(AsyncCallback, Object)
  fullName: System.ServiceModel.Channels.IInputChannel.BeginReceive(System.AsyncCallback, System.Object)
  spec.csharp:
  - uid: System.ServiceModel.Channels.IInputChannel.BeginReceive(System.AsyncCallback,System.Object)
    name: BeginReceive
    fullName: System.ServiceModel.Channels.IInputChannel.BeginReceive
  - name: (
    fullName: (
  - uid: System.AsyncCallback
    name: AsyncCallback
    fullName: System.AsyncCallback
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.ServiceModel.Channels.IInputChannel.BeginReceive(System.AsyncCallback,System.Object)
    name: BeginReceive
    fullName: System.ServiceModel.Channels.IInputChannel.BeginReceive
  - name: (
    fullName: (
  - uid: System.AsyncCallback
    name: AsyncCallback
    fullName: System.AsyncCallback
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
  nameWithType: IInputChannel.BeginReceive(AsyncCallback, Object)
  commentId: M:System.ServiceModel.Channels.IInputChannel.BeginReceive(System.AsyncCallback,System.Object)
- uid: System.ServiceModel.Channels.IInputChannel.BeginReceive(System.TimeSpan,System.AsyncCallback,System.Object)
  parent: System.ServiceModel.Channels.IInputChannel
  isExternal: true
  name: BeginReceive(TimeSpan, AsyncCallback, Object)
  fullName: System.ServiceModel.Channels.IInputChannel.BeginReceive(System.TimeSpan, System.AsyncCallback, System.Object)
  spec.csharp:
  - uid: System.ServiceModel.Channels.IInputChannel.BeginReceive(System.TimeSpan,System.AsyncCallback,System.Object)
    name: BeginReceive
    fullName: System.ServiceModel.Channels.IInputChannel.BeginReceive
  - name: (
    fullName: (
  - uid: System.TimeSpan
    name: TimeSpan
    fullName: System.TimeSpan
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.AsyncCallback
    name: AsyncCallback
    fullName: System.AsyncCallback
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.ServiceModel.Channels.IInputChannel.BeginReceive(System.TimeSpan,System.AsyncCallback,System.Object)
    name: BeginReceive
    fullName: System.ServiceModel.Channels.IInputChannel.BeginReceive
  - name: (
    fullName: (
  - uid: System.TimeSpan
    name: TimeSpan
    fullName: System.TimeSpan
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.AsyncCallback
    name: AsyncCallback
    fullName: System.AsyncCallback
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
  nameWithType: IInputChannel.BeginReceive(TimeSpan, AsyncCallback, Object)
  commentId: M:System.ServiceModel.Channels.IInputChannel.BeginReceive(System.TimeSpan,System.AsyncCallback,System.Object)
- uid: System.ServiceModel.Channels.IInputChannel.BeginTryReceive(System.TimeSpan,System.AsyncCallback,System.Object)
  parent: System.ServiceModel.Channels.IInputChannel
  isExternal: true
  name: BeginTryReceive(TimeSpan, AsyncCallback, Object)
  fullName: System.ServiceModel.Channels.IInputChannel.BeginTryReceive(System.TimeSpan, System.AsyncCallback, System.Object)
  spec.csharp:
  - uid: System.ServiceModel.Channels.IInputChannel.BeginTryReceive(System.TimeSpan,System.AsyncCallback,System.Object)
    name: BeginTryReceive
    fullName: System.ServiceModel.Channels.IInputChannel.BeginTryReceive
  - name: (
    fullName: (
  - uid: System.TimeSpan
    name: TimeSpan
    fullName: System.TimeSpan
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.AsyncCallback
    name: AsyncCallback
    fullName: System.AsyncCallback
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.ServiceModel.Channels.IInputChannel.BeginTryReceive(System.TimeSpan,System.AsyncCallback,System.Object)
    name: BeginTryReceive
    fullName: System.ServiceModel.Channels.IInputChannel.BeginTryReceive
  - name: (
    fullName: (
  - uid: System.TimeSpan
    name: TimeSpan
    fullName: System.TimeSpan
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.AsyncCallback
    name: AsyncCallback
    fullName: System.AsyncCallback
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
  nameWithType: IInputChannel.BeginTryReceive(TimeSpan, AsyncCallback, Object)
  commentId: M:System.ServiceModel.Channels.IInputChannel.BeginTryReceive(System.TimeSpan,System.AsyncCallback,System.Object)
- uid: System.ServiceModel.Channels.IInputChannel.BeginWaitForMessage(System.TimeSpan,System.AsyncCallback,System.Object)
  parent: System.ServiceModel.Channels.IInputChannel
  isExternal: true
  name: BeginWaitForMessage(TimeSpan, AsyncCallback, Object)
  fullName: System.ServiceModel.Channels.IInputChannel.BeginWaitForMessage(System.TimeSpan, System.AsyncCallback, System.Object)
  spec.csharp:
  - uid: System.ServiceModel.Channels.IInputChannel.BeginWaitForMessage(System.TimeSpan,System.AsyncCallback,System.Object)
    name: BeginWaitForMessage
    fullName: System.ServiceModel.Channels.IInputChannel.BeginWaitForMessage
  - name: (
    fullName: (
  - uid: System.TimeSpan
    name: TimeSpan
    fullName: System.TimeSpan
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.AsyncCallback
    name: AsyncCallback
    fullName: System.AsyncCallback
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.ServiceModel.Channels.IInputChannel.BeginWaitForMessage(System.TimeSpan,System.AsyncCallback,System.Object)
    name: BeginWaitForMessage
    fullName: System.ServiceModel.Channels.IInputChannel.BeginWaitForMessage
  - name: (
    fullName: (
  - uid: System.TimeSpan
    name: TimeSpan
    fullName: System.TimeSpan
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.AsyncCallback
    name: AsyncCallback
    fullName: System.AsyncCallback
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
  nameWithType: IInputChannel.BeginWaitForMessage(TimeSpan, AsyncCallback, Object)
  commentId: M:System.ServiceModel.Channels.IInputChannel.BeginWaitForMessage(System.TimeSpan,System.AsyncCallback,System.Object)
- uid: System.ServiceModel.Channels.IInputChannel.EndReceive(System.IAsyncResult)
  parent: System.ServiceModel.Channels.IInputChannel
  isExternal: true
  name: EndReceive(IAsyncResult)
  fullName: System.ServiceModel.Channels.IInputChannel.EndReceive(System.IAsyncResult)
  spec.csharp:
  - uid: System.ServiceModel.Channels.IInputChannel.EndReceive(System.IAsyncResult)
    name: EndReceive
    fullName: System.ServiceModel.Channels.IInputChannel.EndReceive
  - name: (
    fullName: (
  - uid: System.IAsyncResult
    name: IAsyncResult
    fullName: System.IAsyncResult
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.ServiceModel.Channels.IInputChannel.EndReceive(System.IAsyncResult)
    name: EndReceive
    fullName: System.ServiceModel.Channels.IInputChannel.EndReceive
  - name: (
    fullName: (
  - uid: System.IAsyncResult
    name: IAsyncResult
    fullName: System.IAsyncResult
    isExternal: true
  - name: )
    fullName: )
  nameWithType: IInputChannel.EndReceive(IAsyncResult)
  commentId: M:System.ServiceModel.Channels.IInputChannel.EndReceive(System.IAsyncResult)
- uid: System.ServiceModel.Channels.IInputChannel.EndTryReceive(System.IAsyncResult,System.ServiceModel.Channels.Message@)
  parent: System.ServiceModel.Channels.IInputChannel
  isExternal: true
  name: EndTryReceive(IAsyncResult, Message)
  fullName: System.ServiceModel.Channels.IInputChannel.EndTryReceive(System.IAsyncResult, System.ServiceModel.Channels.Message)
  spec.csharp:
  - uid: System.ServiceModel.Channels.IInputChannel.EndTryReceive(System.IAsyncResult,System.ServiceModel.Channels.Message@)
    name: EndTryReceive
    fullName: System.ServiceModel.Channels.IInputChannel.EndTryReceive
  - name: (
    fullName: (
  - uid: System.IAsyncResult
    name: IAsyncResult
    fullName: System.IAsyncResult
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.ServiceModel.Channels.Message
    name: Message
    fullName: System.ServiceModel.Channels.Message
  - name: )
    fullName: )
  spec.vb:
  - uid: System.ServiceModel.Channels.IInputChannel.EndTryReceive(System.IAsyncResult,System.ServiceModel.Channels.Message@)
    name: EndTryReceive
    fullName: System.ServiceModel.Channels.IInputChannel.EndTryReceive
  - name: (
    fullName: (
  - uid: System.IAsyncResult
    name: IAsyncResult
    fullName: System.IAsyncResult
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.ServiceModel.Channels.Message
    name: Message
    fullName: System.ServiceModel.Channels.Message
  - name: )
    fullName: )
  nameWithType: IInputChannel.EndTryReceive(IAsyncResult, Message)
  commentId: M:System.ServiceModel.Channels.IInputChannel.EndTryReceive(System.IAsyncResult,System.ServiceModel.Channels.Message@)
- uid: System.ServiceModel.Channels.IInputChannel.EndWaitForMessage(System.IAsyncResult)
  parent: System.ServiceModel.Channels.IInputChannel
  isExternal: true
  name: EndWaitForMessage(IAsyncResult)
  fullName: System.ServiceModel.Channels.IInputChannel.EndWaitForMessage(System.IAsyncResult)
  spec.csharp:
  - uid: System.ServiceModel.Channels.IInputChannel.EndWaitForMessage(System.IAsyncResult)
    name: EndWaitForMessage
    fullName: System.ServiceModel.Channels.IInputChannel.EndWaitForMessage
  - name: (
    fullName: (
  - uid: System.IAsyncResult
    name: IAsyncResult
    fullName: System.IAsyncResult
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.ServiceModel.Channels.IInputChannel.EndWaitForMessage(System.IAsyncResult)
    name: EndWaitForMessage
    fullName: System.ServiceModel.Channels.IInputChannel.EndWaitForMessage
  - name: (
    fullName: (
  - uid: System.IAsyncResult
    name: IAsyncResult
    fullName: System.IAsyncResult
    isExternal: true
  - name: )
    fullName: )
  nameWithType: IInputChannel.EndWaitForMessage(IAsyncResult)
  commentId: M:System.ServiceModel.Channels.IInputChannel.EndWaitForMessage(System.IAsyncResult)
- uid: System.ServiceModel.Channels.IInputChannel.Receive
  parent: System.ServiceModel.Channels.IInputChannel
  isExternal: false
  name: Receive()
  fullName: System.ServiceModel.Channels.IInputChannel.Receive()
  spec.csharp:
  - uid: System.ServiceModel.Channels.IInputChannel.Receive
    name: Receive
    fullName: System.ServiceModel.Channels.IInputChannel.Receive
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.ServiceModel.Channels.IInputChannel.Receive
    name: Receive
    fullName: System.ServiceModel.Channels.IInputChannel.Receive
  - name: (
    fullName: (
  - name: )
    fullName: )
  nameWithType: IInputChannel.Receive()
  commentId: M:System.ServiceModel.Channels.IInputChannel.Receive
- uid: System.ServiceModel.Channels.IInputChannel.Receive(System.TimeSpan)
  parent: System.ServiceModel.Channels.IInputChannel
  isExternal: true
  name: Receive(TimeSpan)
  fullName: System.ServiceModel.Channels.IInputChannel.Receive(System.TimeSpan)
  spec.csharp:
  - uid: System.ServiceModel.Channels.IInputChannel.Receive(System.TimeSpan)
    name: Receive
    fullName: System.ServiceModel.Channels.IInputChannel.Receive
  - name: (
    fullName: (
  - uid: System.TimeSpan
    name: TimeSpan
    fullName: System.TimeSpan
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.ServiceModel.Channels.IInputChannel.Receive(System.TimeSpan)
    name: Receive
    fullName: System.ServiceModel.Channels.IInputChannel.Receive
  - name: (
    fullName: (
  - uid: System.TimeSpan
    name: TimeSpan
    fullName: System.TimeSpan
    isExternal: true
  - name: )
    fullName: )
  nameWithType: IInputChannel.Receive(TimeSpan)
  commentId: M:System.ServiceModel.Channels.IInputChannel.Receive(System.TimeSpan)
- uid: System.ServiceModel.Channels.IInputChannel.TryReceive(System.TimeSpan,System.ServiceModel.Channels.Message@)
  parent: System.ServiceModel.Channels.IInputChannel
  isExternal: true
  name: TryReceive(TimeSpan, Message)
  fullName: System.ServiceModel.Channels.IInputChannel.TryReceive(System.TimeSpan, System.ServiceModel.Channels.Message)
  spec.csharp:
  - uid: System.ServiceModel.Channels.IInputChannel.TryReceive(System.TimeSpan,System.ServiceModel.Channels.Message@)
    name: TryReceive
    fullName: System.ServiceModel.Channels.IInputChannel.TryReceive
  - name: (
    fullName: (
  - uid: System.TimeSpan
    name: TimeSpan
    fullName: System.TimeSpan
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.ServiceModel.Channels.Message
    name: Message
    fullName: System.ServiceModel.Channels.Message
  - name: )
    fullName: )
  spec.vb:
  - uid: System.ServiceModel.Channels.IInputChannel.TryReceive(System.TimeSpan,System.ServiceModel.Channels.Message@)
    name: TryReceive
    fullName: System.ServiceModel.Channels.IInputChannel.TryReceive
  - name: (
    fullName: (
  - uid: System.TimeSpan
    name: TimeSpan
    fullName: System.TimeSpan
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.ServiceModel.Channels.Message
    name: Message
    fullName: System.ServiceModel.Channels.Message
  - name: )
    fullName: )
  nameWithType: IInputChannel.TryReceive(TimeSpan, Message)
  commentId: M:System.ServiceModel.Channels.IInputChannel.TryReceive(System.TimeSpan,System.ServiceModel.Channels.Message@)
- uid: System.ServiceModel.Channels.IInputChannel.WaitForMessage(System.TimeSpan)
  parent: System.ServiceModel.Channels.IInputChannel
  isExternal: true
  name: WaitForMessage(TimeSpan)
  fullName: System.ServiceModel.Channels.IInputChannel.WaitForMessage(System.TimeSpan)
  spec.csharp:
  - uid: System.ServiceModel.Channels.IInputChannel.WaitForMessage(System.TimeSpan)
    name: WaitForMessage
    fullName: System.ServiceModel.Channels.IInputChannel.WaitForMessage
  - name: (
    fullName: (
  - uid: System.TimeSpan
    name: TimeSpan
    fullName: System.TimeSpan
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.ServiceModel.Channels.IInputChannel.WaitForMessage(System.TimeSpan)
    name: WaitForMessage
    fullName: System.ServiceModel.Channels.IInputChannel.WaitForMessage
  - name: (
    fullName: (
  - uid: System.TimeSpan
    name: TimeSpan
    fullName: System.TimeSpan
    isExternal: true
  - name: )
    fullName: )
  nameWithType: IInputChannel.WaitForMessage(TimeSpan)
  commentId: M:System.ServiceModel.Channels.IInputChannel.WaitForMessage(System.TimeSpan)
- uid: System.ServiceModel.Channels.IOutputChannel.RemoteAddress
  parent: System.ServiceModel.Channels.IOutputChannel
  isExternal: false
  name: RemoteAddress
  fullName: System.ServiceModel.Channels.IOutputChannel.RemoteAddress
  nameWithType: IOutputChannel.RemoteAddress
  commentId: P:System.ServiceModel.Channels.IOutputChannel.RemoteAddress
- uid: System.ServiceModel.Channels.IOutputChannel.Via
  parent: System.ServiceModel.Channels.IOutputChannel
  isExternal: false
  name: Via
  fullName: System.ServiceModel.Channels.IOutputChannel.Via
  nameWithType: IOutputChannel.Via
  commentId: P:System.ServiceModel.Channels.IOutputChannel.Via
- uid: System.ServiceModel.Channels.IOutputChannel.BeginSend(System.ServiceModel.Channels.Message,System.AsyncCallback,System.Object)
  parent: System.ServiceModel.Channels.IOutputChannel
  isExternal: true
  name: BeginSend(Message, AsyncCallback, Object)
  fullName: System.ServiceModel.Channels.IOutputChannel.BeginSend(System.ServiceModel.Channels.Message, System.AsyncCallback, System.Object)
  spec.csharp:
  - uid: System.ServiceModel.Channels.IOutputChannel.BeginSend(System.ServiceModel.Channels.Message,System.AsyncCallback,System.Object)
    name: BeginSend
    fullName: System.ServiceModel.Channels.IOutputChannel.BeginSend
  - name: (
    fullName: (
  - uid: System.ServiceModel.Channels.Message
    name: Message
    fullName: System.ServiceModel.Channels.Message
  - name: ', '
    fullName: ', '
  - uid: System.AsyncCallback
    name: AsyncCallback
    fullName: System.AsyncCallback
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.ServiceModel.Channels.IOutputChannel.BeginSend(System.ServiceModel.Channels.Message,System.AsyncCallback,System.Object)
    name: BeginSend
    fullName: System.ServiceModel.Channels.IOutputChannel.BeginSend
  - name: (
    fullName: (
  - uid: System.ServiceModel.Channels.Message
    name: Message
    fullName: System.ServiceModel.Channels.Message
  - name: ', '
    fullName: ', '
  - uid: System.AsyncCallback
    name: AsyncCallback
    fullName: System.AsyncCallback
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
  nameWithType: IOutputChannel.BeginSend(Message, AsyncCallback, Object)
  commentId: M:System.ServiceModel.Channels.IOutputChannel.BeginSend(System.ServiceModel.Channels.Message,System.AsyncCallback,System.Object)
- uid: System.ServiceModel.Channels.IOutputChannel.BeginSend(System.ServiceModel.Channels.Message,System.TimeSpan,System.AsyncCallback,System.Object)
  parent: System.ServiceModel.Channels.IOutputChannel
  isExternal: true
  name: BeginSend(Message, TimeSpan, AsyncCallback, Object)
  fullName: System.ServiceModel.Channels.IOutputChannel.BeginSend(System.ServiceModel.Channels.Message, System.TimeSpan, System.AsyncCallback, System.Object)
  spec.csharp:
  - uid: System.ServiceModel.Channels.IOutputChannel.BeginSend(System.ServiceModel.Channels.Message,System.TimeSpan,System.AsyncCallback,System.Object)
    name: BeginSend
    fullName: System.ServiceModel.Channels.IOutputChannel.BeginSend
  - name: (
    fullName: (
  - uid: System.ServiceModel.Channels.Message
    name: Message
    fullName: System.ServiceModel.Channels.Message
  - name: ', '
    fullName: ', '
  - uid: System.TimeSpan
    name: TimeSpan
    fullName: System.TimeSpan
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.AsyncCallback
    name: AsyncCallback
    fullName: System.AsyncCallback
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.ServiceModel.Channels.IOutputChannel.BeginSend(System.ServiceModel.Channels.Message,System.TimeSpan,System.AsyncCallback,System.Object)
    name: BeginSend
    fullName: System.ServiceModel.Channels.IOutputChannel.BeginSend
  - name: (
    fullName: (
  - uid: System.ServiceModel.Channels.Message
    name: Message
    fullName: System.ServiceModel.Channels.Message
  - name: ', '
    fullName: ', '
  - uid: System.TimeSpan
    name: TimeSpan
    fullName: System.TimeSpan
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.AsyncCallback
    name: AsyncCallback
    fullName: System.AsyncCallback
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
  nameWithType: IOutputChannel.BeginSend(Message, TimeSpan, AsyncCallback, Object)
  commentId: M:System.ServiceModel.Channels.IOutputChannel.BeginSend(System.ServiceModel.Channels.Message,System.TimeSpan,System.AsyncCallback,System.Object)
- uid: System.ServiceModel.Channels.IOutputChannel.EndSend(System.IAsyncResult)
  parent: System.ServiceModel.Channels.IOutputChannel
  isExternal: true
  name: EndSend(IAsyncResult)
  fullName: System.ServiceModel.Channels.IOutputChannel.EndSend(System.IAsyncResult)
  spec.csharp:
  - uid: System.ServiceModel.Channels.IOutputChannel.EndSend(System.IAsyncResult)
    name: EndSend
    fullName: System.ServiceModel.Channels.IOutputChannel.EndSend
  - name: (
    fullName: (
  - uid: System.IAsyncResult
    name: IAsyncResult
    fullName: System.IAsyncResult
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.ServiceModel.Channels.IOutputChannel.EndSend(System.IAsyncResult)
    name: EndSend
    fullName: System.ServiceModel.Channels.IOutputChannel.EndSend
  - name: (
    fullName: (
  - uid: System.IAsyncResult
    name: IAsyncResult
    fullName: System.IAsyncResult
    isExternal: true
  - name: )
    fullName: )
  nameWithType: IOutputChannel.EndSend(IAsyncResult)
  commentId: M:System.ServiceModel.Channels.IOutputChannel.EndSend(System.IAsyncResult)
- uid: System.ServiceModel.Channels.IOutputChannel.Send(System.ServiceModel.Channels.Message)
  parent: System.ServiceModel.Channels.IOutputChannel
  isExternal: false
  name: Send(Message)
  fullName: System.ServiceModel.Channels.IOutputChannel.Send(System.ServiceModel.Channels.Message)
  spec.csharp:
  - uid: System.ServiceModel.Channels.IOutputChannel.Send(System.ServiceModel.Channels.Message)
    name: Send
    fullName: System.ServiceModel.Channels.IOutputChannel.Send
  - name: (
    fullName: (
  - uid: System.ServiceModel.Channels.Message
    name: Message
    fullName: System.ServiceModel.Channels.Message
  - name: )
    fullName: )
  spec.vb:
  - uid: System.ServiceModel.Channels.IOutputChannel.Send(System.ServiceModel.Channels.Message)
    name: Send
    fullName: System.ServiceModel.Channels.IOutputChannel.Send
  - name: (
    fullName: (
  - uid: System.ServiceModel.Channels.Message
    name: Message
    fullName: System.ServiceModel.Channels.Message
  - name: )
    fullName: )
  nameWithType: IOutputChannel.Send(Message)
  commentId: M:System.ServiceModel.Channels.IOutputChannel.Send(System.ServiceModel.Channels.Message)
- uid: System.ServiceModel.Channels.IOutputChannel.Send(System.ServiceModel.Channels.Message,System.TimeSpan)
  parent: System.ServiceModel.Channels.IOutputChannel
  isExternal: true
  name: Send(Message, TimeSpan)
  fullName: System.ServiceModel.Channels.IOutputChannel.Send(System.ServiceModel.Channels.Message, System.TimeSpan)
  spec.csharp:
  - uid: System.ServiceModel.Channels.IOutputChannel.Send(System.ServiceModel.Channels.Message,System.TimeSpan)
    name: Send
    fullName: System.ServiceModel.Channels.IOutputChannel.Send
  - name: (
    fullName: (
  - uid: System.ServiceModel.Channels.Message
    name: Message
    fullName: System.ServiceModel.Channels.Message
  - name: ', '
    fullName: ', '
  - uid: System.TimeSpan
    name: TimeSpan
    fullName: System.TimeSpan
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.ServiceModel.Channels.IOutputChannel.Send(System.ServiceModel.Channels.Message,System.TimeSpan)
    name: Send
    fullName: System.ServiceModel.Channels.IOutputChannel.Send
  - name: (
    fullName: (
  - uid: System.ServiceModel.Channels.Message
    name: Message
    fullName: System.ServiceModel.Channels.Message
  - name: ', '
    fullName: ', '
  - uid: System.TimeSpan
    name: TimeSpan
    fullName: System.TimeSpan
    isExternal: true
  - name: )
    fullName: )
  nameWithType: IOutputChannel.Send(Message, TimeSpan)
  commentId: M:System.ServiceModel.Channels.IOutputChannel.Send(System.ServiceModel.Channels.Message,System.TimeSpan)
- uid: System.ServiceModel.Channels.IChannel.GetProperty``1
  parent: System.ServiceModel.Channels.IChannel
  definition: System.ServiceModel.Channels.IChannel.GetProperty``1
  isExternal: false
  name: GetProperty<T>()
  fullName: System.ServiceModel.Channels.IChannel.GetProperty<T>()
  fullname.vb: System.ServiceModel.Channels.IChannel.GetProperty(Of T)()
  name.vb: GetProperty(Of T)()
  spec.csharp:
  - uid: System.ServiceModel.Channels.IChannel.GetProperty``1
    name: GetProperty<T>
    fullName: System.ServiceModel.Channels.IChannel.GetProperty<T>
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.ServiceModel.Channels.IChannel.GetProperty``1
    name: GetProperty(Of T)
    fullName: System.ServiceModel.Channels.IChannel.GetProperty(Of T)
  - name: (
    fullName: (
  - name: )
    fullName: )
  nameWithType: IChannel.GetProperty<T>()
  nameWithType.vb: IChannel.GetProperty(Of T)()
  commentId: M:System.ServiceModel.Channels.IChannel.GetProperty``1
- uid: System.ServiceModel.Channels.ISessionChannel{System.ServiceModel.Channels.IDuplexSession}.Session
  parent: System.ServiceModel.Channels.ISessionChannel{System.ServiceModel.Channels.IDuplexSession}
  definition: System.ServiceModel.Channels.ISessionChannel`1.Session
  name: Session
  fullName: System.ServiceModel.Channels.ISessionChannel<System.ServiceModel.Channels.IDuplexSession>.Session
  fullname.vb: System.ServiceModel.Channels.ISessionChannel(Of System.ServiceModel.Channels.IDuplexSession).Session
  nameWithType: ISessionChannel<IDuplexSession>.Session
  nameWithType.vb: ISessionChannel(Of IDuplexSession).Session
  commentId: P:System.ServiceModel.Channels.ISessionChannel{System.ServiceModel.Channels.IDuplexSession}.Session
- uid: System.ServiceModel.ICommunicationObject.State
  parent: System.ServiceModel.ICommunicationObject
  isExternal: false
  name: State
  fullName: System.ServiceModel.ICommunicationObject.State
  nameWithType: ICommunicationObject.State
  commentId: P:System.ServiceModel.ICommunicationObject.State
- uid: System.ServiceModel.ICommunicationObject.Closed
  parent: System.ServiceModel.ICommunicationObject
  isExternal: false
  name: Closed
  fullName: System.ServiceModel.ICommunicationObject.Closed
  nameWithType: ICommunicationObject.Closed
  commentId: E:System.ServiceModel.ICommunicationObject.Closed
- uid: System.ServiceModel.ICommunicationObject.Closing
  parent: System.ServiceModel.ICommunicationObject
  isExternal: false
  name: Closing
  fullName: System.ServiceModel.ICommunicationObject.Closing
  nameWithType: ICommunicationObject.Closing
  commentId: E:System.ServiceModel.ICommunicationObject.Closing
- uid: System.ServiceModel.ICommunicationObject.Faulted
  parent: System.ServiceModel.ICommunicationObject
  isExternal: false
  name: Faulted
  fullName: System.ServiceModel.ICommunicationObject.Faulted
  nameWithType: ICommunicationObject.Faulted
  commentId: E:System.ServiceModel.ICommunicationObject.Faulted
- uid: System.ServiceModel.ICommunicationObject.Opened
  parent: System.ServiceModel.ICommunicationObject
  isExternal: false
  name: Opened
  fullName: System.ServiceModel.ICommunicationObject.Opened
  nameWithType: ICommunicationObject.Opened
  commentId: E:System.ServiceModel.ICommunicationObject.Opened
- uid: System.ServiceModel.ICommunicationObject.Opening
  parent: System.ServiceModel.ICommunicationObject
  isExternal: false
  name: Opening
  fullName: System.ServiceModel.ICommunicationObject.Opening
  nameWithType: ICommunicationObject.Opening
  commentId: E:System.ServiceModel.ICommunicationObject.Opening
- uid: System.ServiceModel.ICommunicationObject.Abort
  parent: System.ServiceModel.ICommunicationObject
  isExternal: false
  name: Abort()
  fullName: System.ServiceModel.ICommunicationObject.Abort()
  spec.csharp:
  - uid: System.ServiceModel.ICommunicationObject.Abort
    name: Abort
    fullName: System.ServiceModel.ICommunicationObject.Abort
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.ServiceModel.ICommunicationObject.Abort
    name: Abort
    fullName: System.ServiceModel.ICommunicationObject.Abort
  - name: (
    fullName: (
  - name: )
    fullName: )
  nameWithType: ICommunicationObject.Abort()
  commentId: M:System.ServiceModel.ICommunicationObject.Abort
- uid: System.ServiceModel.ICommunicationObject.BeginClose(System.AsyncCallback,System.Object)
  parent: System.ServiceModel.ICommunicationObject
  isExternal: true
  name: BeginClose(AsyncCallback, Object)
  fullName: System.ServiceModel.ICommunicationObject.BeginClose(System.AsyncCallback, System.Object)
  spec.csharp:
  - uid: System.ServiceModel.ICommunicationObject.BeginClose(System.AsyncCallback,System.Object)
    name: BeginClose
    fullName: System.ServiceModel.ICommunicationObject.BeginClose
  - name: (
    fullName: (
  - uid: System.AsyncCallback
    name: AsyncCallback
    fullName: System.AsyncCallback
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.ServiceModel.ICommunicationObject.BeginClose(System.AsyncCallback,System.Object)
    name: BeginClose
    fullName: System.ServiceModel.ICommunicationObject.BeginClose
  - name: (
    fullName: (
  - uid: System.AsyncCallback
    name: AsyncCallback
    fullName: System.AsyncCallback
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
  nameWithType: ICommunicationObject.BeginClose(AsyncCallback, Object)
  commentId: M:System.ServiceModel.ICommunicationObject.BeginClose(System.AsyncCallback,System.Object)
- uid: System.ServiceModel.ICommunicationObject.BeginClose(System.TimeSpan,System.AsyncCallback,System.Object)
  parent: System.ServiceModel.ICommunicationObject
  isExternal: true
  name: BeginClose(TimeSpan, AsyncCallback, Object)
  fullName: System.ServiceModel.ICommunicationObject.BeginClose(System.TimeSpan, System.AsyncCallback, System.Object)
  spec.csharp:
  - uid: System.ServiceModel.ICommunicationObject.BeginClose(System.TimeSpan,System.AsyncCallback,System.Object)
    name: BeginClose
    fullName: System.ServiceModel.ICommunicationObject.BeginClose
  - name: (
    fullName: (
  - uid: System.TimeSpan
    name: TimeSpan
    fullName: System.TimeSpan
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.AsyncCallback
    name: AsyncCallback
    fullName: System.AsyncCallback
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.ServiceModel.ICommunicationObject.BeginClose(System.TimeSpan,System.AsyncCallback,System.Object)
    name: BeginClose
    fullName: System.ServiceModel.ICommunicationObject.BeginClose
  - name: (
    fullName: (
  - uid: System.TimeSpan
    name: TimeSpan
    fullName: System.TimeSpan
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.AsyncCallback
    name: AsyncCallback
    fullName: System.AsyncCallback
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
  nameWithType: ICommunicationObject.BeginClose(TimeSpan, AsyncCallback, Object)
  commentId: M:System.ServiceModel.ICommunicationObject.BeginClose(System.TimeSpan,System.AsyncCallback,System.Object)
- uid: System.ServiceModel.ICommunicationObject.BeginOpen(System.AsyncCallback,System.Object)
  parent: System.ServiceModel.ICommunicationObject
  isExternal: true
  name: BeginOpen(AsyncCallback, Object)
  fullName: System.ServiceModel.ICommunicationObject.BeginOpen(System.AsyncCallback, System.Object)
  spec.csharp:
  - uid: System.ServiceModel.ICommunicationObject.BeginOpen(System.AsyncCallback,System.Object)
    name: BeginOpen
    fullName: System.ServiceModel.ICommunicationObject.BeginOpen
  - name: (
    fullName: (
  - uid: System.AsyncCallback
    name: AsyncCallback
    fullName: System.AsyncCallback
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.ServiceModel.ICommunicationObject.BeginOpen(System.AsyncCallback,System.Object)
    name: BeginOpen
    fullName: System.ServiceModel.ICommunicationObject.BeginOpen
  - name: (
    fullName: (
  - uid: System.AsyncCallback
    name: AsyncCallback
    fullName: System.AsyncCallback
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
  nameWithType: ICommunicationObject.BeginOpen(AsyncCallback, Object)
  commentId: M:System.ServiceModel.ICommunicationObject.BeginOpen(System.AsyncCallback,System.Object)
- uid: System.ServiceModel.ICommunicationObject.BeginOpen(System.TimeSpan,System.AsyncCallback,System.Object)
  parent: System.ServiceModel.ICommunicationObject
  isExternal: true
  name: BeginOpen(TimeSpan, AsyncCallback, Object)
  fullName: System.ServiceModel.ICommunicationObject.BeginOpen(System.TimeSpan, System.AsyncCallback, System.Object)
  spec.csharp:
  - uid: System.ServiceModel.ICommunicationObject.BeginOpen(System.TimeSpan,System.AsyncCallback,System.Object)
    name: BeginOpen
    fullName: System.ServiceModel.ICommunicationObject.BeginOpen
  - name: (
    fullName: (
  - uid: System.TimeSpan
    name: TimeSpan
    fullName: System.TimeSpan
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.AsyncCallback
    name: AsyncCallback
    fullName: System.AsyncCallback
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.ServiceModel.ICommunicationObject.BeginOpen(System.TimeSpan,System.AsyncCallback,System.Object)
    name: BeginOpen
    fullName: System.ServiceModel.ICommunicationObject.BeginOpen
  - name: (
    fullName: (
  - uid: System.TimeSpan
    name: TimeSpan
    fullName: System.TimeSpan
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.AsyncCallback
    name: AsyncCallback
    fullName: System.AsyncCallback
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
  nameWithType: ICommunicationObject.BeginOpen(TimeSpan, AsyncCallback, Object)
  commentId: M:System.ServiceModel.ICommunicationObject.BeginOpen(System.TimeSpan,System.AsyncCallback,System.Object)
- uid: System.ServiceModel.ICommunicationObject.Close
  parent: System.ServiceModel.ICommunicationObject
  isExternal: false
  name: Close()
  fullName: System.ServiceModel.ICommunicationObject.Close()
  spec.csharp:
  - uid: System.ServiceModel.ICommunicationObject.Close
    name: Close
    fullName: System.ServiceModel.ICommunicationObject.Close
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.ServiceModel.ICommunicationObject.Close
    name: Close
    fullName: System.ServiceModel.ICommunicationObject.Close
  - name: (
    fullName: (
  - name: )
    fullName: )
  nameWithType: ICommunicationObject.Close()
  commentId: M:System.ServiceModel.ICommunicationObject.Close
- uid: System.ServiceModel.ICommunicationObject.Close(System.TimeSpan)
  parent: System.ServiceModel.ICommunicationObject
  isExternal: true
  name: Close(TimeSpan)
  fullName: System.ServiceModel.ICommunicationObject.Close(System.TimeSpan)
  spec.csharp:
  - uid: System.ServiceModel.ICommunicationObject.Close(System.TimeSpan)
    name: Close
    fullName: System.ServiceModel.ICommunicationObject.Close
  - name: (
    fullName: (
  - uid: System.TimeSpan
    name: TimeSpan
    fullName: System.TimeSpan
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.ServiceModel.ICommunicationObject.Close(System.TimeSpan)
    name: Close
    fullName: System.ServiceModel.ICommunicationObject.Close
  - name: (
    fullName: (
  - uid: System.TimeSpan
    name: TimeSpan
    fullName: System.TimeSpan
    isExternal: true
  - name: )
    fullName: )
  nameWithType: ICommunicationObject.Close(TimeSpan)
  commentId: M:System.ServiceModel.ICommunicationObject.Close(System.TimeSpan)
- uid: System.ServiceModel.ICommunicationObject.EndClose(System.IAsyncResult)
  parent: System.ServiceModel.ICommunicationObject
  isExternal: true
  name: EndClose(IAsyncResult)
  fullName: System.ServiceModel.ICommunicationObject.EndClose(System.IAsyncResult)
  spec.csharp:
  - uid: System.ServiceModel.ICommunicationObject.EndClose(System.IAsyncResult)
    name: EndClose
    fullName: System.ServiceModel.ICommunicationObject.EndClose
  - name: (
    fullName: (
  - uid: System.IAsyncResult
    name: IAsyncResult
    fullName: System.IAsyncResult
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.ServiceModel.ICommunicationObject.EndClose(System.IAsyncResult)
    name: EndClose
    fullName: System.ServiceModel.ICommunicationObject.EndClose
  - name: (
    fullName: (
  - uid: System.IAsyncResult
    name: IAsyncResult
    fullName: System.IAsyncResult
    isExternal: true
  - name: )
    fullName: )
  nameWithType: ICommunicationObject.EndClose(IAsyncResult)
  commentId: M:System.ServiceModel.ICommunicationObject.EndClose(System.IAsyncResult)
- uid: System.ServiceModel.ICommunicationObject.EndOpen(System.IAsyncResult)
  parent: System.ServiceModel.ICommunicationObject
  isExternal: true
  name: EndOpen(IAsyncResult)
  fullName: System.ServiceModel.ICommunicationObject.EndOpen(System.IAsyncResult)
  spec.csharp:
  - uid: System.ServiceModel.ICommunicationObject.EndOpen(System.IAsyncResult)
    name: EndOpen
    fullName: System.ServiceModel.ICommunicationObject.EndOpen
  - name: (
    fullName: (
  - uid: System.IAsyncResult
    name: IAsyncResult
    fullName: System.IAsyncResult
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.ServiceModel.ICommunicationObject.EndOpen(System.IAsyncResult)
    name: EndOpen
    fullName: System.ServiceModel.ICommunicationObject.EndOpen
  - name: (
    fullName: (
  - uid: System.IAsyncResult
    name: IAsyncResult
    fullName: System.IAsyncResult
    isExternal: true
  - name: )
    fullName: )
  nameWithType: ICommunicationObject.EndOpen(IAsyncResult)
  commentId: M:System.ServiceModel.ICommunicationObject.EndOpen(System.IAsyncResult)
- uid: System.ServiceModel.ICommunicationObject.Open
  parent: System.ServiceModel.ICommunicationObject
  isExternal: false
  name: Open()
  fullName: System.ServiceModel.ICommunicationObject.Open()
  spec.csharp:
  - uid: System.ServiceModel.ICommunicationObject.Open
    name: Open
    fullName: System.ServiceModel.ICommunicationObject.Open
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.ServiceModel.ICommunicationObject.Open
    name: Open
    fullName: System.ServiceModel.ICommunicationObject.Open
  - name: (
    fullName: (
  - name: )
    fullName: )
  nameWithType: ICommunicationObject.Open()
  commentId: M:System.ServiceModel.ICommunicationObject.Open
- uid: System.ServiceModel.ICommunicationObject.Open(System.TimeSpan)
  parent: System.ServiceModel.ICommunicationObject
  isExternal: true
  name: Open(TimeSpan)
  fullName: System.ServiceModel.ICommunicationObject.Open(System.TimeSpan)
  spec.csharp:
  - uid: System.ServiceModel.ICommunicationObject.Open(System.TimeSpan)
    name: Open
    fullName: System.ServiceModel.ICommunicationObject.Open
  - name: (
    fullName: (
  - uid: System.TimeSpan
    name: TimeSpan
    fullName: System.TimeSpan
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.ServiceModel.ICommunicationObject.Open(System.TimeSpan)
    name: Open
    fullName: System.ServiceModel.ICommunicationObject.Open
  - name: (
    fullName: (
  - uid: System.TimeSpan
    name: TimeSpan
    fullName: System.TimeSpan
    isExternal: true
  - name: )
    fullName: )
  nameWithType: ICommunicationObject.Open(TimeSpan)
  commentId: M:System.ServiceModel.ICommunicationObject.Open(System.TimeSpan)
- uid: System.ServiceModel.Channels.IInputChannel
  parent: System.ServiceModel.Channels
  isExternal: false
  name: IInputChannel
  fullName: System.ServiceModel.Channels.IInputChannel
  nameWithType: IInputChannel
  commentId: T:System.ServiceModel.Channels.IInputChannel
- uid: System.ServiceModel.Channels.IOutputChannel
  parent: System.ServiceModel.Channels
  isExternal: false
  name: IOutputChannel
  fullName: System.ServiceModel.Channels.IOutputChannel
  nameWithType: IOutputChannel
  commentId: T:System.ServiceModel.Channels.IOutputChannel
- uid: System.ServiceModel.Channels.IChannel
  parent: System.ServiceModel.Channels
  isExternal: false
  name: IChannel
  fullName: System.ServiceModel.Channels.IChannel
  nameWithType: IChannel
  commentId: T:System.ServiceModel.Channels.IChannel
- uid: System.ServiceModel.Channels.ISessionChannel`1.Session
  isExternal: false
  name: Session
  fullName: System.ServiceModel.Channels.ISessionChannel<TSession>.Session
  fullname.vb: System.ServiceModel.Channels.ISessionChannel(Of TSession).Session
  nameWithType: ISessionChannel<TSession>.Session
  nameWithType.vb: ISessionChannel(Of TSession).Session
  commentId: P:System.ServiceModel.Channels.ISessionChannel`1.Session
- uid: System.ServiceModel.Channels.ISessionChannel{System.ServiceModel.Channels.IDuplexSession}
  parent: System.ServiceModel.Channels
  definition: System.ServiceModel.Channels.ISessionChannel`1
  name: ISessionChannel<IDuplexSession>
  fullName: System.ServiceModel.Channels.ISessionChannel<System.ServiceModel.Channels.IDuplexSession>
  fullname.vb: System.ServiceModel.Channels.ISessionChannel(Of System.ServiceModel.Channels.IDuplexSession)
  name.vb: ISessionChannel(Of IDuplexSession)
  spec.csharp:
  - uid: System.ServiceModel.Channels.ISessionChannel`1
    name: ISessionChannel
    fullName: System.ServiceModel.Channels.ISessionChannel
  - name: <
    fullName: <
  - uid: System.ServiceModel.Channels.IDuplexSession
    name: IDuplexSession
    fullName: System.ServiceModel.Channels.IDuplexSession
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: System.ServiceModel.Channels.ISessionChannel`1
    name: ISessionChannel
    fullName: System.ServiceModel.Channels.ISessionChannel
  - name: '(Of '
    fullName: '(Of '
  - uid: System.ServiceModel.Channels.IDuplexSession
    name: IDuplexSession
    fullName: System.ServiceModel.Channels.IDuplexSession
  - name: )
    fullName: )
  nameWithType: ISessionChannel<IDuplexSession>
  nameWithType.vb: ISessionChannel(Of IDuplexSession)
  commentId: T:System.ServiceModel.Channels.ISessionChannel{System.ServiceModel.Channels.IDuplexSession}
- uid: System.ServiceModel.ICommunicationObject
  parent: System.ServiceModel
  isExternal: false
  name: ICommunicationObject
  fullName: System.ServiceModel.ICommunicationObject
  nameWithType: ICommunicationObject
  commentId: T:System.ServiceModel.ICommunicationObject
- uid: System.ServiceModel.Channels.ISessionChannel`1
  isExternal: false
  name: ISessionChannel<TSession>
  fullName: System.ServiceModel.Channels.ISessionChannel<TSession>
  fullname.vb: System.ServiceModel.Channels.ISessionChannel(Of TSession)
  name.vb: ISessionChannel(Of TSession)
  spec.csharp:
  - uid: System.ServiceModel.Channels.ISessionChannel`1
    name: ISessionChannel
    fullName: System.ServiceModel.Channels.ISessionChannel
  - name: <
    fullName: <
  - name: TSession
    fullName: TSession
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: System.ServiceModel.Channels.ISessionChannel`1
    name: ISessionChannel
    fullName: System.ServiceModel.Channels.ISessionChannel
  - name: '(Of '
    fullName: '(Of '
  - name: TSession
    fullName: TSession
  - name: )
    fullName: )
  nameWithType: ISessionChannel<TSession>
  nameWithType.vb: ISessionChannel(Of TSession)
  commentId: T:System.ServiceModel.Channels.ISessionChannel`1
- uid: System.ServiceModel
  isExternal: false
  name: System.ServiceModel
  fullName: System.ServiceModel
  nameWithType: System.ServiceModel
  commentId: N:System.ServiceModel
