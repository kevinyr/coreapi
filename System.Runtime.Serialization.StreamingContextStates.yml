items:
- uid: System.Runtime.Serialization.StreamingContextStates
  commentId: T:System.Runtime.Serialization.StreamingContextStates
  id: StreamingContextStates
  parent: System.Runtime.Serialization
  children:
  - System.Runtime.Serialization.StreamingContextStates.All
  - System.Runtime.Serialization.StreamingContextStates.Clone
  - System.Runtime.Serialization.StreamingContextStates.CrossAppDomain
  - System.Runtime.Serialization.StreamingContextStates.CrossMachine
  - System.Runtime.Serialization.StreamingContextStates.CrossProcess
  - System.Runtime.Serialization.StreamingContextStates.File
  - System.Runtime.Serialization.StreamingContextStates.Other
  - System.Runtime.Serialization.StreamingContextStates.Persistence
  - System.Runtime.Serialization.StreamingContextStates.Remoting
  langs:
  - csharp
  - vb
  name: StreamingContextStates
  fullName: System.Runtime.Serialization.StreamingContextStates
  type: Enum
  source:
    remote:
      path: src/System.Runtime.Serialization.Primitives/src/System/Runtime/Serialization/StreamingContext.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: StreamingContextStates
    path: src/System.Runtime.Serialization.Primitives/src/System/Runtime/Serialization/StreamingContext.cs
    startLine: 63
  assemblies:
  - System.Runtime.Serialization.Primitives
  namespace: System.Runtime.Serialization
  summary: "\n<p>Defines a set of flags that specifies the source or destination context for the stream during serialization.</p>\n"
  syntax:
    content: >-
      [Flags]

      public enum StreamingContextStates
    content.vb: >-
      <Flags>

      Public Enum StreamingContextStates
  seealso:
  - type: System.FlagsAttribute
    commentId: T:System.FlagsAttribute
  attributes:
  - type: System.FlagsAttribute
    ctor: System.FlagsAttribute.#ctor
    arguments: []
  modifiers.csharp:
  - public
  - enum
  modifiers.vb:
  - Public
  - Enum
  nameWithType: StreamingContextStates
- uid: System.Runtime.Serialization.StreamingContextStates.CrossProcess
  commentId: F:System.Runtime.Serialization.StreamingContextStates.CrossProcess
  id: CrossProcess
  parent: System.Runtime.Serialization.StreamingContextStates
  langs:
  - csharp
  - vb
  name: CrossProcess
  fullName: System.Runtime.Serialization.StreamingContextStates.CrossProcess
  type: Field
  source:
    remote:
      path: src/System.Runtime.Serialization.Primitives/src/System/Runtime/Serialization/StreamingContext.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: CrossProcess
    path: src/System.Runtime.Serialization.Primitives/src/System/Runtime/Serialization/StreamingContext.cs
    startLine: 66
  assemblies:
  - System.Runtime.Serialization.Primitives
  namespace: System.Runtime.Serialization
  summary: "\n<p>Specifies that the source or destination context is a different process on the same computer.</p>\n"
  syntax:
    content: CrossProcess = 1
    return:
      type: System.Runtime.Serialization.StreamingContextStates
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
  nameWithType: StreamingContextStates.CrossProcess
- uid: System.Runtime.Serialization.StreamingContextStates.CrossMachine
  commentId: F:System.Runtime.Serialization.StreamingContextStates.CrossMachine
  id: CrossMachine
  parent: System.Runtime.Serialization.StreamingContextStates
  langs:
  - csharp
  - vb
  name: CrossMachine
  fullName: System.Runtime.Serialization.StreamingContextStates.CrossMachine
  type: Field
  source:
    remote:
      path: src/System.Runtime.Serialization.Primitives/src/System/Runtime/Serialization/StreamingContext.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: CrossMachine
    path: src/System.Runtime.Serialization.Primitives/src/System/Runtime/Serialization/StreamingContext.cs
    startLine: 67
  assemblies:
  - System.Runtime.Serialization.Primitives
  namespace: System.Runtime.Serialization
  summary: "\n<p>Specifies that the source or destination context is a different computer.</p>\n"
  syntax:
    content: CrossMachine = 2
    return:
      type: System.Runtime.Serialization.StreamingContextStates
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
  nameWithType: StreamingContextStates.CrossMachine
- uid: System.Runtime.Serialization.StreamingContextStates.File
  commentId: F:System.Runtime.Serialization.StreamingContextStates.File
  id: File
  parent: System.Runtime.Serialization.StreamingContextStates
  langs:
  - csharp
  - vb
  name: File
  fullName: System.Runtime.Serialization.StreamingContextStates.File
  type: Field
  source:
    remote:
      path: src/System.Runtime.Serialization.Primitives/src/System/Runtime/Serialization/StreamingContext.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: File
    path: src/System.Runtime.Serialization.Primitives/src/System/Runtime/Serialization/StreamingContext.cs
    startLine: 68
  assemblies:
  - System.Runtime.Serialization.Primitives
  namespace: System.Runtime.Serialization
  summary: "\n<p>Specifies that the source or destination context is a file. Users can assume that files will last longer than the process that created them and not serialize objects in such a way that deserialization will require accessing any data from the current process.</p>\n"
  syntax:
    content: File = 4
    return:
      type: System.Runtime.Serialization.StreamingContextStates
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
  nameWithType: StreamingContextStates.File
- uid: System.Runtime.Serialization.StreamingContextStates.Persistence
  commentId: F:System.Runtime.Serialization.StreamingContextStates.Persistence
  id: Persistence
  parent: System.Runtime.Serialization.StreamingContextStates
  langs:
  - csharp
  - vb
  name: Persistence
  fullName: System.Runtime.Serialization.StreamingContextStates.Persistence
  type: Field
  source:
    remote:
      path: src/System.Runtime.Serialization.Primitives/src/System/Runtime/Serialization/StreamingContext.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: Persistence
    path: src/System.Runtime.Serialization.Primitives/src/System/Runtime/Serialization/StreamingContext.cs
    startLine: 69
  assemblies:
  - System.Runtime.Serialization.Primitives
  namespace: System.Runtime.Serialization
  summary: "\n<p>Specifies that the source or destination context is a persisted store, which could include databases, files, or other backing stores. Users can assume that persisted data will last longer than the process that created the data and not serialize objects so that deserialization will require accessing any data from the current process.</p>\n"
  syntax:
    content: Persistence = 8
    return:
      type: System.Runtime.Serialization.StreamingContextStates
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
  nameWithType: StreamingContextStates.Persistence
- uid: System.Runtime.Serialization.StreamingContextStates.Remoting
  commentId: F:System.Runtime.Serialization.StreamingContextStates.Remoting
  id: Remoting
  parent: System.Runtime.Serialization.StreamingContextStates
  langs:
  - csharp
  - vb
  name: Remoting
  fullName: System.Runtime.Serialization.StreamingContextStates.Remoting
  type: Field
  source:
    remote:
      path: src/System.Runtime.Serialization.Primitives/src/System/Runtime/Serialization/StreamingContext.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: Remoting
    path: src/System.Runtime.Serialization.Primitives/src/System/Runtime/Serialization/StreamingContext.cs
    startLine: 70
  assemblies:
  - System.Runtime.Serialization.Primitives
  namespace: System.Runtime.Serialization
  summary: "\n<p>Specifies that the data is remoted to a context in an unknown location. Users cannot make any assumptions whether this is on the same computer.</p>\n"
  syntax:
    content: Remoting = 16
    return:
      type: System.Runtime.Serialization.StreamingContextStates
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
  nameWithType: StreamingContextStates.Remoting
- uid: System.Runtime.Serialization.StreamingContextStates.Other
  commentId: F:System.Runtime.Serialization.StreamingContextStates.Other
  id: Other
  parent: System.Runtime.Serialization.StreamingContextStates
  langs:
  - csharp
  - vb
  name: Other
  fullName: System.Runtime.Serialization.StreamingContextStates.Other
  type: Field
  source:
    remote:
      path: src/System.Runtime.Serialization.Primitives/src/System/Runtime/Serialization/StreamingContext.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: Other
    path: src/System.Runtime.Serialization.Primitives/src/System/Runtime/Serialization/StreamingContext.cs
    startLine: 71
  assemblies:
  - System.Runtime.Serialization.Primitives
  namespace: System.Runtime.Serialization
  summary: "\n<p>Specifies that the serialization context is unknown.</p>\n"
  syntax:
    content: Other = 32
    return:
      type: System.Runtime.Serialization.StreamingContextStates
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
  nameWithType: StreamingContextStates.Other
- uid: System.Runtime.Serialization.StreamingContextStates.Clone
  commentId: F:System.Runtime.Serialization.StreamingContextStates.Clone
  id: Clone
  parent: System.Runtime.Serialization.StreamingContextStates
  langs:
  - csharp
  - vb
  name: Clone
  fullName: System.Runtime.Serialization.StreamingContextStates.Clone
  type: Field
  source:
    remote:
      path: src/System.Runtime.Serialization.Primitives/src/System/Runtime/Serialization/StreamingContext.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: Clone
    path: src/System.Runtime.Serialization.Primitives/src/System/Runtime/Serialization/StreamingContext.cs
    startLine: 72
  assemblies:
  - System.Runtime.Serialization.Primitives
  namespace: System.Runtime.Serialization
  summary: "\n<p>Specifies that the object graph is being cloned. Users can assume that the cloned graph will continue to exist within the same process and be safe to access handles or other references to unmanaged resources.</p>\n"
  syntax:
    content: Clone = 64
    return:
      type: System.Runtime.Serialization.StreamingContextStates
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
  nameWithType: StreamingContextStates.Clone
- uid: System.Runtime.Serialization.StreamingContextStates.CrossAppDomain
  commentId: F:System.Runtime.Serialization.StreamingContextStates.CrossAppDomain
  id: CrossAppDomain
  parent: System.Runtime.Serialization.StreamingContextStates
  langs:
  - csharp
  - vb
  name: CrossAppDomain
  fullName: System.Runtime.Serialization.StreamingContextStates.CrossAppDomain
  type: Field
  source:
    remote:
      path: src/System.Runtime.Serialization.Primitives/src/System/Runtime/Serialization/StreamingContext.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: CrossAppDomain
    path: src/System.Runtime.Serialization.Primitives/src/System/Runtime/Serialization/StreamingContext.cs
    startLine: 73
  assemblies:
  - System.Runtime.Serialization.Primitives
  namespace: System.Runtime.Serialization
  summary: "\n<p>Specifies that the source or destination context is a different AppDomain. (For a description of AppDomains, see Application Domains).</p>\n"
  syntax:
    content: CrossAppDomain = 128
    return:
      type: System.Runtime.Serialization.StreamingContextStates
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
  nameWithType: StreamingContextStates.CrossAppDomain
- uid: System.Runtime.Serialization.StreamingContextStates.All
  commentId: F:System.Runtime.Serialization.StreamingContextStates.All
  id: All
  parent: System.Runtime.Serialization.StreamingContextStates
  langs:
  - csharp
  - vb
  name: All
  fullName: System.Runtime.Serialization.StreamingContextStates.All
  type: Field
  source:
    remote:
      path: src/System.Runtime.Serialization.Primitives/src/System/Runtime/Serialization/StreamingContext.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: All
    path: src/System.Runtime.Serialization.Primitives/src/System/Runtime/Serialization/StreamingContext.cs
    startLine: 74
  assemblies:
  - System.Runtime.Serialization.Primitives
  namespace: System.Runtime.Serialization
  summary: "\n<p>Specifies that the serialized data can be transmitted to or received from any of the other contexts.</p>\n"
  syntax:
    content: All = 255
    return:
      type: System.Runtime.Serialization.StreamingContextStates
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
  nameWithType: StreamingContextStates.All
references:
- uid: System.Runtime.Serialization
  isExternal: false
  name: System.Runtime.Serialization
  fullName: System.Runtime.Serialization
  nameWithType: System.Runtime.Serialization
  commentId: N:System.Runtime.Serialization
- uid: System.Runtime.Serialization.StreamingContextStates
  parent: System.Runtime.Serialization
  isExternal: false
  name: StreamingContextStates
  fullName: System.Runtime.Serialization.StreamingContextStates
  nameWithType: StreamingContextStates
  commentId: T:System.Runtime.Serialization.StreamingContextStates
