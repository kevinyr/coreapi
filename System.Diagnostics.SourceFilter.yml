items:
- uid: System.Diagnostics.SourceFilter
  commentId: T:System.Diagnostics.SourceFilter
  id: SourceFilter
  parent: System.Diagnostics
  children:
  - System.Diagnostics.SourceFilter.#ctor(System.String)
  - System.Diagnostics.SourceFilter.ShouldTrace(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.String,System.Object[],System.Object,System.Object[])
  - System.Diagnostics.SourceFilter.Source
  langs:
  - csharp
  - vb
  name: SourceFilter
  fullName: System.Diagnostics.SourceFilter
  type: Class
  source:
    remote:
      path: src/System.Diagnostics.TraceSource/ref/System.Diagnostics.TraceSource.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: SourceFilter
    path: src/System.Diagnostics.TraceSource/ref/System.Diagnostics.TraceSource.cs
    startLine: 31
  assemblies:
  - System.Diagnostics.TraceSource
  namespace: System.Diagnostics
  summary: "\n<p>Indicates whether a listener should trace a message based on the source of a trace.</p>\n"
  syntax:
    content: 'public class SourceFilter : TraceFilter'
    content.vb: >-
      Public Class SourceFilter
          Inherits TraceFilter
  inheritance:
  - System.Object
  - System.Diagnostics.TraceFilter
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
  nameWithType: SourceFilter
- uid: System.Diagnostics.SourceFilter.#ctor(System.String)
  commentId: M:System.Diagnostics.SourceFilter.#ctor(System.String)
  id: '#ctor(System.String)'
  parent: System.Diagnostics.SourceFilter
  langs:
  - csharp
  - vb
  name: SourceFilter(String)
  fullName: System.Diagnostics.SourceFilter.SourceFilter(System.String)
  type: Constructor
  source:
    remote:
      path: src/System.Diagnostics.TraceSource/ref/System.Diagnostics.TraceSource.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: .ctor
    path: src/System.Diagnostics.TraceSource/ref/System.Diagnostics.TraceSource.cs
    startLine: 33
  assemblies:
  - System.Diagnostics.TraceSource
  namespace: System.Diagnostics
  summary: "\n<p>Initializes a new instance of the <xref href=\"System.Diagnostics.SourceFilter\" data-throw-if-not-resolved=\"false\"></xref> class, specifying the name of the trace source. </p>\n"
  syntax:
    content: public SourceFilter(string source)
    content.vb: Public Sub New(source As String)
    parameters:
    - id: source
      type: System.String
      description: "\n<p>The name of the trace source.</p>\n"
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  nameWithType: SourceFilter.SourceFilter(String)
- uid: System.Diagnostics.SourceFilter.Source
  commentId: P:System.Diagnostics.SourceFilter.Source
  id: Source
  parent: System.Diagnostics.SourceFilter
  langs:
  - csharp
  - vb
  name: Source
  fullName: System.Diagnostics.SourceFilter.Source
  type: Property
  source:
    remote:
      path: src/System.Diagnostics.TraceSource/ref/System.Diagnostics.TraceSource.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: Source
    path: src/System.Diagnostics.TraceSource/ref/System.Diagnostics.TraceSource.cs
    startLine: 34
  assemblies:
  - System.Diagnostics.TraceSource
  namespace: System.Diagnostics
  summary: "\n<p>Gets or sets the name of the trace source.</p>\n"
  syntax:
    content: public string Source { get; set; }
    content.vb: Public Property Source As String
    parameters: []
    return:
      type: System.String
      description: "\n<p>The name of the trace source.</p>\n"
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "\n<p>The value is <strong>null</strong>. </p>\n"
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
  nameWithType: SourceFilter.Source
- uid: System.Diagnostics.SourceFilter.ShouldTrace(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.String,System.Object[],System.Object,System.Object[])
  commentId: M:System.Diagnostics.SourceFilter.ShouldTrace(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.String,System.Object[],System.Object,System.Object[])
  id: ShouldTrace(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.String,System.Object[],System.Object,System.Object[])
  parent: System.Diagnostics.SourceFilter
  langs:
  - csharp
  - vb
  name: ShouldTrace(TraceEventCache, String, TraceEventType, Int32, String, Object[], Object, Object[])
  fullName: System.Diagnostics.SourceFilter.ShouldTrace(System.Diagnostics.TraceEventCache, System.String, System.Diagnostics.TraceEventType, System.Int32, System.String, System.Object[], System.Object, System.Object[])
  type: Method
  source:
    remote:
      path: src/System.Diagnostics.TraceSource/ref/System.Diagnostics.TraceSource.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: ShouldTrace
    path: src/System.Diagnostics.TraceSource/ref/System.Diagnostics.TraceSource.cs
    startLine: 35
  assemblies:
  - System.Diagnostics.TraceSource
  namespace: System.Diagnostics
  summary: "\n<p>Determines whether the trace listener should trace the event.</p>\n"
  syntax:
    content: public override bool ShouldTrace(TraceEventCache cache, string source, TraceEventType eventType, int id, string formatOrMessage, object[] args, object data1, object[] data)
    content.vb: Public Overrides Function ShouldTrace(cache As TraceEventCache, source As String, eventType As TraceEventType, id As Integer, formatOrMessage As String, args As Object(), data1 As Object, data As Object()) As Boolean
    parameters:
    - id: cache
      type: System.Diagnostics.TraceEventCache
      description: "\n<p>An object that represents the information cache for the trace event.</p>\n"
    - id: source
      type: System.String
      description: "\n<p>The name of the source.</p>\n"
    - id: eventType
      type: System.Diagnostics.TraceEventType
      description: "\n<p>One of the enumeration values that identifies the event type. </p>\n"
    - id: id
      type: System.Int32
      description: "\n<p>A trace identifier number.</p>\n"
    - id: formatOrMessage
      type: System.String
      description: "\n<p>The format to use for writing an array of arguments or a message to write.</p>\n"
    - id: args
      type: System.Object[]
      description: "\n<p>An array of argument objects.</p>\n"
    - id: data1
      type: System.Object
      description: "\n<p>A trace data object.</p>\n"
    - id: data
      type: System.Object[]
      description: "\n<p>An array of trace data objects.</p>\n"
    return:
      type: System.Boolean
      description: "\n<p>\n<strong>true</strong> if the trace should be produced; otherwise, <strong>false</strong>. </p>\n"
  overridden: System.Diagnostics.TraceFilter.ShouldTrace(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.String,System.Object[],System.Object,System.Object[])
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "\n<p>\n<em>source</em> is <strong>null</strong>. </p>\n"
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
  fullName.vb: System.Diagnostics.SourceFilter.ShouldTrace(System.Diagnostics.TraceEventCache, System.String, System.Diagnostics.TraceEventType, System.Int32, System.String, System.Object(), System.Object, System.Object())
  name.vb: ShouldTrace(TraceEventCache, String, TraceEventType, Int32, String, Object(), Object, Object())
  nameWithType: SourceFilter.ShouldTrace(TraceEventCache, String, TraceEventType, Int32, String, Object[], Object, Object[])
  nameWithType.vb: SourceFilter.ShouldTrace(TraceEventCache, String, TraceEventType, Int32, String, Object(), Object, Object())
references:
- uid: System.Diagnostics
  isExternal: false
  name: System.Diagnostics
  fullName: System.Diagnostics
  commentId: N:System.Diagnostics
  nameWithType: System.Diagnostics
- uid: System.Object
  parent: System
  isExternal: false
  name: Object
  fullName: System.Object
  commentId: T:System.Object
  nameWithType: Object
- uid: System.Diagnostics.TraceFilter
  parent: System.Diagnostics
  isExternal: false
  name: TraceFilter
  fullName: System.Diagnostics.TraceFilter
  commentId: T:System.Diagnostics.TraceFilter
  nameWithType: TraceFilter
- uid: System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  commentId: M:System.Object.ToString
  nameWithType: Object.ToString()
- uid: System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
  commentId: M:System.Object.Equals(System.Object)
  nameWithType: Object.Equals(Object)
- uid: System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
  commentId: M:System.Object.Equals(System.Object,System.Object)
  nameWithType: Object.Equals(Object, Object)
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
- uid: System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  commentId: M:System.Object.GetHashCode
  nameWithType: Object.GetHashCode()
- uid: System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  commentId: M:System.Object.GetType
  nameWithType: Object.GetType()
- uid: System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  commentId: M:System.Object.MemberwiseClone
  nameWithType: Object.MemberwiseClone()
- uid: System
  isExternal: false
  name: System
  fullName: System
  commentId: N:System
  nameWithType: System
- uid: System.String
  parent: System
  isExternal: false
  name: String
  fullName: System.String
  commentId: T:System.String
  nameWithType: String
- uid: System.Diagnostics.TraceFilter.ShouldTrace(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.String,System.Object[],System.Object,System.Object[])
  parent: System.Diagnostics.TraceFilter
  isExternal: true
  name: ShouldTrace(TraceEventCache, String, TraceEventType, Int32, String, Object[], Object, Object[])
  fullName: System.Diagnostics.TraceFilter.ShouldTrace(System.Diagnostics.TraceEventCache, System.String, System.Diagnostics.TraceEventType, System.Int32, System.String, System.Object[], System.Object, System.Object[])
  fullname.vb: System.Diagnostics.TraceFilter.ShouldTrace(System.Diagnostics.TraceEventCache, System.String, System.Diagnostics.TraceEventType, System.Int32, System.String, System.Object(), System.Object, System.Object())
  name.vb: ShouldTrace(TraceEventCache, String, TraceEventType, Int32, String, Object(), Object, Object())
  spec.csharp:
  - uid: System.Diagnostics.TraceFilter.ShouldTrace(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.String,System.Object[],System.Object,System.Object[])
    name: ShouldTrace
    fullName: System.Diagnostics.TraceFilter.ShouldTrace
  - name: (
    fullName: (
  - uid: System.Diagnostics.TraceEventCache
    name: TraceEventCache
    fullName: System.Diagnostics.TraceEventCache
  - name: ', '
    fullName: ', '
  - uid: System.String
    name: String
    fullName: System.String
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Diagnostics.TraceEventType
    name: TraceEventType
    fullName: System.Diagnostics.TraceEventType
  - name: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.String
    name: String
    fullName: System.String
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: '[]'
    fullName: '[]'
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: '[]'
    fullName: '[]'
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Diagnostics.TraceFilter.ShouldTrace(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.String,System.Object[],System.Object,System.Object[])
    name: ShouldTrace
    fullName: System.Diagnostics.TraceFilter.ShouldTrace
  - name: (
    fullName: (
  - uid: System.Diagnostics.TraceEventCache
    name: TraceEventCache
    fullName: System.Diagnostics.TraceEventCache
  - name: ', '
    fullName: ', '
  - uid: System.String
    name: String
    fullName: System.String
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Diagnostics.TraceEventType
    name: TraceEventType
    fullName: System.Diagnostics.TraceEventType
  - name: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.String
    name: String
    fullName: System.String
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ()
    fullName: ()
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ()
    fullName: ()
  - name: )
    fullName: )
  commentId: M:System.Diagnostics.TraceFilter.ShouldTrace(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.String,System.Object[],System.Object,System.Object[])
  nameWithType: TraceFilter.ShouldTrace(TraceEventCache, String, TraceEventType, Int32, String, Object[], Object, Object[])
  nameWithType.vb: TraceFilter.ShouldTrace(TraceEventCache, String, TraceEventType, Int32, String, Object(), Object, Object())
- uid: System.Diagnostics.TraceEventCache
  parent: System.Diagnostics
  isExternal: false
  name: TraceEventCache
  fullName: System.Diagnostics.TraceEventCache
  commentId: T:System.Diagnostics.TraceEventCache
  nameWithType: TraceEventCache
- uid: System.Diagnostics.TraceEventType
  parent: System.Diagnostics
  isExternal: false
  name: TraceEventType
  fullName: System.Diagnostics.TraceEventType
  commentId: T:System.Diagnostics.TraceEventType
  nameWithType: TraceEventType
- uid: System.Int32
  parent: System
  isExternal: false
  name: Int32
  fullName: System.Int32
  commentId: T:System.Int32
  nameWithType: Int32
- uid: System.Object[]
  name: Object[]
  fullName: System.Object[]
  fullname.vb: System.Object()
  name.vb: Object()
  spec.csharp:
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: '[]'
    fullName: '[]'
  spec.vb:
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ()
    fullName: ()
  nameWithType: Object[]
  nameWithType.vb: Object()
- uid: System.Boolean
  parent: System
  isExternal: false
  name: Boolean
  fullName: System.Boolean
  commentId: T:System.Boolean
  nameWithType: Boolean
- uid: System.ArgumentNullException
  isExternal: false
  name: ArgumentNullException
  fullName: System.ArgumentNullException
  nameWithType: ArgumentNullException
  commentId: T:System.ArgumentNullException
