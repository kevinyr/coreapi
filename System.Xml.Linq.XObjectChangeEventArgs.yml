### YamlMime:ManagedReference
items:
- uid: System.Xml.Linq.XObjectChangeEventArgs
  commentId: T:System.Xml.Linq.XObjectChangeEventArgs
  id: XObjectChangeEventArgs
  parent: System.Xml.Linq
  children:
  - System.Xml.Linq.XObjectChangeEventArgs.#ctor(System.Xml.Linq.XObjectChange)
  - System.Xml.Linq.XObjectChangeEventArgs.Add
  - System.Xml.Linq.XObjectChangeEventArgs.Name
  - System.Xml.Linq.XObjectChangeEventArgs.ObjectChange
  - System.Xml.Linq.XObjectChangeEventArgs.Remove
  - System.Xml.Linq.XObjectChangeEventArgs.Value
  langs:
  - csharp
  - vb
  name: XObjectChangeEventArgs
  nameWithType: XObjectChangeEventArgs
  fullName: System.Xml.Linq.XObjectChangeEventArgs
  type: Class
  source:
    remote:
      path: src/System.Xml.XDocument/ref/System.Xml.XDocument.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: XObjectChangeEventArgs
    path: src/System.Xml.XDocument/ref/System.Xml.XDocument.cs
    startLine: 415
  assemblies:
  - System.Xml.XDocument
  namespace: System.Xml.Linq
  summary: "\n<p>Provides data for the <xref href=\"System.Xml.Linq.XObject.Changing\" data-throw-if-not-resolved=\"false\"></xref> and <xref href=\"System.Xml.Linq.XObject.Changed\" data-throw-if-not-resolved=\"false\"></xref> events.</p>\n"
  syntax:
    content: 'public class XObjectChangeEventArgs : EventArgs'
    content.vb: >-
      Public Class XObjectChangeEventArgs
          Inherits EventArgs
  seealso:
  - linkId: System.Xml.Linq.XObjectChange
    commentId: T:System.Xml.Linq.XObjectChange
  inheritance:
  - System.Object
  - System.EventArgs
  inheritedMembers:
  - System.EventArgs.Empty
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: System.Xml.Linq.XObjectChangeEventArgs.Add
  commentId: F:System.Xml.Linq.XObjectChangeEventArgs.Add
  id: Add
  parent: System.Xml.Linq.XObjectChangeEventArgs
  langs:
  - csharp
  - vb
  name: Add
  nameWithType: XObjectChangeEventArgs.Add
  fullName: System.Xml.Linq.XObjectChangeEventArgs.Add
  type: Field
  source:
    remote:
      path: src/System.Xml.XDocument/ref/System.Xml.XDocument.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: Add
    path: src/System.Xml.XDocument/ref/System.Xml.XDocument.cs
    startLine: 417
  assemblies:
  - System.Xml.XDocument
  namespace: System.Xml.Linq
  summary: "\n<p>Event argument for an <xref href=\"System.Xml.Linq.XObjectChange.Add\" data-throw-if-not-resolved=\"false\"></xref> change event.</p>\n"
  syntax:
    content: public static readonly XObjectChangeEventArgs Add
    content.vb: Public Shared ReadOnly Add As XObjectChangeEventArgs
    return:
      type: System.Xml.Linq.XObjectChangeEventArgs
  modifiers.csharp:
  - public
  - static
  - readonly
  modifiers.vb:
  - Public
  - Shared
  - ReadOnly
- uid: System.Xml.Linq.XObjectChangeEventArgs.Name
  commentId: F:System.Xml.Linq.XObjectChangeEventArgs.Name
  id: Name
  parent: System.Xml.Linq.XObjectChangeEventArgs
  langs:
  - csharp
  - vb
  name: Name
  nameWithType: XObjectChangeEventArgs.Name
  fullName: System.Xml.Linq.XObjectChangeEventArgs.Name
  type: Field
  source:
    remote:
      path: src/System.Xml.XDocument/ref/System.Xml.XDocument.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: Name
    path: src/System.Xml.XDocument/ref/System.Xml.XDocument.cs
    startLine: 418
  assemblies:
  - System.Xml.XDocument
  namespace: System.Xml.Linq
  summary: "\n<p>Event argument for a <xref href=\"System.Xml.Linq.XObjectChange.Name\" data-throw-if-not-resolved=\"false\"></xref> change event.</p>\n"
  syntax:
    content: public static readonly XObjectChangeEventArgs Name
    content.vb: Public Shared ReadOnly Name As XObjectChangeEventArgs
    return:
      type: System.Xml.Linq.XObjectChangeEventArgs
  modifiers.csharp:
  - public
  - static
  - readonly
  modifiers.vb:
  - Public
  - Shared
  - ReadOnly
- uid: System.Xml.Linq.XObjectChangeEventArgs.Remove
  commentId: F:System.Xml.Linq.XObjectChangeEventArgs.Remove
  id: Remove
  parent: System.Xml.Linq.XObjectChangeEventArgs
  langs:
  - csharp
  - vb
  name: Remove
  nameWithType: XObjectChangeEventArgs.Remove
  fullName: System.Xml.Linq.XObjectChangeEventArgs.Remove
  type: Field
  source:
    remote:
      path: src/System.Xml.XDocument/ref/System.Xml.XDocument.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: Remove
    path: src/System.Xml.XDocument/ref/System.Xml.XDocument.cs
    startLine: 419
  assemblies:
  - System.Xml.XDocument
  namespace: System.Xml.Linq
  summary: "\n<p>Event argument for a <xref href=\"System.Xml.Linq.XObjectChange.Remove\" data-throw-if-not-resolved=\"false\"></xref> change event.</p>\n"
  syntax:
    content: public static readonly XObjectChangeEventArgs Remove
    content.vb: Public Shared ReadOnly Remove As XObjectChangeEventArgs
    return:
      type: System.Xml.Linq.XObjectChangeEventArgs
  modifiers.csharp:
  - public
  - static
  - readonly
  modifiers.vb:
  - Public
  - Shared
  - ReadOnly
- uid: System.Xml.Linq.XObjectChangeEventArgs.Value
  commentId: F:System.Xml.Linq.XObjectChangeEventArgs.Value
  id: Value
  parent: System.Xml.Linq.XObjectChangeEventArgs
  langs:
  - csharp
  - vb
  name: Value
  nameWithType: XObjectChangeEventArgs.Value
  fullName: System.Xml.Linq.XObjectChangeEventArgs.Value
  type: Field
  source:
    remote:
      path: src/System.Xml.XDocument/ref/System.Xml.XDocument.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: Value
    path: src/System.Xml.XDocument/ref/System.Xml.XDocument.cs
    startLine: 420
  assemblies:
  - System.Xml.XDocument
  namespace: System.Xml.Linq
  summary: "\n<p>Event argument for a <xref href=\"System.Xml.Linq.XObjectChange.Value\" data-throw-if-not-resolved=\"false\"></xref> change event.</p>\n"
  syntax:
    content: public static readonly XObjectChangeEventArgs Value
    content.vb: Public Shared ReadOnly Value As XObjectChangeEventArgs
    return:
      type: System.Xml.Linq.XObjectChangeEventArgs
  modifiers.csharp:
  - public
  - static
  - readonly
  modifiers.vb:
  - Public
  - Shared
  - ReadOnly
- uid: System.Xml.Linq.XObjectChangeEventArgs.#ctor(System.Xml.Linq.XObjectChange)
  commentId: M:System.Xml.Linq.XObjectChangeEventArgs.#ctor(System.Xml.Linq.XObjectChange)
  id: '#ctor(System.Xml.Linq.XObjectChange)'
  parent: System.Xml.Linq.XObjectChangeEventArgs
  langs:
  - csharp
  - vb
  name: XObjectChangeEventArgs(XObjectChange)
  nameWithType: XObjectChangeEventArgs.XObjectChangeEventArgs(XObjectChange)
  fullName: System.Xml.Linq.XObjectChangeEventArgs.XObjectChangeEventArgs(System.Xml.Linq.XObjectChange)
  type: Constructor
  source:
    remote:
      path: src/System.Xml.XDocument/ref/System.Xml.XDocument.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: .ctor
    path: src/System.Xml.XDocument/ref/System.Xml.XDocument.cs
    startLine: 421
  assemblies:
  - System.Xml.XDocument
  namespace: System.Xml.Linq
  summary: "\n<p>Initializes a new instance of the <xref href=\"System.Xml.Linq.XObjectChangeEventArgs\" data-throw-if-not-resolved=\"false\"></xref> class. </p>\n"
  syntax:
    content: public XObjectChangeEventArgs(XObjectChange objectChange)
    content.vb: Public Sub New(objectChange As XObjectChange)
    parameters:
    - id: objectChange
      type: System.Xml.Linq.XObjectChange
      description: "\n<p>An <xref href=\"System.Xml.Linq.XObjectChange\" data-throw-if-not-resolved=\"false\"></xref> that contains the event arguments for LINQ to XML events.</p>\n"
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: System.Xml.Linq.XObjectChangeEventArgs.ObjectChange
  commentId: P:System.Xml.Linq.XObjectChangeEventArgs.ObjectChange
  id: ObjectChange
  parent: System.Xml.Linq.XObjectChangeEventArgs
  langs:
  - csharp
  - vb
  name: ObjectChange
  nameWithType: XObjectChangeEventArgs.ObjectChange
  fullName: System.Xml.Linq.XObjectChangeEventArgs.ObjectChange
  type: Property
  source:
    remote:
      path: src/System.Xml.XDocument/ref/System.Xml.XDocument.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: ObjectChange
    path: src/System.Xml.XDocument/ref/System.Xml.XDocument.cs
    startLine: 422
  assemblies:
  - System.Xml.XDocument
  namespace: System.Xml.Linq
  summary: "\n<p>Gets the type of change.</p>\n"
  syntax:
    content: public XObjectChange ObjectChange { get; }
    content.vb: Public ReadOnly Property ObjectChange As XObjectChange
    parameters: []
    return:
      type: System.Xml.Linq.XObjectChange
      description: "\n<p>An <xref href=\"System.Xml.Linq.XObjectChange\" data-throw-if-not-resolved=\"false\"></xref> that contains the type of change.</p>\n"
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
references:
- uid: System.Xml.Linq
  commentId: N:System.Xml.Linq
  isExternal: false
  name: System.Xml.Linq
  nameWithType: System.Xml.Linq
  fullName: System.Xml.Linq
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: false
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.EventArgs
  commentId: T:System.EventArgs
  parent: System
  isExternal: false
  name: EventArgs
  nameWithType: EventArgs
  fullName: System.EventArgs
- uid: System.EventArgs.Empty
  commentId: F:System.EventArgs.Empty
  parent: System.EventArgs
  isExternal: true
  name: Empty
  nameWithType: EventArgs.Empty
  fullName: System.EventArgs.Empty
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: System.Xml.Linq.XObjectChangeEventArgs
  commentId: T:System.Xml.Linq.XObjectChangeEventArgs
  parent: System.Xml.Linq
  isExternal: false
  name: XObjectChangeEventArgs
  nameWithType: XObjectChangeEventArgs
  fullName: System.Xml.Linq.XObjectChangeEventArgs
- uid: System.Xml.Linq.XObjectChange
  commentId: T:System.Xml.Linq.XObjectChange
  parent: System.Xml.Linq
  isExternal: false
  name: XObjectChange
  nameWithType: XObjectChange
  fullName: System.Xml.Linq.XObjectChange
