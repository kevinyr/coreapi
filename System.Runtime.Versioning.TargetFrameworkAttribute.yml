### YamlMime:ManagedReference
items:
- uid: System.Runtime.Versioning.TargetFrameworkAttribute
  commentId: T:System.Runtime.Versioning.TargetFrameworkAttribute
  id: TargetFrameworkAttribute
  parent: System.Runtime.Versioning
  children:
  - System.Runtime.Versioning.TargetFrameworkAttribute.#ctor(System.String)
  - System.Runtime.Versioning.TargetFrameworkAttribute.FrameworkDisplayName
  - System.Runtime.Versioning.TargetFrameworkAttribute.FrameworkName
  langs:
  - csharp
  - vb
  name: TargetFrameworkAttribute
  nameWithType: TargetFrameworkAttribute
  fullName: System.Runtime.Versioning.TargetFrameworkAttribute
  type: Class
  source:
    remote:
      path: src/mscorlib/src/System/Runtime/Versioning/TargetFrameworkAttribute.cs
      branch: master
      repo: https://github.com/dotnet/coreclr.git
    id: TargetFrameworkAttribute
    path: src/mscorlib/src/System/Runtime/Versioning/TargetFrameworkAttribute.cs
    startLine: 19
  assemblies:
  - System.Runtime
  namespace: System.Runtime.Versioning
  summary: "\n<p>Identifies the version of the .NET Framework that a particular assembly was compiled against.</p>\n"
  syntax:
    content: >-
      [AttributeUsage(AttributeTargets.Assembly, AllowMultiple = false, Inherited = false)]

      public sealed class TargetFrameworkAttribute : Attribute, _Attribute
    content.vb: >-
      <AttributeUsage(AttributeTargets.Assembly, AllowMultiple:=False, Inherited:=False)>

      Public NotInheritable Class TargetFrameworkAttribute
          Inherits Attribute
          Implements _Attribute
  seealso:
  - linkId: System.Runtime.Versioning.FrameworkName
    commentId: T:System.Runtime.Versioning.FrameworkName
  inheritance:
  - System.Object
  - System.Attribute
  inheritedMembers:
  - System.Attribute.Equals(System.Object)
  - System.Attribute.GetHashCode
  - System.Object.ToString
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetType
  - System.Object.MemberwiseClone
  attributes:
  - type: System.AttributeUsageAttribute
    ctor: System.AttributeUsageAttribute.#ctor(System.AttributeTargets)
    arguments:
    - type: System.AttributeTargets
      value: 1
    namedArguments:
    - name: AllowMultiple
      type: System.Boolean
      value: false
    - name: Inherited
      type: System.Boolean
      value: false
  modifiers.csharp:
  - public
  - sealed
  - class
  modifiers.vb:
  - Public
  - NotInheritable
  - Class
- uid: System.Runtime.Versioning.TargetFrameworkAttribute.#ctor(System.String)
  commentId: M:System.Runtime.Versioning.TargetFrameworkAttribute.#ctor(System.String)
  id: '#ctor(System.String)'
  parent: System.Runtime.Versioning.TargetFrameworkAttribute
  langs:
  - csharp
  - vb
  name: TargetFrameworkAttribute(String)
  nameWithType: TargetFrameworkAttribute.TargetFrameworkAttribute(String)
  fullName: System.Runtime.Versioning.TargetFrameworkAttribute.TargetFrameworkAttribute(System.String)
  type: Constructor
  source:
    remote:
      path: src/mscorlib/src/System/Runtime/Versioning/TargetFrameworkAttribute.cs
      branch: master
      repo: https://github.com/dotnet/coreclr.git
    id: .ctor
    path: src/mscorlib/src/System/Runtime/Versioning/TargetFrameworkAttribute.cs
    startLine: 25
  assemblies:
  - System.Runtime
  namespace: System.Runtime.Versioning
  summary: "\n<p>Initializes an instance of the <xref href=\"System.Runtime.Versioning.TargetFrameworkAttribute\" data-throw-if-not-resolved=\"false\"></xref> class by specifying the .NET Framework version against which an assembly was built.</p>\n"
  syntax:
    content: public TargetFrameworkAttribute(string frameworkName)
    content.vb: Public Sub New(frameworkName As String)
    parameters:
    - id: frameworkName
      type: System.String
      description: "\n<p>The version of the .NET Framework against which the assembly was built.</p>\n"
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "\n<p>\n<em>frameworkName</em> is <strong>null</strong>.</p>\n"
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: System.Runtime.Versioning.TargetFrameworkAttribute.FrameworkDisplayName
  commentId: P:System.Runtime.Versioning.TargetFrameworkAttribute.FrameworkDisplayName
  id: FrameworkDisplayName
  parent: System.Runtime.Versioning.TargetFrameworkAttribute
  langs:
  - csharp
  - vb
  name: FrameworkDisplayName
  nameWithType: TargetFrameworkAttribute.FrameworkDisplayName
  fullName: System.Runtime.Versioning.TargetFrameworkAttribute.FrameworkDisplayName
  type: Property
  source:
    remote:
      path: src/mscorlib/src/System/Runtime/Versioning/TargetFrameworkAttribute.cs
      branch: master
      repo: https://github.com/dotnet/coreclr.git
    id: FrameworkDisplayName
    path: src/mscorlib/src/System/Runtime/Versioning/TargetFrameworkAttribute.cs
    startLine: 39
  assemblies:
  - System.Runtime
  namespace: System.Runtime.Versioning
  summary: "\n<p>Gets the display name of the .NET Framework version against which an assembly was built.</p>\n"
  syntax:
    content: public string FrameworkDisplayName { get; set; }
    content.vb: Public Property FrameworkDisplayName As String
    parameters: []
    return:
      type: System.String
      description: "\n<p>The display name of the .NET Framework version.</p>\n"
  seealso:
  - linkId: System.Runtime.Versioning.TargetFrameworkAttribute.FrameworkName
    commentId: P:System.Runtime.Versioning.TargetFrameworkAttribute.FrameworkName
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: System.Runtime.Versioning.TargetFrameworkAttribute.FrameworkName
  commentId: P:System.Runtime.Versioning.TargetFrameworkAttribute.FrameworkName
  id: FrameworkName
  parent: System.Runtime.Versioning.TargetFrameworkAttribute
  langs:
  - csharp
  - vb
  name: FrameworkName
  nameWithType: TargetFrameworkAttribute.FrameworkName
  fullName: System.Runtime.Versioning.TargetFrameworkAttribute.FrameworkName
  type: Property
  source:
    remote:
      path: src/mscorlib/src/System/Runtime/Versioning/TargetFrameworkAttribute.cs
      branch: master
      repo: https://github.com/dotnet/coreclr.git
    id: FrameworkName
    path: src/mscorlib/src/System/Runtime/Versioning/TargetFrameworkAttribute.cs
    startLine: 35
  assemblies:
  - System.Runtime
  namespace: System.Runtime.Versioning
  summary: "\n<p>Gets the name of the .NET Framework version against which a particular assembly was compiled.</p>\n"
  syntax:
    content: public string FrameworkName { get; }
    content.vb: Public ReadOnly Property FrameworkName As String
    parameters: []
    return:
      type: System.String
      description: "\n<p>The name of the .NET Framework version with which the assembly was compiled.</p>\n"
  seealso:
  - linkId: System.Runtime.Versioning.TargetFrameworkAttribute.FrameworkDisplayName
    commentId: P:System.Runtime.Versioning.TargetFrameworkAttribute.FrameworkDisplayName
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
references:
- uid: System.Runtime.Versioning
  commentId: N:System.Runtime.Versioning
  isExternal: false
  name: System.Runtime.Versioning
  nameWithType: System.Runtime.Versioning
  fullName: System.Runtime.Versioning
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: false
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Attribute
  commentId: T:System.Attribute
  parent: System
  isExternal: false
  name: Attribute
  nameWithType: Attribute
  fullName: System.Attribute
- uid: System.Attribute.Equals(System.Object)
  commentId: M:System.Attribute.Equals(System.Object)
  parent: System.Attribute
  isExternal: true
  name: Equals(Object)
  nameWithType: Attribute.Equals(Object)
  fullName: System.Attribute.Equals(System.Object)
  spec.csharp:
  - uid: System.Attribute.Equals(System.Object)
    name: Equals
    nameWithType: Attribute.Equals
    fullName: System.Attribute.Equals
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Attribute.Equals(System.Object)
    name: Equals
    nameWithType: Attribute.Equals
    fullName: System.Attribute.Equals
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Attribute.GetHashCode
  commentId: M:System.Attribute.GetHashCode
  parent: System.Attribute
  isExternal: false
  name: GetHashCode()
  nameWithType: Attribute.GetHashCode()
  fullName: System.Attribute.GetHashCode()
  spec.csharp:
  - uid: System.Attribute.GetHashCode
    name: GetHashCode
    nameWithType: Attribute.GetHashCode
    fullName: System.Attribute.GetHashCode
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Attribute.GetHashCode
    name: GetHashCode
    nameWithType: Attribute.GetHashCode
    fullName: System.Attribute.GetHashCode
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: false
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.ArgumentNullException
  commentId: T:System.ArgumentNullException
  isExternal: false
  name: ArgumentNullException
  nameWithType: ArgumentNullException
  fullName: System.ArgumentNullException
