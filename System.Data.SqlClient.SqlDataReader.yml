### YamlMime:ManagedReference
items:
- uid: System.Data.SqlClient.SqlDataReader
  commentId: T:System.Data.SqlClient.SqlDataReader
  id: SqlDataReader
  parent: System.Data.SqlClient
  children:
  - System.Data.SqlClient.SqlDataReader.Connection
  - System.Data.SqlClient.SqlDataReader.Depth
  - System.Data.SqlClient.SqlDataReader.FieldCount
  - System.Data.SqlClient.SqlDataReader.GetBoolean(System.Int32)
  - System.Data.SqlClient.SqlDataReader.GetByte(System.Int32)
  - System.Data.SqlClient.SqlDataReader.GetBytes(System.Int32,System.Int64,System.Byte[],System.Int32,System.Int32)
  - System.Data.SqlClient.SqlDataReader.GetChar(System.Int32)
  - System.Data.SqlClient.SqlDataReader.GetChars(System.Int32,System.Int64,System.Char[],System.Int32,System.Int32)
  - System.Data.SqlClient.SqlDataReader.GetDataTypeName(System.Int32)
  - System.Data.SqlClient.SqlDataReader.GetDateTime(System.Int32)
  - System.Data.SqlClient.SqlDataReader.GetDateTimeOffset(System.Int32)
  - System.Data.SqlClient.SqlDataReader.GetDecimal(System.Int32)
  - System.Data.SqlClient.SqlDataReader.GetDouble(System.Int32)
  - System.Data.SqlClient.SqlDataReader.GetEnumerator
  - System.Data.SqlClient.SqlDataReader.GetFieldType(System.Int32)
  - System.Data.SqlClient.SqlDataReader.GetFieldValue``1(System.Int32)
  - System.Data.SqlClient.SqlDataReader.GetFieldValueAsync``1(System.Int32,System.Threading.CancellationToken)
  - System.Data.SqlClient.SqlDataReader.GetFloat(System.Int32)
  - System.Data.SqlClient.SqlDataReader.GetGuid(System.Int32)
  - System.Data.SqlClient.SqlDataReader.GetInt16(System.Int32)
  - System.Data.SqlClient.SqlDataReader.GetInt32(System.Int32)
  - System.Data.SqlClient.SqlDataReader.GetInt64(System.Int32)
  - System.Data.SqlClient.SqlDataReader.GetName(System.Int32)
  - System.Data.SqlClient.SqlDataReader.GetOrdinal(System.String)
  - System.Data.SqlClient.SqlDataReader.GetProviderSpecificFieldType(System.Int32)
  - System.Data.SqlClient.SqlDataReader.GetProviderSpecificValue(System.Int32)
  - System.Data.SqlClient.SqlDataReader.GetProviderSpecificValues(System.Object[])
  - System.Data.SqlClient.SqlDataReader.GetSqlBinary(System.Int32)
  - System.Data.SqlClient.SqlDataReader.GetSqlBoolean(System.Int32)
  - System.Data.SqlClient.SqlDataReader.GetSqlByte(System.Int32)
  - System.Data.SqlClient.SqlDataReader.GetSqlBytes(System.Int32)
  - System.Data.SqlClient.SqlDataReader.GetSqlChars(System.Int32)
  - System.Data.SqlClient.SqlDataReader.GetSqlDateTime(System.Int32)
  - System.Data.SqlClient.SqlDataReader.GetSqlDecimal(System.Int32)
  - System.Data.SqlClient.SqlDataReader.GetSqlDouble(System.Int32)
  - System.Data.SqlClient.SqlDataReader.GetSqlGuid(System.Int32)
  - System.Data.SqlClient.SqlDataReader.GetSqlInt16(System.Int32)
  - System.Data.SqlClient.SqlDataReader.GetSqlInt32(System.Int32)
  - System.Data.SqlClient.SqlDataReader.GetSqlInt64(System.Int32)
  - System.Data.SqlClient.SqlDataReader.GetSqlMoney(System.Int32)
  - System.Data.SqlClient.SqlDataReader.GetSqlSingle(System.Int32)
  - System.Data.SqlClient.SqlDataReader.GetSqlString(System.Int32)
  - System.Data.SqlClient.SqlDataReader.GetSqlValue(System.Int32)
  - System.Data.SqlClient.SqlDataReader.GetSqlValues(System.Object[])
  - System.Data.SqlClient.SqlDataReader.GetSqlXml(System.Int32)
  - System.Data.SqlClient.SqlDataReader.GetStream(System.Int32)
  - System.Data.SqlClient.SqlDataReader.GetString(System.Int32)
  - System.Data.SqlClient.SqlDataReader.GetTextReader(System.Int32)
  - System.Data.SqlClient.SqlDataReader.GetTimeSpan(System.Int32)
  - System.Data.SqlClient.SqlDataReader.GetValue(System.Int32)
  - System.Data.SqlClient.SqlDataReader.GetValues(System.Object[])
  - System.Data.SqlClient.SqlDataReader.GetXmlReader(System.Int32)
  - System.Data.SqlClient.SqlDataReader.HasRows
  - System.Data.SqlClient.SqlDataReader.IsClosed
  - System.Data.SqlClient.SqlDataReader.IsDBNull(System.Int32)
  - System.Data.SqlClient.SqlDataReader.IsDBNullAsync(System.Int32,System.Threading.CancellationToken)
  - System.Data.SqlClient.SqlDataReader.Item(System.Int32)
  - System.Data.SqlClient.SqlDataReader.Item(System.String)
  - System.Data.SqlClient.SqlDataReader.NextResult
  - System.Data.SqlClient.SqlDataReader.NextResultAsync(System.Threading.CancellationToken)
  - System.Data.SqlClient.SqlDataReader.Read
  - System.Data.SqlClient.SqlDataReader.ReadAsync(System.Threading.CancellationToken)
  - System.Data.SqlClient.SqlDataReader.RecordsAffected
  - System.Data.SqlClient.SqlDataReader.VisibleFieldCount
  langs:
  - csharp
  - vb
  name: SqlDataReader
  nameWithType: SqlDataReader
  fullName: System.Data.SqlClient.SqlDataReader
  type: Class
  source:
    remote:
      path: src/System.Data.SqlClient/src/System/Data/SqlClient/SqlDataReader.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: SqlDataReader
    path: src/System.Data.SqlClient/src/System/Data/SqlClient/SqlDataReader.cs
    startLine: 25
  assemblies:
  - System.Data.SqlClient
  namespace: System.Data.SqlClient
  summary: "\n<p>Provides a way of reading a forward-only stream of rows from a SQL Server database. This class cannot be inherited.</p>\n"
  syntax:
    content: 'public class SqlDataReader : DbDataReader, IDbColumnSchemaGenerator'
    content.vb: >-
      Public Class SqlDataReader
          Inherits DbDataReader
          Implements IDbColumnSchemaGenerator
  inheritance:
  - System.Object
  implements:
  - System.IDisposable
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: System.Data.SqlClient.SqlDataReader.Connection
  commentId: P:System.Data.SqlClient.SqlDataReader.Connection
  id: Connection
  parent: System.Data.SqlClient.SqlDataReader
  langs:
  - csharp
  - vb
  name: Connection
  nameWithType: SqlDataReader.Connection
  fullName: System.Data.SqlClient.SqlDataReader.Connection
  type: Property
  source:
    remote:
      path: src/System.Data.SqlClient/src/System/Data/SqlClient/SqlDataReader.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: Connection
    path: src/System.Data.SqlClient/src/System/Data/SqlClient/SqlDataReader.cs
    startLine: 137
  assemblies:
  - System.Data.SqlClient
  namespace: System.Data.SqlClient
  summary: "\n<p>Gets the <xref href=\"System.Data.SqlClient.SqlConnection\" data-throw-if-not-resolved=\"false\"></xref> associated with the <xref href=\"System.Data.SqlClient.SqlDataReader\" data-throw-if-not-resolved=\"false\"></xref>.</p>\n"
  syntax:
    content: protected SqlConnection Connection { get; }
    content.vb: Protected ReadOnly Property Connection As SqlConnection
    parameters: []
    return:
      type: System.Data.SqlClient.SqlConnection
      description: "\n<p>The <xref href=\"System.Data.SqlClient.SqlConnection\" data-throw-if-not-resolved=\"false\"></xref> associated with the <xref href=\"System.Data.SqlClient.SqlDataReader\" data-throw-if-not-resolved=\"false\"></xref>.</p>\n"
  modifiers.csharp:
  - protected
  - get
  modifiers.vb:
  - Protected
  - ReadOnly
- uid: System.Data.SqlClient.SqlDataReader.Depth
  commentId: P:System.Data.SqlClient.SqlDataReader.Depth
  id: Depth
  parent: System.Data.SqlClient.SqlDataReader
  langs:
  - csharp
  - vb
  name: Depth
  nameWithType: SqlDataReader.Depth
  fullName: System.Data.SqlClient.SqlDataReader.Depth
  type: Property
  source:
    remote:
      path: src/System.Data.SqlClient/src/System/Data/SqlClient/SqlDataReader.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: Depth
    path: src/System.Data.SqlClient/src/System/Data/SqlClient/SqlDataReader.cs
    startLine: 145
  assemblies:
  - System.Data.SqlClient
  namespace: System.Data.SqlClient
  summary: "\n<p>Gets a value that indicates the depth of nesting for the current row.</p>\n"
  syntax:
    content: public override int Depth { get; }
    content.vb: Public Overrides ReadOnly Property Depth As Integer
    parameters: []
    return:
      type: System.Int32
      description: "\n<p>The depth of nesting for the current row.</p>\n"
  modifiers.csharp:
  - public
  - override
  - get
  modifiers.vb:
  - Public
  - Overrides
  - ReadOnly
- uid: System.Data.SqlClient.SqlDataReader.FieldCount
  commentId: P:System.Data.SqlClient.SqlDataReader.FieldCount
  id: FieldCount
  parent: System.Data.SqlClient.SqlDataReader
  langs:
  - csharp
  - vb
  name: FieldCount
  nameWithType: SqlDataReader.FieldCount
  fullName: System.Data.SqlClient.SqlDataReader.FieldCount
  type: Property
  source:
    remote:
      path: src/System.Data.SqlClient/src/System/Data/SqlClient/SqlDataReader.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: FieldCount
    path: src/System.Data.SqlClient/src/System/Data/SqlClient/SqlDataReader.cs
    startLine: 159
  assemblies:
  - System.Data.SqlClient
  namespace: System.Data.SqlClient
  summary: "\n<p>Gets the number of columns in the current row.</p>\n"
  syntax:
    content: public override int FieldCount { get; }
    content.vb: Public Overrides ReadOnly Property FieldCount As Integer
    parameters: []
    return:
      type: System.Int32
      description: "\n<p>When not positioned in a valid recordset, 0; otherwise the number of columns in the current row. The default is -1.</p>\n"
  exceptions:
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "\n<p>There is no current connection to an instance of SQL Server. </p>\n"
  modifiers.csharp:
  - public
  - override
  - get
  modifiers.vb:
  - Public
  - Overrides
  - ReadOnly
- uid: System.Data.SqlClient.SqlDataReader.HasRows
  commentId: P:System.Data.SqlClient.SqlDataReader.HasRows
  id: HasRows
  parent: System.Data.SqlClient.SqlDataReader
  langs:
  - csharp
  - vb
  name: HasRows
  nameWithType: SqlDataReader.HasRows
  fullName: System.Data.SqlClient.SqlDataReader.HasRows
  type: Property
  source:
    remote:
      path: src/System.Data.SqlClient/src/System/Data/SqlClient/SqlDataReader.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: HasRows
    path: src/System.Data.SqlClient/src/System/Data/SqlClient/SqlDataReader.cs
    startLine: 181
  assemblies:
  - System.Data.SqlClient
  namespace: System.Data.SqlClient
  summary: "\n<p>Gets a value that indicates whether the <xref href=\"System.Data.SqlClient.SqlDataReader\" data-throw-if-not-resolved=\"false\"></xref> contains one or more rows.</p>\n"
  syntax:
    content: public override bool HasRows { get; }
    content.vb: Public Overrides ReadOnly Property HasRows As Boolean
    parameters: []
    return:
      type: System.Boolean
      description: "\n<p>\n<strong>true</strong> if the <xref href=\"System.Data.SqlClient.SqlDataReader\" data-throw-if-not-resolved=\"false\"></xref> contains one or more rows; otherwise <strong>false</strong>.</p>\n"
  modifiers.csharp:
  - public
  - override
  - get
  modifiers.vb:
  - Public
  - Overrides
  - ReadOnly
- uid: System.Data.SqlClient.SqlDataReader.IsClosed
  commentId: P:System.Data.SqlClient.SqlDataReader.IsClosed
  id: IsClosed
  parent: System.Data.SqlClient.SqlDataReader
  langs:
  - csharp
  - vb
  name: IsClosed
  nameWithType: SqlDataReader.IsClosed
  fullName: System.Data.SqlClient.SqlDataReader.IsClosed
  type: Property
  source:
    remote:
      path: src/System.Data.SqlClient/src/System/Data/SqlClient/SqlDataReader.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: IsClosed
    path: src/System.Data.SqlClient/src/System/Data/SqlClient/SqlDataReader.cs
    startLine: 198
  assemblies:
  - System.Data.SqlClient
  namespace: System.Data.SqlClient
  summary: "\n<p>Retrieves a Boolean value that indicates whether the specified <xref href=\"System.Data.SqlClient.SqlDataReader\" data-throw-if-not-resolved=\"false\"></xref> instance has been closed. </p>\n"
  syntax:
    content: public override bool IsClosed { get; }
    content.vb: Public Overrides ReadOnly Property IsClosed As Boolean
    parameters: []
    return:
      type: System.Boolean
      description: "\n<p>\n<strong>true</strong> if the specified <xref href=\"System.Data.SqlClient.SqlDataReader\" data-throw-if-not-resolved=\"false\"></xref> instance is closed; otherwise <strong>false</strong>. </p>\n"
  modifiers.csharp:
  - public
  - override
  - get
  modifiers.vb:
  - Public
  - Overrides
  - ReadOnly
- uid: System.Data.SqlClient.SqlDataReader.Item(System.Int32)
  commentId: P:System.Data.SqlClient.SqlDataReader.Item(System.Int32)
  id: Item(System.Int32)
  parent: System.Data.SqlClient.SqlDataReader
  langs:
  - csharp
  - vb
  name: Item[Int32]
  nameWithType: SqlDataReader.Item[Int32]
  fullName: System.Data.SqlClient.SqlDataReader.Item[System.Int32]
  type: Property
  source:
    remote:
      path: src/System.Data.SqlClient/src/System/Data/SqlClient/SqlDataReader.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: this[]
    path: src/System.Data.SqlClient/src/System/Data/SqlClient/SqlDataReader.cs
    startLine: 373
  assemblies:
  - System.Data.SqlClient
  namespace: System.Data.SqlClient
  summary: "\n<p>Gets the value of the specified column in its native format given the column ordinal.</p>\n"
  syntax:
    content: public override object this[int i] { get; }
    content.vb: Public Overrides ReadOnly Property Item(i As Integer) As Object
    parameters:
    - id: i
      type: System.Int32
      description: "\n<p>The zero-based column ordinal. </p>\n"
    return:
      type: System.Object
      description: "\n<p>The value of the specified column in its native format.</p>\n"
  exceptions:
  - type: System.IndexOutOfRangeException
    commentId: T:System.IndexOutOfRangeException
    description: "\n<p>The index passed was outside the range of 0 through <xref href=\"System.Data.IDataRecord.FieldCount\" data-throw-if-not-resolved=\"false\"></xref>. </p>\n"
  nameWithType.vb: SqlDataReader.Item(Int32)
  modifiers.csharp:
  - public
  - override
  - get
  modifiers.vb:
  - Public
  - Overrides
  - ReadOnly
  fullName.vb: System.Data.SqlClient.SqlDataReader.Item(System.Int32)
  name.vb: Item(Int32)
- uid: System.Data.SqlClient.SqlDataReader.Item(System.String)
  commentId: P:System.Data.SqlClient.SqlDataReader.Item(System.String)
  id: Item(System.String)
  parent: System.Data.SqlClient.SqlDataReader
  langs:
  - csharp
  - vb
  name: Item[String]
  nameWithType: SqlDataReader.Item[String]
  fullName: System.Data.SqlClient.SqlDataReader.Item[System.String]
  type: Property
  source:
    remote:
      path: src/System.Data.SqlClient/src/System/Data/SqlClient/SqlDataReader.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: this[]
    path: src/System.Data.SqlClient/src/System/Data/SqlClient/SqlDataReader.cs
    startLine: 381
  assemblies:
  - System.Data.SqlClient
  namespace: System.Data.SqlClient
  summary: "\n<p>Gets the value of the specified column in its native format given the column name.</p>\n"
  syntax:
    content: public override object this[string name] { get; }
    content.vb: Public Overrides ReadOnly Property Item(name As String) As Object
    parameters:
    - id: name
      type: System.String
      description: "\n<p>The column name. </p>\n"
    return:
      type: System.Object
      description: "\n<p>The value of the specified column in its native format.</p>\n"
  exceptions:
  - type: System.IndexOutOfRangeException
    commentId: T:System.IndexOutOfRangeException
    description: "\n<p>No column with the specified name was found. </p>\n"
  nameWithType.vb: SqlDataReader.Item(String)
  modifiers.csharp:
  - public
  - override
  - get
  modifiers.vb:
  - Public
  - Overrides
  - ReadOnly
  fullName.vb: System.Data.SqlClient.SqlDataReader.Item(System.String)
  name.vb: Item(String)
- uid: System.Data.SqlClient.SqlDataReader.RecordsAffected
  commentId: P:System.Data.SqlClient.SqlDataReader.RecordsAffected
  id: RecordsAffected
  parent: System.Data.SqlClient.SqlDataReader
  langs:
  - csharp
  - vb
  name: RecordsAffected
  nameWithType: SqlDataReader.RecordsAffected
  fullName: System.Data.SqlClient.SqlDataReader.RecordsAffected
  type: Property
  source:
    remote:
      path: src/System.Data.SqlClient/src/System/Data/SqlClient/SqlDataReader.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: RecordsAffected
    path: src/System.Data.SqlClient/src/System/Data/SqlClient/SqlDataReader.cs
    startLine: 326
  assemblies:
  - System.Data.SqlClient
  namespace: System.Data.SqlClient
  summary: "\n<p>Gets the number of rows changed, inserted, or deleted by execution of the Transact-SQL statement.</p>\n"
  syntax:
    content: public override int RecordsAffected { get; }
    content.vb: Public Overrides ReadOnly Property RecordsAffected As Integer
    parameters: []
    return:
      type: System.Int32
      description: "\n<p>The number of rows changed, inserted, or deleted; 0 if no rows were affected or the statement failed; and -1 for SELECT statements.</p>\n"
  modifiers.csharp:
  - public
  - override
  - get
  modifiers.vb:
  - Public
  - Overrides
  - ReadOnly
- uid: System.Data.SqlClient.SqlDataReader.VisibleFieldCount
  commentId: P:System.Data.SqlClient.SqlDataReader.VisibleFieldCount
  id: VisibleFieldCount
  parent: System.Data.SqlClient.SqlDataReader
  langs:
  - csharp
  - vb
  name: VisibleFieldCount
  nameWithType: SqlDataReader.VisibleFieldCount
  fullName: System.Data.SqlClient.SqlDataReader.VisibleFieldCount
  type: Property
  source:
    remote:
      path: src/System.Data.SqlClient/src/System/Data/SqlClient/SqlDataReader.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: VisibleFieldCount
    path: src/System.Data.SqlClient/src/System/Data/SqlClient/SqlDataReader.cs
    startLine: 355
  assemblies:
  - System.Data.SqlClient
  namespace: System.Data.SqlClient
  summary: "\n<p>Gets the number of fields in the <xref href=\"System.Data.SqlClient.SqlDataReader\" data-throw-if-not-resolved=\"false\"></xref> that are not hidden. </p>\n"
  syntax:
    content: public override int VisibleFieldCount { get; }
    content.vb: Public Overrides ReadOnly Property VisibleFieldCount As Integer
    parameters: []
    return:
      type: System.Int32
      description: "\n<p>The number of fields that are not hidden.</p>\n"
  modifiers.csharp:
  - public
  - override
  - get
  modifiers.vb:
  - Public
  - Overrides
  - ReadOnly
- uid: System.Data.SqlClient.SqlDataReader.GetBoolean(System.Int32)
  commentId: M:System.Data.SqlClient.SqlDataReader.GetBoolean(System.Int32)
  id: GetBoolean(System.Int32)
  parent: System.Data.SqlClient.SqlDataReader
  langs:
  - csharp
  - vb
  name: GetBoolean(Int32)
  nameWithType: SqlDataReader.GetBoolean(Int32)
  fullName: System.Data.SqlClient.SqlDataReader.GetBoolean(System.Int32)
  type: Method
  source:
    remote:
      path: src/System.Data.SqlClient/src/System/Data/SqlClient/SqlDataReader.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: GetBoolean
    path: src/System.Data.SqlClient/src/System/Data/SqlClient/SqlDataReader.cs
    startLine: 1070
  assemblies:
  - System.Data.SqlClient
  namespace: System.Data.SqlClient
  summary: "\n<p>Gets the value of the specified column as a Boolean.</p>\n"
  syntax:
    content: public override bool GetBoolean(int i)
    content.vb: Public Overrides Function GetBoolean(i As Integer) As Boolean
    parameters:
    - id: i
      type: System.Int32
      description: "\n<p>The zero-based column ordinal. </p>\n"
    return:
      type: System.Boolean
      description: "\n<p>The value of the column.</p>\n"
  exceptions:
  - type: System.InvalidCastException
    commentId: T:System.InvalidCastException
    description: "\n<p>The specified cast is not valid. </p>\n"
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
- uid: System.Data.SqlClient.SqlDataReader.GetByte(System.Int32)
  commentId: M:System.Data.SqlClient.SqlDataReader.GetByte(System.Int32)
  id: GetByte(System.Int32)
  parent: System.Data.SqlClient.SqlDataReader
  langs:
  - csharp
  - vb
  name: GetByte(Int32)
  nameWithType: SqlDataReader.GetByte(Int32)
  fullName: System.Data.SqlClient.SqlDataReader.GetByte(System.Int32)
  type: Method
  source:
    remote:
      path: src/System.Data.SqlClient/src/System/Data/SqlClient/SqlDataReader.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: GetByte
    path: src/System.Data.SqlClient/src/System/Data/SqlClient/SqlDataReader.cs
    startLine: 1156
  assemblies:
  - System.Data.SqlClient
  namespace: System.Data.SqlClient
  summary: "\n<p>Gets the value of the specified column as a byte.</p>\n"
  syntax:
    content: public override byte GetByte(int i)
    content.vb: Public Overrides Function GetByte(i As Integer) As Byte
    parameters:
    - id: i
      type: System.Int32
      description: "\n<p>The zero-based column ordinal. </p>\n"
    return:
      type: System.Byte
      description: "\n<p>The value of the specified column as a byte.</p>\n"
  exceptions:
  - type: System.InvalidCastException
    commentId: T:System.InvalidCastException
    description: "\n<p>The specified cast is not valid. </p>\n"
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
- uid: System.Data.SqlClient.SqlDataReader.GetBytes(System.Int32,System.Int64,System.Byte[],System.Int32,System.Int32)
  commentId: M:System.Data.SqlClient.SqlDataReader.GetBytes(System.Int32,System.Int64,System.Byte[],System.Int32,System.Int32)
  id: GetBytes(System.Int32,System.Int64,System.Byte[],System.Int32,System.Int32)
  parent: System.Data.SqlClient.SqlDataReader
  langs:
  - csharp
  - vb
  name: GetBytes(Int32, Int64, Byte[], Int32, Int32)
  nameWithType: SqlDataReader.GetBytes(Int32, Int64, Byte[], Int32, Int32)
  fullName: System.Data.SqlClient.SqlDataReader.GetBytes(System.Int32, System.Int64, System.Byte[], System.Int32, System.Int32)
  type: Method
  source:
    remote:
      path: src/System.Data.SqlClient/src/System/Data/SqlClient/SqlDataReader.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: GetBytes
    path: src/System.Data.SqlClient/src/System/Data/SqlClient/SqlDataReader.cs
    startLine: 1162
  assemblies:
  - System.Data.SqlClient
  namespace: System.Data.SqlClient
  summary: "\n<p>Reads a stream of bytes from the specified column offset into the buffer an array starting at the given buffer offset.</p>\n"
  syntax:
    content: public override long GetBytes(int i, long dataIndex, byte[] buffer, int bufferIndex, int length)
    content.vb: Public Overrides Function GetBytes(i As Integer, dataIndex As Long, buffer As Byte(), bufferIndex As Integer, length As Integer) As Long
    parameters:
    - id: i
      type: System.Int32
      description: "\n<p>The zero-based column ordinal. </p>\n"
    - id: dataIndex
      type: System.Int64
      description: "\n<p>The index within the field from which to begin the read operation.</p>\n"
    - id: buffer
      type: System.Byte[]
      description: "\n<p>The buffer into which to read the stream of bytes. </p>\n"
    - id: bufferIndex
      type: System.Int32
      description: "\n<p>The index within the <em>buffer</em> where the write operation is to start. </p>\n"
    - id: length
      type: System.Int32
      description: "\n<p>The maximum length to copy into the buffer. </p>\n"
    return:
      type: System.Int64
      description: "\n<p>The actual number of bytes read.</p>\n"
  nameWithType.vb: SqlDataReader.GetBytes(Int32, Int64, Byte(), Int32, Int32)
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
  fullName.vb: System.Data.SqlClient.SqlDataReader.GetBytes(System.Int32, System.Int64, System.Byte(), System.Int32, System.Int32)
  name.vb: GetBytes(Int32, Int64, Byte(), Int32, Int32)
- uid: System.Data.SqlClient.SqlDataReader.GetChar(System.Int32)
  commentId: M:System.Data.SqlClient.SqlDataReader.GetChar(System.Int32)
  id: GetChar(System.Int32)
  parent: System.Data.SqlClient.SqlDataReader
  langs:
  - csharp
  - vb
  name: GetChar(Int32)
  nameWithType: SqlDataReader.GetChar(Int32)
  fullName: System.Data.SqlClient.SqlDataReader.GetChar(System.Int32)
  type: Method
  source:
    remote:
      path: src/System.Data.SqlClient/src/System/Data/SqlClient/SqlDataReader.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: GetChar
    path: src/System.Data.SqlClient/src/System/Data/SqlClient/SqlDataReader.cs
    startLine: 1542
  assemblies:
  - System.Data.SqlClient
  namespace: System.Data.SqlClient
  summary: "\n<p>Gets the value of the specified column as a single character.</p>\n"
  syntax:
    content: public override char GetChar(int i)
    content.vb: Public Overrides Function GetChar(i As Integer) As Char
    parameters:
    - id: i
      type: System.Int32
      description: "\n<p>The zero-based column ordinal. </p>\n"
    return:
      type: System.Char
      description: "\n<p>The value of the specified column.</p>\n"
  exceptions:
  - type: System.InvalidCastException
    commentId: T:System.InvalidCastException
    description: "\n<p>The specified cast is not valid. </p>\n"
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
- uid: System.Data.SqlClient.SqlDataReader.GetChars(System.Int32,System.Int64,System.Char[],System.Int32,System.Int32)
  commentId: M:System.Data.SqlClient.SqlDataReader.GetChars(System.Int32,System.Int64,System.Char[],System.Int32,System.Int32)
  id: GetChars(System.Int32,System.Int64,System.Char[],System.Int32,System.Int32)
  parent: System.Data.SqlClient.SqlDataReader
  langs:
  - csharp
  - vb
  name: GetChars(Int32, Int64, Char[], Int32, Int32)
  nameWithType: SqlDataReader.GetChars(Int32, Int64, Char[], Int32, Int32)
  fullName: System.Data.SqlClient.SqlDataReader.GetChars(System.Int32, System.Int64, System.Char[], System.Int32, System.Int32)
  type: Method
  source:
    remote:
      path: src/System.Data.SqlClient/src/System/Data/SqlClient/SqlDataReader.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: GetChars
    path: src/System.Data.SqlClient/src/System/Data/SqlClient/SqlDataReader.cs
    startLine: 1547
  assemblies:
  - System.Data.SqlClient
  namespace: System.Data.SqlClient
  summary: "\n<p>Reads a stream of characters from the specified column offset into the buffer as an array starting at the given buffer offset.</p>\n"
  syntax:
    content: public override long GetChars(int i, long dataIndex, char[] buffer, int bufferIndex, int length)
    content.vb: Public Overrides Function GetChars(i As Integer, dataIndex As Long, buffer As Char(), bufferIndex As Integer, length As Integer) As Long
    parameters:
    - id: i
      type: System.Int32
      description: "\n<p>The zero-based column ordinal. </p>\n"
    - id: dataIndex
      type: System.Int64
      description: "\n<p>The index within the field from which to begin the read operation.</p>\n"
    - id: buffer
      type: System.Char[]
      description: "\n<p>The buffer into which to read the stream of bytes. </p>\n"
    - id: bufferIndex
      type: System.Int32
      description: "\n<p>The index within the <em>buffer</em> where the write operation is to start. </p>\n"
    - id: length
      type: System.Int32
      description: "\n<p>The maximum length to copy into the buffer. </p>\n"
    return:
      type: System.Int64
      description: "\n<p>The actual number of characters read.</p>\n"
  nameWithType.vb: SqlDataReader.GetChars(Int32, Int64, Char(), Int32, Int32)
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
  fullName.vb: System.Data.SqlClient.SqlDataReader.GetChars(System.Int32, System.Int64, System.Char(), System.Int32, System.Int32)
  name.vb: GetChars(Int32, Int64, Char(), Int32, Int32)
- uid: System.Data.SqlClient.SqlDataReader.GetDataTypeName(System.Int32)
  commentId: M:System.Data.SqlClient.SqlDataReader.GetDataTypeName(System.Int32)
  id: GetDataTypeName(System.Int32)
  parent: System.Data.SqlClient.SqlDataReader
  langs:
  - csharp
  - vb
  name: GetDataTypeName(Int32)
  nameWithType: SqlDataReader.GetDataTypeName(Int32)
  fullName: System.Data.SqlClient.SqlDataReader.GetDataTypeName(System.Int32)
  type: Method
  source:
    remote:
      path: src/System.Data.SqlClient/src/System/Data/SqlClient/SqlDataReader.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: GetDataTypeName
    path: src/System.Data.SqlClient/src/System/Data/SqlClient/SqlDataReader.cs
    startLine: 826
  assemblies:
  - System.Data.SqlClient
  namespace: System.Data.SqlClient
  summary: "\n<p>Gets a string representing the data type of the specified column.</p>\n"
  syntax:
    content: public override string GetDataTypeName(int i)
    content.vb: Public Overrides Function GetDataTypeName(i As Integer) As String
    parameters:
    - id: i
      type: System.Int32
      description: "\n<p>The zero-based ordinal position of the column to find.</p>\n"
    return:
      type: System.String
      description: "\n<p>The string representing the data type of the specified column.</p>\n"
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
- uid: System.Data.SqlClient.SqlDataReader.GetDateTime(System.Int32)
  commentId: M:System.Data.SqlClient.SqlDataReader.GetDateTime(System.Int32)
  id: GetDateTime(System.Int32)
  parent: System.Data.SqlClient.SqlDataReader
  langs:
  - csharp
  - vb
  name: GetDateTime(Int32)
  nameWithType: SqlDataReader.GetDateTime(Int32)
  fullName: System.Data.SqlClient.SqlDataReader.GetDateTime(System.Int32)
  type: Method
  source:
    remote:
      path: src/System.Data.SqlClient/src/System/Data/SqlClient/SqlDataReader.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: GetDateTime
    path: src/System.Data.SqlClient/src/System/Data/SqlClient/SqlDataReader.cs
    startLine: 1806
  assemblies:
  - System.Data.SqlClient
  namespace: System.Data.SqlClient
  summary: "\n<p>Gets the value of the specified column as a <xref href=\"System.DateTime\" data-throw-if-not-resolved=\"false\"></xref> object.</p>\n"
  syntax:
    content: public override DateTime GetDateTime(int i)
    content.vb: Public Overrides Function GetDateTime(i As Integer) As Date
    parameters:
    - id: i
      type: System.Int32
      description: "\n<p>The zero-based column ordinal. </p>\n"
    return:
      type: System.DateTime
      description: "\n<p>The value of the specified column.</p>\n"
  exceptions:
  - type: System.InvalidCastException
    commentId: T:System.InvalidCastException
    description: "\n<p>The specified cast is not valid. </p>\n"
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
- uid: System.Data.SqlClient.SqlDataReader.GetDateTimeOffset(System.Int32)
  commentId: M:System.Data.SqlClient.SqlDataReader.GetDateTimeOffset(System.Int32)
  id: GetDateTimeOffset(System.Int32)
  parent: System.Data.SqlClient.SqlDataReader
  langs:
  - csharp
  - vb
  name: GetDateTimeOffset(Int32)
  nameWithType: SqlDataReader.GetDateTimeOffset(Int32)
  fullName: System.Data.SqlClient.SqlDataReader.GetDateTimeOffset(System.Int32)
  type: Method
  source:
    remote:
      path: src/System.Data.SqlClient/src/System/Data/SqlClient/SqlDataReader.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: GetDateTimeOffset
    path: src/System.Data.SqlClient/src/System/Data/SqlClient/SqlDataReader.cs
    startLine: 2181
  assemblies:
  - System.Data.SqlClient
  namespace: System.Data.SqlClient
  summary: "\n<p>Retrieves the value of the specified column as a <xref href=\"System.DateTimeOffset\" data-throw-if-not-resolved=\"false\"></xref> object.</p>\n"
  syntax:
    content: public virtual DateTimeOffset GetDateTimeOffset(int i)
    content.vb: Public Overridable Function GetDateTimeOffset(i As Integer) As DateTimeOffset
    parameters:
    - id: i
      type: System.Int32
      description: "\n<p>The zero-based column ordinal. </p>\n"
    return:
      type: System.DateTimeOffset
      description: "\n<p>The value of the specified column.</p>\n"
  exceptions:
  - type: System.InvalidCastException
    commentId: T:System.InvalidCastException
    description: "\n<p>The specified cast is not valid. </p>\n"
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: System.Data.SqlClient.SqlDataReader.GetDecimal(System.Int32)
  commentId: M:System.Data.SqlClient.SqlDataReader.GetDecimal(System.Int32)
  id: GetDecimal(System.Int32)
  parent: System.Data.SqlClient.SqlDataReader
  langs:
  - csharp
  - vb
  name: GetDecimal(Int32)
  nameWithType: SqlDataReader.GetDecimal(Int32)
  fullName: System.Data.SqlClient.SqlDataReader.GetDecimal(System.Int32)
  type: Method
  source:
    remote:
      path: src/System.Data.SqlClient/src/System/Data/SqlClient/SqlDataReader.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: GetDecimal
    path: src/System.Data.SqlClient/src/System/Data/SqlClient/SqlDataReader.cs
    startLine: 1827
  assemblies:
  - System.Data.SqlClient
  namespace: System.Data.SqlClient
  summary: "\n<p>Gets the value of the specified column as a <xref href=\"System.Decimal\" data-throw-if-not-resolved=\"false\"></xref> object.</p>\n"
  syntax:
    content: public override decimal GetDecimal(int i)
    content.vb: Public Overrides Function GetDecimal(i As Integer) As Decimal
    parameters:
    - id: i
      type: System.Int32
      description: "\n<p>The zero-based column ordinal. </p>\n"
    return:
      type: System.Decimal
      description: "\n<p>The value of the specified column.</p>\n"
  exceptions:
  - type: System.InvalidCastException
    commentId: T:System.InvalidCastException
    description: "\n<p>The specified cast is not valid. </p>\n"
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
- uid: System.Data.SqlClient.SqlDataReader.GetDouble(System.Int32)
  commentId: M:System.Data.SqlClient.SqlDataReader.GetDouble(System.Int32)
  id: GetDouble(System.Int32)
  parent: System.Data.SqlClient.SqlDataReader
  langs:
  - csharp
  - vb
  name: GetDouble(Int32)
  nameWithType: SqlDataReader.GetDouble(Int32)
  fullName: System.Data.SqlClient.SqlDataReader.GetDouble(System.Int32)
  type: Method
  source:
    remote:
      path: src/System.Data.SqlClient/src/System/Data/SqlClient/SqlDataReader.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: GetDouble
    path: src/System.Data.SqlClient/src/System/Data/SqlClient/SqlDataReader.cs
    startLine: 1833
  assemblies:
  - System.Data.SqlClient
  namespace: System.Data.SqlClient
  summary: "\n<p>Gets the value of the specified column as a double-precision floating point number.</p>\n"
  syntax:
    content: public override double GetDouble(int i)
    content.vb: Public Overrides Function GetDouble(i As Integer) As Double
    parameters:
    - id: i
      type: System.Int32
      description: "\n<p>The zero-based column ordinal. </p>\n"
    return:
      type: System.Double
      description: "\n<p>The value of the specified column.</p>\n"
  exceptions:
  - type: System.InvalidCastException
    commentId: T:System.InvalidCastException
    description: "\n<p>The specified cast is not valid. </p>\n"
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
- uid: System.Data.SqlClient.SqlDataReader.GetEnumerator
  commentId: M:System.Data.SqlClient.SqlDataReader.GetEnumerator
  id: GetEnumerator
  parent: System.Data.SqlClient.SqlDataReader
  langs:
  - csharp
  - vb
  name: GetEnumerator()
  nameWithType: SqlDataReader.GetEnumerator()
  fullName: System.Data.SqlClient.SqlDataReader.GetEnumerator()
  type: Method
  source:
    remote:
      path: src/System.Data.SqlClient/src/System/Data/SqlClient/SqlDataReader.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: GetEnumerator
    path: src/System.Data.SqlClient/src/System/Data/SqlClient/SqlDataReader.cs
    startLine: 893
  assemblies:
  - System.Data.SqlClient
  namespace: System.Data.SqlClient
  summary: "\n<p>Returns an <xref href=\"System.Collections.IEnumerator\" data-throw-if-not-resolved=\"false\"></xref> that iterates through the <xref href=\"System.Data.SqlClient.SqlDataReader\" data-throw-if-not-resolved=\"false\"></xref>.</p>\n"
  syntax:
    content: public override IEnumerator GetEnumerator()
    content.vb: Public Overrides Function GetEnumerator As IEnumerator
    return:
      type: System.Collections.IEnumerator
      description: "\n<p>An <xref href=\"System.Collections.IEnumerator\" data-throw-if-not-resolved=\"false\"></xref> for the <xref href=\"System.Data.SqlClient.SqlDataReader\" data-throw-if-not-resolved=\"false\"></xref>.</p>\n"
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
- uid: System.Data.SqlClient.SqlDataReader.GetFieldType(System.Int32)
  commentId: M:System.Data.SqlClient.SqlDataReader.GetFieldType(System.Int32)
  id: GetFieldType(System.Int32)
  parent: System.Data.SqlClient.SqlDataReader
  langs:
  - csharp
  - vb
  name: GetFieldType(Int32)
  nameWithType: SqlDataReader.GetFieldType(Int32)
  fullName: System.Data.SqlClient.SqlDataReader.GetFieldType(System.Int32)
  type: Method
  source:
    remote:
      path: src/System.Data.SqlClient/src/System/Data/SqlClient/SqlDataReader.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: GetFieldType
    path: src/System.Data.SqlClient/src/System/Data/SqlClient/SqlDataReader.cs
    startLine: 898
  assemblies:
  - System.Data.SqlClient
  namespace: System.Data.SqlClient
  summary: "\n<p>Gets the <xref href=\"System.Type\" data-throw-if-not-resolved=\"false\"></xref> that is the data type of the object.</p>\n"
  syntax:
    content: public override Type GetFieldType(int i)
    content.vb: Public Overrides Function GetFieldType(i As Integer) As Type
    parameters:
    - id: i
      type: System.Int32
      description: "\n<p>The zero-based column ordinal. </p>\n"
    return:
      type: System.Type
      description: "\n<p>The <xref href=\"System.Type\" data-throw-if-not-resolved=\"false\"></xref> that is the data type of the object. If the type does not exist on the client, in the case of a User-Defined Type (UDT) returned from the database, <strong>GetFieldType</strong> returns null.</p>\n"
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
- uid: System.Data.SqlClient.SqlDataReader.GetFieldValue``1(System.Int32)
  commentId: M:System.Data.SqlClient.SqlDataReader.GetFieldValue``1(System.Int32)
  id: GetFieldValue``1(System.Int32)
  parent: System.Data.SqlClient.SqlDataReader
  langs:
  - csharp
  - vb
  name: GetFieldValue<T>(Int32)
  nameWithType: SqlDataReader.GetFieldValue<T>(Int32)
  fullName: System.Data.SqlClient.SqlDataReader.GetFieldValue<T>(System.Int32)
  type: Method
  source:
    remote:
      path: src/System.Data.SqlClient/src/System/Data/SqlClient/SqlDataReader.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: GetFieldValue
    path: src/System.Data.SqlClient/src/System/Data/SqlClient/SqlDataReader.cs
    startLine: 2128
  assemblies:
  - System.Data.SqlClient
  namespace: System.Data.SqlClient
  summary: "\n<p>Synchronously gets the value of the specified column as a type. <xref href=\"System.Data.SqlClient.SqlDataReader.GetFieldValueAsync``1(System.Int32,System.Threading.CancellationToken)\" data-throw-if-not-resolved=\"false\"></xref> is the asynchronous version of this method.</p>\n"
  syntax:
    content: public override T GetFieldValue<T>(int i)
    content.vb: Public Overrides Function GetFieldValue(Of T)(i As Integer) As T
    parameters:
    - id: i
      type: System.Int32
      description: "\n<p>The column to be retrieved.</p>\n"
    typeParameters:
    - id: T
      description: "\n<p>The type of the value to be returned. See the remarks section for more information.</p>\n"
    return:
      type: '{T}'
      description: "\n<p>The returned type object.</p>\n"
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "\n<p>The connection drops or is closed during the data retrieval.</p>\n<p>The <xref href=\"System.Data.SqlClient.SqlDataReader\" data-throw-if-not-resolved=\"false\"></xref> is closed during the data retrieval.</p>\n<p>There is no data ready to be read (for example, the first <xref href=\"System.Data.SqlClient.SqlDataReader.Read\" data-throw-if-not-resolved=\"false\"></xref> hasn't been called, or returned false).</p>\n<p>Tried to read a previously-read column in sequential mode.</p>\n<p>There was an asynchronous operation in progress. This applies to all Get* methods when running in sequential mode, as they could be called while reading a stream.</p>\n"
  - type: System.IndexOutOfRangeException
    commentId: T:System.IndexOutOfRangeException
    description: "\n<p>Trying to read a column that does not exist.</p>\n"
  - type: System.Data.SqlTypes.SqlNullValueException
    commentId: T:System.Data.SqlTypes.SqlNullValueException
    description: "\n<p>The value of the column was null (<xref href=\"System.Data.SqlClient.SqlDataReader.IsDBNull(System.Int32)\" data-throw-if-not-resolved=\"false\"></xref> == <strong>true</strong>), retrieving a non-SQL type.</p>\n"
  - type: System.InvalidCastException
    commentId: T:System.InvalidCastException
    description: "\n<p>\n<em>T</em> doesn’t match the type returned by SQL Server or cannot be cast.</p>\n"
  nameWithType.vb: SqlDataReader.GetFieldValue(Of T)(Int32)
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
  fullName.vb: System.Data.SqlClient.SqlDataReader.GetFieldValue(Of T)(System.Int32)
  name.vb: GetFieldValue(Of T)(Int32)
- uid: System.Data.SqlClient.SqlDataReader.GetFieldValueAsync``1(System.Int32,System.Threading.CancellationToken)
  commentId: M:System.Data.SqlClient.SqlDataReader.GetFieldValueAsync``1(System.Int32,System.Threading.CancellationToken)
  id: GetFieldValueAsync``1(System.Int32,System.Threading.CancellationToken)
  parent: System.Data.SqlClient.SqlDataReader
  langs:
  - csharp
  - vb
  name: GetFieldValueAsync<T>(Int32, CancellationToken)
  nameWithType: SqlDataReader.GetFieldValueAsync<T>(Int32, CancellationToken)
  fullName: System.Data.SqlClient.SqlDataReader.GetFieldValueAsync<T>(System.Int32, System.Threading.CancellationToken)
  type: Method
  source:
    remote:
      path: src/System.Data.SqlClient/src/System/Data/SqlClient/SqlDataReader.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: GetFieldValueAsync
    path: src/System.Data.SqlClient/src/System/Data/SqlClient/SqlDataReader.cs
    startLine: 4148
  assemblies:
  - System.Data.SqlClient
  namespace: System.Data.SqlClient
  summary: "\n<p>Asynchronously gets the value of the specified column as a type. <xref href=\"System.Data.SqlClient.SqlDataReader.GetFieldValue``1(System.Int32)\" data-throw-if-not-resolved=\"false\"></xref> is the synchronous version of this method.</p>\n"
  syntax:
    content: public override Task<T> GetFieldValueAsync<T>(int i, CancellationToken cancellationToken)
    content.vb: Public Overrides Function GetFieldValueAsync(Of T)(i As Integer, cancellationToken As CancellationToken) As Task(Of T)
    parameters:
    - id: i
      type: System.Int32
      description: "\n<p>The column to be retrieved.</p>\n"
    - id: cancellationToken
      type: System.Threading.CancellationToken
      description: "\n<p>The cancellation instruction, which propagates a notification that operations should be canceled. This does not guarantee the cancellation. A setting of <strong>CancellationToken.None</strong> makes this method equivalent to <xref href=\"System.Data.SqlClient.SqlDataReader.IsDBNull(System.Int32)\" data-throw-if-not-resolved=\"false\"></xref>. The returned task must be marked as cancelled.</p>\n"
    typeParameters:
    - id: T
      description: "\n<p>The type of the value to be returned. See the remarks section for more information.</p>\n"
    return:
      type: System.Threading.Tasks.Task{{T}}
      description: "\n<p>The returned type object.</p>\n"
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "\n<p>The connection drops or is closed during the data retrieval.</p>\n<p>The <xref href=\"System.Data.SqlClient.SqlDataReader\" data-throw-if-not-resolved=\"false\"></xref> is closed during the data retrieval.</p>\n<p>There is no data ready to be read (for example, the first <xref href=\"System.Data.SqlClient.SqlDataReader.Read\" data-throw-if-not-resolved=\"false\"></xref> hasn't been called, or returned false).</p>\n<p>Tried to read a previously-read column in sequential mode.</p>\n<p>There was an asynchronous operation in progress. This applies to all Get* methods when running in sequential mode, as they could be called while reading a stream.</p>\n<p>\n<strong>Context Connection=true</strong> is specified in the connection string.</p>\n"
  - type: System.IndexOutOfRangeException
    commentId: T:System.IndexOutOfRangeException
    description: "\n<p>Trying to read a column that does not exist.</p>\n"
  - type: System.Data.SqlTypes.SqlNullValueException
    commentId: T:System.Data.SqlTypes.SqlNullValueException
    description: "\n<p>The value of the column was null (<xref href=\"System.Data.SqlClient.SqlDataReader.IsDBNull(System.Int32)\" data-throw-if-not-resolved=\"false\"></xref> == <strong>true</strong>), retrieving a non-SQL type.</p>\n"
  - type: System.InvalidCastException
    commentId: T:System.InvalidCastException
    description: "\n<p>\n<em>T</em> doesn’t match the type returned by SQL Server or cannot be cast.</p>\n"
  nameWithType.vb: SqlDataReader.GetFieldValueAsync(Of T)(Int32, CancellationToken)
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
  fullName.vb: System.Data.SqlClient.SqlDataReader.GetFieldValueAsync(Of T)(System.Int32, System.Threading.CancellationToken)
  name.vb: GetFieldValueAsync(Of T)(Int32, CancellationToken)
- uid: System.Data.SqlClient.SqlDataReader.GetFloat(System.Int32)
  commentId: M:System.Data.SqlClient.SqlDataReader.GetFloat(System.Int32)
  id: GetFloat(System.Int32)
  parent: System.Data.SqlClient.SqlDataReader
  langs:
  - csharp
  - vb
  name: GetFloat(Int32)
  nameWithType: SqlDataReader.GetFloat(Int32)
  fullName: System.Data.SqlClient.SqlDataReader.GetFloat(System.Int32)
  type: Method
  source:
    remote:
      path: src/System.Data.SqlClient/src/System/Data/SqlClient/SqlDataReader.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: GetFloat
    path: src/System.Data.SqlClient/src/System/Data/SqlClient/SqlDataReader.cs
    startLine: 1839
  assemblies:
  - System.Data.SqlClient
  namespace: System.Data.SqlClient
  summary: "\n<p>Gets the value of the specified column as a single-precision floating point number.</p>\n"
  syntax:
    content: public override float GetFloat(int i)
    content.vb: Public Overrides Function GetFloat(i As Integer) As Single
    parameters:
    - id: i
      type: System.Int32
      description: "\n<p>The zero-based column ordinal. </p>\n"
    return:
      type: System.Single
      description: "\n<p>The value of the specified column.</p>\n"
  exceptions:
  - type: System.InvalidCastException
    commentId: T:System.InvalidCastException
    description: "\n<p>The specified cast is not valid. </p>\n"
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
- uid: System.Data.SqlClient.SqlDataReader.GetGuid(System.Int32)
  commentId: M:System.Data.SqlClient.SqlDataReader.GetGuid(System.Int32)
  id: GetGuid(System.Int32)
  parent: System.Data.SqlClient.SqlDataReader
  langs:
  - csharp
  - vb
  name: GetGuid(Int32)
  nameWithType: SqlDataReader.GetGuid(Int32)
  fullName: System.Data.SqlClient.SqlDataReader.GetGuid(System.Int32)
  type: Method
  source:
    remote:
      path: src/System.Data.SqlClient/src/System/Data/SqlClient/SqlDataReader.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: GetGuid
    path: src/System.Data.SqlClient/src/System/Data/SqlClient/SqlDataReader.cs
    startLine: 1845
  assemblies:
  - System.Data.SqlClient
  namespace: System.Data.SqlClient
  summary: "\n<p>Gets the value of the specified column as a globally unique identifier (GUID).</p>\n"
  syntax:
    content: public override Guid GetGuid(int i)
    content.vb: Public Overrides Function GetGuid(i As Integer) As Guid
    parameters:
    - id: i
      type: System.Int32
      description: "\n<p>The zero-based column ordinal. </p>\n"
    return:
      type: System.Guid
      description: "\n<p>The value of the specified column.</p>\n"
  exceptions:
  - type: System.InvalidCastException
    commentId: T:System.InvalidCastException
    description: "\n<p>The specified cast is not valid. </p>\n"
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
- uid: System.Data.SqlClient.SqlDataReader.GetInt16(System.Int32)
  commentId: M:System.Data.SqlClient.SqlDataReader.GetInt16(System.Int32)
  id: GetInt16(System.Int32)
  parent: System.Data.SqlClient.SqlDataReader
  langs:
  - csharp
  - vb
  name: GetInt16(Int32)
  nameWithType: SqlDataReader.GetInt16(Int32)
  fullName: System.Data.SqlClient.SqlDataReader.GetInt16(System.Int32)
  type: Method
  source:
    remote:
      path: src/System.Data.SqlClient/src/System/Data/SqlClient/SqlDataReader.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: GetInt16
    path: src/System.Data.SqlClient/src/System/Data/SqlClient/SqlDataReader.cs
    startLine: 1851
  assemblies:
  - System.Data.SqlClient
  namespace: System.Data.SqlClient
  summary: "\n<p>Gets the value of the specified column as a 16-bit signed integer.</p>\n"
  syntax:
    content: public override short GetInt16(int i)
    content.vb: Public Overrides Function GetInt16(i As Integer) As Short
    parameters:
    - id: i
      type: System.Int32
      description: "\n<p>The zero-based column ordinal. </p>\n"
    return:
      type: System.Int16
      description: "\n<p>The value of the specified column.</p>\n"
  exceptions:
  - type: System.InvalidCastException
    commentId: T:System.InvalidCastException
    description: "\n<p>The specified cast is not valid. </p>\n"
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
- uid: System.Data.SqlClient.SqlDataReader.GetInt32(System.Int32)
  commentId: M:System.Data.SqlClient.SqlDataReader.GetInt32(System.Int32)
  id: GetInt32(System.Int32)
  parent: System.Data.SqlClient.SqlDataReader
  langs:
  - csharp
  - vb
  name: GetInt32(Int32)
  nameWithType: SqlDataReader.GetInt32(Int32)
  fullName: System.Data.SqlClient.SqlDataReader.GetInt32(System.Int32)
  type: Method
  source:
    remote:
      path: src/System.Data.SqlClient/src/System/Data/SqlClient/SqlDataReader.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: GetInt32
    path: src/System.Data.SqlClient/src/System/Data/SqlClient/SqlDataReader.cs
    startLine: 1857
  assemblies:
  - System.Data.SqlClient
  namespace: System.Data.SqlClient
  summary: "\n<p>Gets the value of the specified column as a 32-bit signed integer.</p>\n"
  syntax:
    content: public override int GetInt32(int i)
    content.vb: Public Overrides Function GetInt32(i As Integer) As Integer
    parameters:
    - id: i
      type: System.Int32
      description: "\n<p>The zero-based column ordinal. </p>\n"
    return:
      type: System.Int32
      description: "\n<p>The value of the specified column.</p>\n"
  exceptions:
  - type: System.InvalidCastException
    commentId: T:System.InvalidCastException
    description: "\n<p>The specified cast is not valid. </p>\n"
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
- uid: System.Data.SqlClient.SqlDataReader.GetInt64(System.Int32)
  commentId: M:System.Data.SqlClient.SqlDataReader.GetInt64(System.Int32)
  id: GetInt64(System.Int32)
  parent: System.Data.SqlClient.SqlDataReader
  langs:
  - csharp
  - vb
  name: GetInt64(Int32)
  nameWithType: SqlDataReader.GetInt64(Int32)
  fullName: System.Data.SqlClient.SqlDataReader.GetInt64(System.Int32)
  type: Method
  source:
    remote:
      path: src/System.Data.SqlClient/src/System/Data/SqlClient/SqlDataReader.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: GetInt64
    path: src/System.Data.SqlClient/src/System/Data/SqlClient/SqlDataReader.cs
    startLine: 1863
  assemblies:
  - System.Data.SqlClient
  namespace: System.Data.SqlClient
  summary: "\n<p>Gets the value of the specified column as a 64-bit signed integer.</p>\n"
  syntax:
    content: public override long GetInt64(int i)
    content.vb: Public Overrides Function GetInt64(i As Integer) As Long
    parameters:
    - id: i
      type: System.Int32
      description: "\n<p>The zero-based column ordinal. </p>\n"
    return:
      type: System.Int64
      description: "\n<p>The value of the specified column.</p>\n"
  exceptions:
  - type: System.InvalidCastException
    commentId: T:System.InvalidCastException
    description: "\n<p>The specified cast is not valid. </p>\n"
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
- uid: System.Data.SqlClient.SqlDataReader.GetName(System.Int32)
  commentId: M:System.Data.SqlClient.SqlDataReader.GetName(System.Int32)
  id: GetName(System.Int32)
  parent: System.Data.SqlClient.SqlDataReader
  langs:
  - csharp
  - vb
  name: GetName(Int32)
  nameWithType: SqlDataReader.GetName(Int32)
  fullName: System.Data.SqlClient.SqlDataReader.GetName(System.Int32)
  type: Method
  source:
    remote:
      path: src/System.Data.SqlClient/src/System/Data/SqlClient/SqlDataReader.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: GetName
    path: src/System.Data.SqlClient/src/System/Data/SqlClient/SqlDataReader.cs
    startLine: 974
  assemblies:
  - System.Data.SqlClient
  namespace: System.Data.SqlClient
  summary: "\n<p>Gets the name of the specified column.</p>\n"
  syntax:
    content: public override string GetName(int i)
    content.vb: Public Overrides Function GetName(i As Integer) As String
    parameters:
    - id: i
      type: System.Int32
      description: "\n<p>The zero-based column ordinal. </p>\n"
    return:
      type: System.String
      description: "\n<p>The name of the specified column.</p>\n"
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
- uid: System.Data.SqlClient.SqlDataReader.GetOrdinal(System.String)
  commentId: M:System.Data.SqlClient.SqlDataReader.GetOrdinal(System.String)
  id: GetOrdinal(System.String)
  parent: System.Data.SqlClient.SqlDataReader
  langs:
  - csharp
  - vb
  name: GetOrdinal(String)
  nameWithType: SqlDataReader.GetOrdinal(String)
  fullName: System.Data.SqlClient.SqlDataReader.GetOrdinal(System.String)
  type: Method
  source:
    remote:
      path: src/System.Data.SqlClient/src/System/Data/SqlClient/SqlDataReader.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: GetOrdinal
    path: src/System.Data.SqlClient/src/System/Data/SqlClient/SqlDataReader.cs
    startLine: 1040
  assemblies:
  - System.Data.SqlClient
  namespace: System.Data.SqlClient
  summary: "\n<p>Gets the column ordinal, given the name of the column.</p>\n"
  syntax:
    content: public override int GetOrdinal(string name)
    content.vb: Public Overrides Function GetOrdinal(name As String) As Integer
    parameters:
    - id: name
      type: System.String
      description: "\n<p>The name of the column. </p>\n"
    return:
      type: System.Int32
      description: "\n<p>The zero-based column ordinal.</p>\n"
  exceptions:
  - type: System.IndexOutOfRangeException
    commentId: T:System.IndexOutOfRangeException
    description: "\n<p>The name specified is not a valid column name. </p>\n"
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
- uid: System.Data.SqlClient.SqlDataReader.GetProviderSpecificFieldType(System.Int32)
  commentId: M:System.Data.SqlClient.SqlDataReader.GetProviderSpecificFieldType(System.Int32)
  id: GetProviderSpecificFieldType(System.Int32)
  parent: System.Data.SqlClient.SqlDataReader
  langs:
  - csharp
  - vb
  name: GetProviderSpecificFieldType(Int32)
  nameWithType: SqlDataReader.GetProviderSpecificFieldType(Int32)
  fullName: System.Data.SqlClient.SqlDataReader.GetProviderSpecificFieldType(System.Int32)
  type: Method
  source:
    remote:
      path: src/System.Data.SqlClient/src/System/Data/SqlClient/SqlDataReader.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: GetProviderSpecificFieldType
    path: src/System.Data.SqlClient/src/System/Data/SqlClient/SqlDataReader.cs
    startLine: 980
  assemblies:
  - System.Data.SqlClient
  namespace: System.Data.SqlClient
  summary: "\n<p>Gets an <strong>Object</strong> that is a representation of the underlying provider-specific field type.</p>\n"
  syntax:
    content: public override Type GetProviderSpecificFieldType(int i)
    content.vb: Public Overrides Function GetProviderSpecificFieldType(i As Integer) As Type
    parameters:
    - id: i
      type: System.Int32
      description: "\n<p>An <xref href=\"System.Int32\" data-throw-if-not-resolved=\"false\"></xref> representing the column ordinal. </p>\n"
    return:
      type: System.Type
      description: "\n<p>Gets an <xref href=\"System.Object\" data-throw-if-not-resolved=\"false\"></xref> that is a representation of the underlying provider-specific field type.</p>\n"
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
- uid: System.Data.SqlClient.SqlDataReader.GetProviderSpecificValue(System.Int32)
  commentId: M:System.Data.SqlClient.SqlDataReader.GetProviderSpecificValue(System.Int32)
  id: GetProviderSpecificValue(System.Int32)
  parent: System.Data.SqlClient.SqlDataReader
  langs:
  - csharp
  - vb
  name: GetProviderSpecificValue(Int32)
  nameWithType: SqlDataReader.GetProviderSpecificValue(Int32)
  fullName: System.Data.SqlClient.SqlDataReader.GetProviderSpecificValue(System.Int32)
  type: Method
  source:
    remote:
      path: src/System.Data.SqlClient/src/System/Data/SqlClient/SqlDataReader.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: GetProviderSpecificValue
    path: src/System.Data.SqlClient/src/System/Data/SqlClient/SqlDataReader.cs
    startLine: 1059
  assemblies:
  - System.Data.SqlClient
  namespace: System.Data.SqlClient
  summary: "\n<p>Gets an <strong>Object</strong> that is a representation of the underlying provider specific value.</p>\n"
  syntax:
    content: public override object GetProviderSpecificValue(int i)
    content.vb: Public Overrides Function GetProviderSpecificValue(i As Integer) As Object
    parameters:
    - id: i
      type: System.Int32
      description: "\n<p>An <xref href=\"System.Int32\" data-throw-if-not-resolved=\"false\"></xref> representing the column ordinal. </p>\n"
    return:
      type: System.Object
      description: "\n<p>An <xref href=\"System.Object\" data-throw-if-not-resolved=\"false\"></xref> that is a representation of the underlying provider specific value.</p>\n"
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
- uid: System.Data.SqlClient.SqlDataReader.GetProviderSpecificValues(System.Object[])
  commentId: M:System.Data.SqlClient.SqlDataReader.GetProviderSpecificValues(System.Object[])
  id: GetProviderSpecificValues(System.Object[])
  parent: System.Data.SqlClient.SqlDataReader
  langs:
  - csharp
  - vb
  name: GetProviderSpecificValues(Object[])
  nameWithType: SqlDataReader.GetProviderSpecificValues(Object[])
  fullName: System.Data.SqlClient.SqlDataReader.GetProviderSpecificValues(System.Object[])
  type: Method
  source:
    remote:
      path: src/System.Data.SqlClient/src/System/Data/SqlClient/SqlDataReader.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: GetProviderSpecificValues
    path: src/System.Data.SqlClient/src/System/Data/SqlClient/SqlDataReader.cs
    startLine: 1064
  assemblies:
  - System.Data.SqlClient
  namespace: System.Data.SqlClient
  summary: "\n<p>Gets an array of objects that are a representation of the underlying provider specific values.</p>\n"
  syntax:
    content: public override int GetProviderSpecificValues(object[] values)
    content.vb: Public Overrides Function GetProviderSpecificValues(values As Object()) As Integer
    parameters:
    - id: values
      type: System.Object[]
      description: "\n<p>An array of <xref href=\"System.Object\" data-throw-if-not-resolved=\"false\"></xref> into which to copy the column values.</p>\n"
    return:
      type: System.Int32
      description: "\n<p>The array of objects that are a representation of the underlying provider specific values.</p>\n"
  nameWithType.vb: SqlDataReader.GetProviderSpecificValues(Object())
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
  fullName.vb: System.Data.SqlClient.SqlDataReader.GetProviderSpecificValues(System.Object())
  name.vb: GetProviderSpecificValues(Object())
- uid: System.Data.SqlClient.SqlDataReader.GetSqlBinary(System.Int32)
  commentId: M:System.Data.SqlClient.SqlDataReader.GetSqlBinary(System.Int32)
  id: GetSqlBinary(System.Int32)
  parent: System.Data.SqlClient.SqlDataReader
  langs:
  - csharp
  - vb
  name: GetSqlBinary(Int32)
  nameWithType: SqlDataReader.GetSqlBinary(Int32)
  fullName: System.Data.SqlClient.SqlDataReader.GetSqlBinary(System.Int32)
  type: Method
  source:
    remote:
      path: src/System.Data.SqlClient/src/System/Data/SqlClient/SqlDataReader.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: GetSqlBinary
    path: src/System.Data.SqlClient/src/System/Data/SqlClient/SqlDataReader.cs
    startLine: 1875
  assemblies:
  - System.Data.SqlClient
  namespace: System.Data.SqlClient
  summary: "\n<p>Gets the value of the specified column as a <xref href=\"System.Data.SqlTypes.SqlBinary\" data-throw-if-not-resolved=\"false\"></xref>.</p>\n"
  syntax:
    content: public virtual SqlBinary GetSqlBinary(int i)
    content.vb: Public Overridable Function GetSqlBinary(i As Integer) As SqlBinary
    parameters:
    - id: i
      type: System.Int32
      description: "\n<p>The zero-based column ordinal. </p>\n"
    return:
      type: System.Data.SqlTypes.SqlBinary
      description: "\n<p>The value of the column expressed as a <xref href=\"System.Data.SqlTypes.SqlBinary\" data-throw-if-not-resolved=\"false\"></xref>.</p>\n"
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: System.Data.SqlClient.SqlDataReader.GetSqlBoolean(System.Int32)
  commentId: M:System.Data.SqlClient.SqlDataReader.GetSqlBoolean(System.Int32)
  id: GetSqlBoolean(System.Int32)
  parent: System.Data.SqlClient.SqlDataReader
  langs:
  - csharp
  - vb
  name: GetSqlBoolean(Int32)
  nameWithType: SqlDataReader.GetSqlBoolean(Int32)
  fullName: System.Data.SqlClient.SqlDataReader.GetSqlBoolean(System.Int32)
  type: Method
  source:
    remote:
      path: src/System.Data.SqlClient/src/System/Data/SqlClient/SqlDataReader.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: GetSqlBoolean
    path: src/System.Data.SqlClient/src/System/Data/SqlClient/SqlDataReader.cs
    startLine: 1869
  assemblies:
  - System.Data.SqlClient
  namespace: System.Data.SqlClient
  summary: "\n<p>Gets the value of the specified column as a <xref href=\"System.Data.SqlTypes.SqlBoolean\" data-throw-if-not-resolved=\"false\"></xref>.</p>\n"
  syntax:
    content: public virtual SqlBoolean GetSqlBoolean(int i)
    content.vb: Public Overridable Function GetSqlBoolean(i As Integer) As SqlBoolean
    parameters:
    - id: i
      type: System.Int32
      description: "\n<p>The zero-based column ordinal. </p>\n"
    return:
      type: System.Data.SqlTypes.SqlBoolean
      description: "\n<p>The value of the column.</p>\n"
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: System.Data.SqlClient.SqlDataReader.GetSqlByte(System.Int32)
  commentId: M:System.Data.SqlClient.SqlDataReader.GetSqlByte(System.Int32)
  id: GetSqlByte(System.Int32)
  parent: System.Data.SqlClient.SqlDataReader
  langs:
  - csharp
  - vb
  name: GetSqlByte(Int32)
  nameWithType: SqlDataReader.GetSqlByte(Int32)
  fullName: System.Data.SqlClient.SqlDataReader.GetSqlByte(System.Int32)
  type: Method
  source:
    remote:
      path: src/System.Data.SqlClient/src/System/Data/SqlClient/SqlDataReader.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: GetSqlByte
    path: src/System.Data.SqlClient/src/System/Data/SqlClient/SqlDataReader.cs
    startLine: 1881
  assemblies:
  - System.Data.SqlClient
  namespace: System.Data.SqlClient
  summary: "\n<p>Gets the value of the specified column as a <xref href=\"System.Data.SqlTypes.SqlByte\" data-throw-if-not-resolved=\"false\"></xref>.</p>\n"
  syntax:
    content: public virtual SqlByte GetSqlByte(int i)
    content.vb: Public Overridable Function GetSqlByte(i As Integer) As SqlByte
    parameters:
    - id: i
      type: System.Int32
      description: "\n<p>The zero-based column ordinal. </p>\n"
    return:
      type: System.Data.SqlTypes.SqlByte
      description: "\n<p>The value of the column expressed as a  <xref href=\"System.Data.SqlTypes.SqlByte\" data-throw-if-not-resolved=\"false\"></xref>.</p>\n"
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: System.Data.SqlClient.SqlDataReader.GetSqlBytes(System.Int32)
  commentId: M:System.Data.SqlClient.SqlDataReader.GetSqlBytes(System.Int32)
  id: GetSqlBytes(System.Int32)
  parent: System.Data.SqlClient.SqlDataReader
  langs:
  - csharp
  - vb
  name: GetSqlBytes(Int32)
  nameWithType: SqlDataReader.GetSqlBytes(Int32)
  fullName: System.Data.SqlClient.SqlDataReader.GetSqlBytes(System.Int32)
  type: Method
  source:
    remote:
      path: src/System.Data.SqlClient/src/System/Data/SqlClient/SqlDataReader.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: GetSqlBytes
    path: src/System.Data.SqlClient/src/System/Data/SqlClient/SqlDataReader.cs
    startLine: 1887
  assemblies:
  - System.Data.SqlClient
  namespace: System.Data.SqlClient
  summary: "\n<p>Gets the value of the specified column as <xref href=\"System.Data.SqlTypes.SqlBytes\" data-throw-if-not-resolved=\"false\"></xref>.</p>\n"
  syntax:
    content: public virtual SqlBytes GetSqlBytes(int i)
    content.vb: Public Overridable Function GetSqlBytes(i As Integer) As SqlBytes
    parameters:
    - id: i
      type: System.Int32
      description: "\n<p>The zero-based column ordinal. </p>\n"
    return:
      type: System.Data.SqlTypes.SqlBytes
      description: "\n<p>The value of the column expressed as a <xref href=\"System.Data.SqlTypes.SqlBytes\" data-throw-if-not-resolved=\"false\"></xref>.</p>\n"
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: System.Data.SqlClient.SqlDataReader.GetSqlChars(System.Int32)
  commentId: M:System.Data.SqlClient.SqlDataReader.GetSqlChars(System.Int32)
  id: GetSqlChars(System.Int32)
  parent: System.Data.SqlClient.SqlDataReader
  langs:
  - csharp
  - vb
  name: GetSqlChars(Int32)
  nameWithType: SqlDataReader.GetSqlChars(Int32)
  fullName: System.Data.SqlClient.SqlDataReader.GetSqlChars(System.Int32)
  type: Method
  source:
    remote:
      path: src/System.Data.SqlClient/src/System/Data/SqlClient/SqlDataReader.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: GetSqlChars
    path: src/System.Data.SqlClient/src/System/Data/SqlClient/SqlDataReader.cs
    startLine: 1894
  assemblies:
  - System.Data.SqlClient
  namespace: System.Data.SqlClient
  summary: "\n<p>Gets the value of the specified column as <xref href=\"System.Data.SqlTypes.SqlChars\" data-throw-if-not-resolved=\"false\"></xref>.</p>\n"
  syntax:
    content: public virtual SqlChars GetSqlChars(int i)
    content.vb: Public Overridable Function GetSqlChars(i As Integer) As SqlChars
    parameters:
    - id: i
      type: System.Int32
      description: "\n<p>The zero-based column ordinal. </p>\n"
    return:
      type: System.Data.SqlTypes.SqlChars
      description: "\n<p>The value of the column expressed as a  <xref href=\"System.Data.SqlTypes.SqlChars\" data-throw-if-not-resolved=\"false\"></xref>.</p>\n"
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: System.Data.SqlClient.SqlDataReader.GetSqlDateTime(System.Int32)
  commentId: M:System.Data.SqlClient.SqlDataReader.GetSqlDateTime(System.Int32)
  id: GetSqlDateTime(System.Int32)
  parent: System.Data.SqlClient.SqlDataReader
  langs:
  - csharp
  - vb
  name: GetSqlDateTime(Int32)
  nameWithType: SqlDataReader.GetSqlDateTime(Int32)
  fullName: System.Data.SqlClient.SqlDataReader.GetSqlDateTime(System.Int32)
  type: Method
  source:
    remote:
      path: src/System.Data.SqlClient/src/System/Data/SqlClient/SqlDataReader.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: GetSqlDateTime
    path: src/System.Data.SqlClient/src/System/Data/SqlClient/SqlDataReader.cs
    startLine: 1910
  assemblies:
  - System.Data.SqlClient
  namespace: System.Data.SqlClient
  summary: "\n<p>Gets the value of the specified column as a <xref href=\"System.Data.SqlTypes.SqlDateTime\" data-throw-if-not-resolved=\"false\"></xref>.</p>\n"
  syntax:
    content: public virtual SqlDateTime GetSqlDateTime(int i)
    content.vb: Public Overridable Function GetSqlDateTime(i As Integer) As SqlDateTime
    parameters:
    - id: i
      type: System.Int32
      description: "\n<p>The zero-based column ordinal. </p>\n"
    return:
      type: System.Data.SqlTypes.SqlDateTime
      description: "\n<p>The value of the column expressed as a  <xref href=\"System.Data.SqlTypes.SqlDateTime\" data-throw-if-not-resolved=\"false\"></xref>.</p>\n"
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: System.Data.SqlClient.SqlDataReader.GetSqlDecimal(System.Int32)
  commentId: M:System.Data.SqlClient.SqlDataReader.GetSqlDecimal(System.Int32)
  id: GetSqlDecimal(System.Int32)
  parent: System.Data.SqlClient.SqlDataReader
  langs:
  - csharp
  - vb
  name: GetSqlDecimal(Int32)
  nameWithType: SqlDataReader.GetSqlDecimal(Int32)
  fullName: System.Data.SqlClient.SqlDataReader.GetSqlDecimal(System.Int32)
  type: Method
  source:
    remote:
      path: src/System.Data.SqlClient/src/System/Data/SqlClient/SqlDataReader.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: GetSqlDecimal
    path: src/System.Data.SqlClient/src/System/Data/SqlClient/SqlDataReader.cs
    startLine: 1916
  assemblies:
  - System.Data.SqlClient
  namespace: System.Data.SqlClient
  summary: "\n<p>Gets the value of the specified column as a <xref href=\"System.Data.SqlTypes.SqlDecimal\" data-throw-if-not-resolved=\"false\"></xref>.</p>\n"
  syntax:
    content: public virtual SqlDecimal GetSqlDecimal(int i)
    content.vb: Public Overridable Function GetSqlDecimal(i As Integer) As SqlDecimal
    parameters:
    - id: i
      type: System.Int32
      description: "\n<p>The zero-based column ordinal. </p>\n"
    return:
      type: System.Data.SqlTypes.SqlDecimal
      description: "\n<p>The value of the column expressed as a <xref href=\"System.Data.SqlTypes.SqlDecimal\" data-throw-if-not-resolved=\"false\"></xref>.</p>\n"
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: System.Data.SqlClient.SqlDataReader.GetSqlDouble(System.Int32)
  commentId: M:System.Data.SqlClient.SqlDataReader.GetSqlDouble(System.Int32)
  id: GetSqlDouble(System.Int32)
  parent: System.Data.SqlClient.SqlDataReader
  langs:
  - csharp
  - vb
  name: GetSqlDouble(Int32)
  nameWithType: SqlDataReader.GetSqlDouble(Int32)
  fullName: System.Data.SqlClient.SqlDataReader.GetSqlDouble(System.Int32)
  type: Method
  source:
    remote:
      path: src/System.Data.SqlClient/src/System/Data/SqlClient/SqlDataReader.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: GetSqlDouble
    path: src/System.Data.SqlClient/src/System/Data/SqlClient/SqlDataReader.cs
    startLine: 1928
  assemblies:
  - System.Data.SqlClient
  namespace: System.Data.SqlClient
  summary: "\n<p>Gets the value of the specified column as a <xref href=\"System.Data.SqlTypes.SqlDouble\" data-throw-if-not-resolved=\"false\"></xref>.</p>\n"
  syntax:
    content: public virtual SqlDouble GetSqlDouble(int i)
    content.vb: Public Overridable Function GetSqlDouble(i As Integer) As SqlDouble
    parameters:
    - id: i
      type: System.Int32
      description: "\n<p>The zero-based column ordinal. </p>\n"
    return:
      type: System.Data.SqlTypes.SqlDouble
      description: "\n<p>The value of the column expressed as a  <xref href=\"System.Data.SqlTypes.SqlDouble\" data-throw-if-not-resolved=\"false\"></xref>.</p>\n"
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: System.Data.SqlClient.SqlDataReader.GetSqlGuid(System.Int32)
  commentId: M:System.Data.SqlClient.SqlDataReader.GetSqlGuid(System.Int32)
  id: GetSqlGuid(System.Int32)
  parent: System.Data.SqlClient.SqlDataReader
  langs:
  - csharp
  - vb
  name: GetSqlGuid(Int32)
  nameWithType: SqlDataReader.GetSqlGuid(Int32)
  fullName: System.Data.SqlClient.SqlDataReader.GetSqlGuid(System.Int32)
  type: Method
  source:
    remote:
      path: src/System.Data.SqlClient/src/System/Data/SqlClient/SqlDataReader.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: GetSqlGuid
    path: src/System.Data.SqlClient/src/System/Data/SqlClient/SqlDataReader.cs
    startLine: 1922
  assemblies:
  - System.Data.SqlClient
  namespace: System.Data.SqlClient
  summary: "\n<p>Gets the value of the specified column as a <xref href=\"System.Data.SqlTypes.SqlGuid\" data-throw-if-not-resolved=\"false\"></xref>.</p>\n"
  syntax:
    content: public virtual SqlGuid GetSqlGuid(int i)
    content.vb: Public Overridable Function GetSqlGuid(i As Integer) As SqlGuid
    parameters:
    - id: i
      type: System.Int32
      description: "\n<p>The zero-based column ordinal. </p>\n"
    return:
      type: System.Data.SqlTypes.SqlGuid
      description: "\n<p>The value of the column expressed as a  <xref href=\"System.Data.SqlTypes.SqlGuid\" data-throw-if-not-resolved=\"false\"></xref>.</p>\n"
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: System.Data.SqlClient.SqlDataReader.GetSqlInt16(System.Int32)
  commentId: M:System.Data.SqlClient.SqlDataReader.GetSqlInt16(System.Int32)
  id: GetSqlInt16(System.Int32)
  parent: System.Data.SqlClient.SqlDataReader
  langs:
  - csharp
  - vb
  name: GetSqlInt16(Int32)
  nameWithType: SqlDataReader.GetSqlInt16(Int32)
  fullName: System.Data.SqlClient.SqlDataReader.GetSqlInt16(System.Int32)
  type: Method
  source:
    remote:
      path: src/System.Data.SqlClient/src/System/Data/SqlClient/SqlDataReader.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: GetSqlInt16
    path: src/System.Data.SqlClient/src/System/Data/SqlClient/SqlDataReader.cs
    startLine: 1934
  assemblies:
  - System.Data.SqlClient
  namespace: System.Data.SqlClient
  summary: "\n<p>Gets the value of the specified column as a <xref href=\"System.Data.SqlTypes.SqlInt16\" data-throw-if-not-resolved=\"false\"></xref>.</p>\n"
  syntax:
    content: public virtual SqlInt16 GetSqlInt16(int i)
    content.vb: Public Overridable Function GetSqlInt16(i As Integer) As SqlInt16
    parameters:
    - id: i
      type: System.Int32
      description: "\n<p>The zero-based column ordinal. </p>\n"
    return:
      type: System.Data.SqlTypes.SqlInt16
      description: "\n<p>The value of the column expressed as a <xref href=\"System.Data.SqlTypes.SqlInt16\" data-throw-if-not-resolved=\"false\"></xref>.</p>\n"
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: System.Data.SqlClient.SqlDataReader.GetSqlInt32(System.Int32)
  commentId: M:System.Data.SqlClient.SqlDataReader.GetSqlInt32(System.Int32)
  id: GetSqlInt32(System.Int32)
  parent: System.Data.SqlClient.SqlDataReader
  langs:
  - csharp
  - vb
  name: GetSqlInt32(Int32)
  nameWithType: SqlDataReader.GetSqlInt32(Int32)
  fullName: System.Data.SqlClient.SqlDataReader.GetSqlInt32(System.Int32)
  type: Method
  source:
    remote:
      path: src/System.Data.SqlClient/src/System/Data/SqlClient/SqlDataReader.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: GetSqlInt32
    path: src/System.Data.SqlClient/src/System/Data/SqlClient/SqlDataReader.cs
    startLine: 1940
  assemblies:
  - System.Data.SqlClient
  namespace: System.Data.SqlClient
  summary: "\n<p>Gets the value of the specified column as a <xref href=\"System.Data.SqlTypes.SqlInt32\" data-throw-if-not-resolved=\"false\"></xref>.</p>\n"
  syntax:
    content: public virtual SqlInt32 GetSqlInt32(int i)
    content.vb: Public Overridable Function GetSqlInt32(i As Integer) As SqlInt32
    parameters:
    - id: i
      type: System.Int32
      description: "\n<p>The zero-based column ordinal. </p>\n"
    return:
      type: System.Data.SqlTypes.SqlInt32
      description: "\n<p>The value of the column expressed as a <xref href=\"System.Data.SqlTypes.SqlInt32\" data-throw-if-not-resolved=\"false\"></xref>.</p>\n"
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: System.Data.SqlClient.SqlDataReader.GetSqlInt64(System.Int32)
  commentId: M:System.Data.SqlClient.SqlDataReader.GetSqlInt64(System.Int32)
  id: GetSqlInt64(System.Int32)
  parent: System.Data.SqlClient.SqlDataReader
  langs:
  - csharp
  - vb
  name: GetSqlInt64(Int32)
  nameWithType: SqlDataReader.GetSqlInt64(Int32)
  fullName: System.Data.SqlClient.SqlDataReader.GetSqlInt64(System.Int32)
  type: Method
  source:
    remote:
      path: src/System.Data.SqlClient/src/System/Data/SqlClient/SqlDataReader.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: GetSqlInt64
    path: src/System.Data.SqlClient/src/System/Data/SqlClient/SqlDataReader.cs
    startLine: 1946
  assemblies:
  - System.Data.SqlClient
  namespace: System.Data.SqlClient
  summary: "\n<p>Gets the value of the specified column as a <xref href=\"System.Data.SqlTypes.SqlInt64\" data-throw-if-not-resolved=\"false\"></xref>.</p>\n"
  syntax:
    content: public virtual SqlInt64 GetSqlInt64(int i)
    content.vb: Public Overridable Function GetSqlInt64(i As Integer) As SqlInt64
    parameters:
    - id: i
      type: System.Int32
      description: "\n<p>The zero-based column ordinal. </p>\n"
    return:
      type: System.Data.SqlTypes.SqlInt64
      description: "\n<p>The value of the column expressed as a <xref href=\"System.Data.SqlTypes.SqlInt64\" data-throw-if-not-resolved=\"false\"></xref>.</p>\n"
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: System.Data.SqlClient.SqlDataReader.GetSqlMoney(System.Int32)
  commentId: M:System.Data.SqlClient.SqlDataReader.GetSqlMoney(System.Int32)
  id: GetSqlMoney(System.Int32)
  parent: System.Data.SqlClient.SqlDataReader
  langs:
  - csharp
  - vb
  name: GetSqlMoney(Int32)
  nameWithType: SqlDataReader.GetSqlMoney(Int32)
  fullName: System.Data.SqlClient.SqlDataReader.GetSqlMoney(System.Int32)
  type: Method
  source:
    remote:
      path: src/System.Data.SqlClient/src/System/Data/SqlClient/SqlDataReader.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: GetSqlMoney
    path: src/System.Data.SqlClient/src/System/Data/SqlClient/SqlDataReader.cs
    startLine: 1952
  assemblies:
  - System.Data.SqlClient
  namespace: System.Data.SqlClient
  summary: "\n<p>Gets the value of the specified column as a <xref href=\"System.Data.SqlTypes.SqlMoney\" data-throw-if-not-resolved=\"false\"></xref>.</p>\n"
  syntax:
    content: public virtual SqlMoney GetSqlMoney(int i)
    content.vb: Public Overridable Function GetSqlMoney(i As Integer) As SqlMoney
    parameters:
    - id: i
      type: System.Int32
      description: "\n<p>The zero-based column ordinal. </p>\n"
    return:
      type: System.Data.SqlTypes.SqlMoney
      description: "\n<p>The value of the column expressed as a <xref href=\"System.Data.SqlTypes.SqlMoney\" data-throw-if-not-resolved=\"false\"></xref>.</p>\n"
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: System.Data.SqlClient.SqlDataReader.GetSqlSingle(System.Int32)
  commentId: M:System.Data.SqlClient.SqlDataReader.GetSqlSingle(System.Int32)
  id: GetSqlSingle(System.Int32)
  parent: System.Data.SqlClient.SqlDataReader
  langs:
  - csharp
  - vb
  name: GetSqlSingle(Int32)
  nameWithType: SqlDataReader.GetSqlSingle(Int32)
  fullName: System.Data.SqlClient.SqlDataReader.GetSqlSingle(System.Int32)
  type: Method
  source:
    remote:
      path: src/System.Data.SqlClient/src/System/Data/SqlClient/SqlDataReader.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: GetSqlSingle
    path: src/System.Data.SqlClient/src/System/Data/SqlClient/SqlDataReader.cs
    startLine: 1958
  assemblies:
  - System.Data.SqlClient
  namespace: System.Data.SqlClient
  summary: "\n<p>Gets the value of the specified column as a <xref href=\"System.Data.SqlTypes.SqlSingle\" data-throw-if-not-resolved=\"false\"></xref>.</p>\n"
  syntax:
    content: public virtual SqlSingle GetSqlSingle(int i)
    content.vb: Public Overridable Function GetSqlSingle(i As Integer) As SqlSingle
    parameters:
    - id: i
      type: System.Int32
      description: "\n<p>The zero-based column ordinal. </p>\n"
    return:
      type: System.Data.SqlTypes.SqlSingle
      description: "\n<p>The value of the column expressed as a <xref href=\"System.Data.SqlTypes.SqlSingle\" data-throw-if-not-resolved=\"false\"></xref>.</p>\n"
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: System.Data.SqlClient.SqlDataReader.GetSqlString(System.Int32)
  commentId: M:System.Data.SqlClient.SqlDataReader.GetSqlString(System.Int32)
  id: GetSqlString(System.Int32)
  parent: System.Data.SqlClient.SqlDataReader
  langs:
  - csharp
  - vb
  name: GetSqlString(Int32)
  nameWithType: SqlDataReader.GetSqlString(Int32)
  fullName: System.Data.SqlClient.SqlDataReader.GetSqlString(System.Int32)
  type: Method
  source:
    remote:
      path: src/System.Data.SqlClient/src/System/Data/SqlClient/SqlDataReader.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: GetSqlString
    path: src/System.Data.SqlClient/src/System/Data/SqlClient/SqlDataReader.cs
    startLine: 1964
  assemblies:
  - System.Data.SqlClient
  namespace: System.Data.SqlClient
  summary: "\n<p>Gets the value of the specified column as a <xref href=\"System.Data.SqlTypes.SqlString\" data-throw-if-not-resolved=\"false\"></xref>.</p>\n"
  syntax:
    content: public virtual SqlString GetSqlString(int i)
    content.vb: Public Overridable Function GetSqlString(i As Integer) As SqlString
    parameters:
    - id: i
      type: System.Int32
      description: "\n<p>The zero-based column ordinal. </p>\n"
    return:
      type: System.Data.SqlTypes.SqlString
      description: "\n<p>The value of the column expressed as a <xref href=\"System.Data.SqlTypes.SqlString\" data-throw-if-not-resolved=\"false\"></xref>.</p>\n"
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: System.Data.SqlClient.SqlDataReader.GetSqlValue(System.Int32)
  commentId: M:System.Data.SqlClient.SqlDataReader.GetSqlValue(System.Int32)
  id: GetSqlValue(System.Int32)
  parent: System.Data.SqlClient.SqlDataReader
  langs:
  - csharp
  - vb
  name: GetSqlValue(Int32)
  nameWithType: SqlDataReader.GetSqlValue(Int32)
  fullName: System.Data.SqlClient.SqlDataReader.GetSqlValue(System.Int32)
  type: Method
  source:
    remote:
      path: src/System.Data.SqlClient/src/System/Data/SqlClient/SqlDataReader.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: GetSqlValue
    path: src/System.Data.SqlClient/src/System/Data/SqlClient/SqlDataReader.cs
    startLine: 2006
  assemblies:
  - System.Data.SqlClient
  namespace: System.Data.SqlClient
  summary: "\n<p>Returns the data value in the specified column as a SQL Server type. </p>\n"
  syntax:
    content: public virtual object GetSqlValue(int i)
    content.vb: Public Overridable Function GetSqlValue(i As Integer) As Object
    parameters:
    - id: i
      type: System.Int32
      description: "\n<p>The zero-based column ordinal. </p>\n"
    return:
      type: System.Object
      description: "\n<p>The value of the column expressed as a <xref href=\"System.Data.SqlDbType\" data-throw-if-not-resolved=\"false\"></xref>.</p>\n"
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: System.Data.SqlClient.SqlDataReader.GetSqlValues(System.Object[])
  commentId: M:System.Data.SqlClient.SqlDataReader.GetSqlValues(System.Object[])
  id: GetSqlValues(System.Object[])
  parent: System.Data.SqlClient.SqlDataReader
  langs:
  - csharp
  - vb
  name: GetSqlValues(Object[])
  nameWithType: SqlDataReader.GetSqlValues(Object[])
  fullName: System.Data.SqlClient.SqlDataReader.GetSqlValues(System.Object[])
  type: Method
  source:
    remote:
      path: src/System.Data.SqlClient/src/System/Data/SqlClient/SqlDataReader.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: GetSqlValues
    path: src/System.Data.SqlClient/src/System/Data/SqlClient/SqlDataReader.cs
    startLine: 2087
  assemblies:
  - System.Data.SqlClient
  namespace: System.Data.SqlClient
  summary: "\n<p>Fills an array of <xref href=\"System.Object\" data-throw-if-not-resolved=\"false\"></xref> that contains the values for all the columns in the record, expressed as SQL Server types.</p>\n"
  syntax:
    content: public virtual int GetSqlValues(object[] values)
    content.vb: Public Overridable Function GetSqlValues(values As Object()) As Integer
    parameters:
    - id: values
      type: System.Object[]
      description: "\n<p>An array of <xref href=\"System.Object\" data-throw-if-not-resolved=\"false\"></xref> into which to copy the values. The column values are expressed as SQL Server types.</p>\n"
    return:
      type: System.Int32
      description: "\n<p>An integer indicating the number of columns copied.</p>\n"
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "\n<p>\n<em>values</em> is null. </p>\n"
  nameWithType.vb: SqlDataReader.GetSqlValues(Object())
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
  fullName.vb: System.Data.SqlClient.SqlDataReader.GetSqlValues(System.Object())
  name.vb: GetSqlValues(Object())
- uid: System.Data.SqlClient.SqlDataReader.GetSqlXml(System.Int32)
  commentId: M:System.Data.SqlClient.SqlDataReader.GetSqlXml(System.Int32)
  id: GetSqlXml(System.Int32)
  parent: System.Data.SqlClient.SqlDataReader
  langs:
  - csharp
  - vb
  name: GetSqlXml(Int32)
  nameWithType: SqlDataReader.GetSqlXml(Int32)
  fullName: System.Data.SqlClient.SqlDataReader.GetSqlXml(System.Int32)
  type: Method
  source:
    remote:
      path: src/System.Data.SqlClient/src/System/Data/SqlClient/SqlDataReader.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: GetSqlXml
    path: src/System.Data.SqlClient/src/System/Data/SqlClient/SqlDataReader.cs
    startLine: 1976
  assemblies:
  - System.Data.SqlClient
  namespace: System.Data.SqlClient
  summary: "\n<p>Gets the value of the specified column as an XML value.</p>\n"
  syntax:
    content: public virtual SqlXml GetSqlXml(int i)
    content.vb: Public Overridable Function GetSqlXml(i As Integer) As SqlXml
    parameters:
    - id: i
      type: System.Int32
      description: "\n<p>The zero-based column ordinal.</p>\n"
    return:
      type: System.Data.SqlTypes.SqlXml
      description: "\n<p>A <xref href=\"System.Data.SqlTypes.SqlXml\" data-throw-if-not-resolved=\"false\"></xref> value that contains the XML stored within the corresponding field. </p>\n"
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "\n<p>The index passed was outside the range of 0 to <xref href=\"System.Data.DataTableReader.FieldCount\" data-throw-if-not-resolved=\"false\"></xref> - 1</p>\n"
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "\n<p>An attempt was made to read or access columns in a closed <xref href=\"System.Data.SqlClient.SqlDataReader\" data-throw-if-not-resolved=\"false\"></xref>.</p>\n"
  - type: System.InvalidCastException
    commentId: T:System.InvalidCastException
    description: "\n<p>The retrieved data is not compatible with the <xref href=\"System.Data.SqlTypes.SqlXml\" data-throw-if-not-resolved=\"false\"></xref> type.</p>\n"
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: System.Data.SqlClient.SqlDataReader.GetStream(System.Int32)
  commentId: M:System.Data.SqlClient.SqlDataReader.GetStream(System.Int32)
  id: GetStream(System.Int32)
  parent: System.Data.SqlClient.SqlDataReader
  langs:
  - csharp
  - vb
  name: GetStream(Int32)
  nameWithType: SqlDataReader.GetStream(Int32)
  fullName: System.Data.SqlClient.SqlDataReader.GetStream(System.Int32)
  type: Method
  source:
    remote:
      path: src/System.Data.SqlClient/src/System/Data/SqlClient/SqlDataReader.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: GetStream
    path: src/System.Data.SqlClient/src/System/Data/SqlClient/SqlDataReader.cs
    startLine: 1115
  assemblies:
  - System.Data.SqlClient
  namespace: System.Data.SqlClient
  summary: "\n<p>Retrieves binary, image, varbinary, UDT, and variant data types as a <xref href=\"System.IO.Stream\" data-throw-if-not-resolved=\"false\"></xref>.</p>\n"
  syntax:
    content: public override Stream GetStream(int i)
    content.vb: Public Overrides Function GetStream(i As Integer) As Stream
    parameters:
    - id: i
      type: System.Int32
      description: "\n<p>The zero-based column ordinal.</p>\n"
    return:
      type: System.IO.Stream
      description: "\n<p>A stream object.</p>\n"
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "\n<p>The connection drops or is closed during the data retrieval.</p>\n<p>The <xref href=\"System.Data.SqlClient.SqlDataReader\" data-throw-if-not-resolved=\"false\"></xref> is closed during the data retrieval.</p>\n<p>There is no data ready to be read (for example, the first <xref href=\"System.Data.SqlClient.SqlDataReader.Read\" data-throw-if-not-resolved=\"false\"></xref> hasn't been called, or returned false).</p>\n<p>Tried to read a previously-read column in sequential mode.</p>\n<p>There was an asynchronous operation in progress. This applies to all Get* methods when running in sequential mode, as they could be called while reading a stream.</p>\n"
  - type: System.IndexOutOfRangeException
    commentId: T:System.IndexOutOfRangeException
    description: "\n<p>Trying to read a column that does not exist.</p>\n"
  - type: System.InvalidCastException
    commentId: T:System.InvalidCastException
    description: "\n<p>The returned type was not one of the types below:</p>\n<ul><li>\n<p>binary</p>\n</li><li>\n<p>image</p>\n</li><li>\n<p>varbinary</p>\n</li><li>\n<p>udt</p>\n</li></ul>\n"
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
- uid: System.Data.SqlClient.SqlDataReader.GetString(System.Int32)
  commentId: M:System.Data.SqlClient.SqlDataReader.GetString(System.Int32)
  id: GetString(System.Int32)
  parent: System.Data.SqlClient.SqlDataReader
  langs:
  - csharp
  - vb
  name: GetString(Int32)
  nameWithType: SqlDataReader.GetString(Int32)
  fullName: System.Data.SqlClient.SqlDataReader.GetString(System.Int32)
  type: Method
  source:
    remote:
      path: src/System.Data.SqlClient/src/System/Data/SqlClient/SqlDataReader.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: GetString
    path: src/System.Data.SqlClient/src/System/Data/SqlClient/SqlDataReader.cs
    startLine: 2115
  assemblies:
  - System.Data.SqlClient
  namespace: System.Data.SqlClient
  summary: "\n<p>Gets the value of the specified column as a string.</p>\n"
  syntax:
    content: public override string GetString(int i)
    content.vb: Public Overrides Function GetString(i As Integer) As String
    parameters:
    - id: i
      type: System.Int32
      description: "\n<p>The zero-based column ordinal. </p>\n"
    return:
      type: System.String
      description: "\n<p>The value of the specified column.</p>\n"
  exceptions:
  - type: System.InvalidCastException
    commentId: T:System.InvalidCastException
    description: "\n<p>The specified cast is not valid. </p>\n"
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
- uid: System.Data.SqlClient.SqlDataReader.GetTextReader(System.Int32)
  commentId: M:System.Data.SqlClient.SqlDataReader.GetTextReader(System.Int32)
  id: GetTextReader(System.Int32)
  parent: System.Data.SqlClient.SqlDataReader
  langs:
  - csharp
  - vb
  name: GetTextReader(Int32)
  nameWithType: SqlDataReader.GetTextReader(Int32)
  fullName: System.Data.SqlClient.SqlDataReader.GetTextReader(System.Int32)
  type: Method
  source:
    remote:
      path: src/System.Data.SqlClient/src/System/Data/SqlClient/SqlDataReader.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: GetTextReader
    path: src/System.Data.SqlClient/src/System/Data/SqlClient/SqlDataReader.cs
    startLine: 1491
  assemblies:
  - System.Data.SqlClient
  namespace: System.Data.SqlClient
  summary: "\n<p>Retrieves Char, NChar, NText, NVarChar, text, varChar, and Variant data types as a <xref href=\"System.IO.TextReader\" data-throw-if-not-resolved=\"false\"></xref>.</p>\n"
  syntax:
    content: public override TextReader GetTextReader(int i)
    content.vb: Public Overrides Function GetTextReader(i As Integer) As TextReader
    parameters:
    - id: i
      type: System.Int32
      description: "\n<p>The column to be retrieved.</p>\n"
    return:
      type: System.IO.TextReader
      description: "\n<p>The returned object.</p>\n"
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "\n<p>The connection drops or is closed during the data retrieval.</p>\n<p>The <xref href=\"System.Data.SqlClient.SqlDataReader\" data-throw-if-not-resolved=\"false\"></xref> is closed during the data retrieval.</p>\n<p>There is no data ready to be read (for example, the first <xref href=\"System.Data.SqlClient.SqlDataReader.Read\" data-throw-if-not-resolved=\"false\"></xref> hasn't been called, or returned false).</p>\n<p>Tried to read a previously-read column in sequential mode.</p>\n<p>There was an asynchronous operation in progress. This applies to all Get* methods when running in sequential mode, as they could be called while reading a stream.</p>\n"
  - type: System.IndexOutOfRangeException
    commentId: T:System.IndexOutOfRangeException
    description: "\n<p>Trying to read a column that does not exist.</p>\n"
  - type: System.InvalidCastException
    commentId: T:System.InvalidCastException
    description: "\n<p>The returned type was not one of the types below:</p>\n<ul><li>\n<p>char</p>\n</li><li>\n<p>nchar</p>\n</li><li>\n<p>ntext</p>\n</li><li>\n<p>nvarchar</p>\n</li><li>\n<p>text</p>\n</li><li>\n<p>varchar</p>\n</li></ul>\n"
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
- uid: System.Data.SqlClient.SqlDataReader.GetTimeSpan(System.Int32)
  commentId: M:System.Data.SqlClient.SqlDataReader.GetTimeSpan(System.Int32)
  id: GetTimeSpan(System.Int32)
  parent: System.Data.SqlClient.SqlDataReader
  langs:
  - csharp
  - vb
  name: GetTimeSpan(Int32)
  nameWithType: SqlDataReader.GetTimeSpan(Int32)
  fullName: System.Data.SqlClient.SqlDataReader.GetTimeSpan(System.Int32)
  type: Method
  source:
    remote:
      path: src/System.Data.SqlClient/src/System/Data/SqlClient/SqlDataReader.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: GetTimeSpan
    path: src/System.Data.SqlClient/src/System/Data/SqlClient/SqlDataReader.cs
    startLine: 2160
  assemblies:
  - System.Data.SqlClient
  namespace: System.Data.SqlClient
  summary: "\n<p>Retrieves the value of the specified column as a <xref href=\"System.TimeSpan\" data-throw-if-not-resolved=\"false\"></xref> object.</p>\n"
  syntax:
    content: public virtual TimeSpan GetTimeSpan(int i)
    content.vb: Public Overridable Function GetTimeSpan(i As Integer) As TimeSpan
    parameters:
    - id: i
      type: System.Int32
      description: "\n<p>The zero-based column ordinal. </p>\n"
    return:
      type: System.TimeSpan
      description: "\n<p>The value of the specified column.</p>\n"
  exceptions:
  - type: System.InvalidCastException
    commentId: T:System.InvalidCastException
    description: "\n<p>The specified cast is not valid. </p>\n"
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: System.Data.SqlClient.SqlDataReader.GetValue(System.Int32)
  commentId: M:System.Data.SqlClient.SqlDataReader.GetValue(System.Int32)
  id: GetValue(System.Int32)
  parent: System.Data.SqlClient.SqlDataReader
  langs:
  - csharp
  - vb
  name: GetValue(Int32)
  nameWithType: SqlDataReader.GetValue(Int32)
  fullName: System.Data.SqlClient.SqlDataReader.GetValue(System.Int32)
  type: Method
  source:
    remote:
      path: src/System.Data.SqlClient/src/System/Data/SqlClient/SqlDataReader.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: GetValue
    path: src/System.Data.SqlClient/src/System/Data/SqlClient/SqlDataReader.cs
    startLine: 2144
  assemblies:
  - System.Data.SqlClient
  namespace: System.Data.SqlClient
  summary: "\n<p>Gets the value of the specified column in its native format.</p>\n"
  syntax:
    content: public override object GetValue(int i)
    content.vb: Public Overrides Function GetValue(i As Integer) As Object
    parameters:
    - id: i
      type: System.Int32
      description: "\n<p>The zero-based column ordinal. </p>\n"
    return:
      type: System.Object
      description: "\n<p>This method returns <xref href=\"System.DBNull\" data-throw-if-not-resolved=\"false\"></xref> for null database columns.</p>\n"
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
- uid: System.Data.SqlClient.SqlDataReader.GetValues(System.Object[])
  commentId: M:System.Data.SqlClient.SqlDataReader.GetValues(System.Object[])
  id: GetValues(System.Object[])
  parent: System.Data.SqlClient.SqlDataReader
  langs:
  - csharp
  - vb
  name: GetValues(Object[])
  nameWithType: SqlDataReader.GetValues(Object[])
  fullName: System.Data.SqlClient.SqlDataReader.GetValues(System.Object[])
  type: Method
  source:
    remote:
      path: src/System.Data.SqlClient/src/System/Data/SqlClient/SqlDataReader.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: GetValues
    path: src/System.Data.SqlClient/src/System/Data/SqlClient/SqlDataReader.cs
    startLine: 2330
  assemblies:
  - System.Data.SqlClient
  namespace: System.Data.SqlClient
  summary: "\n<p>Populates an array of objects with the column values of the current row.</p>\n"
  syntax:
    content: public override int GetValues(object[] values)
    content.vb: Public Overrides Function GetValues(values As Object()) As Integer
    parameters:
    - id: values
      type: System.Object[]
      description: "\n<p>An array of <xref href=\"System.Object\" data-throw-if-not-resolved=\"false\"></xref> into which to copy the attribute columns. </p>\n"
    return:
      type: System.Int32
      description: "\n<p>The number of instances of <xref href=\"System.Object\" data-throw-if-not-resolved=\"false\"></xref> in the array.</p>\n"
  nameWithType.vb: SqlDataReader.GetValues(Object())
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
  fullName.vb: System.Data.SqlClient.SqlDataReader.GetValues(System.Object())
  name.vb: GetValues(Object())
- uid: System.Data.SqlClient.SqlDataReader.GetXmlReader(System.Int32)
  commentId: M:System.Data.SqlClient.SqlDataReader.GetXmlReader(System.Int32)
  id: GetXmlReader(System.Int32)
  parent: System.Data.SqlClient.SqlDataReader
  langs:
  - csharp
  - vb
  name: GetXmlReader(Int32)
  nameWithType: SqlDataReader.GetXmlReader(Int32)
  fullName: System.Data.SqlClient.SqlDataReader.GetXmlReader(System.Int32)
  type: Method
  source:
    remote:
      path: src/System.Data.SqlClient/src/System/Data/SqlClient/SqlDataReader.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: GetXmlReader
    path: src/System.Data.SqlClient/src/System/Data/SqlClient/SqlDataReader.cs
    startLine: 1076
  assemblies:
  - System.Data.SqlClient
  namespace: System.Data.SqlClient
  summary: "\n<p>Retrieves data of type XML as an <xref href=\"System.Xml.XmlReader\" data-throw-if-not-resolved=\"false\"></xref>.</p>\n"
  syntax:
    content: public virtual XmlReader GetXmlReader(int i)
    content.vb: Public Overridable Function GetXmlReader(i As Integer) As XmlReader
    parameters:
    - id: i
      type: System.Int32
      description: "\n<p>The value of the specified column.</p>\n"
    return:
      type: XmlReader
      description: "\n<p>The returned object.</p>\n"
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "\n<p>The connection drops or is closed during the data retrieval.</p>\n<p>The <xref href=\"System.Data.SqlClient.SqlDataReader\" data-throw-if-not-resolved=\"false\"></xref> is closed during the data retrieval.</p>\n<p>There is no data ready to be read (for example, the first <xref href=\"System.Data.SqlClient.SqlDataReader.Read\" data-throw-if-not-resolved=\"false\"></xref> hasn't been called, or returned false).</p>\n<p>Trying to read a previously read column in sequential mode.</p>\n<p>There was an asynchronous operation in progress. This applies to all Get* methods when running in sequential mode, as they could be called while reading a stream.</p>\n"
  - type: System.IndexOutOfRangeException
    commentId: T:System.IndexOutOfRangeException
    description: "\n<p>Trying to read a column that does not exist.</p>\n"
  - type: System.InvalidCastException
    commentId: T:System.InvalidCastException
    description: "\n<p>The returned type was not xml.</p>\n"
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: System.Data.SqlClient.SqlDataReader.IsDBNull(System.Int32)
  commentId: M:System.Data.SqlClient.SqlDataReader.IsDBNull(System.Int32)
  id: IsDBNull(System.Int32)
  parent: System.Data.SqlClient.SqlDataReader
  langs:
  - csharp
  - vb
  name: IsDBNull(Int32)
  nameWithType: SqlDataReader.IsDBNull(Int32)
  fullName: System.Data.SqlClient.SqlDataReader.IsDBNull(System.Int32)
  type: Method
  source:
    remote:
      path: src/System.Data.SqlClient/src/System/Data/SqlClient/SqlDataReader.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: IsDBNull
    path: src/System.Data.SqlClient/src/System/Data/SqlClient/SqlDataReader.cs
    startLine: 2589
  assemblies:
  - System.Data.SqlClient
  namespace: System.Data.SqlClient
  summary: "\n<p>Gets a value that indicates whether the column contains non-existent or missing values.</p>\n"
  syntax:
    content: public override bool IsDBNull(int i)
    content.vb: Public Overrides Function IsDBNull(i As Integer) As Boolean
    parameters:
    - id: i
      type: System.Int32
      description: "\n<p>The zero-based column ordinal. </p>\n"
    return:
      type: System.Boolean
      description: "\n<p>\n<strong>true</strong> if the specified column value is equivalent to <xref href=\"System.DBNull\" data-throw-if-not-resolved=\"false\"></xref>; otherwise <strong>false</strong>.</p>\n"
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
- uid: System.Data.SqlClient.SqlDataReader.IsDBNullAsync(System.Int32,System.Threading.CancellationToken)
  commentId: M:System.Data.SqlClient.SqlDataReader.IsDBNullAsync(System.Int32,System.Threading.CancellationToken)
  id: IsDBNullAsync(System.Int32,System.Threading.CancellationToken)
  parent: System.Data.SqlClient.SqlDataReader
  langs:
  - csharp
  - vb
  name: IsDBNullAsync(Int32, CancellationToken)
  nameWithType: SqlDataReader.IsDBNullAsync(Int32, CancellationToken)
  fullName: System.Data.SqlClient.SqlDataReader.IsDBNullAsync(System.Int32, System.Threading.CancellationToken)
  type: Method
  source:
    remote:
      path: src/System.Data.SqlClient/src/System/Data/SqlClient/SqlDataReader.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: IsDBNullAsync
    path: src/System.Data.SqlClient/src/System/Data/SqlClient/SqlDataReader.cs
    startLine: 4024
  assemblies:
  - System.Data.SqlClient
  namespace: System.Data.SqlClient
  summary: "\n<p>An asynchronous version of <xref href=\"System.Data.SqlClient.SqlDataReader.IsDBNull(System.Int32)\" data-throw-if-not-resolved=\"false\"></xref>, which gets a value that indicates whether the column contains non-existent or missing values.</p>\n<p>The cancellation token can be used to request that the operation be abandoned before the command timeout elapses. Exceptions will be reported via the returned Task object.</p>\n"
  syntax:
    content: public override Task<bool> IsDBNullAsync(int i, CancellationToken cancellationToken)
    content.vb: Public Overrides Function IsDBNullAsync(i As Integer, cancellationToken As CancellationToken) As Task(Of Boolean)
    parameters:
    - id: i
      type: System.Int32
      description: "\n<p>The zero-based column to be retrieved.</p>\n"
    - id: cancellationToken
      type: System.Threading.CancellationToken
      description: "\n<p>The cancellation instruction, which propagates a notification that operations should be canceled. This does not guarantee the cancellation. A setting of <strong>CancellationToken.None</strong> makes this method equivalent to <xref href=\"System.Data.SqlClient.SqlDataReader.IsDBNull(System.Int32)\" data-throw-if-not-resolved=\"false\"></xref>. The returned task must be marked as cancelled.</p>\n"
    return:
      type: System.Threading.Tasks.Task{System.Boolean}
      description: "\n<p>\n<strong>true</strong> if the specified column value is equivalent to <strong>DBNull</strong> otherwise <strong>false</strong>.</p>\n"
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "\n<p>The connection drops or is closed during the data retrieval.</p>\n<p>The <xref href=\"System.Data.SqlClient.SqlDataReader\" data-throw-if-not-resolved=\"false\"></xref> is closed during the data retrieval.</p>\n<p>There is no data ready to be read (for example, the first <xref href=\"System.Data.SqlClient.SqlDataReader.Read\" data-throw-if-not-resolved=\"false\"></xref> hasn't been called, or returned false).</p>\n<p>Trying to read a previously read column in sequential mode.</p>\n<p>There was an asynchronous operation in progress. This applies to all Get* methods when running in sequential mode, as they could be called while reading a stream.</p>\n<p>\n<strong>Context Connection=true</strong> is specified in the connection string.</p>\n"
  - type: System.IndexOutOfRangeException
    commentId: T:System.IndexOutOfRangeException
    description: "\n<p>Trying to read a column that does not exist.</p>\n"
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
- uid: System.Data.SqlClient.SqlDataReader.NextResult
  commentId: M:System.Data.SqlClient.SqlDataReader.NextResult
  id: NextResult
  parent: System.Data.SqlClient.SqlDataReader
  langs:
  - csharp
  - vb
  name: NextResult()
  nameWithType: SqlDataReader.NextResult()
  fullName: System.Data.SqlClient.SqlDataReader.NextResult()
  type: Method
  source:
    remote:
      path: src/System.Data.SqlClient/src/System/Data/SqlClient/SqlDataReader.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: NextResult
    path: src/System.Data.SqlClient/src/System/Data/SqlClient/SqlDataReader.cs
    startLine: 2607
  assemblies:
  - System.Data.SqlClient
  namespace: System.Data.SqlClient
  summary: "\n<p>Advances the data reader to the next result, when reading the results of batch Transact-SQL statements.</p>\n"
  syntax:
    content: public override bool NextResult()
    content.vb: Public Overrides Function NextResult As Boolean
    return:
      type: System.Boolean
      description: "\n<p>\n<strong>true</strong> if there are more result sets; otherwise <strong>false</strong>.</p>\n"
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
- uid: System.Data.SqlClient.SqlDataReader.NextResultAsync(System.Threading.CancellationToken)
  commentId: M:System.Data.SqlClient.SqlDataReader.NextResultAsync(System.Threading.CancellationToken)
  id: NextResultAsync(System.Threading.CancellationToken)
  parent: System.Data.SqlClient.SqlDataReader
  langs:
  - csharp
  - vb
  name: NextResultAsync(CancellationToken)
  nameWithType: SqlDataReader.NextResultAsync(CancellationToken)
  fullName: System.Data.SqlClient.SqlDataReader.NextResultAsync(System.Threading.CancellationToken)
  type: Method
  source:
    remote:
      path: src/System.Data.SqlClient/src/System/Data/SqlClient/SqlDataReader.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: NextResultAsync
    path: src/System.Data.SqlClient/src/System/Data/SqlClient/SqlDataReader.cs
    startLine: 3587
  assemblies:
  - System.Data.SqlClient
  namespace: System.Data.SqlClient
  summary: "\n<p>An asynchronous version of <xref href=\"System.Data.SqlClient.SqlDataReader.NextResult\" data-throw-if-not-resolved=\"false\"></xref>, which advances the data reader to the next result, when reading the results of batch Transact-SQL statements.</p>\n<p>The cancellation token can be used to request that the operation be abandoned before the command timeout elapses.  Exceptions will be reported via the returned Task object.</p>\n"
  syntax:
    content: public override Task<bool> NextResultAsync(CancellationToken cancellationToken)
    content.vb: Public Overrides Function NextResultAsync(cancellationToken As CancellationToken) As Task(Of Boolean)
    parameters:
    - id: cancellationToken
      type: System.Threading.CancellationToken
      description: "\n<p>The cancellation instruction.</p>\n"
    return:
      type: System.Threading.Tasks.Task{System.Boolean}
      description: "\n<p>A task representing the asynchronous operation.</p>\n"
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "\n<p>Calling <xref href=\"System.Data.SqlClient.SqlDataReader.NextResultAsync(System.Threading.CancellationToken)\" data-throw-if-not-resolved=\"false\"></xref> more than once for the same instance before task completion.</p>\n<p>\n<strong>Context Connection=true</strong> is specified in the connection string.</p>\n"
  - type: System.Data.SqlClient.SqlException
    commentId: T:System.Data.SqlClient.SqlException
    description: "\n<p>SQL Server returned an error while executing the command text.</p>\n"
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
- uid: System.Data.SqlClient.SqlDataReader.Read
  commentId: M:System.Data.SqlClient.SqlDataReader.Read
  id: Read
  parent: System.Data.SqlClient.SqlDataReader
  langs:
  - csharp
  - vb
  name: Read()
  nameWithType: SqlDataReader.Read()
  fullName: System.Data.SqlClient.SqlDataReader.Read()
  type: Method
  source:
    remote:
      path: src/System.Data.SqlClient/src/System/Data/SqlClient/SqlDataReader.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: Read
    path: src/System.Data.SqlClient/src/System/Data/SqlClient/SqlDataReader.cs
    startLine: 2762
  assemblies:
  - System.Data.SqlClient
  namespace: System.Data.SqlClient
  summary: "\n<p>Advances the <xref href=\"System.Data.SqlClient.SqlDataReader\" data-throw-if-not-resolved=\"false\"></xref> to the next record.</p>\n"
  syntax:
    content: public override bool Read()
    content.vb: Public Overrides Function Read As Boolean
    return:
      type: System.Boolean
      description: "\n<p>\n<strong>true</strong> if there are more rows; otherwise <strong>false</strong>.</p>\n"
  exceptions:
  - type: System.Data.SqlClient.SqlException
    commentId: T:System.Data.SqlClient.SqlException
    description: "\n<p>SQL Server returned an error while executing the command text.</p>\n"
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
- uid: System.Data.SqlClient.SqlDataReader.ReadAsync(System.Threading.CancellationToken)
  commentId: M:System.Data.SqlClient.SqlDataReader.ReadAsync(System.Threading.CancellationToken)
  id: ReadAsync(System.Threading.CancellationToken)
  parent: System.Data.SqlClient.SqlDataReader
  langs:
  - csharp
  - vb
  name: ReadAsync(CancellationToken)
  nameWithType: SqlDataReader.ReadAsync(CancellationToken)
  fullName: System.Data.SqlClient.SqlDataReader.ReadAsync(System.Threading.CancellationToken)
  type: Method
  source:
    remote:
      path: src/System.Data.SqlClient/src/System/Data/SqlClient/SqlDataReader.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: ReadAsync
    path: src/System.Data.SqlClient/src/System/Data/SqlClient/SqlDataReader.cs
    startLine: 3870
  assemblies:
  - System.Data.SqlClient
  namespace: System.Data.SqlClient
  summary: "\n<p>An asynchronous version of <xref href=\"System.Data.SqlClient.SqlDataReader.Read\" data-throw-if-not-resolved=\"false\"></xref>, which advances the <xref href=\"System.Data.SqlClient.SqlDataReader\" data-throw-if-not-resolved=\"false\"></xref> to the next record.</p>\n<p>The cancellation token can be used to request that the operation be abandoned before the command timeout elapses. Exceptions will be reported via the returned Task object.</p>\n"
  syntax:
    content: public override Task<bool> ReadAsync(CancellationToken cancellationToken)
    content.vb: Public Overrides Function ReadAsync(cancellationToken As CancellationToken) As Task(Of Boolean)
    parameters:
    - id: cancellationToken
      type: System.Threading.CancellationToken
      description: "\n<p>The cancellation instruction.</p>\n"
    return:
      type: System.Threading.Tasks.Task{System.Boolean}
      description: "\n<p>A task representing the asynchronous operation.</p>\n"
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "\n<p>Calling <xref href=\"System.Data.SqlClient.SqlDataReader.ReadAsync(System.Threading.CancellationToken)\" data-throw-if-not-resolved=\"false\"></xref> more than once for the same instance before task completion.</p>\n<p>\n<strong>Context Connection=true</strong> is specified in the connection string.</p>\n"
  - type: System.Data.SqlClient.SqlException
    commentId: T:System.Data.SqlClient.SqlException
    description: "\n<p>SQL Server returned an error while executing the command text.</p>\n"
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
references:
- uid: System.Data.SqlClient
  commentId: N:System.Data.SqlClient
  isExternal: false
  name: System.Data.SqlClient
  nameWithType: System.Data.SqlClient
  fullName: System.Data.SqlClient
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: false
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.IDisposable
  commentId: T:System.IDisposable
  parent: System
  isExternal: false
  name: IDisposable
  nameWithType: IDisposable
  fullName: System.IDisposable
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: System.Data.SqlClient.SqlConnection
  commentId: T:System.Data.SqlClient.SqlConnection
  parent: System.Data.SqlClient
  isExternal: false
  name: SqlConnection
  nameWithType: SqlConnection
  fullName: System.Data.SqlClient.SqlConnection
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: false
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: false
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: false
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Byte
  commentId: T:System.Byte
  parent: System
  isExternal: false
  name: Byte
  nameWithType: Byte
  fullName: System.Byte
- uid: System.Int64
  commentId: T:System.Int64
  parent: System
  isExternal: false
  name: Int64
  nameWithType: Int64
  fullName: System.Int64
- uid: System.Byte[]
  name: Byte[]
  nameWithType: Byte[]
  fullName: System.Byte[]
  nameWithType.vb: Byte()
  fullname.vb: System.Byte()
  name.vb: Byte()
  spec.csharp:
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: System.Byte
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  spec.vb:
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: System.Byte
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
- uid: System.Char
  commentId: T:System.Char
  parent: System
  isExternal: false
  name: Char
  nameWithType: Char
  fullName: System.Char
- uid: System.Char[]
  name: Char[]
  nameWithType: Char[]
  fullName: System.Char[]
  nameWithType.vb: Char()
  fullname.vb: System.Char()
  name.vb: Char()
  spec.csharp:
  - uid: System.Char
    name: Char
    nameWithType: Char
    fullName: System.Char
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  spec.vb:
  - uid: System.Char
    name: Char
    nameWithType: Char
    fullName: System.Char
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
- uid: System.DateTime
  commentId: T:System.DateTime
  parent: System
  isExternal: false
  name: DateTime
  nameWithType: DateTime
  fullName: System.DateTime
- uid: System.DateTimeOffset
  commentId: T:System.DateTimeOffset
  parent: System
  isExternal: false
  name: DateTimeOffset
  nameWithType: DateTimeOffset
  fullName: System.DateTimeOffset
- uid: System.Decimal
  commentId: T:System.Decimal
  parent: System
  isExternal: false
  name: Decimal
  nameWithType: Decimal
  fullName: System.Decimal
- uid: System.Double
  commentId: T:System.Double
  parent: System
  isExternal: false
  name: Double
  nameWithType: Double
  fullName: System.Double
- uid: System.Collections.IEnumerator
  commentId: T:System.Collections.IEnumerator
  parent: System.Collections
  isExternal: false
  name: IEnumerator
  nameWithType: IEnumerator
  fullName: System.Collections.IEnumerator
- uid: System.Collections
  commentId: N:System.Collections
  isExternal: false
  name: System.Collections
  nameWithType: System.Collections
  fullName: System.Collections
- uid: System.Type
  commentId: T:System.Type
  parent: System
  isExternal: false
  name: Type
  nameWithType: Type
  fullName: System.Type
- uid: '{T}'
  commentId: '!:T'
  definition: T
  name: T
  nameWithType: T
  fullName: T
- uid: T
  isExternal: false
  name: T
  nameWithType: T
  fullName: T
- uid: System.Threading.CancellationToken
  commentId: T:System.Threading.CancellationToken
  parent: System.Threading
  isExternal: false
  name: CancellationToken
  nameWithType: CancellationToken
  fullName: System.Threading.CancellationToken
- uid: System.Threading.Tasks.Task{{T}}
  commentId: T:System.Threading.Tasks.Task{``0}
  parent: System.Threading.Tasks
  definition: System.Threading.Tasks.Task`1
  name: Task<T>
  nameWithType: Task<T>
  fullName: System.Threading.Tasks.Task<T>
  nameWithType.vb: Task(Of T)
  fullname.vb: System.Threading.Tasks.Task(Of T)
  name.vb: Task(Of T)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Threading
  commentId: N:System.Threading
  isExternal: false
  name: System.Threading
  nameWithType: System.Threading
  fullName: System.Threading
- uid: System.Threading.Tasks.Task`1
  commentId: T:System.Threading.Tasks.Task`1
  isExternal: false
  name: Task<TResult>
  nameWithType: Task<TResult>
  fullName: System.Threading.Tasks.Task<TResult>
  nameWithType.vb: Task(Of TResult)
  fullname.vb: System.Threading.Tasks.Task(Of TResult)
  name.vb: Task(Of TResult)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
  - name: <
    nameWithType: <
    fullName: <
  - name: TResult
    nameWithType: TResult
    fullName: TResult
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TResult
    nameWithType: TResult
    fullName: TResult
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Threading.Tasks
  commentId: N:System.Threading.Tasks
  isExternal: false
  name: System.Threading.Tasks
  nameWithType: System.Threading.Tasks
  fullName: System.Threading.Tasks
- uid: System.Single
  commentId: T:System.Single
  parent: System
  isExternal: false
  name: Single
  nameWithType: Single
  fullName: System.Single
- uid: System.Guid
  commentId: T:System.Guid
  parent: System
  isExternal: false
  name: Guid
  nameWithType: Guid
  fullName: System.Guid
- uid: System.Int16
  commentId: T:System.Int16
  parent: System
  isExternal: false
  name: Int16
  nameWithType: Int16
  fullName: System.Int16
- uid: System.Object[]
  name: Object[]
  nameWithType: Object[]
  fullName: System.Object[]
  nameWithType.vb: Object()
  fullname.vb: System.Object()
  name.vb: Object()
  spec.csharp:
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  spec.vb:
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
- uid: System.Data.SqlTypes.SqlBinary
  commentId: T:System.Data.SqlTypes.SqlBinary
  parent: System.Data.SqlTypes
  isExternal: false
  name: SqlBinary
  nameWithType: SqlBinary
  fullName: System.Data.SqlTypes.SqlBinary
- uid: System.Data.SqlTypes
  commentId: N:System.Data.SqlTypes
  isExternal: false
  name: System.Data.SqlTypes
  nameWithType: System.Data.SqlTypes
  fullName: System.Data.SqlTypes
- uid: System.Data.SqlTypes.SqlBoolean
  commentId: T:System.Data.SqlTypes.SqlBoolean
  parent: System.Data.SqlTypes
  isExternal: false
  name: SqlBoolean
  nameWithType: SqlBoolean
  fullName: System.Data.SqlTypes.SqlBoolean
- uid: System.Data.SqlTypes.SqlByte
  commentId: T:System.Data.SqlTypes.SqlByte
  parent: System.Data.SqlTypes
  isExternal: false
  name: SqlByte
  nameWithType: SqlByte
  fullName: System.Data.SqlTypes.SqlByte
- uid: System.Data.SqlTypes.SqlBytes
  commentId: T:System.Data.SqlTypes.SqlBytes
  parent: System.Data.SqlTypes
  isExternal: false
  name: SqlBytes
  nameWithType: SqlBytes
  fullName: System.Data.SqlTypes.SqlBytes
- uid: System.Data.SqlTypes.SqlChars
  commentId: T:System.Data.SqlTypes.SqlChars
  parent: System.Data.SqlTypes
  isExternal: false
  name: SqlChars
  nameWithType: SqlChars
  fullName: System.Data.SqlTypes.SqlChars
- uid: System.Data.SqlTypes.SqlDateTime
  commentId: T:System.Data.SqlTypes.SqlDateTime
  parent: System.Data.SqlTypes
  isExternal: false
  name: SqlDateTime
  nameWithType: SqlDateTime
  fullName: System.Data.SqlTypes.SqlDateTime
- uid: System.Data.SqlTypes.SqlDecimal
  commentId: T:System.Data.SqlTypes.SqlDecimal
  parent: System.Data.SqlTypes
  isExternal: false
  name: SqlDecimal
  nameWithType: SqlDecimal
  fullName: System.Data.SqlTypes.SqlDecimal
- uid: System.Data.SqlTypes.SqlDouble
  commentId: T:System.Data.SqlTypes.SqlDouble
  parent: System.Data.SqlTypes
  isExternal: false
  name: SqlDouble
  nameWithType: SqlDouble
  fullName: System.Data.SqlTypes.SqlDouble
- uid: System.Data.SqlTypes.SqlGuid
  commentId: T:System.Data.SqlTypes.SqlGuid
  parent: System.Data.SqlTypes
  isExternal: false
  name: SqlGuid
  nameWithType: SqlGuid
  fullName: System.Data.SqlTypes.SqlGuid
- uid: System.Data.SqlTypes.SqlInt16
  commentId: T:System.Data.SqlTypes.SqlInt16
  parent: System.Data.SqlTypes
  isExternal: false
  name: SqlInt16
  nameWithType: SqlInt16
  fullName: System.Data.SqlTypes.SqlInt16
- uid: System.Data.SqlTypes.SqlInt32
  commentId: T:System.Data.SqlTypes.SqlInt32
  parent: System.Data.SqlTypes
  isExternal: false
  name: SqlInt32
  nameWithType: SqlInt32
  fullName: System.Data.SqlTypes.SqlInt32
- uid: System.Data.SqlTypes.SqlInt64
  commentId: T:System.Data.SqlTypes.SqlInt64
  parent: System.Data.SqlTypes
  isExternal: false
  name: SqlInt64
  nameWithType: SqlInt64
  fullName: System.Data.SqlTypes.SqlInt64
- uid: System.Data.SqlTypes.SqlMoney
  commentId: T:System.Data.SqlTypes.SqlMoney
  parent: System.Data.SqlTypes
  isExternal: false
  name: SqlMoney
  nameWithType: SqlMoney
  fullName: System.Data.SqlTypes.SqlMoney
- uid: System.Data.SqlTypes.SqlSingle
  commentId: T:System.Data.SqlTypes.SqlSingle
  parent: System.Data.SqlTypes
  isExternal: false
  name: SqlSingle
  nameWithType: SqlSingle
  fullName: System.Data.SqlTypes.SqlSingle
- uid: System.Data.SqlTypes.SqlString
  commentId: T:System.Data.SqlTypes.SqlString
  parent: System.Data.SqlTypes
  isExternal: false
  name: SqlString
  nameWithType: SqlString
  fullName: System.Data.SqlTypes.SqlString
- uid: System.Data.SqlTypes.SqlXml
  commentId: T:System.Data.SqlTypes.SqlXml
  parent: System.Data.SqlTypes
  isExternal: false
  name: SqlXml
  nameWithType: SqlXml
  fullName: System.Data.SqlTypes.SqlXml
- uid: System.IO.Stream
  commentId: T:System.IO.Stream
  parent: System.IO
  isExternal: false
  name: Stream
  nameWithType: Stream
  fullName: System.IO.Stream
- uid: System.IO
  commentId: N:System.IO
  isExternal: false
  name: System.IO
  nameWithType: System.IO
  fullName: System.IO
- uid: System.IO.TextReader
  commentId: T:System.IO.TextReader
  parent: System.IO
  isExternal: false
  name: TextReader
  nameWithType: TextReader
  fullName: System.IO.TextReader
- uid: System.TimeSpan
  commentId: T:System.TimeSpan
  parent: System
  isExternal: false
  name: TimeSpan
  nameWithType: TimeSpan
  fullName: System.TimeSpan
- uid: System.Xml.XmlReader
  commentId: T:System.Xml.XmlReader
  parent: System.Xml
  isExternal: false
  name: Xml.XmlReader
  nameWithType: Xml.XmlReader
  fullName: System.Xml.XmlReader
- uid: System.Xml
  commentId: N:System.Xml
  isExternal: false
  name: System.Xml
  nameWithType: System.Xml
  fullName: System.Xml
- uid: System.Threading.Tasks.Task{System.Boolean}
  commentId: T:System.Threading.Tasks.Task{System.Boolean}
  parent: System.Threading.Tasks
  definition: System.Threading.Tasks.Task`1
  name: Task<Boolean>
  nameWithType: Task<Boolean>
  fullName: System.Threading.Tasks.Task<System.Boolean>
  nameWithType.vb: Task(Of Boolean)
  fullname.vb: System.Threading.Tasks.Task(Of System.Boolean)
  name.vb: Task(Of Boolean)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.NotSupportedException
  commentId: T:System.NotSupportedException
  parent: System
  isExternal: false
  name: NotSupportedException
  nameWithType: NotSupportedException
  fullName: System.NotSupportedException
- uid: System.IndexOutOfRangeException
  commentId: T:System.IndexOutOfRangeException
  isExternal: false
  name: IndexOutOfRangeException
  nameWithType: IndexOutOfRangeException
  fullName: System.IndexOutOfRangeException
- uid: System.InvalidCastException
  commentId: T:System.InvalidCastException
  isExternal: false
  name: InvalidCastException
  nameWithType: InvalidCastException
  fullName: System.InvalidCastException
- uid: System.InvalidOperationException
  commentId: T:System.InvalidOperationException
  parent: System
  isExternal: false
  name: InvalidOperationException
  nameWithType: InvalidOperationException
  fullName: System.InvalidOperationException
- uid: System.Data.SqlTypes.SqlNullValueException
  commentId: T:System.Data.SqlTypes.SqlNullValueException
  isExternal: false
  name: SqlNullValueException
  nameWithType: SqlNullValueException
  fullName: System.Data.SqlTypes.SqlNullValueException
- uid: System.ArgumentNullException
  commentId: T:System.ArgumentNullException
  isExternal: false
  name: ArgumentNullException
  nameWithType: ArgumentNullException
  fullName: System.ArgumentNullException
- uid: System.ArgumentOutOfRangeException
  commentId: T:System.ArgumentOutOfRangeException
  isExternal: false
  name: ArgumentOutOfRangeException
  nameWithType: ArgumentOutOfRangeException
  fullName: System.ArgumentOutOfRangeException
- uid: System.Data.SqlClient.SqlException
  commentId: T:System.Data.SqlClient.SqlException
  isExternal: false
  name: SqlException
  nameWithType: SqlException
  fullName: System.Data.SqlClient.SqlException
