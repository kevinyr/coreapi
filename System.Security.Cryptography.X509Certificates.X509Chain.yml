items:
- uid: System.Security.Cryptography.X509Certificates.X509Chain
  commentId: T:System.Security.Cryptography.X509Certificates.X509Chain
  id: X509Chain
  parent: System.Security.Cryptography.X509Certificates
  children:
  - System.Security.Cryptography.X509Certificates.X509Chain.#ctor
  - System.Security.Cryptography.X509Certificates.X509Chain.Build(System.Security.Cryptography.X509Certificates.X509Certificate2)
  - System.Security.Cryptography.X509Certificates.X509Chain.ChainElements
  - System.Security.Cryptography.X509Certificates.X509Chain.ChainPolicy
  - System.Security.Cryptography.X509Certificates.X509Chain.ChainStatus
  - System.Security.Cryptography.X509Certificates.X509Chain.Dispose
  - System.Security.Cryptography.X509Certificates.X509Chain.Dispose(System.Boolean)
  - System.Security.Cryptography.X509Certificates.X509Chain.SafeHandle
  langs:
  - csharp
  - vb
  name: X509Chain
  fullName: System.Security.Cryptography.X509Certificates.X509Chain
  type: Class
  source:
    remote:
      path: src/System.Security.Cryptography.X509Certificates/ref/4.0/System.Security.Cryptography.X509Certificates.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: X509Chain
    path: src/System.Security.Cryptography.X509Certificates/ref/4.0/System.Security.Cryptography.X509Certificates.cs
    startLine: 212
  assemblies:
  - System.Security.Cryptography.X509Certificates
  namespace: System.Security.Cryptography.X509Certificates
  summary: "\n<p>Represents a chain-building engine for <xref href=\"System.Security.Cryptography.X509Certificates.X509Certificate2\" data-throw-if-not-resolved=\"false\"></xref> certificates.</p>\n"
  syntax:
    content: 'public class X509Chain : IDisposable'
    content.vb: >-
      Public Class X509Chain
          Implements IDisposable
  inheritance:
  - System.Object
  implements:
  - System.IDisposable
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
  nameWithType: X509Chain
- uid: System.Security.Cryptography.X509Certificates.X509Chain.#ctor
  commentId: M:System.Security.Cryptography.X509Certificates.X509Chain.#ctor
  id: '#ctor'
  parent: System.Security.Cryptography.X509Certificates.X509Chain
  langs:
  - csharp
  - vb
  name: X509Chain()
  fullName: System.Security.Cryptography.X509Certificates.X509Chain.X509Chain()
  type: Constructor
  source:
    remote:
      path: src/System.Security.Cryptography.X509Certificates/ref/4.0/System.Security.Cryptography.X509Certificates.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: .ctor
    path: src/System.Security.Cryptography.X509Certificates/ref/4.0/System.Security.Cryptography.X509Certificates.cs
    startLine: 214
  assemblies:
  - System.Security.Cryptography.X509Certificates
  namespace: System.Security.Cryptography.X509Certificates
  summary: "\n<p>Initializes a new instance of the <xref href=\"System.Security.Cryptography.X509Certificates.X509Chain\" data-throw-if-not-resolved=\"false\"></xref> class.</p>\n"
  syntax:
    content: public X509Chain()
    content.vb: Public Sub New
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  nameWithType: X509Chain.X509Chain()
- uid: System.Security.Cryptography.X509Certificates.X509Chain.ChainElements
  commentId: P:System.Security.Cryptography.X509Certificates.X509Chain.ChainElements
  id: ChainElements
  parent: System.Security.Cryptography.X509Certificates.X509Chain
  langs:
  - csharp
  - vb
  name: ChainElements
  fullName: System.Security.Cryptography.X509Certificates.X509Chain.ChainElements
  type: Property
  source:
    remote:
      path: src/System.Security.Cryptography.X509Certificates/ref/4.0/System.Security.Cryptography.X509Certificates.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: ChainElements
    path: src/System.Security.Cryptography.X509Certificates/ref/4.0/System.Security.Cryptography.X509Certificates.cs
    startLine: 215
  assemblies:
  - System.Security.Cryptography.X509Certificates
  namespace: System.Security.Cryptography.X509Certificates
  summary: "\n<p>Gets a collection of <xref href=\"System.Security.Cryptography.X509Certificates.X509ChainElement\" data-throw-if-not-resolved=\"false\"></xref> objects.</p>\n"
  syntax:
    content: public X509ChainElementCollection ChainElements { get; }
    content.vb: Public ReadOnly Property ChainElements As X509ChainElementCollection
    parameters: []
    return:
      type: System.Security.Cryptography.X509Certificates.X509ChainElementCollection
      description: "\n<p>An <xref href=\"System.Security.Cryptography.X509Certificates.X509ChainElementCollection\" data-throw-if-not-resolved=\"false\"></xref> object.</p>\n"
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
  nameWithType: X509Chain.ChainElements
- uid: System.Security.Cryptography.X509Certificates.X509Chain.ChainPolicy
  commentId: P:System.Security.Cryptography.X509Certificates.X509Chain.ChainPolicy
  id: ChainPolicy
  parent: System.Security.Cryptography.X509Certificates.X509Chain
  langs:
  - csharp
  - vb
  name: ChainPolicy
  fullName: System.Security.Cryptography.X509Certificates.X509Chain.ChainPolicy
  type: Property
  source:
    remote:
      path: src/System.Security.Cryptography.X509Certificates/ref/4.0/System.Security.Cryptography.X509Certificates.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: ChainPolicy
    path: src/System.Security.Cryptography.X509Certificates/ref/4.0/System.Security.Cryptography.X509Certificates.cs
    startLine: 216
  assemblies:
  - System.Security.Cryptography.X509Certificates
  namespace: System.Security.Cryptography.X509Certificates
  summary: "\n<p>Gets or sets the <xref href=\"System.Security.Cryptography.X509Certificates.X509ChainPolicy\" data-throw-if-not-resolved=\"false\"></xref> to use when building an X.509 certificate chain.</p>\n"
  syntax:
    content: public X509ChainPolicy ChainPolicy { get; set; }
    content.vb: Public Property ChainPolicy As X509ChainPolicy
    parameters: []
    return:
      type: System.Security.Cryptography.X509Certificates.X509ChainPolicy
      description: "\n<p>The <xref href=\"System.Security.Cryptography.X509Certificates.X509ChainPolicy\" data-throw-if-not-resolved=\"false\"></xref> object associated with this X.509 chain.</p>\n"
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "\n<p>The value being set for this property is <strong>null</strong>.</p>\n"
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
  nameWithType: X509Chain.ChainPolicy
- uid: System.Security.Cryptography.X509Certificates.X509Chain.ChainStatus
  commentId: P:System.Security.Cryptography.X509Certificates.X509Chain.ChainStatus
  id: ChainStatus
  parent: System.Security.Cryptography.X509Certificates.X509Chain
  langs:
  - csharp
  - vb
  name: ChainStatus
  fullName: System.Security.Cryptography.X509Certificates.X509Chain.ChainStatus
  type: Property
  source:
    remote:
      path: src/System.Security.Cryptography.X509Certificates/ref/4.0/System.Security.Cryptography.X509Certificates.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: ChainStatus
    path: src/System.Security.Cryptography.X509Certificates/ref/4.0/System.Security.Cryptography.X509Certificates.cs
    startLine: 217
  assemblies:
  - System.Security.Cryptography.X509Certificates
  namespace: System.Security.Cryptography.X509Certificates
  summary: "\n<p>Gets the status of each element in an <xref href=\"System.Security.Cryptography.X509Certificates.X509Chain\" data-throw-if-not-resolved=\"false\"></xref> object.</p>\n"
  syntax:
    content: public X509ChainStatus[] ChainStatus { get; }
    content.vb: Public ReadOnly Property ChainStatus As X509ChainStatus()
    parameters: []
    return:
      type: System.Security.Cryptography.X509Certificates.X509ChainStatus[]
      description: "\n<p>An array of <xref href=\"System.Security.Cryptography.X509Certificates.X509ChainStatus\" data-throw-if-not-resolved=\"false\"></xref> objects.</p>\n"
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
  nameWithType: X509Chain.ChainStatus
- uid: System.Security.Cryptography.X509Certificates.X509Chain.SafeHandle
  commentId: P:System.Security.Cryptography.X509Certificates.X509Chain.SafeHandle
  id: SafeHandle
  parent: System.Security.Cryptography.X509Certificates.X509Chain
  langs:
  - csharp
  - vb
  name: SafeHandle
  fullName: System.Security.Cryptography.X509Certificates.X509Chain.SafeHandle
  type: Property
  source:
    remote:
      path: src/System.Security.Cryptography.X509Certificates/ref/4.0/System.Security.Cryptography.X509Certificates.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: SafeHandle
    path: src/System.Security.Cryptography.X509Certificates/ref/4.0/System.Security.Cryptography.X509Certificates.cs
    startLine: 218
  assemblies:
  - System.Security.Cryptography.X509Certificates
  namespace: System.Security.Cryptography.X509Certificates
  summary: "\n<p>Gets a safe handle for this <xref href=\"System.Security.Cryptography.X509Certificates.X509Chain\" data-throw-if-not-resolved=\"false\"></xref> instance. </p>\n"
  syntax:
    content: public SafeX509ChainHandle SafeHandle { get; }
    content.vb: Public ReadOnly Property SafeHandle As SafeX509ChainHandle
    parameters: []
    return:
      type: Microsoft.Win32.SafeHandles.SafeX509ChainHandle
      description: "\n<p>Returns the <xref href=\"Microsoft.Win32.SafeHandles.SafeX509ChainHandle\" data-throw-if-not-resolved=\"false\"></xref>.</p>\n"
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
  nameWithType: X509Chain.SafeHandle
- uid: System.Security.Cryptography.X509Certificates.X509Chain.Build(System.Security.Cryptography.X509Certificates.X509Certificate2)
  commentId: M:System.Security.Cryptography.X509Certificates.X509Chain.Build(System.Security.Cryptography.X509Certificates.X509Certificate2)
  id: Build(System.Security.Cryptography.X509Certificates.X509Certificate2)
  parent: System.Security.Cryptography.X509Certificates.X509Chain
  langs:
  - csharp
  - vb
  name: Build(X509Certificate2)
  fullName: System.Security.Cryptography.X509Certificates.X509Chain.Build(System.Security.Cryptography.X509Certificates.X509Certificate2)
  type: Method
  source:
    remote:
      path: src/System.Security.Cryptography.X509Certificates/ref/4.0/System.Security.Cryptography.X509Certificates.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: Build
    path: src/System.Security.Cryptography.X509Certificates/ref/4.0/System.Security.Cryptography.X509Certificates.cs
    startLine: 219
  assemblies:
  - System.Security.Cryptography.X509Certificates
  namespace: System.Security.Cryptography.X509Certificates
  summary: "\n<p>Builds an X.509 chain using the policy specified in <xref href=\"System.Security.Cryptography.X509Certificates.X509ChainPolicy\" data-throw-if-not-resolved=\"false\"></xref>.</p>\n"
  syntax:
    content: public bool Build(X509Certificate2 certificate)
    content.vb: Public Function Build(certificate As X509Certificate2) As Boolean
    parameters:
    - id: certificate
      type: System.Security.Cryptography.X509Certificates.X509Certificate2
      description: "\n<p>An <xref href=\"System.Security.Cryptography.X509Certificates.X509Certificate2\" data-throw-if-not-resolved=\"false\"></xref> object.</p>\n"
    return:
      type: System.Boolean
      description: "\n<p>\n<strong>true</strong> if the X.509 certificate is valid; otherwise, <strong>false</strong>.</p>\n"
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "\n<p>The <em>certificate</em> is not a valid certificate or is <strong>null</strong>. </p>\n"
  - type: System.Security.Cryptography.CryptographicException
    commentId: T:System.Security.Cryptography.CryptographicException
    description: "\n<p>The <em>certificate</em> is unreadable. </p>\n"
  see:
  - type: System.Security.Permissions.SecurityAction.InheritanceDemand
    commentId: F:System.Security.Permissions.SecurityAction.InheritanceDemand
  - type: System.Security.Permissions.SecurityAction.LinkDemand
    commentId: F:System.Security.Permissions.SecurityAction.LinkDemand
  - type: System.Security.Permissions.StorePermission
    commentId: T:System.Security.Permissions.StorePermission
  - type: System.Security.Permissions.StorePermission
    commentId: T:System.Security.Permissions.StorePermission
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  nameWithType: X509Chain.Build(X509Certificate2)
- uid: System.Security.Cryptography.X509Certificates.X509Chain.Dispose
  commentId: M:System.Security.Cryptography.X509Certificates.X509Chain.Dispose
  id: Dispose
  parent: System.Security.Cryptography.X509Certificates.X509Chain
  langs:
  - csharp
  - vb
  name: Dispose()
  fullName: System.Security.Cryptography.X509Certificates.X509Chain.Dispose()
  type: Method
  source:
    remote:
      path: src/System.Security.Cryptography.X509Certificates/ref/4.0/System.Security.Cryptography.X509Certificates.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: Dispose
    path: src/System.Security.Cryptography.X509Certificates/ref/4.0/System.Security.Cryptography.X509Certificates.cs
    startLine: 220
  assemblies:
  - System.Security.Cryptography.X509Certificates
  namespace: System.Security.Cryptography.X509Certificates
  summary: "\n<p>Releases all of the resources used by this <xref href=\"System.Security.Cryptography.X509Certificates.X509Chain\" data-throw-if-not-resolved=\"false\"></xref>.</p>\n"
  syntax:
    content: public void Dispose()
    content.vb: Public Sub Dispose
  implements:
  - System.IDisposable.Dispose
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  nameWithType: X509Chain.Dispose()
- uid: System.Security.Cryptography.X509Certificates.X509Chain.Dispose(System.Boolean)
  commentId: M:System.Security.Cryptography.X509Certificates.X509Chain.Dispose(System.Boolean)
  id: Dispose(System.Boolean)
  parent: System.Security.Cryptography.X509Certificates.X509Chain
  langs:
  - csharp
  - vb
  name: Dispose(Boolean)
  fullName: System.Security.Cryptography.X509Certificates.X509Chain.Dispose(System.Boolean)
  type: Method
  source:
    remote:
      path: src/System.Security.Cryptography.X509Certificates/ref/4.0/System.Security.Cryptography.X509Certificates.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: Dispose
    path: src/System.Security.Cryptography.X509Certificates/ref/4.0/System.Security.Cryptography.X509Certificates.cs
    startLine: 221
  assemblies:
  - System.Security.Cryptography.X509Certificates
  namespace: System.Security.Cryptography.X509Certificates
  summary: "\n<p>Releases the unmanaged resources used by this <xref href=\"System.Security.Cryptography.X509Certificates.X509Chain\" data-throw-if-not-resolved=\"false\"></xref>, and optionally releases the managed resources.</p>\n"
  syntax:
    content: protected virtual void Dispose(bool disposing)
    content.vb: Protected Overridable Sub Dispose(disposing As Boolean)
    parameters:
    - id: disposing
      type: System.Boolean
      description: "\n<p>\n<strong>true</strong> to release both managed and unmanaged resources; <strong>false</strong> to release only unmanaged resources.</p>\n"
  modifiers.csharp:
  - protected
  - virtual
  modifiers.vb:
  - Protected
  - Overridable
  nameWithType: X509Chain.Dispose(Boolean)
references:
- uid: System.Security.Cryptography.X509Certificates
  isExternal: false
  name: System.Security.Cryptography.X509Certificates
  fullName: System.Security.Cryptography.X509Certificates
  commentId: N:System.Security.Cryptography.X509Certificates
  nameWithType: System.Security.Cryptography.X509Certificates
- uid: System.Object
  parent: System
  isExternal: false
  name: Object
  fullName: System.Object
  commentId: T:System.Object
  nameWithType: Object
- uid: System.IDisposable
  parent: System
  isExternal: false
  name: IDisposable
  fullName: System.IDisposable
  commentId: T:System.IDisposable
  nameWithType: IDisposable
- uid: System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  commentId: M:System.Object.ToString
  nameWithType: Object.ToString()
- uid: System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
  commentId: M:System.Object.Equals(System.Object)
  nameWithType: Object.Equals(Object)
- uid: System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
  commentId: M:System.Object.Equals(System.Object,System.Object)
  nameWithType: Object.Equals(Object, Object)
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
- uid: System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  commentId: M:System.Object.GetHashCode
  nameWithType: Object.GetHashCode()
- uid: System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  commentId: M:System.Object.GetType
  nameWithType: Object.GetType()
- uid: System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  commentId: M:System.Object.MemberwiseClone
  nameWithType: Object.MemberwiseClone()
- uid: System
  isExternal: false
  name: System
  fullName: System
  commentId: N:System
  nameWithType: System
- uid: System.Security.Cryptography.X509Certificates.X509ChainElementCollection
  parent: System.Security.Cryptography.X509Certificates
  isExternal: false
  name: X509ChainElementCollection
  fullName: System.Security.Cryptography.X509Certificates.X509ChainElementCollection
  commentId: T:System.Security.Cryptography.X509Certificates.X509ChainElementCollection
  nameWithType: X509ChainElementCollection
- uid: System.Security.Cryptography.X509Certificates.X509ChainPolicy
  parent: System.Security.Cryptography.X509Certificates
  isExternal: false
  name: X509ChainPolicy
  fullName: System.Security.Cryptography.X509Certificates.X509ChainPolicy
  commentId: T:System.Security.Cryptography.X509Certificates.X509ChainPolicy
  nameWithType: X509ChainPolicy
- uid: System.Security.Cryptography.X509Certificates.X509ChainStatus[]
  name: X509ChainStatus[]
  fullName: System.Security.Cryptography.X509Certificates.X509ChainStatus[]
  fullname.vb: System.Security.Cryptography.X509Certificates.X509ChainStatus()
  name.vb: X509ChainStatus()
  spec.csharp:
  - uid: System.Security.Cryptography.X509Certificates.X509ChainStatus
    name: X509ChainStatus
    fullName: System.Security.Cryptography.X509Certificates.X509ChainStatus
  - name: '[]'
    fullName: '[]'
  spec.vb:
  - uid: System.Security.Cryptography.X509Certificates.X509ChainStatus
    name: X509ChainStatus
    fullName: System.Security.Cryptography.X509Certificates.X509ChainStatus
  - name: ()
    fullName: ()
  nameWithType: X509ChainStatus[]
  nameWithType.vb: X509ChainStatus()
- uid: Microsoft.Win32.SafeHandles.SafeX509ChainHandle
  parent: Microsoft.Win32.SafeHandles
  isExternal: false
  name: SafeX509ChainHandle
  fullName: Microsoft.Win32.SafeHandles.SafeX509ChainHandle
  commentId: T:Microsoft.Win32.SafeHandles.SafeX509ChainHandle
  nameWithType: SafeX509ChainHandle
- uid: Microsoft.Win32.SafeHandles
  isExternal: false
  name: Microsoft.Win32.SafeHandles
  fullName: Microsoft.Win32.SafeHandles
  commentId: N:Microsoft.Win32.SafeHandles
  nameWithType: Microsoft.Win32.SafeHandles
- uid: System.Security.Cryptography.X509Certificates.X509Certificate2
  parent: System.Security.Cryptography.X509Certificates
  isExternal: false
  name: X509Certificate2
  fullName: System.Security.Cryptography.X509Certificates.X509Certificate2
  commentId: T:System.Security.Cryptography.X509Certificates.X509Certificate2
  nameWithType: X509Certificate2
- uid: System.Boolean
  parent: System
  isExternal: false
  name: Boolean
  fullName: System.Boolean
  commentId: T:System.Boolean
  nameWithType: Boolean
- uid: System.IDisposable.Dispose
  parent: System.IDisposable
  isExternal: false
  name: Dispose()
  fullName: System.IDisposable.Dispose()
  spec.csharp:
  - uid: System.IDisposable.Dispose
    name: Dispose
    fullName: System.IDisposable.Dispose
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.IDisposable.Dispose
    name: Dispose
    fullName: System.IDisposable.Dispose
  - name: (
    fullName: (
  - name: )
    fullName: )
  commentId: M:System.IDisposable.Dispose
  nameWithType: IDisposable.Dispose()
- uid: System.ArgumentNullException
  isExternal: false
  name: ArgumentNullException
  fullName: System.ArgumentNullException
  nameWithType: ArgumentNullException
  commentId: T:System.ArgumentNullException
- uid: System.ArgumentException
  parent: System
  isExternal: false
  name: ArgumentException
  fullName: System.ArgumentException
  nameWithType: ArgumentException
  commentId: T:System.ArgumentException
- uid: System.Security.Cryptography.CryptographicException
  isExternal: false
  name: CryptographicException
  fullName: System.Security.Cryptography.CryptographicException
  nameWithType: CryptographicException
  commentId: T:System.Security.Cryptography.CryptographicException
