### YamlMime:ManagedReference
items:
- uid: System.Security.AccessControl.DirectoryObjectSecurity
  commentId: T:System.Security.AccessControl.DirectoryObjectSecurity
  id: DirectoryObjectSecurity
  parent: System.Security.AccessControl
  children:
  - System.Security.AccessControl.DirectoryObjectSecurity.#ctor
  - System.Security.AccessControl.DirectoryObjectSecurity.#ctor(System.Security.AccessControl.CommonSecurityDescriptor)
  - System.Security.AccessControl.DirectoryObjectSecurity.AccessRuleFactory(System.Security.Principal.IdentityReference,System.Int32,System.Boolean,System.Security.AccessControl.InheritanceFlags,System.Security.AccessControl.PropagationFlags,System.Security.AccessControl.AccessControlType,System.Guid,System.Guid)
  - System.Security.AccessControl.DirectoryObjectSecurity.AddAccessRule(System.Security.AccessControl.ObjectAccessRule)
  - System.Security.AccessControl.DirectoryObjectSecurity.AddAuditRule(System.Security.AccessControl.ObjectAuditRule)
  - System.Security.AccessControl.DirectoryObjectSecurity.AuditRuleFactory(System.Security.Principal.IdentityReference,System.Int32,System.Boolean,System.Security.AccessControl.InheritanceFlags,System.Security.AccessControl.PropagationFlags,System.Security.AccessControl.AuditFlags,System.Guid,System.Guid)
  - System.Security.AccessControl.DirectoryObjectSecurity.GetAccessRules(System.Boolean,System.Boolean,System.Type)
  - System.Security.AccessControl.DirectoryObjectSecurity.GetAuditRules(System.Boolean,System.Boolean,System.Type)
  - System.Security.AccessControl.DirectoryObjectSecurity.ModifyAccess(System.Security.AccessControl.AccessControlModification,System.Security.AccessControl.AccessRule,System.Boolean@)
  - System.Security.AccessControl.DirectoryObjectSecurity.ModifyAudit(System.Security.AccessControl.AccessControlModification,System.Security.AccessControl.AuditRule,System.Boolean@)
  - System.Security.AccessControl.DirectoryObjectSecurity.RemoveAccessRule(System.Security.AccessControl.ObjectAccessRule)
  - System.Security.AccessControl.DirectoryObjectSecurity.RemoveAccessRuleAll(System.Security.AccessControl.ObjectAccessRule)
  - System.Security.AccessControl.DirectoryObjectSecurity.RemoveAccessRuleSpecific(System.Security.AccessControl.ObjectAccessRule)
  - System.Security.AccessControl.DirectoryObjectSecurity.RemoveAuditRule(System.Security.AccessControl.ObjectAuditRule)
  - System.Security.AccessControl.DirectoryObjectSecurity.RemoveAuditRuleAll(System.Security.AccessControl.ObjectAuditRule)
  - System.Security.AccessControl.DirectoryObjectSecurity.RemoveAuditRuleSpecific(System.Security.AccessControl.ObjectAuditRule)
  - System.Security.AccessControl.DirectoryObjectSecurity.ResetAccessRule(System.Security.AccessControl.ObjectAccessRule)
  - System.Security.AccessControl.DirectoryObjectSecurity.SetAccessRule(System.Security.AccessControl.ObjectAccessRule)
  - System.Security.AccessControl.DirectoryObjectSecurity.SetAuditRule(System.Security.AccessControl.ObjectAuditRule)
  langs:
  - csharp
  - vb
  name: DirectoryObjectSecurity
  nameWithType: DirectoryObjectSecurity
  fullName: System.Security.AccessControl.DirectoryObjectSecurity
  type: Class
  source:
    remote:
      path: src/System.IO.FileSystem.AccessControl/ref/System.IO.FileSystem.AccessControl.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: DirectoryObjectSecurity
    path: src/System.IO.FileSystem.AccessControl/ref/System.IO.FileSystem.AccessControl.cs
    startLine: 25
  assemblies:
  - System.IO.FileSystem.AccessControl
  namespace: System.Security.AccessControl
  summary: "\n<p>Provides the ability to control access to directory objects without direct manipulation of Access Control Lists (ACLs).</p>\n"
  syntax:
    content: >-
      [SecurityCritical]

      public abstract class DirectoryObjectSecurity : ObjectSecurity
    content.vb: >-
      <SecurityCritical>

      Public MustInherit Class DirectoryObjectSecurity
          Inherits ObjectSecurity
  inheritance:
  - System.Object
  - System.Security.AccessControl.ObjectSecurity
  inheritedMembers:
  - System.Security.AccessControl.ObjectSecurity.ReadLock
  - System.Security.AccessControl.ObjectSecurity.ReadUnlock
  - System.Security.AccessControl.ObjectSecurity.WriteLock
  - System.Security.AccessControl.ObjectSecurity.WriteUnlock
  - System.Security.AccessControl.ObjectSecurity.Persist(System.String,System.Security.AccessControl.AccessControlSections)
  - System.Security.AccessControl.ObjectSecurity.Persist(System.Boolean,System.String,System.Security.AccessControl.AccessControlSections)
  - System.Security.AccessControl.ObjectSecurity.Persist(System.Runtime.InteropServices.SafeHandle,System.Security.AccessControl.AccessControlSections)
  - System.Security.AccessControl.ObjectSecurity.GetOwner(System.Type)
  - System.Security.AccessControl.ObjectSecurity.SetOwner(System.Security.Principal.IdentityReference)
  - System.Security.AccessControl.ObjectSecurity.GetGroup(System.Type)
  - System.Security.AccessControl.ObjectSecurity.SetGroup(System.Security.Principal.IdentityReference)
  - System.Security.AccessControl.ObjectSecurity.PurgeAccessRules(System.Security.Principal.IdentityReference)
  - System.Security.AccessControl.ObjectSecurity.PurgeAuditRules(System.Security.Principal.IdentityReference)
  - System.Security.AccessControl.ObjectSecurity.SetAccessRuleProtection(System.Boolean,System.Boolean)
  - System.Security.AccessControl.ObjectSecurity.SetAuditRuleProtection(System.Boolean,System.Boolean)
  - System.Security.AccessControl.ObjectSecurity.IsSddlConversionSupported
  - System.Security.AccessControl.ObjectSecurity.GetSecurityDescriptorSddlForm(System.Security.AccessControl.AccessControlSections)
  - System.Security.AccessControl.ObjectSecurity.SetSecurityDescriptorSddlForm(System.String)
  - System.Security.AccessControl.ObjectSecurity.SetSecurityDescriptorSddlForm(System.String,System.Security.AccessControl.AccessControlSections)
  - System.Security.AccessControl.ObjectSecurity.GetSecurityDescriptorBinaryForm
  - System.Security.AccessControl.ObjectSecurity.SetSecurityDescriptorBinaryForm(System.Byte[])
  - System.Security.AccessControl.ObjectSecurity.SetSecurityDescriptorBinaryForm(System.Byte[],System.Security.AccessControl.AccessControlSections)
  - System.Security.AccessControl.ObjectSecurity.ModifyAccessRule(System.Security.AccessControl.AccessControlModification,System.Security.AccessControl.AccessRule,System.Boolean@)
  - System.Security.AccessControl.ObjectSecurity.ModifyAuditRule(System.Security.AccessControl.AccessControlModification,System.Security.AccessControl.AuditRule,System.Boolean@)
  - System.Security.AccessControl.ObjectSecurity.AccessRuleFactory(System.Security.Principal.IdentityReference,System.Int32,System.Boolean,System.Security.AccessControl.InheritanceFlags,System.Security.AccessControl.PropagationFlags,System.Security.AccessControl.AccessControlType)
  - System.Security.AccessControl.ObjectSecurity.AuditRuleFactory(System.Security.Principal.IdentityReference,System.Int32,System.Boolean,System.Security.AccessControl.InheritanceFlags,System.Security.AccessControl.PropagationFlags,System.Security.AccessControl.AuditFlags)
  - System.Security.AccessControl.ObjectSecurity.OwnerModified
  - System.Security.AccessControl.ObjectSecurity.GroupModified
  - System.Security.AccessControl.ObjectSecurity.AuditRulesModified
  - System.Security.AccessControl.ObjectSecurity.AccessRulesModified
  - System.Security.AccessControl.ObjectSecurity.IsContainer
  - System.Security.AccessControl.ObjectSecurity.IsDS
  - System.Security.AccessControl.ObjectSecurity.AreAccessRulesProtected
  - System.Security.AccessControl.ObjectSecurity.AreAuditRulesProtected
  - System.Security.AccessControl.ObjectSecurity.AreAccessRulesCanonical
  - System.Security.AccessControl.ObjectSecurity.AreAuditRulesCanonical
  - System.Security.AccessControl.ObjectSecurity.AccessRightType
  - System.Security.AccessControl.ObjectSecurity.AccessRuleType
  - System.Security.AccessControl.ObjectSecurity.AuditRuleType
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  attributes:
  - type: System.Security.SecurityCriticalAttribute
    ctor: System.Security.SecurityCriticalAttribute.#ctor
    arguments: []
  modifiers.csharp:
  - public
  - abstract
  - class
  modifiers.vb:
  - Public
  - MustInherit
  - Class
- uid: System.Security.AccessControl.DirectoryObjectSecurity.#ctor
  commentId: M:System.Security.AccessControl.DirectoryObjectSecurity.#ctor
  id: '#ctor'
  parent: System.Security.AccessControl.DirectoryObjectSecurity
  langs:
  - csharp
  - vb
  name: DirectoryObjectSecurity()
  nameWithType: DirectoryObjectSecurity.DirectoryObjectSecurity()
  fullName: System.Security.AccessControl.DirectoryObjectSecurity.DirectoryObjectSecurity()
  type: Constructor
  source:
    remote:
      path: src/System.IO.FileSystem.AccessControl/ref/System.IO.FileSystem.AccessControl.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: .ctor
    path: src/System.IO.FileSystem.AccessControl/ref/System.IO.FileSystem.AccessControl.cs
    startLine: 28
  assemblies:
  - System.IO.FileSystem.AccessControl
  namespace: System.Security.AccessControl
  summary: "\n<p>Initializes a new instance of the <xref href=\"System.Security.AccessControl.DirectoryObjectSecurity\" data-throw-if-not-resolved=\"false\"></xref> class.</p>\n"
  syntax:
    content: protected DirectoryObjectSecurity()
    content.vb: Protected Sub New
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: System.Security.AccessControl.DirectoryObjectSecurity.#ctor(System.Security.AccessControl.CommonSecurityDescriptor)
  commentId: M:System.Security.AccessControl.DirectoryObjectSecurity.#ctor(System.Security.AccessControl.CommonSecurityDescriptor)
  id: '#ctor(System.Security.AccessControl.CommonSecurityDescriptor)'
  parent: System.Security.AccessControl.DirectoryObjectSecurity
  langs:
  - csharp
  - vb
  name: DirectoryObjectSecurity(CommonSecurityDescriptor)
  nameWithType: DirectoryObjectSecurity.DirectoryObjectSecurity(CommonSecurityDescriptor)
  fullName: System.Security.AccessControl.DirectoryObjectSecurity.DirectoryObjectSecurity(System.Security.AccessControl.CommonSecurityDescriptor)
  type: Constructor
  source:
    remote:
      path: src/System.IO.FileSystem.AccessControl/ref/System.IO.FileSystem.AccessControl.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: .ctor
    path: src/System.IO.FileSystem.AccessControl/ref/System.IO.FileSystem.AccessControl.cs
    startLine: 29
  assemblies:
  - System.IO.FileSystem.AccessControl
  namespace: System.Security.AccessControl
  summary: "\n<p>Initializes a new instance of the <xref href=\"System.Security.AccessControl.DirectoryObjectSecurity\" data-throw-if-not-resolved=\"false\"></xref> class with the specified security descriptor.</p>\n"
  syntax:
    content: protected DirectoryObjectSecurity(CommonSecurityDescriptor securityDescriptor)
    content.vb: Protected Sub New(securityDescriptor As CommonSecurityDescriptor)
    parameters:
    - id: securityDescriptor
      type: System.Security.AccessControl.CommonSecurityDescriptor
      description: "\n<p>The security descriptor to be associated with the new <xref href=\"System.Security.AccessControl.DirectoryObjectSecurity\" data-throw-if-not-resolved=\"false\"></xref>object.</p>\n"
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: System.Security.AccessControl.DirectoryObjectSecurity.AccessRuleFactory(System.Security.Principal.IdentityReference,System.Int32,System.Boolean,System.Security.AccessControl.InheritanceFlags,System.Security.AccessControl.PropagationFlags,System.Security.AccessControl.AccessControlType,System.Guid,System.Guid)
  commentId: M:System.Security.AccessControl.DirectoryObjectSecurity.AccessRuleFactory(System.Security.Principal.IdentityReference,System.Int32,System.Boolean,System.Security.AccessControl.InheritanceFlags,System.Security.AccessControl.PropagationFlags,System.Security.AccessControl.AccessControlType,System.Guid,System.Guid)
  id: AccessRuleFactory(System.Security.Principal.IdentityReference,System.Int32,System.Boolean,System.Security.AccessControl.InheritanceFlags,System.Security.AccessControl.PropagationFlags,System.Security.AccessControl.AccessControlType,System.Guid,System.Guid)
  parent: System.Security.AccessControl.DirectoryObjectSecurity
  langs:
  - csharp
  - vb
  name: AccessRuleFactory(IdentityReference, Int32, Boolean, InheritanceFlags, PropagationFlags, AccessControlType, Guid, Guid)
  nameWithType: DirectoryObjectSecurity.AccessRuleFactory(IdentityReference, Int32, Boolean, InheritanceFlags, PropagationFlags, AccessControlType, Guid, Guid)
  fullName: System.Security.AccessControl.DirectoryObjectSecurity.AccessRuleFactory(System.Security.Principal.IdentityReference, System.Int32, System.Boolean, System.Security.AccessControl.InheritanceFlags, System.Security.AccessControl.PropagationFlags, System.Security.AccessControl.AccessControlType, System.Guid, System.Guid)
  type: Method
  source:
    remote:
      path: src/System.IO.FileSystem.AccessControl/ref/System.IO.FileSystem.AccessControl.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: AccessRuleFactory
    path: src/System.IO.FileSystem.AccessControl/ref/System.IO.FileSystem.AccessControl.cs
    startLine: 30
  assemblies:
  - System.IO.FileSystem.AccessControl
  namespace: System.Security.AccessControl
  summary: "\n<p>Initializes a new instance of the <xref href=\"System.Security.AccessControl.AccessRule\" data-throw-if-not-resolved=\"false\"></xref> class with the specified values.</p>\n"
  syntax:
    content: public virtual AccessRule AccessRuleFactory(IdentityReference identityReference, int accessMask, bool isInherited, InheritanceFlags inheritanceFlags, PropagationFlags propagationFlags, AccessControlType type, Guid objectType, Guid inheritedObjectType)
    content.vb: Public Overridable Function AccessRuleFactory(identityReference As IdentityReference, accessMask As Integer, isInherited As Boolean, inheritanceFlags As InheritanceFlags, propagationFlags As PropagationFlags, type As AccessControlType, objectType As Guid, inheritedObjectType As Guid) As AccessRule
    parameters:
    - id: identityReference
      type: System.Security.Principal.IdentityReference
      description: "\n<p>The identity to which the access rule applies.  It must be an object that can be cast as a <xref href=\"System.Security.Principal.SecurityIdentifier\" data-throw-if-not-resolved=\"false\"></xref>.</p>\n"
    - id: accessMask
      type: System.Int32
      description: "\n<p>The access mask of this rule. The access mask is a 32-bit collection of anonymous bits, the meaning of which is defined by the individual integrators.</p>\n"
    - id: isInherited
      type: System.Boolean
      description: "\n<p>true if this rule is inherited from a parent container.</p>\n"
    - id: inheritanceFlags
      type: System.Security.AccessControl.InheritanceFlags
      description: "\n<p>Specifies the inheritance properties of the access rule.</p>\n"
    - id: propagationFlags
      type: System.Security.AccessControl.PropagationFlags
      description: "\n<p>Specifies whether inherited access rules are automatically propagated. The propagation flags are ignored if <em>inheritanceFlags</em> is set to <xref href=\"System.Security.AccessControl.InheritanceFlags.None\" data-throw-if-not-resolved=\"false\"></xref>.</p>\n"
    - id: type
      type: System.Security.AccessControl.AccessControlType
      description: "\n<p>Specifies the valid access control type.</p>\n"
    - id: objectType
      type: System.Guid
      description: "\n<p>The identity of the class of objects to which the new access rule applies.</p>\n"
    - id: inheritedObjectType
      type: System.Guid
      description: "\n<p>The identity of the class of child objects which can inherit the new access rule.</p>\n"
    return:
      type: System.Security.AccessControl.AccessRule
      description: "\n<p>The <xref href=\"System.Security.AccessControl.AccessRule\" data-throw-if-not-resolved=\"false\"></xref> object that this method creates.</p>\n"
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: System.Security.AccessControl.DirectoryObjectSecurity.AddAccessRule(System.Security.AccessControl.ObjectAccessRule)
  commentId: M:System.Security.AccessControl.DirectoryObjectSecurity.AddAccessRule(System.Security.AccessControl.ObjectAccessRule)
  id: AddAccessRule(System.Security.AccessControl.ObjectAccessRule)
  parent: System.Security.AccessControl.DirectoryObjectSecurity
  langs:
  - csharp
  - vb
  name: AddAccessRule(ObjectAccessRule)
  nameWithType: DirectoryObjectSecurity.AddAccessRule(ObjectAccessRule)
  fullName: System.Security.AccessControl.DirectoryObjectSecurity.AddAccessRule(System.Security.AccessControl.ObjectAccessRule)
  type: Method
  source:
    remote:
      path: src/System.IO.FileSystem.AccessControl/ref/System.IO.FileSystem.AccessControl.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: AddAccessRule
    path: src/System.IO.FileSystem.AccessControl/ref/System.IO.FileSystem.AccessControl.cs
    startLine: 31
  assemblies:
  - System.IO.FileSystem.AccessControl
  namespace: System.Security.AccessControl
  summary: "\n<p>Adds the specified access rule to the Discretionary Access Control List (DACL) associated with this <xref href=\"System.Security.AccessControl.DirectoryObjectSecurity\" data-throw-if-not-resolved=\"false\"></xref> object.</p>\n"
  syntax:
    content: protected void AddAccessRule(ObjectAccessRule rule)
    content.vb: Protected Sub AddAccessRule(rule As ObjectAccessRule)
    parameters:
    - id: rule
      type: System.Security.AccessControl.ObjectAccessRule
      description: "\n<p>The access rule to add.</p>\n"
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: System.Security.AccessControl.DirectoryObjectSecurity.AddAuditRule(System.Security.AccessControl.ObjectAuditRule)
  commentId: M:System.Security.AccessControl.DirectoryObjectSecurity.AddAuditRule(System.Security.AccessControl.ObjectAuditRule)
  id: AddAuditRule(System.Security.AccessControl.ObjectAuditRule)
  parent: System.Security.AccessControl.DirectoryObjectSecurity
  langs:
  - csharp
  - vb
  name: AddAuditRule(ObjectAuditRule)
  nameWithType: DirectoryObjectSecurity.AddAuditRule(ObjectAuditRule)
  fullName: System.Security.AccessControl.DirectoryObjectSecurity.AddAuditRule(System.Security.AccessControl.ObjectAuditRule)
  type: Method
  source:
    remote:
      path: src/System.IO.FileSystem.AccessControl/ref/System.IO.FileSystem.AccessControl.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: AddAuditRule
    path: src/System.IO.FileSystem.AccessControl/ref/System.IO.FileSystem.AccessControl.cs
    startLine: 32
  assemblies:
  - System.IO.FileSystem.AccessControl
  namespace: System.Security.AccessControl
  summary: "\n<p>Adds the specified audit rule to the System Access Control List (SACL) associated with this <xref href=\"System.Security.AccessControl.DirectoryObjectSecurity\" data-throw-if-not-resolved=\"false\"></xref> object.</p>\n"
  syntax:
    content: protected void AddAuditRule(ObjectAuditRule rule)
    content.vb: Protected Sub AddAuditRule(rule As ObjectAuditRule)
    parameters:
    - id: rule
      type: System.Security.AccessControl.ObjectAuditRule
      description: "\n<p>The audit rule to add.</p>\n"
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: System.Security.AccessControl.DirectoryObjectSecurity.AuditRuleFactory(System.Security.Principal.IdentityReference,System.Int32,System.Boolean,System.Security.AccessControl.InheritanceFlags,System.Security.AccessControl.PropagationFlags,System.Security.AccessControl.AuditFlags,System.Guid,System.Guid)
  commentId: M:System.Security.AccessControl.DirectoryObjectSecurity.AuditRuleFactory(System.Security.Principal.IdentityReference,System.Int32,System.Boolean,System.Security.AccessControl.InheritanceFlags,System.Security.AccessControl.PropagationFlags,System.Security.AccessControl.AuditFlags,System.Guid,System.Guid)
  id: AuditRuleFactory(System.Security.Principal.IdentityReference,System.Int32,System.Boolean,System.Security.AccessControl.InheritanceFlags,System.Security.AccessControl.PropagationFlags,System.Security.AccessControl.AuditFlags,System.Guid,System.Guid)
  parent: System.Security.AccessControl.DirectoryObjectSecurity
  langs:
  - csharp
  - vb
  name: AuditRuleFactory(IdentityReference, Int32, Boolean, InheritanceFlags, PropagationFlags, AuditFlags, Guid, Guid)
  nameWithType: DirectoryObjectSecurity.AuditRuleFactory(IdentityReference, Int32, Boolean, InheritanceFlags, PropagationFlags, AuditFlags, Guid, Guid)
  fullName: System.Security.AccessControl.DirectoryObjectSecurity.AuditRuleFactory(System.Security.Principal.IdentityReference, System.Int32, System.Boolean, System.Security.AccessControl.InheritanceFlags, System.Security.AccessControl.PropagationFlags, System.Security.AccessControl.AuditFlags, System.Guid, System.Guid)
  type: Method
  source:
    remote:
      path: src/System.IO.FileSystem.AccessControl/ref/System.IO.FileSystem.AccessControl.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: AuditRuleFactory
    path: src/System.IO.FileSystem.AccessControl/ref/System.IO.FileSystem.AccessControl.cs
    startLine: 33
  assemblies:
  - System.IO.FileSystem.AccessControl
  namespace: System.Security.AccessControl
  summary: "\n<p>Initializes a new instance of the <xref href=\"System.Security.AccessControl.AuditRule\" data-throw-if-not-resolved=\"false\"></xref> class with the specified values.</p>\n"
  syntax:
    content: public virtual AuditRule AuditRuleFactory(IdentityReference identityReference, int accessMask, bool isInherited, InheritanceFlags inheritanceFlags, PropagationFlags propagationFlags, AuditFlags flags, Guid objectType, Guid inheritedObjectType)
    content.vb: Public Overridable Function AuditRuleFactory(identityReference As IdentityReference, accessMask As Integer, isInherited As Boolean, inheritanceFlags As InheritanceFlags, propagationFlags As PropagationFlags, flags As AuditFlags, objectType As Guid, inheritedObjectType As Guid) As AuditRule
    parameters:
    - id: identityReference
      type: System.Security.Principal.IdentityReference
      description: "\n<p>The identity to which the audit rule applies.  It must be an object that can be cast as a <xref href=\"System.Security.Principal.SecurityIdentifier\" data-throw-if-not-resolved=\"false\"></xref>.</p>\n"
    - id: accessMask
      type: System.Int32
      description: "\n<p>The access mask of this rule. The access mask is a 32-bit collection of anonymous bits, the meaning of which is defined by the individual integrators.</p>\n"
    - id: isInherited
      type: System.Boolean
      description: "\n<p>\n<strong>true</strong> if this rule is inherited from a parent container.</p>\n"
    - id: inheritanceFlags
      type: System.Security.AccessControl.InheritanceFlags
      description: "\n<p>Specifies the inheritance properties of the audit rule.</p>\n"
    - id: propagationFlags
      type: System.Security.AccessControl.PropagationFlags
      description: "\n<p>Specifies whether inherited audit rules are automatically propagated. The propagation flags are ignored if <em>inheritanceFlags</em> is set to <xref href=\"System.Security.AccessControl.InheritanceFlags.None\" data-throw-if-not-resolved=\"false\"></xref>.</p>\n"
    - id: flags
      type: System.Security.AccessControl.AuditFlags
      description: "\n<p>Specifies the conditions for which the rule is audited.</p>\n"
    - id: objectType
      type: System.Guid
      description: "\n<p>The identity of the class of objects to which the new audit rule applies.</p>\n"
    - id: inheritedObjectType
      type: System.Guid
      description: "\n<p>The identity of the class of child objects which can inherit the new audit rule.</p>\n"
    return:
      type: System.Security.AccessControl.AuditRule
      description: "\n<p>The <xref href=\"System.Security.AccessControl.AuditRule\" data-throw-if-not-resolved=\"false\"></xref> object that this method creates.</p>\n"
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: System.Security.AccessControl.DirectoryObjectSecurity.GetAccessRules(System.Boolean,System.Boolean,System.Type)
  commentId: M:System.Security.AccessControl.DirectoryObjectSecurity.GetAccessRules(System.Boolean,System.Boolean,System.Type)
  id: GetAccessRules(System.Boolean,System.Boolean,System.Type)
  parent: System.Security.AccessControl.DirectoryObjectSecurity
  langs:
  - csharp
  - vb
  name: GetAccessRules(Boolean, Boolean, Type)
  nameWithType: DirectoryObjectSecurity.GetAccessRules(Boolean, Boolean, Type)
  fullName: System.Security.AccessControl.DirectoryObjectSecurity.GetAccessRules(System.Boolean, System.Boolean, System.Type)
  type: Method
  source:
    remote:
      path: src/System.IO.FileSystem.AccessControl/ref/System.IO.FileSystem.AccessControl.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: GetAccessRules
    path: src/System.IO.FileSystem.AccessControl/ref/System.IO.FileSystem.AccessControl.cs
    startLine: 34
  assemblies:
  - System.IO.FileSystem.AccessControl
  namespace: System.Security.AccessControl
  summary: "\n<p>Gets a collection of the access rules associated with the specified security identifier.</p>\n"
  syntax:
    content: public AuthorizationRuleCollection GetAccessRules(bool includeExplicit, bool includeInherited, Type targetType)
    content.vb: Public Function GetAccessRules(includeExplicit As Boolean, includeInherited As Boolean, targetType As Type) As AuthorizationRuleCollection
    parameters:
    - id: includeExplicit
      type: System.Boolean
      description: "\n<p>\n<strong>true</strong> to include access rules explicitly set for the object.</p>\n"
    - id: includeInherited
      type: System.Boolean
      description: "\n<p>\n<strong>true</strong> to include inherited access rules.</p>\n"
    - id: targetType
      type: System.Type
      description: "\n<p>The security identifier for which to retrieve access rules. This must be an object that can be cast as a <xref href=\"System.Security.Principal.SecurityIdentifier\" data-throw-if-not-resolved=\"false\"></xref> object.</p>\n"
    return:
      type: System.Security.AccessControl.AuthorizationRuleCollection
      description: "\n<p>The collection of access rules associated with the specified <xref href=\"System.Security.Principal.SecurityIdentifier\" data-throw-if-not-resolved=\"false\"></xref> object.</p>\n"
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: System.Security.AccessControl.DirectoryObjectSecurity.GetAuditRules(System.Boolean,System.Boolean,System.Type)
  commentId: M:System.Security.AccessControl.DirectoryObjectSecurity.GetAuditRules(System.Boolean,System.Boolean,System.Type)
  id: GetAuditRules(System.Boolean,System.Boolean,System.Type)
  parent: System.Security.AccessControl.DirectoryObjectSecurity
  langs:
  - csharp
  - vb
  name: GetAuditRules(Boolean, Boolean, Type)
  nameWithType: DirectoryObjectSecurity.GetAuditRules(Boolean, Boolean, Type)
  fullName: System.Security.AccessControl.DirectoryObjectSecurity.GetAuditRules(System.Boolean, System.Boolean, System.Type)
  type: Method
  source:
    remote:
      path: src/System.IO.FileSystem.AccessControl/ref/System.IO.FileSystem.AccessControl.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: GetAuditRules
    path: src/System.IO.FileSystem.AccessControl/ref/System.IO.FileSystem.AccessControl.cs
    startLine: 35
  assemblies:
  - System.IO.FileSystem.AccessControl
  namespace: System.Security.AccessControl
  summary: "\n<p>Gets a collection of the audit rules associated with the specified security identifier.</p>\n"
  syntax:
    content: public AuthorizationRuleCollection GetAuditRules(bool includeExplicit, bool includeInherited, Type targetType)
    content.vb: Public Function GetAuditRules(includeExplicit As Boolean, includeInherited As Boolean, targetType As Type) As AuthorizationRuleCollection
    parameters:
    - id: includeExplicit
      type: System.Boolean
      description: "\n<p>\n<strong>true</strong> to include audit rules explicitly set for the object.</p>\n"
    - id: includeInherited
      type: System.Boolean
      description: "\n<p>\n<strong>true</strong> to include inherited audit rules.</p>\n"
    - id: targetType
      type: System.Type
      description: "\n<p>The security identifier for which to retrieve audit rules. This must be an object that can be cast as a <xref href=\"System.Security.Principal.SecurityIdentifier\" data-throw-if-not-resolved=\"false\"></xref> object.</p>\n"
    return:
      type: System.Security.AccessControl.AuthorizationRuleCollection
      description: "\n<p>The collection of audit rules associated with the specified <xref href=\"System.Security.Principal.SecurityIdentifier\" data-throw-if-not-resolved=\"false\"></xref> object.</p>\n"
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: System.Security.AccessControl.DirectoryObjectSecurity.ModifyAccess(System.Security.AccessControl.AccessControlModification,System.Security.AccessControl.AccessRule,System.Boolean@)
  commentId: M:System.Security.AccessControl.DirectoryObjectSecurity.ModifyAccess(System.Security.AccessControl.AccessControlModification,System.Security.AccessControl.AccessRule,System.Boolean@)
  id: ModifyAccess(System.Security.AccessControl.AccessControlModification,System.Security.AccessControl.AccessRule,System.Boolean@)
  parent: System.Security.AccessControl.DirectoryObjectSecurity
  langs:
  - csharp
  - vb
  name: ModifyAccess(AccessControlModification, AccessRule, out Boolean)
  nameWithType: DirectoryObjectSecurity.ModifyAccess(AccessControlModification, AccessRule, out Boolean)
  fullName: System.Security.AccessControl.DirectoryObjectSecurity.ModifyAccess(System.Security.AccessControl.AccessControlModification, System.Security.AccessControl.AccessRule, out System.Boolean)
  type: Method
  source:
    remote:
      path: src/System.IO.FileSystem.AccessControl/ref/System.IO.FileSystem.AccessControl.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: ModifyAccess
    path: src/System.IO.FileSystem.AccessControl/ref/System.IO.FileSystem.AccessControl.cs
    startLine: 36
  assemblies:
  - System.IO.FileSystem.AccessControl
  namespace: System.Security.AccessControl
  summary: "\n<p>Applies the specified modification to the Discretionary Access Control List (DACL) associated with this <xref href=\"System.Security.AccessControl.DirectoryObjectSecurity\" data-throw-if-not-resolved=\"false\"></xref> object.</p>\n"
  syntax:
    content: protected override bool ModifyAccess(AccessControlModification modification, AccessRule rule, out bool modified)
    content.vb: Protected Overrides Function ModifyAccess(modification As AccessControlModification, rule As AccessRule, ByRef modified As Boolean) As Boolean
    parameters:
    - id: modification
      type: System.Security.AccessControl.AccessControlModification
      description: "\n<p>The modification to apply to the DACL.</p>\n"
    - id: rule
      type: System.Security.AccessControl.AccessRule
      description: "\n<p>The access rule to modify.</p>\n"
    - id: modified
      type: System.Boolean
      description: "\n<p>\n<strong>true</strong> if the DACL is successfully modified; otherwise, <strong>false</strong>.</p>\n"
    return:
      type: System.Boolean
      description: "\n<p>\n<strong>true</strong> if the DACL is successfully modified; otherwise, <strong>false</strong>.</p>\n"
  overridden: System.Security.AccessControl.ObjectSecurity.ModifyAccess(System.Security.AccessControl.AccessControlModification,System.Security.AccessControl.AccessRule,System.Boolean@)
  nameWithType.vb: DirectoryObjectSecurity.ModifyAccess(AccessControlModification, AccessRule, ByRef Boolean)
  modifiers.csharp:
  - protected
  - override
  modifiers.vb:
  - Protected
  - Overrides
  fullName.vb: System.Security.AccessControl.DirectoryObjectSecurity.ModifyAccess(System.Security.AccessControl.AccessControlModification, System.Security.AccessControl.AccessRule, ByRef System.Boolean)
  name.vb: ModifyAccess(AccessControlModification, AccessRule, ByRef Boolean)
- uid: System.Security.AccessControl.DirectoryObjectSecurity.ModifyAudit(System.Security.AccessControl.AccessControlModification,System.Security.AccessControl.AuditRule,System.Boolean@)
  commentId: M:System.Security.AccessControl.DirectoryObjectSecurity.ModifyAudit(System.Security.AccessControl.AccessControlModification,System.Security.AccessControl.AuditRule,System.Boolean@)
  id: ModifyAudit(System.Security.AccessControl.AccessControlModification,System.Security.AccessControl.AuditRule,System.Boolean@)
  parent: System.Security.AccessControl.DirectoryObjectSecurity
  langs:
  - csharp
  - vb
  name: ModifyAudit(AccessControlModification, AuditRule, out Boolean)
  nameWithType: DirectoryObjectSecurity.ModifyAudit(AccessControlModification, AuditRule, out Boolean)
  fullName: System.Security.AccessControl.DirectoryObjectSecurity.ModifyAudit(System.Security.AccessControl.AccessControlModification, System.Security.AccessControl.AuditRule, out System.Boolean)
  type: Method
  source:
    remote:
      path: src/System.IO.FileSystem.AccessControl/ref/System.IO.FileSystem.AccessControl.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: ModifyAudit
    path: src/System.IO.FileSystem.AccessControl/ref/System.IO.FileSystem.AccessControl.cs
    startLine: 37
  assemblies:
  - System.IO.FileSystem.AccessControl
  namespace: System.Security.AccessControl
  summary: "\n<p>Applies the specified modification to the System Access Control List (SACL) associated with this <xref href=\"System.Security.AccessControl.DirectoryObjectSecurity\" data-throw-if-not-resolved=\"false\"></xref> object.</p>\n"
  syntax:
    content: protected override bool ModifyAudit(AccessControlModification modification, AuditRule rule, out bool modified)
    content.vb: Protected Overrides Function ModifyAudit(modification As AccessControlModification, rule As AuditRule, ByRef modified As Boolean) As Boolean
    parameters:
    - id: modification
      type: System.Security.AccessControl.AccessControlModification
      description: "\n<p>The modification to apply to the SACL.</p>\n"
    - id: rule
      type: System.Security.AccessControl.AuditRule
      description: "\n<p>The audit rule to modify.</p>\n"
    - id: modified
      type: System.Boolean
      description: "\n<p>\n<strong>true</strong> if the SACL is successfully modified; otherwise, <strong>false</strong>.</p>\n"
    return:
      type: System.Boolean
      description: "\n<p>\n<strong>true</strong> if the SACL is successfully modified; otherwise, <strong>false</strong>.</p>\n"
  overridden: System.Security.AccessControl.ObjectSecurity.ModifyAudit(System.Security.AccessControl.AccessControlModification,System.Security.AccessControl.AuditRule,System.Boolean@)
  nameWithType.vb: DirectoryObjectSecurity.ModifyAudit(AccessControlModification, AuditRule, ByRef Boolean)
  modifiers.csharp:
  - protected
  - override
  modifiers.vb:
  - Protected
  - Overrides
  fullName.vb: System.Security.AccessControl.DirectoryObjectSecurity.ModifyAudit(System.Security.AccessControl.AccessControlModification, System.Security.AccessControl.AuditRule, ByRef System.Boolean)
  name.vb: ModifyAudit(AccessControlModification, AuditRule, ByRef Boolean)
- uid: System.Security.AccessControl.DirectoryObjectSecurity.RemoveAccessRule(System.Security.AccessControl.ObjectAccessRule)
  commentId: M:System.Security.AccessControl.DirectoryObjectSecurity.RemoveAccessRule(System.Security.AccessControl.ObjectAccessRule)
  id: RemoveAccessRule(System.Security.AccessControl.ObjectAccessRule)
  parent: System.Security.AccessControl.DirectoryObjectSecurity
  langs:
  - csharp
  - vb
  name: RemoveAccessRule(ObjectAccessRule)
  nameWithType: DirectoryObjectSecurity.RemoveAccessRule(ObjectAccessRule)
  fullName: System.Security.AccessControl.DirectoryObjectSecurity.RemoveAccessRule(System.Security.AccessControl.ObjectAccessRule)
  type: Method
  source:
    remote:
      path: src/System.IO.FileSystem.AccessControl/ref/System.IO.FileSystem.AccessControl.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: RemoveAccessRule
    path: src/System.IO.FileSystem.AccessControl/ref/System.IO.FileSystem.AccessControl.cs
    startLine: 38
  assemblies:
  - System.IO.FileSystem.AccessControl
  namespace: System.Security.AccessControl
  summary: "\n<p>Removes access rules that contain the same security identifier and access mask as the specified access rule from the Discretionary Access Control List (DACL) associated with this <xref href=\"System.Security.AccessControl.DirectoryObjectSecurity\" data-throw-if-not-resolved=\"false\"></xref> object.</p>\n"
  syntax:
    content: protected bool RemoveAccessRule(ObjectAccessRule rule)
    content.vb: Protected Function RemoveAccessRule(rule As ObjectAccessRule) As Boolean
    parameters:
    - id: rule
      type: System.Security.AccessControl.ObjectAccessRule
      description: "\n<p>The access rule to remove.</p>\n"
    return:
      type: System.Boolean
      description: "\n<p>\n<strong>true</strong> if the access rule was successfully removed; otherwise, <strong>false</strong>.</p>\n"
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: System.Security.AccessControl.DirectoryObjectSecurity.RemoveAccessRuleAll(System.Security.AccessControl.ObjectAccessRule)
  commentId: M:System.Security.AccessControl.DirectoryObjectSecurity.RemoveAccessRuleAll(System.Security.AccessControl.ObjectAccessRule)
  id: RemoveAccessRuleAll(System.Security.AccessControl.ObjectAccessRule)
  parent: System.Security.AccessControl.DirectoryObjectSecurity
  langs:
  - csharp
  - vb
  name: RemoveAccessRuleAll(ObjectAccessRule)
  nameWithType: DirectoryObjectSecurity.RemoveAccessRuleAll(ObjectAccessRule)
  fullName: System.Security.AccessControl.DirectoryObjectSecurity.RemoveAccessRuleAll(System.Security.AccessControl.ObjectAccessRule)
  type: Method
  source:
    remote:
      path: src/System.IO.FileSystem.AccessControl/ref/System.IO.FileSystem.AccessControl.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: RemoveAccessRuleAll
    path: src/System.IO.FileSystem.AccessControl/ref/System.IO.FileSystem.AccessControl.cs
    startLine: 39
  assemblies:
  - System.IO.FileSystem.AccessControl
  namespace: System.Security.AccessControl
  summary: "\n<p>Removes all access rules that have the same security identifier as the specified access rule from the Discretionary Access Control List (DACL) associated with this <xref href=\"System.Security.AccessControl.DirectoryObjectSecurity\" data-throw-if-not-resolved=\"false\"></xref> object.</p>\n"
  syntax:
    content: protected void RemoveAccessRuleAll(ObjectAccessRule rule)
    content.vb: Protected Sub RemoveAccessRuleAll(rule As ObjectAccessRule)
    parameters:
    - id: rule
      type: System.Security.AccessControl.ObjectAccessRule
      description: "\n<p>The access rule to remove.</p>\n"
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: System.Security.AccessControl.DirectoryObjectSecurity.RemoveAccessRuleSpecific(System.Security.AccessControl.ObjectAccessRule)
  commentId: M:System.Security.AccessControl.DirectoryObjectSecurity.RemoveAccessRuleSpecific(System.Security.AccessControl.ObjectAccessRule)
  id: RemoveAccessRuleSpecific(System.Security.AccessControl.ObjectAccessRule)
  parent: System.Security.AccessControl.DirectoryObjectSecurity
  langs:
  - csharp
  - vb
  name: RemoveAccessRuleSpecific(ObjectAccessRule)
  nameWithType: DirectoryObjectSecurity.RemoveAccessRuleSpecific(ObjectAccessRule)
  fullName: System.Security.AccessControl.DirectoryObjectSecurity.RemoveAccessRuleSpecific(System.Security.AccessControl.ObjectAccessRule)
  type: Method
  source:
    remote:
      path: src/System.IO.FileSystem.AccessControl/ref/System.IO.FileSystem.AccessControl.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: RemoveAccessRuleSpecific
    path: src/System.IO.FileSystem.AccessControl/ref/System.IO.FileSystem.AccessControl.cs
    startLine: 40
  assemblies:
  - System.IO.FileSystem.AccessControl
  namespace: System.Security.AccessControl
  summary: "\n<p>Removes all access rules that exactly match the specified access rule from the Discretionary Access Control List (DACL) associated with this <xref href=\"System.Security.AccessControl.DirectoryObjectSecurity\" data-throw-if-not-resolved=\"false\"></xref> object.</p>\n"
  syntax:
    content: protected void RemoveAccessRuleSpecific(ObjectAccessRule rule)
    content.vb: Protected Sub RemoveAccessRuleSpecific(rule As ObjectAccessRule)
    parameters:
    - id: rule
      type: System.Security.AccessControl.ObjectAccessRule
      description: "\n<p>The access rule to remove.</p>\n"
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: System.Security.AccessControl.DirectoryObjectSecurity.RemoveAuditRule(System.Security.AccessControl.ObjectAuditRule)
  commentId: M:System.Security.AccessControl.DirectoryObjectSecurity.RemoveAuditRule(System.Security.AccessControl.ObjectAuditRule)
  id: RemoveAuditRule(System.Security.AccessControl.ObjectAuditRule)
  parent: System.Security.AccessControl.DirectoryObjectSecurity
  langs:
  - csharp
  - vb
  name: RemoveAuditRule(ObjectAuditRule)
  nameWithType: DirectoryObjectSecurity.RemoveAuditRule(ObjectAuditRule)
  fullName: System.Security.AccessControl.DirectoryObjectSecurity.RemoveAuditRule(System.Security.AccessControl.ObjectAuditRule)
  type: Method
  source:
    remote:
      path: src/System.IO.FileSystem.AccessControl/ref/System.IO.FileSystem.AccessControl.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: RemoveAuditRule
    path: src/System.IO.FileSystem.AccessControl/ref/System.IO.FileSystem.AccessControl.cs
    startLine: 41
  assemblies:
  - System.IO.FileSystem.AccessControl
  namespace: System.Security.AccessControl
  summary: "\n<p>Removes audit rules that contain the same security identifier and access mask as the specified audit rule from the System Access Control List (SACL) associated with this <xref href=\"System.Security.AccessControl.CommonObjectSecurity\" data-throw-if-not-resolved=\"false\"></xref> object.</p>\n"
  syntax:
    content: protected bool RemoveAuditRule(ObjectAuditRule rule)
    content.vb: Protected Function RemoveAuditRule(rule As ObjectAuditRule) As Boolean
    parameters:
    - id: rule
      type: System.Security.AccessControl.ObjectAuditRule
      description: "\n<p>The audit rule to remove.</p>\n"
    return:
      type: System.Boolean
      description: "\n<p>\n<strong>true</strong> if the audit rule was successfully removed; otherwise, <strong>false</strong>.</p>\n"
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: System.Security.AccessControl.DirectoryObjectSecurity.RemoveAuditRuleAll(System.Security.AccessControl.ObjectAuditRule)
  commentId: M:System.Security.AccessControl.DirectoryObjectSecurity.RemoveAuditRuleAll(System.Security.AccessControl.ObjectAuditRule)
  id: RemoveAuditRuleAll(System.Security.AccessControl.ObjectAuditRule)
  parent: System.Security.AccessControl.DirectoryObjectSecurity
  langs:
  - csharp
  - vb
  name: RemoveAuditRuleAll(ObjectAuditRule)
  nameWithType: DirectoryObjectSecurity.RemoveAuditRuleAll(ObjectAuditRule)
  fullName: System.Security.AccessControl.DirectoryObjectSecurity.RemoveAuditRuleAll(System.Security.AccessControl.ObjectAuditRule)
  type: Method
  source:
    remote:
      path: src/System.IO.FileSystem.AccessControl/ref/System.IO.FileSystem.AccessControl.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: RemoveAuditRuleAll
    path: src/System.IO.FileSystem.AccessControl/ref/System.IO.FileSystem.AccessControl.cs
    startLine: 42
  assemblies:
  - System.IO.FileSystem.AccessControl
  namespace: System.Security.AccessControl
  summary: "\n<p>Removes all audit rules that have the same security identifier as the specified audit rule from the System Access Control List (SACL) associated with this <xref href=\"System.Security.AccessControl.DirectoryObjectSecurity\" data-throw-if-not-resolved=\"false\"></xref> object.</p>\n"
  syntax:
    content: protected void RemoveAuditRuleAll(ObjectAuditRule rule)
    content.vb: Protected Sub RemoveAuditRuleAll(rule As ObjectAuditRule)
    parameters:
    - id: rule
      type: System.Security.AccessControl.ObjectAuditRule
      description: "\n<p>The audit rule to remove.</p>\n"
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: System.Security.AccessControl.DirectoryObjectSecurity.RemoveAuditRuleSpecific(System.Security.AccessControl.ObjectAuditRule)
  commentId: M:System.Security.AccessControl.DirectoryObjectSecurity.RemoveAuditRuleSpecific(System.Security.AccessControl.ObjectAuditRule)
  id: RemoveAuditRuleSpecific(System.Security.AccessControl.ObjectAuditRule)
  parent: System.Security.AccessControl.DirectoryObjectSecurity
  langs:
  - csharp
  - vb
  name: RemoveAuditRuleSpecific(ObjectAuditRule)
  nameWithType: DirectoryObjectSecurity.RemoveAuditRuleSpecific(ObjectAuditRule)
  fullName: System.Security.AccessControl.DirectoryObjectSecurity.RemoveAuditRuleSpecific(System.Security.AccessControl.ObjectAuditRule)
  type: Method
  source:
    remote:
      path: src/System.IO.FileSystem.AccessControl/ref/System.IO.FileSystem.AccessControl.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: RemoveAuditRuleSpecific
    path: src/System.IO.FileSystem.AccessControl/ref/System.IO.FileSystem.AccessControl.cs
    startLine: 43
  assemblies:
  - System.IO.FileSystem.AccessControl
  namespace: System.Security.AccessControl
  summary: "\n<p>Removes all audit rules that exactly match the specified audit rule from the System Access Control List (SACL) associated with this <xref href=\"System.Security.AccessControl.DirectoryObjectSecurity\" data-throw-if-not-resolved=\"false\"></xref> object.</p>\n"
  syntax:
    content: protected void RemoveAuditRuleSpecific(ObjectAuditRule rule)
    content.vb: Protected Sub RemoveAuditRuleSpecific(rule As ObjectAuditRule)
    parameters:
    - id: rule
      type: System.Security.AccessControl.ObjectAuditRule
      description: "\n<p>The audit rule to remove.</p>\n"
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: System.Security.AccessControl.DirectoryObjectSecurity.ResetAccessRule(System.Security.AccessControl.ObjectAccessRule)
  commentId: M:System.Security.AccessControl.DirectoryObjectSecurity.ResetAccessRule(System.Security.AccessControl.ObjectAccessRule)
  id: ResetAccessRule(System.Security.AccessControl.ObjectAccessRule)
  parent: System.Security.AccessControl.DirectoryObjectSecurity
  langs:
  - csharp
  - vb
  name: ResetAccessRule(ObjectAccessRule)
  nameWithType: DirectoryObjectSecurity.ResetAccessRule(ObjectAccessRule)
  fullName: System.Security.AccessControl.DirectoryObjectSecurity.ResetAccessRule(System.Security.AccessControl.ObjectAccessRule)
  type: Method
  source:
    remote:
      path: src/System.IO.FileSystem.AccessControl/ref/System.IO.FileSystem.AccessControl.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: ResetAccessRule
    path: src/System.IO.FileSystem.AccessControl/ref/System.IO.FileSystem.AccessControl.cs
    startLine: 44
  assemblies:
  - System.IO.FileSystem.AccessControl
  namespace: System.Security.AccessControl
  summary: "\n<p>Removes all access rules in the Discretionary Access Control List (DACL) associated with this <xref href=\"System.Security.AccessControl.DirectoryObjectSecurity\" data-throw-if-not-resolved=\"false\"></xref> object and then adds the specified access rule.</p>\n"
  syntax:
    content: protected void ResetAccessRule(ObjectAccessRule rule)
    content.vb: Protected Sub ResetAccessRule(rule As ObjectAccessRule)
    parameters:
    - id: rule
      type: System.Security.AccessControl.ObjectAccessRule
      description: "\n<p>The access rule to reset.</p>\n"
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: System.Security.AccessControl.DirectoryObjectSecurity.SetAccessRule(System.Security.AccessControl.ObjectAccessRule)
  commentId: M:System.Security.AccessControl.DirectoryObjectSecurity.SetAccessRule(System.Security.AccessControl.ObjectAccessRule)
  id: SetAccessRule(System.Security.AccessControl.ObjectAccessRule)
  parent: System.Security.AccessControl.DirectoryObjectSecurity
  langs:
  - csharp
  - vb
  name: SetAccessRule(ObjectAccessRule)
  nameWithType: DirectoryObjectSecurity.SetAccessRule(ObjectAccessRule)
  fullName: System.Security.AccessControl.DirectoryObjectSecurity.SetAccessRule(System.Security.AccessControl.ObjectAccessRule)
  type: Method
  source:
    remote:
      path: src/System.IO.FileSystem.AccessControl/ref/System.IO.FileSystem.AccessControl.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: SetAccessRule
    path: src/System.IO.FileSystem.AccessControl/ref/System.IO.FileSystem.AccessControl.cs
    startLine: 45
  assemblies:
  - System.IO.FileSystem.AccessControl
  namespace: System.Security.AccessControl
  summary: "\n<p>Removes all access rules that contain the same security identifier and qualifier as the specified access rule in the Discretionary Access Control List (DACL) associated with this <xref href=\"System.Security.AccessControl.DirectoryObjectSecurity\" data-throw-if-not-resolved=\"false\"></xref> object and then adds the specified access rule.</p>\n"
  syntax:
    content: protected void SetAccessRule(ObjectAccessRule rule)
    content.vb: Protected Sub SetAccessRule(rule As ObjectAccessRule)
    parameters:
    - id: rule
      type: System.Security.AccessControl.ObjectAccessRule
      description: "\n<p>The access rule to set.</p>\n"
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: System.Security.AccessControl.DirectoryObjectSecurity.SetAuditRule(System.Security.AccessControl.ObjectAuditRule)
  commentId: M:System.Security.AccessControl.DirectoryObjectSecurity.SetAuditRule(System.Security.AccessControl.ObjectAuditRule)
  id: SetAuditRule(System.Security.AccessControl.ObjectAuditRule)
  parent: System.Security.AccessControl.DirectoryObjectSecurity
  langs:
  - csharp
  - vb
  name: SetAuditRule(ObjectAuditRule)
  nameWithType: DirectoryObjectSecurity.SetAuditRule(ObjectAuditRule)
  fullName: System.Security.AccessControl.DirectoryObjectSecurity.SetAuditRule(System.Security.AccessControl.ObjectAuditRule)
  type: Method
  source:
    remote:
      path: src/System.IO.FileSystem.AccessControl/ref/System.IO.FileSystem.AccessControl.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: SetAuditRule
    path: src/System.IO.FileSystem.AccessControl/ref/System.IO.FileSystem.AccessControl.cs
    startLine: 46
  assemblies:
  - System.IO.FileSystem.AccessControl
  namespace: System.Security.AccessControl
  summary: "\n<p>Removes all audit rules that contain the same security identifier and qualifier as the specified audit rule in the System Access Control List (SACL) associated with this <xref href=\"System.Security.AccessControl.DirectoryObjectSecurity\" data-throw-if-not-resolved=\"false\"></xref> object and then adds the specified audit rule.</p>\n"
  syntax:
    content: protected void SetAuditRule(ObjectAuditRule rule)
    content.vb: Protected Sub SetAuditRule(rule As ObjectAuditRule)
    parameters:
    - id: rule
      type: System.Security.AccessControl.ObjectAuditRule
      description: "\n<p>The audit rule to set.</p>\n"
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
references:
- uid: System.Security.AccessControl
  commentId: N:System.Security.AccessControl
  isExternal: false
  name: System.Security.AccessControl
  nameWithType: System.Security.AccessControl
  fullName: System.Security.AccessControl
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: false
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Security.AccessControl.ObjectSecurity
  commentId: T:System.Security.AccessControl.ObjectSecurity
  parent: System.Security.AccessControl
  isExternal: false
  name: ObjectSecurity
  nameWithType: ObjectSecurity
  fullName: System.Security.AccessControl.ObjectSecurity
- uid: System.Security.AccessControl.ObjectSecurity.ReadLock
  commentId: M:System.Security.AccessControl.ObjectSecurity.ReadLock
  parent: System.Security.AccessControl.ObjectSecurity
  isExternal: false
  name: ReadLock()
  nameWithType: ObjectSecurity.ReadLock()
  fullName: System.Security.AccessControl.ObjectSecurity.ReadLock()
  spec.csharp:
  - uid: System.Security.AccessControl.ObjectSecurity.ReadLock
    name: ReadLock
    nameWithType: ObjectSecurity.ReadLock
    fullName: System.Security.AccessControl.ObjectSecurity.ReadLock
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Security.AccessControl.ObjectSecurity.ReadLock
    name: ReadLock
    nameWithType: ObjectSecurity.ReadLock
    fullName: System.Security.AccessControl.ObjectSecurity.ReadLock
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Security.AccessControl.ObjectSecurity.ReadUnlock
  commentId: M:System.Security.AccessControl.ObjectSecurity.ReadUnlock
  parent: System.Security.AccessControl.ObjectSecurity
  isExternal: false
  name: ReadUnlock()
  nameWithType: ObjectSecurity.ReadUnlock()
  fullName: System.Security.AccessControl.ObjectSecurity.ReadUnlock()
  spec.csharp:
  - uid: System.Security.AccessControl.ObjectSecurity.ReadUnlock
    name: ReadUnlock
    nameWithType: ObjectSecurity.ReadUnlock
    fullName: System.Security.AccessControl.ObjectSecurity.ReadUnlock
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Security.AccessControl.ObjectSecurity.ReadUnlock
    name: ReadUnlock
    nameWithType: ObjectSecurity.ReadUnlock
    fullName: System.Security.AccessControl.ObjectSecurity.ReadUnlock
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Security.AccessControl.ObjectSecurity.WriteLock
  commentId: M:System.Security.AccessControl.ObjectSecurity.WriteLock
  parent: System.Security.AccessControl.ObjectSecurity
  isExternal: false
  name: WriteLock()
  nameWithType: ObjectSecurity.WriteLock()
  fullName: System.Security.AccessControl.ObjectSecurity.WriteLock()
  spec.csharp:
  - uid: System.Security.AccessControl.ObjectSecurity.WriteLock
    name: WriteLock
    nameWithType: ObjectSecurity.WriteLock
    fullName: System.Security.AccessControl.ObjectSecurity.WriteLock
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Security.AccessControl.ObjectSecurity.WriteLock
    name: WriteLock
    nameWithType: ObjectSecurity.WriteLock
    fullName: System.Security.AccessControl.ObjectSecurity.WriteLock
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Security.AccessControl.ObjectSecurity.WriteUnlock
  commentId: M:System.Security.AccessControl.ObjectSecurity.WriteUnlock
  parent: System.Security.AccessControl.ObjectSecurity
  isExternal: false
  name: WriteUnlock()
  nameWithType: ObjectSecurity.WriteUnlock()
  fullName: System.Security.AccessControl.ObjectSecurity.WriteUnlock()
  spec.csharp:
  - uid: System.Security.AccessControl.ObjectSecurity.WriteUnlock
    name: WriteUnlock
    nameWithType: ObjectSecurity.WriteUnlock
    fullName: System.Security.AccessControl.ObjectSecurity.WriteUnlock
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Security.AccessControl.ObjectSecurity.WriteUnlock
    name: WriteUnlock
    nameWithType: ObjectSecurity.WriteUnlock
    fullName: System.Security.AccessControl.ObjectSecurity.WriteUnlock
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Security.AccessControl.ObjectSecurity.Persist(System.String,System.Security.AccessControl.AccessControlSections)
  commentId: M:System.Security.AccessControl.ObjectSecurity.Persist(System.String,System.Security.AccessControl.AccessControlSections)
  parent: System.Security.AccessControl.ObjectSecurity
  isExternal: true
  name: Persist(String, AccessControlSections)
  nameWithType: ObjectSecurity.Persist(String, AccessControlSections)
  fullName: System.Security.AccessControl.ObjectSecurity.Persist(System.String, System.Security.AccessControl.AccessControlSections)
  spec.csharp:
  - uid: System.Security.AccessControl.ObjectSecurity.Persist(System.String,System.Security.AccessControl.AccessControlSections)
    name: Persist
    nameWithType: ObjectSecurity.Persist
    fullName: System.Security.AccessControl.ObjectSecurity.Persist
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Security.AccessControl.AccessControlSections
    name: AccessControlSections
    nameWithType: AccessControlSections
    fullName: System.Security.AccessControl.AccessControlSections
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Security.AccessControl.ObjectSecurity.Persist(System.String,System.Security.AccessControl.AccessControlSections)
    name: Persist
    nameWithType: ObjectSecurity.Persist
    fullName: System.Security.AccessControl.ObjectSecurity.Persist
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Security.AccessControl.AccessControlSections
    name: AccessControlSections
    nameWithType: AccessControlSections
    fullName: System.Security.AccessControl.AccessControlSections
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Security.AccessControl.ObjectSecurity.Persist(System.Boolean,System.String,System.Security.AccessControl.AccessControlSections)
  commentId: M:System.Security.AccessControl.ObjectSecurity.Persist(System.Boolean,System.String,System.Security.AccessControl.AccessControlSections)
  parent: System.Security.AccessControl.ObjectSecurity
  isExternal: true
  name: Persist(Boolean, String, AccessControlSections)
  nameWithType: ObjectSecurity.Persist(Boolean, String, AccessControlSections)
  fullName: System.Security.AccessControl.ObjectSecurity.Persist(System.Boolean, System.String, System.Security.AccessControl.AccessControlSections)
  spec.csharp:
  - uid: System.Security.AccessControl.ObjectSecurity.Persist(System.Boolean,System.String,System.Security.AccessControl.AccessControlSections)
    name: Persist
    nameWithType: ObjectSecurity.Persist
    fullName: System.Security.AccessControl.ObjectSecurity.Persist
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Security.AccessControl.AccessControlSections
    name: AccessControlSections
    nameWithType: AccessControlSections
    fullName: System.Security.AccessControl.AccessControlSections
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Security.AccessControl.ObjectSecurity.Persist(System.Boolean,System.String,System.Security.AccessControl.AccessControlSections)
    name: Persist
    nameWithType: ObjectSecurity.Persist
    fullName: System.Security.AccessControl.ObjectSecurity.Persist
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Security.AccessControl.AccessControlSections
    name: AccessControlSections
    nameWithType: AccessControlSections
    fullName: System.Security.AccessControl.AccessControlSections
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Security.AccessControl.ObjectSecurity.Persist(System.Runtime.InteropServices.SafeHandle,System.Security.AccessControl.AccessControlSections)
  commentId: M:System.Security.AccessControl.ObjectSecurity.Persist(System.Runtime.InteropServices.SafeHandle,System.Security.AccessControl.AccessControlSections)
  parent: System.Security.AccessControl.ObjectSecurity
  isExternal: true
  name: Persist(SafeHandle, AccessControlSections)
  nameWithType: ObjectSecurity.Persist(SafeHandle, AccessControlSections)
  fullName: System.Security.AccessControl.ObjectSecurity.Persist(System.Runtime.InteropServices.SafeHandle, System.Security.AccessControl.AccessControlSections)
  spec.csharp:
  - uid: System.Security.AccessControl.ObjectSecurity.Persist(System.Runtime.InteropServices.SafeHandle,System.Security.AccessControl.AccessControlSections)
    name: Persist
    nameWithType: ObjectSecurity.Persist
    fullName: System.Security.AccessControl.ObjectSecurity.Persist
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Runtime.InteropServices.SafeHandle
    name: SafeHandle
    nameWithType: SafeHandle
    fullName: System.Runtime.InteropServices.SafeHandle
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Security.AccessControl.AccessControlSections
    name: AccessControlSections
    nameWithType: AccessControlSections
    fullName: System.Security.AccessControl.AccessControlSections
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Security.AccessControl.ObjectSecurity.Persist(System.Runtime.InteropServices.SafeHandle,System.Security.AccessControl.AccessControlSections)
    name: Persist
    nameWithType: ObjectSecurity.Persist
    fullName: System.Security.AccessControl.ObjectSecurity.Persist
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Runtime.InteropServices.SafeHandle
    name: SafeHandle
    nameWithType: SafeHandle
    fullName: System.Runtime.InteropServices.SafeHandle
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Security.AccessControl.AccessControlSections
    name: AccessControlSections
    nameWithType: AccessControlSections
    fullName: System.Security.AccessControl.AccessControlSections
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Security.AccessControl.ObjectSecurity.GetOwner(System.Type)
  commentId: M:System.Security.AccessControl.ObjectSecurity.GetOwner(System.Type)
  parent: System.Security.AccessControl.ObjectSecurity
  isExternal: true
  name: GetOwner(Type)
  nameWithType: ObjectSecurity.GetOwner(Type)
  fullName: System.Security.AccessControl.ObjectSecurity.GetOwner(System.Type)
  spec.csharp:
  - uid: System.Security.AccessControl.ObjectSecurity.GetOwner(System.Type)
    name: GetOwner
    nameWithType: ObjectSecurity.GetOwner
    fullName: System.Security.AccessControl.ObjectSecurity.GetOwner
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Type
    name: Type
    nameWithType: Type
    fullName: System.Type
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Security.AccessControl.ObjectSecurity.GetOwner(System.Type)
    name: GetOwner
    nameWithType: ObjectSecurity.GetOwner
    fullName: System.Security.AccessControl.ObjectSecurity.GetOwner
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Type
    name: Type
    nameWithType: Type
    fullName: System.Type
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Security.AccessControl.ObjectSecurity.SetOwner(System.Security.Principal.IdentityReference)
  commentId: M:System.Security.AccessControl.ObjectSecurity.SetOwner(System.Security.Principal.IdentityReference)
  parent: System.Security.AccessControl.ObjectSecurity
  isExternal: true
  name: SetOwner(IdentityReference)
  nameWithType: ObjectSecurity.SetOwner(IdentityReference)
  fullName: System.Security.AccessControl.ObjectSecurity.SetOwner(System.Security.Principal.IdentityReference)
  spec.csharp:
  - uid: System.Security.AccessControl.ObjectSecurity.SetOwner(System.Security.Principal.IdentityReference)
    name: SetOwner
    nameWithType: ObjectSecurity.SetOwner
    fullName: System.Security.AccessControl.ObjectSecurity.SetOwner
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Security.Principal.IdentityReference
    name: IdentityReference
    nameWithType: IdentityReference
    fullName: System.Security.Principal.IdentityReference
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Security.AccessControl.ObjectSecurity.SetOwner(System.Security.Principal.IdentityReference)
    name: SetOwner
    nameWithType: ObjectSecurity.SetOwner
    fullName: System.Security.AccessControl.ObjectSecurity.SetOwner
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Security.Principal.IdentityReference
    name: IdentityReference
    nameWithType: IdentityReference
    fullName: System.Security.Principal.IdentityReference
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Security.AccessControl.ObjectSecurity.GetGroup(System.Type)
  commentId: M:System.Security.AccessControl.ObjectSecurity.GetGroup(System.Type)
  parent: System.Security.AccessControl.ObjectSecurity
  isExternal: true
  name: GetGroup(Type)
  nameWithType: ObjectSecurity.GetGroup(Type)
  fullName: System.Security.AccessControl.ObjectSecurity.GetGroup(System.Type)
  spec.csharp:
  - uid: System.Security.AccessControl.ObjectSecurity.GetGroup(System.Type)
    name: GetGroup
    nameWithType: ObjectSecurity.GetGroup
    fullName: System.Security.AccessControl.ObjectSecurity.GetGroup
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Type
    name: Type
    nameWithType: Type
    fullName: System.Type
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Security.AccessControl.ObjectSecurity.GetGroup(System.Type)
    name: GetGroup
    nameWithType: ObjectSecurity.GetGroup
    fullName: System.Security.AccessControl.ObjectSecurity.GetGroup
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Type
    name: Type
    nameWithType: Type
    fullName: System.Type
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Security.AccessControl.ObjectSecurity.SetGroup(System.Security.Principal.IdentityReference)
  commentId: M:System.Security.AccessControl.ObjectSecurity.SetGroup(System.Security.Principal.IdentityReference)
  parent: System.Security.AccessControl.ObjectSecurity
  isExternal: true
  name: SetGroup(IdentityReference)
  nameWithType: ObjectSecurity.SetGroup(IdentityReference)
  fullName: System.Security.AccessControl.ObjectSecurity.SetGroup(System.Security.Principal.IdentityReference)
  spec.csharp:
  - uid: System.Security.AccessControl.ObjectSecurity.SetGroup(System.Security.Principal.IdentityReference)
    name: SetGroup
    nameWithType: ObjectSecurity.SetGroup
    fullName: System.Security.AccessControl.ObjectSecurity.SetGroup
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Security.Principal.IdentityReference
    name: IdentityReference
    nameWithType: IdentityReference
    fullName: System.Security.Principal.IdentityReference
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Security.AccessControl.ObjectSecurity.SetGroup(System.Security.Principal.IdentityReference)
    name: SetGroup
    nameWithType: ObjectSecurity.SetGroup
    fullName: System.Security.AccessControl.ObjectSecurity.SetGroup
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Security.Principal.IdentityReference
    name: IdentityReference
    nameWithType: IdentityReference
    fullName: System.Security.Principal.IdentityReference
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Security.AccessControl.ObjectSecurity.PurgeAccessRules(System.Security.Principal.IdentityReference)
  commentId: M:System.Security.AccessControl.ObjectSecurity.PurgeAccessRules(System.Security.Principal.IdentityReference)
  parent: System.Security.AccessControl.ObjectSecurity
  isExternal: true
  name: PurgeAccessRules(IdentityReference)
  nameWithType: ObjectSecurity.PurgeAccessRules(IdentityReference)
  fullName: System.Security.AccessControl.ObjectSecurity.PurgeAccessRules(System.Security.Principal.IdentityReference)
  spec.csharp:
  - uid: System.Security.AccessControl.ObjectSecurity.PurgeAccessRules(System.Security.Principal.IdentityReference)
    name: PurgeAccessRules
    nameWithType: ObjectSecurity.PurgeAccessRules
    fullName: System.Security.AccessControl.ObjectSecurity.PurgeAccessRules
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Security.Principal.IdentityReference
    name: IdentityReference
    nameWithType: IdentityReference
    fullName: System.Security.Principal.IdentityReference
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Security.AccessControl.ObjectSecurity.PurgeAccessRules(System.Security.Principal.IdentityReference)
    name: PurgeAccessRules
    nameWithType: ObjectSecurity.PurgeAccessRules
    fullName: System.Security.AccessControl.ObjectSecurity.PurgeAccessRules
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Security.Principal.IdentityReference
    name: IdentityReference
    nameWithType: IdentityReference
    fullName: System.Security.Principal.IdentityReference
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Security.AccessControl.ObjectSecurity.PurgeAuditRules(System.Security.Principal.IdentityReference)
  commentId: M:System.Security.AccessControl.ObjectSecurity.PurgeAuditRules(System.Security.Principal.IdentityReference)
  parent: System.Security.AccessControl.ObjectSecurity
  isExternal: true
  name: PurgeAuditRules(IdentityReference)
  nameWithType: ObjectSecurity.PurgeAuditRules(IdentityReference)
  fullName: System.Security.AccessControl.ObjectSecurity.PurgeAuditRules(System.Security.Principal.IdentityReference)
  spec.csharp:
  - uid: System.Security.AccessControl.ObjectSecurity.PurgeAuditRules(System.Security.Principal.IdentityReference)
    name: PurgeAuditRules
    nameWithType: ObjectSecurity.PurgeAuditRules
    fullName: System.Security.AccessControl.ObjectSecurity.PurgeAuditRules
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Security.Principal.IdentityReference
    name: IdentityReference
    nameWithType: IdentityReference
    fullName: System.Security.Principal.IdentityReference
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Security.AccessControl.ObjectSecurity.PurgeAuditRules(System.Security.Principal.IdentityReference)
    name: PurgeAuditRules
    nameWithType: ObjectSecurity.PurgeAuditRules
    fullName: System.Security.AccessControl.ObjectSecurity.PurgeAuditRules
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Security.Principal.IdentityReference
    name: IdentityReference
    nameWithType: IdentityReference
    fullName: System.Security.Principal.IdentityReference
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Security.AccessControl.ObjectSecurity.SetAccessRuleProtection(System.Boolean,System.Boolean)
  commentId: M:System.Security.AccessControl.ObjectSecurity.SetAccessRuleProtection(System.Boolean,System.Boolean)
  parent: System.Security.AccessControl.ObjectSecurity
  isExternal: true
  name: SetAccessRuleProtection(Boolean, Boolean)
  nameWithType: ObjectSecurity.SetAccessRuleProtection(Boolean, Boolean)
  fullName: System.Security.AccessControl.ObjectSecurity.SetAccessRuleProtection(System.Boolean, System.Boolean)
  spec.csharp:
  - uid: System.Security.AccessControl.ObjectSecurity.SetAccessRuleProtection(System.Boolean,System.Boolean)
    name: SetAccessRuleProtection
    nameWithType: ObjectSecurity.SetAccessRuleProtection
    fullName: System.Security.AccessControl.ObjectSecurity.SetAccessRuleProtection
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Security.AccessControl.ObjectSecurity.SetAccessRuleProtection(System.Boolean,System.Boolean)
    name: SetAccessRuleProtection
    nameWithType: ObjectSecurity.SetAccessRuleProtection
    fullName: System.Security.AccessControl.ObjectSecurity.SetAccessRuleProtection
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Security.AccessControl.ObjectSecurity.SetAuditRuleProtection(System.Boolean,System.Boolean)
  commentId: M:System.Security.AccessControl.ObjectSecurity.SetAuditRuleProtection(System.Boolean,System.Boolean)
  parent: System.Security.AccessControl.ObjectSecurity
  isExternal: true
  name: SetAuditRuleProtection(Boolean, Boolean)
  nameWithType: ObjectSecurity.SetAuditRuleProtection(Boolean, Boolean)
  fullName: System.Security.AccessControl.ObjectSecurity.SetAuditRuleProtection(System.Boolean, System.Boolean)
  spec.csharp:
  - uid: System.Security.AccessControl.ObjectSecurity.SetAuditRuleProtection(System.Boolean,System.Boolean)
    name: SetAuditRuleProtection
    nameWithType: ObjectSecurity.SetAuditRuleProtection
    fullName: System.Security.AccessControl.ObjectSecurity.SetAuditRuleProtection
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Security.AccessControl.ObjectSecurity.SetAuditRuleProtection(System.Boolean,System.Boolean)
    name: SetAuditRuleProtection
    nameWithType: ObjectSecurity.SetAuditRuleProtection
    fullName: System.Security.AccessControl.ObjectSecurity.SetAuditRuleProtection
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Security.AccessControl.ObjectSecurity.IsSddlConversionSupported
  commentId: M:System.Security.AccessControl.ObjectSecurity.IsSddlConversionSupported
  parent: System.Security.AccessControl.ObjectSecurity
  isExternal: false
  name: IsSddlConversionSupported()
  nameWithType: ObjectSecurity.IsSddlConversionSupported()
  fullName: System.Security.AccessControl.ObjectSecurity.IsSddlConversionSupported()
  spec.csharp:
  - uid: System.Security.AccessControl.ObjectSecurity.IsSddlConversionSupported
    name: IsSddlConversionSupported
    nameWithType: ObjectSecurity.IsSddlConversionSupported
    fullName: System.Security.AccessControl.ObjectSecurity.IsSddlConversionSupported
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Security.AccessControl.ObjectSecurity.IsSddlConversionSupported
    name: IsSddlConversionSupported
    nameWithType: ObjectSecurity.IsSddlConversionSupported
    fullName: System.Security.AccessControl.ObjectSecurity.IsSddlConversionSupported
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Security.AccessControl.ObjectSecurity.GetSecurityDescriptorSddlForm(System.Security.AccessControl.AccessControlSections)
  commentId: M:System.Security.AccessControl.ObjectSecurity.GetSecurityDescriptorSddlForm(System.Security.AccessControl.AccessControlSections)
  parent: System.Security.AccessControl.ObjectSecurity
  isExternal: false
  name: GetSecurityDescriptorSddlForm(AccessControlSections)
  nameWithType: ObjectSecurity.GetSecurityDescriptorSddlForm(AccessControlSections)
  fullName: System.Security.AccessControl.ObjectSecurity.GetSecurityDescriptorSddlForm(System.Security.AccessControl.AccessControlSections)
  spec.csharp:
  - uid: System.Security.AccessControl.ObjectSecurity.GetSecurityDescriptorSddlForm(System.Security.AccessControl.AccessControlSections)
    name: GetSecurityDescriptorSddlForm
    nameWithType: ObjectSecurity.GetSecurityDescriptorSddlForm
    fullName: System.Security.AccessControl.ObjectSecurity.GetSecurityDescriptorSddlForm
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Security.AccessControl.AccessControlSections
    name: AccessControlSections
    nameWithType: AccessControlSections
    fullName: System.Security.AccessControl.AccessControlSections
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Security.AccessControl.ObjectSecurity.GetSecurityDescriptorSddlForm(System.Security.AccessControl.AccessControlSections)
    name: GetSecurityDescriptorSddlForm
    nameWithType: ObjectSecurity.GetSecurityDescriptorSddlForm
    fullName: System.Security.AccessControl.ObjectSecurity.GetSecurityDescriptorSddlForm
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Security.AccessControl.AccessControlSections
    name: AccessControlSections
    nameWithType: AccessControlSections
    fullName: System.Security.AccessControl.AccessControlSections
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Security.AccessControl.ObjectSecurity.SetSecurityDescriptorSddlForm(System.String)
  commentId: M:System.Security.AccessControl.ObjectSecurity.SetSecurityDescriptorSddlForm(System.String)
  parent: System.Security.AccessControl.ObjectSecurity
  isExternal: true
  name: SetSecurityDescriptorSddlForm(String)
  nameWithType: ObjectSecurity.SetSecurityDescriptorSddlForm(String)
  fullName: System.Security.AccessControl.ObjectSecurity.SetSecurityDescriptorSddlForm(System.String)
  spec.csharp:
  - uid: System.Security.AccessControl.ObjectSecurity.SetSecurityDescriptorSddlForm(System.String)
    name: SetSecurityDescriptorSddlForm
    nameWithType: ObjectSecurity.SetSecurityDescriptorSddlForm
    fullName: System.Security.AccessControl.ObjectSecurity.SetSecurityDescriptorSddlForm
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Security.AccessControl.ObjectSecurity.SetSecurityDescriptorSddlForm(System.String)
    name: SetSecurityDescriptorSddlForm
    nameWithType: ObjectSecurity.SetSecurityDescriptorSddlForm
    fullName: System.Security.AccessControl.ObjectSecurity.SetSecurityDescriptorSddlForm
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Security.AccessControl.ObjectSecurity.SetSecurityDescriptorSddlForm(System.String,System.Security.AccessControl.AccessControlSections)
  commentId: M:System.Security.AccessControl.ObjectSecurity.SetSecurityDescriptorSddlForm(System.String,System.Security.AccessControl.AccessControlSections)
  parent: System.Security.AccessControl.ObjectSecurity
  isExternal: true
  name: SetSecurityDescriptorSddlForm(String, AccessControlSections)
  nameWithType: ObjectSecurity.SetSecurityDescriptorSddlForm(String, AccessControlSections)
  fullName: System.Security.AccessControl.ObjectSecurity.SetSecurityDescriptorSddlForm(System.String, System.Security.AccessControl.AccessControlSections)
  spec.csharp:
  - uid: System.Security.AccessControl.ObjectSecurity.SetSecurityDescriptorSddlForm(System.String,System.Security.AccessControl.AccessControlSections)
    name: SetSecurityDescriptorSddlForm
    nameWithType: ObjectSecurity.SetSecurityDescriptorSddlForm
    fullName: System.Security.AccessControl.ObjectSecurity.SetSecurityDescriptorSddlForm
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Security.AccessControl.AccessControlSections
    name: AccessControlSections
    nameWithType: AccessControlSections
    fullName: System.Security.AccessControl.AccessControlSections
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Security.AccessControl.ObjectSecurity.SetSecurityDescriptorSddlForm(System.String,System.Security.AccessControl.AccessControlSections)
    name: SetSecurityDescriptorSddlForm
    nameWithType: ObjectSecurity.SetSecurityDescriptorSddlForm
    fullName: System.Security.AccessControl.ObjectSecurity.SetSecurityDescriptorSddlForm
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Security.AccessControl.AccessControlSections
    name: AccessControlSections
    nameWithType: AccessControlSections
    fullName: System.Security.AccessControl.AccessControlSections
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Security.AccessControl.ObjectSecurity.GetSecurityDescriptorBinaryForm
  commentId: M:System.Security.AccessControl.ObjectSecurity.GetSecurityDescriptorBinaryForm
  parent: System.Security.AccessControl.ObjectSecurity
  isExternal: false
  name: GetSecurityDescriptorBinaryForm()
  nameWithType: ObjectSecurity.GetSecurityDescriptorBinaryForm()
  fullName: System.Security.AccessControl.ObjectSecurity.GetSecurityDescriptorBinaryForm()
  spec.csharp:
  - uid: System.Security.AccessControl.ObjectSecurity.GetSecurityDescriptorBinaryForm
    name: GetSecurityDescriptorBinaryForm
    nameWithType: ObjectSecurity.GetSecurityDescriptorBinaryForm
    fullName: System.Security.AccessControl.ObjectSecurity.GetSecurityDescriptorBinaryForm
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Security.AccessControl.ObjectSecurity.GetSecurityDescriptorBinaryForm
    name: GetSecurityDescriptorBinaryForm
    nameWithType: ObjectSecurity.GetSecurityDescriptorBinaryForm
    fullName: System.Security.AccessControl.ObjectSecurity.GetSecurityDescriptorBinaryForm
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Security.AccessControl.ObjectSecurity.SetSecurityDescriptorBinaryForm(System.Byte[])
  commentId: M:System.Security.AccessControl.ObjectSecurity.SetSecurityDescriptorBinaryForm(System.Byte[])
  parent: System.Security.AccessControl.ObjectSecurity
  isExternal: true
  name: SetSecurityDescriptorBinaryForm(Byte[])
  nameWithType: ObjectSecurity.SetSecurityDescriptorBinaryForm(Byte[])
  fullName: System.Security.AccessControl.ObjectSecurity.SetSecurityDescriptorBinaryForm(System.Byte[])
  nameWithType.vb: ObjectSecurity.SetSecurityDescriptorBinaryForm(Byte())
  fullname.vb: System.Security.AccessControl.ObjectSecurity.SetSecurityDescriptorBinaryForm(System.Byte())
  name.vb: SetSecurityDescriptorBinaryForm(Byte())
  spec.csharp:
  - uid: System.Security.AccessControl.ObjectSecurity.SetSecurityDescriptorBinaryForm(System.Byte[])
    name: SetSecurityDescriptorBinaryForm
    nameWithType: ObjectSecurity.SetSecurityDescriptorBinaryForm
    fullName: System.Security.AccessControl.ObjectSecurity.SetSecurityDescriptorBinaryForm
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: System.Byte
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Security.AccessControl.ObjectSecurity.SetSecurityDescriptorBinaryForm(System.Byte[])
    name: SetSecurityDescriptorBinaryForm
    nameWithType: ObjectSecurity.SetSecurityDescriptorBinaryForm
    fullName: System.Security.AccessControl.ObjectSecurity.SetSecurityDescriptorBinaryForm
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: System.Byte
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Security.AccessControl.ObjectSecurity.SetSecurityDescriptorBinaryForm(System.Byte[],System.Security.AccessControl.AccessControlSections)
  commentId: M:System.Security.AccessControl.ObjectSecurity.SetSecurityDescriptorBinaryForm(System.Byte[],System.Security.AccessControl.AccessControlSections)
  parent: System.Security.AccessControl.ObjectSecurity
  isExternal: true
  name: SetSecurityDescriptorBinaryForm(Byte[], AccessControlSections)
  nameWithType: ObjectSecurity.SetSecurityDescriptorBinaryForm(Byte[], AccessControlSections)
  fullName: System.Security.AccessControl.ObjectSecurity.SetSecurityDescriptorBinaryForm(System.Byte[], System.Security.AccessControl.AccessControlSections)
  nameWithType.vb: ObjectSecurity.SetSecurityDescriptorBinaryForm(Byte(), AccessControlSections)
  fullname.vb: System.Security.AccessControl.ObjectSecurity.SetSecurityDescriptorBinaryForm(System.Byte(), System.Security.AccessControl.AccessControlSections)
  name.vb: SetSecurityDescriptorBinaryForm(Byte(), AccessControlSections)
  spec.csharp:
  - uid: System.Security.AccessControl.ObjectSecurity.SetSecurityDescriptorBinaryForm(System.Byte[],System.Security.AccessControl.AccessControlSections)
    name: SetSecurityDescriptorBinaryForm
    nameWithType: ObjectSecurity.SetSecurityDescriptorBinaryForm
    fullName: System.Security.AccessControl.ObjectSecurity.SetSecurityDescriptorBinaryForm
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: System.Byte
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Security.AccessControl.AccessControlSections
    name: AccessControlSections
    nameWithType: AccessControlSections
    fullName: System.Security.AccessControl.AccessControlSections
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Security.AccessControl.ObjectSecurity.SetSecurityDescriptorBinaryForm(System.Byte[],System.Security.AccessControl.AccessControlSections)
    name: SetSecurityDescriptorBinaryForm
    nameWithType: ObjectSecurity.SetSecurityDescriptorBinaryForm
    fullName: System.Security.AccessControl.ObjectSecurity.SetSecurityDescriptorBinaryForm
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: System.Byte
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Security.AccessControl.AccessControlSections
    name: AccessControlSections
    nameWithType: AccessControlSections
    fullName: System.Security.AccessControl.AccessControlSections
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Security.AccessControl.ObjectSecurity.ModifyAccessRule(System.Security.AccessControl.AccessControlModification,System.Security.AccessControl.AccessRule,System.Boolean@)
  commentId: M:System.Security.AccessControl.ObjectSecurity.ModifyAccessRule(System.Security.AccessControl.AccessControlModification,System.Security.AccessControl.AccessRule,System.Boolean@)
  parent: System.Security.AccessControl.ObjectSecurity
  isExternal: true
  name: ModifyAccessRule(AccessControlModification, AccessRule, Boolean)
  nameWithType: ObjectSecurity.ModifyAccessRule(AccessControlModification, AccessRule, Boolean)
  fullName: System.Security.AccessControl.ObjectSecurity.ModifyAccessRule(System.Security.AccessControl.AccessControlModification, System.Security.AccessControl.AccessRule, System.Boolean)
  spec.csharp:
  - uid: System.Security.AccessControl.ObjectSecurity.ModifyAccessRule(System.Security.AccessControl.AccessControlModification,System.Security.AccessControl.AccessRule,System.Boolean@)
    name: ModifyAccessRule
    nameWithType: ObjectSecurity.ModifyAccessRule
    fullName: System.Security.AccessControl.ObjectSecurity.ModifyAccessRule
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Security.AccessControl.AccessControlModification
    name: AccessControlModification
    nameWithType: AccessControlModification
    fullName: System.Security.AccessControl.AccessControlModification
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Security.AccessControl.AccessRule
    name: AccessRule
    nameWithType: AccessRule
    fullName: System.Security.AccessControl.AccessRule
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Security.AccessControl.ObjectSecurity.ModifyAccessRule(System.Security.AccessControl.AccessControlModification,System.Security.AccessControl.AccessRule,System.Boolean@)
    name: ModifyAccessRule
    nameWithType: ObjectSecurity.ModifyAccessRule
    fullName: System.Security.AccessControl.ObjectSecurity.ModifyAccessRule
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Security.AccessControl.AccessControlModification
    name: AccessControlModification
    nameWithType: AccessControlModification
    fullName: System.Security.AccessControl.AccessControlModification
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Security.AccessControl.AccessRule
    name: AccessRule
    nameWithType: AccessRule
    fullName: System.Security.AccessControl.AccessRule
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Security.AccessControl.ObjectSecurity.ModifyAuditRule(System.Security.AccessControl.AccessControlModification,System.Security.AccessControl.AuditRule,System.Boolean@)
  commentId: M:System.Security.AccessControl.ObjectSecurity.ModifyAuditRule(System.Security.AccessControl.AccessControlModification,System.Security.AccessControl.AuditRule,System.Boolean@)
  parent: System.Security.AccessControl.ObjectSecurity
  isExternal: true
  name: ModifyAuditRule(AccessControlModification, AuditRule, Boolean)
  nameWithType: ObjectSecurity.ModifyAuditRule(AccessControlModification, AuditRule, Boolean)
  fullName: System.Security.AccessControl.ObjectSecurity.ModifyAuditRule(System.Security.AccessControl.AccessControlModification, System.Security.AccessControl.AuditRule, System.Boolean)
  spec.csharp:
  - uid: System.Security.AccessControl.ObjectSecurity.ModifyAuditRule(System.Security.AccessControl.AccessControlModification,System.Security.AccessControl.AuditRule,System.Boolean@)
    name: ModifyAuditRule
    nameWithType: ObjectSecurity.ModifyAuditRule
    fullName: System.Security.AccessControl.ObjectSecurity.ModifyAuditRule
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Security.AccessControl.AccessControlModification
    name: AccessControlModification
    nameWithType: AccessControlModification
    fullName: System.Security.AccessControl.AccessControlModification
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Security.AccessControl.AuditRule
    name: AuditRule
    nameWithType: AuditRule
    fullName: System.Security.AccessControl.AuditRule
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Security.AccessControl.ObjectSecurity.ModifyAuditRule(System.Security.AccessControl.AccessControlModification,System.Security.AccessControl.AuditRule,System.Boolean@)
    name: ModifyAuditRule
    nameWithType: ObjectSecurity.ModifyAuditRule
    fullName: System.Security.AccessControl.ObjectSecurity.ModifyAuditRule
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Security.AccessControl.AccessControlModification
    name: AccessControlModification
    nameWithType: AccessControlModification
    fullName: System.Security.AccessControl.AccessControlModification
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Security.AccessControl.AuditRule
    name: AuditRule
    nameWithType: AuditRule
    fullName: System.Security.AccessControl.AuditRule
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Security.AccessControl.ObjectSecurity.AccessRuleFactory(System.Security.Principal.IdentityReference,System.Int32,System.Boolean,System.Security.AccessControl.InheritanceFlags,System.Security.AccessControl.PropagationFlags,System.Security.AccessControl.AccessControlType)
  commentId: M:System.Security.AccessControl.ObjectSecurity.AccessRuleFactory(System.Security.Principal.IdentityReference,System.Int32,System.Boolean,System.Security.AccessControl.InheritanceFlags,System.Security.AccessControl.PropagationFlags,System.Security.AccessControl.AccessControlType)
  parent: System.Security.AccessControl.ObjectSecurity
  isExternal: true
  name: AccessRuleFactory(IdentityReference, Int32, Boolean, InheritanceFlags, PropagationFlags, AccessControlType)
  nameWithType: ObjectSecurity.AccessRuleFactory(IdentityReference, Int32, Boolean, InheritanceFlags, PropagationFlags, AccessControlType)
  fullName: System.Security.AccessControl.ObjectSecurity.AccessRuleFactory(System.Security.Principal.IdentityReference, System.Int32, System.Boolean, System.Security.AccessControl.InheritanceFlags, System.Security.AccessControl.PropagationFlags, System.Security.AccessControl.AccessControlType)
  spec.csharp:
  - uid: System.Security.AccessControl.ObjectSecurity.AccessRuleFactory(System.Security.Principal.IdentityReference,System.Int32,System.Boolean,System.Security.AccessControl.InheritanceFlags,System.Security.AccessControl.PropagationFlags,System.Security.AccessControl.AccessControlType)
    name: AccessRuleFactory
    nameWithType: ObjectSecurity.AccessRuleFactory
    fullName: System.Security.AccessControl.ObjectSecurity.AccessRuleFactory
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Security.Principal.IdentityReference
    name: IdentityReference
    nameWithType: IdentityReference
    fullName: System.Security.Principal.IdentityReference
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Security.AccessControl.InheritanceFlags
    name: InheritanceFlags
    nameWithType: InheritanceFlags
    fullName: System.Security.AccessControl.InheritanceFlags
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Security.AccessControl.PropagationFlags
    name: PropagationFlags
    nameWithType: PropagationFlags
    fullName: System.Security.AccessControl.PropagationFlags
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Security.AccessControl.AccessControlType
    name: AccessControlType
    nameWithType: AccessControlType
    fullName: System.Security.AccessControl.AccessControlType
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Security.AccessControl.ObjectSecurity.AccessRuleFactory(System.Security.Principal.IdentityReference,System.Int32,System.Boolean,System.Security.AccessControl.InheritanceFlags,System.Security.AccessControl.PropagationFlags,System.Security.AccessControl.AccessControlType)
    name: AccessRuleFactory
    nameWithType: ObjectSecurity.AccessRuleFactory
    fullName: System.Security.AccessControl.ObjectSecurity.AccessRuleFactory
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Security.Principal.IdentityReference
    name: IdentityReference
    nameWithType: IdentityReference
    fullName: System.Security.Principal.IdentityReference
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Security.AccessControl.InheritanceFlags
    name: InheritanceFlags
    nameWithType: InheritanceFlags
    fullName: System.Security.AccessControl.InheritanceFlags
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Security.AccessControl.PropagationFlags
    name: PropagationFlags
    nameWithType: PropagationFlags
    fullName: System.Security.AccessControl.PropagationFlags
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Security.AccessControl.AccessControlType
    name: AccessControlType
    nameWithType: AccessControlType
    fullName: System.Security.AccessControl.AccessControlType
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Security.AccessControl.ObjectSecurity.AuditRuleFactory(System.Security.Principal.IdentityReference,System.Int32,System.Boolean,System.Security.AccessControl.InheritanceFlags,System.Security.AccessControl.PropagationFlags,System.Security.AccessControl.AuditFlags)
  commentId: M:System.Security.AccessControl.ObjectSecurity.AuditRuleFactory(System.Security.Principal.IdentityReference,System.Int32,System.Boolean,System.Security.AccessControl.InheritanceFlags,System.Security.AccessControl.PropagationFlags,System.Security.AccessControl.AuditFlags)
  parent: System.Security.AccessControl.ObjectSecurity
  isExternal: true
  name: AuditRuleFactory(IdentityReference, Int32, Boolean, InheritanceFlags, PropagationFlags, AuditFlags)
  nameWithType: ObjectSecurity.AuditRuleFactory(IdentityReference, Int32, Boolean, InheritanceFlags, PropagationFlags, AuditFlags)
  fullName: System.Security.AccessControl.ObjectSecurity.AuditRuleFactory(System.Security.Principal.IdentityReference, System.Int32, System.Boolean, System.Security.AccessControl.InheritanceFlags, System.Security.AccessControl.PropagationFlags, System.Security.AccessControl.AuditFlags)
  spec.csharp:
  - uid: System.Security.AccessControl.ObjectSecurity.AuditRuleFactory(System.Security.Principal.IdentityReference,System.Int32,System.Boolean,System.Security.AccessControl.InheritanceFlags,System.Security.AccessControl.PropagationFlags,System.Security.AccessControl.AuditFlags)
    name: AuditRuleFactory
    nameWithType: ObjectSecurity.AuditRuleFactory
    fullName: System.Security.AccessControl.ObjectSecurity.AuditRuleFactory
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Security.Principal.IdentityReference
    name: IdentityReference
    nameWithType: IdentityReference
    fullName: System.Security.Principal.IdentityReference
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Security.AccessControl.InheritanceFlags
    name: InheritanceFlags
    nameWithType: InheritanceFlags
    fullName: System.Security.AccessControl.InheritanceFlags
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Security.AccessControl.PropagationFlags
    name: PropagationFlags
    nameWithType: PropagationFlags
    fullName: System.Security.AccessControl.PropagationFlags
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Security.AccessControl.AuditFlags
    name: AuditFlags
    nameWithType: AuditFlags
    fullName: System.Security.AccessControl.AuditFlags
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Security.AccessControl.ObjectSecurity.AuditRuleFactory(System.Security.Principal.IdentityReference,System.Int32,System.Boolean,System.Security.AccessControl.InheritanceFlags,System.Security.AccessControl.PropagationFlags,System.Security.AccessControl.AuditFlags)
    name: AuditRuleFactory
    nameWithType: ObjectSecurity.AuditRuleFactory
    fullName: System.Security.AccessControl.ObjectSecurity.AuditRuleFactory
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Security.Principal.IdentityReference
    name: IdentityReference
    nameWithType: IdentityReference
    fullName: System.Security.Principal.IdentityReference
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Security.AccessControl.InheritanceFlags
    name: InheritanceFlags
    nameWithType: InheritanceFlags
    fullName: System.Security.AccessControl.InheritanceFlags
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Security.AccessControl.PropagationFlags
    name: PropagationFlags
    nameWithType: PropagationFlags
    fullName: System.Security.AccessControl.PropagationFlags
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Security.AccessControl.AuditFlags
    name: AuditFlags
    nameWithType: AuditFlags
    fullName: System.Security.AccessControl.AuditFlags
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Security.AccessControl.ObjectSecurity.OwnerModified
  commentId: P:System.Security.AccessControl.ObjectSecurity.OwnerModified
  parent: System.Security.AccessControl.ObjectSecurity
  isExternal: false
  name: OwnerModified
  nameWithType: ObjectSecurity.OwnerModified
  fullName: System.Security.AccessControl.ObjectSecurity.OwnerModified
- uid: System.Security.AccessControl.ObjectSecurity.GroupModified
  commentId: P:System.Security.AccessControl.ObjectSecurity.GroupModified
  parent: System.Security.AccessControl.ObjectSecurity
  isExternal: false
  name: GroupModified
  nameWithType: ObjectSecurity.GroupModified
  fullName: System.Security.AccessControl.ObjectSecurity.GroupModified
- uid: System.Security.AccessControl.ObjectSecurity.AuditRulesModified
  commentId: P:System.Security.AccessControl.ObjectSecurity.AuditRulesModified
  parent: System.Security.AccessControl.ObjectSecurity
  isExternal: false
  name: AuditRulesModified
  nameWithType: ObjectSecurity.AuditRulesModified
  fullName: System.Security.AccessControl.ObjectSecurity.AuditRulesModified
- uid: System.Security.AccessControl.ObjectSecurity.AccessRulesModified
  commentId: P:System.Security.AccessControl.ObjectSecurity.AccessRulesModified
  parent: System.Security.AccessControl.ObjectSecurity
  isExternal: false
  name: AccessRulesModified
  nameWithType: ObjectSecurity.AccessRulesModified
  fullName: System.Security.AccessControl.ObjectSecurity.AccessRulesModified
- uid: System.Security.AccessControl.ObjectSecurity.IsContainer
  commentId: P:System.Security.AccessControl.ObjectSecurity.IsContainer
  parent: System.Security.AccessControl.ObjectSecurity
  isExternal: false
  name: IsContainer
  nameWithType: ObjectSecurity.IsContainer
  fullName: System.Security.AccessControl.ObjectSecurity.IsContainer
- uid: System.Security.AccessControl.ObjectSecurity.IsDS
  commentId: P:System.Security.AccessControl.ObjectSecurity.IsDS
  parent: System.Security.AccessControl.ObjectSecurity
  isExternal: false
  name: IsDS
  nameWithType: ObjectSecurity.IsDS
  fullName: System.Security.AccessControl.ObjectSecurity.IsDS
- uid: System.Security.AccessControl.ObjectSecurity.AreAccessRulesProtected
  commentId: P:System.Security.AccessControl.ObjectSecurity.AreAccessRulesProtected
  parent: System.Security.AccessControl.ObjectSecurity
  isExternal: false
  name: AreAccessRulesProtected
  nameWithType: ObjectSecurity.AreAccessRulesProtected
  fullName: System.Security.AccessControl.ObjectSecurity.AreAccessRulesProtected
- uid: System.Security.AccessControl.ObjectSecurity.AreAuditRulesProtected
  commentId: P:System.Security.AccessControl.ObjectSecurity.AreAuditRulesProtected
  parent: System.Security.AccessControl.ObjectSecurity
  isExternal: false
  name: AreAuditRulesProtected
  nameWithType: ObjectSecurity.AreAuditRulesProtected
  fullName: System.Security.AccessControl.ObjectSecurity.AreAuditRulesProtected
- uid: System.Security.AccessControl.ObjectSecurity.AreAccessRulesCanonical
  commentId: P:System.Security.AccessControl.ObjectSecurity.AreAccessRulesCanonical
  parent: System.Security.AccessControl.ObjectSecurity
  isExternal: false
  name: AreAccessRulesCanonical
  nameWithType: ObjectSecurity.AreAccessRulesCanonical
  fullName: System.Security.AccessControl.ObjectSecurity.AreAccessRulesCanonical
- uid: System.Security.AccessControl.ObjectSecurity.AreAuditRulesCanonical
  commentId: P:System.Security.AccessControl.ObjectSecurity.AreAuditRulesCanonical
  parent: System.Security.AccessControl.ObjectSecurity
  isExternal: false
  name: AreAuditRulesCanonical
  nameWithType: ObjectSecurity.AreAuditRulesCanonical
  fullName: System.Security.AccessControl.ObjectSecurity.AreAuditRulesCanonical
- uid: System.Security.AccessControl.ObjectSecurity.AccessRightType
  commentId: P:System.Security.AccessControl.ObjectSecurity.AccessRightType
  parent: System.Security.AccessControl.ObjectSecurity
  isExternal: false
  name: AccessRightType
  nameWithType: ObjectSecurity.AccessRightType
  fullName: System.Security.AccessControl.ObjectSecurity.AccessRightType
- uid: System.Security.AccessControl.ObjectSecurity.AccessRuleType
  commentId: P:System.Security.AccessControl.ObjectSecurity.AccessRuleType
  parent: System.Security.AccessControl.ObjectSecurity
  isExternal: false
  name: AccessRuleType
  nameWithType: ObjectSecurity.AccessRuleType
  fullName: System.Security.AccessControl.ObjectSecurity.AccessRuleType
- uid: System.Security.AccessControl.ObjectSecurity.AuditRuleType
  commentId: P:System.Security.AccessControl.ObjectSecurity.AuditRuleType
  parent: System.Security.AccessControl.ObjectSecurity
  isExternal: false
  name: AuditRuleType
  nameWithType: ObjectSecurity.AuditRuleType
  fullName: System.Security.AccessControl.ObjectSecurity.AuditRuleType
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: System.Security.AccessControl.CommonSecurityDescriptor
  commentId: T:System.Security.AccessControl.CommonSecurityDescriptor
  parent: System.Security.AccessControl
  isExternal: false
  name: CommonSecurityDescriptor
  nameWithType: CommonSecurityDescriptor
  fullName: System.Security.AccessControl.CommonSecurityDescriptor
- uid: System.Security.Principal.IdentityReference
  commentId: T:System.Security.Principal.IdentityReference
  parent: System.Security.Principal
  isExternal: false
  name: IdentityReference
  nameWithType: IdentityReference
  fullName: System.Security.Principal.IdentityReference
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: false
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: false
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Security.AccessControl.InheritanceFlags
  commentId: T:System.Security.AccessControl.InheritanceFlags
  parent: System.Security.AccessControl
  isExternal: false
  name: InheritanceFlags
  nameWithType: InheritanceFlags
  fullName: System.Security.AccessControl.InheritanceFlags
- uid: System.Security.AccessControl.PropagationFlags
  commentId: T:System.Security.AccessControl.PropagationFlags
  parent: System.Security.AccessControl
  isExternal: false
  name: PropagationFlags
  nameWithType: PropagationFlags
  fullName: System.Security.AccessControl.PropagationFlags
- uid: System.Security.AccessControl.AccessControlType
  commentId: T:System.Security.AccessControl.AccessControlType
  parent: System.Security.AccessControl
  isExternal: false
  name: AccessControlType
  nameWithType: AccessControlType
  fullName: System.Security.AccessControl.AccessControlType
- uid: System.Guid
  commentId: T:System.Guid
  parent: System
  isExternal: false
  name: Guid
  nameWithType: Guid
  fullName: System.Guid
- uid: System.Security.AccessControl.AccessRule
  commentId: T:System.Security.AccessControl.AccessRule
  parent: System.Security.AccessControl
  isExternal: false
  name: AccessRule
  nameWithType: AccessRule
  fullName: System.Security.AccessControl.AccessRule
- uid: System.Security.Principal
  commentId: N:System.Security.Principal
  isExternal: false
  name: System.Security.Principal
  nameWithType: System.Security.Principal
  fullName: System.Security.Principal
- uid: System.Security.AccessControl.ObjectAccessRule
  commentId: T:System.Security.AccessControl.ObjectAccessRule
  parent: System.Security.AccessControl
  isExternal: false
  name: ObjectAccessRule
  nameWithType: ObjectAccessRule
  fullName: System.Security.AccessControl.ObjectAccessRule
- uid: System.Security.AccessControl.ObjectAuditRule
  commentId: T:System.Security.AccessControl.ObjectAuditRule
  parent: System.Security.AccessControl
  isExternal: false
  name: ObjectAuditRule
  nameWithType: ObjectAuditRule
  fullName: System.Security.AccessControl.ObjectAuditRule
- uid: System.Security.AccessControl.AuditFlags
  commentId: T:System.Security.AccessControl.AuditFlags
  parent: System.Security.AccessControl
  isExternal: false
  name: AuditFlags
  nameWithType: AuditFlags
  fullName: System.Security.AccessControl.AuditFlags
- uid: System.Security.AccessControl.AuditRule
  commentId: T:System.Security.AccessControl.AuditRule
  parent: System.Security.AccessControl
  isExternal: false
  name: AuditRule
  nameWithType: AuditRule
  fullName: System.Security.AccessControl.AuditRule
- uid: System.Type
  commentId: T:System.Type
  parent: System
  isExternal: false
  name: Type
  nameWithType: Type
  fullName: System.Type
- uid: System.Security.AccessControl.AuthorizationRuleCollection
  commentId: T:System.Security.AccessControl.AuthorizationRuleCollection
  parent: System.Security.AccessControl
  isExternal: false
  name: AuthorizationRuleCollection
  nameWithType: AuthorizationRuleCollection
  fullName: System.Security.AccessControl.AuthorizationRuleCollection
- uid: System.Security.AccessControl.ObjectSecurity.ModifyAccess(System.Security.AccessControl.AccessControlModification,System.Security.AccessControl.AccessRule,System.Boolean@)
  commentId: M:System.Security.AccessControl.ObjectSecurity.ModifyAccess(System.Security.AccessControl.AccessControlModification,System.Security.AccessControl.AccessRule,System.Boolean@)
  parent: System.Security.AccessControl.ObjectSecurity
  isExternal: true
  name: ModifyAccess(AccessControlModification, AccessRule, Boolean)
  nameWithType: ObjectSecurity.ModifyAccess(AccessControlModification, AccessRule, Boolean)
  fullName: System.Security.AccessControl.ObjectSecurity.ModifyAccess(System.Security.AccessControl.AccessControlModification, System.Security.AccessControl.AccessRule, System.Boolean)
  spec.csharp:
  - uid: System.Security.AccessControl.ObjectSecurity.ModifyAccess(System.Security.AccessControl.AccessControlModification,System.Security.AccessControl.AccessRule,System.Boolean@)
    name: ModifyAccess
    nameWithType: ObjectSecurity.ModifyAccess
    fullName: System.Security.AccessControl.ObjectSecurity.ModifyAccess
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Security.AccessControl.AccessControlModification
    name: AccessControlModification
    nameWithType: AccessControlModification
    fullName: System.Security.AccessControl.AccessControlModification
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Security.AccessControl.AccessRule
    name: AccessRule
    nameWithType: AccessRule
    fullName: System.Security.AccessControl.AccessRule
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Security.AccessControl.ObjectSecurity.ModifyAccess(System.Security.AccessControl.AccessControlModification,System.Security.AccessControl.AccessRule,System.Boolean@)
    name: ModifyAccess
    nameWithType: ObjectSecurity.ModifyAccess
    fullName: System.Security.AccessControl.ObjectSecurity.ModifyAccess
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Security.AccessControl.AccessControlModification
    name: AccessControlModification
    nameWithType: AccessControlModification
    fullName: System.Security.AccessControl.AccessControlModification
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Security.AccessControl.AccessRule
    name: AccessRule
    nameWithType: AccessRule
    fullName: System.Security.AccessControl.AccessRule
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Security.AccessControl.AccessControlModification
  commentId: T:System.Security.AccessControl.AccessControlModification
  parent: System.Security.AccessControl
  isExternal: false
  name: AccessControlModification
  nameWithType: AccessControlModification
  fullName: System.Security.AccessControl.AccessControlModification
- uid: System.Security.AccessControl.ObjectSecurity.ModifyAudit(System.Security.AccessControl.AccessControlModification,System.Security.AccessControl.AuditRule,System.Boolean@)
  commentId: M:System.Security.AccessControl.ObjectSecurity.ModifyAudit(System.Security.AccessControl.AccessControlModification,System.Security.AccessControl.AuditRule,System.Boolean@)
  parent: System.Security.AccessControl.ObjectSecurity
  isExternal: true
  name: ModifyAudit(AccessControlModification, AuditRule, Boolean)
  nameWithType: ObjectSecurity.ModifyAudit(AccessControlModification, AuditRule, Boolean)
  fullName: System.Security.AccessControl.ObjectSecurity.ModifyAudit(System.Security.AccessControl.AccessControlModification, System.Security.AccessControl.AuditRule, System.Boolean)
  spec.csharp:
  - uid: System.Security.AccessControl.ObjectSecurity.ModifyAudit(System.Security.AccessControl.AccessControlModification,System.Security.AccessControl.AuditRule,System.Boolean@)
    name: ModifyAudit
    nameWithType: ObjectSecurity.ModifyAudit
    fullName: System.Security.AccessControl.ObjectSecurity.ModifyAudit
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Security.AccessControl.AccessControlModification
    name: AccessControlModification
    nameWithType: AccessControlModification
    fullName: System.Security.AccessControl.AccessControlModification
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Security.AccessControl.AuditRule
    name: AuditRule
    nameWithType: AuditRule
    fullName: System.Security.AccessControl.AuditRule
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Security.AccessControl.ObjectSecurity.ModifyAudit(System.Security.AccessControl.AccessControlModification,System.Security.AccessControl.AuditRule,System.Boolean@)
    name: ModifyAudit
    nameWithType: ObjectSecurity.ModifyAudit
    fullName: System.Security.AccessControl.ObjectSecurity.ModifyAudit
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Security.AccessControl.AccessControlModification
    name: AccessControlModification
    nameWithType: AccessControlModification
    fullName: System.Security.AccessControl.AccessControlModification
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Security.AccessControl.AuditRule
    name: AuditRule
    nameWithType: AuditRule
    fullName: System.Security.AccessControl.AuditRule
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
