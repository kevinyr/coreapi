items:
- uid: System.ServiceModel.Dispatcher.IClientMessageFormatter
  commentId: T:System.ServiceModel.Dispatcher.IClientMessageFormatter
  id: IClientMessageFormatter
  parent: System.ServiceModel.Dispatcher
  children:
  - System.ServiceModel.Dispatcher.IClientMessageFormatter.DeserializeReply(System.ServiceModel.Channels.Message,System.Object[])
  - System.ServiceModel.Dispatcher.IClientMessageFormatter.SerializeRequest(System.ServiceModel.Channels.MessageVersion,System.Object[])
  langs:
  - csharp
  - vb
  name: IClientMessageFormatter
  fullName: System.ServiceModel.Dispatcher.IClientMessageFormatter
  type: Interface
  source:
    remote:
      path: src/System.ServiceModel.Primitives/ref/System.ServiceModel.Primitives.cs
      branch: master
      repo: https://github.com/dotnet/wcf.git
    id: IClientMessageFormatter
    path: src/System.ServiceModel.Primitives/ref/System.ServiceModel.Primitives.cs
    startLine: 1401
  assemblies:
  - System.ServiceModel.Primitives
  namespace: System.ServiceModel.Dispatcher
  summary: "\n<p>Defines methods that are used to control the conversion of messages into objects and objects into messages for client applications.</p>\n"
  syntax:
    content: public interface IClientMessageFormatter
    content.vb: Public Interface IClientMessageFormatter
  modifiers.csharp:
  - public
  - interface
  modifiers.vb:
  - Public
  - Interface
  nameWithType: IClientMessageFormatter
- uid: System.ServiceModel.Dispatcher.IClientMessageFormatter.DeserializeReply(System.ServiceModel.Channels.Message,System.Object[])
  commentId: M:System.ServiceModel.Dispatcher.IClientMessageFormatter.DeserializeReply(System.ServiceModel.Channels.Message,System.Object[])
  id: DeserializeReply(System.ServiceModel.Channels.Message,System.Object[])
  parent: System.ServiceModel.Dispatcher.IClientMessageFormatter
  langs:
  - csharp
  - vb
  name: DeserializeReply(Message, Object[])
  fullName: System.ServiceModel.Dispatcher.IClientMessageFormatter.DeserializeReply(System.ServiceModel.Channels.Message, System.Object[])
  type: Method
  source:
    remote:
      path: src/System.ServiceModel.Primitives/ref/System.ServiceModel.Primitives.cs
      branch: master
      repo: https://github.com/dotnet/wcf.git
    id: DeserializeReply
    path: src/System.ServiceModel.Primitives/ref/System.ServiceModel.Primitives.cs
    startLine: 1403
  assemblies:
  - System.ServiceModel.Primitives
  namespace: System.ServiceModel.Dispatcher
  summary: "\n<p>Converts a message into a return value and <strong>out</strong> parameters that are passed back to the calling operation.</p>\n"
  syntax:
    content: object DeserializeReply(Message message, object[] parameters)
    content.vb: Function DeserializeReply(message As Message, parameters As Object()) As Object
    parameters:
    - id: message
      type: System.ServiceModel.Channels.Message
      description: "\n<p>The inbound message.</p>\n"
    - id: parameters
      type: System.Object[]
      description: "\n<p>Any <strong>out</strong> values.</p>\n"
    return:
      type: System.Object
      description: "\n<p>The return value of the operation.</p>\n"
  fullName.vb: System.ServiceModel.Dispatcher.IClientMessageFormatter.DeserializeReply(System.ServiceModel.Channels.Message, System.Object())
  name.vb: DeserializeReply(Message, Object())
  nameWithType: IClientMessageFormatter.DeserializeReply(Message, Object[])
  nameWithType.vb: IClientMessageFormatter.DeserializeReply(Message, Object())
- uid: System.ServiceModel.Dispatcher.IClientMessageFormatter.SerializeRequest(System.ServiceModel.Channels.MessageVersion,System.Object[])
  commentId: M:System.ServiceModel.Dispatcher.IClientMessageFormatter.SerializeRequest(System.ServiceModel.Channels.MessageVersion,System.Object[])
  id: SerializeRequest(System.ServiceModel.Channels.MessageVersion,System.Object[])
  parent: System.ServiceModel.Dispatcher.IClientMessageFormatter
  langs:
  - csharp
  - vb
  name: SerializeRequest(MessageVersion, Object[])
  fullName: System.ServiceModel.Dispatcher.IClientMessageFormatter.SerializeRequest(System.ServiceModel.Channels.MessageVersion, System.Object[])
  type: Method
  source:
    remote:
      path: src/System.ServiceModel.Primitives/ref/System.ServiceModel.Primitives.cs
      branch: master
      repo: https://github.com/dotnet/wcf.git
    id: SerializeRequest
    path: src/System.ServiceModel.Primitives/ref/System.ServiceModel.Primitives.cs
    startLine: 1404
  assemblies:
  - System.ServiceModel.Primitives
  namespace: System.ServiceModel.Dispatcher
  summary: "\n<p>Converts an <xref href=\"System.Object\" data-throw-if-not-resolved=\"false\"></xref> array into an outbound <xref href=\"System.ServiceModel.Channels.Message\" data-throw-if-not-resolved=\"false\"></xref>. </p>\n"
  syntax:
    content: Message SerializeRequest(MessageVersion messageVersion, object[] parameters)
    content.vb: Function SerializeRequest(messageVersion As MessageVersion, parameters As Object()) As Message
    parameters:
    - id: messageVersion
      type: System.ServiceModel.Channels.MessageVersion
      description: "\n<p>The version of the SOAP message to use.</p>\n"
    - id: parameters
      type: System.Object[]
      description: "\n<p>The parameters passed to the WCF client operation.</p>\n"
    return:
      type: System.ServiceModel.Channels.Message
      description: "\n<p>The SOAP message sent to the service operation.</p>\n"
  fullName.vb: System.ServiceModel.Dispatcher.IClientMessageFormatter.SerializeRequest(System.ServiceModel.Channels.MessageVersion, System.Object())
  name.vb: SerializeRequest(MessageVersion, Object())
  nameWithType: IClientMessageFormatter.SerializeRequest(MessageVersion, Object[])
  nameWithType.vb: IClientMessageFormatter.SerializeRequest(MessageVersion, Object())
references:
- uid: System.ServiceModel.Dispatcher
  isExternal: false
  name: System.ServiceModel.Dispatcher
  fullName: System.ServiceModel.Dispatcher
  commentId: N:System.ServiceModel.Dispatcher
  nameWithType: System.ServiceModel.Dispatcher
- uid: System.ServiceModel.Channels.Message
  parent: System.ServiceModel.Channels
  isExternal: false
  name: Message
  fullName: System.ServiceModel.Channels.Message
  commentId: T:System.ServiceModel.Channels.Message
  nameWithType: Message
- uid: System.Object[]
  name: Object[]
  fullName: System.Object[]
  fullname.vb: System.Object()
  name.vb: Object()
  spec.csharp:
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: '[]'
    fullName: '[]'
  spec.vb:
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ()
    fullName: ()
  nameWithType: Object[]
  nameWithType.vb: Object()
- uid: System.Object
  parent: System
  isExternal: false
  name: Object
  fullName: System.Object
  commentId: T:System.Object
  nameWithType: Object
- uid: System.ServiceModel.Channels
  isExternal: false
  name: System.ServiceModel.Channels
  fullName: System.ServiceModel.Channels
  commentId: N:System.ServiceModel.Channels
  nameWithType: System.ServiceModel.Channels
- uid: System
  isExternal: false
  name: System
  fullName: System
  commentId: N:System
  nameWithType: System
- uid: System.ServiceModel.Channels.MessageVersion
  parent: System.ServiceModel.Channels
  isExternal: false
  name: MessageVersion
  fullName: System.ServiceModel.Channels.MessageVersion
  commentId: T:System.ServiceModel.Channels.MessageVersion
  nameWithType: MessageVersion
