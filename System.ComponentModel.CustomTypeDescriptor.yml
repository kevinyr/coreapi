### YamlMime:ManagedReference
items:
- uid: System.ComponentModel.CustomTypeDescriptor
  commentId: T:System.ComponentModel.CustomTypeDescriptor
  id: CustomTypeDescriptor
  parent: System.ComponentModel
  children:
  - System.ComponentModel.CustomTypeDescriptor.#ctor
  - System.ComponentModel.CustomTypeDescriptor.#ctor(System.ComponentModel.ICustomTypeDescriptor)
  - System.ComponentModel.CustomTypeDescriptor.GetAttributes
  - System.ComponentModel.CustomTypeDescriptor.GetClassName
  - System.ComponentModel.CustomTypeDescriptor.GetComponentName
  - System.ComponentModel.CustomTypeDescriptor.GetConverter
  - System.ComponentModel.CustomTypeDescriptor.GetDefaultEvent
  - System.ComponentModel.CustomTypeDescriptor.GetDefaultProperty
  - System.ComponentModel.CustomTypeDescriptor.GetEditor(System.Type)
  - System.ComponentModel.CustomTypeDescriptor.GetEvents
  - System.ComponentModel.CustomTypeDescriptor.GetEvents(System.Attribute[])
  - System.ComponentModel.CustomTypeDescriptor.GetProperties
  - System.ComponentModel.CustomTypeDescriptor.GetProperties(System.Attribute[])
  - System.ComponentModel.CustomTypeDescriptor.GetPropertyOwner(System.ComponentModel.PropertyDescriptor)
  langs:
  - csharp
  - vb
  name: CustomTypeDescriptor
  nameWithType: CustomTypeDescriptor
  fullName: System.ComponentModel.CustomTypeDescriptor
  type: Class
  source:
    remote:
      path: src/System.ComponentModel.TypeConverter/src/System/ComponentModel/CustomTypeDescriptor.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: CustomTypeDescriptor
    path: src/System.ComponentModel.TypeConverter/src/System/ComponentModel/CustomTypeDescriptor.cs
    startLine: 8
  assemblies:
  - System.ComponentModel.TypeConverter
  namespace: System.ComponentModel
  summary: "\n<p>Provides a simple default implementation of the <xref href=\"System.ComponentModel.ICustomTypeDescriptor\" data-throw-if-not-resolved=\"false\"></xref> interface.</p>\n"
  syntax:
    content: 'public abstract class CustomTypeDescriptor : ICustomTypeDescriptor'
    content.vb: >-
      Public MustInherit Class CustomTypeDescriptor
          Implements ICustomTypeDescriptor
  seealso:
  - linkId: System.ComponentModel.ICustomTypeDescriptor
    commentId: T:System.ComponentModel.ICustomTypeDescriptor
  - linkId: System.ComponentModel.TypeDescriptionProvider
    commentId: T:System.ComponentModel.TypeDescriptionProvider
  - linkId: System.ComponentModel.TypeDescriptor
    commentId: T:System.ComponentModel.TypeDescriptor
  inheritance:
  - System.Object
  implements:
  - System.ComponentModel.ICustomTypeDescriptor
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  modifiers.csharp:
  - public
  - abstract
  - class
  modifiers.vb:
  - Public
  - MustInherit
  - Class
- uid: System.ComponentModel.CustomTypeDescriptor.#ctor
  commentId: M:System.ComponentModel.CustomTypeDescriptor.#ctor
  id: '#ctor'
  parent: System.ComponentModel.CustomTypeDescriptor
  langs:
  - csharp
  - vb
  name: CustomTypeDescriptor()
  nameWithType: CustomTypeDescriptor.CustomTypeDescriptor()
  fullName: System.ComponentModel.CustomTypeDescriptor.CustomTypeDescriptor()
  type: Constructor
  source:
    remote:
      path: src/System.ComponentModel.TypeConverter/src/System/ComponentModel/CustomTypeDescriptor.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: .ctor
    path: src/System.ComponentModel.TypeConverter/src/System/ComponentModel/CustomTypeDescriptor.cs
    startLine: 21
  assemblies:
  - System.ComponentModel.TypeConverter
  namespace: System.ComponentModel
  summary: "\n<p>Initializes a new instance of the <xref href=\"System.ComponentModel.CustomTypeDescriptor\" data-throw-if-not-resolved=\"false\"></xref> class.</p>\n"
  syntax:
    content: protected CustomTypeDescriptor()
    content.vb: Protected Sub New
  seealso:
  - linkId: System.ComponentModel.CustomTypeDescriptor.#ctor(System.ComponentModel.ICustomTypeDescriptor)
    commentId: M:System.ComponentModel.CustomTypeDescriptor.#ctor(System.ComponentModel.ICustomTypeDescriptor)
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: System.ComponentModel.CustomTypeDescriptor.#ctor(System.ComponentModel.ICustomTypeDescriptor)
  commentId: M:System.ComponentModel.CustomTypeDescriptor.#ctor(System.ComponentModel.ICustomTypeDescriptor)
  id: '#ctor(System.ComponentModel.ICustomTypeDescriptor)'
  parent: System.ComponentModel.CustomTypeDescriptor
  langs:
  - csharp
  - vb
  name: CustomTypeDescriptor(ICustomTypeDescriptor)
  nameWithType: CustomTypeDescriptor.CustomTypeDescriptor(ICustomTypeDescriptor)
  fullName: System.ComponentModel.CustomTypeDescriptor.CustomTypeDescriptor(System.ComponentModel.ICustomTypeDescriptor)
  type: Constructor
  source:
    remote:
      path: src/System.ComponentModel.TypeConverter/src/System/ComponentModel/CustomTypeDescriptor.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: .ctor
    path: src/System.ComponentModel.TypeConverter/src/System/ComponentModel/CustomTypeDescriptor.cs
    startLine: 34
  assemblies:
  - System.ComponentModel.TypeConverter
  namespace: System.ComponentModel
  summary: "\n<p>Initializes a new instance of the <xref href=\"System.ComponentModel.CustomTypeDescriptor\" data-throw-if-not-resolved=\"false\"></xref> class using a parent custom type descriptor.</p>\n"
  syntax:
    content: protected CustomTypeDescriptor(ICustomTypeDescriptor parent)
    content.vb: Protected Sub New(parent As ICustomTypeDescriptor)
    parameters:
    - id: parent
      type: System.ComponentModel.ICustomTypeDescriptor
      description: "\n<p>The parent custom type descriptor.</p>\n"
  seealso:
  - linkId: System.ComponentModel.CustomTypeDescriptor
    commentId: T:System.ComponentModel.CustomTypeDescriptor
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: System.ComponentModel.CustomTypeDescriptor.GetAttributes
  commentId: M:System.ComponentModel.CustomTypeDescriptor.GetAttributes
  id: GetAttributes
  parent: System.ComponentModel.CustomTypeDescriptor
  langs:
  - csharp
  - vb
  name: GetAttributes()
  nameWithType: CustomTypeDescriptor.GetAttributes()
  fullName: System.ComponentModel.CustomTypeDescriptor.GetAttributes()
  type: Method
  source:
    remote:
      path: src/System.ComponentModel.TypeConverter/src/System/ComponentModel/CustomTypeDescriptor.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: GetAttributes
    path: src/System.ComponentModel.TypeConverter/src/System/ComponentModel/CustomTypeDescriptor.cs
    startLine: 44
  assemblies:
  - System.ComponentModel.TypeConverter
  namespace: System.ComponentModel
  summary: "\n<p>Returns a collection of custom attributes for the type represented by this type descriptor.</p>\n"
  syntax:
    content: public virtual AttributeCollection GetAttributes()
    content.vb: Public Overridable Function GetAttributes As AttributeCollection
    return:
      type: System.ComponentModel.AttributeCollection
      description: "\n<p>An <xref href=\"System.ComponentModel.AttributeCollection\" data-throw-if-not-resolved=\"false\"></xref> containing the attributes for the type. The default is <xref href=\"System.ComponentModel.AttributeCollection.Empty\" data-throw-if-not-resolved=\"false\"></xref>.</p>\n"
  seealso:
  - linkId: System.ComponentModel.ICustomTypeDescriptor.GetAttributes
    commentId: M:System.ComponentModel.ICustomTypeDescriptor.GetAttributes
  - linkId: System.Attribute
    commentId: T:System.Attribute
  - linkId: System.ComponentModel.AttributeCollection
    commentId: T:System.ComponentModel.AttributeCollection
  - linkId: System.ComponentModel.CustomTypeDescriptor.GetEvents
    commentId: M:System.ComponentModel.CustomTypeDescriptor.GetEvents
  - linkId: System.ComponentModel.CustomTypeDescriptor.GetProperties
    commentId: M:System.ComponentModel.CustomTypeDescriptor.GetProperties
  implements:
  - System.ComponentModel.ICustomTypeDescriptor.GetAttributes
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: System.ComponentModel.CustomTypeDescriptor.GetClassName
  commentId: M:System.ComponentModel.CustomTypeDescriptor.GetClassName
  id: GetClassName
  parent: System.ComponentModel.CustomTypeDescriptor
  langs:
  - csharp
  - vb
  name: GetClassName()
  nameWithType: CustomTypeDescriptor.GetClassName()
  fullName: System.ComponentModel.CustomTypeDescriptor.GetClassName()
  type: Method
  source:
    remote:
      path: src/System.ComponentModel.TypeConverter/src/System/ComponentModel/CustomTypeDescriptor.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: GetClassName
    path: src/System.ComponentModel.TypeConverter/src/System/ComponentModel/CustomTypeDescriptor.cs
    startLine: 60
  assemblies:
  - System.ComponentModel.TypeConverter
  namespace: System.ComponentModel
  summary: "\n<p>Returns the fully qualified name of the class represented by this type descriptor.</p>\n"
  syntax:
    content: public virtual string GetClassName()
    content.vb: Public Overridable Function GetClassName As String
    return:
      type: System.String
      description: "\n<p>A <xref href=\"System.String\" data-throw-if-not-resolved=\"false\"></xref> containing the fully qualified class name of the type this type descriptor is describing. The default is <strong>null</strong>.</p>\n"
  seealso:
  - linkId: System.ComponentModel.ICustomTypeDescriptor.GetClassName
    commentId: M:System.ComponentModel.ICustomTypeDescriptor.GetClassName
  - linkId: System.ComponentModel.CustomTypeDescriptor.GetComponentName
    commentId: M:System.ComponentModel.CustomTypeDescriptor.GetComponentName
  implements:
  - System.ComponentModel.ICustomTypeDescriptor.GetClassName
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: System.ComponentModel.CustomTypeDescriptor.GetComponentName
  commentId: M:System.ComponentModel.CustomTypeDescriptor.GetComponentName
  id: GetComponentName
  parent: System.ComponentModel.CustomTypeDescriptor
  langs:
  - csharp
  - vb
  name: GetComponentName()
  nameWithType: CustomTypeDescriptor.GetComponentName()
  fullName: System.ComponentModel.CustomTypeDescriptor.GetComponentName()
  type: Method
  source:
    remote:
      path: src/System.ComponentModel.TypeConverter/src/System/ComponentModel/CustomTypeDescriptor.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: GetComponentName
    path: src/System.ComponentModel.TypeConverter/src/System/ComponentModel/CustomTypeDescriptor.cs
    startLine: 74
  assemblies:
  - System.ComponentModel.TypeConverter
  namespace: System.ComponentModel
  summary: "\n<p>Returns the name of the class represented by this type descriptor.</p>\n"
  syntax:
    content: public virtual string GetComponentName()
    content.vb: Public Overridable Function GetComponentName As String
    return:
      type: System.String
      description: "\n<p>A <xref href=\"System.String\" data-throw-if-not-resolved=\"false\"></xref> containing the name of the component instance this type descriptor is describing. The default is <strong>null</strong>.</p>\n"
  seealso:
  - linkId: System.ComponentModel.ICustomTypeDescriptor.GetComponentName
    commentId: M:System.ComponentModel.ICustomTypeDescriptor.GetComponentName
  - linkId: System.ComponentModel.CustomTypeDescriptor.GetClassName
    commentId: M:System.ComponentModel.CustomTypeDescriptor.GetClassName
  implements:
  - System.ComponentModel.ICustomTypeDescriptor.GetComponentName
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: System.ComponentModel.CustomTypeDescriptor.GetConverter
  commentId: M:System.ComponentModel.CustomTypeDescriptor.GetConverter
  id: GetConverter
  parent: System.ComponentModel.CustomTypeDescriptor
  langs:
  - csharp
  - vb
  name: GetConverter()
  nameWithType: CustomTypeDescriptor.GetConverter()
  fullName: System.ComponentModel.CustomTypeDescriptor.GetConverter()
  type: Method
  source:
    remote:
      path: src/System.ComponentModel.TypeConverter/src/System/ComponentModel/CustomTypeDescriptor.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: GetConverter
    path: src/System.ComponentModel.TypeConverter/src/System/ComponentModel/CustomTypeDescriptor.cs
    startLine: 88
  assemblies:
  - System.ComponentModel.TypeConverter
  namespace: System.ComponentModel
  summary: "\n<p>Returns a type converter for the type represented by this type descriptor.</p>\n"
  syntax:
    content: public virtual TypeConverter GetConverter()
    content.vb: Public Overridable Function GetConverter As TypeConverter
    return:
      type: System.ComponentModel.TypeConverter
      description: "\n<p>A <xref href=\"System.ComponentModel.TypeConverter\" data-throw-if-not-resolved=\"false\"></xref> for the type represented by this type descriptor. The default is a newly created <xref href=\"System.ComponentModel.TypeConverter\" data-throw-if-not-resolved=\"false\"></xref>.</p>\n"
  seealso:
  - linkId: System.ComponentModel.ICustomTypeDescriptor.GetConverter
    commentId: M:System.ComponentModel.ICustomTypeDescriptor.GetConverter
  - linkId: System.ComponentModel.TypeConverter
    commentId: T:System.ComponentModel.TypeConverter
  - linkId: System.ComponentModel.CustomTypeDescriptor.GetEditor(System.Type)
    commentId: M:System.ComponentModel.CustomTypeDescriptor.GetEditor(System.Type)
  implements:
  - System.ComponentModel.ICustomTypeDescriptor.GetConverter
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: System.ComponentModel.CustomTypeDescriptor.GetDefaultEvent
  commentId: M:System.ComponentModel.CustomTypeDescriptor.GetDefaultEvent
  id: GetDefaultEvent
  parent: System.ComponentModel.CustomTypeDescriptor
  langs:
  - csharp
  - vb
  name: GetDefaultEvent()
  nameWithType: CustomTypeDescriptor.GetDefaultEvent()
  fullName: System.ComponentModel.CustomTypeDescriptor.GetDefaultEvent()
  type: Method
  source:
    remote:
      path: src/System.ComponentModel.TypeConverter/src/System/ComponentModel/CustomTypeDescriptor.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: GetDefaultEvent
    path: src/System.ComponentModel.TypeConverter/src/System/ComponentModel/CustomTypeDescriptor.cs
    startLine: 102
  assemblies:
  - System.ComponentModel.TypeConverter
  namespace: System.ComponentModel
  summary: "\n<p>Returns the event descriptor for the default event of the object represented by this type descriptor.</p>\n"
  syntax:
    content: public virtual EventDescriptor GetDefaultEvent()
    content.vb: Public Overridable Function GetDefaultEvent As EventDescriptor
    return:
      type: System.ComponentModel.EventDescriptor
      description: "\n<p>The <xref href=\"System.ComponentModel.EventDescriptor\" data-throw-if-not-resolved=\"false\"></xref> for the default event on the object represented by this type descriptor. The default is <strong>null</strong>.</p>\n"
  seealso:
  - linkId: System.ComponentModel.ICustomTypeDescriptor.GetDefaultEvent
    commentId: M:System.ComponentModel.ICustomTypeDescriptor.GetDefaultEvent
  - linkId: System.ComponentModel.EventDescriptor
    commentId: T:System.ComponentModel.EventDescriptor
  - linkId: System.ComponentModel.CustomTypeDescriptor.GetDefaultProperty
    commentId: M:System.ComponentModel.CustomTypeDescriptor.GetDefaultProperty
  implements:
  - System.ComponentModel.ICustomTypeDescriptor.GetDefaultEvent
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: System.ComponentModel.CustomTypeDescriptor.GetDefaultProperty
  commentId: M:System.ComponentModel.CustomTypeDescriptor.GetDefaultProperty
  id: GetDefaultProperty
  parent: System.ComponentModel.CustomTypeDescriptor
  langs:
  - csharp
  - vb
  name: GetDefaultProperty()
  nameWithType: CustomTypeDescriptor.GetDefaultProperty()
  fullName: System.ComponentModel.CustomTypeDescriptor.GetDefaultProperty()
  type: Method
  source:
    remote:
      path: src/System.ComponentModel.TypeConverter/src/System/ComponentModel/CustomTypeDescriptor.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: GetDefaultProperty
    path: src/System.ComponentModel.TypeConverter/src/System/ComponentModel/CustomTypeDescriptor.cs
    startLine: 116
  assemblies:
  - System.ComponentModel.TypeConverter
  namespace: System.ComponentModel
  summary: "\n<p>Returns the property descriptor for the default property of the object represented by this type descriptor.</p>\n"
  syntax:
    content: public virtual PropertyDescriptor GetDefaultProperty()
    content.vb: Public Overridable Function GetDefaultProperty As PropertyDescriptor
    return:
      type: System.ComponentModel.PropertyDescriptor
      description: "\n<p>A <xref href=\"System.ComponentModel.PropertyDescriptor\" data-throw-if-not-resolved=\"false\"></xref> for the default property on the object represented by this type descriptor. The default is <strong>null</strong>.</p>\n"
  seealso:
  - linkId: System.ComponentModel.ICustomTypeDescriptor.GetDefaultProperty
    commentId: M:System.ComponentModel.ICustomTypeDescriptor.GetDefaultProperty
  - linkId: System.ComponentModel.PropertyDescriptor
    commentId: T:System.ComponentModel.PropertyDescriptor
  - linkId: System.ComponentModel.CustomTypeDescriptor.GetDefaultEvent
    commentId: M:System.ComponentModel.CustomTypeDescriptor.GetDefaultEvent
  implements:
  - System.ComponentModel.ICustomTypeDescriptor.GetDefaultProperty
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: System.ComponentModel.CustomTypeDescriptor.GetEditor(System.Type)
  commentId: M:System.ComponentModel.CustomTypeDescriptor.GetEditor(System.Type)
  id: GetEditor(System.Type)
  parent: System.ComponentModel.CustomTypeDescriptor
  langs:
  - csharp
  - vb
  name: GetEditor(Type)
  nameWithType: CustomTypeDescriptor.GetEditor(Type)
  fullName: System.ComponentModel.CustomTypeDescriptor.GetEditor(System.Type)
  type: Method
  source:
    remote:
      path: src/System.ComponentModel.TypeConverter/src/System/ComponentModel/CustomTypeDescriptor.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: GetEditor
    path: src/System.ComponentModel.TypeConverter/src/System/ComponentModel/CustomTypeDescriptor.cs
    startLine: 130
  assemblies:
  - System.ComponentModel.TypeConverter
  namespace: System.ComponentModel
  summary: "\n<p>Returns an editor of the specified type that is to be associated with the class represented by this type descriptor.</p>\n"
  syntax:
    content: public virtual object GetEditor(Type editorBaseType)
    content.vb: Public Overridable Function GetEditor(editorBaseType As Type) As Object
    parameters:
    - id: editorBaseType
      type: System.Type
      description: "\n<p>The base type of the editor to retrieve.</p>\n"
    return:
      type: System.Object
      description: "\n<p>An editor of the given type that is to be associated with the class represented by this type descriptor. The default is <strong>null</strong>.</p>\n"
  seealso:
  - linkId: System.ComponentModel.ICustomTypeDescriptor.GetEditor(System.Type)
    commentId: M:System.ComponentModel.ICustomTypeDescriptor.GetEditor(System.Type)
  - linkId: System.ComponentModel.CustomTypeDescriptor.GetConverter
    commentId: M:System.ComponentModel.CustomTypeDescriptor.GetConverter
  implements:
  - System.ComponentModel.ICustomTypeDescriptor.GetEditor(System.Type)
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: System.ComponentModel.CustomTypeDescriptor.GetEvents
  commentId: M:System.ComponentModel.CustomTypeDescriptor.GetEvents
  id: GetEvents
  parent: System.ComponentModel.CustomTypeDescriptor
  langs:
  - csharp
  - vb
  name: GetEvents()
  nameWithType: CustomTypeDescriptor.GetEvents()
  fullName: System.ComponentModel.CustomTypeDescriptor.GetEvents()
  type: Method
  source:
    remote:
      path: src/System.ComponentModel.TypeConverter/src/System/ComponentModel/CustomTypeDescriptor.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: GetEvents
    path: src/System.ComponentModel.TypeConverter/src/System/ComponentModel/CustomTypeDescriptor.cs
    startLine: 147
  assemblies:
  - System.ComponentModel.TypeConverter
  namespace: System.ComponentModel
  summary: "\n<p>Returns a collection of event descriptors for the object represented by this type descriptor.</p>\n"
  syntax:
    content: public virtual EventDescriptorCollection GetEvents()
    content.vb: Public Overridable Function GetEvents As EventDescriptorCollection
    return:
      type: System.ComponentModel.EventDescriptorCollection
      description: "\n<p>An <xref href=\"System.ComponentModel.EventDescriptorCollection\" data-throw-if-not-resolved=\"false\"></xref> containing the event descriptors for the object represented by this type descriptor. The default is <xref href=\"System.ComponentModel.EventDescriptorCollection.Empty\" data-throw-if-not-resolved=\"false\"></xref>.</p>\n"
  seealso:
  - linkId: System.ComponentModel.ICustomTypeDescriptor.GetEvents
    commentId: M:System.ComponentModel.ICustomTypeDescriptor.GetEvents
  - linkId: System.ComponentModel.EventDescriptorCollection
    commentId: T:System.ComponentModel.EventDescriptorCollection
  - linkId: System.ComponentModel.CustomTypeDescriptor.GetAttributes
    commentId: M:System.ComponentModel.CustomTypeDescriptor.GetAttributes
  - linkId: System.ComponentModel.CustomTypeDescriptor.GetDefaultEvent
    commentId: M:System.ComponentModel.CustomTypeDescriptor.GetDefaultEvent
  implements:
  - System.ComponentModel.ICustomTypeDescriptor.GetEvents
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: System.ComponentModel.CustomTypeDescriptor.GetEvents(System.Attribute[])
  commentId: M:System.ComponentModel.CustomTypeDescriptor.GetEvents(System.Attribute[])
  id: GetEvents(System.Attribute[])
  parent: System.ComponentModel.CustomTypeDescriptor
  langs:
  - csharp
  - vb
  name: GetEvents(Attribute[])
  nameWithType: CustomTypeDescriptor.GetEvents(Attribute[])
  fullName: System.ComponentModel.CustomTypeDescriptor.GetEvents(System.Attribute[])
  type: Method
  source:
    remote:
      path: src/System.ComponentModel.TypeConverter/src/System/ComponentModel/CustomTypeDescriptor.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: GetEvents
    path: src/System.ComponentModel.TypeConverter/src/System/ComponentModel/CustomTypeDescriptor.cs
    startLine: 164
  assemblies:
  - System.ComponentModel.TypeConverter
  namespace: System.ComponentModel
  summary: "\n<p>Returns a filtered collection of event descriptors for the object represented by this type descriptor.</p>\n"
  syntax:
    content: public virtual EventDescriptorCollection GetEvents(Attribute[] attributes)
    content.vb: Public Overridable Function GetEvents(attributes As Attribute()) As EventDescriptorCollection
    parameters:
    - id: attributes
      type: System.Attribute[]
      description: "\n<p>An array of attributes to use as a filter. This can be <strong>null</strong>.</p>\n"
    return:
      type: System.ComponentModel.EventDescriptorCollection
      description: "\n<p>An <xref href=\"System.ComponentModel.EventDescriptorCollection\" data-throw-if-not-resolved=\"false\"></xref> containing the event descriptions for the object represented by this type descriptor. The default is <xref href=\"System.ComponentModel.EventDescriptorCollection.Empty\" data-throw-if-not-resolved=\"false\"></xref>.</p>\n"
  seealso:
  - linkId: System.ComponentModel.ICustomTypeDescriptor.GetEvents
    commentId: M:System.ComponentModel.ICustomTypeDescriptor.GetEvents
  - linkId: System.ComponentModel.EventDescriptorCollection
    commentId: T:System.ComponentModel.EventDescriptorCollection
  - linkId: System.ComponentModel.CustomTypeDescriptor.GetAttributes
    commentId: M:System.ComponentModel.CustomTypeDescriptor.GetAttributes
  - linkId: System.ComponentModel.CustomTypeDescriptor.GetDefaultEvent
    commentId: M:System.ComponentModel.CustomTypeDescriptor.GetDefaultEvent
  implements:
  - System.ComponentModel.ICustomTypeDescriptor.GetEvents(System.Attribute[])
  nameWithType.vb: CustomTypeDescriptor.GetEvents(Attribute())
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
  fullName.vb: System.ComponentModel.CustomTypeDescriptor.GetEvents(System.Attribute())
  name.vb: GetEvents(Attribute())
- uid: System.ComponentModel.CustomTypeDescriptor.GetProperties
  commentId: M:System.ComponentModel.CustomTypeDescriptor.GetProperties
  id: GetProperties
  parent: System.ComponentModel.CustomTypeDescriptor
  langs:
  - csharp
  - vb
  name: GetProperties()
  nameWithType: CustomTypeDescriptor.GetProperties()
  fullName: System.ComponentModel.CustomTypeDescriptor.GetProperties()
  type: Method
  source:
    remote:
      path: src/System.ComponentModel.TypeConverter/src/System/ComponentModel/CustomTypeDescriptor.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: GetProperties
    path: src/System.ComponentModel.TypeConverter/src/System/ComponentModel/CustomTypeDescriptor.cs
    startLine: 181
  assemblies:
  - System.ComponentModel.TypeConverter
  namespace: System.ComponentModel
  summary: "\n<p>Returns a collection of property descriptors for the object represented by this type descriptor.</p>\n"
  syntax:
    content: public virtual PropertyDescriptorCollection GetProperties()
    content.vb: Public Overridable Function GetProperties As PropertyDescriptorCollection
    return:
      type: System.ComponentModel.PropertyDescriptorCollection
      description: "\n<p>A <xref href=\"System.ComponentModel.PropertyDescriptorCollection\" data-throw-if-not-resolved=\"false\"></xref> containing the property descriptions for the object represented by this type descriptor. The default is <xref href=\"System.ComponentModel.PropertyDescriptorCollection.Empty\" data-throw-if-not-resolved=\"false\"></xref>.</p>\n"
  seealso:
  - linkId: System.ComponentModel.ICustomTypeDescriptor.GetProperties
    commentId: M:System.ComponentModel.ICustomTypeDescriptor.GetProperties
  - linkId: System.ComponentModel.PropertyDescriptorCollection
    commentId: T:System.ComponentModel.PropertyDescriptorCollection
  - linkId: System.ComponentModel.ICustomTypeDescriptor.GetEvents
    commentId: M:System.ComponentModel.ICustomTypeDescriptor.GetEvents
  - linkId: System.ComponentModel.ICustomTypeDescriptor.GetAttributes
    commentId: M:System.ComponentModel.ICustomTypeDescriptor.GetAttributes
  - linkId: System.ComponentModel.ICustomTypeDescriptor.GetDefaultProperty
    commentId: M:System.ComponentModel.ICustomTypeDescriptor.GetDefaultProperty
  implements:
  - System.ComponentModel.ICustomTypeDescriptor.GetProperties
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: System.ComponentModel.CustomTypeDescriptor.GetProperties(System.Attribute[])
  commentId: M:System.ComponentModel.CustomTypeDescriptor.GetProperties(System.Attribute[])
  id: GetProperties(System.Attribute[])
  parent: System.ComponentModel.CustomTypeDescriptor
  langs:
  - csharp
  - vb
  name: GetProperties(Attribute[])
  nameWithType: CustomTypeDescriptor.GetProperties(Attribute[])
  fullName: System.ComponentModel.CustomTypeDescriptor.GetProperties(System.Attribute[])
  type: Method
  source:
    remote:
      path: src/System.ComponentModel.TypeConverter/src/System/ComponentModel/CustomTypeDescriptor.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: GetProperties
    path: src/System.ComponentModel.TypeConverter/src/System/ComponentModel/CustomTypeDescriptor.cs
    startLine: 198
  assemblies:
  - System.ComponentModel.TypeConverter
  namespace: System.ComponentModel
  summary: "\n<p>Returns a filtered collection of property descriptors for the object represented by this type descriptor.</p>\n"
  syntax:
    content: public virtual PropertyDescriptorCollection GetProperties(Attribute[] attributes)
    content.vb: Public Overridable Function GetProperties(attributes As Attribute()) As PropertyDescriptorCollection
    parameters:
    - id: attributes
      type: System.Attribute[]
      description: "\n<p>An array of attributes to use as a filter. This can be <strong>null</strong>.</p>\n"
    return:
      type: System.ComponentModel.PropertyDescriptorCollection
      description: "\n<p>A <xref href=\"System.ComponentModel.PropertyDescriptorCollection\" data-throw-if-not-resolved=\"false\"></xref> containing the property descriptions for the object represented by this type descriptor. The default is <xref href=\"System.ComponentModel.PropertyDescriptorCollection.Empty\" data-throw-if-not-resolved=\"false\"></xref>.</p>\n"
  seealso:
  - linkId: System.ComponentModel.TypeDescriptor.GetProperties(System.Object,System.Attribute[])
    commentId: M:System.ComponentModel.TypeDescriptor.GetProperties(System.Object,System.Attribute[])
  - linkId: System.ComponentModel.ICustomTypeDescriptor.GetProperties
    commentId: M:System.ComponentModel.ICustomTypeDescriptor.GetProperties
  - linkId: System.ComponentModel.PropertyDescriptorCollection
    commentId: T:System.ComponentModel.PropertyDescriptorCollection
  - linkId: System.ComponentModel.ICustomTypeDescriptor.GetEvents
    commentId: M:System.ComponentModel.ICustomTypeDescriptor.GetEvents
  - linkId: System.ComponentModel.ICustomTypeDescriptor.GetAttributes
    commentId: M:System.ComponentModel.ICustomTypeDescriptor.GetAttributes
  - linkId: System.ComponentModel.ICustomTypeDescriptor.GetDefaultProperty
    commentId: M:System.ComponentModel.ICustomTypeDescriptor.GetDefaultProperty
  implements:
  - System.ComponentModel.ICustomTypeDescriptor.GetProperties(System.Attribute[])
  nameWithType.vb: CustomTypeDescriptor.GetProperties(Attribute())
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
  fullName.vb: System.ComponentModel.CustomTypeDescriptor.GetProperties(System.Attribute())
  name.vb: GetProperties(Attribute())
- uid: System.ComponentModel.CustomTypeDescriptor.GetPropertyOwner(System.ComponentModel.PropertyDescriptor)
  commentId: M:System.ComponentModel.CustomTypeDescriptor.GetPropertyOwner(System.ComponentModel.PropertyDescriptor)
  id: GetPropertyOwner(System.ComponentModel.PropertyDescriptor)
  parent: System.ComponentModel.CustomTypeDescriptor
  langs:
  - csharp
  - vb
  name: GetPropertyOwner(PropertyDescriptor)
  nameWithType: CustomTypeDescriptor.GetPropertyOwner(PropertyDescriptor)
  fullName: System.ComponentModel.CustomTypeDescriptor.GetPropertyOwner(System.ComponentModel.PropertyDescriptor)
  type: Method
  source:
    remote:
      path: src/System.ComponentModel.TypeConverter/src/System/ComponentModel/CustomTypeDescriptor.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: GetPropertyOwner
    path: src/System.ComponentModel.TypeConverter/src/System/ComponentModel/CustomTypeDescriptor.cs
    startLine: 215
  assemblies:
  - System.ComponentModel.TypeConverter
  namespace: System.ComponentModel
  summary: "\n<p>Returns an object that contains the property described by the specified property descriptor.</p>\n"
  syntax:
    content: public virtual object GetPropertyOwner(PropertyDescriptor pd)
    content.vb: Public Overridable Function GetPropertyOwner(pd As PropertyDescriptor) As Object
    parameters:
    - id: pd
      type: System.ComponentModel.PropertyDescriptor
      description: "\n<p>The property descriptor for which to retrieve the owning object.</p>\n"
    return:
      type: System.Object
      description: "\n<p>An <xref href=\"System.Object\" data-throw-if-not-resolved=\"false\"></xref> that owns the given property specified by the type descriptor. The default is <strong>null</strong>.</p>\n"
  seealso:
  - linkId: System.ComponentModel.PropertyDescriptor
    commentId: T:System.ComponentModel.PropertyDescriptor
  - linkId: System.ComponentModel.CustomTypeDescriptor.GetProperties
    commentId: M:System.ComponentModel.CustomTypeDescriptor.GetProperties
  implements:
  - System.ComponentModel.ICustomTypeDescriptor.GetPropertyOwner(System.ComponentModel.PropertyDescriptor)
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
references:
- uid: System.ComponentModel
  commentId: N:System.ComponentModel
  isExternal: false
  name: System.ComponentModel
  nameWithType: System.ComponentModel
  fullName: System.ComponentModel
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: false
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.ComponentModel.ICustomTypeDescriptor
  commentId: T:System.ComponentModel.ICustomTypeDescriptor
  parent: System.ComponentModel
  isExternal: false
  name: ICustomTypeDescriptor
  nameWithType: ICustomTypeDescriptor
  fullName: System.ComponentModel.ICustomTypeDescriptor
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: System.ComponentModel.ICustomTypeDescriptor.GetAttributes
  commentId: M:System.ComponentModel.ICustomTypeDescriptor.GetAttributes
  parent: System.ComponentModel.ICustomTypeDescriptor
  isExternal: false
  name: GetAttributes()
  nameWithType: ICustomTypeDescriptor.GetAttributes()
  fullName: System.ComponentModel.ICustomTypeDescriptor.GetAttributes()
  spec.csharp:
  - uid: System.ComponentModel.ICustomTypeDescriptor.GetAttributes
    name: GetAttributes
    nameWithType: ICustomTypeDescriptor.GetAttributes
    fullName: System.ComponentModel.ICustomTypeDescriptor.GetAttributes
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.ComponentModel.ICustomTypeDescriptor.GetAttributes
    name: GetAttributes
    nameWithType: ICustomTypeDescriptor.GetAttributes
    fullName: System.ComponentModel.ICustomTypeDescriptor.GetAttributes
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.ComponentModel.AttributeCollection
  commentId: T:System.ComponentModel.AttributeCollection
  parent: System.ComponentModel
  isExternal: false
  name: AttributeCollection
  nameWithType: AttributeCollection
  fullName: System.ComponentModel.AttributeCollection
- uid: System.ComponentModel.ICustomTypeDescriptor.GetClassName
  commentId: M:System.ComponentModel.ICustomTypeDescriptor.GetClassName
  parent: System.ComponentModel.ICustomTypeDescriptor
  isExternal: false
  name: GetClassName()
  nameWithType: ICustomTypeDescriptor.GetClassName()
  fullName: System.ComponentModel.ICustomTypeDescriptor.GetClassName()
  spec.csharp:
  - uid: System.ComponentModel.ICustomTypeDescriptor.GetClassName
    name: GetClassName
    nameWithType: ICustomTypeDescriptor.GetClassName
    fullName: System.ComponentModel.ICustomTypeDescriptor.GetClassName
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.ComponentModel.ICustomTypeDescriptor.GetClassName
    name: GetClassName
    nameWithType: ICustomTypeDescriptor.GetClassName
    fullName: System.ComponentModel.ICustomTypeDescriptor.GetClassName
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: false
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.ComponentModel.ICustomTypeDescriptor.GetComponentName
  commentId: M:System.ComponentModel.ICustomTypeDescriptor.GetComponentName
  parent: System.ComponentModel.ICustomTypeDescriptor
  isExternal: false
  name: GetComponentName()
  nameWithType: ICustomTypeDescriptor.GetComponentName()
  fullName: System.ComponentModel.ICustomTypeDescriptor.GetComponentName()
  spec.csharp:
  - uid: System.ComponentModel.ICustomTypeDescriptor.GetComponentName
    name: GetComponentName
    nameWithType: ICustomTypeDescriptor.GetComponentName
    fullName: System.ComponentModel.ICustomTypeDescriptor.GetComponentName
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.ComponentModel.ICustomTypeDescriptor.GetComponentName
    name: GetComponentName
    nameWithType: ICustomTypeDescriptor.GetComponentName
    fullName: System.ComponentModel.ICustomTypeDescriptor.GetComponentName
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.ComponentModel.ICustomTypeDescriptor.GetConverter
  commentId: M:System.ComponentModel.ICustomTypeDescriptor.GetConverter
  parent: System.ComponentModel.ICustomTypeDescriptor
  isExternal: false
  name: GetConverter()
  nameWithType: ICustomTypeDescriptor.GetConverter()
  fullName: System.ComponentModel.ICustomTypeDescriptor.GetConverter()
  spec.csharp:
  - uid: System.ComponentModel.ICustomTypeDescriptor.GetConverter
    name: GetConverter
    nameWithType: ICustomTypeDescriptor.GetConverter
    fullName: System.ComponentModel.ICustomTypeDescriptor.GetConverter
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.ComponentModel.ICustomTypeDescriptor.GetConverter
    name: GetConverter
    nameWithType: ICustomTypeDescriptor.GetConverter
    fullName: System.ComponentModel.ICustomTypeDescriptor.GetConverter
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.ComponentModel.TypeConverter
  commentId: T:System.ComponentModel.TypeConverter
  parent: System.ComponentModel
  isExternal: false
  name: TypeConverter
  nameWithType: TypeConverter
  fullName: System.ComponentModel.TypeConverter
- uid: System.ComponentModel.ICustomTypeDescriptor.GetDefaultEvent
  commentId: M:System.ComponentModel.ICustomTypeDescriptor.GetDefaultEvent
  parent: System.ComponentModel.ICustomTypeDescriptor
  isExternal: false
  name: GetDefaultEvent()
  nameWithType: ICustomTypeDescriptor.GetDefaultEvent()
  fullName: System.ComponentModel.ICustomTypeDescriptor.GetDefaultEvent()
  spec.csharp:
  - uid: System.ComponentModel.ICustomTypeDescriptor.GetDefaultEvent
    name: GetDefaultEvent
    nameWithType: ICustomTypeDescriptor.GetDefaultEvent
    fullName: System.ComponentModel.ICustomTypeDescriptor.GetDefaultEvent
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.ComponentModel.ICustomTypeDescriptor.GetDefaultEvent
    name: GetDefaultEvent
    nameWithType: ICustomTypeDescriptor.GetDefaultEvent
    fullName: System.ComponentModel.ICustomTypeDescriptor.GetDefaultEvent
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.ComponentModel.EventDescriptor
  commentId: T:System.ComponentModel.EventDescriptor
  parent: System.ComponentModel
  isExternal: false
  name: EventDescriptor
  nameWithType: EventDescriptor
  fullName: System.ComponentModel.EventDescriptor
- uid: System.ComponentModel.ICustomTypeDescriptor.GetDefaultProperty
  commentId: M:System.ComponentModel.ICustomTypeDescriptor.GetDefaultProperty
  parent: System.ComponentModel.ICustomTypeDescriptor
  isExternal: false
  name: GetDefaultProperty()
  nameWithType: ICustomTypeDescriptor.GetDefaultProperty()
  fullName: System.ComponentModel.ICustomTypeDescriptor.GetDefaultProperty()
  spec.csharp:
  - uid: System.ComponentModel.ICustomTypeDescriptor.GetDefaultProperty
    name: GetDefaultProperty
    nameWithType: ICustomTypeDescriptor.GetDefaultProperty
    fullName: System.ComponentModel.ICustomTypeDescriptor.GetDefaultProperty
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.ComponentModel.ICustomTypeDescriptor.GetDefaultProperty
    name: GetDefaultProperty
    nameWithType: ICustomTypeDescriptor.GetDefaultProperty
    fullName: System.ComponentModel.ICustomTypeDescriptor.GetDefaultProperty
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.ComponentModel.PropertyDescriptor
  commentId: T:System.ComponentModel.PropertyDescriptor
  parent: System.ComponentModel
  isExternal: false
  name: PropertyDescriptor
  nameWithType: PropertyDescriptor
  fullName: System.ComponentModel.PropertyDescriptor
- uid: System.ComponentModel.ICustomTypeDescriptor.GetEditor(System.Type)
  commentId: M:System.ComponentModel.ICustomTypeDescriptor.GetEditor(System.Type)
  parent: System.ComponentModel.ICustomTypeDescriptor
  isExternal: true
  name: GetEditor(Type)
  nameWithType: ICustomTypeDescriptor.GetEditor(Type)
  fullName: System.ComponentModel.ICustomTypeDescriptor.GetEditor(System.Type)
  spec.csharp:
  - uid: System.ComponentModel.ICustomTypeDescriptor.GetEditor(System.Type)
    name: GetEditor
    nameWithType: ICustomTypeDescriptor.GetEditor
    fullName: System.ComponentModel.ICustomTypeDescriptor.GetEditor
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Type
    name: Type
    nameWithType: Type
    fullName: System.Type
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.ComponentModel.ICustomTypeDescriptor.GetEditor(System.Type)
    name: GetEditor
    nameWithType: ICustomTypeDescriptor.GetEditor
    fullName: System.ComponentModel.ICustomTypeDescriptor.GetEditor
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Type
    name: Type
    nameWithType: Type
    fullName: System.Type
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Type
  commentId: T:System.Type
  parent: System
  isExternal: false
  name: Type
  nameWithType: Type
  fullName: System.Type
- uid: System.ComponentModel.ICustomTypeDescriptor.GetEvents
  commentId: M:System.ComponentModel.ICustomTypeDescriptor.GetEvents
  parent: System.ComponentModel.ICustomTypeDescriptor
  isExternal: false
  name: GetEvents()
  nameWithType: ICustomTypeDescriptor.GetEvents()
  fullName: System.ComponentModel.ICustomTypeDescriptor.GetEvents()
  spec.csharp:
  - uid: System.ComponentModel.ICustomTypeDescriptor.GetEvents
    name: GetEvents
    nameWithType: ICustomTypeDescriptor.GetEvents
    fullName: System.ComponentModel.ICustomTypeDescriptor.GetEvents
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.ComponentModel.ICustomTypeDescriptor.GetEvents
    name: GetEvents
    nameWithType: ICustomTypeDescriptor.GetEvents
    fullName: System.ComponentModel.ICustomTypeDescriptor.GetEvents
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.ComponentModel.EventDescriptorCollection
  commentId: T:System.ComponentModel.EventDescriptorCollection
  parent: System.ComponentModel
  isExternal: false
  name: EventDescriptorCollection
  nameWithType: EventDescriptorCollection
  fullName: System.ComponentModel.EventDescriptorCollection
- uid: System.ComponentModel.ICustomTypeDescriptor.GetEvents(System.Attribute[])
  commentId: M:System.ComponentModel.ICustomTypeDescriptor.GetEvents(System.Attribute[])
  parent: System.ComponentModel.ICustomTypeDescriptor
  isExternal: true
  name: GetEvents(Attribute[])
  nameWithType: ICustomTypeDescriptor.GetEvents(Attribute[])
  fullName: System.ComponentModel.ICustomTypeDescriptor.GetEvents(System.Attribute[])
  nameWithType.vb: ICustomTypeDescriptor.GetEvents(Attribute())
  fullname.vb: System.ComponentModel.ICustomTypeDescriptor.GetEvents(System.Attribute())
  name.vb: GetEvents(Attribute())
  spec.csharp:
  - uid: System.ComponentModel.ICustomTypeDescriptor.GetEvents(System.Attribute[])
    name: GetEvents
    nameWithType: ICustomTypeDescriptor.GetEvents
    fullName: System.ComponentModel.ICustomTypeDescriptor.GetEvents
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Attribute
    name: Attribute
    nameWithType: Attribute
    fullName: System.Attribute
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.ComponentModel.ICustomTypeDescriptor.GetEvents(System.Attribute[])
    name: GetEvents
    nameWithType: ICustomTypeDescriptor.GetEvents
    fullName: System.ComponentModel.ICustomTypeDescriptor.GetEvents
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Attribute
    name: Attribute
    nameWithType: Attribute
    fullName: System.Attribute
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Attribute[]
  name: Attribute[]
  nameWithType: Attribute[]
  fullName: System.Attribute[]
  nameWithType.vb: Attribute()
  fullname.vb: System.Attribute()
  name.vb: Attribute()
  spec.csharp:
  - uid: System.Attribute
    name: Attribute
    nameWithType: Attribute
    fullName: System.Attribute
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  spec.vb:
  - uid: System.Attribute
    name: Attribute
    nameWithType: Attribute
    fullName: System.Attribute
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
- uid: System.ComponentModel.ICustomTypeDescriptor.GetProperties
  commentId: M:System.ComponentModel.ICustomTypeDescriptor.GetProperties
  parent: System.ComponentModel.ICustomTypeDescriptor
  isExternal: false
  name: GetProperties()
  nameWithType: ICustomTypeDescriptor.GetProperties()
  fullName: System.ComponentModel.ICustomTypeDescriptor.GetProperties()
  spec.csharp:
  - uid: System.ComponentModel.ICustomTypeDescriptor.GetProperties
    name: GetProperties
    nameWithType: ICustomTypeDescriptor.GetProperties
    fullName: System.ComponentModel.ICustomTypeDescriptor.GetProperties
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.ComponentModel.ICustomTypeDescriptor.GetProperties
    name: GetProperties
    nameWithType: ICustomTypeDescriptor.GetProperties
    fullName: System.ComponentModel.ICustomTypeDescriptor.GetProperties
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.ComponentModel.PropertyDescriptorCollection
  commentId: T:System.ComponentModel.PropertyDescriptorCollection
  parent: System.ComponentModel
  isExternal: false
  name: PropertyDescriptorCollection
  nameWithType: PropertyDescriptorCollection
  fullName: System.ComponentModel.PropertyDescriptorCollection
- uid: System.ComponentModel.ICustomTypeDescriptor.GetProperties(System.Attribute[])
  commentId: M:System.ComponentModel.ICustomTypeDescriptor.GetProperties(System.Attribute[])
  parent: System.ComponentModel.ICustomTypeDescriptor
  isExternal: true
  name: GetProperties(Attribute[])
  nameWithType: ICustomTypeDescriptor.GetProperties(Attribute[])
  fullName: System.ComponentModel.ICustomTypeDescriptor.GetProperties(System.Attribute[])
  nameWithType.vb: ICustomTypeDescriptor.GetProperties(Attribute())
  fullname.vb: System.ComponentModel.ICustomTypeDescriptor.GetProperties(System.Attribute())
  name.vb: GetProperties(Attribute())
  spec.csharp:
  - uid: System.ComponentModel.ICustomTypeDescriptor.GetProperties(System.Attribute[])
    name: GetProperties
    nameWithType: ICustomTypeDescriptor.GetProperties
    fullName: System.ComponentModel.ICustomTypeDescriptor.GetProperties
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Attribute
    name: Attribute
    nameWithType: Attribute
    fullName: System.Attribute
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.ComponentModel.ICustomTypeDescriptor.GetProperties(System.Attribute[])
    name: GetProperties
    nameWithType: ICustomTypeDescriptor.GetProperties
    fullName: System.ComponentModel.ICustomTypeDescriptor.GetProperties
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Attribute
    name: Attribute
    nameWithType: Attribute
    fullName: System.Attribute
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: )
    nameWithType: )
    fullName: )
- uid: System.ComponentModel.ICustomTypeDescriptor.GetPropertyOwner(System.ComponentModel.PropertyDescriptor)
  commentId: M:System.ComponentModel.ICustomTypeDescriptor.GetPropertyOwner(System.ComponentModel.PropertyDescriptor)
  parent: System.ComponentModel.ICustomTypeDescriptor
  isExternal: false
  name: GetPropertyOwner(PropertyDescriptor)
  nameWithType: ICustomTypeDescriptor.GetPropertyOwner(PropertyDescriptor)
  fullName: System.ComponentModel.ICustomTypeDescriptor.GetPropertyOwner(System.ComponentModel.PropertyDescriptor)
  spec.csharp:
  - uid: System.ComponentModel.ICustomTypeDescriptor.GetPropertyOwner(System.ComponentModel.PropertyDescriptor)
    name: GetPropertyOwner
    nameWithType: ICustomTypeDescriptor.GetPropertyOwner
    fullName: System.ComponentModel.ICustomTypeDescriptor.GetPropertyOwner
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.ComponentModel.PropertyDescriptor
    name: PropertyDescriptor
    nameWithType: PropertyDescriptor
    fullName: System.ComponentModel.PropertyDescriptor
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.ComponentModel.ICustomTypeDescriptor.GetPropertyOwner(System.ComponentModel.PropertyDescriptor)
    name: GetPropertyOwner
    nameWithType: ICustomTypeDescriptor.GetPropertyOwner
    fullName: System.ComponentModel.ICustomTypeDescriptor.GetPropertyOwner
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.ComponentModel.PropertyDescriptor
    name: PropertyDescriptor
    nameWithType: PropertyDescriptor
    fullName: System.ComponentModel.PropertyDescriptor
  - name: )
    nameWithType: )
    fullName: )
