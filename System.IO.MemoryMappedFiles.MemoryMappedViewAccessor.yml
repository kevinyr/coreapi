### YamlMime:ManagedReference
items:
- uid: System.IO.MemoryMappedFiles.MemoryMappedViewAccessor
  commentId: T:System.IO.MemoryMappedFiles.MemoryMappedViewAccessor
  id: MemoryMappedViewAccessor
  parent: System.IO.MemoryMappedFiles
  children:
  - System.IO.MemoryMappedFiles.MemoryMappedViewAccessor.Dispose(System.Boolean)
  - System.IO.MemoryMappedFiles.MemoryMappedViewAccessor.Flush
  - System.IO.MemoryMappedFiles.MemoryMappedViewAccessor.PointerOffset
  - System.IO.MemoryMappedFiles.MemoryMappedViewAccessor.SafeMemoryMappedViewHandle
  langs:
  - csharp
  - vb
  name: MemoryMappedViewAccessor
  nameWithType: MemoryMappedViewAccessor
  fullName: System.IO.MemoryMappedFiles.MemoryMappedViewAccessor
  type: Class
  source:
    remote:
      path: src/System.IO.MemoryMappedFiles/ref/System.IO.MemoryMappedFiles.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: MemoryMappedViewAccessor
    path: src/System.IO.MemoryMappedFiles/ref/System.IO.MemoryMappedFiles.cs
    startLine: 83
  assemblies:
  - System.IO.MemoryMappedFiles
  namespace: System.IO.MemoryMappedFiles
  summary: "\n<p>Represents a randomly accessed view of a memory-mapped file.</p>\n"
  syntax:
    content: 'public sealed class MemoryMappedViewAccessor : UnmanagedMemoryAccessor, IDisposable'
    content.vb: >-
      Public NotInheritable Class MemoryMappedViewAccessor
          Inherits UnmanagedMemoryAccessor
          Implements IDisposable
  inheritance:
  - System.Object
  - System.IO.UnmanagedMemoryAccessor
  implements:
  - System.IDisposable
  inheritedMembers:
  - System.IO.UnmanagedMemoryAccessor.Initialize(System.Runtime.InteropServices.SafeBuffer,System.Int64,System.Int64,System.IO.FileAccess)
  - System.IO.UnmanagedMemoryAccessor.Dispose
  - System.IO.UnmanagedMemoryAccessor.ReadBoolean(System.Int64)
  - System.IO.UnmanagedMemoryAccessor.ReadByte(System.Int64)
  - System.IO.UnmanagedMemoryAccessor.ReadChar(System.Int64)
  - System.IO.UnmanagedMemoryAccessor.ReadInt16(System.Int64)
  - System.IO.UnmanagedMemoryAccessor.ReadInt32(System.Int64)
  - System.IO.UnmanagedMemoryAccessor.ReadInt64(System.Int64)
  - System.IO.UnmanagedMemoryAccessor.ReadDecimal(System.Int64)
  - System.IO.UnmanagedMemoryAccessor.ReadSingle(System.Int64)
  - System.IO.UnmanagedMemoryAccessor.ReadDouble(System.Int64)
  - System.IO.UnmanagedMemoryAccessor.ReadSByte(System.Int64)
  - System.IO.UnmanagedMemoryAccessor.ReadUInt16(System.Int64)
  - System.IO.UnmanagedMemoryAccessor.ReadUInt32(System.Int64)
  - System.IO.UnmanagedMemoryAccessor.ReadUInt64(System.Int64)
  - System.IO.UnmanagedMemoryAccessor.Read``1(System.Int64,{T}@)
  - System.IO.UnmanagedMemoryAccessor.ReadArray``1(System.Int64,{T}[],System.Int32,System.Int32)
  - System.IO.UnmanagedMemoryAccessor.Write(System.Int64,System.Boolean)
  - System.IO.UnmanagedMemoryAccessor.Write(System.Int64,System.Byte)
  - System.IO.UnmanagedMemoryAccessor.Write(System.Int64,System.Char)
  - System.IO.UnmanagedMemoryAccessor.Write(System.Int64,System.Int16)
  - System.IO.UnmanagedMemoryAccessor.Write(System.Int64,System.Int32)
  - System.IO.UnmanagedMemoryAccessor.Write(System.Int64,System.Int64)
  - System.IO.UnmanagedMemoryAccessor.Write(System.Int64,System.Decimal)
  - System.IO.UnmanagedMemoryAccessor.Write(System.Int64,System.Single)
  - System.IO.UnmanagedMemoryAccessor.Write(System.Int64,System.Double)
  - System.IO.UnmanagedMemoryAccessor.Write(System.Int64,System.SByte)
  - System.IO.UnmanagedMemoryAccessor.Write(System.Int64,System.UInt16)
  - System.IO.UnmanagedMemoryAccessor.Write(System.Int64,System.UInt32)
  - System.IO.UnmanagedMemoryAccessor.Write(System.Int64,System.UInt64)
  - System.IO.UnmanagedMemoryAccessor.Write``1(System.Int64,{T}@)
  - System.IO.UnmanagedMemoryAccessor.WriteArray``1(System.Int64,{T}[],System.Int32,System.Int32)
  - System.IO.UnmanagedMemoryAccessor.Capacity
  - System.IO.UnmanagedMemoryAccessor.CanRead
  - System.IO.UnmanagedMemoryAccessor.CanWrite
  - System.IO.UnmanagedMemoryAccessor.IsOpen
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  modifiers.csharp:
  - public
  - sealed
  - class
  modifiers.vb:
  - Public
  - NotInheritable
  - Class
- uid: System.IO.MemoryMappedFiles.MemoryMappedViewAccessor.PointerOffset
  commentId: P:System.IO.MemoryMappedFiles.MemoryMappedViewAccessor.PointerOffset
  id: PointerOffset
  parent: System.IO.MemoryMappedFiles.MemoryMappedViewAccessor
  langs:
  - csharp
  - vb
  name: PointerOffset
  nameWithType: MemoryMappedViewAccessor.PointerOffset
  fullName: System.IO.MemoryMappedFiles.MemoryMappedViewAccessor.PointerOffset
  type: Property
  source:
    remote:
      path: src/System.IO.MemoryMappedFiles/ref/System.IO.MemoryMappedFiles.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: PointerOffset
    path: src/System.IO.MemoryMappedFiles/ref/System.IO.MemoryMappedFiles.cs
    startLine: 86
  assemblies:
  - System.IO.MemoryMappedFiles
  namespace: System.IO.MemoryMappedFiles
  summary: "\n<p>[Supported in the .NET Framework 4.5.1 and later versions] </p>\n<p>Gets the number of bytes by which the starting position of this view is offset from the beginning of the memory-mapped file. </p>\n"
  syntax:
    content: public long PointerOffset { get; }
    content.vb: Public ReadOnly Property PointerOffset As Long
    parameters: []
    return:
      type: System.Int64
      description: "\n<p>The number of bytes between the starting position of this view and the beginning of the memory-mapped file. </p>\n"
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "\n<p>The object from which this instance was created is <strong>null</strong>. </p>\n"
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: System.IO.MemoryMappedFiles.MemoryMappedViewAccessor.SafeMemoryMappedViewHandle
  commentId: P:System.IO.MemoryMappedFiles.MemoryMappedViewAccessor.SafeMemoryMappedViewHandle
  id: SafeMemoryMappedViewHandle
  parent: System.IO.MemoryMappedFiles.MemoryMappedViewAccessor
  langs:
  - csharp
  - vb
  name: SafeMemoryMappedViewHandle
  nameWithType: MemoryMappedViewAccessor.SafeMemoryMappedViewHandle
  fullName: System.IO.MemoryMappedFiles.MemoryMappedViewAccessor.SafeMemoryMappedViewHandle
  type: Property
  source:
    remote:
      path: src/System.IO.MemoryMappedFiles/ref/System.IO.MemoryMappedFiles.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: SafeMemoryMappedViewHandle
    path: src/System.IO.MemoryMappedFiles/ref/System.IO.MemoryMappedFiles.cs
    startLine: 87
  assemblies:
  - System.IO.MemoryMappedFiles
  namespace: System.IO.MemoryMappedFiles
  summary: "\n<p>Gets a handle to the view of a memory-mapped file.</p>\n"
  syntax:
    content: public SafeMemoryMappedViewHandle SafeMemoryMappedViewHandle { get; }
    content.vb: Public ReadOnly Property SafeMemoryMappedViewHandle As SafeMemoryMappedViewHandle
    parameters: []
    return:
      type: Microsoft.Win32.SafeHandles.SafeMemoryMappedViewHandle
      description: "\n<p>A wrapper for the operating system's handle to the view of the file. </p>\n"
  see:
  - linkId: System.Security.Permissions.SecurityPermission
    commentId: T:System.Security.Permissions.SecurityPermission
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: System.IO.MemoryMappedFiles.MemoryMappedViewAccessor.Dispose(System.Boolean)
  commentId: M:System.IO.MemoryMappedFiles.MemoryMappedViewAccessor.Dispose(System.Boolean)
  id: Dispose(System.Boolean)
  parent: System.IO.MemoryMappedFiles.MemoryMappedViewAccessor
  langs:
  - csharp
  - vb
  name: Dispose(Boolean)
  nameWithType: MemoryMappedViewAccessor.Dispose(Boolean)
  fullName: System.IO.MemoryMappedFiles.MemoryMappedViewAccessor.Dispose(System.Boolean)
  type: Method
  source:
    remote:
      path: src/System.IO.MemoryMappedFiles/ref/System.IO.MemoryMappedFiles.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: Dispose
    path: src/System.IO.MemoryMappedFiles/ref/System.IO.MemoryMappedFiles.cs
    startLine: 88
  assemblies:
  - System.IO.MemoryMappedFiles
  namespace: System.IO.MemoryMappedFiles
  syntax:
    content: protected override void Dispose(bool disposing)
    content.vb: Protected Overrides Sub Dispose(disposing As Boolean)
    parameters:
    - id: disposing
      type: System.Boolean
  overridden: System.IO.UnmanagedMemoryAccessor.Dispose(System.Boolean)
  modifiers.csharp:
  - protected
  - override
  modifiers.vb:
  - Protected
  - Overrides
- uid: System.IO.MemoryMappedFiles.MemoryMappedViewAccessor.Flush
  commentId: M:System.IO.MemoryMappedFiles.MemoryMappedViewAccessor.Flush
  id: Flush
  parent: System.IO.MemoryMappedFiles.MemoryMappedViewAccessor
  langs:
  - csharp
  - vb
  name: Flush()
  nameWithType: MemoryMappedViewAccessor.Flush()
  fullName: System.IO.MemoryMappedFiles.MemoryMappedViewAccessor.Flush()
  type: Method
  source:
    remote:
      path: src/System.IO.MemoryMappedFiles/ref/System.IO.MemoryMappedFiles.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: Flush
    path: src/System.IO.MemoryMappedFiles/ref/System.IO.MemoryMappedFiles.cs
    startLine: 89
  assemblies:
  - System.IO.MemoryMappedFiles
  namespace: System.IO.MemoryMappedFiles
  summary: "\n<p>Clears all buffers for this view and causes any buffered data to be written to the underlying file.</p>\n"
  syntax:
    content: public void Flush()
    content.vb: Public Sub Flush
  exceptions:
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: "\n<p>Methods were called after the accessor was closed.</p>\n"
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
references:
- uid: System.IO.MemoryMappedFiles
  commentId: N:System.IO.MemoryMappedFiles
  isExternal: false
  name: System.IO.MemoryMappedFiles
  nameWithType: System.IO.MemoryMappedFiles
  fullName: System.IO.MemoryMappedFiles
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: false
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.IO.UnmanagedMemoryAccessor
  commentId: T:System.IO.UnmanagedMemoryAccessor
  parent: System.IO
  isExternal: false
  name: UnmanagedMemoryAccessor
  nameWithType: UnmanagedMemoryAccessor
  fullName: System.IO.UnmanagedMemoryAccessor
- uid: System.IDisposable
  commentId: T:System.IDisposable
  parent: System
  isExternal: false
  name: IDisposable
  nameWithType: IDisposable
  fullName: System.IDisposable
- uid: System.IO.UnmanagedMemoryAccessor.Initialize(System.Runtime.InteropServices.SafeBuffer,System.Int64,System.Int64,System.IO.FileAccess)
  commentId: M:System.IO.UnmanagedMemoryAccessor.Initialize(System.Runtime.InteropServices.SafeBuffer,System.Int64,System.Int64,System.IO.FileAccess)
  parent: System.IO.UnmanagedMemoryAccessor
  isExternal: true
  name: Initialize(SafeBuffer, Int64, Int64, FileAccess)
  nameWithType: UnmanagedMemoryAccessor.Initialize(SafeBuffer, Int64, Int64, FileAccess)
  fullName: System.IO.UnmanagedMemoryAccessor.Initialize(System.Runtime.InteropServices.SafeBuffer, System.Int64, System.Int64, System.IO.FileAccess)
  spec.csharp:
  - uid: System.IO.UnmanagedMemoryAccessor.Initialize(System.Runtime.InteropServices.SafeBuffer,System.Int64,System.Int64,System.IO.FileAccess)
    name: Initialize
    nameWithType: UnmanagedMemoryAccessor.Initialize
    fullName: System.IO.UnmanagedMemoryAccessor.Initialize
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Runtime.InteropServices.SafeBuffer
    name: SafeBuffer
    nameWithType: SafeBuffer
    fullName: System.Runtime.InteropServices.SafeBuffer
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int64
    name: Int64
    nameWithType: Int64
    fullName: System.Int64
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int64
    name: Int64
    nameWithType: Int64
    fullName: System.Int64
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.IO.FileAccess
    name: FileAccess
    nameWithType: FileAccess
    fullName: System.IO.FileAccess
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.IO.UnmanagedMemoryAccessor.Initialize(System.Runtime.InteropServices.SafeBuffer,System.Int64,System.Int64,System.IO.FileAccess)
    name: Initialize
    nameWithType: UnmanagedMemoryAccessor.Initialize
    fullName: System.IO.UnmanagedMemoryAccessor.Initialize
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Runtime.InteropServices.SafeBuffer
    name: SafeBuffer
    nameWithType: SafeBuffer
    fullName: System.Runtime.InteropServices.SafeBuffer
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int64
    name: Int64
    nameWithType: Int64
    fullName: System.Int64
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int64
    name: Int64
    nameWithType: Int64
    fullName: System.Int64
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.IO.FileAccess
    name: FileAccess
    nameWithType: FileAccess
    fullName: System.IO.FileAccess
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.IO.UnmanagedMemoryAccessor.Dispose
  commentId: M:System.IO.UnmanagedMemoryAccessor.Dispose
  parent: System.IO.UnmanagedMemoryAccessor
  isExternal: true
  name: Dispose()
  nameWithType: UnmanagedMemoryAccessor.Dispose()
  fullName: System.IO.UnmanagedMemoryAccessor.Dispose()
  spec.csharp:
  - uid: System.IO.UnmanagedMemoryAccessor.Dispose
    name: Dispose
    nameWithType: UnmanagedMemoryAccessor.Dispose
    fullName: System.IO.UnmanagedMemoryAccessor.Dispose
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.IO.UnmanagedMemoryAccessor.Dispose
    name: Dispose
    nameWithType: UnmanagedMemoryAccessor.Dispose
    fullName: System.IO.UnmanagedMemoryAccessor.Dispose
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.IO.UnmanagedMemoryAccessor.ReadBoolean(System.Int64)
  commentId: M:System.IO.UnmanagedMemoryAccessor.ReadBoolean(System.Int64)
  parent: System.IO.UnmanagedMemoryAccessor
  isExternal: true
  name: ReadBoolean(Int64)
  nameWithType: UnmanagedMemoryAccessor.ReadBoolean(Int64)
  fullName: System.IO.UnmanagedMemoryAccessor.ReadBoolean(System.Int64)
  spec.csharp:
  - uid: System.IO.UnmanagedMemoryAccessor.ReadBoolean(System.Int64)
    name: ReadBoolean
    nameWithType: UnmanagedMemoryAccessor.ReadBoolean
    fullName: System.IO.UnmanagedMemoryAccessor.ReadBoolean
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int64
    name: Int64
    nameWithType: Int64
    fullName: System.Int64
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.IO.UnmanagedMemoryAccessor.ReadBoolean(System.Int64)
    name: ReadBoolean
    nameWithType: UnmanagedMemoryAccessor.ReadBoolean
    fullName: System.IO.UnmanagedMemoryAccessor.ReadBoolean
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int64
    name: Int64
    nameWithType: Int64
    fullName: System.Int64
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.IO.UnmanagedMemoryAccessor.ReadByte(System.Int64)
  commentId: M:System.IO.UnmanagedMemoryAccessor.ReadByte(System.Int64)
  parent: System.IO.UnmanagedMemoryAccessor
  isExternal: true
  name: ReadByte(Int64)
  nameWithType: UnmanagedMemoryAccessor.ReadByte(Int64)
  fullName: System.IO.UnmanagedMemoryAccessor.ReadByte(System.Int64)
  spec.csharp:
  - uid: System.IO.UnmanagedMemoryAccessor.ReadByte(System.Int64)
    name: ReadByte
    nameWithType: UnmanagedMemoryAccessor.ReadByte
    fullName: System.IO.UnmanagedMemoryAccessor.ReadByte
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int64
    name: Int64
    nameWithType: Int64
    fullName: System.Int64
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.IO.UnmanagedMemoryAccessor.ReadByte(System.Int64)
    name: ReadByte
    nameWithType: UnmanagedMemoryAccessor.ReadByte
    fullName: System.IO.UnmanagedMemoryAccessor.ReadByte
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int64
    name: Int64
    nameWithType: Int64
    fullName: System.Int64
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.IO.UnmanagedMemoryAccessor.ReadChar(System.Int64)
  commentId: M:System.IO.UnmanagedMemoryAccessor.ReadChar(System.Int64)
  parent: System.IO.UnmanagedMemoryAccessor
  isExternal: true
  name: ReadChar(Int64)
  nameWithType: UnmanagedMemoryAccessor.ReadChar(Int64)
  fullName: System.IO.UnmanagedMemoryAccessor.ReadChar(System.Int64)
  spec.csharp:
  - uid: System.IO.UnmanagedMemoryAccessor.ReadChar(System.Int64)
    name: ReadChar
    nameWithType: UnmanagedMemoryAccessor.ReadChar
    fullName: System.IO.UnmanagedMemoryAccessor.ReadChar
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int64
    name: Int64
    nameWithType: Int64
    fullName: System.Int64
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.IO.UnmanagedMemoryAccessor.ReadChar(System.Int64)
    name: ReadChar
    nameWithType: UnmanagedMemoryAccessor.ReadChar
    fullName: System.IO.UnmanagedMemoryAccessor.ReadChar
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int64
    name: Int64
    nameWithType: Int64
    fullName: System.Int64
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.IO.UnmanagedMemoryAccessor.ReadInt16(System.Int64)
  commentId: M:System.IO.UnmanagedMemoryAccessor.ReadInt16(System.Int64)
  parent: System.IO.UnmanagedMemoryAccessor
  isExternal: true
  name: ReadInt16(Int64)
  nameWithType: UnmanagedMemoryAccessor.ReadInt16(Int64)
  fullName: System.IO.UnmanagedMemoryAccessor.ReadInt16(System.Int64)
  spec.csharp:
  - uid: System.IO.UnmanagedMemoryAccessor.ReadInt16(System.Int64)
    name: ReadInt16
    nameWithType: UnmanagedMemoryAccessor.ReadInt16
    fullName: System.IO.UnmanagedMemoryAccessor.ReadInt16
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int64
    name: Int64
    nameWithType: Int64
    fullName: System.Int64
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.IO.UnmanagedMemoryAccessor.ReadInt16(System.Int64)
    name: ReadInt16
    nameWithType: UnmanagedMemoryAccessor.ReadInt16
    fullName: System.IO.UnmanagedMemoryAccessor.ReadInt16
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int64
    name: Int64
    nameWithType: Int64
    fullName: System.Int64
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.IO.UnmanagedMemoryAccessor.ReadInt32(System.Int64)
  commentId: M:System.IO.UnmanagedMemoryAccessor.ReadInt32(System.Int64)
  parent: System.IO.UnmanagedMemoryAccessor
  isExternal: true
  name: ReadInt32(Int64)
  nameWithType: UnmanagedMemoryAccessor.ReadInt32(Int64)
  fullName: System.IO.UnmanagedMemoryAccessor.ReadInt32(System.Int64)
  spec.csharp:
  - uid: System.IO.UnmanagedMemoryAccessor.ReadInt32(System.Int64)
    name: ReadInt32
    nameWithType: UnmanagedMemoryAccessor.ReadInt32
    fullName: System.IO.UnmanagedMemoryAccessor.ReadInt32
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int64
    name: Int64
    nameWithType: Int64
    fullName: System.Int64
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.IO.UnmanagedMemoryAccessor.ReadInt32(System.Int64)
    name: ReadInt32
    nameWithType: UnmanagedMemoryAccessor.ReadInt32
    fullName: System.IO.UnmanagedMemoryAccessor.ReadInt32
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int64
    name: Int64
    nameWithType: Int64
    fullName: System.Int64
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.IO.UnmanagedMemoryAccessor.ReadInt64(System.Int64)
  commentId: M:System.IO.UnmanagedMemoryAccessor.ReadInt64(System.Int64)
  parent: System.IO.UnmanagedMemoryAccessor
  isExternal: true
  name: ReadInt64(Int64)
  nameWithType: UnmanagedMemoryAccessor.ReadInt64(Int64)
  fullName: System.IO.UnmanagedMemoryAccessor.ReadInt64(System.Int64)
  spec.csharp:
  - uid: System.IO.UnmanagedMemoryAccessor.ReadInt64(System.Int64)
    name: ReadInt64
    nameWithType: UnmanagedMemoryAccessor.ReadInt64
    fullName: System.IO.UnmanagedMemoryAccessor.ReadInt64
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int64
    name: Int64
    nameWithType: Int64
    fullName: System.Int64
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.IO.UnmanagedMemoryAccessor.ReadInt64(System.Int64)
    name: ReadInt64
    nameWithType: UnmanagedMemoryAccessor.ReadInt64
    fullName: System.IO.UnmanagedMemoryAccessor.ReadInt64
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int64
    name: Int64
    nameWithType: Int64
    fullName: System.Int64
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.IO.UnmanagedMemoryAccessor.ReadDecimal(System.Int64)
  commentId: M:System.IO.UnmanagedMemoryAccessor.ReadDecimal(System.Int64)
  parent: System.IO.UnmanagedMemoryAccessor
  isExternal: true
  name: ReadDecimal(Int64)
  nameWithType: UnmanagedMemoryAccessor.ReadDecimal(Int64)
  fullName: System.IO.UnmanagedMemoryAccessor.ReadDecimal(System.Int64)
  spec.csharp:
  - uid: System.IO.UnmanagedMemoryAccessor.ReadDecimal(System.Int64)
    name: ReadDecimal
    nameWithType: UnmanagedMemoryAccessor.ReadDecimal
    fullName: System.IO.UnmanagedMemoryAccessor.ReadDecimal
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int64
    name: Int64
    nameWithType: Int64
    fullName: System.Int64
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.IO.UnmanagedMemoryAccessor.ReadDecimal(System.Int64)
    name: ReadDecimal
    nameWithType: UnmanagedMemoryAccessor.ReadDecimal
    fullName: System.IO.UnmanagedMemoryAccessor.ReadDecimal
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int64
    name: Int64
    nameWithType: Int64
    fullName: System.Int64
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.IO.UnmanagedMemoryAccessor.ReadSingle(System.Int64)
  commentId: M:System.IO.UnmanagedMemoryAccessor.ReadSingle(System.Int64)
  parent: System.IO.UnmanagedMemoryAccessor
  isExternal: true
  name: ReadSingle(Int64)
  nameWithType: UnmanagedMemoryAccessor.ReadSingle(Int64)
  fullName: System.IO.UnmanagedMemoryAccessor.ReadSingle(System.Int64)
  spec.csharp:
  - uid: System.IO.UnmanagedMemoryAccessor.ReadSingle(System.Int64)
    name: ReadSingle
    nameWithType: UnmanagedMemoryAccessor.ReadSingle
    fullName: System.IO.UnmanagedMemoryAccessor.ReadSingle
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int64
    name: Int64
    nameWithType: Int64
    fullName: System.Int64
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.IO.UnmanagedMemoryAccessor.ReadSingle(System.Int64)
    name: ReadSingle
    nameWithType: UnmanagedMemoryAccessor.ReadSingle
    fullName: System.IO.UnmanagedMemoryAccessor.ReadSingle
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int64
    name: Int64
    nameWithType: Int64
    fullName: System.Int64
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.IO.UnmanagedMemoryAccessor.ReadDouble(System.Int64)
  commentId: M:System.IO.UnmanagedMemoryAccessor.ReadDouble(System.Int64)
  parent: System.IO.UnmanagedMemoryAccessor
  isExternal: true
  name: ReadDouble(Int64)
  nameWithType: UnmanagedMemoryAccessor.ReadDouble(Int64)
  fullName: System.IO.UnmanagedMemoryAccessor.ReadDouble(System.Int64)
  spec.csharp:
  - uid: System.IO.UnmanagedMemoryAccessor.ReadDouble(System.Int64)
    name: ReadDouble
    nameWithType: UnmanagedMemoryAccessor.ReadDouble
    fullName: System.IO.UnmanagedMemoryAccessor.ReadDouble
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int64
    name: Int64
    nameWithType: Int64
    fullName: System.Int64
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.IO.UnmanagedMemoryAccessor.ReadDouble(System.Int64)
    name: ReadDouble
    nameWithType: UnmanagedMemoryAccessor.ReadDouble
    fullName: System.IO.UnmanagedMemoryAccessor.ReadDouble
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int64
    name: Int64
    nameWithType: Int64
    fullName: System.Int64
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.IO.UnmanagedMemoryAccessor.ReadSByte(System.Int64)
  commentId: M:System.IO.UnmanagedMemoryAccessor.ReadSByte(System.Int64)
  parent: System.IO.UnmanagedMemoryAccessor
  isExternal: true
  name: ReadSByte(Int64)
  nameWithType: UnmanagedMemoryAccessor.ReadSByte(Int64)
  fullName: System.IO.UnmanagedMemoryAccessor.ReadSByte(System.Int64)
  spec.csharp:
  - uid: System.IO.UnmanagedMemoryAccessor.ReadSByte(System.Int64)
    name: ReadSByte
    nameWithType: UnmanagedMemoryAccessor.ReadSByte
    fullName: System.IO.UnmanagedMemoryAccessor.ReadSByte
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int64
    name: Int64
    nameWithType: Int64
    fullName: System.Int64
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.IO.UnmanagedMemoryAccessor.ReadSByte(System.Int64)
    name: ReadSByte
    nameWithType: UnmanagedMemoryAccessor.ReadSByte
    fullName: System.IO.UnmanagedMemoryAccessor.ReadSByte
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int64
    name: Int64
    nameWithType: Int64
    fullName: System.Int64
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.IO.UnmanagedMemoryAccessor.ReadUInt16(System.Int64)
  commentId: M:System.IO.UnmanagedMemoryAccessor.ReadUInt16(System.Int64)
  parent: System.IO.UnmanagedMemoryAccessor
  isExternal: true
  name: ReadUInt16(Int64)
  nameWithType: UnmanagedMemoryAccessor.ReadUInt16(Int64)
  fullName: System.IO.UnmanagedMemoryAccessor.ReadUInt16(System.Int64)
  spec.csharp:
  - uid: System.IO.UnmanagedMemoryAccessor.ReadUInt16(System.Int64)
    name: ReadUInt16
    nameWithType: UnmanagedMemoryAccessor.ReadUInt16
    fullName: System.IO.UnmanagedMemoryAccessor.ReadUInt16
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int64
    name: Int64
    nameWithType: Int64
    fullName: System.Int64
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.IO.UnmanagedMemoryAccessor.ReadUInt16(System.Int64)
    name: ReadUInt16
    nameWithType: UnmanagedMemoryAccessor.ReadUInt16
    fullName: System.IO.UnmanagedMemoryAccessor.ReadUInt16
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int64
    name: Int64
    nameWithType: Int64
    fullName: System.Int64
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.IO.UnmanagedMemoryAccessor.ReadUInt32(System.Int64)
  commentId: M:System.IO.UnmanagedMemoryAccessor.ReadUInt32(System.Int64)
  parent: System.IO.UnmanagedMemoryAccessor
  isExternal: true
  name: ReadUInt32(Int64)
  nameWithType: UnmanagedMemoryAccessor.ReadUInt32(Int64)
  fullName: System.IO.UnmanagedMemoryAccessor.ReadUInt32(System.Int64)
  spec.csharp:
  - uid: System.IO.UnmanagedMemoryAccessor.ReadUInt32(System.Int64)
    name: ReadUInt32
    nameWithType: UnmanagedMemoryAccessor.ReadUInt32
    fullName: System.IO.UnmanagedMemoryAccessor.ReadUInt32
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int64
    name: Int64
    nameWithType: Int64
    fullName: System.Int64
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.IO.UnmanagedMemoryAccessor.ReadUInt32(System.Int64)
    name: ReadUInt32
    nameWithType: UnmanagedMemoryAccessor.ReadUInt32
    fullName: System.IO.UnmanagedMemoryAccessor.ReadUInt32
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int64
    name: Int64
    nameWithType: Int64
    fullName: System.Int64
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.IO.UnmanagedMemoryAccessor.ReadUInt64(System.Int64)
  commentId: M:System.IO.UnmanagedMemoryAccessor.ReadUInt64(System.Int64)
  parent: System.IO.UnmanagedMemoryAccessor
  isExternal: true
  name: ReadUInt64(Int64)
  nameWithType: UnmanagedMemoryAccessor.ReadUInt64(Int64)
  fullName: System.IO.UnmanagedMemoryAccessor.ReadUInt64(System.Int64)
  spec.csharp:
  - uid: System.IO.UnmanagedMemoryAccessor.ReadUInt64(System.Int64)
    name: ReadUInt64
    nameWithType: UnmanagedMemoryAccessor.ReadUInt64
    fullName: System.IO.UnmanagedMemoryAccessor.ReadUInt64
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int64
    name: Int64
    nameWithType: Int64
    fullName: System.Int64
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.IO.UnmanagedMemoryAccessor.ReadUInt64(System.Int64)
    name: ReadUInt64
    nameWithType: UnmanagedMemoryAccessor.ReadUInt64
    fullName: System.IO.UnmanagedMemoryAccessor.ReadUInt64
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int64
    name: Int64
    nameWithType: Int64
    fullName: System.Int64
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.IO.UnmanagedMemoryAccessor.Read``1(System.Int64,{T}@)
  commentId: M:System.IO.UnmanagedMemoryAccessor.Read``1(System.Int64,``0@)
  parent: System.IO.UnmanagedMemoryAccessor
  definition: System.IO.UnmanagedMemoryAccessor.Read``1(System.Int64,``0@)
  name: Read<T>(Int64, T)
  nameWithType: UnmanagedMemoryAccessor.Read<T>(Int64, T)
  fullName: System.IO.UnmanagedMemoryAccessor.Read<T>(System.Int64, T)
  nameWithType.vb: UnmanagedMemoryAccessor.Read(Of T)(Int64, T)
  fullname.vb: System.IO.UnmanagedMemoryAccessor.Read(Of T)(System.Int64, T)
  name.vb: Read(Of T)(Int64, T)
  spec.csharp:
  - uid: System.IO.UnmanagedMemoryAccessor.Read``1(System.Int64,``0@)
    name: Read<T>
    nameWithType: UnmanagedMemoryAccessor.Read<T>
    fullName: System.IO.UnmanagedMemoryAccessor.Read<T>
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int64
    name: Int64
    nameWithType: Int64
    fullName: System.Int64
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.IO.UnmanagedMemoryAccessor.Read``1(System.Int64,``0@)
    name: Read(Of T)
    nameWithType: UnmanagedMemoryAccessor.Read(Of T)
    fullName: System.IO.UnmanagedMemoryAccessor.Read(Of T)
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int64
    name: Int64
    nameWithType: Int64
    fullName: System.Int64
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.IO.UnmanagedMemoryAccessor.ReadArray``1(System.Int64,{T}[],System.Int32,System.Int32)
  commentId: M:System.IO.UnmanagedMemoryAccessor.ReadArray``1(System.Int64,``0[],System.Int32,System.Int32)
  parent: System.IO.UnmanagedMemoryAccessor
  definition: System.IO.UnmanagedMemoryAccessor.ReadArray``1(System.Int64,``0[],System.Int32,System.Int32)
  name: ReadArray<T>(Int64, T[], Int32, Int32)
  nameWithType: UnmanagedMemoryAccessor.ReadArray<T>(Int64, T[], Int32, Int32)
  fullName: System.IO.UnmanagedMemoryAccessor.ReadArray<T>(System.Int64, T[], System.Int32, System.Int32)
  nameWithType.vb: UnmanagedMemoryAccessor.ReadArray(Of T)(Int64, T(), Int32, Int32)
  fullname.vb: System.IO.UnmanagedMemoryAccessor.ReadArray(Of T)(System.Int64, T(), System.Int32, System.Int32)
  name.vb: ReadArray(Of T)(Int64, T(), Int32, Int32)
  spec.csharp:
  - uid: System.IO.UnmanagedMemoryAccessor.ReadArray``1(System.Int64,``0[],System.Int32,System.Int32)
    name: ReadArray<T>
    nameWithType: UnmanagedMemoryAccessor.ReadArray<T>
    fullName: System.IO.UnmanagedMemoryAccessor.ReadArray<T>
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int64
    name: Int64
    nameWithType: Int64
    fullName: System.Int64
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T
    nameWithType: T
    fullName: T
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.IO.UnmanagedMemoryAccessor.ReadArray``1(System.Int64,``0[],System.Int32,System.Int32)
    name: ReadArray(Of T)
    nameWithType: UnmanagedMemoryAccessor.ReadArray(Of T)
    fullName: System.IO.UnmanagedMemoryAccessor.ReadArray(Of T)
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int64
    name: Int64
    nameWithType: Int64
    fullName: System.Int64
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T
    nameWithType: T
    fullName: T
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.IO.UnmanagedMemoryAccessor.Write(System.Int64,System.Boolean)
  commentId: M:System.IO.UnmanagedMemoryAccessor.Write(System.Int64,System.Boolean)
  parent: System.IO.UnmanagedMemoryAccessor
  isExternal: true
  name: Write(Int64, Boolean)
  nameWithType: UnmanagedMemoryAccessor.Write(Int64, Boolean)
  fullName: System.IO.UnmanagedMemoryAccessor.Write(System.Int64, System.Boolean)
  spec.csharp:
  - uid: System.IO.UnmanagedMemoryAccessor.Write(System.Int64,System.Boolean)
    name: Write
    nameWithType: UnmanagedMemoryAccessor.Write
    fullName: System.IO.UnmanagedMemoryAccessor.Write
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int64
    name: Int64
    nameWithType: Int64
    fullName: System.Int64
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.IO.UnmanagedMemoryAccessor.Write(System.Int64,System.Boolean)
    name: Write
    nameWithType: UnmanagedMemoryAccessor.Write
    fullName: System.IO.UnmanagedMemoryAccessor.Write
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int64
    name: Int64
    nameWithType: Int64
    fullName: System.Int64
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.IO.UnmanagedMemoryAccessor.Write(System.Int64,System.Byte)
  commentId: M:System.IO.UnmanagedMemoryAccessor.Write(System.Int64,System.Byte)
  parent: System.IO.UnmanagedMemoryAccessor
  isExternal: true
  name: Write(Int64, Byte)
  nameWithType: UnmanagedMemoryAccessor.Write(Int64, Byte)
  fullName: System.IO.UnmanagedMemoryAccessor.Write(System.Int64, System.Byte)
  spec.csharp:
  - uid: System.IO.UnmanagedMemoryAccessor.Write(System.Int64,System.Byte)
    name: Write
    nameWithType: UnmanagedMemoryAccessor.Write
    fullName: System.IO.UnmanagedMemoryAccessor.Write
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int64
    name: Int64
    nameWithType: Int64
    fullName: System.Int64
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: System.Byte
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.IO.UnmanagedMemoryAccessor.Write(System.Int64,System.Byte)
    name: Write
    nameWithType: UnmanagedMemoryAccessor.Write
    fullName: System.IO.UnmanagedMemoryAccessor.Write
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int64
    name: Int64
    nameWithType: Int64
    fullName: System.Int64
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: System.Byte
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.IO.UnmanagedMemoryAccessor.Write(System.Int64,System.Char)
  commentId: M:System.IO.UnmanagedMemoryAccessor.Write(System.Int64,System.Char)
  parent: System.IO.UnmanagedMemoryAccessor
  isExternal: true
  name: Write(Int64, Char)
  nameWithType: UnmanagedMemoryAccessor.Write(Int64, Char)
  fullName: System.IO.UnmanagedMemoryAccessor.Write(System.Int64, System.Char)
  spec.csharp:
  - uid: System.IO.UnmanagedMemoryAccessor.Write(System.Int64,System.Char)
    name: Write
    nameWithType: UnmanagedMemoryAccessor.Write
    fullName: System.IO.UnmanagedMemoryAccessor.Write
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int64
    name: Int64
    nameWithType: Int64
    fullName: System.Int64
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Char
    name: Char
    nameWithType: Char
    fullName: System.Char
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.IO.UnmanagedMemoryAccessor.Write(System.Int64,System.Char)
    name: Write
    nameWithType: UnmanagedMemoryAccessor.Write
    fullName: System.IO.UnmanagedMemoryAccessor.Write
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int64
    name: Int64
    nameWithType: Int64
    fullName: System.Int64
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Char
    name: Char
    nameWithType: Char
    fullName: System.Char
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.IO.UnmanagedMemoryAccessor.Write(System.Int64,System.Int16)
  commentId: M:System.IO.UnmanagedMemoryAccessor.Write(System.Int64,System.Int16)
  parent: System.IO.UnmanagedMemoryAccessor
  isExternal: true
  name: Write(Int64, Int16)
  nameWithType: UnmanagedMemoryAccessor.Write(Int64, Int16)
  fullName: System.IO.UnmanagedMemoryAccessor.Write(System.Int64, System.Int16)
  spec.csharp:
  - uid: System.IO.UnmanagedMemoryAccessor.Write(System.Int64,System.Int16)
    name: Write
    nameWithType: UnmanagedMemoryAccessor.Write
    fullName: System.IO.UnmanagedMemoryAccessor.Write
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int64
    name: Int64
    nameWithType: Int64
    fullName: System.Int64
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int16
    name: Int16
    nameWithType: Int16
    fullName: System.Int16
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.IO.UnmanagedMemoryAccessor.Write(System.Int64,System.Int16)
    name: Write
    nameWithType: UnmanagedMemoryAccessor.Write
    fullName: System.IO.UnmanagedMemoryAccessor.Write
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int64
    name: Int64
    nameWithType: Int64
    fullName: System.Int64
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int16
    name: Int16
    nameWithType: Int16
    fullName: System.Int16
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.IO.UnmanagedMemoryAccessor.Write(System.Int64,System.Int32)
  commentId: M:System.IO.UnmanagedMemoryAccessor.Write(System.Int64,System.Int32)
  parent: System.IO.UnmanagedMemoryAccessor
  isExternal: true
  name: Write(Int64, Int32)
  nameWithType: UnmanagedMemoryAccessor.Write(Int64, Int32)
  fullName: System.IO.UnmanagedMemoryAccessor.Write(System.Int64, System.Int32)
  spec.csharp:
  - uid: System.IO.UnmanagedMemoryAccessor.Write(System.Int64,System.Int32)
    name: Write
    nameWithType: UnmanagedMemoryAccessor.Write
    fullName: System.IO.UnmanagedMemoryAccessor.Write
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int64
    name: Int64
    nameWithType: Int64
    fullName: System.Int64
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.IO.UnmanagedMemoryAccessor.Write(System.Int64,System.Int32)
    name: Write
    nameWithType: UnmanagedMemoryAccessor.Write
    fullName: System.IO.UnmanagedMemoryAccessor.Write
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int64
    name: Int64
    nameWithType: Int64
    fullName: System.Int64
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.IO.UnmanagedMemoryAccessor.Write(System.Int64,System.Int64)
  commentId: M:System.IO.UnmanagedMemoryAccessor.Write(System.Int64,System.Int64)
  parent: System.IO.UnmanagedMemoryAccessor
  isExternal: true
  name: Write(Int64, Int64)
  nameWithType: UnmanagedMemoryAccessor.Write(Int64, Int64)
  fullName: System.IO.UnmanagedMemoryAccessor.Write(System.Int64, System.Int64)
  spec.csharp:
  - uid: System.IO.UnmanagedMemoryAccessor.Write(System.Int64,System.Int64)
    name: Write
    nameWithType: UnmanagedMemoryAccessor.Write
    fullName: System.IO.UnmanagedMemoryAccessor.Write
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int64
    name: Int64
    nameWithType: Int64
    fullName: System.Int64
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int64
    name: Int64
    nameWithType: Int64
    fullName: System.Int64
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.IO.UnmanagedMemoryAccessor.Write(System.Int64,System.Int64)
    name: Write
    nameWithType: UnmanagedMemoryAccessor.Write
    fullName: System.IO.UnmanagedMemoryAccessor.Write
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int64
    name: Int64
    nameWithType: Int64
    fullName: System.Int64
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int64
    name: Int64
    nameWithType: Int64
    fullName: System.Int64
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.IO.UnmanagedMemoryAccessor.Write(System.Int64,System.Decimal)
  commentId: M:System.IO.UnmanagedMemoryAccessor.Write(System.Int64,System.Decimal)
  parent: System.IO.UnmanagedMemoryAccessor
  isExternal: true
  name: Write(Int64, Decimal)
  nameWithType: UnmanagedMemoryAccessor.Write(Int64, Decimal)
  fullName: System.IO.UnmanagedMemoryAccessor.Write(System.Int64, System.Decimal)
  spec.csharp:
  - uid: System.IO.UnmanagedMemoryAccessor.Write(System.Int64,System.Decimal)
    name: Write
    nameWithType: UnmanagedMemoryAccessor.Write
    fullName: System.IO.UnmanagedMemoryAccessor.Write
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int64
    name: Int64
    nameWithType: Int64
    fullName: System.Int64
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Decimal
    name: Decimal
    nameWithType: Decimal
    fullName: System.Decimal
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.IO.UnmanagedMemoryAccessor.Write(System.Int64,System.Decimal)
    name: Write
    nameWithType: UnmanagedMemoryAccessor.Write
    fullName: System.IO.UnmanagedMemoryAccessor.Write
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int64
    name: Int64
    nameWithType: Int64
    fullName: System.Int64
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Decimal
    name: Decimal
    nameWithType: Decimal
    fullName: System.Decimal
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.IO.UnmanagedMemoryAccessor.Write(System.Int64,System.Single)
  commentId: M:System.IO.UnmanagedMemoryAccessor.Write(System.Int64,System.Single)
  parent: System.IO.UnmanagedMemoryAccessor
  isExternal: true
  name: Write(Int64, Single)
  nameWithType: UnmanagedMemoryAccessor.Write(Int64, Single)
  fullName: System.IO.UnmanagedMemoryAccessor.Write(System.Int64, System.Single)
  spec.csharp:
  - uid: System.IO.UnmanagedMemoryAccessor.Write(System.Int64,System.Single)
    name: Write
    nameWithType: UnmanagedMemoryAccessor.Write
    fullName: System.IO.UnmanagedMemoryAccessor.Write
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int64
    name: Int64
    nameWithType: Int64
    fullName: System.Int64
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Single
    name: Single
    nameWithType: Single
    fullName: System.Single
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.IO.UnmanagedMemoryAccessor.Write(System.Int64,System.Single)
    name: Write
    nameWithType: UnmanagedMemoryAccessor.Write
    fullName: System.IO.UnmanagedMemoryAccessor.Write
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int64
    name: Int64
    nameWithType: Int64
    fullName: System.Int64
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Single
    name: Single
    nameWithType: Single
    fullName: System.Single
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.IO.UnmanagedMemoryAccessor.Write(System.Int64,System.Double)
  commentId: M:System.IO.UnmanagedMemoryAccessor.Write(System.Int64,System.Double)
  parent: System.IO.UnmanagedMemoryAccessor
  isExternal: true
  name: Write(Int64, Double)
  nameWithType: UnmanagedMemoryAccessor.Write(Int64, Double)
  fullName: System.IO.UnmanagedMemoryAccessor.Write(System.Int64, System.Double)
  spec.csharp:
  - uid: System.IO.UnmanagedMemoryAccessor.Write(System.Int64,System.Double)
    name: Write
    nameWithType: UnmanagedMemoryAccessor.Write
    fullName: System.IO.UnmanagedMemoryAccessor.Write
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int64
    name: Int64
    nameWithType: Int64
    fullName: System.Int64
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Double
    name: Double
    nameWithType: Double
    fullName: System.Double
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.IO.UnmanagedMemoryAccessor.Write(System.Int64,System.Double)
    name: Write
    nameWithType: UnmanagedMemoryAccessor.Write
    fullName: System.IO.UnmanagedMemoryAccessor.Write
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int64
    name: Int64
    nameWithType: Int64
    fullName: System.Int64
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Double
    name: Double
    nameWithType: Double
    fullName: System.Double
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.IO.UnmanagedMemoryAccessor.Write(System.Int64,System.SByte)
  commentId: M:System.IO.UnmanagedMemoryAccessor.Write(System.Int64,System.SByte)
  parent: System.IO.UnmanagedMemoryAccessor
  isExternal: true
  name: Write(Int64, SByte)
  nameWithType: UnmanagedMemoryAccessor.Write(Int64, SByte)
  fullName: System.IO.UnmanagedMemoryAccessor.Write(System.Int64, System.SByte)
  spec.csharp:
  - uid: System.IO.UnmanagedMemoryAccessor.Write(System.Int64,System.SByte)
    name: Write
    nameWithType: UnmanagedMemoryAccessor.Write
    fullName: System.IO.UnmanagedMemoryAccessor.Write
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int64
    name: Int64
    nameWithType: Int64
    fullName: System.Int64
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.SByte
    name: SByte
    nameWithType: SByte
    fullName: System.SByte
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.IO.UnmanagedMemoryAccessor.Write(System.Int64,System.SByte)
    name: Write
    nameWithType: UnmanagedMemoryAccessor.Write
    fullName: System.IO.UnmanagedMemoryAccessor.Write
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int64
    name: Int64
    nameWithType: Int64
    fullName: System.Int64
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.SByte
    name: SByte
    nameWithType: SByte
    fullName: System.SByte
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.IO.UnmanagedMemoryAccessor.Write(System.Int64,System.UInt16)
  commentId: M:System.IO.UnmanagedMemoryAccessor.Write(System.Int64,System.UInt16)
  parent: System.IO.UnmanagedMemoryAccessor
  isExternal: true
  name: Write(Int64, UInt16)
  nameWithType: UnmanagedMemoryAccessor.Write(Int64, UInt16)
  fullName: System.IO.UnmanagedMemoryAccessor.Write(System.Int64, System.UInt16)
  spec.csharp:
  - uid: System.IO.UnmanagedMemoryAccessor.Write(System.Int64,System.UInt16)
    name: Write
    nameWithType: UnmanagedMemoryAccessor.Write
    fullName: System.IO.UnmanagedMemoryAccessor.Write
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int64
    name: Int64
    nameWithType: Int64
    fullName: System.Int64
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.UInt16
    name: UInt16
    nameWithType: UInt16
    fullName: System.UInt16
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.IO.UnmanagedMemoryAccessor.Write(System.Int64,System.UInt16)
    name: Write
    nameWithType: UnmanagedMemoryAccessor.Write
    fullName: System.IO.UnmanagedMemoryAccessor.Write
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int64
    name: Int64
    nameWithType: Int64
    fullName: System.Int64
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.UInt16
    name: UInt16
    nameWithType: UInt16
    fullName: System.UInt16
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.IO.UnmanagedMemoryAccessor.Write(System.Int64,System.UInt32)
  commentId: M:System.IO.UnmanagedMemoryAccessor.Write(System.Int64,System.UInt32)
  parent: System.IO.UnmanagedMemoryAccessor
  isExternal: true
  name: Write(Int64, UInt32)
  nameWithType: UnmanagedMemoryAccessor.Write(Int64, UInt32)
  fullName: System.IO.UnmanagedMemoryAccessor.Write(System.Int64, System.UInt32)
  spec.csharp:
  - uid: System.IO.UnmanagedMemoryAccessor.Write(System.Int64,System.UInt32)
    name: Write
    nameWithType: UnmanagedMemoryAccessor.Write
    fullName: System.IO.UnmanagedMemoryAccessor.Write
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int64
    name: Int64
    nameWithType: Int64
    fullName: System.Int64
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.UInt32
    name: UInt32
    nameWithType: UInt32
    fullName: System.UInt32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.IO.UnmanagedMemoryAccessor.Write(System.Int64,System.UInt32)
    name: Write
    nameWithType: UnmanagedMemoryAccessor.Write
    fullName: System.IO.UnmanagedMemoryAccessor.Write
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int64
    name: Int64
    nameWithType: Int64
    fullName: System.Int64
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.UInt32
    name: UInt32
    nameWithType: UInt32
    fullName: System.UInt32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.IO.UnmanagedMemoryAccessor.Write(System.Int64,System.UInt64)
  commentId: M:System.IO.UnmanagedMemoryAccessor.Write(System.Int64,System.UInt64)
  parent: System.IO.UnmanagedMemoryAccessor
  isExternal: true
  name: Write(Int64, UInt64)
  nameWithType: UnmanagedMemoryAccessor.Write(Int64, UInt64)
  fullName: System.IO.UnmanagedMemoryAccessor.Write(System.Int64, System.UInt64)
  spec.csharp:
  - uid: System.IO.UnmanagedMemoryAccessor.Write(System.Int64,System.UInt64)
    name: Write
    nameWithType: UnmanagedMemoryAccessor.Write
    fullName: System.IO.UnmanagedMemoryAccessor.Write
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int64
    name: Int64
    nameWithType: Int64
    fullName: System.Int64
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.UInt64
    name: UInt64
    nameWithType: UInt64
    fullName: System.UInt64
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.IO.UnmanagedMemoryAccessor.Write(System.Int64,System.UInt64)
    name: Write
    nameWithType: UnmanagedMemoryAccessor.Write
    fullName: System.IO.UnmanagedMemoryAccessor.Write
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int64
    name: Int64
    nameWithType: Int64
    fullName: System.Int64
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.UInt64
    name: UInt64
    nameWithType: UInt64
    fullName: System.UInt64
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.IO.UnmanagedMemoryAccessor.Write``1(System.Int64,{T}@)
  commentId: M:System.IO.UnmanagedMemoryAccessor.Write``1(System.Int64,``0@)
  parent: System.IO.UnmanagedMemoryAccessor
  definition: System.IO.UnmanagedMemoryAccessor.Write``1(System.Int64,``0@)
  name: Write<T>(Int64, T)
  nameWithType: UnmanagedMemoryAccessor.Write<T>(Int64, T)
  fullName: System.IO.UnmanagedMemoryAccessor.Write<T>(System.Int64, T)
  nameWithType.vb: UnmanagedMemoryAccessor.Write(Of T)(Int64, T)
  fullname.vb: System.IO.UnmanagedMemoryAccessor.Write(Of T)(System.Int64, T)
  name.vb: Write(Of T)(Int64, T)
  spec.csharp:
  - uid: System.IO.UnmanagedMemoryAccessor.Write``1(System.Int64,``0@)
    name: Write<T>
    nameWithType: UnmanagedMemoryAccessor.Write<T>
    fullName: System.IO.UnmanagedMemoryAccessor.Write<T>
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int64
    name: Int64
    nameWithType: Int64
    fullName: System.Int64
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.IO.UnmanagedMemoryAccessor.Write``1(System.Int64,``0@)
    name: Write(Of T)
    nameWithType: UnmanagedMemoryAccessor.Write(Of T)
    fullName: System.IO.UnmanagedMemoryAccessor.Write(Of T)
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int64
    name: Int64
    nameWithType: Int64
    fullName: System.Int64
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.IO.UnmanagedMemoryAccessor.WriteArray``1(System.Int64,{T}[],System.Int32,System.Int32)
  commentId: M:System.IO.UnmanagedMemoryAccessor.WriteArray``1(System.Int64,``0[],System.Int32,System.Int32)
  parent: System.IO.UnmanagedMemoryAccessor
  definition: System.IO.UnmanagedMemoryAccessor.WriteArray``1(System.Int64,``0[],System.Int32,System.Int32)
  name: WriteArray<T>(Int64, T[], Int32, Int32)
  nameWithType: UnmanagedMemoryAccessor.WriteArray<T>(Int64, T[], Int32, Int32)
  fullName: System.IO.UnmanagedMemoryAccessor.WriteArray<T>(System.Int64, T[], System.Int32, System.Int32)
  nameWithType.vb: UnmanagedMemoryAccessor.WriteArray(Of T)(Int64, T(), Int32, Int32)
  fullname.vb: System.IO.UnmanagedMemoryAccessor.WriteArray(Of T)(System.Int64, T(), System.Int32, System.Int32)
  name.vb: WriteArray(Of T)(Int64, T(), Int32, Int32)
  spec.csharp:
  - uid: System.IO.UnmanagedMemoryAccessor.WriteArray``1(System.Int64,``0[],System.Int32,System.Int32)
    name: WriteArray<T>
    nameWithType: UnmanagedMemoryAccessor.WriteArray<T>
    fullName: System.IO.UnmanagedMemoryAccessor.WriteArray<T>
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int64
    name: Int64
    nameWithType: Int64
    fullName: System.Int64
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T
    nameWithType: T
    fullName: T
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.IO.UnmanagedMemoryAccessor.WriteArray``1(System.Int64,``0[],System.Int32,System.Int32)
    name: WriteArray(Of T)
    nameWithType: UnmanagedMemoryAccessor.WriteArray(Of T)
    fullName: System.IO.UnmanagedMemoryAccessor.WriteArray(Of T)
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int64
    name: Int64
    nameWithType: Int64
    fullName: System.Int64
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T
    nameWithType: T
    fullName: T
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.IO.UnmanagedMemoryAccessor.Capacity
  commentId: P:System.IO.UnmanagedMemoryAccessor.Capacity
  parent: System.IO.UnmanagedMemoryAccessor
  isExternal: true
  name: Capacity
  nameWithType: UnmanagedMemoryAccessor.Capacity
  fullName: System.IO.UnmanagedMemoryAccessor.Capacity
- uid: System.IO.UnmanagedMemoryAccessor.CanRead
  commentId: P:System.IO.UnmanagedMemoryAccessor.CanRead
  parent: System.IO.UnmanagedMemoryAccessor
  isExternal: true
  name: CanRead
  nameWithType: UnmanagedMemoryAccessor.CanRead
  fullName: System.IO.UnmanagedMemoryAccessor.CanRead
- uid: System.IO.UnmanagedMemoryAccessor.CanWrite
  commentId: P:System.IO.UnmanagedMemoryAccessor.CanWrite
  parent: System.IO.UnmanagedMemoryAccessor
  isExternal: true
  name: CanWrite
  nameWithType: UnmanagedMemoryAccessor.CanWrite
  fullName: System.IO.UnmanagedMemoryAccessor.CanWrite
- uid: System.IO.UnmanagedMemoryAccessor.IsOpen
  commentId: P:System.IO.UnmanagedMemoryAccessor.IsOpen
  parent: System.IO.UnmanagedMemoryAccessor
  isExternal: true
  name: IsOpen
  nameWithType: UnmanagedMemoryAccessor.IsOpen
  fullName: System.IO.UnmanagedMemoryAccessor.IsOpen
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: System.IO
  commentId: N:System.IO
  isExternal: false
  name: System.IO
  nameWithType: System.IO
  fullName: System.IO
- uid: System.IO.UnmanagedMemoryAccessor.Read``1(System.Int64,``0@)
  commentId: M:System.IO.UnmanagedMemoryAccessor.Read``1(System.Int64,``0@)
  isExternal: true
  name: Read<T>(Int64, T)
  nameWithType: UnmanagedMemoryAccessor.Read<T>(Int64, T)
  fullName: System.IO.UnmanagedMemoryAccessor.Read<T>(System.Int64, T)
  nameWithType.vb: UnmanagedMemoryAccessor.Read(Of T)(Int64, T)
  fullname.vb: System.IO.UnmanagedMemoryAccessor.Read(Of T)(System.Int64, T)
  name.vb: Read(Of T)(Int64, T)
  spec.csharp:
  - uid: System.IO.UnmanagedMemoryAccessor.Read``1(System.Int64,``0@)
    name: Read<T>
    nameWithType: UnmanagedMemoryAccessor.Read<T>
    fullName: System.IO.UnmanagedMemoryAccessor.Read<T>
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int64
    name: Int64
    nameWithType: Int64
    fullName: System.Int64
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.IO.UnmanagedMemoryAccessor.Read``1(System.Int64,``0@)
    name: Read(Of T)
    nameWithType: UnmanagedMemoryAccessor.Read(Of T)
    fullName: System.IO.UnmanagedMemoryAccessor.Read(Of T)
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int64
    name: Int64
    nameWithType: Int64
    fullName: System.Int64
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.IO.UnmanagedMemoryAccessor.ReadArray``1(System.Int64,``0[],System.Int32,System.Int32)
  commentId: M:System.IO.UnmanagedMemoryAccessor.ReadArray``1(System.Int64,``0[],System.Int32,System.Int32)
  isExternal: true
  name: ReadArray<T>(Int64, T[], Int32, Int32)
  nameWithType: UnmanagedMemoryAccessor.ReadArray<T>(Int64, T[], Int32, Int32)
  fullName: System.IO.UnmanagedMemoryAccessor.ReadArray<T>(System.Int64, T[], System.Int32, System.Int32)
  nameWithType.vb: UnmanagedMemoryAccessor.ReadArray(Of T)(Int64, T(), Int32, Int32)
  fullname.vb: System.IO.UnmanagedMemoryAccessor.ReadArray(Of T)(System.Int64, T(), System.Int32, System.Int32)
  name.vb: ReadArray(Of T)(Int64, T(), Int32, Int32)
  spec.csharp:
  - uid: System.IO.UnmanagedMemoryAccessor.ReadArray``1(System.Int64,``0[],System.Int32,System.Int32)
    name: ReadArray<T>
    nameWithType: UnmanagedMemoryAccessor.ReadArray<T>
    fullName: System.IO.UnmanagedMemoryAccessor.ReadArray<T>
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int64
    name: Int64
    nameWithType: Int64
    fullName: System.Int64
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T
    nameWithType: T
    fullName: T
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.IO.UnmanagedMemoryAccessor.ReadArray``1(System.Int64,``0[],System.Int32,System.Int32)
    name: ReadArray(Of T)
    nameWithType: UnmanagedMemoryAccessor.ReadArray(Of T)
    fullName: System.IO.UnmanagedMemoryAccessor.ReadArray(Of T)
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int64
    name: Int64
    nameWithType: Int64
    fullName: System.Int64
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T
    nameWithType: T
    fullName: T
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.IO.UnmanagedMemoryAccessor.Write``1(System.Int64,``0@)
  commentId: M:System.IO.UnmanagedMemoryAccessor.Write``1(System.Int64,``0@)
  isExternal: true
  name: Write<T>(Int64, T)
  nameWithType: UnmanagedMemoryAccessor.Write<T>(Int64, T)
  fullName: System.IO.UnmanagedMemoryAccessor.Write<T>(System.Int64, T)
  nameWithType.vb: UnmanagedMemoryAccessor.Write(Of T)(Int64, T)
  fullname.vb: System.IO.UnmanagedMemoryAccessor.Write(Of T)(System.Int64, T)
  name.vb: Write(Of T)(Int64, T)
  spec.csharp:
  - uid: System.IO.UnmanagedMemoryAccessor.Write``1(System.Int64,``0@)
    name: Write<T>
    nameWithType: UnmanagedMemoryAccessor.Write<T>
    fullName: System.IO.UnmanagedMemoryAccessor.Write<T>
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int64
    name: Int64
    nameWithType: Int64
    fullName: System.Int64
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.IO.UnmanagedMemoryAccessor.Write``1(System.Int64,``0@)
    name: Write(Of T)
    nameWithType: UnmanagedMemoryAccessor.Write(Of T)
    fullName: System.IO.UnmanagedMemoryAccessor.Write(Of T)
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int64
    name: Int64
    nameWithType: Int64
    fullName: System.Int64
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.IO.UnmanagedMemoryAccessor.WriteArray``1(System.Int64,``0[],System.Int32,System.Int32)
  commentId: M:System.IO.UnmanagedMemoryAccessor.WriteArray``1(System.Int64,``0[],System.Int32,System.Int32)
  isExternal: true
  name: WriteArray<T>(Int64, T[], Int32, Int32)
  nameWithType: UnmanagedMemoryAccessor.WriteArray<T>(Int64, T[], Int32, Int32)
  fullName: System.IO.UnmanagedMemoryAccessor.WriteArray<T>(System.Int64, T[], System.Int32, System.Int32)
  nameWithType.vb: UnmanagedMemoryAccessor.WriteArray(Of T)(Int64, T(), Int32, Int32)
  fullname.vb: System.IO.UnmanagedMemoryAccessor.WriteArray(Of T)(System.Int64, T(), System.Int32, System.Int32)
  name.vb: WriteArray(Of T)(Int64, T(), Int32, Int32)
  spec.csharp:
  - uid: System.IO.UnmanagedMemoryAccessor.WriteArray``1(System.Int64,``0[],System.Int32,System.Int32)
    name: WriteArray<T>
    nameWithType: UnmanagedMemoryAccessor.WriteArray<T>
    fullName: System.IO.UnmanagedMemoryAccessor.WriteArray<T>
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int64
    name: Int64
    nameWithType: Int64
    fullName: System.Int64
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T
    nameWithType: T
    fullName: T
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.IO.UnmanagedMemoryAccessor.WriteArray``1(System.Int64,``0[],System.Int32,System.Int32)
    name: WriteArray(Of T)
    nameWithType: UnmanagedMemoryAccessor.WriteArray(Of T)
    fullName: System.IO.UnmanagedMemoryAccessor.WriteArray(Of T)
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int64
    name: Int64
    nameWithType: Int64
    fullName: System.Int64
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T
    nameWithType: T
    fullName: T
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Int64
  commentId: T:System.Int64
  parent: System
  isExternal: false
  name: Int64
  nameWithType: Int64
  fullName: System.Int64
- uid: Microsoft.Win32.SafeHandles.SafeMemoryMappedViewHandle
  commentId: T:Microsoft.Win32.SafeHandles.SafeMemoryMappedViewHandle
  parent: Microsoft.Win32.SafeHandles
  isExternal: false
  name: SafeMemoryMappedViewHandle
  nameWithType: SafeMemoryMappedViewHandle
  fullName: Microsoft.Win32.SafeHandles.SafeMemoryMappedViewHandle
- uid: Microsoft.Win32.SafeHandles
  commentId: N:Microsoft.Win32.SafeHandles
  isExternal: false
  name: Microsoft.Win32.SafeHandles
  nameWithType: Microsoft.Win32.SafeHandles
  fullName: Microsoft.Win32.SafeHandles
- uid: System.IO.UnmanagedMemoryAccessor.Dispose(System.Boolean)
  commentId: M:System.IO.UnmanagedMemoryAccessor.Dispose(System.Boolean)
  parent: System.IO.UnmanagedMemoryAccessor
  isExternal: true
  name: Dispose(Boolean)
  nameWithType: UnmanagedMemoryAccessor.Dispose(Boolean)
  fullName: System.IO.UnmanagedMemoryAccessor.Dispose(System.Boolean)
  spec.csharp:
  - uid: System.IO.UnmanagedMemoryAccessor.Dispose(System.Boolean)
    name: Dispose
    nameWithType: UnmanagedMemoryAccessor.Dispose
    fullName: System.IO.UnmanagedMemoryAccessor.Dispose
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.IO.UnmanagedMemoryAccessor.Dispose(System.Boolean)
    name: Dispose
    nameWithType: UnmanagedMemoryAccessor.Dispose
    fullName: System.IO.UnmanagedMemoryAccessor.Dispose
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: false
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.InvalidOperationException
  commentId: T:System.InvalidOperationException
  parent: System
  isExternal: false
  name: InvalidOperationException
  nameWithType: InvalidOperationException
  fullName: System.InvalidOperationException
- uid: System.ObjectDisposedException
  commentId: T:System.ObjectDisposedException
  isExternal: false
  name: ObjectDisposedException
  nameWithType: ObjectDisposedException
  fullName: System.ObjectDisposedException
