items:
- uid: System.ServiceModel.FaultException`1
  commentId: T:System.ServiceModel.FaultException`1
  id: FaultException`1
  parent: System.ServiceModel
  children:
  - System.ServiceModel.FaultException`1.#ctor(`0,System.ServiceModel.FaultReason,System.ServiceModel.FaultCode,System.String)
  - System.ServiceModel.FaultException`1.CreateMessageFault
  - System.ServiceModel.FaultException`1.Detail
  - System.ServiceModel.FaultException`1.ToString
  langs:
  - csharp
  - vb
  name: FaultException<TDetail>
  fullName: System.ServiceModel.FaultException<TDetail>
  type: Class
  source:
    remote:
      path: src/System.ServiceModel.Primitives/ref/System.ServiceModel.Primitives.cs
      branch: master
      repo: https://github.com/dotnet/wcf.git
    id: FaultException
    path: src/System.ServiceModel.Primitives/ref/System.ServiceModel.Primitives.cs
    startLine: 290
  assemblies:
  - System.ServiceModel.Primitives
  namespace: System.ServiceModel
  summary: "\n<p>Used in a client application to catch contractually-specified SOAP faults.</p>\n"
  syntax:
    content: 'public class FaultException<TDetail> : FaultException, ISerializable, _Exception'
    content.vb: >-
      Public Class FaultException(Of TDetail)
          Inherits FaultException
          Implements ISerializable, _Exception
    typeParameters:
    - id: TDetail
      description: "\n<p>The serializable error detail type.</p>\n"
  inheritance:
  - System.Object
  - System.Exception
  - System.ServiceModel.CommunicationException
  - System.ServiceModel.FaultException
  implements:
  - System.Runtime.Serialization.ISerializable
  - System.Runtime.InteropServices._Exception
  inheritedMembers:
  - System.ServiceModel.FaultException.Action
  - System.ServiceModel.FaultException.Code
  - System.ServiceModel.FaultException.Message
  - System.ServiceModel.FaultException.Reason
  - System.ServiceModel.FaultException.CreateFault(System.ServiceModel.Channels.MessageFault,System.String,System.Type[])
  - System.ServiceModel.FaultException.CreateFault(System.ServiceModel.Channels.MessageFault,System.Type[])
  - System.Exception.GetBaseException
  - System.Exception.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)
  - System.Exception.GetType
  - System.Exception.Data
  - System.Exception.InnerException
  - System.Exception.TargetSite
  - System.Exception.StackTrace
  - System.Exception.HelpLink
  - System.Exception.Source
  - System.Exception.HResult
  - System.Exception.SerializeObjectState
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.MemberwiseClone
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
  fullName.vb: System.ServiceModel.FaultException(Of TDetail)
  name.vb: FaultException(Of TDetail)
  nameWithType: FaultException<TDetail>
  nameWithType.vb: FaultException(Of TDetail)
- uid: System.ServiceModel.FaultException`1.#ctor(`0,System.ServiceModel.FaultReason,System.ServiceModel.FaultCode,System.String)
  commentId: M:System.ServiceModel.FaultException`1.#ctor(`0,System.ServiceModel.FaultReason,System.ServiceModel.FaultCode,System.String)
  id: '#ctor(`0,System.ServiceModel.FaultReason,System.ServiceModel.FaultCode,System.String)'
  parent: System.ServiceModel.FaultException`1
  langs:
  - csharp
  - vb
  name: FaultException(TDetail, FaultReason, FaultCode, String)
  fullName: System.ServiceModel.FaultException<TDetail>.FaultException(TDetail, System.ServiceModel.FaultReason, System.ServiceModel.FaultCode, System.String)
  type: Constructor
  source:
    remote:
      path: src/System.ServiceModel.Primitives/ref/System.ServiceModel.Primitives.cs
      branch: master
      repo: https://github.com/dotnet/wcf.git
    id: .ctor
    path: src/System.ServiceModel.Primitives/ref/System.ServiceModel.Primitives.cs
    startLine: 292
  assemblies:
  - System.ServiceModel.Primitives
  namespace: System.ServiceModel
  summary: "\n<p>Initializes a new instance of the <xref href=\"System.ServiceModel.FaultException`1\" data-throw-if-not-resolved=\"false\"></xref> class that uses the specified detail object, and SOAP fault reason, code and action values. </p>\n"
  syntax:
    content: public FaultException(TDetail detail, FaultReason reason, FaultCode code, string action)
    content.vb: Public Sub New(detail As TDetail, reason As FaultReason, code As FaultCode, action As String)
    parameters:
    - id: detail
      type: '{TDetail}'
      description: "\n<p>The object used as the SOAP fault detail.</p>\n"
    - id: reason
      type: System.ServiceModel.FaultReason
      description: "\n<p>The reason for the SOAP fault.</p>\n"
    - id: code
      type: System.ServiceModel.FaultCode
      description: "\n<p>The fault code for the SOAP fault.</p>\n"
    - id: action
      type: System.String
      description: "\n<p>The action of the SOAP fault.</p>\n"
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: System.ServiceModel.FaultException(Of TDetail).FaultException(TDetail, System.ServiceModel.FaultReason, System.ServiceModel.FaultCode, System.String)
  nameWithType: FaultException<TDetail>.FaultException(TDetail, FaultReason, FaultCode, String)
  nameWithType.vb: FaultException(Of TDetail).FaultException(TDetail, FaultReason, FaultCode, String)
- uid: System.ServiceModel.FaultException`1.Detail
  commentId: P:System.ServiceModel.FaultException`1.Detail
  id: Detail
  parent: System.ServiceModel.FaultException`1
  langs:
  - csharp
  - vb
  name: Detail
  fullName: System.ServiceModel.FaultException<TDetail>.Detail
  type: Property
  source:
    remote:
      path: src/System.ServiceModel.Primitives/ref/System.ServiceModel.Primitives.cs
      branch: master
      repo: https://github.com/dotnet/wcf.git
    id: Detail
    path: src/System.ServiceModel.Primitives/ref/System.ServiceModel.Primitives.cs
    startLine: 293
  assemblies:
  - System.ServiceModel.Primitives
  namespace: System.ServiceModel
  summary: "\n<p>Gets the object that contains the detail information of the fault condition.</p>\n"
  syntax:
    content: public TDetail Detail { get; }
    content.vb: Public ReadOnly Property Detail As TDetail
    parameters: []
    return:
      type: '{TDetail}'
      description: "\n<p>The detail object that is the type parameter of the <xref href=\"System.ServiceModel.FaultException`1\" data-throw-if-not-resolved=\"false\"></xref> object.</p>\n"
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
  fullName.vb: System.ServiceModel.FaultException(Of TDetail).Detail
  nameWithType: FaultException<TDetail>.Detail
  nameWithType.vb: FaultException(Of TDetail).Detail
- uid: System.ServiceModel.FaultException`1.CreateMessageFault
  commentId: M:System.ServiceModel.FaultException`1.CreateMessageFault
  id: CreateMessageFault
  parent: System.ServiceModel.FaultException`1
  langs:
  - csharp
  - vb
  name: CreateMessageFault()
  fullName: System.ServiceModel.FaultException<TDetail>.CreateMessageFault()
  type: Method
  source:
    remote:
      path: src/System.ServiceModel.Primitives/ref/System.ServiceModel.Primitives.cs
      branch: master
      repo: https://github.com/dotnet/wcf.git
    id: CreateMessageFault
    path: src/System.ServiceModel.Primitives/ref/System.ServiceModel.Primitives.cs
    startLine: 294
  assemblies:
  - System.ServiceModel.Primitives
  namespace: System.ServiceModel
  summary: "\n<p>Creates a <xref href=\"System.ServiceModel.Channels.MessageFault\" data-throw-if-not-resolved=\"false\"></xref> object that can be used to create a <xref href=\"System.ServiceModel.Channels.Message\" data-throw-if-not-resolved=\"false\"></xref> that represents the SOAP fault.</p>\n"
  syntax:
    content: public override MessageFault CreateMessageFault()
    content.vb: Public Overrides Function CreateMessageFault As MessageFault
    return:
      type: System.ServiceModel.Channels.MessageFault
      description: "\n<p>The message fault created.</p>\n"
  overridden: System.ServiceModel.FaultException.CreateMessageFault
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
  fullName.vb: System.ServiceModel.FaultException(Of TDetail).CreateMessageFault()
  nameWithType: FaultException<TDetail>.CreateMessageFault()
  nameWithType.vb: FaultException(Of TDetail).CreateMessageFault()
- uid: System.ServiceModel.FaultException`1.ToString
  commentId: M:System.ServiceModel.FaultException`1.ToString
  id: ToString
  parent: System.ServiceModel.FaultException`1
  langs:
  - csharp
  - vb
  name: ToString()
  fullName: System.ServiceModel.FaultException<TDetail>.ToString()
  type: Method
  source:
    remote:
      path: src/System.ServiceModel.Primitives/ref/System.ServiceModel.Primitives.cs
      branch: master
      repo: https://github.com/dotnet/wcf.git
    id: ToString
    path: src/System.ServiceModel.Primitives/ref/System.ServiceModel.Primitives.cs
    startLine: 295
  assemblies:
  - System.ServiceModel.Primitives
  namespace: System.ServiceModel
  summary: "\n<p>Returns a string for the <xref href=\"System.ServiceModel.FaultException`1\" data-throw-if-not-resolved=\"false\"></xref> object.</p>\n"
  syntax:
    content: public override string ToString()
    content.vb: Public Overrides Function ToString As String
    return:
      type: System.String
      description: "\n<p>The string for the SOAP fault.</p>\n"
  overridden: System.Exception.ToString
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
  fullName.vb: System.ServiceModel.FaultException(Of TDetail).ToString()
  nameWithType: FaultException<TDetail>.ToString()
  nameWithType.vb: FaultException(Of TDetail).ToString()
references:
- uid: System.ServiceModel
  isExternal: false
  name: System.ServiceModel
  fullName: System.ServiceModel
  commentId: N:System.ServiceModel
  nameWithType: System.ServiceModel
- uid: System.Object
  parent: System
  isExternal: false
  name: Object
  fullName: System.Object
  commentId: T:System.Object
  nameWithType: Object
- uid: System.Exception
  parent: System
  isExternal: false
  name: Exception
  fullName: System.Exception
  commentId: T:System.Exception
  nameWithType: Exception
- uid: System.ServiceModel.CommunicationException
  parent: System.ServiceModel
  isExternal: false
  name: CommunicationException
  fullName: System.ServiceModel.CommunicationException
  commentId: T:System.ServiceModel.CommunicationException
  nameWithType: CommunicationException
- uid: System.ServiceModel.FaultException
  parent: System.ServiceModel
  isExternal: false
  name: FaultException
  fullName: System.ServiceModel.FaultException
  commentId: T:System.ServiceModel.FaultException
  nameWithType: FaultException
- uid: System.Runtime.Serialization.ISerializable
  parent: System.Runtime.Serialization
  isExternal: false
  name: ISerializable
  fullName: System.Runtime.Serialization.ISerializable
  commentId: T:System.Runtime.Serialization.ISerializable
  nameWithType: ISerializable
- uid: System.Runtime.InteropServices._Exception
  parent: System.Runtime.InteropServices
  isExternal: true
  name: _Exception
  fullName: System.Runtime.InteropServices._Exception
  commentId: T:System.Runtime.InteropServices._Exception
  nameWithType: _Exception
- uid: System.ServiceModel.FaultException.Action
  parent: System.ServiceModel.FaultException
  isExternal: false
  name: Action
  fullName: System.ServiceModel.FaultException.Action
  commentId: P:System.ServiceModel.FaultException.Action
  nameWithType: FaultException.Action
- uid: System.ServiceModel.FaultException.Code
  parent: System.ServiceModel.FaultException
  isExternal: false
  name: Code
  fullName: System.ServiceModel.FaultException.Code
  commentId: P:System.ServiceModel.FaultException.Code
  nameWithType: FaultException.Code
- uid: System.ServiceModel.FaultException.Message
  parent: System.ServiceModel.FaultException
  isExternal: false
  name: Message
  fullName: System.ServiceModel.FaultException.Message
  commentId: P:System.ServiceModel.FaultException.Message
  nameWithType: FaultException.Message
- uid: System.ServiceModel.FaultException.Reason
  parent: System.ServiceModel.FaultException
  isExternal: false
  name: Reason
  fullName: System.ServiceModel.FaultException.Reason
  commentId: P:System.ServiceModel.FaultException.Reason
  nameWithType: FaultException.Reason
- uid: System.ServiceModel.FaultException.CreateFault(System.ServiceModel.Channels.MessageFault,System.String,System.Type[])
  parent: System.ServiceModel.FaultException
  isExternal: true
  name: CreateFault(MessageFault, String, Type[])
  fullName: System.ServiceModel.FaultException.CreateFault(System.ServiceModel.Channels.MessageFault, System.String, System.Type[])
  fullname.vb: System.ServiceModel.FaultException.CreateFault(System.ServiceModel.Channels.MessageFault, System.String, System.Type())
  name.vb: CreateFault(MessageFault, String, Type())
  spec.csharp:
  - uid: System.ServiceModel.FaultException.CreateFault(System.ServiceModel.Channels.MessageFault,System.String,System.Type[])
    name: CreateFault
    fullName: System.ServiceModel.FaultException.CreateFault
  - name: (
    fullName: (
  - uid: System.ServiceModel.Channels.MessageFault
    name: MessageFault
    fullName: System.ServiceModel.Channels.MessageFault
  - name: ', '
    fullName: ', '
  - uid: System.String
    name: String
    fullName: System.String
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Type
    name: Type
    fullName: System.Type
    isExternal: true
  - name: '[]'
    fullName: '[]'
  - name: )
    fullName: )
  spec.vb:
  - uid: System.ServiceModel.FaultException.CreateFault(System.ServiceModel.Channels.MessageFault,System.String,System.Type[])
    name: CreateFault
    fullName: System.ServiceModel.FaultException.CreateFault
  - name: (
    fullName: (
  - uid: System.ServiceModel.Channels.MessageFault
    name: MessageFault
    fullName: System.ServiceModel.Channels.MessageFault
  - name: ', '
    fullName: ', '
  - uid: System.String
    name: String
    fullName: System.String
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Type
    name: Type
    fullName: System.Type
    isExternal: true
  - name: ()
    fullName: ()
  - name: )
    fullName: )
  commentId: M:System.ServiceModel.FaultException.CreateFault(System.ServiceModel.Channels.MessageFault,System.String,System.Type[])
  nameWithType: FaultException.CreateFault(MessageFault, String, Type[])
  nameWithType.vb: FaultException.CreateFault(MessageFault, String, Type())
- uid: System.ServiceModel.FaultException.CreateFault(System.ServiceModel.Channels.MessageFault,System.Type[])
  parent: System.ServiceModel.FaultException
  isExternal: true
  name: CreateFault(MessageFault, Type[])
  fullName: System.ServiceModel.FaultException.CreateFault(System.ServiceModel.Channels.MessageFault, System.Type[])
  fullname.vb: System.ServiceModel.FaultException.CreateFault(System.ServiceModel.Channels.MessageFault, System.Type())
  name.vb: CreateFault(MessageFault, Type())
  spec.csharp:
  - uid: System.ServiceModel.FaultException.CreateFault(System.ServiceModel.Channels.MessageFault,System.Type[])
    name: CreateFault
    fullName: System.ServiceModel.FaultException.CreateFault
  - name: (
    fullName: (
  - uid: System.ServiceModel.Channels.MessageFault
    name: MessageFault
    fullName: System.ServiceModel.Channels.MessageFault
  - name: ', '
    fullName: ', '
  - uid: System.Type
    name: Type
    fullName: System.Type
    isExternal: true
  - name: '[]'
    fullName: '[]'
  - name: )
    fullName: )
  spec.vb:
  - uid: System.ServiceModel.FaultException.CreateFault(System.ServiceModel.Channels.MessageFault,System.Type[])
    name: CreateFault
    fullName: System.ServiceModel.FaultException.CreateFault
  - name: (
    fullName: (
  - uid: System.ServiceModel.Channels.MessageFault
    name: MessageFault
    fullName: System.ServiceModel.Channels.MessageFault
  - name: ', '
    fullName: ', '
  - uid: System.Type
    name: Type
    fullName: System.Type
    isExternal: true
  - name: ()
    fullName: ()
  - name: )
    fullName: )
  commentId: M:System.ServiceModel.FaultException.CreateFault(System.ServiceModel.Channels.MessageFault,System.Type[])
  nameWithType: FaultException.CreateFault(MessageFault, Type[])
  nameWithType.vb: FaultException.CreateFault(MessageFault, Type())
- uid: System.Exception.GetBaseException
  parent: System.Exception
  isExternal: false
  name: GetBaseException()
  fullName: System.Exception.GetBaseException()
  spec.csharp:
  - uid: System.Exception.GetBaseException
    name: GetBaseException
    fullName: System.Exception.GetBaseException
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Exception.GetBaseException
    name: GetBaseException
    fullName: System.Exception.GetBaseException
  - name: (
    fullName: (
  - name: )
    fullName: )
  commentId: M:System.Exception.GetBaseException
  nameWithType: Exception.GetBaseException()
- uid: System.Exception.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)
  parent: System.Exception
  isExternal: true
  name: GetObjectData(SerializationInfo, StreamingContext)
  fullName: System.Exception.GetObjectData(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext)
  spec.csharp:
  - uid: System.Exception.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)
    name: GetObjectData
    fullName: System.Exception.GetObjectData
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Runtime.Serialization.SerializationInfo
    name: SerializationInfo
    fullName: System.Runtime.Serialization.SerializationInfo
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Runtime.Serialization.StreamingContext
    name: StreamingContext
    fullName: System.Runtime.Serialization.StreamingContext
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Exception.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)
    name: GetObjectData
    fullName: System.Exception.GetObjectData
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Runtime.Serialization.SerializationInfo
    name: SerializationInfo
    fullName: System.Runtime.Serialization.SerializationInfo
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Runtime.Serialization.StreamingContext
    name: StreamingContext
    fullName: System.Runtime.Serialization.StreamingContext
    isExternal: true
  - name: )
    fullName: )
  commentId: M:System.Exception.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)
  nameWithType: Exception.GetObjectData(SerializationInfo, StreamingContext)
- uid: System.Exception.GetType
  parent: System.Exception
  isExternal: true
  name: GetType()
  fullName: System.Exception.GetType()
  spec.csharp:
  - uid: System.Exception.GetType
    name: GetType
    fullName: System.Exception.GetType
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Exception.GetType
    name: GetType
    fullName: System.Exception.GetType
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  commentId: M:System.Exception.GetType
  nameWithType: Exception.GetType()
- uid: System.Exception.Data
  parent: System.Exception
  isExternal: false
  name: Data
  fullName: System.Exception.Data
  commentId: P:System.Exception.Data
  nameWithType: Exception.Data
- uid: System.Exception.InnerException
  parent: System.Exception
  isExternal: false
  name: InnerException
  fullName: System.Exception.InnerException
  commentId: P:System.Exception.InnerException
  nameWithType: Exception.InnerException
- uid: System.Exception.TargetSite
  parent: System.Exception
  isExternal: true
  name: TargetSite
  fullName: System.Exception.TargetSite
  commentId: P:System.Exception.TargetSite
  nameWithType: Exception.TargetSite
- uid: System.Exception.StackTrace
  parent: System.Exception
  isExternal: false
  name: StackTrace
  fullName: System.Exception.StackTrace
  commentId: P:System.Exception.StackTrace
  nameWithType: Exception.StackTrace
- uid: System.Exception.HelpLink
  parent: System.Exception
  isExternal: false
  name: HelpLink
  fullName: System.Exception.HelpLink
  commentId: P:System.Exception.HelpLink
  nameWithType: Exception.HelpLink
- uid: System.Exception.Source
  parent: System.Exception
  isExternal: false
  name: Source
  fullName: System.Exception.Source
  commentId: P:System.Exception.Source
  nameWithType: Exception.Source
- uid: System.Exception.HResult
  parent: System.Exception
  isExternal: false
  name: HResult
  fullName: System.Exception.HResult
  commentId: P:System.Exception.HResult
  nameWithType: Exception.HResult
- uid: System.Exception.SerializeObjectState
  parent: System.Exception
  isExternal: true
  name: SerializeObjectState
  fullName: System.Exception.SerializeObjectState
  commentId: E:System.Exception.SerializeObjectState
  nameWithType: Exception.SerializeObjectState
- uid: System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
  commentId: M:System.Object.Equals(System.Object)
  nameWithType: Object.Equals(Object)
- uid: System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
  commentId: M:System.Object.Equals(System.Object,System.Object)
  nameWithType: Object.Equals(Object, Object)
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
- uid: System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  commentId: M:System.Object.GetHashCode
  nameWithType: Object.GetHashCode()
- uid: System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  commentId: M:System.Object.MemberwiseClone
  nameWithType: Object.MemberwiseClone()
- uid: System
  isExternal: false
  name: System
  fullName: System
  commentId: N:System
  nameWithType: System
- uid: System.Runtime.Serialization
  isExternal: false
  name: System.Runtime.Serialization
  fullName: System.Runtime.Serialization
  commentId: N:System.Runtime.Serialization
  nameWithType: System.Runtime.Serialization
- uid: System.Runtime.InteropServices
  isExternal: false
  name: System.Runtime.InteropServices
  fullName: System.Runtime.InteropServices
  commentId: N:System.Runtime.InteropServices
  nameWithType: System.Runtime.InteropServices
- uid: '{TDetail}'
  definition: TDetail
  name: TDetail
  fullName: TDetail
  commentId: '!:TDetail'
  nameWithType: TDetail
- uid: System.ServiceModel.FaultReason
  parent: System.ServiceModel
  isExternal: false
  name: FaultReason
  fullName: System.ServiceModel.FaultReason
  commentId: T:System.ServiceModel.FaultReason
  nameWithType: FaultReason
- uid: System.ServiceModel.FaultCode
  parent: System.ServiceModel
  isExternal: false
  name: FaultCode
  fullName: System.ServiceModel.FaultCode
  commentId: T:System.ServiceModel.FaultCode
  nameWithType: FaultCode
- uid: System.String
  parent: System
  isExternal: false
  name: String
  fullName: System.String
  commentId: T:System.String
  nameWithType: String
- uid: TDetail
  isExternal: false
  name: TDetail
  fullName: TDetail
  nameWithType: TDetail
- uid: System.ServiceModel.FaultException.CreateMessageFault
  parent: System.ServiceModel.FaultException
  isExternal: false
  name: CreateMessageFault()
  fullName: System.ServiceModel.FaultException.CreateMessageFault()
  spec.csharp:
  - uid: System.ServiceModel.FaultException.CreateMessageFault
    name: CreateMessageFault
    fullName: System.ServiceModel.FaultException.CreateMessageFault
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.ServiceModel.FaultException.CreateMessageFault
    name: CreateMessageFault
    fullName: System.ServiceModel.FaultException.CreateMessageFault
  - name: (
    fullName: (
  - name: )
    fullName: )
  commentId: M:System.ServiceModel.FaultException.CreateMessageFault
  nameWithType: FaultException.CreateMessageFault()
- uid: System.ServiceModel.Channels.MessageFault
  parent: System.ServiceModel.Channels
  isExternal: false
  name: MessageFault
  fullName: System.ServiceModel.Channels.MessageFault
  commentId: T:System.ServiceModel.Channels.MessageFault
  nameWithType: MessageFault
- uid: System.ServiceModel.Channels
  isExternal: false
  name: System.ServiceModel.Channels
  fullName: System.ServiceModel.Channels
  commentId: N:System.ServiceModel.Channels
  nameWithType: System.ServiceModel.Channels
- uid: System.Exception.ToString
  parent: System.Exception
  isExternal: false
  name: ToString()
  fullName: System.Exception.ToString()
  spec.csharp:
  - uid: System.Exception.ToString
    name: ToString
    fullName: System.Exception.ToString
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Exception.ToString
    name: ToString
    fullName: System.Exception.ToString
  - name: (
    fullName: (
  - name: )
    fullName: )
  commentId: M:System.Exception.ToString
  nameWithType: Exception.ToString()
