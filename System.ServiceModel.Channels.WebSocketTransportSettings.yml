### YamlMime:ManagedReference
items:
- uid: System.ServiceModel.Channels.WebSocketTransportSettings
  commentId: T:System.ServiceModel.Channels.WebSocketTransportSettings
  id: WebSocketTransportSettings
  parent: System.ServiceModel.Channels
  children:
  - System.ServiceModel.Channels.WebSocketTransportSettings.#ctor
  - System.ServiceModel.Channels.WebSocketTransportSettings.BinaryMessageReceivedAction
  - System.ServiceModel.Channels.WebSocketTransportSettings.DisablePayloadMasking
  - System.ServiceModel.Channels.WebSocketTransportSettings.Equals(System.Object)
  - System.ServiceModel.Channels.WebSocketTransportSettings.Equals(System.ServiceModel.Channels.WebSocketTransportSettings)
  - System.ServiceModel.Channels.WebSocketTransportSettings.GetHashCode
  - System.ServiceModel.Channels.WebSocketTransportSettings.KeepAliveInterval
  - System.ServiceModel.Channels.WebSocketTransportSettings.SubProtocol
  - System.ServiceModel.Channels.WebSocketTransportSettings.TextMessageReceivedAction
  - System.ServiceModel.Channels.WebSocketTransportSettings.TransportUsage
  langs:
  - csharp
  - vb
  name: WebSocketTransportSettings
  nameWithType: WebSocketTransportSettings
  fullName: System.ServiceModel.Channels.WebSocketTransportSettings
  type: Class
  source:
    remote:
      path: src/System.ServiceModel.Http/ref/System.ServiceModel.Http.cs
      branch: master
      repo: https://github.com/dotnet/wcf.git
    id: WebSocketTransportSettings
    path: src/System.ServiceModel.Http/ref/System.ServiceModel.Http.cs
    startLine: 172
  assemblies:
  - System.ServiceModel.Http
  namespace: System.ServiceModel.Channels
  summary: "\n<p>Represents settings for web socket transport.</p>\n"
  syntax:
    content: 'public sealed class WebSocketTransportSettings : IEquatable<WebSocketTransportSettings>'
    content.vb: >-
      Public NotInheritable Class WebSocketTransportSettings
          Implements IEquatable(Of WebSocketTransportSettings)
  inheritance:
  - System.Object
  implements:
  - System.IEquatable{System.ServiceModel.Channels.WebSocketTransportSettings}
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetType
  - System.Object.MemberwiseClone
  modifiers.csharp:
  - public
  - sealed
  - class
  modifiers.vb:
  - Public
  - NotInheritable
  - Class
- uid: System.ServiceModel.Channels.WebSocketTransportSettings.BinaryMessageReceivedAction
  commentId: F:System.ServiceModel.Channels.WebSocketTransportSettings.BinaryMessageReceivedAction
  id: BinaryMessageReceivedAction
  parent: System.ServiceModel.Channels.WebSocketTransportSettings
  langs:
  - csharp
  - vb
  name: BinaryMessageReceivedAction
  nameWithType: WebSocketTransportSettings.BinaryMessageReceivedAction
  fullName: System.ServiceModel.Channels.WebSocketTransportSettings.BinaryMessageReceivedAction
  type: Field
  source:
    remote:
      path: src/System.ServiceModel.Http/ref/System.ServiceModel.Http.cs
      branch: master
      repo: https://github.com/dotnet/wcf.git
    id: BinaryMessageReceivedAction
    path: src/System.ServiceModel.Http/ref/System.ServiceModel.Http.cs
    startLine: 174
  assemblies:
  - System.ServiceModel.Http
  namespace: System.ServiceModel.Channels
  summary: "\n<p>Specifies the action when web socket binary message is received.</p>\n"
  syntax:
    content: public const string BinaryMessageReceivedAction = "http://schemas.microsoft.com/2011/02/websockets/onbinarymessage"
    content.vb: Public Const BinaryMessageReceivedAction As String = "http://schemas.microsoft.com/2011/02/websockets/onbinarymessage"
    return:
      type: System.String
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: System.ServiceModel.Channels.WebSocketTransportSettings.TextMessageReceivedAction
  commentId: F:System.ServiceModel.Channels.WebSocketTransportSettings.TextMessageReceivedAction
  id: TextMessageReceivedAction
  parent: System.ServiceModel.Channels.WebSocketTransportSettings
  langs:
  - csharp
  - vb
  name: TextMessageReceivedAction
  nameWithType: WebSocketTransportSettings.TextMessageReceivedAction
  fullName: System.ServiceModel.Channels.WebSocketTransportSettings.TextMessageReceivedAction
  type: Field
  source:
    remote:
      path: src/System.ServiceModel.Http/ref/System.ServiceModel.Http.cs
      branch: master
      repo: https://github.com/dotnet/wcf.git
    id: TextMessageReceivedAction
    path: src/System.ServiceModel.Http/ref/System.ServiceModel.Http.cs
    startLine: 175
  assemblies:
  - System.ServiceModel.Http
  namespace: System.ServiceModel.Channels
  summary: "\n<p>Specifies the action when web socket text message is received.</p>\n"
  syntax:
    content: public const string TextMessageReceivedAction = "http://schemas.microsoft.com/2011/02/websockets/ontextmessage"
    content.vb: Public Const TextMessageReceivedAction As String = "http://schemas.microsoft.com/2011/02/websockets/ontextmessage"
    return:
      type: System.String
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: System.ServiceModel.Channels.WebSocketTransportSettings.#ctor
  commentId: M:System.ServiceModel.Channels.WebSocketTransportSettings.#ctor
  id: '#ctor'
  parent: System.ServiceModel.Channels.WebSocketTransportSettings
  langs:
  - csharp
  - vb
  name: WebSocketTransportSettings()
  nameWithType: WebSocketTransportSettings.WebSocketTransportSettings()
  fullName: System.ServiceModel.Channels.WebSocketTransportSettings.WebSocketTransportSettings()
  type: Constructor
  source:
    remote:
      path: src/System.ServiceModel.Http/ref/System.ServiceModel.Http.cs
      branch: master
      repo: https://github.com/dotnet/wcf.git
    id: .ctor
    path: src/System.ServiceModel.Http/ref/System.ServiceModel.Http.cs
    startLine: 176
  assemblies:
  - System.ServiceModel.Http
  namespace: System.ServiceModel.Channels
  summary: "\n<p>Initializes a new instance of the <xref href=\"System.ServiceModel.Channels.WebSocketTransportSettings\" data-throw-if-not-resolved=\"false\"></xref> class.</p>\n"
  syntax:
    content: public WebSocketTransportSettings()
    content.vb: Public Sub New
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: System.ServiceModel.Channels.WebSocketTransportSettings.DisablePayloadMasking
  commentId: P:System.ServiceModel.Channels.WebSocketTransportSettings.DisablePayloadMasking
  id: DisablePayloadMasking
  parent: System.ServiceModel.Channels.WebSocketTransportSettings
  langs:
  - csharp
  - vb
  name: DisablePayloadMasking
  nameWithType: WebSocketTransportSettings.DisablePayloadMasking
  fullName: System.ServiceModel.Channels.WebSocketTransportSettings.DisablePayloadMasking
  type: Property
  source:
    remote:
      path: src/System.ServiceModel.Http/ref/System.ServiceModel.Http.cs
      branch: master
      repo: https://github.com/dotnet/wcf.git
    id: DisablePayloadMasking
    path: src/System.ServiceModel.Http/ref/System.ServiceModel.Http.cs
    startLine: 177
  assemblies:
  - System.ServiceModel.Http
  namespace: System.ServiceModel.Channels
  summary: "\n<p>Gets or sets a value that indicates whether the web socket masking is disabled.</p>\n"
  syntax:
    content: public bool DisablePayloadMasking { get; set; }
    content.vb: Public Property DisablePayloadMasking As Boolean
    parameters: []
    return:
      type: System.Boolean
      description: "\n<p>\n<strong>true</strong> if the web socket masking is disabled; otherwise, <strong>false</strong>.</p>\n"
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: System.ServiceModel.Channels.WebSocketTransportSettings.KeepAliveInterval
  commentId: P:System.ServiceModel.Channels.WebSocketTransportSettings.KeepAliveInterval
  id: KeepAliveInterval
  parent: System.ServiceModel.Channels.WebSocketTransportSettings
  langs:
  - csharp
  - vb
  name: KeepAliveInterval
  nameWithType: WebSocketTransportSettings.KeepAliveInterval
  fullName: System.ServiceModel.Channels.WebSocketTransportSettings.KeepAliveInterval
  type: Property
  source:
    remote:
      path: src/System.ServiceModel.Http/ref/System.ServiceModel.Http.cs
      branch: master
      repo: https://github.com/dotnet/wcf.git
    id: KeepAliveInterval
    path: src/System.ServiceModel.Http/ref/System.ServiceModel.Http.cs
    startLine: 179
  assemblies:
  - System.ServiceModel.Http
  namespace: System.ServiceModel.Channels
  summary: "\n<p>Gets or sets the value of the keep alive interval of the connection.</p>\n"
  syntax:
    content: public TimeSpan KeepAliveInterval { get; set; }
    content.vb: Public Property KeepAliveInterval As TimeSpan
    parameters: []
    return:
      type: System.TimeSpan
      description: "\n<p>The value of the keep alive interval of the connection.</p>\n"
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: System.ServiceModel.Channels.WebSocketTransportSettings.SubProtocol
  commentId: P:System.ServiceModel.Channels.WebSocketTransportSettings.SubProtocol
  id: SubProtocol
  parent: System.ServiceModel.Channels.WebSocketTransportSettings
  langs:
  - csharp
  - vb
  name: SubProtocol
  nameWithType: WebSocketTransportSettings.SubProtocol
  fullName: System.ServiceModel.Channels.WebSocketTransportSettings.SubProtocol
  type: Property
  source:
    remote:
      path: src/System.ServiceModel.Http/ref/System.ServiceModel.Http.cs
      branch: master
      repo: https://github.com/dotnet/wcf.git
    id: SubProtocol
    path: src/System.ServiceModel.Http/ref/System.ServiceModel.Http.cs
    startLine: 181
  assemblies:
  - System.ServiceModel.Http
  namespace: System.ServiceModel.Channels
  summary: "\n<p>Gets or sets the web socket sub protocol.</p>\n"
  syntax:
    content: public string SubProtocol { get; set; }
    content.vb: Public Property SubProtocol As String
    parameters: []
    return:
      type: System.String
      description: "\n<p>The web socket sub protocol.</p>\n"
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: System.ServiceModel.Channels.WebSocketTransportSettings.TransportUsage
  commentId: P:System.ServiceModel.Channels.WebSocketTransportSettings.TransportUsage
  id: TransportUsage
  parent: System.ServiceModel.Channels.WebSocketTransportSettings
  langs:
  - csharp
  - vb
  name: TransportUsage
  nameWithType: WebSocketTransportSettings.TransportUsage
  fullName: System.ServiceModel.Channels.WebSocketTransportSettings.TransportUsage
  type: Property
  source:
    remote:
      path: src/System.ServiceModel.Http/ref/System.ServiceModel.Http.cs
      branch: master
      repo: https://github.com/dotnet/wcf.git
    id: TransportUsage
    path: src/System.ServiceModel.Http/ref/System.ServiceModel.Http.cs
    startLine: 183
  assemblies:
  - System.ServiceModel.Http
  namespace: System.ServiceModel.Channels
  summary: "\n<p>Gets or sets the web socket transport usage.</p>\n"
  syntax:
    content: public WebSocketTransportUsage TransportUsage { get; set; }
    content.vb: Public Property TransportUsage As WebSocketTransportUsage
    parameters: []
    return:
      type: System.ServiceModel.Channels.WebSocketTransportUsage
      description: "\n<p>One of the values of the <xref href=\"System.ServiceModel.Channels.WebSocketTransportUsage\" data-throw-if-not-resolved=\"false\"></xref> enumeration.</p>\n"
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: System.ServiceModel.Channels.WebSocketTransportSettings.Equals(System.Object)
  commentId: M:System.ServiceModel.Channels.WebSocketTransportSettings.Equals(System.Object)
  id: Equals(System.Object)
  parent: System.ServiceModel.Channels.WebSocketTransportSettings
  langs:
  - csharp
  - vb
  name: Equals(Object)
  nameWithType: WebSocketTransportSettings.Equals(Object)
  fullName: System.ServiceModel.Channels.WebSocketTransportSettings.Equals(System.Object)
  type: Method
  source:
    remote:
      path: src/System.ServiceModel.Http/ref/System.ServiceModel.Http.cs
      branch: master
      repo: https://github.com/dotnet/wcf.git
    id: Equals
    path: src/System.ServiceModel.Http/ref/System.ServiceModel.Http.cs
    startLine: 185
  assemblies:
  - System.ServiceModel.Http
  namespace: System.ServiceModel.Channels
  summary: "\n<p>Determines whether the specified object is equal with the current object.</p>\n"
  syntax:
    content: public override bool Equals(object obj)
    content.vb: Public Overrides Function Equals(obj As Object) As Boolean
    parameters:
    - id: obj
      type: System.Object
      description: "\n<p>The object to compare with the current object.</p>\n"
    return:
      type: System.Boolean
      description: "\n<p>\n<strong>true</strong> if the specified object is equal with the current object; otherwise, <strong>false</strong>.</p>\n"
  overridden: System.Object.Equals(System.Object)
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
- uid: System.ServiceModel.Channels.WebSocketTransportSettings.Equals(System.ServiceModel.Channels.WebSocketTransportSettings)
  commentId: M:System.ServiceModel.Channels.WebSocketTransportSettings.Equals(System.ServiceModel.Channels.WebSocketTransportSettings)
  id: Equals(System.ServiceModel.Channels.WebSocketTransportSettings)
  parent: System.ServiceModel.Channels.WebSocketTransportSettings
  langs:
  - csharp
  - vb
  name: Equals(WebSocketTransportSettings)
  nameWithType: WebSocketTransportSettings.Equals(WebSocketTransportSettings)
  fullName: System.ServiceModel.Channels.WebSocketTransportSettings.Equals(System.ServiceModel.Channels.WebSocketTransportSettings)
  type: Method
  source:
    remote:
      path: src/System.ServiceModel.Http/ref/System.ServiceModel.Http.cs
      branch: master
      repo: https://github.com/dotnet/wcf.git
    id: Equals
    path: src/System.ServiceModel.Http/ref/System.ServiceModel.Http.cs
    startLine: 186
  assemblies:
  - System.ServiceModel.Http
  namespace: System.ServiceModel.Channels
  summary: "\n<p>Determines whether the specified web socket transport settings object is equal with the current object.</p>\n"
  syntax:
    content: public bool Equals(WebSocketTransportSettings other)
    content.vb: Public Function Equals(other As WebSocketTransportSettings) As Boolean
    parameters:
    - id: other
      type: System.ServiceModel.Channels.WebSocketTransportSettings
      description: "\n<p>The web socket transport settings object to compare with the current object.</p>\n"
    return:
      type: System.Boolean
      description: "\n<p>\n<strong>true</strong> if the specified object is equal with the current object; otherwise, <strong>false</strong>.</p>\n"
  implements:
  - System.IEquatable{System.ServiceModel.Channels.WebSocketTransportSettings}.Equals(System.ServiceModel.Channels.WebSocketTransportSettings)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: System.ServiceModel.Channels.WebSocketTransportSettings.GetHashCode
  commentId: M:System.ServiceModel.Channels.WebSocketTransportSettings.GetHashCode
  id: GetHashCode
  parent: System.ServiceModel.Channels.WebSocketTransportSettings
  langs:
  - csharp
  - vb
  name: GetHashCode()
  nameWithType: WebSocketTransportSettings.GetHashCode()
  fullName: System.ServiceModel.Channels.WebSocketTransportSettings.GetHashCode()
  type: Method
  source:
    remote:
      path: src/System.ServiceModel.Http/ref/System.ServiceModel.Http.cs
      branch: master
      repo: https://github.com/dotnet/wcf.git
    id: GetHashCode
    path: src/System.ServiceModel.Http/ref/System.ServiceModel.Http.cs
    startLine: 187
  assemblies:
  - System.ServiceModel.Http
  namespace: System.ServiceModel.Channels
  summary: "\n<p>Gets the hash code value for this object.</p>\n"
  syntax:
    content: public override int GetHashCode()
    content.vb: Public Overrides Function GetHashCode As Integer
    return:
      type: System.Int32
      description: "\n<p>The hash code value for this object.</p>\n"
  overridden: System.Object.GetHashCode
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
references:
- uid: System.ServiceModel.Channels
  commentId: N:System.ServiceModel.Channels
  isExternal: false
  name: System.ServiceModel.Channels
  nameWithType: System.ServiceModel.Channels
  fullName: System.ServiceModel.Channels
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: false
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.IEquatable{System.ServiceModel.Channels.WebSocketTransportSettings}
  commentId: T:System.IEquatable{System.ServiceModel.Channels.WebSocketTransportSettings}
  parent: System
  definition: System.IEquatable`1
  name: IEquatable<WebSocketTransportSettings>
  nameWithType: IEquatable<WebSocketTransportSettings>
  fullName: System.IEquatable<System.ServiceModel.Channels.WebSocketTransportSettings>
  nameWithType.vb: IEquatable(Of WebSocketTransportSettings)
  fullname.vb: System.IEquatable(Of System.ServiceModel.Channels.WebSocketTransportSettings)
  name.vb: IEquatable(Of WebSocketTransportSettings)
  spec.csharp:
  - uid: System.IEquatable`1
    name: IEquatable
    nameWithType: IEquatable
    fullName: System.IEquatable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.ServiceModel.Channels.WebSocketTransportSettings
    name: WebSocketTransportSettings
    nameWithType: WebSocketTransportSettings
    fullName: System.ServiceModel.Channels.WebSocketTransportSettings
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.IEquatable`1
    name: IEquatable
    nameWithType: IEquatable
    fullName: System.IEquatable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.ServiceModel.Channels.WebSocketTransportSettings
    name: WebSocketTransportSettings
    nameWithType: WebSocketTransportSettings
    fullName: System.ServiceModel.Channels.WebSocketTransportSettings
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: System.IEquatable`1
  commentId: T:System.IEquatable`1
  isExternal: false
  name: IEquatable<T>
  nameWithType: IEquatable<T>
  fullName: System.IEquatable<T>
  nameWithType.vb: IEquatable(Of T)
  fullname.vb: System.IEquatable(Of T)
  name.vb: IEquatable(Of T)
  spec.csharp:
  - uid: System.IEquatable`1
    name: IEquatable
    nameWithType: IEquatable
    fullName: System.IEquatable
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.IEquatable`1
    name: IEquatable
    nameWithType: IEquatable
    fullName: System.IEquatable
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: false
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: false
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.TimeSpan
  commentId: T:System.TimeSpan
  parent: System
  isExternal: false
  name: TimeSpan
  nameWithType: TimeSpan
  fullName: System.TimeSpan
- uid: System.ServiceModel.Channels.WebSocketTransportUsage
  commentId: T:System.ServiceModel.Channels.WebSocketTransportUsage
  parent: System.ServiceModel.Channels
  isExternal: false
  name: WebSocketTransportUsage
  nameWithType: WebSocketTransportUsage
  fullName: System.ServiceModel.Channels.WebSocketTransportUsage
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.IEquatable{System.ServiceModel.Channels.WebSocketTransportSettings}.Equals(System.ServiceModel.Channels.WebSocketTransportSettings)
  commentId: M:System.IEquatable{System.ServiceModel.Channels.WebSocketTransportSettings}.Equals(System.ServiceModel.Channels.WebSocketTransportSettings)
  parent: System.IEquatable{System.ServiceModel.Channels.WebSocketTransportSettings}
  definition: System.IEquatable`1.Equals(`0)
  name: Equals(WebSocketTransportSettings)
  nameWithType: IEquatable<WebSocketTransportSettings>.Equals(WebSocketTransportSettings)
  fullName: System.IEquatable<System.ServiceModel.Channels.WebSocketTransportSettings>.Equals(System.ServiceModel.Channels.WebSocketTransportSettings)
  nameWithType.vb: IEquatable(Of WebSocketTransportSettings).Equals(WebSocketTransportSettings)
  fullname.vb: System.IEquatable(Of System.ServiceModel.Channels.WebSocketTransportSettings).Equals(System.ServiceModel.Channels.WebSocketTransportSettings)
  spec.csharp:
  - uid: System.IEquatable`1.Equals(`0)
    name: Equals
    nameWithType: IEquatable<WebSocketTransportSettings>.Equals
    fullName: System.IEquatable<System.ServiceModel.Channels.WebSocketTransportSettings>.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.ServiceModel.Channels.WebSocketTransportSettings
    name: WebSocketTransportSettings
    nameWithType: WebSocketTransportSettings
    fullName: System.ServiceModel.Channels.WebSocketTransportSettings
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.IEquatable`1.Equals(`0)
    name: Equals
    nameWithType: IEquatable(Of WebSocketTransportSettings).Equals
    fullName: System.IEquatable(Of System.ServiceModel.Channels.WebSocketTransportSettings).Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.ServiceModel.Channels.WebSocketTransportSettings
    name: WebSocketTransportSettings
    nameWithType: WebSocketTransportSettings
    fullName: System.ServiceModel.Channels.WebSocketTransportSettings
  - name: )
    nameWithType: )
    fullName: )
- uid: System.ServiceModel.Channels.WebSocketTransportSettings
  commentId: T:System.ServiceModel.Channels.WebSocketTransportSettings
  parent: System.ServiceModel.Channels
  isExternal: false
  name: WebSocketTransportSettings
  nameWithType: WebSocketTransportSettings
  fullName: System.ServiceModel.Channels.WebSocketTransportSettings
- uid: System.IEquatable`1.Equals(`0)
  commentId: M:System.IEquatable`1.Equals(`0)
  isExternal: false
  name: Equals(T)
  nameWithType: IEquatable<T>.Equals(T)
  fullName: System.IEquatable<T>.Equals(T)
  nameWithType.vb: IEquatable(Of T).Equals(T)
  fullname.vb: System.IEquatable(Of T).Equals(T)
  spec.csharp:
  - uid: System.IEquatable`1.Equals(`0)
    name: Equals
    nameWithType: IEquatable<T>.Equals
    fullName: System.IEquatable<T>.Equals
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.IEquatable`1.Equals(`0)
    name: Equals
    nameWithType: IEquatable(Of T).Equals
    fullName: System.IEquatable(Of T).Equals
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: false
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
