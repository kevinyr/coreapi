items:
- uid: System.ServiceModel.InstanceContext
  commentId: T:System.ServiceModel.InstanceContext
  id: InstanceContext
  parent: System.ServiceModel
  children:
  - System.ServiceModel.InstanceContext.#ctor(System.Object)
  - System.ServiceModel.InstanceContext.DefaultCloseTimeout
  - System.ServiceModel.InstanceContext.DefaultOpenTimeout
  - System.ServiceModel.InstanceContext.GetServiceInstance(System.ServiceModel.Channels.Message)
  - System.ServiceModel.InstanceContext.OnAbort
  - System.ServiceModel.InstanceContext.OnBeginClose(System.TimeSpan,System.AsyncCallback,System.Object)
  - System.ServiceModel.InstanceContext.OnBeginOpen(System.TimeSpan,System.AsyncCallback,System.Object)
  - System.ServiceModel.InstanceContext.OnClose(System.TimeSpan)
  - System.ServiceModel.InstanceContext.OnClosed
  - System.ServiceModel.InstanceContext.OnEndClose(System.IAsyncResult)
  - System.ServiceModel.InstanceContext.OnEndOpen(System.IAsyncResult)
  - System.ServiceModel.InstanceContext.OnFaulted
  - System.ServiceModel.InstanceContext.OnOpen(System.TimeSpan)
  - System.ServiceModel.InstanceContext.OnOpened
  - System.ServiceModel.InstanceContext.OnOpening
  - System.ServiceModel.InstanceContext.SynchronizationContext
  langs:
  - csharp
  - vb
  name: InstanceContext
  fullName: System.ServiceModel.InstanceContext
  type: Class
  source:
    remote:
      path: src/System.ServiceModel.Duplex/ref/System.ServiceModel.Duplex.cs
      branch: master
      repo: https://github.com/dotnet/wcf.git
    id: InstanceContext
    path: src/System.ServiceModel.Duplex/ref/System.ServiceModel.Duplex.cs
    startLine: 40
  assemblies:
  - System.ServiceModel.Duplex
  namespace: System.ServiceModel
  summary: "\n<p>Represents the context information for a service instance.</p>\n"
  syntax:
    content: 'public sealed class InstanceContext : Channels.CommunicationObject, IExtensibleObject<InstanceContext>'
    content.vb: >-
      Public NotInheritable Class InstanceContext
          Inherits Channels.CommunicationObject
          Implements IExtensibleObject(Of InstanceContext)
  inheritance:
  - System.Object
  implements:
  - System.ServiceModel.IExtensibleObject{System.ServiceModel.InstanceContext}
  modifiers.csharp:
  - public
  - sealed
  - class
  modifiers.vb:
  - Public
  - NotInheritable
  - Class
  nameWithType: InstanceContext
- uid: System.ServiceModel.InstanceContext.#ctor(System.Object)
  commentId: M:System.ServiceModel.InstanceContext.#ctor(System.Object)
  id: '#ctor(System.Object)'
  parent: System.ServiceModel.InstanceContext
  langs:
  - csharp
  - vb
  name: InstanceContext(Object)
  fullName: System.ServiceModel.InstanceContext.InstanceContext(System.Object)
  type: Constructor
  source:
    remote:
      path: src/System.ServiceModel.Duplex/ref/System.ServiceModel.Duplex.cs
      branch: master
      repo: https://github.com/dotnet/wcf.git
    id: .ctor
    path: src/System.ServiceModel.Duplex/ref/System.ServiceModel.Duplex.cs
    startLine: 42
  assemblies:
  - System.ServiceModel.Duplex
  namespace: System.ServiceModel
  summary: "\n<p>Initializes a new instance of the <xref href=\"System.ServiceModel.InstanceContext\" data-throw-if-not-resolved=\"false\"></xref> class for a specified object that implements the service instance.</p>\n"
  syntax:
    content: public InstanceContext(object implementation)
    content.vb: Public Sub New(implementation As Object)
    parameters:
    - id: implementation
      type: System.Object
      description: "\n<p>The object that implements the service instance.</p>\n"
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  nameWithType: InstanceContext.InstanceContext(Object)
- uid: System.ServiceModel.InstanceContext.DefaultCloseTimeout
  commentId: P:System.ServiceModel.InstanceContext.DefaultCloseTimeout
  id: DefaultCloseTimeout
  parent: System.ServiceModel.InstanceContext
  langs:
  - csharp
  - vb
  name: DefaultCloseTimeout
  fullName: System.ServiceModel.InstanceContext.DefaultCloseTimeout
  type: Property
  source:
    remote:
      path: src/System.ServiceModel.Duplex/ref/System.ServiceModel.Duplex.cs
      branch: master
      repo: https://github.com/dotnet/wcf.git
    id: DefaultCloseTimeout
    path: src/System.ServiceModel.Duplex/ref/System.ServiceModel.Duplex.cs
    startLine: 43
  assemblies:
  - System.ServiceModel.Duplex
  namespace: System.ServiceModel
  syntax:
    content: protected override TimeSpan DefaultCloseTimeout { get; }
    content.vb: Protected Overrides ReadOnly Property DefaultCloseTimeout As TimeSpan
    parameters: []
    return:
      type: System.TimeSpan
  modifiers.csharp:
  - protected
  - override
  - get
  modifiers.vb:
  - Protected
  - Overrides
  - ReadOnly
  nameWithType: InstanceContext.DefaultCloseTimeout
- uid: System.ServiceModel.InstanceContext.DefaultOpenTimeout
  commentId: P:System.ServiceModel.InstanceContext.DefaultOpenTimeout
  id: DefaultOpenTimeout
  parent: System.ServiceModel.InstanceContext
  langs:
  - csharp
  - vb
  name: DefaultOpenTimeout
  fullName: System.ServiceModel.InstanceContext.DefaultOpenTimeout
  type: Property
  source:
    remote:
      path: src/System.ServiceModel.Duplex/ref/System.ServiceModel.Duplex.cs
      branch: master
      repo: https://github.com/dotnet/wcf.git
    id: DefaultOpenTimeout
    path: src/System.ServiceModel.Duplex/ref/System.ServiceModel.Duplex.cs
    startLine: 44
  assemblies:
  - System.ServiceModel.Duplex
  namespace: System.ServiceModel
  syntax:
    content: protected override TimeSpan DefaultOpenTimeout { get; }
    content.vb: Protected Overrides ReadOnly Property DefaultOpenTimeout As TimeSpan
    parameters: []
    return:
      type: System.TimeSpan
  modifiers.csharp:
  - protected
  - override
  - get
  modifiers.vb:
  - Protected
  - Overrides
  - ReadOnly
  nameWithType: InstanceContext.DefaultOpenTimeout
- uid: System.ServiceModel.InstanceContext.SynchronizationContext
  commentId: P:System.ServiceModel.InstanceContext.SynchronizationContext
  id: SynchronizationContext
  parent: System.ServiceModel.InstanceContext
  langs:
  - csharp
  - vb
  name: SynchronizationContext
  fullName: System.ServiceModel.InstanceContext.SynchronizationContext
  type: Property
  source:
    remote:
      path: src/System.ServiceModel.Duplex/ref/System.ServiceModel.Duplex.cs
      branch: master
      repo: https://github.com/dotnet/wcf.git
    id: SynchronizationContext
    path: src/System.ServiceModel.Duplex/ref/System.ServiceModel.Duplex.cs
    startLine: 45
  assemblies:
  - System.ServiceModel.Duplex
  namespace: System.ServiceModel
  summary: "\n<p>Gets or sets the context used for thread synchronization with the current instance context.</p>\n"
  syntax:
    content: public SynchronizationContext SynchronizationContext { get; set; }
    content.vb: Public Property SynchronizationContext As SynchronizationContext
    parameters: []
    return:
      type: System.Threading.SynchronizationContext
      description: "\n<p>The <xref href=\"System.Threading.SynchronizationContext\" data-throw-if-not-resolved=\"false\"></xref> used for thread synchronization with the current instance context.</p>\n"
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "\n<p>The communication object is opened or closing and cannot be modified in these states.</p>\n"
  - type: System.ServiceModel.CommunicationObjectAbortedException
    commentId: T:System.ServiceModel.CommunicationObjectAbortedException
    description: "\n<p>The communication object has been aborted and cannot be modified in these states.</p>\n"
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: "\n<p>The communication object has been closed already and cannot be modified in these states.</p>\n"
  - type: System.ServiceModel.CommunicationObjectFaultedException
    commentId: T:System.ServiceModel.CommunicationObjectFaultedException
    description: "\n<p>The communication object is faulted and cannot be modified in these states.</p>\n"
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
  nameWithType: InstanceContext.SynchronizationContext
- uid: System.ServiceModel.InstanceContext.GetServiceInstance(System.ServiceModel.Channels.Message)
  commentId: M:System.ServiceModel.InstanceContext.GetServiceInstance(System.ServiceModel.Channels.Message)
  id: GetServiceInstance(System.ServiceModel.Channels.Message)
  parent: System.ServiceModel.InstanceContext
  langs:
  - csharp
  - vb
  name: GetServiceInstance(Channels.Message)
  fullName: System.ServiceModel.InstanceContext.GetServiceInstance(System.ServiceModel.Channels.Message)
  type: Method
  source:
    remote:
      path: src/System.ServiceModel.Duplex/ref/System.ServiceModel.Duplex.cs
      branch: master
      repo: https://github.com/dotnet/wcf.git
    id: GetServiceInstance
    path: src/System.ServiceModel.Duplex/ref/System.ServiceModel.Duplex.cs
    startLine: 47
  assemblies:
  - System.ServiceModel.Duplex
  namespace: System.ServiceModel
  summary: "\n<p>Returns the instance of the service for the instance context in response to an incoming message.</p>\n"
  syntax:
    content: public object GetServiceInstance(Channels.Message message)
    content.vb: Public Function GetServiceInstance(message As Channels.Message) As Object
    parameters:
    - id: message
      type: System.ServiceModel.Channels.Message
      description: "\n<p>The incoming message that triggered the creation of a service object.</p>\n"
    return:
      type: System.Object
      description: "\n<p>The object that represents the service instance.</p>\n"
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "\n<p>The service instance is in a created or opening state or is not initialized.</p>\n"
  - type: System.ServiceModel.CommunicationObjectAbortedException
    commentId: T:System.ServiceModel.CommunicationObjectAbortedException
    description: "\n<p>The service instance is aborted.</p>\n"
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: "\n<p>The service instance has been closed already and cannot be modified in these states.</p>\n"
  - type: System.ServiceModel.CommunicationObjectFaultedException
    commentId: T:System.ServiceModel.CommunicationObjectFaultedException
    description: "\n<p>The service instance is faulted and cannot be modified in these states.</p>\n"
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  nameWithType: InstanceContext.GetServiceInstance(Channels.Message)
- uid: System.ServiceModel.InstanceContext.OnAbort
  commentId: M:System.ServiceModel.InstanceContext.OnAbort
  id: OnAbort
  parent: System.ServiceModel.InstanceContext
  langs:
  - csharp
  - vb
  name: OnAbort()
  fullName: System.ServiceModel.InstanceContext.OnAbort()
  type: Method
  source:
    remote:
      path: src/System.ServiceModel.Duplex/ref/System.ServiceModel.Duplex.cs
      branch: master
      repo: https://github.com/dotnet/wcf.git
    id: OnAbort
    path: src/System.ServiceModel.Duplex/ref/System.ServiceModel.Duplex.cs
    startLine: 48
  assemblies:
  - System.ServiceModel.Duplex
  namespace: System.ServiceModel
  syntax:
    content: protected override void OnAbort()
    content.vb: Protected Overrides Sub OnAbort
  modifiers.csharp:
  - protected
  - override
  modifiers.vb:
  - Protected
  - Overrides
  nameWithType: InstanceContext.OnAbort()
- uid: System.ServiceModel.InstanceContext.OnBeginClose(System.TimeSpan,System.AsyncCallback,System.Object)
  commentId: M:System.ServiceModel.InstanceContext.OnBeginClose(System.TimeSpan,System.AsyncCallback,System.Object)
  id: OnBeginClose(System.TimeSpan,System.AsyncCallback,System.Object)
  parent: System.ServiceModel.InstanceContext
  langs:
  - csharp
  - vb
  name: OnBeginClose(TimeSpan, AsyncCallback, Object)
  fullName: System.ServiceModel.InstanceContext.OnBeginClose(System.TimeSpan, System.AsyncCallback, System.Object)
  type: Method
  source:
    remote:
      path: src/System.ServiceModel.Duplex/ref/System.ServiceModel.Duplex.cs
      branch: master
      repo: https://github.com/dotnet/wcf.git
    id: OnBeginClose
    path: src/System.ServiceModel.Duplex/ref/System.ServiceModel.Duplex.cs
    startLine: 49
  assemblies:
  - System.ServiceModel.Duplex
  namespace: System.ServiceModel
  syntax:
    content: protected override IAsyncResult OnBeginClose(TimeSpan timeout, AsyncCallback callback, object state)
    content.vb: Protected Overrides Function OnBeginClose(timeout As TimeSpan, callback As AsyncCallback, state As Object) As IAsyncResult
    parameters:
    - id: timeout
      type: System.TimeSpan
    - id: callback
      type: System.AsyncCallback
    - id: state
      type: System.Object
    return:
      type: System.IAsyncResult
  modifiers.csharp:
  - protected
  - override
  modifiers.vb:
  - Protected
  - Overrides
  nameWithType: InstanceContext.OnBeginClose(TimeSpan, AsyncCallback, Object)
- uid: System.ServiceModel.InstanceContext.OnBeginOpen(System.TimeSpan,System.AsyncCallback,System.Object)
  commentId: M:System.ServiceModel.InstanceContext.OnBeginOpen(System.TimeSpan,System.AsyncCallback,System.Object)
  id: OnBeginOpen(System.TimeSpan,System.AsyncCallback,System.Object)
  parent: System.ServiceModel.InstanceContext
  langs:
  - csharp
  - vb
  name: OnBeginOpen(TimeSpan, AsyncCallback, Object)
  fullName: System.ServiceModel.InstanceContext.OnBeginOpen(System.TimeSpan, System.AsyncCallback, System.Object)
  type: Method
  source:
    remote:
      path: src/System.ServiceModel.Duplex/ref/System.ServiceModel.Duplex.cs
      branch: master
      repo: https://github.com/dotnet/wcf.git
    id: OnBeginOpen
    path: src/System.ServiceModel.Duplex/ref/System.ServiceModel.Duplex.cs
    startLine: 50
  assemblies:
  - System.ServiceModel.Duplex
  namespace: System.ServiceModel
  syntax:
    content: protected override IAsyncResult OnBeginOpen(TimeSpan timeout, AsyncCallback callback, object state)
    content.vb: Protected Overrides Function OnBeginOpen(timeout As TimeSpan, callback As AsyncCallback, state As Object) As IAsyncResult
    parameters:
    - id: timeout
      type: System.TimeSpan
    - id: callback
      type: System.AsyncCallback
    - id: state
      type: System.Object
    return:
      type: System.IAsyncResult
  modifiers.csharp:
  - protected
  - override
  modifiers.vb:
  - Protected
  - Overrides
  nameWithType: InstanceContext.OnBeginOpen(TimeSpan, AsyncCallback, Object)
- uid: System.ServiceModel.InstanceContext.OnClose(System.TimeSpan)
  commentId: M:System.ServiceModel.InstanceContext.OnClose(System.TimeSpan)
  id: OnClose(System.TimeSpan)
  parent: System.ServiceModel.InstanceContext
  langs:
  - csharp
  - vb
  name: OnClose(TimeSpan)
  fullName: System.ServiceModel.InstanceContext.OnClose(System.TimeSpan)
  type: Method
  source:
    remote:
      path: src/System.ServiceModel.Duplex/ref/System.ServiceModel.Duplex.cs
      branch: master
      repo: https://github.com/dotnet/wcf.git
    id: OnClose
    path: src/System.ServiceModel.Duplex/ref/System.ServiceModel.Duplex.cs
    startLine: 51
  assemblies:
  - System.ServiceModel.Duplex
  namespace: System.ServiceModel
  syntax:
    content: protected override void OnClose(TimeSpan timeout)
    content.vb: Protected Overrides Sub OnClose(timeout As TimeSpan)
    parameters:
    - id: timeout
      type: System.TimeSpan
  modifiers.csharp:
  - protected
  - override
  modifiers.vb:
  - Protected
  - Overrides
  nameWithType: InstanceContext.OnClose(TimeSpan)
- uid: System.ServiceModel.InstanceContext.OnClosed
  commentId: M:System.ServiceModel.InstanceContext.OnClosed
  id: OnClosed
  parent: System.ServiceModel.InstanceContext
  langs:
  - csharp
  - vb
  name: OnClosed()
  fullName: System.ServiceModel.InstanceContext.OnClosed()
  type: Method
  source:
    remote:
      path: src/System.ServiceModel.Duplex/ref/System.ServiceModel.Duplex.cs
      branch: master
      repo: https://github.com/dotnet/wcf.git
    id: OnClosed
    path: src/System.ServiceModel.Duplex/ref/System.ServiceModel.Duplex.cs
    startLine: 52
  assemblies:
  - System.ServiceModel.Duplex
  namespace: System.ServiceModel
  syntax:
    content: protected override void OnClosed()
    content.vb: Protected Overrides Sub OnClosed
  modifiers.csharp:
  - protected
  - override
  modifiers.vb:
  - Protected
  - Overrides
  nameWithType: InstanceContext.OnClosed()
- uid: System.ServiceModel.InstanceContext.OnEndClose(System.IAsyncResult)
  commentId: M:System.ServiceModel.InstanceContext.OnEndClose(System.IAsyncResult)
  id: OnEndClose(System.IAsyncResult)
  parent: System.ServiceModel.InstanceContext
  langs:
  - csharp
  - vb
  name: OnEndClose(IAsyncResult)
  fullName: System.ServiceModel.InstanceContext.OnEndClose(System.IAsyncResult)
  type: Method
  source:
    remote:
      path: src/System.ServiceModel.Duplex/ref/System.ServiceModel.Duplex.cs
      branch: master
      repo: https://github.com/dotnet/wcf.git
    id: OnEndClose
    path: src/System.ServiceModel.Duplex/ref/System.ServiceModel.Duplex.cs
    startLine: 53
  assemblies:
  - System.ServiceModel.Duplex
  namespace: System.ServiceModel
  syntax:
    content: protected override void OnEndClose(IAsyncResult result)
    content.vb: Protected Overrides Sub OnEndClose(result As IAsyncResult)
    parameters:
    - id: result
      type: System.IAsyncResult
  modifiers.csharp:
  - protected
  - override
  modifiers.vb:
  - Protected
  - Overrides
  nameWithType: InstanceContext.OnEndClose(IAsyncResult)
- uid: System.ServiceModel.InstanceContext.OnEndOpen(System.IAsyncResult)
  commentId: M:System.ServiceModel.InstanceContext.OnEndOpen(System.IAsyncResult)
  id: OnEndOpen(System.IAsyncResult)
  parent: System.ServiceModel.InstanceContext
  langs:
  - csharp
  - vb
  name: OnEndOpen(IAsyncResult)
  fullName: System.ServiceModel.InstanceContext.OnEndOpen(System.IAsyncResult)
  type: Method
  source:
    remote:
      path: src/System.ServiceModel.Duplex/ref/System.ServiceModel.Duplex.cs
      branch: master
      repo: https://github.com/dotnet/wcf.git
    id: OnEndOpen
    path: src/System.ServiceModel.Duplex/ref/System.ServiceModel.Duplex.cs
    startLine: 54
  assemblies:
  - System.ServiceModel.Duplex
  namespace: System.ServiceModel
  syntax:
    content: protected override void OnEndOpen(IAsyncResult result)
    content.vb: Protected Overrides Sub OnEndOpen(result As IAsyncResult)
    parameters:
    - id: result
      type: System.IAsyncResult
  modifiers.csharp:
  - protected
  - override
  modifiers.vb:
  - Protected
  - Overrides
  nameWithType: InstanceContext.OnEndOpen(IAsyncResult)
- uid: System.ServiceModel.InstanceContext.OnFaulted
  commentId: M:System.ServiceModel.InstanceContext.OnFaulted
  id: OnFaulted
  parent: System.ServiceModel.InstanceContext
  langs:
  - csharp
  - vb
  name: OnFaulted()
  fullName: System.ServiceModel.InstanceContext.OnFaulted()
  type: Method
  source:
    remote:
      path: src/System.ServiceModel.Duplex/ref/System.ServiceModel.Duplex.cs
      branch: master
      repo: https://github.com/dotnet/wcf.git
    id: OnFaulted
    path: src/System.ServiceModel.Duplex/ref/System.ServiceModel.Duplex.cs
    startLine: 55
  assemblies:
  - System.ServiceModel.Duplex
  namespace: System.ServiceModel
  syntax:
    content: protected override void OnFaulted()
    content.vb: Protected Overrides Sub OnFaulted
  modifiers.csharp:
  - protected
  - override
  modifiers.vb:
  - Protected
  - Overrides
  nameWithType: InstanceContext.OnFaulted()
- uid: System.ServiceModel.InstanceContext.OnOpen(System.TimeSpan)
  commentId: M:System.ServiceModel.InstanceContext.OnOpen(System.TimeSpan)
  id: OnOpen(System.TimeSpan)
  parent: System.ServiceModel.InstanceContext
  langs:
  - csharp
  - vb
  name: OnOpen(TimeSpan)
  fullName: System.ServiceModel.InstanceContext.OnOpen(System.TimeSpan)
  type: Method
  source:
    remote:
      path: src/System.ServiceModel.Duplex/ref/System.ServiceModel.Duplex.cs
      branch: master
      repo: https://github.com/dotnet/wcf.git
    id: OnOpen
    path: src/System.ServiceModel.Duplex/ref/System.ServiceModel.Duplex.cs
    startLine: 56
  assemblies:
  - System.ServiceModel.Duplex
  namespace: System.ServiceModel
  syntax:
    content: protected override void OnOpen(TimeSpan timeout)
    content.vb: Protected Overrides Sub OnOpen(timeout As TimeSpan)
    parameters:
    - id: timeout
      type: System.TimeSpan
  modifiers.csharp:
  - protected
  - override
  modifiers.vb:
  - Protected
  - Overrides
  nameWithType: InstanceContext.OnOpen(TimeSpan)
- uid: System.ServiceModel.InstanceContext.OnOpened
  commentId: M:System.ServiceModel.InstanceContext.OnOpened
  id: OnOpened
  parent: System.ServiceModel.InstanceContext
  langs:
  - csharp
  - vb
  name: OnOpened()
  fullName: System.ServiceModel.InstanceContext.OnOpened()
  type: Method
  source:
    remote:
      path: src/System.ServiceModel.Duplex/ref/System.ServiceModel.Duplex.cs
      branch: master
      repo: https://github.com/dotnet/wcf.git
    id: OnOpened
    path: src/System.ServiceModel.Duplex/ref/System.ServiceModel.Duplex.cs
    startLine: 57
  assemblies:
  - System.ServiceModel.Duplex
  namespace: System.ServiceModel
  syntax:
    content: protected override void OnOpened()
    content.vb: Protected Overrides Sub OnOpened
  modifiers.csharp:
  - protected
  - override
  modifiers.vb:
  - Protected
  - Overrides
  nameWithType: InstanceContext.OnOpened()
- uid: System.ServiceModel.InstanceContext.OnOpening
  commentId: M:System.ServiceModel.InstanceContext.OnOpening
  id: OnOpening
  parent: System.ServiceModel.InstanceContext
  langs:
  - csharp
  - vb
  name: OnOpening()
  fullName: System.ServiceModel.InstanceContext.OnOpening()
  type: Method
  source:
    remote:
      path: src/System.ServiceModel.Duplex/ref/System.ServiceModel.Duplex.cs
      branch: master
      repo: https://github.com/dotnet/wcf.git
    id: OnOpening
    path: src/System.ServiceModel.Duplex/ref/System.ServiceModel.Duplex.cs
    startLine: 58
  assemblies:
  - System.ServiceModel.Duplex
  namespace: System.ServiceModel
  syntax:
    content: protected override void OnOpening()
    content.vb: Protected Overrides Sub OnOpening
  modifiers.csharp:
  - protected
  - override
  modifiers.vb:
  - Protected
  - Overrides
  nameWithType: InstanceContext.OnOpening()
references:
- uid: System.ServiceModel
  isExternal: false
  name: System.ServiceModel
  fullName: System.ServiceModel
  commentId: N:System.ServiceModel
  nameWithType: System.ServiceModel
- uid: System.Object
  parent: System
  isExternal: false
  name: Object
  fullName: System.Object
  commentId: T:System.Object
  nameWithType: Object
- uid: System.ServiceModel.IExtensibleObject{System.ServiceModel.InstanceContext}
  definition: System.ServiceModel.IExtensibleObject`1
  name: IExtensibleObject<InstanceContext>
  fullName: System.ServiceModel.IExtensibleObject<System.ServiceModel.InstanceContext>
  fullname.vb: System.ServiceModel.IExtensibleObject(Of System.ServiceModel.InstanceContext)
  name.vb: IExtensibleObject(Of InstanceContext)
  spec.csharp:
  - uid: System.ServiceModel.IExtensibleObject`1
    name: IExtensibleObject
    fullName: System.ServiceModel.IExtensibleObject
    isExternal: true
  - name: <
    fullName: <
  - uid: System.ServiceModel.InstanceContext
    name: InstanceContext
    fullName: System.ServiceModel.InstanceContext
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: System.ServiceModel.IExtensibleObject`1
    name: IExtensibleObject
    fullName: System.ServiceModel.IExtensibleObject
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - uid: System.ServiceModel.InstanceContext
    name: InstanceContext
    fullName: System.ServiceModel.InstanceContext
  - name: )
    fullName: )
  commentId: '!:System.ServiceModel.IExtensibleObject{System.ServiceModel.InstanceContext}'
  nameWithType: IExtensibleObject<InstanceContext>
  nameWithType.vb: IExtensibleObject(Of InstanceContext)
- uid: System
  isExternal: false
  name: System
  fullName: System
  commentId: N:System
  nameWithType: System
- uid: System.ServiceModel.IExtensibleObject`1
  isExternal: false
  name: IExtensibleObject<T>
  fullName: System.ServiceModel.IExtensibleObject<T>
  fullname.vb: System.ServiceModel.IExtensibleObject(Of T)
  name.vb: IExtensibleObject(Of T)
  spec.csharp:
  - uid: System.ServiceModel.IExtensibleObject`1
    name: IExtensibleObject
    fullName: System.ServiceModel.IExtensibleObject
  - name: <
    fullName: <
  - name: T
    fullName: T
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: System.ServiceModel.IExtensibleObject`1
    name: IExtensibleObject
    fullName: System.ServiceModel.IExtensibleObject
  - name: '(Of '
    fullName: '(Of '
  - name: T
    fullName: T
  - name: )
    fullName: )
  commentId: T:System.ServiceModel.IExtensibleObject`1
  nameWithType: IExtensibleObject<T>
  nameWithType.vb: IExtensibleObject(Of T)
- uid: System.TimeSpan
  parent: System
  isExternal: false
  name: TimeSpan
  fullName: System.TimeSpan
  commentId: T:System.TimeSpan
  nameWithType: TimeSpan
- uid: System.Threading.SynchronizationContext
  parent: System.Threading
  isExternal: false
  name: SynchronizationContext
  fullName: System.Threading.SynchronizationContext
  commentId: T:System.Threading.SynchronizationContext
  nameWithType: SynchronizationContext
- uid: System.Threading
  isExternal: false
  name: System.Threading
  fullName: System.Threading
  commentId: N:System.Threading
  nameWithType: System.Threading
- uid: System.ServiceModel.Channels.Message
  parent: System.ServiceModel.Channels
  isExternal: false
  name: Message
  fullName: System.ServiceModel.Channels.Message
  commentId: T:System.ServiceModel.Channels.Message
  nameWithType: Message
- uid: System.ServiceModel.Channels
  isExternal: false
  name: System.ServiceModel.Channels
  fullName: System.ServiceModel.Channels
  commentId: N:System.ServiceModel.Channels
  nameWithType: System.ServiceModel.Channels
- uid: System.AsyncCallback
  parent: System
  isExternal: false
  name: AsyncCallback
  fullName: System.AsyncCallback
  commentId: T:System.AsyncCallback
  nameWithType: AsyncCallback
- uid: System.IAsyncResult
  parent: System
  isExternal: false
  name: IAsyncResult
  fullName: System.IAsyncResult
  commentId: T:System.IAsyncResult
  nameWithType: IAsyncResult
- uid: System.InvalidOperationException
  parent: System
  isExternal: false
  name: InvalidOperationException
  fullName: System.InvalidOperationException
  nameWithType: InvalidOperationException
  commentId: T:System.InvalidOperationException
- uid: System.ServiceModel.CommunicationObjectAbortedException
  isExternal: false
  name: CommunicationObjectAbortedException
  fullName: System.ServiceModel.CommunicationObjectAbortedException
  commentId: T:System.ServiceModel.CommunicationObjectAbortedException
  nameWithType: CommunicationObjectAbortedException
- uid: System.ObjectDisposedException
  isExternal: false
  name: ObjectDisposedException
  fullName: System.ObjectDisposedException
  nameWithType: ObjectDisposedException
  commentId: T:System.ObjectDisposedException
- uid: System.ServiceModel.CommunicationObjectFaultedException
  isExternal: false
  name: CommunicationObjectFaultedException
  fullName: System.ServiceModel.CommunicationObjectFaultedException
  commentId: T:System.ServiceModel.CommunicationObjectFaultedException
  nameWithType: CommunicationObjectFaultedException
