### YamlMime:ManagedReference
items:
- uid: System.Collections.Specialized.BitVector32.Section
  commentId: T:System.Collections.Specialized.BitVector32.Section
  id: BitVector32.Section
  parent: System.Collections.Specialized
  children:
  - System.Collections.Specialized.BitVector32.Section.Equals(System.Collections.Specialized.BitVector32.Section)
  - System.Collections.Specialized.BitVector32.Section.Equals(System.Object)
  - System.Collections.Specialized.BitVector32.Section.GetHashCode
  - System.Collections.Specialized.BitVector32.Section.Mask
  - System.Collections.Specialized.BitVector32.Section.Offset
  - System.Collections.Specialized.BitVector32.Section.op_Equality(System.Collections.Specialized.BitVector32.Section,System.Collections.Specialized.BitVector32.Section)
  - System.Collections.Specialized.BitVector32.Section.op_Inequality(System.Collections.Specialized.BitVector32.Section,System.Collections.Specialized.BitVector32.Section)
  - System.Collections.Specialized.BitVector32.Section.ToString
  - System.Collections.Specialized.BitVector32.Section.ToString(System.Collections.Specialized.BitVector32.Section)
  langs:
  - csharp
  - vb
  name: BitVector32.Section
  nameWithType: BitVector32.Section
  fullName: System.Collections.Specialized.BitVector32.Section
  type: Struct
  source:
    remote:
      path: src/System.Collections.Specialized/src/System/Collections/Specialized/BitVector32.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: Section
    path: src/System.Collections.Specialized/src/System/Collections/Specialized/BitVector32.cs
    startLine: 226
  assemblies:
  - System.Collections.Specialized
  namespace: System.Collections.Specialized
  summary: "\n<p>Represents a section of the vector that can contain an integer number.</p>\n"
  syntax:
    content: public struct Section
    content.vb: Public Structure Section
  seealso:
  - linkId: System.Collections.Specialized.BitVector32.CreateSection(System.Int16)
    commentId: M:System.Collections.Specialized.BitVector32.CreateSection(System.Int16)
  inheritedMembers:
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetType
  attributes:
  - type: System.Runtime.InteropServices.StructLayoutAttribute
    ctor: System.Runtime.InteropServices.StructLayoutAttribute.#ctor(System.Runtime.InteropServices.LayoutKind)
    arguments:
    - type: System.Runtime.InteropServices.LayoutKind
      value: 0
  modifiers.csharp:
  - public
  - struct
  modifiers.vb:
  - Public
  - Structure
- uid: System.Collections.Specialized.BitVector32.Section.Mask
  commentId: P:System.Collections.Specialized.BitVector32.Section.Mask
  id: Mask
  parent: System.Collections.Specialized.BitVector32.Section
  langs:
  - csharp
  - vb
  name: Mask
  nameWithType: BitVector32.Section.Mask
  fullName: System.Collections.Specialized.BitVector32.Section.Mask
  type: Property
  source:
    remote:
      path: src/System.Collections.Specialized/src/System/Collections/Specialized/BitVector32.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: Mask
    path: src/System.Collections.Specialized/src/System/Collections/Specialized/BitVector32.cs
    startLine: 237
  assemblies:
  - System.Collections.Specialized
  namespace: System.Collections.Specialized
  summary: "\n<p>Gets a mask that isolates this section within the <xref href=\"System.Collections.Specialized.BitVector32\" data-throw-if-not-resolved=\"false\"></xref>.</p>\n"
  syntax:
    content: public short Mask { get; }
    content.vb: Public ReadOnly Property Mask As Short
    parameters: []
    return:
      type: System.Int16
      description: "\n<p>A mask that isolates this section within the <xref href=\"System.Collections.Specialized.BitVector32\" data-throw-if-not-resolved=\"false\"></xref>.</p>\n"
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: System.Collections.Specialized.BitVector32.Section.Offset
  commentId: P:System.Collections.Specialized.BitVector32.Section.Offset
  id: Offset
  parent: System.Collections.Specialized.BitVector32.Section
  langs:
  - csharp
  - vb
  name: Offset
  nameWithType: BitVector32.Section.Offset
  fullName: System.Collections.Specialized.BitVector32.Section.Offset
  type: Property
  source:
    remote:
      path: src/System.Collections.Specialized/src/System/Collections/Specialized/BitVector32.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: Offset
    path: src/System.Collections.Specialized/src/System/Collections/Specialized/BitVector32.cs
    startLine: 245
  assemblies:
  - System.Collections.Specialized
  namespace: System.Collections.Specialized
  summary: "\n<p>Gets the offset of this section from the start of the <xref href=\"System.Collections.Specialized.BitVector32\" data-throw-if-not-resolved=\"false\"></xref>.</p>\n"
  syntax:
    content: public short Offset { get; }
    content.vb: Public ReadOnly Property Offset As Short
    parameters: []
    return:
      type: System.Int16
      description: "\n<p>The offset of this section from the start of the <xref href=\"System.Collections.Specialized.BitVector32\" data-throw-if-not-resolved=\"false\"></xref>.</p>\n"
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: System.Collections.Specialized.BitVector32.Section.Equals(System.Collections.Specialized.BitVector32.Section)
  commentId: M:System.Collections.Specialized.BitVector32.Section.Equals(System.Collections.Specialized.BitVector32.Section)
  id: Equals(System.Collections.Specialized.BitVector32.Section)
  parent: System.Collections.Specialized.BitVector32.Section
  langs:
  - csharp
  - vb
  name: Equals(BitVector32.Section)
  nameWithType: BitVector32.Section.Equals(BitVector32.Section)
  fullName: System.Collections.Specialized.BitVector32.Section.Equals(System.Collections.Specialized.BitVector32.Section)
  type: Method
  source:
    remote:
      path: src/System.Collections.Specialized/src/System/Collections/Specialized/BitVector32.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: Equals
    path: src/System.Collections.Specialized/src/System/Collections/Specialized/BitVector32.cs
    startLine: 261
  assemblies:
  - System.Collections.Specialized
  namespace: System.Collections.Specialized
  summary: "\n<p>Determines whether the specified <xref href=\"System.Collections.Specialized.BitVector32.Section\" data-throw-if-not-resolved=\"false\"></xref> object is the same as the current <xref href=\"System.Collections.Specialized.BitVector32.Section\" data-throw-if-not-resolved=\"false\"></xref> object.</p>\n"
  syntax:
    content: public bool Equals(BitVector32.Section obj)
    content.vb: Public Function Equals(obj As BitVector32.Section) As Boolean
    parameters:
    - id: obj
      type: System.Collections.Specialized.BitVector32.Section
      description: "\n<p>The <xref href=\"System.Collections.Specialized.BitVector32.Section\" data-throw-if-not-resolved=\"false\"></xref> object to compare with the current <xref href=\"System.Collections.Specialized.BitVector32.Section\" data-throw-if-not-resolved=\"false\"></xref> object.</p>\n"
    return:
      type: System.Boolean
      description: "\n<p>\n<strong>true</strong> if the <em>obj</em> parameter is the same as the current <xref href=\"System.Collections.Specialized.BitVector32.Section\" data-throw-if-not-resolved=\"false\"></xref> object; otherwise <strong>false</strong>.</p>\n"
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: System.Collections.Specialized.BitVector32.Section.Equals(System.Object)
  commentId: M:System.Collections.Specialized.BitVector32.Section.Equals(System.Object)
  id: Equals(System.Object)
  parent: System.Collections.Specialized.BitVector32.Section
  langs:
  - csharp
  - vb
  name: Equals(Object)
  nameWithType: BitVector32.Section.Equals(Object)
  fullName: System.Collections.Specialized.BitVector32.Section.Equals(System.Object)
  type: Method
  source:
    remote:
      path: src/System.Collections.Specialized/src/System/Collections/Specialized/BitVector32.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: Equals
    path: src/System.Collections.Specialized/src/System/Collections/Specialized/BitVector32.cs
    startLine: 253
  assemblies:
  - System.Collections.Specialized
  namespace: System.Collections.Specialized
  summary: "\n<p>Determines whether the specified object is the same as the current <xref href=\"System.Collections.Specialized.BitVector32.Section\" data-throw-if-not-resolved=\"false\"></xref> object.</p>\n"
  syntax:
    content: public override bool Equals(object o)
    content.vb: Public Overrides Function Equals(o As Object) As Boolean
    parameters:
    - id: o
      type: System.Object
      description: "\n<p>The object to compare with the current <xref href=\"System.Collections.Specialized.BitVector32.Section\" data-throw-if-not-resolved=\"false\"></xref>.</p>\n"
    return:
      type: System.Boolean
      description: "\n<p>\n<strong>true</strong> if the specified object is the same as the current <xref href=\"System.Collections.Specialized.BitVector32.Section\" data-throw-if-not-resolved=\"false\"></xref> object; otherwise, <strong>false</strong>.</p>\n"
  overridden: System.ValueType.Equals(System.Object)
  seealso:
  - linkId: System.Object.Equals(System.Object)
    commentId: M:System.Object.Equals(System.Object)
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
- uid: System.Collections.Specialized.BitVector32.Section.GetHashCode
  commentId: M:System.Collections.Specialized.BitVector32.Section.GetHashCode
  id: GetHashCode
  parent: System.Collections.Specialized.BitVector32.Section
  langs:
  - csharp
  - vb
  name: GetHashCode()
  nameWithType: BitVector32.Section.GetHashCode()
  fullName: System.Collections.Specialized.BitVector32.Section.GetHashCode()
  type: Method
  source:
    remote:
      path: src/System.Collections.Specialized/src/System/Collections/Specialized/BitVector32.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: GetHashCode
    path: src/System.Collections.Specialized/src/System/Collections/Specialized/BitVector32.cs
    startLine: 276
  assemblies:
  - System.Collections.Specialized
  namespace: System.Collections.Specialized
  summary: "\n<p>Serves as a hash function for the current <xref href=\"System.Collections.Specialized.BitVector32.Section\" data-throw-if-not-resolved=\"false\"></xref>, suitable for hashing algorithms and data structures, such as a hash table.</p>\n"
  syntax:
    content: public override int GetHashCode()
    content.vb: Public Overrides Function GetHashCode As Integer
    return:
      type: System.Int32
      description: "\n<p>A hash code for the current <xref href=\"System.Collections.Specialized.BitVector32.Section\" data-throw-if-not-resolved=\"false\"></xref>.</p>\n"
  overridden: System.ValueType.GetHashCode
  seealso:
  - linkId: System.Object.GetHashCode
    commentId: M:System.Object.GetHashCode
  - linkId: System.Collections.Hashtable
    commentId: T:System.Collections.Hashtable
  - linkId: System.Collections.Specialized.BitVector32.Section.Equals(System.Object)
    commentId: M:System.Collections.Specialized.BitVector32.Section.Equals(System.Object)
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
- uid: System.Collections.Specialized.BitVector32.Section.op_Equality(System.Collections.Specialized.BitVector32.Section,System.Collections.Specialized.BitVector32.Section)
  commentId: M:System.Collections.Specialized.BitVector32.Section.op_Equality(System.Collections.Specialized.BitVector32.Section,System.Collections.Specialized.BitVector32.Section)
  id: op_Equality(System.Collections.Specialized.BitVector32.Section,System.Collections.Specialized.BitVector32.Section)
  parent: System.Collections.Specialized.BitVector32.Section
  langs:
  - csharp
  - vb
  name: Equality(BitVector32.Section, BitVector32.Section)
  nameWithType: BitVector32.Section.Equality(BitVector32.Section, BitVector32.Section)
  fullName: System.Collections.Specialized.BitVector32.Section.Equality(System.Collections.Specialized.BitVector32.Section, System.Collections.Specialized.BitVector32.Section)
  type: Operator
  source:
    remote:
      path: src/System.Collections.Specialized/src/System/Collections/Specialized/BitVector32.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: op_Equality
    path: src/System.Collections.Specialized/src/System/Collections/Specialized/BitVector32.cs
    startLine: 266
  assemblies:
  - System.Collections.Specialized
  namespace: System.Collections.Specialized
  summary: "\n<p>Determines whether two specified <xref href=\"System.Collections.Specialized.BitVector32.Section\" data-throw-if-not-resolved=\"false\"></xref> objects are equal.</p>\n"
  syntax:
    content: public static bool operator ==(BitVector32.Section a, BitVector32.Section b)
    content.vb: Public Shared Operator =(a As BitVector32.Section, b As BitVector32.Section) As Boolean
    parameters:
    - id: a
      type: System.Collections.Specialized.BitVector32.Section
      description: "\n<p>A <xref href=\"System.Collections.Specialized.BitVector32.Section\" data-throw-if-not-resolved=\"false\"></xref> object.</p>\n"
    - id: b
      type: System.Collections.Specialized.BitVector32.Section
      description: "\n<p>A <xref href=\"System.Collections.Specialized.BitVector32.Section\" data-throw-if-not-resolved=\"false\"></xref> object.</p>\n"
    return:
      type: System.Boolean
      description: "\n<p>\n<strong>true</strong> if the <em>a</em> and <em>b</em> parameters represent the same <xref href=\"System.Collections.Specialized.BitVector32.Section\" data-throw-if-not-resolved=\"false\"></xref> object, otherwise, <strong>false</strong>.</p>\n"
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: System.Collections.Specialized.BitVector32.Section.op_Inequality(System.Collections.Specialized.BitVector32.Section,System.Collections.Specialized.BitVector32.Section)
  commentId: M:System.Collections.Specialized.BitVector32.Section.op_Inequality(System.Collections.Specialized.BitVector32.Section,System.Collections.Specialized.BitVector32.Section)
  id: op_Inequality(System.Collections.Specialized.BitVector32.Section,System.Collections.Specialized.BitVector32.Section)
  parent: System.Collections.Specialized.BitVector32.Section
  langs:
  - csharp
  - vb
  name: Inequality(BitVector32.Section, BitVector32.Section)
  nameWithType: BitVector32.Section.Inequality(BitVector32.Section, BitVector32.Section)
  fullName: System.Collections.Specialized.BitVector32.Section.Inequality(System.Collections.Specialized.BitVector32.Section, System.Collections.Specialized.BitVector32.Section)
  type: Operator
  source:
    remote:
      path: src/System.Collections.Specialized/src/System/Collections/Specialized/BitVector32.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: op_Inequality
    path: src/System.Collections.Specialized/src/System/Collections/Specialized/BitVector32.cs
    startLine: 271
  assemblies:
  - System.Collections.Specialized
  namespace: System.Collections.Specialized
  summary: "\n<p>Determines whether two <xref href=\"System.Collections.Specialized.BitVector32.Section\" data-throw-if-not-resolved=\"false\"></xref> objects have different values.</p>\n"
  syntax:
    content: public static bool operator !=(BitVector32.Section a, BitVector32.Section b)
    content.vb: Public Shared Operator <>(a As BitVector32.Section, b As BitVector32.Section) As Boolean
    parameters:
    - id: a
      type: System.Collections.Specialized.BitVector32.Section
      description: "\n<p>A <xref href=\"System.Collections.Specialized.BitVector32.Section\" data-throw-if-not-resolved=\"false\"></xref> object.</p>\n"
    - id: b
      type: System.Collections.Specialized.BitVector32.Section
      description: "\n<p>A <xref href=\"System.Collections.Specialized.BitVector32.Section\" data-throw-if-not-resolved=\"false\"></xref> object.</p>\n"
    return:
      type: System.Boolean
      description: "\n<p>\n<strong>true</strong> if the <em>a</em> and <em>b</em> parameters represent different <xref href=\"System.Collections.Specialized.BitVector32.Section\" data-throw-if-not-resolved=\"false\"></xref> objects; otherwise, <strong>false</strong>.</p>\n"
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: System.Collections.Specialized.BitVector32.Section.ToString
  commentId: M:System.Collections.Specialized.BitVector32.Section.ToString
  id: ToString
  parent: System.Collections.Specialized.BitVector32.Section
  langs:
  - csharp
  - vb
  name: ToString()
  nameWithType: BitVector32.Section.ToString()
  fullName: System.Collections.Specialized.BitVector32.Section.ToString()
  type: Method
  source:
    remote:
      path: src/System.Collections.Specialized/src/System/Collections/Specialized/BitVector32.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: ToString
    path: src/System.Collections.Specialized/src/System/Collections/Specialized/BitVector32.cs
    startLine: 286
  assemblies:
  - System.Collections.Specialized
  namespace: System.Collections.Specialized
  summary: "\n<p>Returns a string that represents the current <xref href=\"System.Collections.Specialized.BitVector32.Section\" data-throw-if-not-resolved=\"false\"></xref>.</p>\n"
  syntax:
    content: public override string ToString()
    content.vb: Public Overrides Function ToString As String
    return:
      type: System.String
      description: "\n<p>A string that represents the current <xref href=\"System.Collections.Specialized.BitVector32.Section\" data-throw-if-not-resolved=\"false\"></xref>.</p>\n"
  overridden: System.ValueType.ToString
  seealso:
  - linkId: System.Object.ToString
    commentId: M:System.Object.ToString
  - linkId: System.String
    commentId: T:System.String
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
- uid: System.Collections.Specialized.BitVector32.Section.ToString(System.Collections.Specialized.BitVector32.Section)
  commentId: M:System.Collections.Specialized.BitVector32.Section.ToString(System.Collections.Specialized.BitVector32.Section)
  id: ToString(System.Collections.Specialized.BitVector32.Section)
  parent: System.Collections.Specialized.BitVector32.Section
  langs:
  - csharp
  - vb
  name: ToString(BitVector32.Section)
  nameWithType: BitVector32.Section.ToString(BitVector32.Section)
  fullName: System.Collections.Specialized.BitVector32.Section.ToString(System.Collections.Specialized.BitVector32.Section)
  type: Method
  source:
    remote:
      path: src/System.Collections.Specialized/src/System/Collections/Specialized/BitVector32.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: ToString
    path: src/System.Collections.Specialized/src/System/Collections/Specialized/BitVector32.cs
    startLine: 281
  assemblies:
  - System.Collections.Specialized
  namespace: System.Collections.Specialized
  summary: "\n<p>Returns a string that represents the specified <xref href=\"System.Collections.Specialized.BitVector32.Section\" data-throw-if-not-resolved=\"false\"></xref>.</p>\n"
  syntax:
    content: public static string ToString(BitVector32.Section value)
    content.vb: Public Shared Function ToString(value As BitVector32.Section) As String
    parameters:
    - id: value
      type: System.Collections.Specialized.BitVector32.Section
      description: "\n<p>The <xref href=\"System.Collections.Specialized.BitVector32.Section\" data-throw-if-not-resolved=\"false\"></xref> to represent.</p>\n"
    return:
      type: System.String
      description: "\n<p>A string that represents the specified <xref href=\"System.Collections.Specialized.BitVector32.Section\" data-throw-if-not-resolved=\"false\"></xref>.</p>\n"
  seealso:
  - linkId: System.String
    commentId: T:System.String
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
references:
- uid: System.Collections.Specialized
  commentId: N:System.Collections.Specialized
  isExternal: false
  name: System.Collections.Specialized
  nameWithType: System.Collections.Specialized
  fullName: System.Collections.Specialized
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: false
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: System.Int16
  commentId: T:System.Int16
  parent: System
  isExternal: false
  name: Int16
  nameWithType: Int16
  fullName: System.Int16
- uid: System.Collections.Specialized.BitVector32.Section
  commentId: T:System.Collections.Specialized.BitVector32.Section
  parent: System.Collections.Specialized
  isExternal: false
  name: BitVector32.Section
  nameWithType: BitVector32.Section
  fullName: System.Collections.Specialized.BitVector32.Section
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: false
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.ValueType.Equals(System.Object)
  commentId: M:System.ValueType.Equals(System.Object)
  parent: System.ValueType
  isExternal: true
  name: Equals(Object)
  nameWithType: ValueType.Equals(Object)
  fullName: System.ValueType.Equals(System.Object)
  spec.csharp:
  - uid: System.ValueType.Equals(System.Object)
    name: Equals
    nameWithType: ValueType.Equals
    fullName: System.ValueType.Equals
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.ValueType.Equals(System.Object)
    name: Equals
    nameWithType: ValueType.Equals
    fullName: System.ValueType.Equals
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.ValueType
  commentId: T:System.ValueType
  parent: System
  isExternal: false
  name: ValueType
  nameWithType: ValueType
  fullName: System.ValueType
- uid: System.ValueType.GetHashCode
  commentId: M:System.ValueType.GetHashCode
  parent: System.ValueType
  isExternal: false
  name: GetHashCode()
  nameWithType: ValueType.GetHashCode()
  fullName: System.ValueType.GetHashCode()
  spec.csharp:
  - uid: System.ValueType.GetHashCode
    name: GetHashCode
    nameWithType: ValueType.GetHashCode
    fullName: System.ValueType.GetHashCode
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.ValueType.GetHashCode
    name: GetHashCode
    nameWithType: ValueType.GetHashCode
    fullName: System.ValueType.GetHashCode
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: false
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.ValueType.ToString
  commentId: M:System.ValueType.ToString
  parent: System.ValueType
  isExternal: false
  name: ToString()
  nameWithType: ValueType.ToString()
  fullName: System.ValueType.ToString()
  spec.csharp:
  - uid: System.ValueType.ToString
    name: ToString
    nameWithType: ValueType.ToString
    fullName: System.ValueType.ToString
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.ValueType.ToString
    name: ToString
    nameWithType: ValueType.ToString
    fullName: System.ValueType.ToString
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: false
  name: String
  nameWithType: String
  fullName: System.String
