items:
- uid: System.Diagnostics.TraceEventCache
  commentId: T:System.Diagnostics.TraceEventCache
  id: TraceEventCache
  parent: System.Diagnostics
  children:
  - System.Diagnostics.TraceEventCache.#ctor
  - System.Diagnostics.TraceEventCache.DateTime
  - System.Diagnostics.TraceEventCache.ProcessId
  - System.Diagnostics.TraceEventCache.ThreadId
  - System.Diagnostics.TraceEventCache.Timestamp
  langs:
  - csharp
  - vb
  name: TraceEventCache
  fullName: System.Diagnostics.TraceEventCache
  type: Class
  source:
    remote:
      path: src/System.Diagnostics.TraceSource/src/System/Diagnostics/TraceEventCache.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: TraceEventCache
    path: src/System.Diagnostics.TraceSource/src/System/Diagnostics/TraceEventCache.cs
    startLine: 12
  assemblies:
  - System.Diagnostics.TraceSource
  namespace: System.Diagnostics
  summary: "\n<p>Provides trace event data specific to a thread and a process.</p>\n"
  syntax:
    content: public class TraceEventCache
    content.vb: Public Class TraceEventCache
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
  nameWithType: TraceEventCache
- uid: System.Diagnostics.TraceEventCache.#ctor
  commentId: M:System.Diagnostics.TraceEventCache.#ctor
  id: '#ctor'
  parent: System.Diagnostics.TraceEventCache
  langs:
  - csharp
  - vb
  name: TraceEventCache()
  fullName: System.Diagnostics.TraceEventCache.TraceEventCache()
  type: Constructor
  source:
    remote:
      path: src/System.Diagnostics.TraceSource/ref/System.Diagnostics.TraceSource.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: .ctor
    path: src/System.Diagnostics.TraceSource/ref/System.Diagnostics.TraceSource.cs
    startLine: 141
  assemblies:
  - System.Diagnostics.TraceSource
  namespace: System.Diagnostics
  summary: "\n<p>Initializes a new instance of the <xref href=\"System.Diagnostics.TraceEventCache\" data-throw-if-not-resolved=\"false\"></xref> class. </p>\n"
  syntax:
    content: public TraceEventCache()
    content.vb: Public Sub New
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  nameWithType: TraceEventCache.TraceEventCache()
- uid: System.Diagnostics.TraceEventCache.DateTime
  commentId: P:System.Diagnostics.TraceEventCache.DateTime
  id: DateTime
  parent: System.Diagnostics.TraceEventCache
  langs:
  - csharp
  - vb
  name: DateTime
  fullName: System.Diagnostics.TraceEventCache.DateTime
  type: Property
  source:
    remote:
      path: src/System.Diagnostics.TraceSource/src/System/Diagnostics/TraceEventCache.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: DateTime
    path: src/System.Diagnostics.TraceSource/src/System/Diagnostics/TraceEventCache.cs
    startLine: 17
  assemblies:
  - System.Diagnostics.TraceSource
  namespace: System.Diagnostics
  summary: "\n<p>Gets the date and time at which the event trace occurred.</p>\n"
  syntax:
    content: public DateTime DateTime { get; }
    content.vb: Public ReadOnly Property DateTime As Date
    parameters: []
    return:
      type: System.DateTime
      description: "\n<p>A <xref href=\"System.DateTime\" data-throw-if-not-resolved=\"false\"></xref> structure whose value is a date and time expressed in Coordinated Universal Time (UTC).</p>\n"
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
  nameWithType: TraceEventCache.DateTime
- uid: System.Diagnostics.TraceEventCache.ProcessId
  commentId: P:System.Diagnostics.TraceEventCache.ProcessId
  id: ProcessId
  parent: System.Diagnostics.TraceEventCache
  langs:
  - csharp
  - vb
  name: ProcessId
  fullName: System.Diagnostics.TraceEventCache.ProcessId
  type: Property
  source:
    remote:
      path: src/System.Diagnostics.TraceSource/src/System/Diagnostics/TraceEventCache.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: ProcessId
    path: src/System.Diagnostics.TraceSource/src/System/Diagnostics/TraceEventCache.cs
    startLine: 27
  assemblies:
  - System.Diagnostics.TraceSource
  namespace: System.Diagnostics
  summary: "\n<p>Gets the unique identifier of the current process.</p>\n"
  syntax:
    content: public int ProcessId { get; }
    content.vb: Public ReadOnly Property ProcessId As Integer
    parameters: []
    return:
      type: System.Int32
      description: "\n<p>The system-generated unique identifier of the current process.</p>\n"
  see:
  - type: System.Security.Permissions.SecurityPermission
    commentId: T:System.Security.Permissions.SecurityPermission
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
  nameWithType: TraceEventCache.ProcessId
- uid: System.Diagnostics.TraceEventCache.ThreadId
  commentId: P:System.Diagnostics.TraceEventCache.ThreadId
  id: ThreadId
  parent: System.Diagnostics.TraceEventCache
  langs:
  - csharp
  - vb
  name: ThreadId
  fullName: System.Diagnostics.TraceEventCache.ThreadId
  type: Property
  source:
    remote:
      path: src/System.Diagnostics.TraceSource/src/System/Diagnostics/TraceEventCache.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: ThreadId
    path: src/System.Diagnostics.TraceSource/src/System/Diagnostics/TraceEventCache.cs
    startLine: 35
  assemblies:
  - System.Diagnostics.TraceSource
  namespace: System.Diagnostics
  summary: "\n<p>Gets a unique identifier for the current managed thread.  </p>\n"
  syntax:
    content: public string ThreadId { get; }
    content.vb: Public ReadOnly Property ThreadId As String
    parameters: []
    return:
      type: System.String
      description: "\n<p>A string that represents a unique integer identifier for this managed thread.</p>\n"
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
  nameWithType: TraceEventCache.ThreadId
- uid: System.Diagnostics.TraceEventCache.Timestamp
  commentId: P:System.Diagnostics.TraceEventCache.Timestamp
  id: Timestamp
  parent: System.Diagnostics.TraceEventCache
  langs:
  - csharp
  - vb
  name: Timestamp
  fullName: System.Diagnostics.TraceEventCache.Timestamp
  type: Property
  source:
    remote:
      path: src/System.Diagnostics.TraceSource/src/System/Diagnostics/TraceEventCache.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: Timestamp
    path: src/System.Diagnostics.TraceSource/src/System/Diagnostics/TraceEventCache.cs
    startLine: 43
  assemblies:
  - System.Diagnostics.TraceSource
  namespace: System.Diagnostics
  summary: "\n<p>Gets the current number of ticks in the timer mechanism.</p>\n"
  syntax:
    content: public long Timestamp { get; }
    content.vb: Public ReadOnly Property Timestamp As Long
    parameters: []
    return:
      type: System.Int64
      description: "\n<p>The tick counter value of the underlying timer mechanism.</p>\n"
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
  nameWithType: TraceEventCache.Timestamp
references:
- uid: System.Diagnostics
  isExternal: false
  name: System.Diagnostics
  fullName: System.Diagnostics
  nameWithType: System.Diagnostics
  commentId: N:System.Diagnostics
- uid: System.Object
  parent: System
  isExternal: false
  name: Object
  fullName: System.Object
  nameWithType: Object
  commentId: T:System.Object
- uid: System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  nameWithType: Object.ToString()
  commentId: M:System.Object.ToString
- uid: System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
  nameWithType: Object.Equals(Object)
  commentId: M:System.Object.Equals(System.Object)
- uid: System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
  nameWithType: Object.Equals(Object, Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
  nameWithType: Object.ReferenceEquals(Object, Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
- uid: System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  nameWithType: Object.GetHashCode()
  commentId: M:System.Object.GetHashCode
- uid: System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  nameWithType: Object.GetType()
  commentId: M:System.Object.GetType
- uid: System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  nameWithType: Object.MemberwiseClone()
  commentId: M:System.Object.MemberwiseClone
- uid: System
  isExternal: false
  name: System
  fullName: System
  nameWithType: System
  commentId: N:System
- uid: System.DateTime
  parent: System
  isExternal: false
  name: DateTime
  fullName: System.DateTime
  nameWithType: DateTime
  commentId: T:System.DateTime
- uid: System.Int32
  parent: System
  isExternal: false
  name: Int32
  fullName: System.Int32
  nameWithType: Int32
  commentId: T:System.Int32
- uid: System.String
  parent: System
  isExternal: false
  name: String
  fullName: System.String
  nameWithType: String
  commentId: T:System.String
- uid: System.Int64
  parent: System
  isExternal: false
  name: Int64
  fullName: System.Int64
  nameWithType: Int64
  commentId: T:System.Int64
