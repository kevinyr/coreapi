### YamlMime:ManagedReference
items:
- uid: System.ServiceModel.Channels.RequestContext
  commentId: T:System.ServiceModel.Channels.RequestContext
  id: RequestContext
  parent: System.ServiceModel.Channels
  children:
  - System.ServiceModel.Channels.RequestContext.#ctor
  - System.ServiceModel.Channels.RequestContext.Abort
  - System.ServiceModel.Channels.RequestContext.BeginReply(System.ServiceModel.Channels.Message,System.AsyncCallback,System.Object)
  - System.ServiceModel.Channels.RequestContext.BeginReply(System.ServiceModel.Channels.Message,System.TimeSpan,System.AsyncCallback,System.Object)
  - System.ServiceModel.Channels.RequestContext.Close
  - System.ServiceModel.Channels.RequestContext.Close(System.TimeSpan)
  - System.ServiceModel.Channels.RequestContext.Dispose(System.Boolean)
  - System.ServiceModel.Channels.RequestContext.EndReply(System.IAsyncResult)
  - System.ServiceModel.Channels.RequestContext.Reply(System.ServiceModel.Channels.Message)
  - System.ServiceModel.Channels.RequestContext.Reply(System.ServiceModel.Channels.Message,System.TimeSpan)
  - System.ServiceModel.Channels.RequestContext.RequestMessage
  - System.ServiceModel.Channels.RequestContext.System#IDisposable#Dispose
  langs:
  - csharp
  - vb
  name: RequestContext
  nameWithType: RequestContext
  fullName: System.ServiceModel.Channels.RequestContext
  type: Class
  source:
    remote:
      path: src/System.ServiceModel.Primitives/ref/System.ServiceModel.Primitives.cs
      branch: master
      repo: https://github.com/dotnet/wcf.git
    id: RequestContext
    path: src/System.ServiceModel.Primitives/ref/System.ServiceModel.Primitives.cs
    startLine: 1127
  assemblies:
  - System.ServiceModel.Primitives
  namespace: System.ServiceModel.Channels
  summary: "\n<p>Provides a reply that is correlated to an incoming request.</p>\n"
  syntax:
    content: 'public abstract class RequestContext : IDisposable'
    content.vb: >-
      Public MustInherit Class RequestContext
          Implements IDisposable
  inheritance:
  - System.Object
  implements:
  - System.IDisposable
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  modifiers.csharp:
  - public
  - abstract
  - class
  modifiers.vb:
  - Public
  - MustInherit
  - Class
- uid: System.ServiceModel.Channels.RequestContext.#ctor
  commentId: M:System.ServiceModel.Channels.RequestContext.#ctor
  id: '#ctor'
  parent: System.ServiceModel.Channels.RequestContext
  langs:
  - csharp
  - vb
  name: RequestContext()
  nameWithType: RequestContext.RequestContext()
  fullName: System.ServiceModel.Channels.RequestContext.RequestContext()
  type: Constructor
  source:
    remote:
      path: src/System.ServiceModel.Primitives/ref/System.ServiceModel.Primitives.cs
      branch: master
      repo: https://github.com/dotnet/wcf.git
    id: .ctor
    path: src/System.ServiceModel.Primitives/ref/System.ServiceModel.Primitives.cs
    startLine: 1129
  assemblies:
  - System.ServiceModel.Primitives
  namespace: System.ServiceModel.Channels
  summary: "\n<p>Initializes a new instance of the <xref href=\"System.ServiceModel.Channels.RequestContext\" data-throw-if-not-resolved=\"false\"></xref> class. </p>\n"
  syntax:
    content: protected RequestContext()
    content.vb: Protected Sub New
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: System.ServiceModel.Channels.RequestContext.RequestMessage
  commentId: P:System.ServiceModel.Channels.RequestContext.RequestMessage
  id: RequestMessage
  parent: System.ServiceModel.Channels.RequestContext
  langs:
  - csharp
  - vb
  name: RequestMessage
  nameWithType: RequestContext.RequestMessage
  fullName: System.ServiceModel.Channels.RequestContext.RequestMessage
  type: Property
  source:
    remote:
      path: src/System.ServiceModel.Primitives/ref/System.ServiceModel.Primitives.cs
      branch: master
      repo: https://github.com/dotnet/wcf.git
    id: RequestMessage
    path: src/System.ServiceModel.Primitives/ref/System.ServiceModel.Primitives.cs
    startLine: 1130
  assemblies:
  - System.ServiceModel.Primitives
  namespace: System.ServiceModel.Channels
  summary: "\n<p>When overridden in a derived class, gets the message that contains the request.</p>\n"
  syntax:
    content: public abstract Message RequestMessage { get; }
    content.vb: Public MustOverride ReadOnly Property RequestMessage As Message
    parameters: []
    return:
      type: System.ServiceModel.Channels.Message
      description: "\n<p>The <xref href=\"System.ServiceModel.Channels.Message\" data-throw-if-not-resolved=\"false\"></xref> that contains the request.</p>\n"
  modifiers.csharp:
  - public
  - abstract
  - get
  modifiers.vb:
  - Public
  - MustOverride
  - ReadOnly
- uid: System.ServiceModel.Channels.RequestContext.Abort
  commentId: M:System.ServiceModel.Channels.RequestContext.Abort
  id: Abort
  parent: System.ServiceModel.Channels.RequestContext
  langs:
  - csharp
  - vb
  name: Abort()
  nameWithType: RequestContext.Abort()
  fullName: System.ServiceModel.Channels.RequestContext.Abort()
  type: Method
  source:
    remote:
      path: src/System.ServiceModel.Primitives/ref/System.ServiceModel.Primitives.cs
      branch: master
      repo: https://github.com/dotnet/wcf.git
    id: Abort
    path: src/System.ServiceModel.Primitives/ref/System.ServiceModel.Primitives.cs
    startLine: 1131
  assemblies:
  - System.ServiceModel.Primitives
  namespace: System.ServiceModel.Channels
  summary: "\n<p>When overridden in a derived class, aborts processing the request associated with the context. </p>\n"
  syntax:
    content: public abstract void Abort()
    content.vb: Public MustOverride Sub Abort
  modifiers.csharp:
  - public
  - abstract
  modifiers.vb:
  - Public
  - MustOverride
- uid: System.ServiceModel.Channels.RequestContext.BeginReply(System.ServiceModel.Channels.Message,System.AsyncCallback,System.Object)
  commentId: M:System.ServiceModel.Channels.RequestContext.BeginReply(System.ServiceModel.Channels.Message,System.AsyncCallback,System.Object)
  id: BeginReply(System.ServiceModel.Channels.Message,System.AsyncCallback,System.Object)
  parent: System.ServiceModel.Channels.RequestContext
  langs:
  - csharp
  - vb
  name: BeginReply(Message, AsyncCallback, Object)
  nameWithType: RequestContext.BeginReply(Message, AsyncCallback, Object)
  fullName: System.ServiceModel.Channels.RequestContext.BeginReply(System.ServiceModel.Channels.Message, System.AsyncCallback, System.Object)
  type: Method
  source:
    remote:
      path: src/System.ServiceModel.Primitives/ref/System.ServiceModel.Primitives.cs
      branch: master
      repo: https://github.com/dotnet/wcf.git
    id: BeginReply
    path: src/System.ServiceModel.Primitives/ref/System.ServiceModel.Primitives.cs
    startLine: 1132
  assemblies:
  - System.ServiceModel.Primitives
  namespace: System.ServiceModel.Channels
  summary: "\n<p>When overridden in a derived class, begins an asynchronous operation to reply to the request associated with the current context.</p>\n"
  syntax:
    content: public abstract IAsyncResult BeginReply(Message message, AsyncCallback callback, object state)
    content.vb: Public MustOverride Function BeginReply(message As Message, callback As AsyncCallback, state As Object) As IAsyncResult
    parameters:
    - id: message
      type: System.ServiceModel.Channels.Message
      description: "\n<p>The incoming <xref href=\"System.ServiceModel.Channels.Message\" data-throw-if-not-resolved=\"false\"></xref> that contains the request.</p>\n"
    - id: callback
      type: System.AsyncCallback
      description: "\n<p>The <xref href=\"System.AsyncCallback\" data-throw-if-not-resolved=\"false\"></xref> delegate that receives the notification of the asynchronous reply operation completion.</p>\n"
    - id: state
      type: System.Object
      description: "\n<p>An object, specified by the application, that contains state information associated with the asynchronous reply operation.</p>\n"
    return:
      type: System.IAsyncResult
      description: "\n<p>The <xref href=\"System.IAsyncResult\" data-throw-if-not-resolved=\"false\"></xref> that references the asynchronous reply operation.</p>\n"
  modifiers.csharp:
  - public
  - abstract
  modifiers.vb:
  - Public
  - MustOverride
- uid: System.ServiceModel.Channels.RequestContext.BeginReply(System.ServiceModel.Channels.Message,System.TimeSpan,System.AsyncCallback,System.Object)
  commentId: M:System.ServiceModel.Channels.RequestContext.BeginReply(System.ServiceModel.Channels.Message,System.TimeSpan,System.AsyncCallback,System.Object)
  id: BeginReply(System.ServiceModel.Channels.Message,System.TimeSpan,System.AsyncCallback,System.Object)
  parent: System.ServiceModel.Channels.RequestContext
  langs:
  - csharp
  - vb
  name: BeginReply(Message, TimeSpan, AsyncCallback, Object)
  nameWithType: RequestContext.BeginReply(Message, TimeSpan, AsyncCallback, Object)
  fullName: System.ServiceModel.Channels.RequestContext.BeginReply(System.ServiceModel.Channels.Message, System.TimeSpan, System.AsyncCallback, System.Object)
  type: Method
  source:
    remote:
      path: src/System.ServiceModel.Primitives/ref/System.ServiceModel.Primitives.cs
      branch: master
      repo: https://github.com/dotnet/wcf.git
    id: BeginReply
    path: src/System.ServiceModel.Primitives/ref/System.ServiceModel.Primitives.cs
    startLine: 1133
  assemblies:
  - System.ServiceModel.Primitives
  namespace: System.ServiceModel.Channels
  summary: "\n<p>When overridden in a derived class, begins an asynchronous operation to reply to the request associated with the current context within a specified interval of time.</p>\n"
  syntax:
    content: public abstract IAsyncResult BeginReply(Message message, TimeSpan timeout, AsyncCallback callback, object state)
    content.vb: Public MustOverride Function BeginReply(message As Message, timeout As TimeSpan, callback As AsyncCallback, state As Object) As IAsyncResult
    parameters:
    - id: message
      type: System.ServiceModel.Channels.Message
      description: "\n<p>The incoming <xref href=\"System.ServiceModel.Channels.Message\" data-throw-if-not-resolved=\"false\"></xref> that contains the request.</p>\n"
    - id: timeout
      type: System.TimeSpan
      description: "\n<p>The <xref href=\"System.TimeSpan\" data-throw-if-not-resolved=\"false\"></xref> that specifies the interval of time to wait for the reply to an available request.</p>\n"
    - id: callback
      type: System.AsyncCallback
      description: "\n<p>The <xref href=\"System.AsyncCallback\" data-throw-if-not-resolved=\"false\"></xref> delegate that receives the notification of the asynchronous reply operation completion.</p>\n"
    - id: state
      type: System.Object
      description: "\n<p>An object, specified by the application, that contains state information associated with the asynchronous reply operation.</p>\n"
    return:
      type: System.IAsyncResult
      description: "\n<p>The <xref href=\"System.IAsyncResult\" data-throw-if-not-resolved=\"false\"></xref> that references the asynchronous reply operation.</p>\n"
  modifiers.csharp:
  - public
  - abstract
  modifiers.vb:
  - Public
  - MustOverride
- uid: System.ServiceModel.Channels.RequestContext.Close
  commentId: M:System.ServiceModel.Channels.RequestContext.Close
  id: Close
  parent: System.ServiceModel.Channels.RequestContext
  langs:
  - csharp
  - vb
  name: Close()
  nameWithType: RequestContext.Close()
  fullName: System.ServiceModel.Channels.RequestContext.Close()
  type: Method
  source:
    remote:
      path: src/System.ServiceModel.Primitives/ref/System.ServiceModel.Primitives.cs
      branch: master
      repo: https://github.com/dotnet/wcf.git
    id: Close
    path: src/System.ServiceModel.Primitives/ref/System.ServiceModel.Primitives.cs
    startLine: 1134
  assemblies:
  - System.ServiceModel.Primitives
  namespace: System.ServiceModel.Channels
  summary: "\n<p>When overridden in a derived class, closes the operation that is replying to the request context associated with the current context.</p>\n"
  syntax:
    content: public abstract void Close()
    content.vb: Public MustOverride Sub Close
  modifiers.csharp:
  - public
  - abstract
  modifiers.vb:
  - Public
  - MustOverride
- uid: System.ServiceModel.Channels.RequestContext.Close(System.TimeSpan)
  commentId: M:System.ServiceModel.Channels.RequestContext.Close(System.TimeSpan)
  id: Close(System.TimeSpan)
  parent: System.ServiceModel.Channels.RequestContext
  langs:
  - csharp
  - vb
  name: Close(TimeSpan)
  nameWithType: RequestContext.Close(TimeSpan)
  fullName: System.ServiceModel.Channels.RequestContext.Close(System.TimeSpan)
  type: Method
  source:
    remote:
      path: src/System.ServiceModel.Primitives/ref/System.ServiceModel.Primitives.cs
      branch: master
      repo: https://github.com/dotnet/wcf.git
    id: Close
    path: src/System.ServiceModel.Primitives/ref/System.ServiceModel.Primitives.cs
    startLine: 1135
  assemblies:
  - System.ServiceModel.Primitives
  namespace: System.ServiceModel.Channels
  summary: "\n<p>When overridden in a derived class, closes the operation that is replying to the request context associated with the current context within a specified interval of time.</p>\n"
  syntax:
    content: public abstract void Close(TimeSpan timeout)
    content.vb: Public MustOverride Sub Close(timeout As TimeSpan)
    parameters:
    - id: timeout
      type: System.TimeSpan
      description: "\n<p>The <xref href=\"System.TimeSpan\" data-throw-if-not-resolved=\"false\"></xref> that specifies the interval of time within which the reply operation associated with the current context must close.</p>\n"
  modifiers.csharp:
  - public
  - abstract
  modifiers.vb:
  - Public
  - MustOverride
- uid: System.ServiceModel.Channels.RequestContext.Dispose(System.Boolean)
  commentId: M:System.ServiceModel.Channels.RequestContext.Dispose(System.Boolean)
  id: Dispose(System.Boolean)
  parent: System.ServiceModel.Channels.RequestContext
  langs:
  - csharp
  - vb
  name: Dispose(Boolean)
  nameWithType: RequestContext.Dispose(Boolean)
  fullName: System.ServiceModel.Channels.RequestContext.Dispose(System.Boolean)
  type: Method
  source:
    remote:
      path: src/System.ServiceModel.Primitives/ref/System.ServiceModel.Primitives.cs
      branch: master
      repo: https://github.com/dotnet/wcf.git
    id: Dispose
    path: src/System.ServiceModel.Primitives/ref/System.ServiceModel.Primitives.cs
    startLine: 1136
  assemblies:
  - System.ServiceModel.Primitives
  namespace: System.ServiceModel.Channels
  summary: "\n<p>Releases resources associated with the context.</p>\n"
  syntax:
    content: protected virtual void Dispose(bool disposing)
    content.vb: Protected Overridable Sub Dispose(disposing As Boolean)
    parameters:
    - id: disposing
      type: System.Boolean
      description: "\n<p>\n<strong>true</strong> to release both managed and unmanaged resources; <strong>false</strong> to release only unmanaged resources. </p>\n"
  modifiers.csharp:
  - protected
  - virtual
  modifiers.vb:
  - Protected
  - Overridable
- uid: System.ServiceModel.Channels.RequestContext.EndReply(System.IAsyncResult)
  commentId: M:System.ServiceModel.Channels.RequestContext.EndReply(System.IAsyncResult)
  id: EndReply(System.IAsyncResult)
  parent: System.ServiceModel.Channels.RequestContext
  langs:
  - csharp
  - vb
  name: EndReply(IAsyncResult)
  nameWithType: RequestContext.EndReply(IAsyncResult)
  fullName: System.ServiceModel.Channels.RequestContext.EndReply(System.IAsyncResult)
  type: Method
  source:
    remote:
      path: src/System.ServiceModel.Primitives/ref/System.ServiceModel.Primitives.cs
      branch: master
      repo: https://github.com/dotnet/wcf.git
    id: EndReply
    path: src/System.ServiceModel.Primitives/ref/System.ServiceModel.Primitives.cs
    startLine: 1137
  assemblies:
  - System.ServiceModel.Primitives
  namespace: System.ServiceModel.Channels
  summary: "\n<p>When overridden in a derived class, completes an asynchronous operation to reply to a request message.</p>\n"
  syntax:
    content: public abstract void EndReply(IAsyncResult result)
    content.vb: Public MustOverride Sub EndReply(result As IAsyncResult)
    parameters:
    - id: result
      type: System.IAsyncResult
      description: "\n<p>The <xref href=\"System.IAsyncResult\" data-throw-if-not-resolved=\"false\"></xref> returned by a call to one of the <xref href=\"System.ServiceModel.Channels.RequestContext.BeginReply\" data-throw-if-not-resolved=\"false\"></xref> methods.</p>\n"
  modifiers.csharp:
  - public
  - abstract
  modifiers.vb:
  - Public
  - MustOverride
- uid: System.ServiceModel.Channels.RequestContext.Reply(System.ServiceModel.Channels.Message)
  commentId: M:System.ServiceModel.Channels.RequestContext.Reply(System.ServiceModel.Channels.Message)
  id: Reply(System.ServiceModel.Channels.Message)
  parent: System.ServiceModel.Channels.RequestContext
  langs:
  - csharp
  - vb
  name: Reply(Message)
  nameWithType: RequestContext.Reply(Message)
  fullName: System.ServiceModel.Channels.RequestContext.Reply(System.ServiceModel.Channels.Message)
  type: Method
  source:
    remote:
      path: src/System.ServiceModel.Primitives/ref/System.ServiceModel.Primitives.cs
      branch: master
      repo: https://github.com/dotnet/wcf.git
    id: Reply
    path: src/System.ServiceModel.Primitives/ref/System.ServiceModel.Primitives.cs
    startLine: 1138
  assemblies:
  - System.ServiceModel.Primitives
  namespace: System.ServiceModel.Channels
  summary: "\n<p>When overridden in a derived class, replies to a request message.</p>\n"
  syntax:
    content: public abstract void Reply(Message message)
    content.vb: Public MustOverride Sub Reply(message As Message)
    parameters:
    - id: message
      type: System.ServiceModel.Channels.Message
      description: "\n<p>The incoming <xref href=\"System.ServiceModel.Channels.Message\" data-throw-if-not-resolved=\"false\"></xref> that contains the request.</p>\n"
  modifiers.csharp:
  - public
  - abstract
  modifiers.vb:
  - Public
  - MustOverride
- uid: System.ServiceModel.Channels.RequestContext.Reply(System.ServiceModel.Channels.Message,System.TimeSpan)
  commentId: M:System.ServiceModel.Channels.RequestContext.Reply(System.ServiceModel.Channels.Message,System.TimeSpan)
  id: Reply(System.ServiceModel.Channels.Message,System.TimeSpan)
  parent: System.ServiceModel.Channels.RequestContext
  langs:
  - csharp
  - vb
  name: Reply(Message, TimeSpan)
  nameWithType: RequestContext.Reply(Message, TimeSpan)
  fullName: System.ServiceModel.Channels.RequestContext.Reply(System.ServiceModel.Channels.Message, System.TimeSpan)
  type: Method
  source:
    remote:
      path: src/System.ServiceModel.Primitives/ref/System.ServiceModel.Primitives.cs
      branch: master
      repo: https://github.com/dotnet/wcf.git
    id: Reply
    path: src/System.ServiceModel.Primitives/ref/System.ServiceModel.Primitives.cs
    startLine: 1139
  assemblies:
  - System.ServiceModel.Primitives
  namespace: System.ServiceModel.Channels
  summary: "\n<p>When overridden in a derived class, replies to a request message within a specified interval of time.</p>\n"
  syntax:
    content: public abstract void Reply(Message message, TimeSpan timeout)
    content.vb: Public MustOverride Sub Reply(message As Message, timeout As TimeSpan)
    parameters:
    - id: message
      type: System.ServiceModel.Channels.Message
      description: "\n<p>The incoming <xref href=\"System.ServiceModel.Channels.Message\" data-throw-if-not-resolved=\"false\"></xref> that contains the request.</p>\n"
    - id: timeout
      type: System.TimeSpan
      description: "\n<p>The <xref href=\"System.TimeSpan\" data-throw-if-not-resolved=\"false\"></xref> that specifies the interval of time to wait for the reply to a request.</p>\n"
  modifiers.csharp:
  - public
  - abstract
  modifiers.vb:
  - Public
  - MustOverride
- uid: System.ServiceModel.Channels.RequestContext.System#IDisposable#Dispose
  commentId: M:System.ServiceModel.Channels.RequestContext.System#IDisposable#Dispose
  id: System#IDisposable#Dispose
  isEii: true
  parent: System.ServiceModel.Channels.RequestContext
  langs:
  - csharp
  - vb
  name: IDisposable.Dispose()
  nameWithType: RequestContext.IDisposable.Dispose()
  fullName: System.ServiceModel.Channels.RequestContext.System.IDisposable.Dispose()
  type: Method
  source:
    remote:
      path: src/System.ServiceModel.Primitives/ref/System.ServiceModel.Primitives.cs
      branch: master
      repo: https://github.com/dotnet/wcf.git
    id: System.IDisposable.Dispose
    path: src/System.ServiceModel.Primitives/ref/System.ServiceModel.Primitives.cs
    startLine: 1140
  assemblies:
  - System.ServiceModel.Primitives
  namespace: System.ServiceModel.Channels
  summary: "\n<p>Releases both managed and unmanaged resources associated with the context.</p>\n"
  syntax:
    content: void IDisposable.Dispose()
    content.vb: Sub System.IDisposable.Dispose Implements IDisposable.Dispose
  implements:
  - System.IDisposable.Dispose
  nameWithType.vb: RequestContext.System.IDisposable.Dispose()
  name.vb: System.IDisposable.Dispose()
references:
- uid: System.ServiceModel.Channels
  commentId: N:System.ServiceModel.Channels
  isExternal: false
  name: System.ServiceModel.Channels
  nameWithType: System.ServiceModel.Channels
  fullName: System.ServiceModel.Channels
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: false
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.IDisposable
  commentId: T:System.IDisposable
  parent: System
  isExternal: false
  name: IDisposable
  nameWithType: IDisposable
  fullName: System.IDisposable
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: System.ServiceModel.Channels.Message
  commentId: T:System.ServiceModel.Channels.Message
  parent: System.ServiceModel.Channels
  isExternal: false
  name: Message
  nameWithType: Message
  fullName: System.ServiceModel.Channels.Message
- uid: System.AsyncCallback
  commentId: T:System.AsyncCallback
  parent: System
  isExternal: false
  name: AsyncCallback
  nameWithType: AsyncCallback
  fullName: System.AsyncCallback
- uid: System.IAsyncResult
  commentId: T:System.IAsyncResult
  parent: System
  isExternal: false
  name: IAsyncResult
  nameWithType: IAsyncResult
  fullName: System.IAsyncResult
- uid: System.TimeSpan
  commentId: T:System.TimeSpan
  parent: System
  isExternal: false
  name: TimeSpan
  nameWithType: TimeSpan
  fullName: System.TimeSpan
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: false
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.IDisposable.Dispose
  commentId: M:System.IDisposable.Dispose
  parent: System.IDisposable
  isExternal: false
  name: Dispose()
  nameWithType: IDisposable.Dispose()
  fullName: System.IDisposable.Dispose()
  spec.csharp:
  - uid: System.IDisposable.Dispose
    name: Dispose
    nameWithType: IDisposable.Dispose
    fullName: System.IDisposable.Dispose
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.IDisposable.Dispose
    name: Dispose
    nameWithType: IDisposable.Dispose
    fullName: System.IDisposable.Dispose
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
