### YamlMime:ManagedReference
items:
- uid: System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy
  commentId: T:System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy
  id: ExtendedProtectionPolicy
  parent: System.Security.Authentication.ExtendedProtection
  children:
  - System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy.#ctor(System.Security.Authentication.ExtendedProtection.PolicyEnforcement)
  - System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy.#ctor(System.Security.Authentication.ExtendedProtection.PolicyEnforcement,System.Security.Authentication.ExtendedProtection.ChannelBinding)
  - System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy.#ctor(System.Security.Authentication.ExtendedProtection.PolicyEnforcement,System.Security.Authentication.ExtendedProtection.ProtectionScenario,System.Collections.ICollection)
  - System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy.#ctor(System.Security.Authentication.ExtendedProtection.PolicyEnforcement,System.Security.Authentication.ExtendedProtection.ProtectionScenario,System.Security.Authentication.ExtendedProtection.ServiceNameCollection)
  - System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy.CustomChannelBinding
  - System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy.CustomServiceNames
  - System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy.OSSupportsExtendedProtection
  - System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy.PolicyEnforcement
  - System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy.ProtectionScenario
  - System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy.ToString
  langs:
  - csharp
  - vb
  name: ExtendedProtectionPolicy
  nameWithType: ExtendedProtectionPolicy
  fullName: System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy
  type: Class
  source:
    remote:
      path: src/System.Net.Security/src/System/Security/Authentication/ExtendedProtection/ExtendedProtectionPolicy.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: ExtendedProtectionPolicy
    path: src/System.Net.Security/src/System/Security/Authentication/ExtendedProtection/ExtendedProtectionPolicy.cs
    startLine: 13
  assemblies:
  - System.Net.Security
  namespace: System.Security.Authentication.ExtendedProtection
  summary: "\n<p>The <xref href=\"System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy\" data-throw-if-not-resolved=\"false\"></xref> class represents the extended protection policy used by the server to validate incoming client connections. </p>\n"
  syntax:
    content: public class ExtendedProtectionPolicy
    content.vb: Public Class ExtendedProtectionPolicy
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy.#ctor(System.Security.Authentication.ExtendedProtection.PolicyEnforcement)
  commentId: M:System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy.#ctor(System.Security.Authentication.ExtendedProtection.PolicyEnforcement)
  id: '#ctor(System.Security.Authentication.ExtendedProtection.PolicyEnforcement)'
  parent: System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy
  langs:
  - csharp
  - vb
  name: ExtendedProtectionPolicy(PolicyEnforcement)
  nameWithType: ExtendedProtectionPolicy.ExtendedProtectionPolicy(PolicyEnforcement)
  fullName: System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy.ExtendedProtectionPolicy(System.Security.Authentication.ExtendedProtection.PolicyEnforcement)
  type: Constructor
  source:
    remote:
      path: src/System.Net.Security/src/System/Security/Authentication/ExtendedProtection/ExtendedProtectionPolicy.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: .ctor
    path: src/System.Net.Security/src/System/Security/Authentication/ExtendedProtection/ExtendedProtectionPolicy.cs
    startLine: 70
  assemblies:
  - System.Net.Security
  namespace: System.Security.Authentication.ExtendedProtection
  summary: "\n<p>Initializes a new instance of the <xref href=\"System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy\" data-throw-if-not-resolved=\"false\"></xref> class that specifies when the extended protection policy should be enforced.</p>\n"
  syntax:
    content: public ExtendedProtectionPolicy(PolicyEnforcement policyEnforcement)
    content.vb: Public Sub New(policyEnforcement As PolicyEnforcement)
    parameters:
    - id: policyEnforcement
      type: System.Security.Authentication.ExtendedProtection.PolicyEnforcement
      description: "\n<p>A <xref href=\"System.Security.Authentication.ExtendedProtection.PolicyEnforcement\" data-throw-if-not-resolved=\"false\"></xref> value that indicates when the extended protection policy should be enforced.</p>\n"
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy.#ctor(System.Security.Authentication.ExtendedProtection.PolicyEnforcement,System.Security.Authentication.ExtendedProtection.ChannelBinding)
  commentId: M:System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy.#ctor(System.Security.Authentication.ExtendedProtection.PolicyEnforcement,System.Security.Authentication.ExtendedProtection.ChannelBinding)
  id: '#ctor(System.Security.Authentication.ExtendedProtection.PolicyEnforcement,System.Security.Authentication.ExtendedProtection.ChannelBinding)'
  parent: System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy
  langs:
  - csharp
  - vb
  name: ExtendedProtectionPolicy(PolicyEnforcement, ChannelBinding)
  nameWithType: ExtendedProtectionPolicy.ExtendedProtectionPolicy(PolicyEnforcement, ChannelBinding)
  fullName: System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy.ExtendedProtectionPolicy(System.Security.Authentication.ExtendedProtection.PolicyEnforcement, System.Security.Authentication.ExtendedProtection.ChannelBinding)
  type: Constructor
  source:
    remote:
      path: src/System.Net.Security/ref/System.Net.Security.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: .ctor
    path: src/System.Net.Security/ref/System.Net.Security.cs
    startLine: 133
  assemblies:
  - System.Net.Security
  namespace: System.Security.Authentication.ExtendedProtection
  summary: "\n<p>Initializes a new instance of the <xref href=\"System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy\" data-throw-if-not-resolved=\"false\"></xref> class that specifies when the extended protection policy should be enforced and the channel binding token (CBT) to be used.</p>\n"
  syntax:
    content: public ExtendedProtectionPolicy(PolicyEnforcement policyEnforcement, ChannelBinding customChannelBinding)
    content.vb: Public Sub New(policyEnforcement As PolicyEnforcement, customChannelBinding As ChannelBinding)
    parameters:
    - id: policyEnforcement
      type: System.Security.Authentication.ExtendedProtection.PolicyEnforcement
      description: "\n<p>A <xref href=\"System.Security.Authentication.ExtendedProtection.PolicyEnforcement\" data-throw-if-not-resolved=\"false\"></xref> value that indicates when the extended protection policy should be enforced.</p>\n"
    - id: customChannelBinding
      type: System.Security.Authentication.ExtendedProtection.ChannelBinding
      description: "\n<p>A <xref href=\"System.Security.Authentication.ExtendedProtection.ChannelBinding\" data-throw-if-not-resolved=\"false\"></xref> that contains a custom channel binding to use for validation.</p>\n"
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "\n<p>\n<em>policyEnforcement</em> is specified as <xref href=\"System.Security.Authentication.ExtendedProtection.PolicyEnforcement.Never\" data-throw-if-not-resolved=\"false\"></xref>.</p>\n"
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "\n<p>\n<em>customChannelBinding </em>is <strong>null</strong>. </p>\n"
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy.#ctor(System.Security.Authentication.ExtendedProtection.PolicyEnforcement,System.Security.Authentication.ExtendedProtection.ProtectionScenario,System.Collections.ICollection)
  commentId: M:System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy.#ctor(System.Security.Authentication.ExtendedProtection.PolicyEnforcement,System.Security.Authentication.ExtendedProtection.ProtectionScenario,System.Collections.ICollection)
  id: '#ctor(System.Security.Authentication.ExtendedProtection.PolicyEnforcement,System.Security.Authentication.ExtendedProtection.ProtectionScenario,System.Collections.ICollection)'
  parent: System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy
  langs:
  - csharp
  - vb
  name: ExtendedProtectionPolicy(PolicyEnforcement, ProtectionScenario, ICollection)
  nameWithType: ExtendedProtectionPolicy.ExtendedProtectionPolicy(PolicyEnforcement, ProtectionScenario, ICollection)
  fullName: System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy.ExtendedProtectionPolicy(System.Security.Authentication.ExtendedProtection.PolicyEnforcement, System.Security.Authentication.ExtendedProtection.ProtectionScenario, System.Collections.ICollection)
  type: Constructor
  source:
    remote:
      path: src/System.Net.Security/src/System/Security/Authentication/ExtendedProtection/ExtendedProtectionPolicy.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: .ctor
    path: src/System.Net.Security/src/System/Security/Authentication/ExtendedProtection/ExtendedProtectionPolicy.cs
    startLine: 44
  assemblies:
  - System.Net.Security
  namespace: System.Security.Authentication.ExtendedProtection
  summary: "\n<p>Initializes a new instance of the <xref href=\"System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy\" data-throw-if-not-resolved=\"false\"></xref> class that specifies when the extended protection policy should be enforced, the kind of protection enforced by the policy, and a custom Service Provider Name (SPN) list that is used to match against a client's SPN.</p>\n"
  syntax:
    content: public ExtendedProtectionPolicy(PolicyEnforcement policyEnforcement, ProtectionScenario protectionScenario, ICollection customServiceNames)
    content.vb: Public Sub New(policyEnforcement As PolicyEnforcement, protectionScenario As ProtectionScenario, customServiceNames As ICollection)
    parameters:
    - id: policyEnforcement
      type: System.Security.Authentication.ExtendedProtection.PolicyEnforcement
      description: "\n<p>A <xref href=\"System.Security.Authentication.ExtendedProtection.PolicyEnforcement\" data-throw-if-not-resolved=\"false\"></xref> value that indicates when the extended protection policy should be enforced.</p>\n"
    - id: protectionScenario
      type: System.Security.Authentication.ExtendedProtection.ProtectionScenario
      description: "\n<p>A <xref href=\"System.Security.Authentication.ExtendedProtection.ProtectionScenario\" data-throw-if-not-resolved=\"false\"></xref> value that indicates the kind of protection enforced by the policy.</p>\n"
    - id: customServiceNames
      type: System.Collections.ICollection
      description: "\n<p>A <xref href=\"System.Collections.ICollection\" data-throw-if-not-resolved=\"false\"></xref> that contains the custom SPN list that is used to match against a client's SPN.</p>\n"
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "\n<p>\n<em>policyEnforcement</em> is specified as <xref href=\"System.Security.Authentication.ExtendedProtection.PolicyEnforcement.Never\" data-throw-if-not-resolved=\"false\"></xref>.</p>\n"
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "\n<p>\n<em>customServiceNames </em>is <strong>null</strong> or an empty list. </p>\n"
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy.#ctor(System.Security.Authentication.ExtendedProtection.PolicyEnforcement,System.Security.Authentication.ExtendedProtection.ProtectionScenario,System.Security.Authentication.ExtendedProtection.ServiceNameCollection)
  commentId: M:System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy.#ctor(System.Security.Authentication.ExtendedProtection.PolicyEnforcement,System.Security.Authentication.ExtendedProtection.ProtectionScenario,System.Security.Authentication.ExtendedProtection.ServiceNameCollection)
  id: '#ctor(System.Security.Authentication.ExtendedProtection.PolicyEnforcement,System.Security.Authentication.ExtendedProtection.ProtectionScenario,System.Security.Authentication.ExtendedProtection.ServiceNameCollection)'
  parent: System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy
  langs:
  - csharp
  - vb
  name: ExtendedProtectionPolicy(PolicyEnforcement, ProtectionScenario, ServiceNameCollection)
  nameWithType: ExtendedProtectionPolicy.ExtendedProtectionPolicy(PolicyEnforcement, ProtectionScenario, ServiceNameCollection)
  fullName: System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy.ExtendedProtectionPolicy(System.Security.Authentication.ExtendedProtection.PolicyEnforcement, System.Security.Authentication.ExtendedProtection.ProtectionScenario, System.Security.Authentication.ExtendedProtection.ServiceNameCollection)
  type: Constructor
  source:
    remote:
      path: src/System.Net.Security/src/System/Security/Authentication/ExtendedProtection/ExtendedProtectionPolicy.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: .ctor
    path: src/System.Net.Security/src/System/Security/Authentication/ExtendedProtection/ExtendedProtectionPolicy.cs
    startLine: 25
  assemblies:
  - System.Net.Security
  namespace: System.Security.Authentication.ExtendedProtection
  summary: "\n<p>Initializes a new instance of the <xref href=\"System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy\" data-throw-if-not-resolved=\"false\"></xref> class that specifies when the extended protection policy should be enforced, the kind of protection enforced by the policy, and a custom Service Provider Name (SPN) list that is used to match against a client's SPN.</p>\n"
  syntax:
    content: public ExtendedProtectionPolicy(PolicyEnforcement policyEnforcement, ProtectionScenario protectionScenario, ServiceNameCollection customServiceNames)
    content.vb: Public Sub New(policyEnforcement As PolicyEnforcement, protectionScenario As ProtectionScenario, customServiceNames As ServiceNameCollection)
    parameters:
    - id: policyEnforcement
      type: System.Security.Authentication.ExtendedProtection.PolicyEnforcement
      description: "\n<p>A <xref href=\"System.Security.Authentication.ExtendedProtection.PolicyEnforcement\" data-throw-if-not-resolved=\"false\"></xref> value that indicates when the extended protection policy should be enforced.</p>\n"
    - id: protectionScenario
      type: System.Security.Authentication.ExtendedProtection.ProtectionScenario
      description: "\n<p>A <xref href=\"System.Security.Authentication.ExtendedProtection.ProtectionScenario\" data-throw-if-not-resolved=\"false\"></xref> value that indicates the kind of protection enforced by the policy.</p>\n"
    - id: customServiceNames
      type: System.Security.Authentication.ExtendedProtection.ServiceNameCollection
      description: "\n<p>A <xref href=\"System.Security.Authentication.ExtendedProtection.ServiceNameCollection\" data-throw-if-not-resolved=\"false\"></xref> that contains the custom SPN list that is used to match against a client's SPN.</p>\n"
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "\n<p>\n<em>policyEnforcement</em> is specified as <xref href=\"System.Security.Authentication.ExtendedProtection.PolicyEnforcement.Never\" data-throw-if-not-resolved=\"false\"></xref>.</p>\n"
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "\n<p>\n<em>customServiceNames </em>is <strong>null</strong> or an empty list. </p>\n"
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy.CustomChannelBinding
  commentId: P:System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy.CustomChannelBinding
  id: CustomChannelBinding
  parent: System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy
  langs:
  - csharp
  - vb
  name: CustomChannelBinding
  nameWithType: ExtendedProtectionPolicy.CustomChannelBinding
  fullName: System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy.CustomChannelBinding
  type: Property
  source:
    remote:
      path: src/System.Net.Security/src/System/Security/Authentication/ExtendedProtection/ExtendedProtectionPolicy.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: CustomChannelBinding
    path: src/System.Net.Security/src/System/Security/Authentication/ExtendedProtection/ExtendedProtectionPolicy.cs
    startLine: 92
  assemblies:
  - System.Net.Security
  namespace: System.Security.Authentication.ExtendedProtection
  summary: "\n<p>Gets a custom channel binding token (CBT) to use for validation.</p>\n"
  syntax:
    content: public ChannelBinding CustomChannelBinding { get; }
    content.vb: Public ReadOnly Property CustomChannelBinding As ChannelBinding
    parameters: []
    return:
      type: ChannelBinding
      description: "\n<p>A <xref href=\"System.Security.Authentication.ExtendedProtection.ChannelBinding\" data-throw-if-not-resolved=\"false\"></xref> that contains a custom channel binding to use for validation.</p>\n"
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy.CustomServiceNames
  commentId: P:System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy.CustomServiceNames
  id: CustomServiceNames
  parent: System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy
  langs:
  - csharp
  - vb
  name: CustomServiceNames
  nameWithType: ExtendedProtectionPolicy.CustomServiceNames
  fullName: System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy.CustomServiceNames
  type: Property
  source:
    remote:
      path: src/System.Net.Security/src/System/Security/Authentication/ExtendedProtection/ExtendedProtectionPolicy.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: CustomServiceNames
    path: src/System.Net.Security/src/System/Security/Authentication/ExtendedProtection/ExtendedProtectionPolicy.cs
    startLine: 77
  assemblies:
  - System.Net.Security
  namespace: System.Security.Authentication.ExtendedProtection
  summary: "\n<p>Gets the custom Service Provider Name (SPN) list used to match against a client's SPN.</p>\n"
  syntax:
    content: public ServiceNameCollection CustomServiceNames { get; }
    content.vb: Public ReadOnly Property CustomServiceNames As ServiceNameCollection
    parameters: []
    return:
      type: System.Security.Authentication.ExtendedProtection.ServiceNameCollection
      description: "\n<p>A <xref href=\"System.Security.Authentication.ExtendedProtection.ServiceNameCollection\" data-throw-if-not-resolved=\"false\"></xref> that contains the custom SPN list that is used to match against a client's SPN.</p>\n"
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy.OSSupportsExtendedProtection
  commentId: P:System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy.OSSupportsExtendedProtection
  id: OSSupportsExtendedProtection
  parent: System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy
  langs:
  - csharp
  - vb
  name: OSSupportsExtendedProtection
  nameWithType: ExtendedProtectionPolicy.OSSupportsExtendedProtection
  fullName: System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy.OSSupportsExtendedProtection
  type: Property
  source:
    remote:
      path: src/System.Net.Security/src/System/Security/Authentication/ExtendedProtection/ExtendedProtectionPolicy.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: OSSupportsExtendedProtection
    path: src/System.Net.Security/src/System/Security/Authentication/ExtendedProtection/ExtendedProtectionPolicy.cs
    startLine: 141
  assemblies:
  - System.Net.Security
  namespace: System.Security.Authentication.ExtendedProtection
  summary: "\n<p>Indicates whether the operating system supports integrated windows authentication with extended protection.</p>\n"
  syntax:
    content: public static bool OSSupportsExtendedProtection { get; }
    content.vb: Public Shared ReadOnly Property OSSupportsExtendedProtection As Boolean
    parameters: []
    return:
      type: System.Boolean
      description: "\n<p>\n<strong>true</strong> if the operating system supports integrated windows authentication with extended protection, otherwise <strong>false</strong>.</p>\n"
  modifiers.csharp:
  - public
  - static
  - get
  modifiers.vb:
  - Public
  - Shared
  - ReadOnly
- uid: System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy.PolicyEnforcement
  commentId: P:System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy.PolicyEnforcement
  id: PolicyEnforcement
  parent: System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy
  langs:
  - csharp
  - vb
  name: PolicyEnforcement
  nameWithType: ExtendedProtectionPolicy.PolicyEnforcement
  fullName: System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy.PolicyEnforcement
  type: Property
  source:
    remote:
      path: src/System.Net.Security/src/System/Security/Authentication/ExtendedProtection/ExtendedProtectionPolicy.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: PolicyEnforcement
    path: src/System.Net.Security/src/System/Security/Authentication/ExtendedProtection/ExtendedProtectionPolicy.cs
    startLine: 82
  assemblies:
  - System.Net.Security
  namespace: System.Security.Authentication.ExtendedProtection
  summary: "\n<p>Gets when the extended protection policy should be enforced.</p>\n"
  syntax:
    content: public PolicyEnforcement PolicyEnforcement { get; }
    content.vb: Public ReadOnly Property PolicyEnforcement As PolicyEnforcement
    parameters: []
    return:
      type: System.Security.Authentication.ExtendedProtection.PolicyEnforcement
      description: "\n<p>A <xref href=\"System.Security.Authentication.ExtendedProtection.PolicyEnforcement\" data-throw-if-not-resolved=\"false\"></xref> value that indicates when the extended protection policy should be enforced. </p>\n"
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy.ProtectionScenario
  commentId: P:System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy.ProtectionScenario
  id: ProtectionScenario
  parent: System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy
  langs:
  - csharp
  - vb
  name: ProtectionScenario
  nameWithType: ExtendedProtectionPolicy.ProtectionScenario
  fullName: System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy.ProtectionScenario
  type: Property
  source:
    remote:
      path: src/System.Net.Security/src/System/Security/Authentication/ExtendedProtection/ExtendedProtectionPolicy.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: ProtectionScenario
    path: src/System.Net.Security/src/System/Security/Authentication/ExtendedProtection/ExtendedProtectionPolicy.cs
    startLine: 87
  assemblies:
  - System.Net.Security
  namespace: System.Security.Authentication.ExtendedProtection
  summary: "\n<p>Gets the kind of protection enforced by the extended protection policy.</p>\n"
  syntax:
    content: public ProtectionScenario ProtectionScenario { get; }
    content.vb: Public ReadOnly Property ProtectionScenario As ProtectionScenario
    parameters: []
    return:
      type: System.Security.Authentication.ExtendedProtection.ProtectionScenario
      description: "\n<p>A <xref href=\"System.Security.Authentication.ExtendedProtection.ProtectionScenario\" data-throw-if-not-resolved=\"false\"></xref> value that indicates the kind of protection enforced by the policy. </p>\n"
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy.ToString
  commentId: M:System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy.ToString
  id: ToString
  parent: System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy
  langs:
  - csharp
  - vb
  name: ToString()
  nameWithType: ExtendedProtectionPolicy.ToString()
  fullName: System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy.ToString()
  type: Method
  source:
    remote:
      path: src/System.Net.Security/src/System/Security/Authentication/ExtendedProtection/ExtendedProtectionPolicy.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: ToString
    path: src/System.Net.Security/src/System/Security/Authentication/ExtendedProtection/ExtendedProtectionPolicy.cs
    startLine: 97
  assemblies:
  - System.Net.Security
  namespace: System.Security.Authentication.ExtendedProtection
  summary: "\n<p>Gets a string representation for the extended protection policy instance.</p>\n"
  syntax:
    content: public override string ToString()
    content.vb: Public Overrides Function ToString As String
    return:
      type: System.String
      description: "\n<p>A <xref href=\"System.String\" data-throw-if-not-resolved=\"false\"></xref> instance that contains the representation of the <xref href=\"System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy\" data-throw-if-not-resolved=\"false\"></xref> instance.</p>\n"
  overridden: System.Object.ToString
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
references:
- uid: System.Security.Authentication.ExtendedProtection
  commentId: N:System.Security.Authentication.ExtendedProtection
  isExternal: false
  name: System.Security.Authentication.ExtendedProtection
  nameWithType: System.Security.Authentication.ExtendedProtection
  fullName: System.Security.Authentication.ExtendedProtection
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: false
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: System.Security.Authentication.ExtendedProtection.PolicyEnforcement
  commentId: T:System.Security.Authentication.ExtendedProtection.PolicyEnforcement
  parent: System.Security.Authentication.ExtendedProtection
  isExternal: false
  name: PolicyEnforcement
  nameWithType: PolicyEnforcement
  fullName: System.Security.Authentication.ExtendedProtection.PolicyEnforcement
- uid: System.Security.Authentication.ExtendedProtection.ChannelBinding
  commentId: T:System.Security.Authentication.ExtendedProtection.ChannelBinding
  parent: System.Security.Authentication.ExtendedProtection
  isExternal: false
  name: ChannelBinding
  nameWithType: ChannelBinding
  fullName: System.Security.Authentication.ExtendedProtection.ChannelBinding
- uid: System.Security.Authentication.ExtendedProtection.ProtectionScenario
  commentId: T:System.Security.Authentication.ExtendedProtection.ProtectionScenario
  parent: System.Security.Authentication.ExtendedProtection
  isExternal: false
  name: ProtectionScenario
  nameWithType: ProtectionScenario
  fullName: System.Security.Authentication.ExtendedProtection.ProtectionScenario
- uid: System.Collections.ICollection
  commentId: T:System.Collections.ICollection
  parent: System.Collections
  isExternal: false
  name: ICollection
  nameWithType: ICollection
  fullName: System.Collections.ICollection
- uid: System.Collections
  commentId: N:System.Collections
  isExternal: false
  name: System.Collections
  nameWithType: System.Collections
  fullName: System.Collections
- uid: System.Security.Authentication.ExtendedProtection.ServiceNameCollection
  commentId: T:System.Security.Authentication.ExtendedProtection.ServiceNameCollection
  parent: System.Security.Authentication.ExtendedProtection
  isExternal: false
  name: ServiceNameCollection
  nameWithType: ServiceNameCollection
  fullName: System.Security.Authentication.ExtendedProtection.ServiceNameCollection
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: false
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: false
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.ArgumentException
  commentId: T:System.ArgumentException
  parent: System
  isExternal: false
  name: ArgumentException
  nameWithType: ArgumentException
  fullName: System.ArgumentException
- uid: System.ArgumentNullException
  commentId: T:System.ArgumentNullException
  isExternal: false
  name: ArgumentNullException
  nameWithType: ArgumentNullException
  fullName: System.ArgumentNullException
