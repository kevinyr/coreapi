items:
- uid: System.Diagnostics.StackTrace
  commentId: T:System.Diagnostics.StackTrace
  id: StackTrace
  parent: System.Diagnostics
  children:
  - System.Diagnostics.StackTrace.#ctor(System.Exception,System.Boolean)
  - System.Diagnostics.StackTrace.GetFrames
  - System.Diagnostics.StackTrace.ToString
  langs:
  - csharp
  - vb
  name: StackTrace
  fullName: System.Diagnostics.StackTrace
  type: Class
  source:
    remote:
      path: src/mscorlib/src/System/Diagnostics/Stacktrace.cs
      branch: master
      repo: https://github.com/dotnet/coreclr.git
    id: StackTrace
    path: src/mscorlib/src/System/Diagnostics/Stacktrace.cs
    startLine: 277
  assemblies:
  - System.Diagnostics.StackTrace
  namespace: System.Diagnostics
  summary: "\n<p>Represents a stack trace, which is an ordered collection of one or more stack frames.</p>\n"
  syntax:
    content: >-
      [ComVisible(true)]

      public class StackTrace
    content.vb: >-
      <ComVisible(True)>

      Public Class StackTrace
  seealso:
  - type: System.Exception.StackTrace
    commentId: P:System.Exception.StackTrace
  - type: System.Environment.StackTrace
    commentId: P:System.Environment.StackTrace
  - type: System.Runtime.Serialization.Formatters.ServerFault.StackTrace
    commentId: P:System.Runtime.Serialization.Formatters.ServerFault.StackTrace
  see:
  - type: System.Security.Permissions.SecurityAction.InheritanceDemand
    commentId: F:System.Security.Permissions.SecurityAction.InheritanceDemand
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  modifiers.csharp:
  - public
  - sealed
  - class
  modifiers.vb:
  - Public
  - NotInheritable
  - Class
  nameWithType: StackTrace
- uid: System.Diagnostics.StackTrace.#ctor(System.Exception,System.Boolean)
  commentId: M:System.Diagnostics.StackTrace.#ctor(System.Exception,System.Boolean)
  id: '#ctor(System.Exception,System.Boolean)'
  parent: System.Diagnostics.StackTrace
  langs:
  - csharp
  - vb
  name: StackTrace(Exception, Boolean)
  fullName: System.Diagnostics.StackTrace.StackTrace(System.Exception, System.Boolean)
  type: Constructor
  source:
    remote:
      path: src/mscorlib/src/System/Diagnostics/Stacktrace.cs
      branch: master
      repo: https://github.com/dotnet/coreclr.git
    id: .ctor
    path: src/mscorlib/src/System/Diagnostics/Stacktrace.cs
    startLine: 364
  assemblies:
  - System.Diagnostics.StackTrace
  namespace: System.Diagnostics
  summary: "\n<p>Initializes a new instance of the <xref href=\"System.Diagnostics.StackTrace\" data-throw-if-not-resolved=\"false\"></xref> class, using the provided exception object and optionally capturing source information.</p>\n"
  syntax:
    content: >-
      [SecurityCritical]

      public StackTrace(Exception e, bool fNeedFileInfo)
    content.vb: >-
      <SecurityCritical>

      Public Sub New(e As Exception, fNeedFileInfo As Boolean)
    parameters:
    - id: e
      type: System.Exception
      description: "\n<p>The exception object from which to construct the stack trace. </p>\n"
    - id: fNeedFileInfo
      type: System.Boolean
      description: "\n<p>\n<strong>true</strong> to capture the file name, line number, and column number; otherwise, <strong>false</strong>. </p>\n"
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "\n<p>The parameter <em>e</em> is <strong>null</strong>. </p>\n"
  seealso:
  - type: System.Exception
    commentId: T:System.Exception
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  nameWithType: StackTrace.StackTrace(Exception, Boolean)
- uid: System.Diagnostics.StackTrace.GetFrames
  commentId: M:System.Diagnostics.StackTrace.GetFrames
  id: GetFrames
  parent: System.Diagnostics.StackTrace
  langs:
  - csharp
  - vb
  name: GetFrames()
  fullName: System.Diagnostics.StackTrace.GetFrames()
  type: Method
  source:
    remote:
      path: src/mscorlib/src/System/Diagnostics/Stacktrace.cs
      branch: master
      repo: https://github.com/dotnet/coreclr.git
    id: GetFrames
    path: src/mscorlib/src/System/Diagnostics/Stacktrace.cs
    startLine: 567
  assemblies:
  - System.Diagnostics.StackTrace
  namespace: System.Diagnostics
  summary: "\n<p>Returns a copy of all stack frames in the current stack trace.</p>\n"
  syntax:
    content: >-
      [ComVisible(false)]

      public virtual StackFrame[] GetFrames()
    content.vb: >-
      <ComVisible(False)>

      Public Overridable Function GetFrames As StackFrame()
    return:
      type: System.Diagnostics.StackFrame[]
      description: "\n<p>An array of type <xref href=\"System.Diagnostics.StackFrame\" data-throw-if-not-resolved=\"false\"></xref> representing the function calls in the stack trace.</p>\n"
  seealso:
  - type: System.Diagnostics.StackFrame
    commentId: T:System.Diagnostics.StackFrame
  - type: System.Diagnostics.StackTrace.GetFrame(System.Int32)
    commentId: M:System.Diagnostics.StackTrace.GetFrame(System.Int32)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  nameWithType: StackTrace.GetFrames()
- uid: System.Diagnostics.StackTrace.ToString
  commentId: M:System.Diagnostics.StackTrace.ToString
  id: ToString
  parent: System.Diagnostics.StackTrace
  langs:
  - csharp
  - vb
  name: ToString()
  fullName: System.Diagnostics.StackTrace.ToString()
  type: Method
  source:
    remote:
      path: src/mscorlib/src/System/Diagnostics/Stacktrace.cs
      branch: master
      repo: https://github.com/dotnet/coreclr.git
    id: ToString
    path: src/mscorlib/src/System/Diagnostics/Stacktrace.cs
    startLine: 583
  assemblies:
  - System.Diagnostics.StackTrace
  namespace: System.Diagnostics
  summary: "\n<p>Builds a readable representation of the stack trace.</p>\n"
  syntax:
    content: >-
      [SecuritySafeCritical]

      public override string ToString()
    content.vb: >-
      <SecuritySafeCritical>

      Public Overrides Function ToString As String
    return:
      type: System.String
      description: "\n<p>A readable representation of the stack trace.</p>\n"
  overridden: System.Object.ToString
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
  nameWithType: StackTrace.ToString()
references:
- uid: System.Diagnostics
  isExternal: false
  name: System.Diagnostics
  fullName: System.Diagnostics
  nameWithType: System.Diagnostics
  commentId: N:System.Diagnostics
- uid: System.Object
  parent: System
  isExternal: false
  name: Object
  fullName: System.Object
  nameWithType: Object
  commentId: T:System.Object
- uid: System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
  nameWithType: Object.Equals(Object)
  commentId: M:System.Object.Equals(System.Object)
- uid: System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
  nameWithType: Object.Equals(Object, Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
  nameWithType: Object.ReferenceEquals(Object, Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
- uid: System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  nameWithType: Object.GetHashCode()
  commentId: M:System.Object.GetHashCode
- uid: System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  nameWithType: Object.GetType()
  commentId: M:System.Object.GetType
- uid: System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  nameWithType: Object.MemberwiseClone()
  commentId: M:System.Object.MemberwiseClone
- uid: System
  isExternal: false
  name: System
  fullName: System
  nameWithType: System
  commentId: N:System
- uid: System.Exception
  parent: System
  isExternal: false
  name: Exception
  fullName: System.Exception
  nameWithType: Exception
  commentId: T:System.Exception
- uid: System.Boolean
  parent: System
  isExternal: false
  name: Boolean
  fullName: System.Boolean
  nameWithType: Boolean
  commentId: T:System.Boolean
- uid: System.Diagnostics.StackFrame[]
  name: StackFrame[]
  fullName: System.Diagnostics.StackFrame[]
  fullname.vb: System.Diagnostics.StackFrame()
  name.vb: StackFrame()
  spec.csharp:
  - uid: System.Diagnostics.StackFrame
    name: StackFrame
    fullName: System.Diagnostics.StackFrame
  - name: '[]'
    fullName: '[]'
  spec.vb:
  - uid: System.Diagnostics.StackFrame
    name: StackFrame
    fullName: System.Diagnostics.StackFrame
  - name: ()
    fullName: ()
  nameWithType: StackFrame[]
  nameWithType.vb: StackFrame()
- uid: System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  nameWithType: Object.ToString()
  commentId: M:System.Object.ToString
- uid: System.String
  parent: System
  isExternal: false
  name: String
  fullName: System.String
  nameWithType: String
  commentId: T:System.String
- uid: System.ArgumentNullException
  isExternal: false
  name: ArgumentNullException
  fullName: System.ArgumentNullException
  nameWithType: ArgumentNullException
  commentId: T:System.ArgumentNullException
