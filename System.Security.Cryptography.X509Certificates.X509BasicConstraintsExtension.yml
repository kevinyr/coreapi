items:
- uid: System.Security.Cryptography.X509Certificates.X509BasicConstraintsExtension
  commentId: T:System.Security.Cryptography.X509Certificates.X509BasicConstraintsExtension
  id: X509BasicConstraintsExtension
  parent: System.Security.Cryptography.X509Certificates
  children:
  - System.Security.Cryptography.X509Certificates.X509BasicConstraintsExtension.#ctor
  - System.Security.Cryptography.X509Certificates.X509BasicConstraintsExtension.#ctor(System.Boolean,System.Boolean,System.Int32,System.Boolean)
  - System.Security.Cryptography.X509Certificates.X509BasicConstraintsExtension.#ctor(System.Security.Cryptography.AsnEncodedData,System.Boolean)
  - System.Security.Cryptography.X509Certificates.X509BasicConstraintsExtension.CertificateAuthority
  - System.Security.Cryptography.X509Certificates.X509BasicConstraintsExtension.CopyFrom(System.Security.Cryptography.AsnEncodedData)
  - System.Security.Cryptography.X509Certificates.X509BasicConstraintsExtension.HasPathLengthConstraint
  - System.Security.Cryptography.X509Certificates.X509BasicConstraintsExtension.PathLengthConstraint
  langs:
  - csharp
  - vb
  name: X509BasicConstraintsExtension
  fullName: System.Security.Cryptography.X509Certificates.X509BasicConstraintsExtension
  type: Class
  source:
    remote:
      path: src/System.Security.Cryptography.X509Certificates/src/System/Security/Cryptography/X509Certificates/X509BasicConstraintsExtension.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: X509BasicConstraintsExtension
    path: src/System.Security.Cryptography.X509Certificates/src/System/Security/Cryptography/X509Certificates/X509BasicConstraintsExtension.cs
    startLine: 16
  assemblies:
  - System.Security.Cryptography.X509Certificates
  namespace: System.Security.Cryptography.X509Certificates
  summary: "\n<p>Defines the constraints set on a certificate. This class cannot be inherited.</p>\n"
  syntax:
    content: 'public sealed class X509BasicConstraintsExtension : X509Extension'
    content.vb: >-
      Public NotInheritable Class X509BasicConstraintsExtension
          Inherits X509Extension
  inheritance:
  - System.Object
  - System.Security.Cryptography.X509Certificates.X509Extension
  inheritedMembers:
  - System.Security.Cryptography.X509Certificates.X509Extension.Critical
  modifiers.csharp:
  - public
  - sealed
  - class
  modifiers.vb:
  - Public
  - NotInheritable
  - Class
  nameWithType: X509BasicConstraintsExtension
- uid: System.Security.Cryptography.X509Certificates.X509BasicConstraintsExtension.#ctor
  commentId: M:System.Security.Cryptography.X509Certificates.X509BasicConstraintsExtension.#ctor
  id: '#ctor'
  parent: System.Security.Cryptography.X509Certificates.X509BasicConstraintsExtension
  langs:
  - csharp
  - vb
  name: X509BasicConstraintsExtension()
  fullName: System.Security.Cryptography.X509Certificates.X509BasicConstraintsExtension.X509BasicConstraintsExtension()
  type: Constructor
  source:
    remote:
      path: src/System.Security.Cryptography.X509Certificates/src/System/Security/Cryptography/X509Certificates/X509BasicConstraintsExtension.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: .ctor
    path: src/System.Security.Cryptography.X509Certificates/src/System/Security/Cryptography/X509Certificates/X509BasicConstraintsExtension.cs
    startLine: 18
  assemblies:
  - System.Security.Cryptography.X509Certificates
  namespace: System.Security.Cryptography.X509Certificates
  summary: "\n<p>Initializes a new instance of the <xref href=\"System.Security.Cryptography.X509Certificates.X509BasicConstraintsExtension\" data-throw-if-not-resolved=\"false\"></xref> class.</p>\n"
  syntax:
    content: public X509BasicConstraintsExtension()
    content.vb: Public Sub New
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  nameWithType: X509BasicConstraintsExtension.X509BasicConstraintsExtension()
- uid: System.Security.Cryptography.X509Certificates.X509BasicConstraintsExtension.#ctor(System.Boolean,System.Boolean,System.Int32,System.Boolean)
  commentId: M:System.Security.Cryptography.X509Certificates.X509BasicConstraintsExtension.#ctor(System.Boolean,System.Boolean,System.Int32,System.Boolean)
  id: '#ctor(System.Boolean,System.Boolean,System.Int32,System.Boolean)'
  parent: System.Security.Cryptography.X509Certificates.X509BasicConstraintsExtension
  langs:
  - csharp
  - vb
  name: X509BasicConstraintsExtension(Boolean, Boolean, Int32, Boolean)
  fullName: System.Security.Cryptography.X509Certificates.X509BasicConstraintsExtension.X509BasicConstraintsExtension(System.Boolean, System.Boolean, System.Int32, System.Boolean)
  type: Constructor
  source:
    remote:
      path: src/System.Security.Cryptography.X509Certificates/src/System/Security/Cryptography/X509Certificates/X509BasicConstraintsExtension.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: .ctor
    path: src/System.Security.Cryptography.X509Certificates/src/System/Security/Cryptography/X509Certificates/X509BasicConstraintsExtension.cs
    startLine: 24
  assemblies:
  - System.Security.Cryptography.X509Certificates
  namespace: System.Security.Cryptography.X509Certificates
  summary: "\n<p>Initializes a new instance of the <xref href=\"System.Security.Cryptography.X509Certificates.X509BasicConstraintsExtension\" data-throw-if-not-resolved=\"false\"></xref> class. Parameters specify a value that indicates whether a certificate is a certificate authority (CA) certificate, a value that indicates whether the certificate has a restriction on the number of path levels it allows, the number of levels allowed in a certificate's path, and a value that indicates whether the extension is critical.  </p>\n"
  syntax:
    content: public X509BasicConstraintsExtension(bool certificateAuthority, bool hasPathLengthConstraint, int pathLengthConstraint, bool critical)
    content.vb: Public Sub New(certificateAuthority As Boolean, hasPathLengthConstraint As Boolean, pathLengthConstraint As Integer, critical As Boolean)
    parameters:
    - id: certificateAuthority
      type: System.Boolean
      description: "\n<p>\n<strong>true</strong> if the certificate is a certificate authority (CA) certificate; otherwise, <strong>false</strong>.</p>\n"
    - id: hasPathLengthConstraint
      type: System.Boolean
      description: "\n<p>\n<strong>true</strong> if the certificate has a restriction on the number of path levels it allows; otherwise, <strong>false</strong>.</p>\n"
    - id: pathLengthConstraint
      type: System.Int32
      description: "\n<p>The number of levels allowed in a certificate's path.</p>\n"
    - id: critical
      type: System.Boolean
      description: "\n<p>\n<strong>true</strong> if the extension is critical; otherwise, <strong>false</strong>.</p>\n"
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  nameWithType: X509BasicConstraintsExtension.X509BasicConstraintsExtension(Boolean, Boolean, Int32, Boolean)
- uid: System.Security.Cryptography.X509Certificates.X509BasicConstraintsExtension.#ctor(System.Security.Cryptography.AsnEncodedData,System.Boolean)
  commentId: M:System.Security.Cryptography.X509Certificates.X509BasicConstraintsExtension.#ctor(System.Security.Cryptography.AsnEncodedData,System.Boolean)
  id: '#ctor(System.Security.Cryptography.AsnEncodedData,System.Boolean)'
  parent: System.Security.Cryptography.X509Certificates.X509BasicConstraintsExtension
  langs:
  - csharp
  - vb
  name: X509BasicConstraintsExtension(AsnEncodedData, Boolean)
  fullName: System.Security.Cryptography.X509Certificates.X509BasicConstraintsExtension.X509BasicConstraintsExtension(System.Security.Cryptography.AsnEncodedData, System.Boolean)
  type: Constructor
  source:
    remote:
      path: src/System.Security.Cryptography.X509Certificates/ref/4.0/System.Security.Cryptography.X509Certificates.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: .ctor
    path: src/System.Security.Cryptography.X509Certificates/ref/4.0/System.Security.Cryptography.X509Certificates.cs
    startLine: 84
  assemblies:
  - System.Security.Cryptography.X509Certificates
  namespace: System.Security.Cryptography.X509Certificates
  summary: "\n<p>Initializes a new instance of the <xref href=\"System.Security.Cryptography.X509Certificates.X509BasicConstraintsExtension\" data-throw-if-not-resolved=\"false\"></xref> class using an <xref href=\"System.Security.Cryptography.AsnEncodedData\" data-throw-if-not-resolved=\"false\"></xref> object and a value that identifies whether the extension is critical. </p>\n"
  syntax:
    content: public X509BasicConstraintsExtension(AsnEncodedData encodedBasicConstraints, bool critical)
    content.vb: Public Sub New(encodedBasicConstraints As AsnEncodedData, critical As Boolean)
    parameters:
    - id: encodedBasicConstraints
      type: System.Security.Cryptography.AsnEncodedData
      description: "\n<p>The encoded data to use to create the extension.</p>\n"
    - id: critical
      type: System.Boolean
      description: "\n<p>\n<strong>true</strong> if the extension is critical; otherwise, <strong>false</strong>.</p>\n"
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  nameWithType: X509BasicConstraintsExtension.X509BasicConstraintsExtension(AsnEncodedData, Boolean)
- uid: System.Security.Cryptography.X509Certificates.X509BasicConstraintsExtension.CertificateAuthority
  commentId: P:System.Security.Cryptography.X509Certificates.X509BasicConstraintsExtension.CertificateAuthority
  id: CertificateAuthority
  parent: System.Security.Cryptography.X509Certificates.X509BasicConstraintsExtension
  langs:
  - csharp
  - vb
  name: CertificateAuthority
  fullName: System.Security.Cryptography.X509Certificates.X509BasicConstraintsExtension.CertificateAuthority
  type: Property
  source:
    remote:
      path: src/System.Security.Cryptography.X509Certificates/src/System/Security/Cryptography/X509Certificates/X509BasicConstraintsExtension.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: CertificateAuthority
    path: src/System.Security.Cryptography.X509Certificates/src/System/Security/Cryptography/X509Certificates/X509BasicConstraintsExtension.cs
    startLine: 34
  assemblies:
  - System.Security.Cryptography.X509Certificates
  namespace: System.Security.Cryptography.X509Certificates
  summary: "\n<p>Gets a value indicating whether a certificate is a certificate authority (CA) certificate.</p>\n"
  syntax:
    content: public bool CertificateAuthority { get; }
    content.vb: Public ReadOnly Property CertificateAuthority As Boolean
    parameters: []
    return:
      type: System.Boolean
      description: "\n<p>\n<strong>true</strong> if the certificate is a certificate authority (CA) certificate, otherwise, <strong>false</strong>.</p>\n"
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
  nameWithType: X509BasicConstraintsExtension.CertificateAuthority
- uid: System.Security.Cryptography.X509Certificates.X509BasicConstraintsExtension.HasPathLengthConstraint
  commentId: P:System.Security.Cryptography.X509Certificates.X509BasicConstraintsExtension.HasPathLengthConstraint
  id: HasPathLengthConstraint
  parent: System.Security.Cryptography.X509Certificates.X509BasicConstraintsExtension
  langs:
  - csharp
  - vb
  name: HasPathLengthConstraint
  fullName: System.Security.Cryptography.X509Certificates.X509BasicConstraintsExtension.HasPathLengthConstraint
  type: Property
  source:
    remote:
      path: src/System.Security.Cryptography.X509Certificates/src/System/Security/Cryptography/X509Certificates/X509BasicConstraintsExtension.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: HasPathLengthConstraint
    path: src/System.Security.Cryptography.X509Certificates/src/System/Security/Cryptography/X509Certificates/X509BasicConstraintsExtension.cs
    startLine: 45
  assemblies:
  - System.Security.Cryptography.X509Certificates
  namespace: System.Security.Cryptography.X509Certificates
  summary: "\n<p>Gets a value indicating whether a certificate has a restriction on the number of path levels it allows.</p>\n"
  syntax:
    content: public bool HasPathLengthConstraint { get; }
    content.vb: Public ReadOnly Property HasPathLengthConstraint As Boolean
    parameters: []
    return:
      type: System.Boolean
      description: "\n<p>\n<strong>true</strong> if the certificate has a restriction on the number of path levels it allows, otherwise, <strong>false</strong>.</p>\n"
  exceptions:
  - type: System.Security.Cryptography.CryptographicException
    commentId: T:System.Security.Cryptography.CryptographicException
    description: "\n<p>The extension cannot be decoded. </p>\n"
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
  nameWithType: X509BasicConstraintsExtension.HasPathLengthConstraint
- uid: System.Security.Cryptography.X509Certificates.X509BasicConstraintsExtension.PathLengthConstraint
  commentId: P:System.Security.Cryptography.X509Certificates.X509BasicConstraintsExtension.PathLengthConstraint
  id: PathLengthConstraint
  parent: System.Security.Cryptography.X509Certificates.X509BasicConstraintsExtension
  langs:
  - csharp
  - vb
  name: PathLengthConstraint
  fullName: System.Security.Cryptography.X509Certificates.X509BasicConstraintsExtension.PathLengthConstraint
  type: Property
  source:
    remote:
      path: src/System.Security.Cryptography.X509Certificates/src/System/Security/Cryptography/X509Certificates/X509BasicConstraintsExtension.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: PathLengthConstraint
    path: src/System.Security.Cryptography.X509Certificates/src/System/Security/Cryptography/X509Certificates/X509BasicConstraintsExtension.cs
    startLine: 56
  assemblies:
  - System.Security.Cryptography.X509Certificates
  namespace: System.Security.Cryptography.X509Certificates
  summary: "\n<p>Gets the number of levels allowed in a certificate's path.</p>\n"
  syntax:
    content: public int PathLengthConstraint { get; }
    content.vb: Public ReadOnly Property PathLengthConstraint As Integer
    parameters: []
    return:
      type: System.Int32
      description: "\n<p>An integer indicating the number of levels allowed in a certificate's path.</p>\n"
  exceptions:
  - type: System.Security.Cryptography.CryptographicException
    commentId: T:System.Security.Cryptography.CryptographicException
    description: "\n<p>The extension cannot be decoded. </p>\n"
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
  nameWithType: X509BasicConstraintsExtension.PathLengthConstraint
- uid: System.Security.Cryptography.X509Certificates.X509BasicConstraintsExtension.CopyFrom(System.Security.Cryptography.AsnEncodedData)
  commentId: M:System.Security.Cryptography.X509Certificates.X509BasicConstraintsExtension.CopyFrom(System.Security.Cryptography.AsnEncodedData)
  id: CopyFrom(System.Security.Cryptography.AsnEncodedData)
  parent: System.Security.Cryptography.X509Certificates.X509BasicConstraintsExtension
  langs:
  - csharp
  - vb
  name: CopyFrom(AsnEncodedData)
  fullName: System.Security.Cryptography.X509Certificates.X509BasicConstraintsExtension.CopyFrom(System.Security.Cryptography.AsnEncodedData)
  type: Method
  source:
    remote:
      path: src/System.Security.Cryptography.X509Certificates/ref/4.0/System.Security.Cryptography.X509Certificates.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: CopyFrom
    path: src/System.Security.Cryptography.X509Certificates/ref/4.0/System.Security.Cryptography.X509Certificates.cs
    startLine: 88
  assemblies:
  - System.Security.Cryptography.X509Certificates
  namespace: System.Security.Cryptography.X509Certificates
  summary: "\n<p>Initializes a new instance of the <xref href=\"System.Security.Cryptography.X509Certificates.X509BasicConstraintsExtension\" data-throw-if-not-resolved=\"false\"></xref> class using an <xref href=\"System.Security.Cryptography.AsnEncodedData\" data-throw-if-not-resolved=\"false\"></xref> object.</p>\n"
  syntax:
    content: public override void CopyFrom(AsnEncodedData asnEncodedData)
    content.vb: Public Overrides Sub CopyFrom(asnEncodedData As AsnEncodedData)
    parameters:
    - id: asnEncodedData
      type: System.Security.Cryptography.AsnEncodedData
      description: "\n<p>The encoded data to use to create the extension.</p>\n"
  overridden: System.Security.Cryptography.X509Certificates.X509Extension.CopyFrom(System.Security.Cryptography.AsnEncodedData)
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
  nameWithType: X509BasicConstraintsExtension.CopyFrom(AsnEncodedData)
references:
- uid: System.Security.Cryptography.X509Certificates
  isExternal: false
  name: System.Security.Cryptography.X509Certificates
  fullName: System.Security.Cryptography.X509Certificates
  nameWithType: System.Security.Cryptography.X509Certificates
  commentId: N:System.Security.Cryptography.X509Certificates
- uid: System.Object
  parent: System
  isExternal: false
  name: Object
  fullName: System.Object
  nameWithType: Object
  commentId: T:System.Object
- uid: System.Security.Cryptography.X509Certificates.X509Extension
  parent: System.Security.Cryptography.X509Certificates
  isExternal: false
  name: X509Extension
  fullName: System.Security.Cryptography.X509Certificates.X509Extension
  nameWithType: X509Extension
  commentId: T:System.Security.Cryptography.X509Certificates.X509Extension
- uid: System.Security.Cryptography.X509Certificates.X509Extension.Critical
  parent: System.Security.Cryptography.X509Certificates.X509Extension
  isExternal: false
  name: Critical
  fullName: System.Security.Cryptography.X509Certificates.X509Extension.Critical
  nameWithType: X509Extension.Critical
  commentId: P:System.Security.Cryptography.X509Certificates.X509Extension.Critical
- uid: System
  isExternal: false
  name: System
  fullName: System
  nameWithType: System
  commentId: N:System
- uid: System.Boolean
  parent: System
  isExternal: false
  name: Boolean
  fullName: System.Boolean
  nameWithType: Boolean
  commentId: T:System.Boolean
- uid: System.Int32
  parent: System
  isExternal: false
  name: Int32
  fullName: System.Int32
  nameWithType: Int32
  commentId: T:System.Int32
- uid: System.Security.Cryptography.AsnEncodedData
  parent: System.Security.Cryptography
  isExternal: false
  name: AsnEncodedData
  fullName: System.Security.Cryptography.AsnEncodedData
  nameWithType: AsnEncodedData
  commentId: T:System.Security.Cryptography.AsnEncodedData
- uid: System.Security.Cryptography
  isExternal: false
  name: System.Security.Cryptography
  fullName: System.Security.Cryptography
  nameWithType: System.Security.Cryptography
  commentId: N:System.Security.Cryptography
- uid: System.Security.Cryptography.X509Certificates.X509Extension.CopyFrom(System.Security.Cryptography.AsnEncodedData)
  parent: System.Security.Cryptography.X509Certificates.X509Extension
  isExternal: true
  name: CopyFrom(AsnEncodedData)
  fullName: System.Security.Cryptography.X509Certificates.X509Extension.CopyFrom(System.Security.Cryptography.AsnEncodedData)
  spec.csharp:
  - uid: System.Security.Cryptography.X509Certificates.X509Extension.CopyFrom(System.Security.Cryptography.AsnEncodedData)
    name: CopyFrom
    fullName: System.Security.Cryptography.X509Certificates.X509Extension.CopyFrom
  - name: (
    fullName: (
  - uid: System.Security.Cryptography.AsnEncodedData
    name: AsnEncodedData
    fullName: System.Security.Cryptography.AsnEncodedData
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Security.Cryptography.X509Certificates.X509Extension.CopyFrom(System.Security.Cryptography.AsnEncodedData)
    name: CopyFrom
    fullName: System.Security.Cryptography.X509Certificates.X509Extension.CopyFrom
  - name: (
    fullName: (
  - uid: System.Security.Cryptography.AsnEncodedData
    name: AsnEncodedData
    fullName: System.Security.Cryptography.AsnEncodedData
    isExternal: true
  - name: )
    fullName: )
  nameWithType: X509Extension.CopyFrom(AsnEncodedData)
  commentId: M:System.Security.Cryptography.X509Certificates.X509Extension.CopyFrom(System.Security.Cryptography.AsnEncodedData)
- uid: System.Security.Cryptography.CryptographicException
  isExternal: false
  name: CryptographicException
  fullName: System.Security.Cryptography.CryptographicException
  nameWithType: CryptographicException
  commentId: T:System.Security.Cryptography.CryptographicException
