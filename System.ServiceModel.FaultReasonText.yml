items:
- uid: System.ServiceModel.FaultReasonText
  commentId: T:System.ServiceModel.FaultReasonText
  id: FaultReasonText
  parent: System.ServiceModel
  children:
  - System.ServiceModel.FaultReasonText.#ctor(System.String)
  - System.ServiceModel.FaultReasonText.#ctor(System.String,System.String)
  - System.ServiceModel.FaultReasonText.Matches(System.Globalization.CultureInfo)
  - System.ServiceModel.FaultReasonText.Text
  - System.ServiceModel.FaultReasonText.XmlLang
  langs:
  - csharp
  - vb
  name: FaultReasonText
  fullName: System.ServiceModel.FaultReasonText
  type: Class
  source:
    remote:
      path: src/System.Private.ServiceModel/src/System/ServiceModel/FaultReasonText.cs
      branch: master
      repo: https://github.com/dotnet/wcf.git
    id: FaultReasonText
    path: src/System.Private.ServiceModel/src/System/ServiceModel/FaultReasonText.cs
    startLine: 9
  assemblies:
  - System.ServiceModel.Primitives
  namespace: System.ServiceModel
  summary: "\n<p>Represents the text of the reason of a SOAP fault.</p>\n"
  syntax:
    content: public class FaultReasonText
    content.vb: Public Class FaultReasonText
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
  nameWithType: FaultReasonText
- uid: System.ServiceModel.FaultReasonText.#ctor(System.String)
  commentId: M:System.ServiceModel.FaultReasonText.#ctor(System.String)
  id: '#ctor(System.String)'
  parent: System.ServiceModel.FaultReasonText
  langs:
  - csharp
  - vb
  name: FaultReasonText(String)
  fullName: System.ServiceModel.FaultReasonText.FaultReasonText(System.String)
  type: Constructor
  source:
    remote:
      path: src/System.Private.ServiceModel/src/System/ServiceModel/FaultReasonText.cs
      branch: master
      repo: https://github.com/dotnet/wcf.git
    id: .ctor
    path: src/System.Private.ServiceModel/src/System/ServiceModel/FaultReasonText.cs
    startLine: 14
  assemblies:
  - System.ServiceModel.Primitives
  namespace: System.ServiceModel
  summary: "\n<p>Initializes a new instance of the <xref href=\"System.ServiceModel.FaultReasonText\" data-throw-if-not-resolved=\"false\"></xref> class that uses the specified fault text.</p>\n"
  syntax:
    content: public FaultReasonText(string text)
    content.vb: Public Sub New(text As String)
    parameters:
    - id: text
      type: System.String
      description: "\n<p>The text that is the SOAP fault reason.</p>\n"
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  nameWithType: FaultReasonText.FaultReasonText(String)
- uid: System.ServiceModel.FaultReasonText.#ctor(System.String,System.String)
  commentId: M:System.ServiceModel.FaultReasonText.#ctor(System.String,System.String)
  id: '#ctor(System.String,System.String)'
  parent: System.ServiceModel.FaultReasonText
  langs:
  - csharp
  - vb
  name: FaultReasonText(String, String)
  fullName: System.ServiceModel.FaultReasonText.FaultReasonText(System.String, System.String)
  type: Constructor
  source:
    remote:
      path: src/System.Private.ServiceModel/src/System/ServiceModel/FaultReasonText.cs
      branch: master
      repo: https://github.com/dotnet/wcf.git
    id: .ctor
    path: src/System.Private.ServiceModel/src/System/ServiceModel/FaultReasonText.cs
    startLine: 22
  assemblies:
  - System.ServiceModel.Primitives
  namespace: System.ServiceModel
  summary: "\n<p>Initializes a new instance of the <xref href=\"System.ServiceModel.FaultReasonText\" data-throw-if-not-resolved=\"false\"></xref> class. </p>\n"
  syntax:
    content: public FaultReasonText(string text, string xmlLang)
    content.vb: Public Sub New(text As String, xmlLang As String)
    parameters:
    - id: text
      type: System.String
      description: "\n<p>The text of the fault reason.</p>\n"
    - id: xmlLang
      type: System.String
      description: "\n<p>The language of the fault.</p>\n"
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  nameWithType: FaultReasonText.FaultReasonText(String, String)
- uid: System.ServiceModel.FaultReasonText.Text
  commentId: P:System.ServiceModel.FaultReasonText.Text
  id: Text
  parent: System.ServiceModel.FaultReasonText
  langs:
  - csharp
  - vb
  name: Text
  fullName: System.ServiceModel.FaultReasonText.Text
  type: Property
  source:
    remote:
      path: src/System.Private.ServiceModel/src/System/ServiceModel/FaultReasonText.cs
      branch: master
      repo: https://github.com/dotnet/wcf.git
    id: Text
    path: src/System.Private.ServiceModel/src/System/ServiceModel/FaultReasonText.cs
    startLine: 55
  assemblies:
  - System.ServiceModel.Primitives
  namespace: System.ServiceModel
  summary: "\n<p>Gets the text of the SOAP fault reason.</p>\n"
  syntax:
    content: public string Text { get; }
    content.vb: Public ReadOnly Property Text As String
    parameters: []
    return:
      type: System.String
      description: "\n<p>The text of the SOAP fault reason.</p>\n"
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
  nameWithType: FaultReasonText.Text
- uid: System.ServiceModel.FaultReasonText.XmlLang
  commentId: P:System.ServiceModel.FaultReasonText.XmlLang
  id: XmlLang
  parent: System.ServiceModel.FaultReasonText
  langs:
  - csharp
  - vb
  name: XmlLang
  fullName: System.ServiceModel.FaultReasonText.XmlLang
  type: Property
  source:
    remote:
      path: src/System.Private.ServiceModel/src/System/ServiceModel/FaultReasonText.cs
      branch: master
      repo: https://github.com/dotnet/wcf.git
    id: XmlLang
    path: src/System.Private.ServiceModel/src/System/ServiceModel/FaultReasonText.cs
    startLine: 50
  assemblies:
  - System.ServiceModel.Primitives
  namespace: System.ServiceModel
  summary: "\n<p>Gets the language of the SOAP fault reason.</p>\n"
  syntax:
    content: public string XmlLang { get; }
    content.vb: Public ReadOnly Property XmlLang As String
    parameters: []
    return:
      type: System.String
      description: "\n<p>The language of the SOAP fault reason.</p>\n"
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
  nameWithType: FaultReasonText.XmlLang
- uid: System.ServiceModel.FaultReasonText.Matches(System.Globalization.CultureInfo)
  commentId: M:System.ServiceModel.FaultReasonText.Matches(System.Globalization.CultureInfo)
  id: Matches(System.Globalization.CultureInfo)
  parent: System.ServiceModel.FaultReasonText
  langs:
  - csharp
  - vb
  name: Matches(CultureInfo)
  fullName: System.ServiceModel.FaultReasonText.Matches(System.Globalization.CultureInfo)
  type: Method
  source:
    remote:
      path: src/System.Private.ServiceModel/src/System/ServiceModel/FaultReasonText.cs
      branch: master
      repo: https://github.com/dotnet/wcf.git
    id: Matches
    path: src/System.Private.ServiceModel/src/System/ServiceModel/FaultReasonText.cs
    startLine: 42
  assemblies:
  - System.ServiceModel.Primitives
  namespace: System.ServiceModel
  summary: "\n<p>Returns a value that indicates whether the language of the description matches provided <xref href=\"System.Globalization.CultureInfo\" data-throw-if-not-resolved=\"false\"></xref> object.</p>\n"
  syntax:
    content: public bool Matches(CultureInfo cultureInfo)
    content.vb: Public Function Matches(cultureInfo As CultureInfo) As Boolean
    parameters:
    - id: cultureInfo
      type: System.Globalization.CultureInfo
      description: "\n<p>The <xref href=\"System.Globalization.CultureInfo\" data-throw-if-not-resolved=\"false\"></xref> object to compare with the language of the description.</p>\n"
    return:
      type: System.Boolean
      description: "\n<p>\n<strong>true</strong> if the specified <xref href=\"System.Globalization.CultureInfo\" data-throw-if-not-resolved=\"false\"></xref> matches; otherwise, <strong>false</strong>.</p>\n"
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  nameWithType: FaultReasonText.Matches(CultureInfo)
references:
- uid: System.ServiceModel
  isExternal: false
  name: System.ServiceModel
  fullName: System.ServiceModel
  nameWithType: System.ServiceModel
  commentId: N:System.ServiceModel
- uid: System.Object
  parent: System
  isExternal: false
  name: Object
  fullName: System.Object
  nameWithType: Object
  commentId: T:System.Object
- uid: System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  nameWithType: Object.ToString()
  commentId: M:System.Object.ToString
- uid: System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
  nameWithType: Object.Equals(Object)
  commentId: M:System.Object.Equals(System.Object)
- uid: System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
  nameWithType: Object.Equals(Object, Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
  nameWithType: Object.ReferenceEquals(Object, Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
- uid: System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  nameWithType: Object.GetHashCode()
  commentId: M:System.Object.GetHashCode
- uid: System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  nameWithType: Object.GetType()
  commentId: M:System.Object.GetType
- uid: System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  nameWithType: Object.MemberwiseClone()
  commentId: M:System.Object.MemberwiseClone
- uid: System
  isExternal: false
  name: System
  fullName: System
  nameWithType: System
  commentId: N:System
- uid: System.String
  parent: System
  isExternal: false
  name: String
  fullName: System.String
  nameWithType: String
  commentId: T:System.String
- uid: System.Globalization.CultureInfo
  parent: System.Globalization
  isExternal: false
  name: CultureInfo
  fullName: System.Globalization.CultureInfo
  nameWithType: CultureInfo
  commentId: T:System.Globalization.CultureInfo
- uid: System.Boolean
  parent: System
  isExternal: false
  name: Boolean
  fullName: System.Boolean
  nameWithType: Boolean
  commentId: T:System.Boolean
- uid: System.Globalization
  isExternal: false
  name: System.Globalization
  fullName: System.Globalization
  nameWithType: System.Globalization
  commentId: N:System.Globalization
