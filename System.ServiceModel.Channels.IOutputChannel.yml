### YamlMime:ManagedReference
items:
- uid: System.ServiceModel.Channels.IOutputChannel
  commentId: T:System.ServiceModel.Channels.IOutputChannel
  id: IOutputChannel
  parent: System.ServiceModel.Channels
  children:
  - System.ServiceModel.Channels.IOutputChannel.BeginSend(System.ServiceModel.Channels.Message,System.AsyncCallback,System.Object)
  - System.ServiceModel.Channels.IOutputChannel.BeginSend(System.ServiceModel.Channels.Message,System.TimeSpan,System.AsyncCallback,System.Object)
  - System.ServiceModel.Channels.IOutputChannel.EndSend(System.IAsyncResult)
  - System.ServiceModel.Channels.IOutputChannel.RemoteAddress
  - System.ServiceModel.Channels.IOutputChannel.Send(System.ServiceModel.Channels.Message)
  - System.ServiceModel.Channels.IOutputChannel.Send(System.ServiceModel.Channels.Message,System.TimeSpan)
  - System.ServiceModel.Channels.IOutputChannel.Via
  langs:
  - csharp
  - vb
  name: IOutputChannel
  nameWithType: IOutputChannel
  fullName: System.ServiceModel.Channels.IOutputChannel
  type: Interface
  source:
    remote:
      path: src/System.Private.ServiceModel/src/System/ServiceModel/Channels/IOutputChannel.cs
      branch: master
      repo: https://github.com/dotnet/wcf.git
    id: IOutputChannel
    path: src/System.Private.ServiceModel/src/System/ServiceModel/Channels/IOutputChannel.cs
    startLine: 10
  assemblies:
  - System.ServiceModel.Primitives
  namespace: System.ServiceModel.Channels
  summary: "\n<p>Defines the interface that a channel must implement to send a message. </p>\n"
  syntax:
    content: 'public interface IOutputChannel : IChannel, ICommunicationObject'
    content.vb: >-
      Public Interface IOutputChannel
          Inherits IChannel
  inheritedMembers:
  - System.ServiceModel.Channels.IChannel.GetProperty``1
  - System.ServiceModel.ICommunicationObject.State
  - System.ServiceModel.ICommunicationObject.Closed
  - System.ServiceModel.ICommunicationObject.Closing
  - System.ServiceModel.ICommunicationObject.Faulted
  - System.ServiceModel.ICommunicationObject.Opened
  - System.ServiceModel.ICommunicationObject.Opening
  - System.ServiceModel.ICommunicationObject.Abort
  - System.ServiceModel.ICommunicationObject.BeginClose(System.AsyncCallback,System.Object)
  - System.ServiceModel.ICommunicationObject.BeginClose(System.TimeSpan,System.AsyncCallback,System.Object)
  - System.ServiceModel.ICommunicationObject.BeginOpen(System.AsyncCallback,System.Object)
  - System.ServiceModel.ICommunicationObject.BeginOpen(System.TimeSpan,System.AsyncCallback,System.Object)
  - System.ServiceModel.ICommunicationObject.Close
  - System.ServiceModel.ICommunicationObject.Close(System.TimeSpan)
  - System.ServiceModel.ICommunicationObject.EndClose(System.IAsyncResult)
  - System.ServiceModel.ICommunicationObject.EndOpen(System.IAsyncResult)
  - System.ServiceModel.ICommunicationObject.Open
  - System.ServiceModel.ICommunicationObject.Open(System.TimeSpan)
  modifiers.csharp:
  - public
  - interface
  modifiers.vb:
  - Public
  - Interface
- uid: System.ServiceModel.Channels.IOutputChannel.RemoteAddress
  commentId: P:System.ServiceModel.Channels.IOutputChannel.RemoteAddress
  id: RemoteAddress
  parent: System.ServiceModel.Channels.IOutputChannel
  langs:
  - csharp
  - vb
  name: RemoteAddress
  nameWithType: IOutputChannel.RemoteAddress
  fullName: System.ServiceModel.Channels.IOutputChannel.RemoteAddress
  type: Property
  source:
    remote:
      path: src/System.Private.ServiceModel/src/System/ServiceModel/Channels/IOutputChannel.cs
      branch: master
      repo: https://github.com/dotnet/wcf.git
    id: RemoteAddress
    path: src/System.Private.ServiceModel/src/System/ServiceModel/Channels/IOutputChannel.cs
    startLine: 12
  assemblies:
  - System.ServiceModel.Primitives
  namespace: System.ServiceModel.Channels
  summary: "\n<p>Gets the destination of the service to which messages are sent out on the output channel. </p>\n"
  syntax:
    content: EndpointAddress RemoteAddress { get; }
    content.vb: ReadOnly Property RemoteAddress As EndpointAddress
    parameters: []
    return:
      type: System.ServiceModel.EndpointAddress
      description: "\n<p>The <xref href=\"System.ServiceModel.EndpointAddress\" data-throw-if-not-resolved=\"false\"></xref> of the service to which the output channel sends messages. </p>\n"
  modifiers.csharp:
  - get
  modifiers.vb:
  - ReadOnly
- uid: System.ServiceModel.Channels.IOutputChannel.Via
  commentId: P:System.ServiceModel.Channels.IOutputChannel.Via
  id: Via
  parent: System.ServiceModel.Channels.IOutputChannel
  langs:
  - csharp
  - vb
  name: Via
  nameWithType: IOutputChannel.Via
  fullName: System.ServiceModel.Channels.IOutputChannel.Via
  type: Property
  source:
    remote:
      path: src/System.Private.ServiceModel/src/System/ServiceModel/Channels/IOutputChannel.cs
      branch: master
      repo: https://github.com/dotnet/wcf.git
    id: Via
    path: src/System.Private.ServiceModel/src/System/ServiceModel/Channels/IOutputChannel.cs
    startLine: 13
  assemblies:
  - System.ServiceModel.Primitives
  namespace: System.ServiceModel.Channels
  summary: "\n<p>Gets the URI that contains the transport address to which messages are sent on the output channel.</p>\n"
  syntax:
    content: Uri Via { get; }
    content.vb: ReadOnly Property Via As Uri
    parameters: []
    return:
      type: Uri
      description: "\n<p>The <xref href=\"System.Uri\" data-throw-if-not-resolved=\"false\"></xref> that contains the transport address to which messages are sent on the output channel.</p>\n"
  modifiers.csharp:
  - get
  modifiers.vb:
  - ReadOnly
- uid: System.ServiceModel.Channels.IOutputChannel.BeginSend(System.ServiceModel.Channels.Message,System.AsyncCallback,System.Object)
  commentId: M:System.ServiceModel.Channels.IOutputChannel.BeginSend(System.ServiceModel.Channels.Message,System.AsyncCallback,System.Object)
  id: BeginSend(System.ServiceModel.Channels.Message,System.AsyncCallback,System.Object)
  parent: System.ServiceModel.Channels.IOutputChannel
  langs:
  - csharp
  - vb
  name: BeginSend(Message, AsyncCallback, Object)
  nameWithType: IOutputChannel.BeginSend(Message, AsyncCallback, Object)
  fullName: System.ServiceModel.Channels.IOutputChannel.BeginSend(System.ServiceModel.Channels.Message, System.AsyncCallback, System.Object)
  type: Method
  source:
    remote:
      path: src/System.Private.ServiceModel/src/System/ServiceModel/Channels/IOutputChannel.cs
      branch: master
      repo: https://github.com/dotnet/wcf.git
    id: BeginSend
    path: src/System.Private.ServiceModel/src/System/ServiceModel/Channels/IOutputChannel.cs
    startLine: 17
  assemblies:
  - System.ServiceModel.Primitives
  namespace: System.ServiceModel.Channels
  summary: "\n<p>Begins an asynchronous operation to transmit a message to the destination of the output channel. </p>\n"
  syntax:
    content: IAsyncResult BeginSend(Message message, AsyncCallback callback, object state)
    content.vb: Function BeginSend(message As Message, callback As AsyncCallback, state As Object) As IAsyncResult
    parameters:
    - id: message
      type: System.ServiceModel.Channels.Message
      description: "\n<p>The <xref href=\"System.ServiceModel.Channels.Message\" data-throw-if-not-resolved=\"false\"></xref> being sent on the output channel. </p>\n"
    - id: callback
      type: System.AsyncCallback
      description: "\n<p>The <xref href=\"System.AsyncCallback\" data-throw-if-not-resolved=\"false\"></xref> delegate. </p>\n"
    - id: state
      type: System.Object
      description: "\n<p>An object, specified by the application, that contains state information associated with the asynchronous send operation.</p>\n"
    return:
      type: System.IAsyncResult
      description: "\n<p>The <xref href=\"System.IAsyncResult\" data-throw-if-not-resolved=\"false\"></xref> that references the asynchronous message transmission. </p>\n"
- uid: System.ServiceModel.Channels.IOutputChannel.BeginSend(System.ServiceModel.Channels.Message,System.TimeSpan,System.AsyncCallback,System.Object)
  commentId: M:System.ServiceModel.Channels.IOutputChannel.BeginSend(System.ServiceModel.Channels.Message,System.TimeSpan,System.AsyncCallback,System.Object)
  id: BeginSend(System.ServiceModel.Channels.Message,System.TimeSpan,System.AsyncCallback,System.Object)
  parent: System.ServiceModel.Channels.IOutputChannel
  langs:
  - csharp
  - vb
  name: BeginSend(Message, TimeSpan, AsyncCallback, Object)
  nameWithType: IOutputChannel.BeginSend(Message, TimeSpan, AsyncCallback, Object)
  fullName: System.ServiceModel.Channels.IOutputChannel.BeginSend(System.ServiceModel.Channels.Message, System.TimeSpan, System.AsyncCallback, System.Object)
  type: Method
  source:
    remote:
      path: src/System.Private.ServiceModel/src/System/ServiceModel/Channels/IOutputChannel.cs
      branch: master
      repo: https://github.com/dotnet/wcf.git
    id: BeginSend
    path: src/System.Private.ServiceModel/src/System/ServiceModel/Channels/IOutputChannel.cs
    startLine: 18
  assemblies:
  - System.ServiceModel.Primitives
  namespace: System.ServiceModel.Channels
  summary: "\n<p>Begins an asynchronous operation to transmit a message to the destination of the output channel within a specified interval of time.</p>\n"
  syntax:
    content: IAsyncResult BeginSend(Message message, TimeSpan timeout, AsyncCallback callback, object state)
    content.vb: Function BeginSend(message As Message, timeout As TimeSpan, callback As AsyncCallback, state As Object) As IAsyncResult
    parameters:
    - id: message
      type: System.ServiceModel.Channels.Message
      description: "\n<p>The <xref href=\"System.ServiceModel.Channels.Message\" data-throw-if-not-resolved=\"false\"></xref> being sent on the output channel.</p>\n"
    - id: timeout
      type: System.TimeSpan
      description: "\n<p>The <xref href=\"System.TimeSpan\" data-throw-if-not-resolved=\"false\"></xref> that specifies how long the send operation has to complete before timing out.</p>\n"
    - id: callback
      type: System.AsyncCallback
      description: "\n<p>The <xref href=\"System.AsyncCallback\" data-throw-if-not-resolved=\"false\"></xref> delegate that receives the notification of the asynchronous operation send completion.</p>\n"
    - id: state
      type: System.Object
      description: "\n<p>An object, specified by the application, that contains state information associated with the asynchronous send operation.</p>\n"
    return:
      type: System.IAsyncResult
      description: "\n<p>The <xref href=\"System.IAsyncResult\" data-throw-if-not-resolved=\"false\"></xref> that references the asynchronous send operation.</p>\n"
- uid: System.ServiceModel.Channels.IOutputChannel.EndSend(System.IAsyncResult)
  commentId: M:System.ServiceModel.Channels.IOutputChannel.EndSend(System.IAsyncResult)
  id: EndSend(System.IAsyncResult)
  parent: System.ServiceModel.Channels.IOutputChannel
  langs:
  - csharp
  - vb
  name: EndSend(IAsyncResult)
  nameWithType: IOutputChannel.EndSend(IAsyncResult)
  fullName: System.ServiceModel.Channels.IOutputChannel.EndSend(System.IAsyncResult)
  type: Method
  source:
    remote:
      path: src/System.Private.ServiceModel/src/System/ServiceModel/Channels/IOutputChannel.cs
      branch: master
      repo: https://github.com/dotnet/wcf.git
    id: EndSend
    path: src/System.Private.ServiceModel/src/System/ServiceModel/Channels/IOutputChannel.cs
    startLine: 19
  assemblies:
  - System.ServiceModel.Primitives
  namespace: System.ServiceModel.Channels
  summary: "\n<p>Completes an asynchronous operation to transmit a message to the destination of the output channel. </p>\n"
  syntax:
    content: void EndSend(IAsyncResult result)
    content.vb: Sub EndSend(result As IAsyncResult)
    parameters:
    - id: result
      type: System.IAsyncResult
      description: "\n<p>The <xref href=\"System.IAsyncResult\" data-throw-if-not-resolved=\"false\"></xref> returned by a call to the <xref href=\"System.ServiceModel.Channels.IOutputChannel.BeginSend\" data-throw-if-not-resolved=\"false\"></xref>  method. </p>\n"
- uid: System.ServiceModel.Channels.IOutputChannel.Send(System.ServiceModel.Channels.Message)
  commentId: M:System.ServiceModel.Channels.IOutputChannel.Send(System.ServiceModel.Channels.Message)
  id: Send(System.ServiceModel.Channels.Message)
  parent: System.ServiceModel.Channels.IOutputChannel
  langs:
  - csharp
  - vb
  name: Send(Message)
  nameWithType: IOutputChannel.Send(Message)
  fullName: System.ServiceModel.Channels.IOutputChannel.Send(System.ServiceModel.Channels.Message)
  type: Method
  source:
    remote:
      path: src/System.Private.ServiceModel/src/System/ServiceModel/Channels/IOutputChannel.cs
      branch: master
      repo: https://github.com/dotnet/wcf.git
    id: Send
    path: src/System.Private.ServiceModel/src/System/ServiceModel/Channels/IOutputChannel.cs
    startLine: 15
  assemblies:
  - System.ServiceModel.Primitives
  namespace: System.ServiceModel.Channels
  summary: "\n<p>Transmits a message to the destination of the output channel. </p>\n"
  syntax:
    content: void Send(Message message)
    content.vb: Sub Send(message As Message)
    parameters:
    - id: message
      type: System.ServiceModel.Channels.Message
      description: "\n<p>The <xref href=\"System.ServiceModel.Channels.Message\" data-throw-if-not-resolved=\"false\"></xref> being sent on the output channel.</p>\n"
- uid: System.ServiceModel.Channels.IOutputChannel.Send(System.ServiceModel.Channels.Message,System.TimeSpan)
  commentId: M:System.ServiceModel.Channels.IOutputChannel.Send(System.ServiceModel.Channels.Message,System.TimeSpan)
  id: Send(System.ServiceModel.Channels.Message,System.TimeSpan)
  parent: System.ServiceModel.Channels.IOutputChannel
  langs:
  - csharp
  - vb
  name: Send(Message, TimeSpan)
  nameWithType: IOutputChannel.Send(Message, TimeSpan)
  fullName: System.ServiceModel.Channels.IOutputChannel.Send(System.ServiceModel.Channels.Message, System.TimeSpan)
  type: Method
  source:
    remote:
      path: src/System.Private.ServiceModel/src/System/ServiceModel/Channels/IOutputChannel.cs
      branch: master
      repo: https://github.com/dotnet/wcf.git
    id: Send
    path: src/System.Private.ServiceModel/src/System/ServiceModel/Channels/IOutputChannel.cs
    startLine: 16
  assemblies:
  - System.ServiceModel.Primitives
  namespace: System.ServiceModel.Channels
  summary: "\n<p>Sends a message on the current output channel within a specified interval of time.</p>\n"
  syntax:
    content: void Send(Message message, TimeSpan timeout)
    content.vb: Sub Send(message As Message, timeout As TimeSpan)
    parameters:
    - id: message
      type: System.ServiceModel.Channels.Message
      description: "\n<p>The <xref href=\"System.ServiceModel.Channels.Message\" data-throw-if-not-resolved=\"false\"></xref> being sent on the output channel.</p>\n"
    - id: timeout
      type: System.TimeSpan
      description: "\n<p>The <xref href=\"System.TimeSpan\" data-throw-if-not-resolved=\"false\"></xref> that specifies how long the send operation has to complete before timing out.</p>\n"
references:
- uid: System.ServiceModel.Channels
  commentId: N:System.ServiceModel.Channels
  isExternal: false
  name: System.ServiceModel.Channels
  nameWithType: System.ServiceModel.Channels
  fullName: System.ServiceModel.Channels
- uid: System.ServiceModel.Channels.IChannel.GetProperty``1
  commentId: M:System.ServiceModel.Channels.IChannel.GetProperty``1
  parent: System.ServiceModel.Channels.IChannel
  definition: System.ServiceModel.Channels.IChannel.GetProperty``1
  isExternal: false
  name: GetProperty<T>()
  nameWithType: IChannel.GetProperty<T>()
  fullName: System.ServiceModel.Channels.IChannel.GetProperty<T>()
  nameWithType.vb: IChannel.GetProperty(Of T)()
  fullname.vb: System.ServiceModel.Channels.IChannel.GetProperty(Of T)()
  name.vb: GetProperty(Of T)()
  spec.csharp:
  - uid: System.ServiceModel.Channels.IChannel.GetProperty``1
    name: GetProperty<T>
    nameWithType: IChannel.GetProperty<T>
    fullName: System.ServiceModel.Channels.IChannel.GetProperty<T>
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.ServiceModel.Channels.IChannel.GetProperty``1
    name: GetProperty(Of T)
    nameWithType: IChannel.GetProperty(Of T)
    fullName: System.ServiceModel.Channels.IChannel.GetProperty(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.ServiceModel.ICommunicationObject.State
  commentId: P:System.ServiceModel.ICommunicationObject.State
  parent: System.ServiceModel.ICommunicationObject
  isExternal: false
  name: State
  nameWithType: ICommunicationObject.State
  fullName: System.ServiceModel.ICommunicationObject.State
- uid: System.ServiceModel.ICommunicationObject.Closed
  commentId: E:System.ServiceModel.ICommunicationObject.Closed
  parent: System.ServiceModel.ICommunicationObject
  isExternal: false
  name: Closed
  nameWithType: ICommunicationObject.Closed
  fullName: System.ServiceModel.ICommunicationObject.Closed
- uid: System.ServiceModel.ICommunicationObject.Closing
  commentId: E:System.ServiceModel.ICommunicationObject.Closing
  parent: System.ServiceModel.ICommunicationObject
  isExternal: false
  name: Closing
  nameWithType: ICommunicationObject.Closing
  fullName: System.ServiceModel.ICommunicationObject.Closing
- uid: System.ServiceModel.ICommunicationObject.Faulted
  commentId: E:System.ServiceModel.ICommunicationObject.Faulted
  parent: System.ServiceModel.ICommunicationObject
  isExternal: false
  name: Faulted
  nameWithType: ICommunicationObject.Faulted
  fullName: System.ServiceModel.ICommunicationObject.Faulted
- uid: System.ServiceModel.ICommunicationObject.Opened
  commentId: E:System.ServiceModel.ICommunicationObject.Opened
  parent: System.ServiceModel.ICommunicationObject
  isExternal: false
  name: Opened
  nameWithType: ICommunicationObject.Opened
  fullName: System.ServiceModel.ICommunicationObject.Opened
- uid: System.ServiceModel.ICommunicationObject.Opening
  commentId: E:System.ServiceModel.ICommunicationObject.Opening
  parent: System.ServiceModel.ICommunicationObject
  isExternal: false
  name: Opening
  nameWithType: ICommunicationObject.Opening
  fullName: System.ServiceModel.ICommunicationObject.Opening
- uid: System.ServiceModel.ICommunicationObject.Abort
  commentId: M:System.ServiceModel.ICommunicationObject.Abort
  parent: System.ServiceModel.ICommunicationObject
  isExternal: false
  name: Abort()
  nameWithType: ICommunicationObject.Abort()
  fullName: System.ServiceModel.ICommunicationObject.Abort()
  spec.csharp:
  - uid: System.ServiceModel.ICommunicationObject.Abort
    name: Abort
    nameWithType: ICommunicationObject.Abort
    fullName: System.ServiceModel.ICommunicationObject.Abort
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.ServiceModel.ICommunicationObject.Abort
    name: Abort
    nameWithType: ICommunicationObject.Abort
    fullName: System.ServiceModel.ICommunicationObject.Abort
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.ServiceModel.ICommunicationObject.BeginClose(System.AsyncCallback,System.Object)
  commentId: M:System.ServiceModel.ICommunicationObject.BeginClose(System.AsyncCallback,System.Object)
  parent: System.ServiceModel.ICommunicationObject
  isExternal: true
  name: BeginClose(AsyncCallback, Object)
  nameWithType: ICommunicationObject.BeginClose(AsyncCallback, Object)
  fullName: System.ServiceModel.ICommunicationObject.BeginClose(System.AsyncCallback, System.Object)
  spec.csharp:
  - uid: System.ServiceModel.ICommunicationObject.BeginClose(System.AsyncCallback,System.Object)
    name: BeginClose
    nameWithType: ICommunicationObject.BeginClose
    fullName: System.ServiceModel.ICommunicationObject.BeginClose
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.AsyncCallback
    name: AsyncCallback
    nameWithType: AsyncCallback
    fullName: System.AsyncCallback
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.ServiceModel.ICommunicationObject.BeginClose(System.AsyncCallback,System.Object)
    name: BeginClose
    nameWithType: ICommunicationObject.BeginClose
    fullName: System.ServiceModel.ICommunicationObject.BeginClose
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.AsyncCallback
    name: AsyncCallback
    nameWithType: AsyncCallback
    fullName: System.AsyncCallback
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.ServiceModel.ICommunicationObject.BeginClose(System.TimeSpan,System.AsyncCallback,System.Object)
  commentId: M:System.ServiceModel.ICommunicationObject.BeginClose(System.TimeSpan,System.AsyncCallback,System.Object)
  parent: System.ServiceModel.ICommunicationObject
  isExternal: true
  name: BeginClose(TimeSpan, AsyncCallback, Object)
  nameWithType: ICommunicationObject.BeginClose(TimeSpan, AsyncCallback, Object)
  fullName: System.ServiceModel.ICommunicationObject.BeginClose(System.TimeSpan, System.AsyncCallback, System.Object)
  spec.csharp:
  - uid: System.ServiceModel.ICommunicationObject.BeginClose(System.TimeSpan,System.AsyncCallback,System.Object)
    name: BeginClose
    nameWithType: ICommunicationObject.BeginClose
    fullName: System.ServiceModel.ICommunicationObject.BeginClose
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.TimeSpan
    name: TimeSpan
    nameWithType: TimeSpan
    fullName: System.TimeSpan
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.AsyncCallback
    name: AsyncCallback
    nameWithType: AsyncCallback
    fullName: System.AsyncCallback
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.ServiceModel.ICommunicationObject.BeginClose(System.TimeSpan,System.AsyncCallback,System.Object)
    name: BeginClose
    nameWithType: ICommunicationObject.BeginClose
    fullName: System.ServiceModel.ICommunicationObject.BeginClose
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.TimeSpan
    name: TimeSpan
    nameWithType: TimeSpan
    fullName: System.TimeSpan
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.AsyncCallback
    name: AsyncCallback
    nameWithType: AsyncCallback
    fullName: System.AsyncCallback
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.ServiceModel.ICommunicationObject.BeginOpen(System.AsyncCallback,System.Object)
  commentId: M:System.ServiceModel.ICommunicationObject.BeginOpen(System.AsyncCallback,System.Object)
  parent: System.ServiceModel.ICommunicationObject
  isExternal: true
  name: BeginOpen(AsyncCallback, Object)
  nameWithType: ICommunicationObject.BeginOpen(AsyncCallback, Object)
  fullName: System.ServiceModel.ICommunicationObject.BeginOpen(System.AsyncCallback, System.Object)
  spec.csharp:
  - uid: System.ServiceModel.ICommunicationObject.BeginOpen(System.AsyncCallback,System.Object)
    name: BeginOpen
    nameWithType: ICommunicationObject.BeginOpen
    fullName: System.ServiceModel.ICommunicationObject.BeginOpen
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.AsyncCallback
    name: AsyncCallback
    nameWithType: AsyncCallback
    fullName: System.AsyncCallback
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.ServiceModel.ICommunicationObject.BeginOpen(System.AsyncCallback,System.Object)
    name: BeginOpen
    nameWithType: ICommunicationObject.BeginOpen
    fullName: System.ServiceModel.ICommunicationObject.BeginOpen
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.AsyncCallback
    name: AsyncCallback
    nameWithType: AsyncCallback
    fullName: System.AsyncCallback
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.ServiceModel.ICommunicationObject.BeginOpen(System.TimeSpan,System.AsyncCallback,System.Object)
  commentId: M:System.ServiceModel.ICommunicationObject.BeginOpen(System.TimeSpan,System.AsyncCallback,System.Object)
  parent: System.ServiceModel.ICommunicationObject
  isExternal: true
  name: BeginOpen(TimeSpan, AsyncCallback, Object)
  nameWithType: ICommunicationObject.BeginOpen(TimeSpan, AsyncCallback, Object)
  fullName: System.ServiceModel.ICommunicationObject.BeginOpen(System.TimeSpan, System.AsyncCallback, System.Object)
  spec.csharp:
  - uid: System.ServiceModel.ICommunicationObject.BeginOpen(System.TimeSpan,System.AsyncCallback,System.Object)
    name: BeginOpen
    nameWithType: ICommunicationObject.BeginOpen
    fullName: System.ServiceModel.ICommunicationObject.BeginOpen
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.TimeSpan
    name: TimeSpan
    nameWithType: TimeSpan
    fullName: System.TimeSpan
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.AsyncCallback
    name: AsyncCallback
    nameWithType: AsyncCallback
    fullName: System.AsyncCallback
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.ServiceModel.ICommunicationObject.BeginOpen(System.TimeSpan,System.AsyncCallback,System.Object)
    name: BeginOpen
    nameWithType: ICommunicationObject.BeginOpen
    fullName: System.ServiceModel.ICommunicationObject.BeginOpen
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.TimeSpan
    name: TimeSpan
    nameWithType: TimeSpan
    fullName: System.TimeSpan
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.AsyncCallback
    name: AsyncCallback
    nameWithType: AsyncCallback
    fullName: System.AsyncCallback
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.ServiceModel.ICommunicationObject.Close
  commentId: M:System.ServiceModel.ICommunicationObject.Close
  parent: System.ServiceModel.ICommunicationObject
  isExternal: false
  name: Close()
  nameWithType: ICommunicationObject.Close()
  fullName: System.ServiceModel.ICommunicationObject.Close()
  spec.csharp:
  - uid: System.ServiceModel.ICommunicationObject.Close
    name: Close
    nameWithType: ICommunicationObject.Close
    fullName: System.ServiceModel.ICommunicationObject.Close
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.ServiceModel.ICommunicationObject.Close
    name: Close
    nameWithType: ICommunicationObject.Close
    fullName: System.ServiceModel.ICommunicationObject.Close
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.ServiceModel.ICommunicationObject.Close(System.TimeSpan)
  commentId: M:System.ServiceModel.ICommunicationObject.Close(System.TimeSpan)
  parent: System.ServiceModel.ICommunicationObject
  isExternal: true
  name: Close(TimeSpan)
  nameWithType: ICommunicationObject.Close(TimeSpan)
  fullName: System.ServiceModel.ICommunicationObject.Close(System.TimeSpan)
  spec.csharp:
  - uid: System.ServiceModel.ICommunicationObject.Close(System.TimeSpan)
    name: Close
    nameWithType: ICommunicationObject.Close
    fullName: System.ServiceModel.ICommunicationObject.Close
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.TimeSpan
    name: TimeSpan
    nameWithType: TimeSpan
    fullName: System.TimeSpan
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.ServiceModel.ICommunicationObject.Close(System.TimeSpan)
    name: Close
    nameWithType: ICommunicationObject.Close
    fullName: System.ServiceModel.ICommunicationObject.Close
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.TimeSpan
    name: TimeSpan
    nameWithType: TimeSpan
    fullName: System.TimeSpan
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.ServiceModel.ICommunicationObject.EndClose(System.IAsyncResult)
  commentId: M:System.ServiceModel.ICommunicationObject.EndClose(System.IAsyncResult)
  parent: System.ServiceModel.ICommunicationObject
  isExternal: true
  name: EndClose(IAsyncResult)
  nameWithType: ICommunicationObject.EndClose(IAsyncResult)
  fullName: System.ServiceModel.ICommunicationObject.EndClose(System.IAsyncResult)
  spec.csharp:
  - uid: System.ServiceModel.ICommunicationObject.EndClose(System.IAsyncResult)
    name: EndClose
    nameWithType: ICommunicationObject.EndClose
    fullName: System.ServiceModel.ICommunicationObject.EndClose
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.IAsyncResult
    name: IAsyncResult
    nameWithType: IAsyncResult
    fullName: System.IAsyncResult
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.ServiceModel.ICommunicationObject.EndClose(System.IAsyncResult)
    name: EndClose
    nameWithType: ICommunicationObject.EndClose
    fullName: System.ServiceModel.ICommunicationObject.EndClose
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.IAsyncResult
    name: IAsyncResult
    nameWithType: IAsyncResult
    fullName: System.IAsyncResult
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.ServiceModel.ICommunicationObject.EndOpen(System.IAsyncResult)
  commentId: M:System.ServiceModel.ICommunicationObject.EndOpen(System.IAsyncResult)
  parent: System.ServiceModel.ICommunicationObject
  isExternal: true
  name: EndOpen(IAsyncResult)
  nameWithType: ICommunicationObject.EndOpen(IAsyncResult)
  fullName: System.ServiceModel.ICommunicationObject.EndOpen(System.IAsyncResult)
  spec.csharp:
  - uid: System.ServiceModel.ICommunicationObject.EndOpen(System.IAsyncResult)
    name: EndOpen
    nameWithType: ICommunicationObject.EndOpen
    fullName: System.ServiceModel.ICommunicationObject.EndOpen
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.IAsyncResult
    name: IAsyncResult
    nameWithType: IAsyncResult
    fullName: System.IAsyncResult
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.ServiceModel.ICommunicationObject.EndOpen(System.IAsyncResult)
    name: EndOpen
    nameWithType: ICommunicationObject.EndOpen
    fullName: System.ServiceModel.ICommunicationObject.EndOpen
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.IAsyncResult
    name: IAsyncResult
    nameWithType: IAsyncResult
    fullName: System.IAsyncResult
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.ServiceModel.ICommunicationObject.Open
  commentId: M:System.ServiceModel.ICommunicationObject.Open
  parent: System.ServiceModel.ICommunicationObject
  isExternal: false
  name: Open()
  nameWithType: ICommunicationObject.Open()
  fullName: System.ServiceModel.ICommunicationObject.Open()
  spec.csharp:
  - uid: System.ServiceModel.ICommunicationObject.Open
    name: Open
    nameWithType: ICommunicationObject.Open
    fullName: System.ServiceModel.ICommunicationObject.Open
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.ServiceModel.ICommunicationObject.Open
    name: Open
    nameWithType: ICommunicationObject.Open
    fullName: System.ServiceModel.ICommunicationObject.Open
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.ServiceModel.ICommunicationObject.Open(System.TimeSpan)
  commentId: M:System.ServiceModel.ICommunicationObject.Open(System.TimeSpan)
  parent: System.ServiceModel.ICommunicationObject
  isExternal: true
  name: Open(TimeSpan)
  nameWithType: ICommunicationObject.Open(TimeSpan)
  fullName: System.ServiceModel.ICommunicationObject.Open(System.TimeSpan)
  spec.csharp:
  - uid: System.ServiceModel.ICommunicationObject.Open(System.TimeSpan)
    name: Open
    nameWithType: ICommunicationObject.Open
    fullName: System.ServiceModel.ICommunicationObject.Open
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.TimeSpan
    name: TimeSpan
    nameWithType: TimeSpan
    fullName: System.TimeSpan
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.ServiceModel.ICommunicationObject.Open(System.TimeSpan)
    name: Open
    nameWithType: ICommunicationObject.Open
    fullName: System.ServiceModel.ICommunicationObject.Open
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.TimeSpan
    name: TimeSpan
    nameWithType: TimeSpan
    fullName: System.TimeSpan
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.ServiceModel.Channels.IChannel
  commentId: T:System.ServiceModel.Channels.IChannel
  parent: System.ServiceModel.Channels
  isExternal: false
  name: IChannel
  nameWithType: IChannel
  fullName: System.ServiceModel.Channels.IChannel
- uid: System.ServiceModel.ICommunicationObject
  commentId: T:System.ServiceModel.ICommunicationObject
  parent: System.ServiceModel
  isExternal: false
  name: ICommunicationObject
  nameWithType: ICommunicationObject
  fullName: System.ServiceModel.ICommunicationObject
- uid: System.ServiceModel
  commentId: N:System.ServiceModel
  isExternal: false
  name: System.ServiceModel
  nameWithType: System.ServiceModel
  fullName: System.ServiceModel
- uid: System.ServiceModel.EndpointAddress
  commentId: T:System.ServiceModel.EndpointAddress
  parent: System.ServiceModel
  isExternal: false
  name: EndpointAddress
  nameWithType: EndpointAddress
  fullName: System.ServiceModel.EndpointAddress
- uid: System.Uri
  commentId: T:System.Uri
  parent: System
  isExternal: false
  name: Uri
  nameWithType: Uri
  fullName: System.Uri
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: System.ServiceModel.Channels.Message
  commentId: T:System.ServiceModel.Channels.Message
  parent: System.ServiceModel.Channels
  isExternal: false
  name: Message
  nameWithType: Message
  fullName: System.ServiceModel.Channels.Message
- uid: System.AsyncCallback
  commentId: T:System.AsyncCallback
  parent: System
  isExternal: false
  name: AsyncCallback
  nameWithType: AsyncCallback
  fullName: System.AsyncCallback
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: false
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.IAsyncResult
  commentId: T:System.IAsyncResult
  parent: System
  isExternal: false
  name: IAsyncResult
  nameWithType: IAsyncResult
  fullName: System.IAsyncResult
- uid: System.TimeSpan
  commentId: T:System.TimeSpan
  parent: System
  isExternal: false
  name: TimeSpan
  nameWithType: TimeSpan
  fullName: System.TimeSpan
