### YamlMime:ManagedReference
items:
- uid: System.Xml.XmlParserContext
  commentId: T:System.Xml.XmlParserContext
  id: XmlParserContext
  parent: System.Xml
  children:
  - System.Xml.XmlParserContext.#ctor(System.Xml.XmlNameTable,System.Xml.XmlNamespaceManager,System.String,System.String,System.String,System.String,System.String,System.String,System.Xml.XmlSpace)
  - System.Xml.XmlParserContext.#ctor(System.Xml.XmlNameTable,System.Xml.XmlNamespaceManager,System.String,System.String,System.String,System.String,System.String,System.String,System.Xml.XmlSpace,System.Text.Encoding)
  - System.Xml.XmlParserContext.#ctor(System.Xml.XmlNameTable,System.Xml.XmlNamespaceManager,System.String,System.Xml.XmlSpace)
  - System.Xml.XmlParserContext.#ctor(System.Xml.XmlNameTable,System.Xml.XmlNamespaceManager,System.String,System.Xml.XmlSpace,System.Text.Encoding)
  - System.Xml.XmlParserContext.BaseURI
  - System.Xml.XmlParserContext.DocTypeName
  - System.Xml.XmlParserContext.Encoding
  - System.Xml.XmlParserContext.InternalSubset
  - System.Xml.XmlParserContext.NamespaceManager
  - System.Xml.XmlParserContext.NameTable
  - System.Xml.XmlParserContext.PublicId
  - System.Xml.XmlParserContext.SystemId
  - System.Xml.XmlParserContext.XmlLang
  - System.Xml.XmlParserContext.XmlSpace
  langs:
  - csharp
  - vb
  name: XmlParserContext
  nameWithType: XmlParserContext
  fullName: System.Xml.XmlParserContext
  type: Class
  source:
    remote:
      path: src/System.Xml.ReaderWriter/ref/System.Xml.ReaderWriter.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: XmlParserContext
    path: src/System.Xml.ReaderWriter/ref/System.Xml.ReaderWriter.cs
    startLine: 196
  assemblies:
  - System.Xml.ReaderWriter
  namespace: System.Xml
  summary: "\n<p>Provides all the context information required by the <xref href=\"System.Xml.XmlReader\" data-throw-if-not-resolved=\"false\"></xref> to parse an XML fragment.</p>\n"
  syntax:
    content: public class XmlParserContext
    content.vb: Public Class XmlParserContext
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: System.Xml.XmlParserContext.#ctor(System.Xml.XmlNameTable,System.Xml.XmlNamespaceManager,System.String,System.String,System.String,System.String,System.String,System.String,System.Xml.XmlSpace)
  commentId: M:System.Xml.XmlParserContext.#ctor(System.Xml.XmlNameTable,System.Xml.XmlNamespaceManager,System.String,System.String,System.String,System.String,System.String,System.String,System.Xml.XmlSpace)
  id: '#ctor(System.Xml.XmlNameTable,System.Xml.XmlNamespaceManager,System.String,System.String,System.String,System.String,System.String,System.String,System.Xml.XmlSpace)'
  parent: System.Xml.XmlParserContext
  langs:
  - csharp
  - vb
  name: XmlParserContext(XmlNameTable, XmlNamespaceManager, String, String, String, String, String, String, XmlSpace)
  nameWithType: XmlParserContext.XmlParserContext(XmlNameTable, XmlNamespaceManager, String, String, String, String, String, String, XmlSpace)
  fullName: System.Xml.XmlParserContext.XmlParserContext(System.Xml.XmlNameTable, System.Xml.XmlNamespaceManager, System.String, System.String, System.String, System.String, System.String, System.String, System.Xml.XmlSpace)
  type: Constructor
  source:
    remote:
      path: src/System.Xml.ReaderWriter/ref/System.Xml.ReaderWriter.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: .ctor
    path: src/System.Xml.ReaderWriter/ref/System.Xml.ReaderWriter.cs
    startLine: 198
  assemblies:
  - System.Xml.ReaderWriter
  namespace: System.Xml
  summary: "\n<p>Initializes a new instance of the <strong>XmlParserContext</strong> class with the specified <xref href=\"System.Xml.XmlNameTable\" data-throw-if-not-resolved=\"false\"></xref>, <xref href=\"System.Xml.XmlNamespaceManager\" data-throw-if-not-resolved=\"false\"></xref>, base URI, <strong>xml:lang</strong>, <strong>xml:space</strong>, and document type values.</p>\n"
  syntax:
    content: public XmlParserContext(XmlNameTable nt, XmlNamespaceManager nsMgr, string docTypeName, string pubId, string sysId, string internalSubset, string baseURI, string xmlLang, XmlSpace xmlSpace)
    content.vb: Public Sub New(nt As XmlNameTable, nsMgr As XmlNamespaceManager, docTypeName As String, pubId As String, sysId As String, internalSubset As String, baseURI As String, xmlLang As String, xmlSpace As XmlSpace)
    parameters:
    - id: nt
      type: System.Xml.XmlNameTable
      description: "\n<p>The <xref href=\"System.Xml.XmlNameTable\" data-throw-if-not-resolved=\"false\"></xref> to use to atomize strings. If this is <strong>null</strong>, the name table used to construct the <em>nsMgr</em> is used instead. For more information about atomized strings, see <xref href=\"System.Xml.XmlNameTable\" data-throw-if-not-resolved=\"false\"></xref>. </p>\n"
    - id: nsMgr
      type: System.Xml.XmlNamespaceManager
      description: "\n<p>The <xref href=\"System.Xml.XmlNamespaceManager\" data-throw-if-not-resolved=\"false\"></xref> to use for looking up namespace information, or <strong>null</strong>. </p>\n"
    - id: docTypeName
      type: System.String
      description: "\n<p>The name of the document type declaration. </p>\n"
    - id: pubId
      type: System.String
      description: "\n<p>The public identifier. </p>\n"
    - id: sysId
      type: System.String
      description: "\n<p>The system identifier. </p>\n"
    - id: internalSubset
      type: System.String
      description: "\n<p>The internal DTD subset. The DTD subset is used for entity resolution, not for document validation.</p>\n"
    - id: baseURI
      type: System.String
      description: "\n<p>The base URI for the XML fragment (the location from which the fragment was loaded). </p>\n"
    - id: xmlLang
      type: System.String
      description: "\n<p>The <strong>xml:lang</strong> scope. </p>\n"
    - id: xmlSpace
      type: System.Xml.XmlSpace
      description: "\n<p>An <xref href=\"System.Xml.XmlSpace\" data-throw-if-not-resolved=\"false\"></xref> value indicating the <strong>xml:space</strong> scope. </p>\n"
  exceptions:
  - type: System.Xml.XmlException
    commentId: T:System.Xml.XmlException
    description: "\n<p>\n<em>nt</em> is not the same <strong>XmlNameTable</strong> used to construct <em>nsMgr</em>. </p>\n"
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: System.Xml.XmlParserContext.#ctor(System.Xml.XmlNameTable,System.Xml.XmlNamespaceManager,System.String,System.String,System.String,System.String,System.String,System.String,System.Xml.XmlSpace,System.Text.Encoding)
  commentId: M:System.Xml.XmlParserContext.#ctor(System.Xml.XmlNameTable,System.Xml.XmlNamespaceManager,System.String,System.String,System.String,System.String,System.String,System.String,System.Xml.XmlSpace,System.Text.Encoding)
  id: '#ctor(System.Xml.XmlNameTable,System.Xml.XmlNamespaceManager,System.String,System.String,System.String,System.String,System.String,System.String,System.Xml.XmlSpace,System.Text.Encoding)'
  parent: System.Xml.XmlParserContext
  langs:
  - csharp
  - vb
  name: XmlParserContext(XmlNameTable, XmlNamespaceManager, String, String, String, String, String, String, XmlSpace, Encoding)
  nameWithType: XmlParserContext.XmlParserContext(XmlNameTable, XmlNamespaceManager, String, String, String, String, String, String, XmlSpace, Encoding)
  fullName: System.Xml.XmlParserContext.XmlParserContext(System.Xml.XmlNameTable, System.Xml.XmlNamespaceManager, System.String, System.String, System.String, System.String, System.String, System.String, System.Xml.XmlSpace, System.Text.Encoding)
  type: Constructor
  source:
    remote:
      path: src/System.Xml.ReaderWriter/ref/System.Xml.ReaderWriter.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: .ctor
    path: src/System.Xml.ReaderWriter/ref/System.Xml.ReaderWriter.cs
    startLine: 199
  assemblies:
  - System.Xml.ReaderWriter
  namespace: System.Xml
  summary: "\n<p>Initializes a new instance of the <strong>XmlParserContext</strong> class with the specified <xref href=\"System.Xml.XmlNameTable\" data-throw-if-not-resolved=\"false\"></xref>, <xref href=\"System.Xml.XmlNamespaceManager\" data-throw-if-not-resolved=\"false\"></xref>, base URI, <strong>xml:lang</strong>, <strong>xml:space</strong>, encoding, and document type values.</p>\n"
  syntax:
    content: public XmlParserContext(XmlNameTable nt, XmlNamespaceManager nsMgr, string docTypeName, string pubId, string sysId, string internalSubset, string baseURI, string xmlLang, XmlSpace xmlSpace, Encoding enc)
    content.vb: Public Sub New(nt As XmlNameTable, nsMgr As XmlNamespaceManager, docTypeName As String, pubId As String, sysId As String, internalSubset As String, baseURI As String, xmlLang As String, xmlSpace As XmlSpace, enc As Encoding)
    parameters:
    - id: nt
      type: System.Xml.XmlNameTable
      description: "\n<p>The <xref href=\"System.Xml.XmlNameTable\" data-throw-if-not-resolved=\"false\"></xref> to use to atomize strings. If this is <strong>null</strong>, the name table used to construct the <em>nsMgr</em> is used instead. For more information about atomized strings, see <xref href=\"System.Xml.XmlNameTable\" data-throw-if-not-resolved=\"false\"></xref>. </p>\n"
    - id: nsMgr
      type: System.Xml.XmlNamespaceManager
      description: "\n<p>The <xref href=\"System.Xml.XmlNamespaceManager\" data-throw-if-not-resolved=\"false\"></xref> to use for looking up namespace information, or <strong>null</strong>. </p>\n"
    - id: docTypeName
      type: System.String
      description: "\n<p>The name of the document type declaration. </p>\n"
    - id: pubId
      type: System.String
      description: "\n<p>The public identifier. </p>\n"
    - id: sysId
      type: System.String
      description: "\n<p>The system identifier. </p>\n"
    - id: internalSubset
      type: System.String
      description: "\n<p>The internal DTD subset. The DTD is used for entity resolution, not for document validation.</p>\n"
    - id: baseURI
      type: System.String
      description: "\n<p>The base URI for the XML fragment (the location from which the fragment was loaded). </p>\n"
    - id: xmlLang
      type: System.String
      description: "\n<p>The <strong>xml:lang</strong> scope. </p>\n"
    - id: xmlSpace
      type: System.Xml.XmlSpace
      description: "\n<p>An <xref href=\"System.Xml.XmlSpace\" data-throw-if-not-resolved=\"false\"></xref> value indicating the <strong>xml:space</strong> scope. </p>\n"
    - id: enc
      type: System.Text.Encoding
      description: "\n<p>An <xref href=\"System.Text.Encoding\" data-throw-if-not-resolved=\"false\"></xref> object indicating the encoding setting. </p>\n"
  exceptions:
  - type: System.Xml.XmlException
    commentId: T:System.Xml.XmlException
    description: "\n<p>\n<em>nt</em> is not the same <strong>XmlNameTable</strong> used to construct <em>nsMgr</em>. </p>\n"
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: System.Xml.XmlParserContext.#ctor(System.Xml.XmlNameTable,System.Xml.XmlNamespaceManager,System.String,System.Xml.XmlSpace)
  commentId: M:System.Xml.XmlParserContext.#ctor(System.Xml.XmlNameTable,System.Xml.XmlNamespaceManager,System.String,System.Xml.XmlSpace)
  id: '#ctor(System.Xml.XmlNameTable,System.Xml.XmlNamespaceManager,System.String,System.Xml.XmlSpace)'
  parent: System.Xml.XmlParserContext
  langs:
  - csharp
  - vb
  name: XmlParserContext(XmlNameTable, XmlNamespaceManager, String, XmlSpace)
  nameWithType: XmlParserContext.XmlParserContext(XmlNameTable, XmlNamespaceManager, String, XmlSpace)
  fullName: System.Xml.XmlParserContext.XmlParserContext(System.Xml.XmlNameTable, System.Xml.XmlNamespaceManager, System.String, System.Xml.XmlSpace)
  type: Constructor
  source:
    remote:
      path: src/System.Xml.ReaderWriter/ref/System.Xml.ReaderWriter.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: .ctor
    path: src/System.Xml.ReaderWriter/ref/System.Xml.ReaderWriter.cs
    startLine: 200
  assemblies:
  - System.Xml.ReaderWriter
  namespace: System.Xml
  summary: "\n<p>Initializes a new instance of the <strong>XmlParserContext</strong> class with the specified <xref href=\"System.Xml.XmlNameTable\" data-throw-if-not-resolved=\"false\"></xref>, <xref href=\"System.Xml.XmlNamespaceManager\" data-throw-if-not-resolved=\"false\"></xref>, <strong>xml:lang</strong>, and <strong>xml:space</strong> values.</p>\n"
  syntax:
    content: public XmlParserContext(XmlNameTable nt, XmlNamespaceManager nsMgr, string xmlLang, XmlSpace xmlSpace)
    content.vb: Public Sub New(nt As XmlNameTable, nsMgr As XmlNamespaceManager, xmlLang As String, xmlSpace As XmlSpace)
    parameters:
    - id: nt
      type: System.Xml.XmlNameTable
      description: "\n<p>The <xref href=\"System.Xml.XmlNameTable\" data-throw-if-not-resolved=\"false\"></xref> to use to atomize strings. If this is <strong>null</strong>, the name table used to construct the <em>nsMgr</em> is used instead. For more information about atomized strings, see <xref href=\"System.Xml.XmlNameTable\" data-throw-if-not-resolved=\"false\"></xref>. </p>\n"
    - id: nsMgr
      type: System.Xml.XmlNamespaceManager
      description: "\n<p>The <xref href=\"System.Xml.XmlNamespaceManager\" data-throw-if-not-resolved=\"false\"></xref> to use for looking up namespace information, or <strong>null</strong>. </p>\n"
    - id: xmlLang
      type: System.String
      description: "\n<p>The <strong>xml:lang</strong> scope. </p>\n"
    - id: xmlSpace
      type: System.Xml.XmlSpace
      description: "\n<p>An <xref href=\"System.Xml.XmlSpace\" data-throw-if-not-resolved=\"false\"></xref> value indicating the <strong>xml:space</strong> scope. </p>\n"
  exceptions:
  - type: System.Xml.XmlException
    commentId: T:System.Xml.XmlException
    description: "\n<p>\n<em>nt</em> is not the same <strong>XmlNameTable</strong> used to construct <em>nsMgr</em>. </p>\n"
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: System.Xml.XmlParserContext.#ctor(System.Xml.XmlNameTable,System.Xml.XmlNamespaceManager,System.String,System.Xml.XmlSpace,System.Text.Encoding)
  commentId: M:System.Xml.XmlParserContext.#ctor(System.Xml.XmlNameTable,System.Xml.XmlNamespaceManager,System.String,System.Xml.XmlSpace,System.Text.Encoding)
  id: '#ctor(System.Xml.XmlNameTable,System.Xml.XmlNamespaceManager,System.String,System.Xml.XmlSpace,System.Text.Encoding)'
  parent: System.Xml.XmlParserContext
  langs:
  - csharp
  - vb
  name: XmlParserContext(XmlNameTable, XmlNamespaceManager, String, XmlSpace, Encoding)
  nameWithType: XmlParserContext.XmlParserContext(XmlNameTable, XmlNamespaceManager, String, XmlSpace, Encoding)
  fullName: System.Xml.XmlParserContext.XmlParserContext(System.Xml.XmlNameTable, System.Xml.XmlNamespaceManager, System.String, System.Xml.XmlSpace, System.Text.Encoding)
  type: Constructor
  source:
    remote:
      path: src/System.Xml.ReaderWriter/ref/System.Xml.ReaderWriter.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: .ctor
    path: src/System.Xml.ReaderWriter/ref/System.Xml.ReaderWriter.cs
    startLine: 201
  assemblies:
  - System.Xml.ReaderWriter
  namespace: System.Xml
  summary: "\n<p>Initializes a new instance of the <strong>XmlParserContext</strong> class with the specified <xref href=\"System.Xml.XmlNameTable\" data-throw-if-not-resolved=\"false\"></xref>, <xref href=\"System.Xml.XmlNamespaceManager\" data-throw-if-not-resolved=\"false\"></xref>, <strong>xml:lang</strong>, <strong>xml:space</strong>, and encoding.</p>\n"
  syntax:
    content: public XmlParserContext(XmlNameTable nt, XmlNamespaceManager nsMgr, string xmlLang, XmlSpace xmlSpace, Encoding enc)
    content.vb: Public Sub New(nt As XmlNameTable, nsMgr As XmlNamespaceManager, xmlLang As String, xmlSpace As XmlSpace, enc As Encoding)
    parameters:
    - id: nt
      type: System.Xml.XmlNameTable
      description: "\n<p>The <xref href=\"System.Xml.XmlNameTable\" data-throw-if-not-resolved=\"false\"></xref> to use to atomize strings. If this is <strong>null</strong>, the name table used to construct the <em>nsMgr</em> is used instead. For more information on atomized strings, see <xref href=\"System.Xml.XmlNameTable\" data-throw-if-not-resolved=\"false\"></xref>. </p>\n"
    - id: nsMgr
      type: System.Xml.XmlNamespaceManager
      description: "\n<p>The <xref href=\"System.Xml.XmlNamespaceManager\" data-throw-if-not-resolved=\"false\"></xref> to use for looking up namespace information, or <strong>null</strong>. </p>\n"
    - id: xmlLang
      type: System.String
      description: "\n<p>The <strong>xml:lang</strong> scope. </p>\n"
    - id: xmlSpace
      type: System.Xml.XmlSpace
      description: "\n<p>An <xref href=\"System.Xml.XmlSpace\" data-throw-if-not-resolved=\"false\"></xref> value indicating the <strong>xml:space</strong> scope. </p>\n"
    - id: enc
      type: System.Text.Encoding
      description: "\n<p>An <xref href=\"System.Text.Encoding\" data-throw-if-not-resolved=\"false\"></xref> object indicating the encoding setting. </p>\n"
  exceptions:
  - type: System.Xml.XmlException
    commentId: T:System.Xml.XmlException
    description: "\n<p>\n<em>nt</em> is not the same <strong>XmlNameTable</strong> used to construct <em>nsMgr</em>. </p>\n"
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: System.Xml.XmlParserContext.BaseURI
  commentId: P:System.Xml.XmlParserContext.BaseURI
  id: BaseURI
  parent: System.Xml.XmlParserContext
  langs:
  - csharp
  - vb
  name: BaseURI
  nameWithType: XmlParserContext.BaseURI
  fullName: System.Xml.XmlParserContext.BaseURI
  type: Property
  source:
    remote:
      path: src/System.Xml.ReaderWriter/ref/System.Xml.ReaderWriter.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: BaseURI
    path: src/System.Xml.ReaderWriter/ref/System.Xml.ReaderWriter.cs
    startLine: 202
  assemblies:
  - System.Xml.ReaderWriter
  namespace: System.Xml
  summary: "\n<p>Gets or sets the base URI.</p>\n"
  syntax:
    content: public string BaseURI { get; set; }
    content.vb: Public Property BaseURI As String
    parameters: []
    return:
      type: System.String
      description: "\n<p>The base URI to use to resolve the DTD file.</p>\n"
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: System.Xml.XmlParserContext.DocTypeName
  commentId: P:System.Xml.XmlParserContext.DocTypeName
  id: DocTypeName
  parent: System.Xml.XmlParserContext
  langs:
  - csharp
  - vb
  name: DocTypeName
  nameWithType: XmlParserContext.DocTypeName
  fullName: System.Xml.XmlParserContext.DocTypeName
  type: Property
  source:
    remote:
      path: src/System.Xml.ReaderWriter/ref/System.Xml.ReaderWriter.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: DocTypeName
    path: src/System.Xml.ReaderWriter/ref/System.Xml.ReaderWriter.cs
    startLine: 203
  assemblies:
  - System.Xml.ReaderWriter
  namespace: System.Xml
  summary: "\n<p>Gets or sets the name of the document type declaration.</p>\n"
  syntax:
    content: public string DocTypeName { get; set; }
    content.vb: Public Property DocTypeName As String
    parameters: []
    return:
      type: System.String
      description: "\n<p>The name of the document type declaration.</p>\n"
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: System.Xml.XmlParserContext.Encoding
  commentId: P:System.Xml.XmlParserContext.Encoding
  id: Encoding
  parent: System.Xml.XmlParserContext
  langs:
  - csharp
  - vb
  name: Encoding
  nameWithType: XmlParserContext.Encoding
  fullName: System.Xml.XmlParserContext.Encoding
  type: Property
  source:
    remote:
      path: src/System.Xml.ReaderWriter/ref/System.Xml.ReaderWriter.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: Encoding
    path: src/System.Xml.ReaderWriter/ref/System.Xml.ReaderWriter.cs
    startLine: 204
  assemblies:
  - System.Xml.ReaderWriter
  namespace: System.Xml
  summary: "\n<p>Gets or sets the encoding type.</p>\n"
  syntax:
    content: public Encoding Encoding { get; set; }
    content.vb: Public Property Encoding As Encoding
    parameters: []
    return:
      type: System.Text.Encoding
      description: "\n<p>An <xref href=\"System.Text.Encoding\" data-throw-if-not-resolved=\"false\"></xref> object indicating the encoding type.</p>\n"
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: System.Xml.XmlParserContext.InternalSubset
  commentId: P:System.Xml.XmlParserContext.InternalSubset
  id: InternalSubset
  parent: System.Xml.XmlParserContext
  langs:
  - csharp
  - vb
  name: InternalSubset
  nameWithType: XmlParserContext.InternalSubset
  fullName: System.Xml.XmlParserContext.InternalSubset
  type: Property
  source:
    remote:
      path: src/System.Xml.ReaderWriter/ref/System.Xml.ReaderWriter.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: InternalSubset
    path: src/System.Xml.ReaderWriter/ref/System.Xml.ReaderWriter.cs
    startLine: 205
  assemblies:
  - System.Xml.ReaderWriter
  namespace: System.Xml
  summary: "\n<p>Gets or sets the internal DTD subset.</p>\n"
  syntax:
    content: public string InternalSubset { get; set; }
    content.vb: Public Property InternalSubset As String
    parameters: []
    return:
      type: System.String
      description: "\n<p>The internal DTD subset. For example, this property returns everything between the square brackets <code>&lt;!DOCTYPE doc [...]&gt;</code>.</p>\n"
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: System.Xml.XmlParserContext.NamespaceManager
  commentId: P:System.Xml.XmlParserContext.NamespaceManager
  id: NamespaceManager
  parent: System.Xml.XmlParserContext
  langs:
  - csharp
  - vb
  name: NamespaceManager
  nameWithType: XmlParserContext.NamespaceManager
  fullName: System.Xml.XmlParserContext.NamespaceManager
  type: Property
  source:
    remote:
      path: src/System.Xml.ReaderWriter/ref/System.Xml.ReaderWriter.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: NamespaceManager
    path: src/System.Xml.ReaderWriter/ref/System.Xml.ReaderWriter.cs
    startLine: 206
  assemblies:
  - System.Xml.ReaderWriter
  namespace: System.Xml
  summary: "\n<p>Gets or sets the <xref href=\"System.Xml.XmlNamespaceManager\" data-throw-if-not-resolved=\"false\"></xref>.</p>\n"
  syntax:
    content: public XmlNamespaceManager NamespaceManager { get; set; }
    content.vb: Public Property NamespaceManager As XmlNamespaceManager
    parameters: []
    return:
      type: System.Xml.XmlNamespaceManager
      description: "\n<p>The <strong>XmlNamespaceManager</strong>.</p>\n"
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: System.Xml.XmlParserContext.NameTable
  commentId: P:System.Xml.XmlParserContext.NameTable
  id: NameTable
  parent: System.Xml.XmlParserContext
  langs:
  - csharp
  - vb
  name: NameTable
  nameWithType: XmlParserContext.NameTable
  fullName: System.Xml.XmlParserContext.NameTable
  type: Property
  source:
    remote:
      path: src/System.Xml.ReaderWriter/ref/System.Xml.ReaderWriter.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: NameTable
    path: src/System.Xml.ReaderWriter/ref/System.Xml.ReaderWriter.cs
    startLine: 207
  assemblies:
  - System.Xml.ReaderWriter
  namespace: System.Xml
  summary: "\n<p>Gets the <xref href=\"System.Xml.XmlNameTable\" data-throw-if-not-resolved=\"false\"></xref> used to atomize strings. For more information on atomized strings, see <xref href=\"System.Xml.XmlNameTable\" data-throw-if-not-resolved=\"false\"></xref>.</p>\n"
  syntax:
    content: public XmlNameTable NameTable { get; set; }
    content.vb: Public Property NameTable As XmlNameTable
    parameters: []
    return:
      type: System.Xml.XmlNameTable
      description: "\n<p>The <strong>XmlNameTable</strong>.</p>\n"
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: System.Xml.XmlParserContext.PublicId
  commentId: P:System.Xml.XmlParserContext.PublicId
  id: PublicId
  parent: System.Xml.XmlParserContext
  langs:
  - csharp
  - vb
  name: PublicId
  nameWithType: XmlParserContext.PublicId
  fullName: System.Xml.XmlParserContext.PublicId
  type: Property
  source:
    remote:
      path: src/System.Xml.ReaderWriter/ref/System.Xml.ReaderWriter.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: PublicId
    path: src/System.Xml.ReaderWriter/ref/System.Xml.ReaderWriter.cs
    startLine: 208
  assemblies:
  - System.Xml.ReaderWriter
  namespace: System.Xml
  summary: "\n<p>Gets or sets the public identifier.</p>\n"
  syntax:
    content: public string PublicId { get; set; }
    content.vb: Public Property PublicId As String
    parameters: []
    return:
      type: System.String
      description: "\n<p>The public identifier.</p>\n"
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: System.Xml.XmlParserContext.SystemId
  commentId: P:System.Xml.XmlParserContext.SystemId
  id: SystemId
  parent: System.Xml.XmlParserContext
  langs:
  - csharp
  - vb
  name: SystemId
  nameWithType: XmlParserContext.SystemId
  fullName: System.Xml.XmlParserContext.SystemId
  type: Property
  source:
    remote:
      path: src/System.Xml.ReaderWriter/ref/System.Xml.ReaderWriter.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: SystemId
    path: src/System.Xml.ReaderWriter/ref/System.Xml.ReaderWriter.cs
    startLine: 209
  assemblies:
  - System.Xml.ReaderWriter
  namespace: System.Xml
  summary: "\n<p>Gets or sets the system identifier.</p>\n"
  syntax:
    content: public string SystemId { get; set; }
    content.vb: Public Property SystemId As String
    parameters: []
    return:
      type: System.String
      description: "\n<p>The system identifier.</p>\n"
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: System.Xml.XmlParserContext.XmlLang
  commentId: P:System.Xml.XmlParserContext.XmlLang
  id: XmlLang
  parent: System.Xml.XmlParserContext
  langs:
  - csharp
  - vb
  name: XmlLang
  nameWithType: XmlParserContext.XmlLang
  fullName: System.Xml.XmlParserContext.XmlLang
  type: Property
  source:
    remote:
      path: src/System.Xml.ReaderWriter/ref/System.Xml.ReaderWriter.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: XmlLang
    path: src/System.Xml.ReaderWriter/ref/System.Xml.ReaderWriter.cs
    startLine: 210
  assemblies:
  - System.Xml.ReaderWriter
  namespace: System.Xml
  summary: "\n<p>Gets or sets the current <strong>xml:lang</strong> scope.</p>\n"
  syntax:
    content: public string XmlLang { get; set; }
    content.vb: Public Property XmlLang As String
    parameters: []
    return:
      type: System.String
      description: "\n<p>The current <strong>xml:lang</strong> scope. If there is no <strong>xml:lang</strong> in scope, <strong>String.Empty</strong> is returned.</p>\n"
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: System.Xml.XmlParserContext.XmlSpace
  commentId: P:System.Xml.XmlParserContext.XmlSpace
  id: XmlSpace
  parent: System.Xml.XmlParserContext
  langs:
  - csharp
  - vb
  name: XmlSpace
  nameWithType: XmlParserContext.XmlSpace
  fullName: System.Xml.XmlParserContext.XmlSpace
  type: Property
  source:
    remote:
      path: src/System.Xml.ReaderWriter/ref/System.Xml.ReaderWriter.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: XmlSpace
    path: src/System.Xml.ReaderWriter/ref/System.Xml.ReaderWriter.cs
    startLine: 211
  assemblies:
  - System.Xml.ReaderWriter
  namespace: System.Xml
  summary: "\n<p>Gets or sets the current <strong>xml:space</strong> scope.</p>\n"
  syntax:
    content: public XmlSpace XmlSpace { get; set; }
    content.vb: Public Property XmlSpace As XmlSpace
    parameters: []
    return:
      type: System.Xml.XmlSpace
      description: "\n<p>An <xref href=\"System.Xml.XmlSpace\" data-throw-if-not-resolved=\"false\"></xref> value indicating the <strong>xml:space</strong> scope.</p>\n"
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
references:
- uid: System.Xml
  commentId: N:System.Xml
  isExternal: false
  name: System.Xml
  nameWithType: System.Xml
  fullName: System.Xml
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: false
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: System.Xml.XmlNameTable
  commentId: T:System.Xml.XmlNameTable
  parent: System.Xml
  isExternal: false
  name: XmlNameTable
  nameWithType: XmlNameTable
  fullName: System.Xml.XmlNameTable
- uid: System.Xml.XmlNamespaceManager
  commentId: T:System.Xml.XmlNamespaceManager
  parent: System.Xml
  isExternal: false
  name: XmlNamespaceManager
  nameWithType: XmlNamespaceManager
  fullName: System.Xml.XmlNamespaceManager
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: false
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Xml.XmlSpace
  commentId: T:System.Xml.XmlSpace
  parent: System.Xml
  isExternal: false
  name: XmlSpace
  nameWithType: XmlSpace
  fullName: System.Xml.XmlSpace
- uid: System.Text.Encoding
  commentId: T:System.Text.Encoding
  parent: System.Text
  isExternal: false
  name: Encoding
  nameWithType: Encoding
  fullName: System.Text.Encoding
- uid: System.Text
  commentId: N:System.Text
  isExternal: false
  name: System.Text
  nameWithType: System.Text
  fullName: System.Text
- uid: System.Xml.XmlException
  commentId: T:System.Xml.XmlException
  isExternal: false
  name: XmlException
  nameWithType: XmlException
  fullName: System.Xml.XmlException
