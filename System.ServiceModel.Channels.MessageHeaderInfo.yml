items:
- uid: System.ServiceModel.Channels.MessageHeaderInfo
  commentId: T:System.ServiceModel.Channels.MessageHeaderInfo
  id: MessageHeaderInfo
  parent: System.ServiceModel.Channels
  children:
  - System.ServiceModel.Channels.MessageHeaderInfo.#ctor
  - System.ServiceModel.Channels.MessageHeaderInfo.Actor
  - System.ServiceModel.Channels.MessageHeaderInfo.IsReferenceParameter
  - System.ServiceModel.Channels.MessageHeaderInfo.MustUnderstand
  - System.ServiceModel.Channels.MessageHeaderInfo.Name
  - System.ServiceModel.Channels.MessageHeaderInfo.Namespace
  - System.ServiceModel.Channels.MessageHeaderInfo.Relay
  langs:
  - csharp
  - vb
  name: MessageHeaderInfo
  fullName: System.ServiceModel.Channels.MessageHeaderInfo
  type: Class
  source:
    remote:
      path: src/System.Private.ServiceModel/src/System/ServiceModel/Channels/MessageHeaderInfo.cs
      branch: master
      repo: https://github.com/dotnet/wcf.git
    id: MessageHeaderInfo
    path: src/System.Private.ServiceModel/src/System/ServiceModel/Channels/MessageHeaderInfo.cs
    startLine: 11
  assemblies:
  - System.ServiceModel.Primitives
  namespace: System.ServiceModel.Channels
  summary: "\n<p>Represents system information regarding a SOAP message header.</p>\n"
  syntax:
    content: public abstract class MessageHeaderInfo
    content.vb: Public MustInherit Class MessageHeaderInfo
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  modifiers.csharp:
  - public
  - abstract
  - class
  modifiers.vb:
  - Public
  - MustInherit
  - Class
  nameWithType: MessageHeaderInfo
- uid: System.ServiceModel.Channels.MessageHeaderInfo.#ctor
  commentId: M:System.ServiceModel.Channels.MessageHeaderInfo.#ctor
  id: '#ctor'
  parent: System.ServiceModel.Channels.MessageHeaderInfo
  langs:
  - csharp
  - vb
  name: MessageHeaderInfo()
  fullName: System.ServiceModel.Channels.MessageHeaderInfo.MessageHeaderInfo()
  type: Constructor
  source:
    remote:
      path: src/System.ServiceModel.Primitives/ref/System.ServiceModel.Primitives.cs
      branch: master
      repo: https://github.com/dotnet/wcf.git
    id: .ctor
    path: src/System.ServiceModel.Primitives/ref/System.ServiceModel.Primitives.cs
    startLine: 1024
  assemblies:
  - System.ServiceModel.Primitives
  namespace: System.ServiceModel.Channels
  summary: "\n<p>Initializes a new instance of the <xref href=\"System.ServiceModel.Channels.MessageHeaderInfo\" data-throw-if-not-resolved=\"false\"></xref> class. </p>\n"
  syntax:
    content: protected MessageHeaderInfo()
    content.vb: Protected Sub New
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
  nameWithType: MessageHeaderInfo.MessageHeaderInfo()
- uid: System.ServiceModel.Channels.MessageHeaderInfo.Actor
  commentId: P:System.ServiceModel.Channels.MessageHeaderInfo.Actor
  id: Actor
  parent: System.ServiceModel.Channels.MessageHeaderInfo
  langs:
  - csharp
  - vb
  name: Actor
  fullName: System.ServiceModel.Channels.MessageHeaderInfo.Actor
  type: Property
  source:
    remote:
      path: src/System.Private.ServiceModel/src/System/ServiceModel/Channels/MessageHeaderInfo.cs
      branch: master
      repo: https://github.com/dotnet/wcf.git
    id: Actor
    path: src/System.Private.ServiceModel/src/System/ServiceModel/Channels/MessageHeaderInfo.cs
    startLine: 13
  assemblies:
  - System.ServiceModel.Primitives
  namespace: System.ServiceModel.Channels
  summary: "\n<p>Gets or sets the intended recipient of the message header.</p>\n"
  syntax:
    content: public abstract string Actor { get; }
    content.vb: Public MustOverride ReadOnly Property Actor As String
    parameters: []
    return:
      type: System.String
      description: "\n<p>A URI that indicates the intended recipient of the message header.</p>\n"
  modifiers.csharp:
  - public
  - abstract
  - get
  modifiers.vb:
  - Public
  - MustOverride
  - ReadOnly
  nameWithType: MessageHeaderInfo.Actor
- uid: System.ServiceModel.Channels.MessageHeaderInfo.IsReferenceParameter
  commentId: P:System.ServiceModel.Channels.MessageHeaderInfo.IsReferenceParameter
  id: IsReferenceParameter
  parent: System.ServiceModel.Channels.MessageHeaderInfo
  langs:
  - csharp
  - vb
  name: IsReferenceParameter
  fullName: System.ServiceModel.Channels.MessageHeaderInfo.IsReferenceParameter
  type: Property
  source:
    remote:
      path: src/System.Private.ServiceModel/src/System/ServiceModel/Channels/MessageHeaderInfo.cs
      branch: master
      repo: https://github.com/dotnet/wcf.git
    id: IsReferenceParameter
    path: src/System.Private.ServiceModel/src/System/ServiceModel/Channels/MessageHeaderInfo.cs
    startLine: 14
  assemblies:
  - System.ServiceModel.Primitives
  namespace: System.ServiceModel.Channels
  summary: "\n<p>Gets a value that specifies whether the message header represents reference parameters of an endpoint reference.</p>\n"
  syntax:
    content: public abstract bool IsReferenceParameter { get; }
    content.vb: Public MustOverride ReadOnly Property IsReferenceParameter As Boolean
    parameters: []
    return:
      type: System.Boolean
      description: "\n<p>\n<strong>true</strong> if the message header represents reference parameters of an endpoint reference; otherwise, <strong>false</strong>.</p>\n"
  modifiers.csharp:
  - public
  - abstract
  - get
  modifiers.vb:
  - Public
  - MustOverride
  - ReadOnly
  nameWithType: MessageHeaderInfo.IsReferenceParameter
- uid: System.ServiceModel.Channels.MessageHeaderInfo.MustUnderstand
  commentId: P:System.ServiceModel.Channels.MessageHeaderInfo.MustUnderstand
  id: MustUnderstand
  parent: System.ServiceModel.Channels.MessageHeaderInfo
  langs:
  - csharp
  - vb
  name: MustUnderstand
  fullName: System.ServiceModel.Channels.MessageHeaderInfo.MustUnderstand
  type: Property
  source:
    remote:
      path: src/System.Private.ServiceModel/src/System/ServiceModel/Channels/MessageHeaderInfo.cs
      branch: master
      repo: https://github.com/dotnet/wcf.git
    id: MustUnderstand
    path: src/System.Private.ServiceModel/src/System/ServiceModel/Channels/MessageHeaderInfo.cs
    startLine: 17
  assemblies:
  - System.ServiceModel.Primitives
  namespace: System.ServiceModel.Channels
  summary: "\n<p>Gets or sets a value that indicates whether processing the message header is mandatory or optional.</p>\n"
  syntax:
    content: public abstract bool MustUnderstand { get; }
    content.vb: Public MustOverride ReadOnly Property MustUnderstand As Boolean
    parameters: []
    return:
      type: System.Boolean
      description: "\n<p>\n<strong>true</strong> if processing the message header is mandatory; otherwise, <strong>false</strong>.</p>\n"
  modifiers.csharp:
  - public
  - abstract
  - get
  modifiers.vb:
  - Public
  - MustOverride
  - ReadOnly
  nameWithType: MessageHeaderInfo.MustUnderstand
- uid: System.ServiceModel.Channels.MessageHeaderInfo.Name
  commentId: P:System.ServiceModel.Channels.MessageHeaderInfo.Name
  id: Name
  parent: System.ServiceModel.Channels.MessageHeaderInfo
  langs:
  - csharp
  - vb
  name: Name
  fullName: System.ServiceModel.Channels.MessageHeaderInfo.Name
  type: Property
  source:
    remote:
      path: src/System.Private.ServiceModel/src/System/ServiceModel/Channels/MessageHeaderInfo.cs
      branch: master
      repo: https://github.com/dotnet/wcf.git
    id: Name
    path: src/System.Private.ServiceModel/src/System/ServiceModel/Channels/MessageHeaderInfo.cs
    startLine: 15
  assemblies:
  - System.ServiceModel.Primitives
  namespace: System.ServiceModel.Channels
  summary: "\n<p>Gets the name of the message header.</p>\n"
  syntax:
    content: public abstract string Name { get; }
    content.vb: Public MustOverride ReadOnly Property Name As String
    parameters: []
    return:
      type: System.String
      description: "\n<p>The name of the message header.</p>\n"
  modifiers.csharp:
  - public
  - abstract
  - get
  modifiers.vb:
  - Public
  - MustOverride
  - ReadOnly
  nameWithType: MessageHeaderInfo.Name
- uid: System.ServiceModel.Channels.MessageHeaderInfo.Namespace
  commentId: P:System.ServiceModel.Channels.MessageHeaderInfo.Namespace
  id: Namespace
  parent: System.ServiceModel.Channels.MessageHeaderInfo
  langs:
  - csharp
  - vb
  name: Namespace
  fullName: System.ServiceModel.Channels.MessageHeaderInfo.Namespace
  type: Property
  source:
    remote:
      path: src/System.Private.ServiceModel/src/System/ServiceModel/Channels/MessageHeaderInfo.cs
      branch: master
      repo: https://github.com/dotnet/wcf.git
    id: Namespace
    path: src/System.Private.ServiceModel/src/System/ServiceModel/Channels/MessageHeaderInfo.cs
    startLine: 16
  assemblies:
  - System.ServiceModel.Primitives
  namespace: System.ServiceModel.Channels
  summary: "\n<p>Gets the namespace of the message header.</p>\n"
  syntax:
    content: public abstract string Namespace { get; }
    content.vb: Public MustOverride ReadOnly Property Namespace As String
    parameters: []
    return:
      type: System.String
      description: "\n<p>The namespace of the message header.</p>\n"
  modifiers.csharp:
  - public
  - abstract
  - get
  modifiers.vb:
  - Public
  - MustOverride
  - ReadOnly
  nameWithType: MessageHeaderInfo.Namespace
- uid: System.ServiceModel.Channels.MessageHeaderInfo.Relay
  commentId: P:System.ServiceModel.Channels.MessageHeaderInfo.Relay
  id: Relay
  parent: System.ServiceModel.Channels.MessageHeaderInfo
  langs:
  - csharp
  - vb
  name: Relay
  fullName: System.ServiceModel.Channels.MessageHeaderInfo.Relay
  type: Property
  source:
    remote:
      path: src/System.Private.ServiceModel/src/System/ServiceModel/Channels/MessageHeaderInfo.cs
      branch: master
      repo: https://github.com/dotnet/wcf.git
    id: Relay
    path: src/System.Private.ServiceModel/src/System/ServiceModel/Channels/MessageHeaderInfo.cs
    startLine: 18
  assemblies:
  - System.ServiceModel.Primitives
  namespace: System.ServiceModel.Channels
  summary: "\n<p>Gets or sets a value that indicates whether the message header can be relayed.</p>\n"
  syntax:
    content: public abstract bool Relay { get; }
    content.vb: Public MustOverride ReadOnly Property Relay As Boolean
    parameters: []
    return:
      type: System.Boolean
      description: "\n<p>\n<strong>true</strong> if the message header can be relayed; otherwise, <strong>false</strong>.</p>\n"
  modifiers.csharp:
  - public
  - abstract
  - get
  modifiers.vb:
  - Public
  - MustOverride
  - ReadOnly
  nameWithType: MessageHeaderInfo.Relay
references:
- uid: System.ServiceModel.Channels
  isExternal: false
  name: System.ServiceModel.Channels
  fullName: System.ServiceModel.Channels
  nameWithType: System.ServiceModel.Channels
  commentId: N:System.ServiceModel.Channels
- uid: System.Object
  parent: System
  isExternal: false
  name: Object
  fullName: System.Object
  nameWithType: Object
  commentId: T:System.Object
- uid: System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  nameWithType: Object.ToString()
  commentId: M:System.Object.ToString
- uid: System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
  nameWithType: Object.Equals(Object)
  commentId: M:System.Object.Equals(System.Object)
- uid: System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
  nameWithType: Object.Equals(Object, Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
  nameWithType: Object.ReferenceEquals(Object, Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
- uid: System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  nameWithType: Object.GetHashCode()
  commentId: M:System.Object.GetHashCode
- uid: System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  nameWithType: Object.GetType()
  commentId: M:System.Object.GetType
- uid: System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  nameWithType: Object.MemberwiseClone()
  commentId: M:System.Object.MemberwiseClone
- uid: System
  isExternal: false
  name: System
  fullName: System
  nameWithType: System
  commentId: N:System
- uid: System.String
  parent: System
  isExternal: false
  name: String
  fullName: System.String
  nameWithType: String
  commentId: T:System.String
- uid: System.Boolean
  parent: System
  isExternal: false
  name: Boolean
  fullName: System.Boolean
  nameWithType: Boolean
  commentId: T:System.Boolean
