items:
- uid: System.ServiceModel.Channels.AddressingVersion
  commentId: T:System.ServiceModel.Channels.AddressingVersion
  id: AddressingVersion
  parent: System.ServiceModel.Channels
  children:
  - System.ServiceModel.Channels.AddressingVersion.None
  - System.ServiceModel.Channels.AddressingVersion.ToString
  - System.ServiceModel.Channels.AddressingVersion.WSAddressing10
  langs:
  - csharp
  - vb
  name: AddressingVersion
  fullName: System.ServiceModel.Channels.AddressingVersion
  type: Class
  source:
    remote:
      path: src/System.Private.ServiceModel/src/System/ServiceModel/Channels/AddressingVersion.cs
      branch: master
      repo: https://github.com/dotnet/wcf.git
    id: AddressingVersion
    path: src/System.Private.ServiceModel/src/System/ServiceModel/Channels/AddressingVersion.cs
    startLine: 10
  assemblies:
  - System.ServiceModel.Primitives
  namespace: System.ServiceModel.Channels
  summary: "\n<p>The WS-Addressing version associated with a SOAP message or understood by an endpoint.</p>\n"
  syntax:
    content: public sealed class AddressingVersion
    content.vb: Public NotInheritable Class AddressingVersion
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  modifiers.csharp:
  - public
  - sealed
  - class
  modifiers.vb:
  - Public
  - NotInheritable
  - Class
  nameWithType: AddressingVersion
- uid: System.ServiceModel.Channels.AddressingVersion.None
  commentId: P:System.ServiceModel.Channels.AddressingVersion.None
  id: None
  parent: System.ServiceModel.Channels.AddressingVersion
  langs:
  - csharp
  - vb
  name: None
  fullName: System.ServiceModel.Channels.AddressingVersion.None
  type: Property
  source:
    remote:
      path: src/System.Private.ServiceModel/src/System/ServiceModel/Channels/AddressingVersion.cs
      branch: master
      repo: https://github.com/dotnet/wcf.git
    id: None
    path: src/System.Private.ServiceModel/src/System/ServiceModel/Channels/AddressingVersion.cs
    startLine: 65
  assemblies:
  - System.ServiceModel.Primitives
  namespace: System.ServiceModel.Channels
  summary: "\n<p>Gets the addressing version that is not associated with WS-Addressing version.</p>\n"
  syntax:
    content: public static AddressingVersion None { get; }
    content.vb: Public Shared ReadOnly Property None As AddressingVersion
    parameters: []
    return:
      type: System.ServiceModel.Channels.AddressingVersion
      description: "\n<p>The <xref href=\"System.ServiceModel.Channels.AddressingVersion\" data-throw-if-not-resolved=\"false\"></xref> that is not associated WS-Addressing version.</p>\n"
  modifiers.csharp:
  - public
  - static
  - get
  modifiers.vb:
  - Public
  - Shared
  - ReadOnly
  nameWithType: AddressingVersion.None
- uid: System.ServiceModel.Channels.AddressingVersion.WSAddressing10
  commentId: P:System.ServiceModel.Channels.AddressingVersion.WSAddressing10
  id: WSAddressing10
  parent: System.ServiceModel.Channels.AddressingVersion
  langs:
  - csharp
  - vb
  name: WSAddressing10
  fullName: System.ServiceModel.Channels.AddressingVersion.WSAddressing10
  type: Property
  source:
    remote:
      path: src/System.Private.ServiceModel/src/System/ServiceModel/Channels/AddressingVersion.cs
      branch: master
      repo: https://github.com/dotnet/wcf.git
    id: WSAddressing10
    path: src/System.Private.ServiceModel/src/System/ServiceModel/Channels/AddressingVersion.cs
    startLine: 60
  assemblies:
  - System.ServiceModel.Primitives
  namespace: System.ServiceModel.Channels
  summary: "\n<p>Gets an identifier for the address version associated with WS-Addressing 1.0.</p>\n"
  syntax:
    content: public static AddressingVersion WSAddressing10 { get; }
    content.vb: Public Shared ReadOnly Property WSAddressing10 As AddressingVersion
    parameters: []
    return:
      type: System.ServiceModel.Channels.AddressingVersion
      description: "\n<p>A singleton instance that identifies the <xref href=\"System.ServiceModel.Channels.AddressingVersion\" data-throw-if-not-resolved=\"false\"></xref> that is associated with WS-Addressing 1.0.</p>\n"
  modifiers.csharp:
  - public
  - static
  - get
  modifiers.vb:
  - Public
  - Shared
  - ReadOnly
  nameWithType: AddressingVersion.WSAddressing10
- uid: System.ServiceModel.Channels.AddressingVersion.ToString
  commentId: M:System.ServiceModel.Channels.AddressingVersion.ToString
  id: ToString
  parent: System.ServiceModel.Channels.AddressingVersion
  langs:
  - csharp
  - vb
  name: ToString()
  fullName: System.ServiceModel.Channels.AddressingVersion.ToString()
  type: Method
  source:
    remote:
      path: src/System.Private.ServiceModel/src/System/ServiceModel/Channels/AddressingVersion.cs
      branch: master
      repo: https://github.com/dotnet/wcf.git
    id: ToString
    path: src/System.Private.ServiceModel/src/System/ServiceModel/Channels/AddressingVersion.cs
    startLine: 142
  assemblies:
  - System.ServiceModel.Primitives
  namespace: System.ServiceModel.Channels
  summary: "\n<p>Returns a string representation of the current addressing version.</p>\n"
  syntax:
    content: public override string ToString()
    content.vb: Public Overrides Function ToString As String
    return:
      type: System.String
      description: "\n<p>A string that represents the current addressing version.</p>\n"
  overridden: System.Object.ToString
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
  nameWithType: AddressingVersion.ToString()
references:
- uid: System.ServiceModel.Channels
  isExternal: false
  name: System.ServiceModel.Channels
  fullName: System.ServiceModel.Channels
  nameWithType: System.ServiceModel.Channels
  commentId: N:System.ServiceModel.Channels
- uid: System.Object
  parent: System
  isExternal: false
  name: Object
  fullName: System.Object
  nameWithType: Object
  commentId: T:System.Object
- uid: System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
  nameWithType: Object.Equals(Object)
  commentId: M:System.Object.Equals(System.Object)
- uid: System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
  nameWithType: Object.Equals(Object, Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
  nameWithType: Object.ReferenceEquals(Object, Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
- uid: System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  nameWithType: Object.GetHashCode()
  commentId: M:System.Object.GetHashCode
- uid: System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  nameWithType: Object.GetType()
  commentId: M:System.Object.GetType
- uid: System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  nameWithType: Object.MemberwiseClone()
  commentId: M:System.Object.MemberwiseClone
- uid: System
  isExternal: false
  name: System
  fullName: System
  nameWithType: System
  commentId: N:System
- uid: System.ServiceModel.Channels.AddressingVersion
  parent: System.ServiceModel.Channels
  isExternal: false
  name: AddressingVersion
  fullName: System.ServiceModel.Channels.AddressingVersion
  nameWithType: AddressingVersion
  commentId: T:System.ServiceModel.Channels.AddressingVersion
- uid: System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  nameWithType: Object.ToString()
  commentId: M:System.Object.ToString
- uid: System.String
  parent: System
  isExternal: false
  name: String
  fullName: System.String
  nameWithType: String
  commentId: T:System.String
