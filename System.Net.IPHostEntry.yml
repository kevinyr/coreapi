items:
- uid: System.Net.IPHostEntry
  commentId: T:System.Net.IPHostEntry
  id: IPHostEntry
  parent: System.Net
  children:
  - System.Net.IPHostEntry.#ctor
  - System.Net.IPHostEntry.AddressList
  - System.Net.IPHostEntry.Aliases
  - System.Net.IPHostEntry.HostName
  langs:
  - csharp
  - vb
  name: IPHostEntry
  fullName: System.Net.IPHostEntry
  type: Class
  source:
    remote:
      path: src/System.Net.NameResolution/src/System/Net/IPHostEntry.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: IPHostEntry
    path: src/System.Net.NameResolution/src/System/Net/IPHostEntry.cs
    startLine: 10
  assemblies:
  - System.Net.NameResolution
  namespace: System.Net
  summary: "\n<p>Provides a container class for Internet host address information.</p>\n"
  syntax:
    content: public class IPHostEntry
    content.vb: Public Class IPHostEntry
  seealso:
  - type: System.Net.Dns
    commentId: T:System.Net.Dns
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
  nameWithType: IPHostEntry
- uid: System.Net.IPHostEntry.#ctor
  commentId: M:System.Net.IPHostEntry.#ctor
  id: '#ctor'
  parent: System.Net.IPHostEntry
  langs:
  - csharp
  - vb
  name: IPHostEntry()
  fullName: System.Net.IPHostEntry.IPHostEntry()
  type: Constructor
  source:
    remote:
      path: src/System.Net.NameResolution/ref/System.Net.NameResolution.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: .ctor
    path: src/System.Net.NameResolution/ref/System.Net.NameResolution.cs
    startLine: 19
  assemblies:
  - System.Net.NameResolution
  namespace: System.Net
  summary: "\n<p>Initializes a new instance of the <xref href=\"System.Net.IPHostEntry\" data-throw-if-not-resolved=\"false\"></xref> class.</p>\n"
  syntax:
    content: public IPHostEntry()
    content.vb: Public Sub New
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  nameWithType: IPHostEntry.IPHostEntry()
- uid: System.Net.IPHostEntry.AddressList
  commentId: P:System.Net.IPHostEntry.AddressList
  id: AddressList
  parent: System.Net.IPHostEntry
  langs:
  - csharp
  - vb
  name: AddressList
  fullName: System.Net.IPHostEntry.AddressList
  type: Property
  source:
    remote:
      path: src/System.Net.NameResolution/src/System/Net/IPHostEntry.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: AddressList
    path: src/System.Net.NameResolution/src/System/Net/IPHostEntry.cs
    startLine: 68
  assemblies:
  - System.Net.NameResolution
  namespace: System.Net
  summary: "\n<p>Gets or sets a list of IP addresses that are associated with a host.</p>\n"
  syntax:
    content: public IPAddress[] AddressList { get; set; }
    content.vb: Public Property AddressList As IPAddress()
    parameters: []
    return:
      type: IPAddress[]
      description: "\n<p>An array of type <xref href=\"System.Net.IPAddress\" data-throw-if-not-resolved=\"false\"></xref> that contains IP addresses that resolve to the host names that are contained in the <xref href=\"System.Net.IPHostEntry.Aliases\" data-throw-if-not-resolved=\"false\"></xref> property.</p>\n"
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
  nameWithType: IPHostEntry.AddressList
- uid: System.Net.IPHostEntry.Aliases
  commentId: P:System.Net.IPHostEntry.Aliases
  id: Aliases
  parent: System.Net.IPHostEntry
  langs:
  - csharp
  - vb
  name: Aliases
  fullName: System.Net.IPHostEntry.Aliases
  type: Property
  source:
    remote:
      path: src/System.Net.NameResolution/src/System/Net/IPHostEntry.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: Aliases
    path: src/System.Net.NameResolution/src/System/Net/IPHostEntry.cs
    startLine: 48
  assemblies:
  - System.Net.NameResolution
  namespace: System.Net
  summary: "\n<p>Gets or sets a list of aliases that are associated with a host.</p>\n"
  syntax:
    content: public string[] Aliases { get; set; }
    content.vb: Public Property Aliases As String()
    parameters: []
    return:
      type: System.String[]
      description: "\n<p>An array of strings that contain DNS names that resolve to the IP addresses in the <xref href=\"System.Net.IPHostEntry.AddressList\" data-throw-if-not-resolved=\"false\"></xref> property.</p>\n"
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
  nameWithType: IPHostEntry.Aliases
- uid: System.Net.IPHostEntry.HostName
  commentId: P:System.Net.IPHostEntry.HostName
  id: HostName
  parent: System.Net.IPHostEntry
  langs:
  - csharp
  - vb
  name: HostName
  fullName: System.Net.IPHostEntry.HostName
  type: Property
  source:
    remote:
      path: src/System.Net.NameResolution/src/System/Net/IPHostEntry.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: HostName
    path: src/System.Net.NameResolution/src/System/Net/IPHostEntry.cs
    startLine: 27
  assemblies:
  - System.Net.NameResolution
  namespace: System.Net
  summary: "\n<p>Gets or sets the DNS name of the host.</p>\n"
  syntax:
    content: public string HostName { get; set; }
    content.vb: Public Property HostName As String
    parameters: []
    return:
      type: System.String
      description: "\n<p>A string that contains the primary host name for the server.</p>\n"
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
  nameWithType: IPHostEntry.HostName
references:
- uid: System.Net
  isExternal: false
  name: System.Net
  fullName: System.Net
  nameWithType: System.Net
  commentId: N:System.Net
- uid: System.Object
  parent: System
  isExternal: false
  name: Object
  fullName: System.Object
  nameWithType: Object
  commentId: T:System.Object
- uid: System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  nameWithType: Object.ToString()
  commentId: M:System.Object.ToString
- uid: System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
  nameWithType: Object.Equals(Object)
  commentId: M:System.Object.Equals(System.Object)
- uid: System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
  nameWithType: Object.Equals(Object, Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
  nameWithType: Object.ReferenceEquals(Object, Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
- uid: System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  nameWithType: Object.GetHashCode()
  commentId: M:System.Object.GetHashCode
- uid: System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  nameWithType: Object.GetType()
  commentId: M:System.Object.GetType
- uid: System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  nameWithType: Object.MemberwiseClone()
  commentId: M:System.Object.MemberwiseClone
- uid: System
  isExternal: false
  name: System
  fullName: System
  nameWithType: System
  commentId: N:System
- uid: System.Net.IPAddress[]
  name: IPAddress[]
  fullName: System.Net.IPAddress[]
  fullname.vb: System.Net.IPAddress()
  name.vb: IPAddress()
  spec.csharp:
  - uid: System.Net.IPAddress
    name: IPAddress
    fullName: System.Net.IPAddress
  - name: '[]'
    fullName: '[]'
  spec.vb:
  - uid: System.Net.IPAddress
    name: IPAddress
    fullName: System.Net.IPAddress
  - name: ()
    fullName: ()
  nameWithType: IPAddress[]
  nameWithType.vb: IPAddress()
- uid: System.String[]
  name: String[]
  fullName: System.String[]
  fullname.vb: System.String()
  name.vb: String()
  spec.csharp:
  - uid: System.String
    name: String
    fullName: System.String
    isExternal: true
  - name: '[]'
    fullName: '[]'
  spec.vb:
  - uid: System.String
    name: String
    fullName: System.String
    isExternal: true
  - name: ()
    fullName: ()
  nameWithType: String[]
  nameWithType.vb: String()
- uid: System.String
  parent: System
  isExternal: false
  name: String
  fullName: System.String
  nameWithType: String
  commentId: T:System.String
