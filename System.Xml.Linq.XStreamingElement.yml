### YamlMime:ManagedReference
items:
- uid: System.Xml.Linq.XStreamingElement
  commentId: T:System.Xml.Linq.XStreamingElement
  id: XStreamingElement
  parent: System.Xml.Linq
  children:
  - System.Xml.Linq.XStreamingElement.#ctor(System.Xml.Linq.XName)
  - System.Xml.Linq.XStreamingElement.#ctor(System.Xml.Linq.XName,System.Object)
  - System.Xml.Linq.XStreamingElement.#ctor(System.Xml.Linq.XName,System.Object[])
  - System.Xml.Linq.XStreamingElement.Add(System.Object)
  - System.Xml.Linq.XStreamingElement.Add(System.Object[])
  - System.Xml.Linq.XStreamingElement.Name
  - System.Xml.Linq.XStreamingElement.Save(System.IO.Stream)
  - System.Xml.Linq.XStreamingElement.Save(System.IO.Stream,System.Xml.Linq.SaveOptions)
  - System.Xml.Linq.XStreamingElement.Save(System.IO.TextWriter)
  - System.Xml.Linq.XStreamingElement.Save(System.IO.TextWriter,System.Xml.Linq.SaveOptions)
  - System.Xml.Linq.XStreamingElement.Save(System.Xml.XmlWriter)
  - System.Xml.Linq.XStreamingElement.ToString
  - System.Xml.Linq.XStreamingElement.ToString(System.Xml.Linq.SaveOptions)
  - System.Xml.Linq.XStreamingElement.WriteTo(System.Xml.XmlWriter)
  langs:
  - csharp
  - vb
  name: XStreamingElement
  nameWithType: XStreamingElement
  fullName: System.Xml.Linq.XStreamingElement
  type: Class
  source:
    remote:
      path: src/System.Xml.XDocument/ref/System.Xml.XDocument.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: XStreamingElement
    path: src/System.Xml.XDocument/ref/System.Xml.XDocument.cs
    startLine: 433
  assemblies:
  - System.Xml.XDocument
  namespace: System.Xml.Linq
  summary: "\n<p>Represents elements in an XML tree that supports deferred streaming output.</p>\n"
  syntax:
    content: public class XStreamingElement
    content.vb: Public Class XStreamingElement
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: System.Xml.Linq.XStreamingElement.#ctor(System.Xml.Linq.XName)
  commentId: M:System.Xml.Linq.XStreamingElement.#ctor(System.Xml.Linq.XName)
  id: '#ctor(System.Xml.Linq.XName)'
  parent: System.Xml.Linq.XStreamingElement
  langs:
  - csharp
  - vb
  name: XStreamingElement(XName)
  nameWithType: XStreamingElement.XStreamingElement(XName)
  fullName: System.Xml.Linq.XStreamingElement.XStreamingElement(System.Xml.Linq.XName)
  type: Constructor
  source:
    remote:
      path: src/System.Xml.XDocument/ref/System.Xml.XDocument.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: .ctor
    path: src/System.Xml.XDocument/ref/System.Xml.XDocument.cs
    startLine: 435
  assemblies:
  - System.Xml.XDocument
  namespace: System.Xml.Linq
  summary: "\n<p>Initializes a new instance of the <xref href=\"System.Xml.Linq.XElement\" data-throw-if-not-resolved=\"false\"></xref> class from the specified <xref href=\"System.Xml.Linq.XName\" data-throw-if-not-resolved=\"false\"></xref>.</p>\n"
  syntax:
    content: public XStreamingElement(XName name)
    content.vb: Public Sub New(name As XName)
    parameters:
    - id: name
      type: System.Xml.Linq.XName
      description: "\n<p>An <xref href=\"System.Xml.Linq.XName\" data-throw-if-not-resolved=\"false\"></xref> that contains the name of the element.</p>\n"
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: System.Xml.Linq.XStreamingElement.#ctor(System.Xml.Linq.XName,System.Object)
  commentId: M:System.Xml.Linq.XStreamingElement.#ctor(System.Xml.Linq.XName,System.Object)
  id: '#ctor(System.Xml.Linq.XName,System.Object)'
  parent: System.Xml.Linq.XStreamingElement
  langs:
  - csharp
  - vb
  name: XStreamingElement(XName, Object)
  nameWithType: XStreamingElement.XStreamingElement(XName, Object)
  fullName: System.Xml.Linq.XStreamingElement.XStreamingElement(System.Xml.Linq.XName, System.Object)
  type: Constructor
  source:
    remote:
      path: src/System.Xml.XDocument/ref/System.Xml.XDocument.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: .ctor
    path: src/System.Xml.XDocument/ref/System.Xml.XDocument.cs
    startLine: 436
  assemblies:
  - System.Xml.XDocument
  namespace: System.Xml.Linq
  summary: "\n<p>Initializes a new instance of the <xref href=\"System.Xml.Linq.XStreamingElement\" data-throw-if-not-resolved=\"false\"></xref> class with the specified name and content.</p>\n"
  syntax:
    content: public XStreamingElement(XName name, object content)
    content.vb: Public Sub New(name As XName, content As Object)
    parameters:
    - id: name
      type: System.Xml.Linq.XName
      description: "\n<p>An <xref href=\"System.Xml.Linq.XName\" data-throw-if-not-resolved=\"false\"></xref> that contains the element name.</p>\n"
    - id: content
      type: System.Object
      description: "\n<p>The contents of the element.</p>\n"
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: System.Xml.Linq.XStreamingElement.#ctor(System.Xml.Linq.XName,System.Object[])
  commentId: M:System.Xml.Linq.XStreamingElement.#ctor(System.Xml.Linq.XName,System.Object[])
  id: '#ctor(System.Xml.Linq.XName,System.Object[])'
  parent: System.Xml.Linq.XStreamingElement
  langs:
  - csharp
  - vb
  name: XStreamingElement(XName, Object[])
  nameWithType: XStreamingElement.XStreamingElement(XName, Object[])
  fullName: System.Xml.Linq.XStreamingElement.XStreamingElement(System.Xml.Linq.XName, System.Object[])
  type: Constructor
  source:
    remote:
      path: src/System.Xml.XDocument/ref/System.Xml.XDocument.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: .ctor
    path: src/System.Xml.XDocument/ref/System.Xml.XDocument.cs
    startLine: 437
  assemblies:
  - System.Xml.XDocument
  namespace: System.Xml.Linq
  summary: "\n<p>Initializes a new instance of the <xref href=\"System.Xml.Linq.XStreamingElement\" data-throw-if-not-resolved=\"false\"></xref> class with the specified name and content.</p>\n"
  syntax:
    content: public XStreamingElement(XName name, params object[] content)
    content.vb: Public Sub New(name As XName, ParamArray content As Object())
    parameters:
    - id: name
      type: System.Xml.Linq.XName
      description: "\n<p>An <xref href=\"System.Xml.Linq.XName\" data-throw-if-not-resolved=\"false\"></xref> that contains the element name.</p>\n"
    - id: content
      type: System.Object[]
      description: "\n<p>The contents of the element.</p>\n"
  nameWithType.vb: XStreamingElement.XStreamingElement(XName, Object())
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: System.Xml.Linq.XStreamingElement.XStreamingElement(System.Xml.Linq.XName, System.Object())
  name.vb: XStreamingElement(XName, Object())
- uid: System.Xml.Linq.XStreamingElement.Name
  commentId: P:System.Xml.Linq.XStreamingElement.Name
  id: Name
  parent: System.Xml.Linq.XStreamingElement
  langs:
  - csharp
  - vb
  name: Name
  nameWithType: XStreamingElement.Name
  fullName: System.Xml.Linq.XStreamingElement.Name
  type: Property
  source:
    remote:
      path: src/System.Xml.XDocument/ref/System.Xml.XDocument.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: Name
    path: src/System.Xml.XDocument/ref/System.Xml.XDocument.cs
    startLine: 438
  assemblies:
  - System.Xml.XDocument
  namespace: System.Xml.Linq
  summary: "\n<p>Gets or sets the name of this streaming element.</p>\n"
  syntax:
    content: public XName Name { get; set; }
    content.vb: Public Property Name As XName
    parameters: []
    return:
      type: System.Xml.Linq.XName
      description: "\n<p>An <xref href=\"System.Xml.Linq.XName\" data-throw-if-not-resolved=\"false\"></xref> that contains the name of this streaming element.</p>\n"
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: System.Xml.Linq.XStreamingElement.Add(System.Object)
  commentId: M:System.Xml.Linq.XStreamingElement.Add(System.Object)
  id: Add(System.Object)
  parent: System.Xml.Linq.XStreamingElement
  langs:
  - csharp
  - vb
  name: Add(Object)
  nameWithType: XStreamingElement.Add(Object)
  fullName: System.Xml.Linq.XStreamingElement.Add(System.Object)
  type: Method
  source:
    remote:
      path: src/System.Xml.XDocument/ref/System.Xml.XDocument.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: Add
    path: src/System.Xml.XDocument/ref/System.Xml.XDocument.cs
    startLine: 439
  assemblies:
  - System.Xml.XDocument
  namespace: System.Xml.Linq
  summary: "\n<p>Adds the specified content as children to this <xref href=\"System.Xml.Linq.XStreamingElement\" data-throw-if-not-resolved=\"false\"></xref>.</p>\n"
  syntax:
    content: public void Add(object content)
    content.vb: Public Sub Add(content As Object)
    parameters:
    - id: content
      type: System.Object
      description: "\n<p>Content to be added to the streaming element.</p>\n"
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: System.Xml.Linq.XStreamingElement.Add(System.Object[])
  commentId: M:System.Xml.Linq.XStreamingElement.Add(System.Object[])
  id: Add(System.Object[])
  parent: System.Xml.Linq.XStreamingElement
  langs:
  - csharp
  - vb
  name: Add(Object[])
  nameWithType: XStreamingElement.Add(Object[])
  fullName: System.Xml.Linq.XStreamingElement.Add(System.Object[])
  type: Method
  source:
    remote:
      path: src/System.Xml.XDocument/ref/System.Xml.XDocument.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: Add
    path: src/System.Xml.XDocument/ref/System.Xml.XDocument.cs
    startLine: 440
  assemblies:
  - System.Xml.XDocument
  namespace: System.Xml.Linq
  summary: "\n<p>Adds the specified content as children to this <xref href=\"System.Xml.Linq.XStreamingElement\" data-throw-if-not-resolved=\"false\"></xref>.</p>\n"
  syntax:
    content: public void Add(params object[] content)
    content.vb: Public Sub Add(ParamArray content As Object())
    parameters:
    - id: content
      type: System.Object[]
      description: "\n<p>Content to be added to the streaming element.</p>\n"
  nameWithType.vb: XStreamingElement.Add(Object())
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: System.Xml.Linq.XStreamingElement.Add(System.Object())
  name.vb: Add(Object())
- uid: System.Xml.Linq.XStreamingElement.Save(System.IO.Stream)
  commentId: M:System.Xml.Linq.XStreamingElement.Save(System.IO.Stream)
  id: Save(System.IO.Stream)
  parent: System.Xml.Linq.XStreamingElement
  langs:
  - csharp
  - vb
  name: Save(Stream)
  nameWithType: XStreamingElement.Save(Stream)
  fullName: System.Xml.Linq.XStreamingElement.Save(System.IO.Stream)
  type: Method
  source:
    remote:
      path: src/System.Xml.XDocument/ref/System.Xml.XDocument.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: Save
    path: src/System.Xml.XDocument/ref/System.Xml.XDocument.cs
    startLine: 441
  assemblies:
  - System.Xml.XDocument
  namespace: System.Xml.Linq
  summary: "\n<p>Outputs this <xref href=\"System.Xml.Linq.XStreamingElement\" data-throw-if-not-resolved=\"false\"></xref> to the specified <xref href=\"System.IO.Stream\" data-throw-if-not-resolved=\"false\"></xref>.</p>\n"
  syntax:
    content: public void Save(Stream stream)
    content.vb: Public Sub Save(stream As Stream)
    parameters:
    - id: stream
      type: System.IO.Stream
      description: "\n<p>The stream to output this <xref href=\"System.Xml.Linq.XDocument\" data-throw-if-not-resolved=\"false\"></xref> to.</p>\n"
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: System.Xml.Linq.XStreamingElement.Save(System.IO.Stream,System.Xml.Linq.SaveOptions)
  commentId: M:System.Xml.Linq.XStreamingElement.Save(System.IO.Stream,System.Xml.Linq.SaveOptions)
  id: Save(System.IO.Stream,System.Xml.Linq.SaveOptions)
  parent: System.Xml.Linq.XStreamingElement
  langs:
  - csharp
  - vb
  name: Save(Stream, SaveOptions)
  nameWithType: XStreamingElement.Save(Stream, SaveOptions)
  fullName: System.Xml.Linq.XStreamingElement.Save(System.IO.Stream, System.Xml.Linq.SaveOptions)
  type: Method
  source:
    remote:
      path: src/System.Xml.XDocument/ref/System.Xml.XDocument.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: Save
    path: src/System.Xml.XDocument/ref/System.Xml.XDocument.cs
    startLine: 442
  assemblies:
  - System.Xml.XDocument
  namespace: System.Xml.Linq
  summary: "\n<p>Outputs this <xref href=\"System.Xml.Linq.XStreamingElement\" data-throw-if-not-resolved=\"false\"></xref> to the specified <xref href=\"System.IO.Stream\" data-throw-if-not-resolved=\"false\"></xref>, optionally specifying formatting behavior.</p>\n"
  syntax:
    content: public void Save(Stream stream, SaveOptions options)
    content.vb: Public Sub Save(stream As Stream, options As SaveOptions)
    parameters:
    - id: stream
      type: System.IO.Stream
      description: "\n<p>The stream to output this <xref href=\"System.Xml.Linq.XDocument\" data-throw-if-not-resolved=\"false\"></xref> to.</p>\n"
    - id: options
      type: System.Xml.Linq.SaveOptions
      description: "\n<p>A <xref href=\"System.Xml.Linq.SaveOptions\" data-throw-if-not-resolved=\"false\"></xref> object that specifies formatting behavior.</p>\n"
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: System.Xml.Linq.XStreamingElement.Save(System.IO.TextWriter)
  commentId: M:System.Xml.Linq.XStreamingElement.Save(System.IO.TextWriter)
  id: Save(System.IO.TextWriter)
  parent: System.Xml.Linq.XStreamingElement
  langs:
  - csharp
  - vb
  name: Save(TextWriter)
  nameWithType: XStreamingElement.Save(TextWriter)
  fullName: System.Xml.Linq.XStreamingElement.Save(System.IO.TextWriter)
  type: Method
  source:
    remote:
      path: src/System.Xml.XDocument/ref/System.Xml.XDocument.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: Save
    path: src/System.Xml.XDocument/ref/System.Xml.XDocument.cs
    startLine: 443
  assemblies:
  - System.Xml.XDocument
  namespace: System.Xml.Linq
  summary: "\n<p>Serialize this streaming element to a <xref href=\"System.IO.TextWriter\" data-throw-if-not-resolved=\"false\"></xref>.</p>\n"
  syntax:
    content: public void Save(TextWriter textWriter)
    content.vb: Public Sub Save(textWriter As TextWriter)
    parameters:
    - id: textWriter
      type: System.IO.TextWriter
      description: "\n<p>A <xref href=\"System.IO.TextWriter\" data-throw-if-not-resolved=\"false\"></xref> that the <xref href=\"System.Xml.Linq.XStreamingElement\" data-throw-if-not-resolved=\"false\"></xref> will be written to.</p>\n"
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: System.Xml.Linq.XStreamingElement.Save(System.IO.TextWriter,System.Xml.Linq.SaveOptions)
  commentId: M:System.Xml.Linq.XStreamingElement.Save(System.IO.TextWriter,System.Xml.Linq.SaveOptions)
  id: Save(System.IO.TextWriter,System.Xml.Linq.SaveOptions)
  parent: System.Xml.Linq.XStreamingElement
  langs:
  - csharp
  - vb
  name: Save(TextWriter, SaveOptions)
  nameWithType: XStreamingElement.Save(TextWriter, SaveOptions)
  fullName: System.Xml.Linq.XStreamingElement.Save(System.IO.TextWriter, System.Xml.Linq.SaveOptions)
  type: Method
  source:
    remote:
      path: src/System.Xml.XDocument/ref/System.Xml.XDocument.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: Save
    path: src/System.Xml.XDocument/ref/System.Xml.XDocument.cs
    startLine: 444
  assemblies:
  - System.Xml.XDocument
  namespace: System.Xml.Linq
  summary: "\n<p>Serialize this streaming element to a <xref href=\"System.IO.TextWriter\" data-throw-if-not-resolved=\"false\"></xref>, optionally disabling formatting.</p>\n"
  syntax:
    content: public void Save(TextWriter textWriter, SaveOptions options)
    content.vb: Public Sub Save(textWriter As TextWriter, options As SaveOptions)
    parameters:
    - id: textWriter
      type: System.IO.TextWriter
      description: "\n<p>The <xref href=\"System.IO.TextWriter\" data-throw-if-not-resolved=\"false\"></xref> to output the XML to.</p>\n"
    - id: options
      type: System.Xml.Linq.SaveOptions
      description: "\n<p>A <xref href=\"System.Xml.Linq.SaveOptions\" data-throw-if-not-resolved=\"false\"></xref> that specifies formatting behavior.</p>\n"
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: System.Xml.Linq.XStreamingElement.Save(System.Xml.XmlWriter)
  commentId: M:System.Xml.Linq.XStreamingElement.Save(System.Xml.XmlWriter)
  id: Save(System.Xml.XmlWriter)
  parent: System.Xml.Linq.XStreamingElement
  langs:
  - csharp
  - vb
  name: Save(XmlWriter)
  nameWithType: XStreamingElement.Save(XmlWriter)
  fullName: System.Xml.Linq.XStreamingElement.Save(System.Xml.XmlWriter)
  type: Method
  source:
    remote:
      path: src/System.Xml.XDocument/ref/System.Xml.XDocument.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: Save
    path: src/System.Xml.XDocument/ref/System.Xml.XDocument.cs
    startLine: 445
  assemblies:
  - System.Xml.XDocument
  namespace: System.Xml.Linq
  summary: "\n<p>Serialize this streaming element to an <xref href=\"System.Xml.XmlWriter\" data-throw-if-not-resolved=\"false\"></xref>.</p>\n"
  syntax:
    content: public void Save(XmlWriter writer)
    content.vb: Public Sub Save(writer As XmlWriter)
    parameters:
    - id: writer
      type: System.Xml.XmlWriter
      description: "\n<p>A <xref href=\"System.Xml.XmlWriter\" data-throw-if-not-resolved=\"false\"></xref> that the <xref href=\"System.Xml.Linq.XElement\" data-throw-if-not-resolved=\"false\"></xref> will be written to.</p>\n"
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: System.Xml.Linq.XStreamingElement.ToString
  commentId: M:System.Xml.Linq.XStreamingElement.ToString
  id: ToString
  parent: System.Xml.Linq.XStreamingElement
  langs:
  - csharp
  - vb
  name: ToString()
  nameWithType: XStreamingElement.ToString()
  fullName: System.Xml.Linq.XStreamingElement.ToString()
  type: Method
  source:
    remote:
      path: src/System.Xml.XDocument/ref/System.Xml.XDocument.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: ToString
    path: src/System.Xml.XDocument/ref/System.Xml.XDocument.cs
    startLine: 446
  assemblies:
  - System.Xml.XDocument
  namespace: System.Xml.Linq
  summary: "\n<p>Returns the formatted (indented) XML for this streaming element.</p>\n"
  syntax:
    content: public override string ToString()
    content.vb: Public Overrides Function ToString As String
    return:
      type: System.String
      description: "\n<p>A <xref href=\"System.String\" data-throw-if-not-resolved=\"false\"></xref> containing the indented XML.</p>\n"
  overridden: System.Object.ToString
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
- uid: System.Xml.Linq.XStreamingElement.ToString(System.Xml.Linq.SaveOptions)
  commentId: M:System.Xml.Linq.XStreamingElement.ToString(System.Xml.Linq.SaveOptions)
  id: ToString(System.Xml.Linq.SaveOptions)
  parent: System.Xml.Linq.XStreamingElement
  langs:
  - csharp
  - vb
  name: ToString(SaveOptions)
  nameWithType: XStreamingElement.ToString(SaveOptions)
  fullName: System.Xml.Linq.XStreamingElement.ToString(System.Xml.Linq.SaveOptions)
  type: Method
  source:
    remote:
      path: src/System.Xml.XDocument/ref/System.Xml.XDocument.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: ToString
    path: src/System.Xml.XDocument/ref/System.Xml.XDocument.cs
    startLine: 447
  assemblies:
  - System.Xml.XDocument
  namespace: System.Xml.Linq
  summary: "\n<p>Returns the XML for this streaming element, optionally disabling formatting.</p>\n"
  syntax:
    content: public string ToString(SaveOptions options)
    content.vb: Public Function ToString(options As SaveOptions) As String
    parameters:
    - id: options
      type: System.Xml.Linq.SaveOptions
      description: "\n<p>A <xref href=\"System.Xml.Linq.SaveOptions\" data-throw-if-not-resolved=\"false\"></xref> that specifies formatting behavior.</p>\n"
    return:
      type: System.String
      description: "\n<p>A <xref href=\"System.String\" data-throw-if-not-resolved=\"false\"></xref> containing the XML.</p>\n"
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: System.Xml.Linq.XStreamingElement.WriteTo(System.Xml.XmlWriter)
  commentId: M:System.Xml.Linq.XStreamingElement.WriteTo(System.Xml.XmlWriter)
  id: WriteTo(System.Xml.XmlWriter)
  parent: System.Xml.Linq.XStreamingElement
  langs:
  - csharp
  - vb
  name: WriteTo(XmlWriter)
  nameWithType: XStreamingElement.WriteTo(XmlWriter)
  fullName: System.Xml.Linq.XStreamingElement.WriteTo(System.Xml.XmlWriter)
  type: Method
  source:
    remote:
      path: src/System.Xml.XDocument/ref/System.Xml.XDocument.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: WriteTo
    path: src/System.Xml.XDocument/ref/System.Xml.XDocument.cs
    startLine: 448
  assemblies:
  - System.Xml.XDocument
  namespace: System.Xml.Linq
  summary: "\n<p>Writes this streaming element to an <xref href=\"System.Xml.XmlWriter\" data-throw-if-not-resolved=\"false\"></xref>.</p>\n"
  syntax:
    content: public void WriteTo(XmlWriter writer)
    content.vb: Public Sub WriteTo(writer As XmlWriter)
    parameters:
    - id: writer
      type: System.Xml.XmlWriter
      description: "\n<p>An <xref href=\"System.Xml.XmlWriter\" data-throw-if-not-resolved=\"false\"></xref> into which this method will write.</p>\n"
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
references:
- uid: System.Xml.Linq
  commentId: N:System.Xml.Linq
  isExternal: false
  name: System.Xml.Linq
  nameWithType: System.Xml.Linq
  fullName: System.Xml.Linq
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: false
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: System.Xml.Linq.XName
  commentId: T:System.Xml.Linq.XName
  parent: System.Xml.Linq
  isExternal: false
  name: XName
  nameWithType: XName
  fullName: System.Xml.Linq.XName
- uid: System.Object[]
  name: Object[]
  nameWithType: Object[]
  fullName: System.Object[]
  nameWithType.vb: Object()
  fullname.vb: System.Object()
  name.vb: Object()
  spec.csharp:
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  spec.vb:
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
- uid: System.IO.Stream
  commentId: T:System.IO.Stream
  parent: System.IO
  isExternal: false
  name: Stream
  nameWithType: Stream
  fullName: System.IO.Stream
- uid: System.IO
  commentId: N:System.IO
  isExternal: false
  name: System.IO
  nameWithType: System.IO
  fullName: System.IO
- uid: System.Xml.Linq.SaveOptions
  commentId: T:System.Xml.Linq.SaveOptions
  parent: System.Xml.Linq
  isExternal: false
  name: SaveOptions
  nameWithType: SaveOptions
  fullName: System.Xml.Linq.SaveOptions
- uid: System.IO.TextWriter
  commentId: T:System.IO.TextWriter
  parent: System.IO
  isExternal: false
  name: TextWriter
  nameWithType: TextWriter
  fullName: System.IO.TextWriter
- uid: System.Xml.XmlWriter
  commentId: T:System.Xml.XmlWriter
  parent: System.Xml
  isExternal: false
  name: Xml.XmlWriter
  nameWithType: Xml.XmlWriter
  fullName: System.Xml.XmlWriter
- uid: System.Xml
  commentId: N:System.Xml
  isExternal: false
  name: System.Xml
  nameWithType: System.Xml
  fullName: System.Xml
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: false
  name: String
  nameWithType: String
  fullName: System.String
