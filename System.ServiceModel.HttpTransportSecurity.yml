items:
- uid: System.ServiceModel.HttpTransportSecurity
  commentId: T:System.ServiceModel.HttpTransportSecurity
  id: HttpTransportSecurity
  parent: System.ServiceModel
  children:
  - System.ServiceModel.HttpTransportSecurity.#ctor
  - System.ServiceModel.HttpTransportSecurity.ClientCredentialType
  langs:
  - csharp
  - vb
  name: HttpTransportSecurity
  fullName: System.ServiceModel.HttpTransportSecurity
  type: Class
  source:
    remote:
      path: src/System.Private.ServiceModel/src/System/ServiceModel/HttpTransportSecurity.cs
      branch: master
      repo: https://github.com/dotnet/wcf.git
    id: HttpTransportSecurity
    path: src/System.Private.ServiceModel/src/System/ServiceModel/HttpTransportSecurity.cs
    startLine: 11
  assemblies:
  - System.ServiceModel.Http
  namespace: System.ServiceModel
  summary: "\n<p>Represents the transport-level security settings for the <xref href=\"System.ServiceModel.WSHttpBinding\" data-throw-if-not-resolved=\"false\"></xref>.</p>\n"
  syntax:
    content: public sealed class HttpTransportSecurity
    content.vb: Public NotInheritable Class HttpTransportSecurity
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  modifiers.csharp:
  - public
  - sealed
  - class
  modifiers.vb:
  - Public
  - NotInheritable
  - Class
  nameWithType: HttpTransportSecurity
- uid: System.ServiceModel.HttpTransportSecurity.#ctor
  commentId: M:System.ServiceModel.HttpTransportSecurity.#ctor
  id: '#ctor'
  parent: System.ServiceModel.HttpTransportSecurity
  langs:
  - csharp
  - vb
  name: HttpTransportSecurity()
  fullName: System.ServiceModel.HttpTransportSecurity.HttpTransportSecurity()
  type: Constructor
  source:
    remote:
      path: src/System.Private.ServiceModel/src/System/ServiceModel/HttpTransportSecurity.cs
      branch: master
      repo: https://github.com/dotnet/wcf.git
    id: .ctor
    path: src/System.Private.ServiceModel/src/System/ServiceModel/HttpTransportSecurity.cs
    startLine: 20
  assemblies:
  - System.ServiceModel.Http
  namespace: System.ServiceModel
  summary: "\n<p>Initializes a new instance of the <xref href=\"System.ServiceModel.HttpTransportSecurity\" data-throw-if-not-resolved=\"false\"></xref> class.</p>\n"
  syntax:
    content: public HttpTransportSecurity()
    content.vb: Public Sub New
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  nameWithType: HttpTransportSecurity.HttpTransportSecurity()
- uid: System.ServiceModel.HttpTransportSecurity.ClientCredentialType
  commentId: P:System.ServiceModel.HttpTransportSecurity.ClientCredentialType
  id: ClientCredentialType
  parent: System.ServiceModel.HttpTransportSecurity
  langs:
  - csharp
  - vb
  name: ClientCredentialType
  fullName: System.ServiceModel.HttpTransportSecurity.ClientCredentialType
  type: Property
  source:
    remote:
      path: src/System.Private.ServiceModel/src/System/ServiceModel/HttpTransportSecurity.cs
      branch: master
      repo: https://github.com/dotnet/wcf.git
    id: ClientCredentialType
    path: src/System.Private.ServiceModel/src/System/ServiceModel/HttpTransportSecurity.cs
    startLine: 26
  assemblies:
  - System.ServiceModel.Http
  namespace: System.ServiceModel
  summary: "\n<p>Gets or sets the type of client credential to be used for authentication.</p>\n"
  syntax:
    content: public HttpClientCredentialType ClientCredentialType { get; set; }
    content.vb: Public Property ClientCredentialType As HttpClientCredentialType
    parameters: []
    return:
      type: System.ServiceModel.HttpClientCredentialType
      description: "\n<p>Returns the <xref href=\"System.ServiceModel.HttpClientCredentialType\" data-throw-if-not-resolved=\"false\"></xref>.</p>\n"
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "\n<p>Setting the property to an undefined value.</p>\n"
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
  nameWithType: HttpTransportSecurity.ClientCredentialType
references:
- uid: System.ServiceModel
  isExternal: false
  name: System.ServiceModel
  fullName: System.ServiceModel
  nameWithType: System.ServiceModel
  commentId: N:System.ServiceModel
- uid: System.Object
  parent: System
  isExternal: false
  name: Object
  fullName: System.Object
  nameWithType: Object
  commentId: T:System.Object
- uid: System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  nameWithType: Object.ToString()
  commentId: M:System.Object.ToString
- uid: System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
  nameWithType: Object.Equals(Object)
  commentId: M:System.Object.Equals(System.Object)
- uid: System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
  nameWithType: Object.Equals(Object, Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
  nameWithType: Object.ReferenceEquals(Object, Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
- uid: System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  nameWithType: Object.GetHashCode()
  commentId: M:System.Object.GetHashCode
- uid: System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  nameWithType: Object.GetType()
  commentId: M:System.Object.GetType
- uid: System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  nameWithType: Object.MemberwiseClone()
  commentId: M:System.Object.MemberwiseClone
- uid: System
  isExternal: false
  name: System
  fullName: System
  nameWithType: System
  commentId: N:System
- uid: System.ServiceModel.HttpClientCredentialType
  parent: System.ServiceModel
  isExternal: false
  name: HttpClientCredentialType
  fullName: System.ServiceModel.HttpClientCredentialType
  nameWithType: HttpClientCredentialType
  commentId: T:System.ServiceModel.HttpClientCredentialType
- uid: System.ArgumentOutOfRangeException
  isExternal: false
  name: ArgumentOutOfRangeException
  fullName: System.ArgumentOutOfRangeException
  nameWithType: ArgumentOutOfRangeException
  commentId: T:System.ArgumentOutOfRangeException
