### YamlMime:ManagedReference
items:
- uid: System.Security.Cryptography.Pkcs.EnvelopedCms
  commentId: T:System.Security.Cryptography.Pkcs.EnvelopedCms
  id: EnvelopedCms
  parent: System.Security.Cryptography.Pkcs
  children:
  - System.Security.Cryptography.Pkcs.EnvelopedCms.#ctor
  - System.Security.Cryptography.Pkcs.EnvelopedCms.#ctor(System.Security.Cryptography.Pkcs.ContentInfo)
  - System.Security.Cryptography.Pkcs.EnvelopedCms.#ctor(System.Security.Cryptography.Pkcs.ContentInfo,System.Security.Cryptography.Pkcs.AlgorithmIdentifier)
  - System.Security.Cryptography.Pkcs.EnvelopedCms.Certificates
  - System.Security.Cryptography.Pkcs.EnvelopedCms.ContentEncryptionAlgorithm
  - System.Security.Cryptography.Pkcs.EnvelopedCms.ContentInfo
  - System.Security.Cryptography.Pkcs.EnvelopedCms.Decode(System.Byte[])
  - System.Security.Cryptography.Pkcs.EnvelopedCms.Decrypt
  - System.Security.Cryptography.Pkcs.EnvelopedCms.Decrypt(System.Security.Cryptography.Pkcs.RecipientInfo)
  - System.Security.Cryptography.Pkcs.EnvelopedCms.Decrypt(System.Security.Cryptography.Pkcs.RecipientInfo,System.Security.Cryptography.X509Certificates.X509Certificate2Collection)
  - System.Security.Cryptography.Pkcs.EnvelopedCms.Decrypt(System.Security.Cryptography.X509Certificates.X509Certificate2Collection)
  - System.Security.Cryptography.Pkcs.EnvelopedCms.Encode
  - System.Security.Cryptography.Pkcs.EnvelopedCms.Encrypt(System.Security.Cryptography.Pkcs.CmsRecipient)
  - System.Security.Cryptography.Pkcs.EnvelopedCms.Encrypt(System.Security.Cryptography.Pkcs.CmsRecipientCollection)
  - System.Security.Cryptography.Pkcs.EnvelopedCms.RecipientInfos
  - System.Security.Cryptography.Pkcs.EnvelopedCms.UnprotectedAttributes
  - System.Security.Cryptography.Pkcs.EnvelopedCms.Version
  langs:
  - csharp
  - vb
  name: EnvelopedCms
  nameWithType: EnvelopedCms
  fullName: System.Security.Cryptography.Pkcs.EnvelopedCms
  type: Class
  source:
    remote:
      path: src/System.Security.Cryptography.Pkcs/ref/System.Security.Cryptography.Pkcs.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: EnvelopedCms
    path: src/System.Security.Cryptography.Pkcs/ref/System.Security.Cryptography.Pkcs.cs
    startLine: 90
  assemblies:
  - System.Security.Cryptography.Pkcs
  namespace: System.Security.Cryptography.Pkcs
  summary: "\n<p>The <xref href=\"System.Security.Cryptography.Pkcs.EnvelopedCms\" data-throw-if-not-resolved=\"false\"></xref> class represents a CMS/PKCS #7 structure for enveloped data.</p>\n"
  syntax:
    content: public sealed class EnvelopedCms
    content.vb: Public NotInheritable Class EnvelopedCms
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  modifiers.csharp:
  - public
  - sealed
  - class
  modifiers.vb:
  - Public
  - NotInheritable
  - Class
- uid: System.Security.Cryptography.Pkcs.EnvelopedCms.#ctor
  commentId: M:System.Security.Cryptography.Pkcs.EnvelopedCms.#ctor
  id: '#ctor'
  parent: System.Security.Cryptography.Pkcs.EnvelopedCms
  langs:
  - csharp
  - vb
  name: EnvelopedCms()
  nameWithType: EnvelopedCms.EnvelopedCms()
  fullName: System.Security.Cryptography.Pkcs.EnvelopedCms.EnvelopedCms()
  type: Constructor
  source:
    remote:
      path: src/System.Security.Cryptography.Pkcs/ref/System.Security.Cryptography.Pkcs.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: .ctor
    path: src/System.Security.Cryptography.Pkcs/ref/System.Security.Cryptography.Pkcs.cs
    startLine: 92
  assemblies:
  - System.Security.Cryptography.Pkcs
  namespace: System.Security.Cryptography.Pkcs
  summary: "\n<p>The <xref href=\"System.Security.Cryptography.Pkcs.EnvelopedCms.#ctor\" data-throw-if-not-resolved=\"false\"></xref> constructor creates an instance of the <xref href=\"System.Security.Cryptography.Pkcs.EnvelopedCms\" data-throw-if-not-resolved=\"false\"></xref> class.</p>\n"
  syntax:
    content: public EnvelopedCms()
    content.vb: Public Sub New
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "\n<p>A null reference was passed to a method that does not accept it as a valid argument.</p>\n"
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: System.Security.Cryptography.Pkcs.EnvelopedCms.#ctor(System.Security.Cryptography.Pkcs.ContentInfo)
  commentId: M:System.Security.Cryptography.Pkcs.EnvelopedCms.#ctor(System.Security.Cryptography.Pkcs.ContentInfo)
  id: '#ctor(System.Security.Cryptography.Pkcs.ContentInfo)'
  parent: System.Security.Cryptography.Pkcs.EnvelopedCms
  langs:
  - csharp
  - vb
  name: EnvelopedCms(ContentInfo)
  nameWithType: EnvelopedCms.EnvelopedCms(ContentInfo)
  fullName: System.Security.Cryptography.Pkcs.EnvelopedCms.EnvelopedCms(System.Security.Cryptography.Pkcs.ContentInfo)
  type: Constructor
  source:
    remote:
      path: src/System.Security.Cryptography.Pkcs/ref/System.Security.Cryptography.Pkcs.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: .ctor
    path: src/System.Security.Cryptography.Pkcs/ref/System.Security.Cryptography.Pkcs.cs
    startLine: 93
  assemblies:
  - System.Security.Cryptography.Pkcs
  namespace: System.Security.Cryptography.Pkcs
  summary: "\n<p>The <xref href=\"System.Security.Cryptography.Pkcs.EnvelopedCms.#ctor(System.Security.Cryptography.Pkcs.ContentInfo)\" data-throw-if-not-resolved=\"false\"></xref> constructor creates an instance of the <xref href=\"System.Security.Cryptography.Pkcs.EnvelopedCms\" data-throw-if-not-resolved=\"false\"></xref> class by using the specified content information as the inner content type.</p>\n"
  syntax:
    content: public EnvelopedCms(ContentInfo contentInfo)
    content.vb: Public Sub New(contentInfo As ContentInfo)
    parameters:
    - id: contentInfo
      type: System.Security.Cryptography.Pkcs.ContentInfo
      description: "\n<p>An instance of the <xref href=\"System.Security.Cryptography.Pkcs.EnvelopedCms.ContentInfo\" data-throw-if-not-resolved=\"false\"></xref> class that represents the content and its type.</p>\n"
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "\n<p>A null reference was passed to a method that does not accept it as a valid argument.</p>\n"
  seealso:
  - linkId: System.Security.Cryptography.Pkcs.ContentInfo
    commentId: T:System.Security.Cryptography.Pkcs.ContentInfo
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: System.Security.Cryptography.Pkcs.EnvelopedCms.#ctor(System.Security.Cryptography.Pkcs.ContentInfo,System.Security.Cryptography.Pkcs.AlgorithmIdentifier)
  commentId: M:System.Security.Cryptography.Pkcs.EnvelopedCms.#ctor(System.Security.Cryptography.Pkcs.ContentInfo,System.Security.Cryptography.Pkcs.AlgorithmIdentifier)
  id: '#ctor(System.Security.Cryptography.Pkcs.ContentInfo,System.Security.Cryptography.Pkcs.AlgorithmIdentifier)'
  parent: System.Security.Cryptography.Pkcs.EnvelopedCms
  langs:
  - csharp
  - vb
  name: EnvelopedCms(ContentInfo, AlgorithmIdentifier)
  nameWithType: EnvelopedCms.EnvelopedCms(ContentInfo, AlgorithmIdentifier)
  fullName: System.Security.Cryptography.Pkcs.EnvelopedCms.EnvelopedCms(System.Security.Cryptography.Pkcs.ContentInfo, System.Security.Cryptography.Pkcs.AlgorithmIdentifier)
  type: Constructor
  source:
    remote:
      path: src/System.Security.Cryptography.Pkcs/ref/System.Security.Cryptography.Pkcs.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: .ctor
    path: src/System.Security.Cryptography.Pkcs/ref/System.Security.Cryptography.Pkcs.cs
    startLine: 94
  assemblies:
  - System.Security.Cryptography.Pkcs
  namespace: System.Security.Cryptography.Pkcs
  summary: "\n<p>The <xref href=\"System.Security.Cryptography.Pkcs.EnvelopedCms.#ctor(System.Security.Cryptography.Pkcs.ContentInfo,System.Security.Cryptography.Pkcs.AlgorithmIdentifier)\" data-throw-if-not-resolved=\"false\"></xref> constructor creates an instance of the <xref href=\"System.Security.Cryptography.Pkcs.EnvelopedCms\" data-throw-if-not-resolved=\"false\"></xref> class by using the specified content information and encryption algorithm. The specified content information is to be used as the inner content type.</p>\n"
  syntax:
    content: public EnvelopedCms(ContentInfo contentInfo, AlgorithmIdentifier encryptionAlgorithm)
    content.vb: Public Sub New(contentInfo As ContentInfo, encryptionAlgorithm As AlgorithmIdentifier)
    parameters:
    - id: contentInfo
      type: System.Security.Cryptography.Pkcs.ContentInfo
      description: "\n<p>A  <xref href=\"System.Security.Cryptography.Pkcs.ContentInfo\" data-throw-if-not-resolved=\"false\"></xref> object that represents the content and its type.</p>\n"
    - id: encryptionAlgorithm
      type: System.Security.Cryptography.Pkcs.AlgorithmIdentifier
      description: "\n<p>An <xref href=\"System.Security.Cryptography.Pkcs.AlgorithmIdentifier\" data-throw-if-not-resolved=\"false\"></xref> object that specifies the encryption algorithm.</p>\n"
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "\n<p>A null reference was passed to a method that does not accept it as a valid argument.</p>\n"
  seealso:
  - linkId: System.Security.Cryptography.Pkcs.AlgorithmIdentifier
    commentId: T:System.Security.Cryptography.Pkcs.AlgorithmIdentifier
  - linkId: System.Security.Cryptography.Pkcs.ContentInfo
    commentId: T:System.Security.Cryptography.Pkcs.ContentInfo
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: System.Security.Cryptography.Pkcs.EnvelopedCms.Certificates
  commentId: P:System.Security.Cryptography.Pkcs.EnvelopedCms.Certificates
  id: Certificates
  parent: System.Security.Cryptography.Pkcs.EnvelopedCms
  langs:
  - csharp
  - vb
  name: Certificates
  nameWithType: EnvelopedCms.Certificates
  fullName: System.Security.Cryptography.Pkcs.EnvelopedCms.Certificates
  type: Property
  source:
    remote:
      path: src/System.Security.Cryptography.Pkcs/ref/System.Security.Cryptography.Pkcs.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: Certificates
    path: src/System.Security.Cryptography.Pkcs/ref/System.Security.Cryptography.Pkcs.cs
    startLine: 95
  assemblies:
  - System.Security.Cryptography.Pkcs
  namespace: System.Security.Cryptography.Pkcs
  summary: "\n<p>The <xref href=\"System.Security.Cryptography.Pkcs.EnvelopedCms.Certificates\" data-throw-if-not-resolved=\"false\"></xref> property retrieves the set of certificates associated with the enveloped CMS/PKCS #7 message.</p>\n"
  syntax:
    content: >-
      public X509Certificate2Collection Certificates

      {
          [CompilerGenerated]
          get;
      }
    content.vb: Public ReadOnly Property Certificates As X509Certificate2Collection
    parameters: []
    return:
      type: System.Security.Cryptography.X509Certificates.X509Certificate2Collection
      description: "\n<p>An <xref href=\"System.Security.Cryptography.X509Certificates.X509Certificate2Collection\" data-throw-if-not-resolved=\"false\"></xref> collection that represents the X.509 certificates used with the enveloped CMS/PKCS #7 message. If no certificates exist, the property value is an empty collection.</p>\n"
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: System.Security.Cryptography.Pkcs.EnvelopedCms.ContentEncryptionAlgorithm
  commentId: P:System.Security.Cryptography.Pkcs.EnvelopedCms.ContentEncryptionAlgorithm
  id: ContentEncryptionAlgorithm
  parent: System.Security.Cryptography.Pkcs.EnvelopedCms
  langs:
  - csharp
  - vb
  name: ContentEncryptionAlgorithm
  nameWithType: EnvelopedCms.ContentEncryptionAlgorithm
  fullName: System.Security.Cryptography.Pkcs.EnvelopedCms.ContentEncryptionAlgorithm
  type: Property
  source:
    remote:
      path: src/System.Security.Cryptography.Pkcs/ref/System.Security.Cryptography.Pkcs.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: ContentEncryptionAlgorithm
    path: src/System.Security.Cryptography.Pkcs/ref/System.Security.Cryptography.Pkcs.cs
    startLine: 96
  assemblies:
  - System.Security.Cryptography.Pkcs
  namespace: System.Security.Cryptography.Pkcs
  summary: "\n<p>The <xref href=\"System.Security.Cryptography.Pkcs.EnvelopedCms.ContentEncryptionAlgorithm\" data-throw-if-not-resolved=\"false\"></xref> property retrieves the identifier of the algorithm used to encrypt the content.</p>\n"
  syntax:
    content: >-
      public AlgorithmIdentifier ContentEncryptionAlgorithm

      {
          [CompilerGenerated]
          get;
      }
    content.vb: Public ReadOnly Property ContentEncryptionAlgorithm As AlgorithmIdentifier
    parameters: []
    return:
      type: System.Security.Cryptography.Pkcs.AlgorithmIdentifier
      description: "\n<p>An <xref href=\"System.Security.Cryptography.Pkcs.AlgorithmIdentifier\" data-throw-if-not-resolved=\"false\"></xref> object that represents the algorithm identifier.</p>\n"
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: System.Security.Cryptography.Pkcs.EnvelopedCms.ContentInfo
  commentId: P:System.Security.Cryptography.Pkcs.EnvelopedCms.ContentInfo
  id: ContentInfo
  parent: System.Security.Cryptography.Pkcs.EnvelopedCms
  langs:
  - csharp
  - vb
  name: ContentInfo
  nameWithType: EnvelopedCms.ContentInfo
  fullName: System.Security.Cryptography.Pkcs.EnvelopedCms.ContentInfo
  type: Property
  source:
    remote:
      path: src/System.Security.Cryptography.Pkcs/ref/System.Security.Cryptography.Pkcs.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: ContentInfo
    path: src/System.Security.Cryptography.Pkcs/ref/System.Security.Cryptography.Pkcs.cs
    startLine: 97
  assemblies:
  - System.Security.Cryptography.Pkcs
  namespace: System.Security.Cryptography.Pkcs
  summary: "\n<p>The <xref href=\"System.Security.Cryptography.Pkcs.EnvelopedCms.ContentInfo\" data-throw-if-not-resolved=\"false\"></xref> property retrieves the inner content information for the enveloped CMS/PKCS #7 message.</p>\n"
  syntax:
    content: >-
      public ContentInfo ContentInfo

      {
          [CompilerGenerated]
          get;
      }
    content.vb: Public ReadOnly Property ContentInfo As ContentInfo
    parameters: []
    return:
      type: System.Security.Cryptography.Pkcs.ContentInfo
      description: "\n<p>A <xref href=\"System.Security.Cryptography.Pkcs.ContentInfo\" data-throw-if-not-resolved=\"false\"></xref> object that represents the inner content information from the enveloped CMS/PKCS #7 message.</p>\n"
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: System.Security.Cryptography.Pkcs.EnvelopedCms.RecipientInfos
  commentId: P:System.Security.Cryptography.Pkcs.EnvelopedCms.RecipientInfos
  id: RecipientInfos
  parent: System.Security.Cryptography.Pkcs.EnvelopedCms
  langs:
  - csharp
  - vb
  name: RecipientInfos
  nameWithType: EnvelopedCms.RecipientInfos
  fullName: System.Security.Cryptography.Pkcs.EnvelopedCms.RecipientInfos
  type: Property
  source:
    remote:
      path: src/System.Security.Cryptography.Pkcs/ref/System.Security.Cryptography.Pkcs.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: RecipientInfos
    path: src/System.Security.Cryptography.Pkcs/ref/System.Security.Cryptography.Pkcs.cs
    startLine: 98
  assemblies:
  - System.Security.Cryptography.Pkcs
  namespace: System.Security.Cryptography.Pkcs
  summary: "\n<p>The <xref href=\"System.Security.Cryptography.Pkcs.EnvelopedCms.RecipientInfos\" data-throw-if-not-resolved=\"false\"></xref> property retrieves the recipient information associated with the enveloped CMS/PKCS #7 message.</p>\n"
  syntax:
    content: public RecipientInfoCollection RecipientInfos { get; }
    content.vb: Public ReadOnly Property RecipientInfos As RecipientInfoCollection
    parameters: []
    return:
      type: System.Security.Cryptography.Pkcs.RecipientInfoCollection
      description: "\n<p>A <xref href=\"System.Security.Cryptography.Pkcs.RecipientInfoCollection\" data-throw-if-not-resolved=\"false\"></xref> collection that represents the recipient information. If no recipients exist, the property value is an empty collection.</p>\n"
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: System.Security.Cryptography.Pkcs.EnvelopedCms.UnprotectedAttributes
  commentId: P:System.Security.Cryptography.Pkcs.EnvelopedCms.UnprotectedAttributes
  id: UnprotectedAttributes
  parent: System.Security.Cryptography.Pkcs.EnvelopedCms
  langs:
  - csharp
  - vb
  name: UnprotectedAttributes
  nameWithType: EnvelopedCms.UnprotectedAttributes
  fullName: System.Security.Cryptography.Pkcs.EnvelopedCms.UnprotectedAttributes
  type: Property
  source:
    remote:
      path: src/System.Security.Cryptography.Pkcs/ref/System.Security.Cryptography.Pkcs.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: UnprotectedAttributes
    path: src/System.Security.Cryptography.Pkcs/ref/System.Security.Cryptography.Pkcs.cs
    startLine: 99
  assemblies:
  - System.Security.Cryptography.Pkcs
  namespace: System.Security.Cryptography.Pkcs
  summary: "\n<p>The <xref href=\"System.Security.Cryptography.Pkcs.EnvelopedCms.UnprotectedAttributes\" data-throw-if-not-resolved=\"false\"></xref> property retrieves the unprotected (unencrypted) attributes associated with the enveloped CMS/PKCS #7 message. Unprotected attributes are not encrypted, and so do not have data confidentiality within an <xref href=\"System.Security.Cryptography.Pkcs.EnvelopedCms\" data-throw-if-not-resolved=\"false\"></xref> object.</p>\n"
  syntax:
    content: >-
      public CryptographicAttributeObjectCollection UnprotectedAttributes

      {
          [CompilerGenerated]
          get;
      }
    content.vb: Public ReadOnly Property UnprotectedAttributes As CryptographicAttributeObjectCollection
    parameters: []
    return:
      type: System.Security.Cryptography.CryptographicAttributeObjectCollection
      description: "\n<p>A <xref href=\"System.Security.Cryptography.CryptographicAttributeObjectCollection\" data-throw-if-not-resolved=\"false\"></xref> collection that represents the unprotected attributes. If no unprotected attributes exist, the property value is an empty collection.</p>\n"
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: System.Security.Cryptography.Pkcs.EnvelopedCms.Version
  commentId: P:System.Security.Cryptography.Pkcs.EnvelopedCms.Version
  id: Version
  parent: System.Security.Cryptography.Pkcs.EnvelopedCms
  langs:
  - csharp
  - vb
  name: Version
  nameWithType: EnvelopedCms.Version
  fullName: System.Security.Cryptography.Pkcs.EnvelopedCms.Version
  type: Property
  source:
    remote:
      path: src/System.Security.Cryptography.Pkcs/ref/System.Security.Cryptography.Pkcs.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: Version
    path: src/System.Security.Cryptography.Pkcs/ref/System.Security.Cryptography.Pkcs.cs
    startLine: 100
  assemblies:
  - System.Security.Cryptography.Pkcs
  namespace: System.Security.Cryptography.Pkcs
  summary: "\n<p>The <xref href=\"System.Security.Cryptography.Pkcs.EnvelopedCms.Version\" data-throw-if-not-resolved=\"false\"></xref> property retrieves the version of the enveloped CMS/PKCS #7 message.  </p>\n"
  syntax:
    content: >-
      public int Version

      {
          [CompilerGenerated]
          get;
      }
    content.vb: Public ReadOnly Property Version As Integer
    parameters: []
    return:
      type: System.Int32
      description: "\n<p>An int value that represents the version of the enveloped CMS/PKCS #7 message.</p>\n"
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: System.Security.Cryptography.Pkcs.EnvelopedCms.Decode(System.Byte[])
  commentId: M:System.Security.Cryptography.Pkcs.EnvelopedCms.Decode(System.Byte[])
  id: Decode(System.Byte[])
  parent: System.Security.Cryptography.Pkcs.EnvelopedCms
  langs:
  - csharp
  - vb
  name: Decode(Byte[])
  nameWithType: EnvelopedCms.Decode(Byte[])
  fullName: System.Security.Cryptography.Pkcs.EnvelopedCms.Decode(System.Byte[])
  type: Method
  source:
    remote:
      path: src/System.Security.Cryptography.Pkcs/ref/System.Security.Cryptography.Pkcs.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: Decode
    path: src/System.Security.Cryptography.Pkcs/ref/System.Security.Cryptography.Pkcs.cs
    startLine: 101
  assemblies:
  - System.Security.Cryptography.Pkcs
  namespace: System.Security.Cryptography.Pkcs
  summary: "\n<p>The <xref href=\"System.Security.Cryptography.Pkcs.EnvelopedCms.Decode(System.Byte[])\" data-throw-if-not-resolved=\"false\"></xref> method decodes the specified enveloped CMS/PKCS #7 message and resets all member variables in the <xref href=\"System.Security.Cryptography.Pkcs.EnvelopedCms\" data-throw-if-not-resolved=\"false\"></xref> object.</p>\n"
  syntax:
    content: public void Decode(byte[] encodedMessage)
    content.vb: Public Sub Decode(encodedMessage As Byte())
    parameters:
    - id: encodedMessage
      type: System.Byte[]
      description: "\n<p>An array of byte values that represent the information to be decoded.</p>\n"
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "\n<p>A null reference was passed to a method that does not accept it as a valid argument. </p>\n"
  seealso:
  - linkId: System.Security.Cryptography.Pkcs.EnvelopedCms.Encode
    commentId: M:System.Security.Cryptography.Pkcs.EnvelopedCms.Encode
  nameWithType.vb: EnvelopedCms.Decode(Byte())
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: System.Security.Cryptography.Pkcs.EnvelopedCms.Decode(System.Byte())
  name.vb: Decode(Byte())
- uid: System.Security.Cryptography.Pkcs.EnvelopedCms.Decrypt
  commentId: M:System.Security.Cryptography.Pkcs.EnvelopedCms.Decrypt
  id: Decrypt
  parent: System.Security.Cryptography.Pkcs.EnvelopedCms
  langs:
  - csharp
  - vb
  name: Decrypt()
  nameWithType: EnvelopedCms.Decrypt()
  fullName: System.Security.Cryptography.Pkcs.EnvelopedCms.Decrypt()
  type: Method
  source:
    remote:
      path: src/System.Security.Cryptography.Pkcs/ref/System.Security.Cryptography.Pkcs.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: Decrypt
    path: src/System.Security.Cryptography.Pkcs/ref/System.Security.Cryptography.Pkcs.cs
    startLine: 102
  assemblies:
  - System.Security.Cryptography.Pkcs
  namespace: System.Security.Cryptography.Pkcs
  summary: "\n<p>The <xref href=\"System.Security.Cryptography.Pkcs.EnvelopedCms.Decrypt\" data-throw-if-not-resolved=\"false\"></xref> method decrypts the contents of the decoded enveloped CMS/PKCS #7 message. The <xref href=\"System.Security.Cryptography.Pkcs.EnvelopedCms.Decrypt\" data-throw-if-not-resolved=\"false\"></xref> method searches the current user and computer My stores for the appropriate certificate and private key.</p>\n"
  syntax:
    content: public void Decrypt()
    content.vb: Public Sub Decrypt
  exceptions:
  - type: System.Security.Cryptography.CryptographicException
    commentId: T:System.Security.Cryptography.CryptographicException
    description: "\n<p>A cryptographic operation could not be completed.</p>\n"
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "\n<p>A method call was invalid for the object's current state.</p>\n"
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: System.Security.Cryptography.Pkcs.EnvelopedCms.Decrypt(System.Security.Cryptography.Pkcs.RecipientInfo)
  commentId: M:System.Security.Cryptography.Pkcs.EnvelopedCms.Decrypt(System.Security.Cryptography.Pkcs.RecipientInfo)
  id: Decrypt(System.Security.Cryptography.Pkcs.RecipientInfo)
  parent: System.Security.Cryptography.Pkcs.EnvelopedCms
  langs:
  - csharp
  - vb
  name: Decrypt(RecipientInfo)
  nameWithType: EnvelopedCms.Decrypt(RecipientInfo)
  fullName: System.Security.Cryptography.Pkcs.EnvelopedCms.Decrypt(System.Security.Cryptography.Pkcs.RecipientInfo)
  type: Method
  source:
    remote:
      path: src/System.Security.Cryptography.Pkcs/ref/System.Security.Cryptography.Pkcs.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: Decrypt
    path: src/System.Security.Cryptography.Pkcs/ref/System.Security.Cryptography.Pkcs.cs
    startLine: 103
  assemblies:
  - System.Security.Cryptography.Pkcs
  namespace: System.Security.Cryptography.Pkcs
  summary: "\n<p>The <xref href=\"System.Security.Cryptography.Pkcs.EnvelopedCms.Decrypt(System.Security.Cryptography.Pkcs.RecipientInfo)\" data-throw-if-not-resolved=\"false\"></xref> method decrypts the contents of the decoded enveloped CMS/PKCS #7 message by using the private key associated with the certificate identified by the specified recipient information.</p>\n"
  syntax:
    content: public void Decrypt(RecipientInfo recipientInfo)
    content.vb: Public Sub Decrypt(recipientInfo As RecipientInfo)
    parameters:
    - id: recipientInfo
      type: System.Security.Cryptography.Pkcs.RecipientInfo
      description: "\n<p>A <xref href=\"System.Security.Cryptography.Pkcs.RecipientInfo\" data-throw-if-not-resolved=\"false\"></xref> object that represents the recipient information that identifies the certificate associated with the private key to use for the decryption.</p>\n"
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "\n<p>A null reference was passed to a method that does not accept it as a valid argument. </p>\n"
  - type: System.Security.Cryptography.CryptographicException
    commentId: T:System.Security.Cryptography.CryptographicException
    description: "\n<p>A cryptographic operation could not be completed.</p>\n"
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "\n<p>A method call was invalid for the object's current state.</p>\n"
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: System.Security.Cryptography.Pkcs.EnvelopedCms.Decrypt(System.Security.Cryptography.Pkcs.RecipientInfo,System.Security.Cryptography.X509Certificates.X509Certificate2Collection)
  commentId: M:System.Security.Cryptography.Pkcs.EnvelopedCms.Decrypt(System.Security.Cryptography.Pkcs.RecipientInfo,System.Security.Cryptography.X509Certificates.X509Certificate2Collection)
  id: Decrypt(System.Security.Cryptography.Pkcs.RecipientInfo,System.Security.Cryptography.X509Certificates.X509Certificate2Collection)
  parent: System.Security.Cryptography.Pkcs.EnvelopedCms
  langs:
  - csharp
  - vb
  name: Decrypt(RecipientInfo, X509Certificate2Collection)
  nameWithType: EnvelopedCms.Decrypt(RecipientInfo, X509Certificate2Collection)
  fullName: System.Security.Cryptography.Pkcs.EnvelopedCms.Decrypt(System.Security.Cryptography.Pkcs.RecipientInfo, System.Security.Cryptography.X509Certificates.X509Certificate2Collection)
  type: Method
  source:
    remote:
      path: src/System.Security.Cryptography.Pkcs/ref/System.Security.Cryptography.Pkcs.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: Decrypt
    path: src/System.Security.Cryptography.Pkcs/ref/System.Security.Cryptography.Pkcs.cs
    startLine: 104
  assemblies:
  - System.Security.Cryptography.Pkcs
  namespace: System.Security.Cryptography.Pkcs
  summary: "\n<p>The <xref href=\"System.Security.Cryptography.Pkcs.EnvelopedCms.Decrypt(System.Security.Cryptography.Pkcs.RecipientInfo,System.Security.Cryptography.X509Certificates.X509Certificate2Collection)\" data-throw-if-not-resolved=\"false\"></xref> method decrypts the contents of the decoded enveloped CMS/PKCS #7 message by using the private key associated with the certificate identified by the specified recipient information and by using the specified certificate collection.  The <xref href=\"System.Security.Cryptography.Pkcs.EnvelopedCms.Decrypt(System.Security.Cryptography.Pkcs.RecipientInfo,System.Security.Cryptography.X509Certificates.X509Certificate2Collection)\" data-throw-if-not-resolved=\"false\"></xref> method searches the specified certificate collection and the My certificate store for the proper certificate to use for the decryption.</p>\n"
  syntax:
    content: public void Decrypt(RecipientInfo recipientInfo, X509Certificate2Collection extraStore)
    content.vb: Public Sub Decrypt(recipientInfo As RecipientInfo, extraStore As X509Certificate2Collection)
    parameters:
    - id: recipientInfo
      type: System.Security.Cryptography.Pkcs.RecipientInfo
      description: "\n<p>A <xref href=\"System.Security.Cryptography.Pkcs.RecipientInfo\" data-throw-if-not-resolved=\"false\"></xref> object that represents the recipient information to use for the decryption.</p>\n"
    - id: extraStore
      type: System.Security.Cryptography.X509Certificates.X509Certificate2Collection
      description: "\n<p>An <xref href=\"System.Security.Cryptography.X509Certificates.X509Certificate2Collection\" data-throw-if-not-resolved=\"false\"></xref> collection that represents additional certificates to use for the decryption. The <xref href=\"System.Security.Cryptography.Pkcs.EnvelopedCms.Decrypt(System.Security.Cryptography.Pkcs.RecipientInfo,System.Security.Cryptography.X509Certificates.X509Certificate2Collection)\" data-throw-if-not-resolved=\"false\"></xref> method searches this certificate collection and the My certificate store for the proper certificate to use for the decryption.</p>\n"
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "\n<p>A null reference was passed to a method that does not accept it as a valid argument.</p>\n"
  - type: System.Security.Cryptography.CryptographicException
    commentId: T:System.Security.Cryptography.CryptographicException
    description: "\n<p>A cryptographic operation could not be completed.</p>\n"
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "\n<p>A method call was invalid for the object's current state.</p>\n"
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: System.Security.Cryptography.Pkcs.EnvelopedCms.Decrypt(System.Security.Cryptography.X509Certificates.X509Certificate2Collection)
  commentId: M:System.Security.Cryptography.Pkcs.EnvelopedCms.Decrypt(System.Security.Cryptography.X509Certificates.X509Certificate2Collection)
  id: Decrypt(System.Security.Cryptography.X509Certificates.X509Certificate2Collection)
  parent: System.Security.Cryptography.Pkcs.EnvelopedCms
  langs:
  - csharp
  - vb
  name: Decrypt(X509Certificate2Collection)
  nameWithType: EnvelopedCms.Decrypt(X509Certificate2Collection)
  fullName: System.Security.Cryptography.Pkcs.EnvelopedCms.Decrypt(System.Security.Cryptography.X509Certificates.X509Certificate2Collection)
  type: Method
  source:
    remote:
      path: src/System.Security.Cryptography.Pkcs/ref/System.Security.Cryptography.Pkcs.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: Decrypt
    path: src/System.Security.Cryptography.Pkcs/ref/System.Security.Cryptography.Pkcs.cs
    startLine: 105
  assemblies:
  - System.Security.Cryptography.Pkcs
  namespace: System.Security.Cryptography.Pkcs
  summary: "\n<p>The <xref href=\"System.Security.Cryptography.Pkcs.EnvelopedCms.Decrypt(System.Security.Cryptography.X509Certificates.X509Certificate2Collection)\" data-throw-if-not-resolved=\"false\"></xref> method decrypts the contents of the decoded enveloped CMS/PKCS #7 message by using the specified certificate collection. The <xref href=\"System.Security.Cryptography.Pkcs.EnvelopedCms.Decrypt(System.Security.Cryptography.X509Certificates.X509Certificate2Collection)\" data-throw-if-not-resolved=\"false\"></xref> method searches the specified certificate collection and the My certificate store for the proper certificate to use for the decryption.</p>\n"
  syntax:
    content: public void Decrypt(X509Certificate2Collection extraStore)
    content.vb: Public Sub Decrypt(extraStore As X509Certificate2Collection)
    parameters:
    - id: extraStore
      type: System.Security.Cryptography.X509Certificates.X509Certificate2Collection
      description: "\n<p>An <xref href=\"System.Security.Cryptography.X509Certificates.X509Certificate2Collection\" data-throw-if-not-resolved=\"false\"></xref> collection that represents additional certificates to use for the decryption. The <xref href=\"System.Security.Cryptography.Pkcs.EnvelopedCms.Decrypt(System.Security.Cryptography.X509Certificates.X509Certificate2Collection)\" data-throw-if-not-resolved=\"false\"></xref> method searches this certificate collection and the My certificate store for the proper certificate to use for the decryption.</p>\n"
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "\n<p>A null reference was passed to a method that does not accept it as a valid argument.</p>\n"
  - type: System.Security.Cryptography.CryptographicException
    commentId: T:System.Security.Cryptography.CryptographicException
    description: "\n<p>A cryptographic operation could not be completed.</p>\n"
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "\n<p>A method call was invalid for the object's current state.</p>\n"
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: System.Security.Cryptography.Pkcs.EnvelopedCms.Encode
  commentId: M:System.Security.Cryptography.Pkcs.EnvelopedCms.Encode
  id: Encode
  parent: System.Security.Cryptography.Pkcs.EnvelopedCms
  langs:
  - csharp
  - vb
  name: Encode()
  nameWithType: EnvelopedCms.Encode()
  fullName: System.Security.Cryptography.Pkcs.EnvelopedCms.Encode()
  type: Method
  source:
    remote:
      path: src/System.Security.Cryptography.Pkcs/ref/System.Security.Cryptography.Pkcs.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: Encode
    path: src/System.Security.Cryptography.Pkcs/ref/System.Security.Cryptography.Pkcs.cs
    startLine: 106
  assemblies:
  - System.Security.Cryptography.Pkcs
  namespace: System.Security.Cryptography.Pkcs
  summary: "\n<p>The <xref href=\"System.Security.Cryptography.Pkcs.EnvelopedCms.Encode\" data-throw-if-not-resolved=\"false\"></xref> method encodes the contents of the enveloped CMS/PKCS #7 message and returns it as an array of byte values. Encryption must be done before encoding.</p>\n"
  syntax:
    content: public byte[] Encode()
    content.vb: Public Function Encode As Byte()
    return:
      type: System.Byte[]
      description: "\n<p>If the method succeeds, the method returns an array of byte values that represent the encoded information.</p>\n<p>If the method fails, it throws an exception.</p>\n"
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "\n<p>A method call was invalid for the object's current state.</p>\n"
  seealso:
  - linkId: System.Security.Cryptography.Pkcs.EnvelopedCms.Decode(System.Byte[])
    commentId: M:System.Security.Cryptography.Pkcs.EnvelopedCms.Decode(System.Byte[])
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: System.Security.Cryptography.Pkcs.EnvelopedCms.Encrypt(System.Security.Cryptography.Pkcs.CmsRecipient)
  commentId: M:System.Security.Cryptography.Pkcs.EnvelopedCms.Encrypt(System.Security.Cryptography.Pkcs.CmsRecipient)
  id: Encrypt(System.Security.Cryptography.Pkcs.CmsRecipient)
  parent: System.Security.Cryptography.Pkcs.EnvelopedCms
  langs:
  - csharp
  - vb
  name: Encrypt(CmsRecipient)
  nameWithType: EnvelopedCms.Encrypt(CmsRecipient)
  fullName: System.Security.Cryptography.Pkcs.EnvelopedCms.Encrypt(System.Security.Cryptography.Pkcs.CmsRecipient)
  type: Method
  source:
    remote:
      path: src/System.Security.Cryptography.Pkcs/ref/System.Security.Cryptography.Pkcs.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: Encrypt
    path: src/System.Security.Cryptography.Pkcs/ref/System.Security.Cryptography.Pkcs.cs
    startLine: 107
  assemblies:
  - System.Security.Cryptography.Pkcs
  namespace: System.Security.Cryptography.Pkcs
  summary: "\n<p>The <xref href=\"System.Security.Cryptography.Pkcs.EnvelopedCms.Encrypt(System.Security.Cryptography.Pkcs.CmsRecipient)\" data-throw-if-not-resolved=\"false\"></xref> method encrypts the contents of the CMS/PKCS #7 message by using the specified recipient information.</p>\n"
  syntax:
    content: public void Encrypt(CmsRecipient recipient)
    content.vb: Public Sub Encrypt(recipient As CmsRecipient)
    parameters:
    - id: recipient
      type: System.Security.Cryptography.Pkcs.CmsRecipient
      description: "\n<p>A <xref href=\"System.Security.Cryptography.Pkcs.CmsRecipient\" data-throw-if-not-resolved=\"false\"></xref> object that represents the recipient information.</p>\n"
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "\n<p>A null reference was passed to a method that does not accept it as a valid argument. </p>\n"
  - type: System.Security.Cryptography.CryptographicException
    commentId: T:System.Security.Cryptography.CryptographicException
    description: "\n<p>A cryptographic operation could not be completed.</p>\n"
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: System.Security.Cryptography.Pkcs.EnvelopedCms.Encrypt(System.Security.Cryptography.Pkcs.CmsRecipientCollection)
  commentId: M:System.Security.Cryptography.Pkcs.EnvelopedCms.Encrypt(System.Security.Cryptography.Pkcs.CmsRecipientCollection)
  id: Encrypt(System.Security.Cryptography.Pkcs.CmsRecipientCollection)
  parent: System.Security.Cryptography.Pkcs.EnvelopedCms
  langs:
  - csharp
  - vb
  name: Encrypt(CmsRecipientCollection)
  nameWithType: EnvelopedCms.Encrypt(CmsRecipientCollection)
  fullName: System.Security.Cryptography.Pkcs.EnvelopedCms.Encrypt(System.Security.Cryptography.Pkcs.CmsRecipientCollection)
  type: Method
  source:
    remote:
      path: src/System.Security.Cryptography.Pkcs/ref/System.Security.Cryptography.Pkcs.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: Encrypt
    path: src/System.Security.Cryptography.Pkcs/ref/System.Security.Cryptography.Pkcs.cs
    startLine: 108
  assemblies:
  - System.Security.Cryptography.Pkcs
  namespace: System.Security.Cryptography.Pkcs
  summary: "\n<p>The <xref href=\"System.Security.Cryptography.Pkcs.EnvelopedCms.Encrypt(System.Security.Cryptography.Pkcs.CmsRecipientCollection)\" data-throw-if-not-resolved=\"false\"></xref> method encrypts the contents of the CMS/PKCS #7 message by using the information for the specified list of recipients. The message is encrypted by using a message encryption key with a symmetric encryption algorithm such as triple DES. The message encryption key is then encrypted with the public key of each recipient.</p>\n"
  syntax:
    content: public void Encrypt(CmsRecipientCollection recipients)
    content.vb: Public Sub Encrypt(recipients As CmsRecipientCollection)
    parameters:
    - id: recipients
      type: System.Security.Cryptography.Pkcs.CmsRecipientCollection
      description: "\n<p>A <xref href=\"System.Security.Cryptography.Pkcs.CmsRecipientCollection\" data-throw-if-not-resolved=\"false\"></xref> collection that represents the information for the list of recipients.</p>\n"
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "\n<p>A null reference was passed to a method that does not accept it as a valid argument. </p>\n"
  - type: System.Security.Cryptography.CryptographicException
    commentId: T:System.Security.Cryptography.CryptographicException
    description: "\n<p>A cryptographic operation could not be completed.</p>\n"
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
references:
- uid: System.Security.Cryptography.Pkcs
  commentId: N:System.Security.Cryptography.Pkcs
  isExternal: false
  name: System.Security.Cryptography.Pkcs
  nameWithType: System.Security.Cryptography.Pkcs
  fullName: System.Security.Cryptography.Pkcs
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: false
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: System.Security.Cryptography.Pkcs.ContentInfo
  commentId: T:System.Security.Cryptography.Pkcs.ContentInfo
  parent: System.Security.Cryptography.Pkcs
  isExternal: false
  name: ContentInfo
  nameWithType: ContentInfo
  fullName: System.Security.Cryptography.Pkcs.ContentInfo
- uid: System.Security.Cryptography.Pkcs.AlgorithmIdentifier
  commentId: T:System.Security.Cryptography.Pkcs.AlgorithmIdentifier
  parent: System.Security.Cryptography.Pkcs
  isExternal: false
  name: AlgorithmIdentifier
  nameWithType: AlgorithmIdentifier
  fullName: System.Security.Cryptography.Pkcs.AlgorithmIdentifier
- uid: System.Security.Cryptography.X509Certificates.X509Certificate2Collection
  commentId: T:System.Security.Cryptography.X509Certificates.X509Certificate2Collection
  parent: System.Security.Cryptography.X509Certificates
  isExternal: false
  name: X509Certificate2Collection
  nameWithType: X509Certificate2Collection
  fullName: System.Security.Cryptography.X509Certificates.X509Certificate2Collection
- uid: System.Security.Cryptography.X509Certificates
  commentId: N:System.Security.Cryptography.X509Certificates
  isExternal: false
  name: System.Security.Cryptography.X509Certificates
  nameWithType: System.Security.Cryptography.X509Certificates
  fullName: System.Security.Cryptography.X509Certificates
- uid: System.Security.Cryptography.Pkcs.RecipientInfoCollection
  commentId: T:System.Security.Cryptography.Pkcs.RecipientInfoCollection
  parent: System.Security.Cryptography.Pkcs
  isExternal: false
  name: RecipientInfoCollection
  nameWithType: RecipientInfoCollection
  fullName: System.Security.Cryptography.Pkcs.RecipientInfoCollection
- uid: System.Security.Cryptography.CryptographicAttributeObjectCollection
  commentId: T:System.Security.Cryptography.CryptographicAttributeObjectCollection
  parent: System.Security.Cryptography
  isExternal: false
  name: CryptographicAttributeObjectCollection
  nameWithType: CryptographicAttributeObjectCollection
  fullName: System.Security.Cryptography.CryptographicAttributeObjectCollection
- uid: System.Security.Cryptography
  commentId: N:System.Security.Cryptography
  isExternal: false
  name: System.Security.Cryptography
  nameWithType: System.Security.Cryptography
  fullName: System.Security.Cryptography
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: false
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Byte[]
  name: Byte[]
  nameWithType: Byte[]
  fullName: System.Byte[]
  nameWithType.vb: Byte()
  fullname.vb: System.Byte()
  name.vb: Byte()
  spec.csharp:
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: System.Byte
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  spec.vb:
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: System.Byte
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
- uid: System.Security.Cryptography.Pkcs.RecipientInfo
  commentId: T:System.Security.Cryptography.Pkcs.RecipientInfo
  parent: System.Security.Cryptography.Pkcs
  isExternal: false
  name: RecipientInfo
  nameWithType: RecipientInfo
  fullName: System.Security.Cryptography.Pkcs.RecipientInfo
- uid: System.Security.Cryptography.Pkcs.CmsRecipient
  commentId: T:System.Security.Cryptography.Pkcs.CmsRecipient
  parent: System.Security.Cryptography.Pkcs
  isExternal: false
  name: CmsRecipient
  nameWithType: CmsRecipient
  fullName: System.Security.Cryptography.Pkcs.CmsRecipient
- uid: System.Security.Cryptography.Pkcs.CmsRecipientCollection
  commentId: T:System.Security.Cryptography.Pkcs.CmsRecipientCollection
  parent: System.Security.Cryptography.Pkcs
  isExternal: false
  name: CmsRecipientCollection
  nameWithType: CmsRecipientCollection
  fullName: System.Security.Cryptography.Pkcs.CmsRecipientCollection
- uid: System.ArgumentNullException
  commentId: T:System.ArgumentNullException
  isExternal: false
  name: ArgumentNullException
  nameWithType: ArgumentNullException
  fullName: System.ArgumentNullException
- uid: System.Security.Cryptography.CryptographicException
  commentId: T:System.Security.Cryptography.CryptographicException
  isExternal: false
  name: CryptographicException
  nameWithType: CryptographicException
  fullName: System.Security.Cryptography.CryptographicException
- uid: System.InvalidOperationException
  commentId: T:System.InvalidOperationException
  parent: System
  isExternal: false
  name: InvalidOperationException
  nameWithType: InvalidOperationException
  fullName: System.InvalidOperationException
