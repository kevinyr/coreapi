### YamlMime:ManagedReference
items:
- uid: System.ServiceModel.EnvelopeVersion
  commentId: T:System.ServiceModel.EnvelopeVersion
  id: EnvelopeVersion
  parent: System.ServiceModel
  children:
  - System.ServiceModel.EnvelopeVersion.GetUltimateDestinationActorValues
  - System.ServiceModel.EnvelopeVersion.NextDestinationActorValue
  - System.ServiceModel.EnvelopeVersion.None
  - System.ServiceModel.EnvelopeVersion.Soap11
  - System.ServiceModel.EnvelopeVersion.Soap12
  - System.ServiceModel.EnvelopeVersion.ToString
  langs:
  - csharp
  - vb
  name: EnvelopeVersion
  nameWithType: EnvelopeVersion
  fullName: System.ServiceModel.EnvelopeVersion
  type: Class
  source:
    remote:
      path: src/System.Private.ServiceModel/src/System/ServiceModel/EnvelopeVersion.cs
      branch: master
      repo: https://github.com/dotnet/wcf.git
    id: EnvelopeVersion
    path: src/System.Private.ServiceModel/src/System/ServiceModel/EnvelopeVersion.cs
    startLine: 9
  assemblies:
  - System.ServiceModel.Primitives
  namespace: System.ServiceModel
  summary: "\n<p>Contains information related to the version of SOAP associated with a message and its exchange.</p>\n"
  syntax:
    content: public sealed class EnvelopeVersion
    content.vb: Public NotInheritable Class EnvelopeVersion
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  modifiers.csharp:
  - public
  - sealed
  - class
  modifiers.vb:
  - Public
  - NotInheritable
  - Class
- uid: System.ServiceModel.EnvelopeVersion.NextDestinationActorValue
  commentId: P:System.ServiceModel.EnvelopeVersion.NextDestinationActorValue
  id: NextDestinationActorValue
  parent: System.ServiceModel.EnvelopeVersion
  langs:
  - csharp
  - vb
  name: NextDestinationActorValue
  nameWithType: EnvelopeVersion.NextDestinationActorValue
  fullName: System.ServiceModel.EnvelopeVersion.NextDestinationActorValue
  type: Property
  source:
    remote:
      path: src/System.Private.ServiceModel/src/System/ServiceModel/EnvelopeVersion.cs
      branch: master
      repo: https://github.com/dotnet/wcf.git
    id: NextDestinationActorValue
    path: src/System.Private.ServiceModel/src/System/ServiceModel/EnvelopeVersion.cs
    startLine: 110
  assemblies:
  - System.ServiceModel.Primitives
  namespace: System.ServiceModel
  summary: "\n<p>Gets a string that contains the URI name for the SOAP role associated with the current message version for the next destination.</p>\n"
  syntax:
    content: public string NextDestinationActorValue { get; }
    content.vb: Public ReadOnly Property NextDestinationActorValue As String
    parameters: []
    return:
      type: System.String
      description: "\n<p>A string that contains http://schemas.xmlsoap.org/soap/actor/next if SOAP1.1 is used; a string that contains http://www.w3.org/2003/05/soap-envelope/role/next if SOAP1.2 is used; and an empty string if the message version is none.</p>\n"
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: System.ServiceModel.EnvelopeVersion.None
  commentId: P:System.ServiceModel.EnvelopeVersion.None
  id: None
  parent: System.ServiceModel.EnvelopeVersion
  langs:
  - csharp
  - vb
  name: None
  nameWithType: EnvelopeVersion.None
  fullName: System.ServiceModel.EnvelopeVersion.None
  type: Property
  source:
    remote:
      path: src/System.Private.ServiceModel/src/System/ServiceModel/EnvelopeVersion.cs
      branch: master
      repo: https://github.com/dotnet/wcf.git
    id: None
    path: src/System.Private.ServiceModel/src/System/ServiceModel/EnvelopeVersion.cs
    startLine: 115
  assemblies:
  - System.ServiceModel.Primitives
  namespace: System.ServiceModel
  summary: "\n<p>Gets the envelope version not using a version of SOAP.</p>\n"
  syntax:
    content: public static EnvelopeVersion None { get; }
    content.vb: Public Shared ReadOnly Property None As EnvelopeVersion
    parameters: []
    return:
      type: System.ServiceModel.EnvelopeVersion
      description: "\n<p>The envelope version not using a SOAP formatting.</p>\n"
  modifiers.csharp:
  - public
  - static
  - get
  modifiers.vb:
  - Public
  - Shared
  - ReadOnly
- uid: System.ServiceModel.EnvelopeVersion.Soap11
  commentId: P:System.ServiceModel.EnvelopeVersion.Soap11
  id: Soap11
  parent: System.ServiceModel.EnvelopeVersion
  langs:
  - csharp
  - vb
  name: Soap11
  nameWithType: EnvelopeVersion.Soap11
  fullName: System.ServiceModel.EnvelopeVersion.Soap11
  type: Property
  source:
    remote:
      path: src/System.Private.ServiceModel/src/System/ServiceModel/EnvelopeVersion.cs
      branch: master
      repo: https://github.com/dotnet/wcf.git
    id: Soap11
    path: src/System.Private.ServiceModel/src/System/ServiceModel/EnvelopeVersion.cs
    startLine: 120
  assemblies:
  - System.ServiceModel.Primitives
  namespace: System.ServiceModel
  summary: "\n<p>Gets the SOAP1.1 envelope version.</p>\n"
  syntax:
    content: public static EnvelopeVersion Soap11 { get; }
    content.vb: Public Shared ReadOnly Property Soap11 As EnvelopeVersion
    parameters: []
    return:
      type: System.ServiceModel.EnvelopeVersion
      description: "\n<p>The SOAP1.1 <xref href=\"System.ServiceModel.EnvelopeVersion\" data-throw-if-not-resolved=\"false\"></xref> object.</p>\n"
  modifiers.csharp:
  - public
  - static
  - get
  modifiers.vb:
  - Public
  - Shared
  - ReadOnly
- uid: System.ServiceModel.EnvelopeVersion.Soap12
  commentId: P:System.ServiceModel.EnvelopeVersion.Soap12
  id: Soap12
  parent: System.ServiceModel.EnvelopeVersion
  langs:
  - csharp
  - vb
  name: Soap12
  nameWithType: EnvelopeVersion.Soap12
  fullName: System.ServiceModel.EnvelopeVersion.Soap12
  type: Property
  source:
    remote:
      path: src/System.Private.ServiceModel/src/System/ServiceModel/EnvelopeVersion.cs
      branch: master
      repo: https://github.com/dotnet/wcf.git
    id: Soap12
    path: src/System.Private.ServiceModel/src/System/ServiceModel/EnvelopeVersion.cs
    startLine: 125
  assemblies:
  - System.ServiceModel.Primitives
  namespace: System.ServiceModel
  summary: "\n<p>Gets the SOAP1.2 envelope version.</p>\n"
  syntax:
    content: public static EnvelopeVersion Soap12 { get; }
    content.vb: Public Shared ReadOnly Property Soap12 As EnvelopeVersion
    parameters: []
    return:
      type: System.ServiceModel.EnvelopeVersion
      description: "\n<p>The SOAP1.2 <xref href=\"System.ServiceModel.EnvelopeVersion\" data-throw-if-not-resolved=\"false\"></xref> object.</p>\n"
  modifiers.csharp:
  - public
  - static
  - get
  modifiers.vb:
  - Public
  - Shared
  - ReadOnly
- uid: System.ServiceModel.EnvelopeVersion.GetUltimateDestinationActorValues
  commentId: M:System.ServiceModel.EnvelopeVersion.GetUltimateDestinationActorValues
  id: GetUltimateDestinationActorValues
  parent: System.ServiceModel.EnvelopeVersion
  langs:
  - csharp
  - vb
  name: GetUltimateDestinationActorValues()
  nameWithType: EnvelopeVersion.GetUltimateDestinationActorValues()
  fullName: System.ServiceModel.EnvelopeVersion.GetUltimateDestinationActorValues()
  type: Method
  source:
    remote:
      path: src/System.Private.ServiceModel/src/System/ServiceModel/EnvelopeVersion.cs
      branch: master
      repo: https://github.com/dotnet/wcf.git
    id: GetUltimateDestinationActorValues
    path: src/System.Private.ServiceModel/src/System/ServiceModel/EnvelopeVersion.cs
    startLine: 150
  assemblies:
  - System.ServiceModel.Primitives
  namespace: System.ServiceModel
  summary: "\n<p>Gets a string that contains the URI name for the SOAP role associated with the current message version for the ultimate destination.</p>\n"
  syntax:
    content: public string[] GetUltimateDestinationActorValues()
    content.vb: Public Function GetUltimateDestinationActorValues As String()
    return:
      type: System.String[]
      description: "\n<p>An empty string if SOAP1.1 is used; a string that contains http://www.w3.org/2003/05/soap-envelope/role/ultimateReceiver if SOAP1.2 is used.</p>\n"
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: System.ServiceModel.EnvelopeVersion.ToString
  commentId: M:System.ServiceModel.EnvelopeVersion.ToString
  id: ToString
  parent: System.ServiceModel.EnvelopeVersion
  langs:
  - csharp
  - vb
  name: ToString()
  nameWithType: EnvelopeVersion.ToString()
  fullName: System.ServiceModel.EnvelopeVersion.ToString()
  type: Method
  source:
    remote:
      path: src/System.Private.ServiceModel/src/System/ServiceModel/EnvelopeVersion.cs
      branch: master
      repo: https://github.com/dotnet/wcf.git
    id: ToString
    path: src/System.Private.ServiceModel/src/System/ServiceModel/EnvelopeVersion.cs
    startLine: 165
  assemblies:
  - System.ServiceModel.Primitives
  namespace: System.ServiceModel
  summary: "\n<p>Gets a string that represents the current envelope version.</p>\n"
  syntax:
    content: public override string ToString()
    content.vb: Public Overrides Function ToString As String
    return:
      type: System.String
      description: "\n<p>The string representation of the current envelope version.</p>\n"
  overridden: System.Object.ToString
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
references:
- uid: System.ServiceModel
  commentId: N:System.ServiceModel
  isExternal: false
  name: System.ServiceModel
  nameWithType: System.ServiceModel
  fullName: System.ServiceModel
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: false
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: false
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.ServiceModel.EnvelopeVersion
  commentId: T:System.ServiceModel.EnvelopeVersion
  parent: System.ServiceModel
  isExternal: false
  name: EnvelopeVersion
  nameWithType: EnvelopeVersion
  fullName: System.ServiceModel.EnvelopeVersion
- uid: System.String[]
  name: String[]
  nameWithType: String[]
  fullName: System.String[]
  nameWithType.vb: String()
  fullname.vb: System.String()
  name.vb: String()
  spec.csharp:
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  spec.vb:
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
