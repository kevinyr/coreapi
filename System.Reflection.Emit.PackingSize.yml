### YamlMime:ManagedReference
items:
- uid: System.Reflection.Emit.PackingSize
  commentId: T:System.Reflection.Emit.PackingSize
  id: PackingSize
  parent: System.Reflection.Emit
  children:
  - System.Reflection.Emit.PackingSize.Size1
  - System.Reflection.Emit.PackingSize.Size128
  - System.Reflection.Emit.PackingSize.Size16
  - System.Reflection.Emit.PackingSize.Size2
  - System.Reflection.Emit.PackingSize.Size32
  - System.Reflection.Emit.PackingSize.Size4
  - System.Reflection.Emit.PackingSize.Size64
  - System.Reflection.Emit.PackingSize.Size8
  - System.Reflection.Emit.PackingSize.Unspecified
  langs:
  - csharp
  - vb
  name: PackingSize
  nameWithType: PackingSize
  fullName: System.Reflection.Emit.PackingSize
  type: Enum
  source:
    remote:
      path: src/mscorlib/src/System/Reflection/Emit/TypeBuilder.cs
      branch: master
      repo: https://github.com/dotnet/coreclr.git
    id: PackingSize
    path: src/mscorlib/src/System/Reflection/Emit/TypeBuilder.cs
    startLine: 22
  assemblies:
  - System.Reflection.Primitives
  namespace: System.Reflection.Emit
  summary: "\n<p>Specifies one of two factors that determine the memory alignment of fields when a type is marshaled.</p>\n"
  syntax:
    content: >-
      [Serializable]

      [ComVisible(true)]

      public enum PackingSize
    content.vb: >-
      <Serializable>

      <ComVisible(True)>

      Public Enum PackingSize
  modifiers.csharp:
  - public
  - enum
  modifiers.vb:
  - Public
  - Enum
- uid: System.Reflection.Emit.PackingSize.Size1
  commentId: F:System.Reflection.Emit.PackingSize.Size1
  id: Size1
  parent: System.Reflection.Emit.PackingSize
  langs:
  - csharp
  - vb
  name: Size1
  nameWithType: PackingSize.Size1
  fullName: System.Reflection.Emit.PackingSize.Size1
  type: Field
  source:
    remote:
      path: src/mscorlib/src/System/Reflection/Emit/TypeBuilder.cs
      branch: master
      repo: https://github.com/dotnet/coreclr.git
    id: Size1
    path: src/mscorlib/src/System/Reflection/Emit/TypeBuilder.cs
    startLine: 27
  assemblies:
  - System.Reflection.Primitives
  namespace: System.Reflection.Emit
  summary: "\n<p>The packing size is 1 byte.</p>\n"
  syntax:
    content: Size1 = 1
    return:
      type: System.Reflection.Emit.PackingSize
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: System.Reflection.Emit.PackingSize.Size128
  commentId: F:System.Reflection.Emit.PackingSize.Size128
  id: Size128
  parent: System.Reflection.Emit.PackingSize
  langs:
  - csharp
  - vb
  name: Size128
  nameWithType: PackingSize.Size128
  fullName: System.Reflection.Emit.PackingSize.Size128
  type: Field
  source:
    remote:
      path: src/mscorlib/src/System/Reflection/Emit/TypeBuilder.cs
      branch: master
      repo: https://github.com/dotnet/coreclr.git
    id: Size128
    path: src/mscorlib/src/System/Reflection/Emit/TypeBuilder.cs
    startLine: 34
  assemblies:
  - System.Reflection.Primitives
  namespace: System.Reflection.Emit
  summary: "\n<p>The packing size is 128 bytes.</p>\n"
  syntax:
    content: Size128 = 128
    return:
      type: System.Reflection.Emit.PackingSize
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: System.Reflection.Emit.PackingSize.Size16
  commentId: F:System.Reflection.Emit.PackingSize.Size16
  id: Size16
  parent: System.Reflection.Emit.PackingSize
  langs:
  - csharp
  - vb
  name: Size16
  nameWithType: PackingSize.Size16
  fullName: System.Reflection.Emit.PackingSize.Size16
  type: Field
  source:
    remote:
      path: src/mscorlib/src/System/Reflection/Emit/TypeBuilder.cs
      branch: master
      repo: https://github.com/dotnet/coreclr.git
    id: Size16
    path: src/mscorlib/src/System/Reflection/Emit/TypeBuilder.cs
    startLine: 31
  assemblies:
  - System.Reflection.Primitives
  namespace: System.Reflection.Emit
  summary: "\n<p>The packing size is 16 bytes.</p>\n"
  syntax:
    content: Size16 = 16
    return:
      type: System.Reflection.Emit.PackingSize
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: System.Reflection.Emit.PackingSize.Size2
  commentId: F:System.Reflection.Emit.PackingSize.Size2
  id: Size2
  parent: System.Reflection.Emit.PackingSize
  langs:
  - csharp
  - vb
  name: Size2
  nameWithType: PackingSize.Size2
  fullName: System.Reflection.Emit.PackingSize.Size2
  type: Field
  source:
    remote:
      path: src/mscorlib/src/System/Reflection/Emit/TypeBuilder.cs
      branch: master
      repo: https://github.com/dotnet/coreclr.git
    id: Size2
    path: src/mscorlib/src/System/Reflection/Emit/TypeBuilder.cs
    startLine: 28
  assemblies:
  - System.Reflection.Primitives
  namespace: System.Reflection.Emit
  summary: "\n<p>The packing size is 2 bytes.</p>\n"
  syntax:
    content: Size2 = 2
    return:
      type: System.Reflection.Emit.PackingSize
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: System.Reflection.Emit.PackingSize.Size32
  commentId: F:System.Reflection.Emit.PackingSize.Size32
  id: Size32
  parent: System.Reflection.Emit.PackingSize
  langs:
  - csharp
  - vb
  name: Size32
  nameWithType: PackingSize.Size32
  fullName: System.Reflection.Emit.PackingSize.Size32
  type: Field
  source:
    remote:
      path: src/mscorlib/src/System/Reflection/Emit/TypeBuilder.cs
      branch: master
      repo: https://github.com/dotnet/coreclr.git
    id: Size32
    path: src/mscorlib/src/System/Reflection/Emit/TypeBuilder.cs
    startLine: 32
  assemblies:
  - System.Reflection.Primitives
  namespace: System.Reflection.Emit
  summary: "\n<p>The packing size is 32 bytes.</p>\n"
  syntax:
    content: Size32 = 32
    return:
      type: System.Reflection.Emit.PackingSize
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: System.Reflection.Emit.PackingSize.Size4
  commentId: F:System.Reflection.Emit.PackingSize.Size4
  id: Size4
  parent: System.Reflection.Emit.PackingSize
  langs:
  - csharp
  - vb
  name: Size4
  nameWithType: PackingSize.Size4
  fullName: System.Reflection.Emit.PackingSize.Size4
  type: Field
  source:
    remote:
      path: src/mscorlib/src/System/Reflection/Emit/TypeBuilder.cs
      branch: master
      repo: https://github.com/dotnet/coreclr.git
    id: Size4
    path: src/mscorlib/src/System/Reflection/Emit/TypeBuilder.cs
    startLine: 29
  assemblies:
  - System.Reflection.Primitives
  namespace: System.Reflection.Emit
  summary: "\n<p>The packing size is 4 bytes.</p>\n"
  syntax:
    content: Size4 = 4
    return:
      type: System.Reflection.Emit.PackingSize
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: System.Reflection.Emit.PackingSize.Size64
  commentId: F:System.Reflection.Emit.PackingSize.Size64
  id: Size64
  parent: System.Reflection.Emit.PackingSize
  langs:
  - csharp
  - vb
  name: Size64
  nameWithType: PackingSize.Size64
  fullName: System.Reflection.Emit.PackingSize.Size64
  type: Field
  source:
    remote:
      path: src/mscorlib/src/System/Reflection/Emit/TypeBuilder.cs
      branch: master
      repo: https://github.com/dotnet/coreclr.git
    id: Size64
    path: src/mscorlib/src/System/Reflection/Emit/TypeBuilder.cs
    startLine: 33
  assemblies:
  - System.Reflection.Primitives
  namespace: System.Reflection.Emit
  summary: "\n<p>The packing size is 64 bytes.</p>\n"
  syntax:
    content: Size64 = 64
    return:
      type: System.Reflection.Emit.PackingSize
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: System.Reflection.Emit.PackingSize.Size8
  commentId: F:System.Reflection.Emit.PackingSize.Size8
  id: Size8
  parent: System.Reflection.Emit.PackingSize
  langs:
  - csharp
  - vb
  name: Size8
  nameWithType: PackingSize.Size8
  fullName: System.Reflection.Emit.PackingSize.Size8
  type: Field
  source:
    remote:
      path: src/mscorlib/src/System/Reflection/Emit/TypeBuilder.cs
      branch: master
      repo: https://github.com/dotnet/coreclr.git
    id: Size8
    path: src/mscorlib/src/System/Reflection/Emit/TypeBuilder.cs
    startLine: 30
  assemblies:
  - System.Reflection.Primitives
  namespace: System.Reflection.Emit
  summary: "\n<p>The packing size is 8 bytes.</p>\n"
  syntax:
    content: Size8 = 8
    return:
      type: System.Reflection.Emit.PackingSize
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: System.Reflection.Emit.PackingSize.Unspecified
  commentId: F:System.Reflection.Emit.PackingSize.Unspecified
  id: Unspecified
  parent: System.Reflection.Emit.PackingSize
  langs:
  - csharp
  - vb
  name: Unspecified
  nameWithType: PackingSize.Unspecified
  fullName: System.Reflection.Emit.PackingSize.Unspecified
  type: Field
  source:
    remote:
      path: src/mscorlib/src/System/Reflection/Emit/TypeBuilder.cs
      branch: master
      repo: https://github.com/dotnet/coreclr.git
    id: Unspecified
    path: src/mscorlib/src/System/Reflection/Emit/TypeBuilder.cs
    startLine: 26
  assemblies:
  - System.Reflection.Primitives
  namespace: System.Reflection.Emit
  summary: "\n<p>The packing size is not specified.</p>\n"
  syntax:
    content: Unspecified = 0
    return:
      type: System.Reflection.Emit.PackingSize
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
references:
- uid: System.Reflection.Emit
  commentId: N:System.Reflection.Emit
  isExternal: false
  name: System.Reflection.Emit
  nameWithType: System.Reflection.Emit
  fullName: System.Reflection.Emit
- uid: System.Reflection.Emit.PackingSize
  commentId: T:System.Reflection.Emit.PackingSize
  parent: System.Reflection.Emit
  isExternal: false
  name: PackingSize
  nameWithType: PackingSize
  fullName: System.Reflection.Emit.PackingSize
