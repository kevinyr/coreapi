### YamlMime:ManagedReference
items:
- uid: System.Diagnostics.SourceSwitch
  commentId: T:System.Diagnostics.SourceSwitch
  id: SourceSwitch
  parent: System.Diagnostics
  children:
  - System.Diagnostics.SourceSwitch.#ctor(System.String)
  - System.Diagnostics.SourceSwitch.#ctor(System.String,System.String)
  - System.Diagnostics.SourceSwitch.Level
  - System.Diagnostics.SourceSwitch.OnValueChanged
  - System.Diagnostics.SourceSwitch.ShouldTrace(System.Diagnostics.TraceEventType)
  langs:
  - csharp
  - vb
  name: SourceSwitch
  nameWithType: SourceSwitch
  fullName: System.Diagnostics.SourceSwitch
  type: Class
  source:
    remote:
      path: src/System.Diagnostics.TraceSource/src/System/Diagnostics/SourceSwitch.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: SourceSwitch
    path: src/System.Diagnostics.TraceSource/src/System/Diagnostics/SourceSwitch.cs
    startLine: 9
  assemblies:
  - System.Diagnostics.TraceSource
  namespace: System.Diagnostics
  summary: "\n<p>Provides a multilevel switch to control tracing and debug output without recompiling your code.</p>\n"
  syntax:
    content: 'public class SourceSwitch : Switch'
    content.vb: >-
      Public Class SourceSwitch
          Inherits Switch
  inheritance:
  - System.Object
  - System.Diagnostics.Switch
  inheritedMembers:
  - System.Diagnostics.Switch.Description
  - System.Diagnostics.Switch.DisplayName
  - System.Diagnostics.Switch.SwitchSetting
  - System.Diagnostics.Switch.Value
  - System.Diagnostics.Switch.OnSwitchSettingChanged
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: System.Diagnostics.SourceSwitch.#ctor(System.String)
  commentId: M:System.Diagnostics.SourceSwitch.#ctor(System.String)
  id: '#ctor(System.String)'
  parent: System.Diagnostics.SourceSwitch
  langs:
  - csharp
  - vb
  name: SourceSwitch(String)
  nameWithType: SourceSwitch.SourceSwitch(String)
  fullName: System.Diagnostics.SourceSwitch.SourceSwitch(System.String)
  type: Constructor
  source:
    remote:
      path: src/System.Diagnostics.TraceSource/src/System/Diagnostics/SourceSwitch.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: .ctor
    path: src/System.Diagnostics.TraceSource/src/System/Diagnostics/SourceSwitch.cs
    startLine: 11
  assemblies:
  - System.Diagnostics.TraceSource
  namespace: System.Diagnostics
  summary: "\n<p>Initializes a new instance of the <xref href=\"System.Diagnostics.SourceSwitch\" data-throw-if-not-resolved=\"false\"></xref> class, specifying the name of the source.</p>\n"
  syntax:
    content: public SourceSwitch(string name)
    content.vb: Public Sub New(name As String)
    parameters:
    - id: name
      type: System.String
      description: "\n<p>The name of the source.</p>\n"
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: System.Diagnostics.SourceSwitch.#ctor(System.String,System.String)
  commentId: M:System.Diagnostics.SourceSwitch.#ctor(System.String,System.String)
  id: '#ctor(System.String,System.String)'
  parent: System.Diagnostics.SourceSwitch
  langs:
  - csharp
  - vb
  name: SourceSwitch(String, String)
  nameWithType: SourceSwitch.SourceSwitch(String, String)
  fullName: System.Diagnostics.SourceSwitch.SourceSwitch(System.String, System.String)
  type: Constructor
  source:
    remote:
      path: src/System.Diagnostics.TraceSource/src/System/Diagnostics/SourceSwitch.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: .ctor
    path: src/System.Diagnostics.TraceSource/src/System/Diagnostics/SourceSwitch.cs
    startLine: 13
  assemblies:
  - System.Diagnostics.TraceSource
  namespace: System.Diagnostics
  summary: "\n<p>Initializes a new instance of the <xref href=\"System.Diagnostics.SourceSwitch\" data-throw-if-not-resolved=\"false\"></xref> class, specifying the display name and the default value for the source switch.</p>\n"
  syntax:
    content: public SourceSwitch(string displayName, string defaultSwitchValue)
    content.vb: Public Sub New(displayName As String, defaultSwitchValue As String)
    parameters:
    - id: displayName
      type: System.String
      description: "\n<p>The name of the source switch. </p>\n"
    - id: defaultSwitchValue
      type: System.String
      description: "\n<p>The default value for the switch. </p>\n"
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: System.Diagnostics.SourceSwitch.Level
  commentId: P:System.Diagnostics.SourceSwitch.Level
  id: Level
  parent: System.Diagnostics.SourceSwitch
  langs:
  - csharp
  - vb
  name: Level
  nameWithType: SourceSwitch.Level
  fullName: System.Diagnostics.SourceSwitch.Level
  type: Property
  source:
    remote:
      path: src/System.Diagnostics.TraceSource/src/System/Diagnostics/SourceSwitch.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: Level
    path: src/System.Diagnostics.TraceSource/src/System/Diagnostics/SourceSwitch.cs
    startLine: 17
  assemblies:
  - System.Diagnostics.TraceSource
  namespace: System.Diagnostics
  summary: "\n<p>Gets or sets the level of the switch.</p>\n"
  syntax:
    content: public SourceLevels Level { get; set; }
    content.vb: Public Property Level As SourceLevels
    parameters: []
    return:
      type: System.Diagnostics.SourceLevels
      description: "\n<p>One of the <xref href=\"System.Diagnostics.SourceLevels\" data-throw-if-not-resolved=\"false\"></xref> values that represents the event level of the switch.</p>\n"
  see:
  - linkId: System.Security.Permissions.SecurityPermission
    commentId: T:System.Security.Permissions.SecurityPermission
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: System.Diagnostics.SourceSwitch.OnValueChanged
  commentId: M:System.Diagnostics.SourceSwitch.OnValueChanged
  id: OnValueChanged
  parent: System.Diagnostics.SourceSwitch
  langs:
  - csharp
  - vb
  name: OnValueChanged()
  nameWithType: SourceSwitch.OnValueChanged()
  fullName: System.Diagnostics.SourceSwitch.OnValueChanged()
  type: Method
  source:
    remote:
      path: src/System.Diagnostics.TraceSource/src/System/Diagnostics/SourceSwitch.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: OnValueChanged
    path: src/System.Diagnostics.TraceSource/src/System/Diagnostics/SourceSwitch.cs
    startLine: 34
  assemblies:
  - System.Diagnostics.TraceSource
  namespace: System.Diagnostics
  summary: "\n<p>Invoked when the value of the <xref href=\"System.Diagnostics.Switch.Value\" data-throw-if-not-resolved=\"false\"></xref> property changes.</p>\n"
  syntax:
    content: protected override void OnValueChanged()
    content.vb: Protected Overrides Sub OnValueChanged
  overridden: System.Diagnostics.Switch.OnValueChanged
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "\n<p>The new value of <xref href=\"System.Diagnostics.Switch.Value\" data-throw-if-not-resolved=\"false\"></xref> is not one of the <xref href=\"System.Diagnostics.SourceLevels\" data-throw-if-not-resolved=\"false\"></xref> values.</p>\n"
  modifiers.csharp:
  - protected
  - override
  modifiers.vb:
  - Protected
  - Overrides
- uid: System.Diagnostics.SourceSwitch.ShouldTrace(System.Diagnostics.TraceEventType)
  commentId: M:System.Diagnostics.SourceSwitch.ShouldTrace(System.Diagnostics.TraceEventType)
  id: ShouldTrace(System.Diagnostics.TraceEventType)
  parent: System.Diagnostics.SourceSwitch
  langs:
  - csharp
  - vb
  name: ShouldTrace(TraceEventType)
  nameWithType: SourceSwitch.ShouldTrace(TraceEventType)
  fullName: System.Diagnostics.SourceSwitch.ShouldTrace(System.Diagnostics.TraceEventType)
  type: Method
  source:
    remote:
      path: src/System.Diagnostics.TraceSource/src/System/Diagnostics/SourceSwitch.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: ShouldTrace
    path: src/System.Diagnostics.TraceSource/src/System/Diagnostics/SourceSwitch.cs
    startLine: 29
  assemblies:
  - System.Diagnostics.TraceSource
  namespace: System.Diagnostics
  summary: "\n<p>Determines if trace listeners should be called, based on the trace event type.</p>\n"
  syntax:
    content: public bool ShouldTrace(TraceEventType eventType)
    content.vb: Public Function ShouldTrace(eventType As TraceEventType) As Boolean
    parameters:
    - id: eventType
      type: System.Diagnostics.TraceEventType
      description: "\n<p>One of the <xref href=\"System.Diagnostics.TraceEventType\" data-throw-if-not-resolved=\"false\"></xref> values.</p>\n"
    return:
      type: System.Boolean
      description: "\n<p>\n<strong>True</strong> if the trace listeners should be called; otherwise, <strong>false</strong>.</p>\n"
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
references:
- uid: System.Diagnostics
  commentId: N:System.Diagnostics
  isExternal: false
  name: System.Diagnostics
  nameWithType: System.Diagnostics
  fullName: System.Diagnostics
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: false
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Diagnostics.Switch
  commentId: T:System.Diagnostics.Switch
  parent: System.Diagnostics
  isExternal: false
  name: Switch
  nameWithType: Switch
  fullName: System.Diagnostics.Switch
- uid: System.Diagnostics.Switch.Description
  commentId: P:System.Diagnostics.Switch.Description
  parent: System.Diagnostics.Switch
  isExternal: false
  name: Description
  nameWithType: Switch.Description
  fullName: System.Diagnostics.Switch.Description
- uid: System.Diagnostics.Switch.DisplayName
  commentId: P:System.Diagnostics.Switch.DisplayName
  parent: System.Diagnostics.Switch
  isExternal: false
  name: DisplayName
  nameWithType: Switch.DisplayName
  fullName: System.Diagnostics.Switch.DisplayName
- uid: System.Diagnostics.Switch.SwitchSetting
  commentId: P:System.Diagnostics.Switch.SwitchSetting
  parent: System.Diagnostics.Switch
  isExternal: false
  name: SwitchSetting
  nameWithType: Switch.SwitchSetting
  fullName: System.Diagnostics.Switch.SwitchSetting
- uid: System.Diagnostics.Switch.Value
  commentId: P:System.Diagnostics.Switch.Value
  parent: System.Diagnostics.Switch
  isExternal: false
  name: Value
  nameWithType: Switch.Value
  fullName: System.Diagnostics.Switch.Value
- uid: System.Diagnostics.Switch.OnSwitchSettingChanged
  commentId: M:System.Diagnostics.Switch.OnSwitchSettingChanged
  parent: System.Diagnostics.Switch
  isExternal: false
  name: OnSwitchSettingChanged()
  nameWithType: Switch.OnSwitchSettingChanged()
  fullName: System.Diagnostics.Switch.OnSwitchSettingChanged()
  spec.csharp:
  - uid: System.Diagnostics.Switch.OnSwitchSettingChanged
    name: OnSwitchSettingChanged
    nameWithType: Switch.OnSwitchSettingChanged
    fullName: System.Diagnostics.Switch.OnSwitchSettingChanged
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Diagnostics.Switch.OnSwitchSettingChanged
    name: OnSwitchSettingChanged
    nameWithType: Switch.OnSwitchSettingChanged
    fullName: System.Diagnostics.Switch.OnSwitchSettingChanged
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: false
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Diagnostics.SourceLevels
  commentId: T:System.Diagnostics.SourceLevels
  parent: System.Diagnostics
  isExternal: false
  name: SourceLevels
  nameWithType: SourceLevels
  fullName: System.Diagnostics.SourceLevels
- uid: System.Diagnostics.Switch.OnValueChanged
  commentId: M:System.Diagnostics.Switch.OnValueChanged
  parent: System.Diagnostics.Switch
  isExternal: false
  name: OnValueChanged()
  nameWithType: Switch.OnValueChanged()
  fullName: System.Diagnostics.Switch.OnValueChanged()
  spec.csharp:
  - uid: System.Diagnostics.Switch.OnValueChanged
    name: OnValueChanged
    nameWithType: Switch.OnValueChanged
    fullName: System.Diagnostics.Switch.OnValueChanged
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Diagnostics.Switch.OnValueChanged
    name: OnValueChanged
    nameWithType: Switch.OnValueChanged
    fullName: System.Diagnostics.Switch.OnValueChanged
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Diagnostics.TraceEventType
  commentId: T:System.Diagnostics.TraceEventType
  parent: System.Diagnostics
  isExternal: false
  name: TraceEventType
  nameWithType: TraceEventType
  fullName: System.Diagnostics.TraceEventType
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: false
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.ArgumentException
  commentId: T:System.ArgumentException
  parent: System
  isExternal: false
  name: ArgumentException
  nameWithType: ArgumentException
  fullName: System.ArgumentException
