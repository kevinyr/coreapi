### YamlMime:ManagedReference
items:
- uid: System.Security.Cryptography.OidEnumerator
  commentId: T:System.Security.Cryptography.OidEnumerator
  id: OidEnumerator
  parent: System.Security.Cryptography
  children:
  - System.Security.Cryptography.OidEnumerator.Current
  - System.Security.Cryptography.OidEnumerator.MoveNext
  - System.Security.Cryptography.OidEnumerator.Reset
  - System.Security.Cryptography.OidEnumerator.System#Collections#IEnumerator#Current
  langs:
  - csharp
  - vb
  name: OidEnumerator
  nameWithType: OidEnumerator
  fullName: System.Security.Cryptography.OidEnumerator
  type: Class
  source:
    remote:
      path: src/System.Security.Cryptography.Encoding/src/System/Security/Cryptography/OidEnumerator.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: OidEnumerator
    path: src/System.Security.Cryptography.Encoding/src/System/Security/Cryptography/OidEnumerator.cs
    startLine: 8
  assemblies:
  - System.Security.Cryptography.Encoding
  namespace: System.Security.Cryptography
  summary: "\n<p>Provides the ability to navigate through an <xref href=\"System.Security.Cryptography.OidCollection\" data-throw-if-not-resolved=\"false\"></xref> object. This class cannot be inherited.</p>\n"
  syntax:
    content: 'public sealed class OidEnumerator : IEnumerator'
    content.vb: >-
      Public NotInheritable Class OidEnumerator
          Implements IEnumerator
  inheritance:
  - System.Object
  implements:
  - System.Collections.IEnumerator
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  modifiers.csharp:
  - public
  - sealed
  - class
  modifiers.vb:
  - Public
  - NotInheritable
  - Class
- uid: System.Security.Cryptography.OidEnumerator.Current
  commentId: P:System.Security.Cryptography.OidEnumerator.Current
  id: Current
  parent: System.Security.Cryptography.OidEnumerator
  langs:
  - csharp
  - vb
  name: Current
  nameWithType: OidEnumerator.Current
  fullName: System.Security.Cryptography.OidEnumerator.Current
  type: Property
  source:
    remote:
      path: src/System.Security.Cryptography.Encoding/src/System/Security/Cryptography/OidEnumerator.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: Current
    path: src/System.Security.Cryptography.Encoding/src/System/Security/Cryptography/OidEnumerator.cs
    startLine: 16
  assemblies:
  - System.Security.Cryptography.Encoding
  namespace: System.Security.Cryptography
  summary: "\n<p>Gets the current <xref href=\"System.Security.Cryptography.Oid\" data-throw-if-not-resolved=\"false\"></xref> object in an <xref href=\"System.Security.Cryptography.OidCollection\" data-throw-if-not-resolved=\"false\"></xref> object.</p>\n"
  syntax:
    content: public Oid Current { get; }
    content.vb: Public ReadOnly Property Current As Oid
    parameters: []
    return:
      type: System.Security.Cryptography.Oid
      description: "\n<p>The current <xref href=\"System.Security.Cryptography.Oid\" data-throw-if-not-resolved=\"false\"></xref> object in the collection.</p>\n"
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: System.Security.Cryptography.OidEnumerator.System#Collections#IEnumerator#Current
  commentId: P:System.Security.Cryptography.OidEnumerator.System#Collections#IEnumerator#Current
  id: System#Collections#IEnumerator#Current
  isEii: true
  parent: System.Security.Cryptography.OidEnumerator
  langs:
  - csharp
  - vb
  name: IEnumerator.Current
  nameWithType: OidEnumerator.IEnumerator.Current
  fullName: System.Security.Cryptography.OidEnumerator.System.Collections.IEnumerator.Current
  type: Property
  source:
    remote:
      path: src/System.Security.Cryptography.Encoding/src/System/Security/Cryptography/OidEnumerator.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: System.Collections.IEnumerator.Current
    path: src/System.Security.Cryptography.Encoding/src/System/Security/Cryptography/OidEnumerator.cs
    startLine: 18
  assemblies:
  - System.Security.Cryptography.Encoding
  namespace: System.Security.Cryptography
  summary: "\n<p>Gets the current <xref href=\"System.Security.Cryptography.Oid\" data-throw-if-not-resolved=\"false\"></xref> object in an <xref href=\"System.Security.Cryptography.OidCollection\" data-throw-if-not-resolved=\"false\"></xref> object.</p>\n"
  syntax:
    content: object IEnumerator.Current { get; }
    content.vb: ReadOnly WriteOnly Property System.Collections.IEnumerator.Current As Object Implements IEnumerator.Current
    parameters: []
    return:
      type: System.Object
      description: "\n<p>The current <xref href=\"System.Security.Cryptography.Oid\" data-throw-if-not-resolved=\"false\"></xref> object.</p>\n"
  implements:
  - System.Collections.IEnumerator.Current
  nameWithType.vb: OidEnumerator.System.Collections.IEnumerator.Current
  modifiers.csharp:
  - get
  modifiers.vb:
  - ReadOnly
  name.vb: System.Collections.IEnumerator.Current
- uid: System.Security.Cryptography.OidEnumerator.MoveNext
  commentId: M:System.Security.Cryptography.OidEnumerator.MoveNext
  id: MoveNext
  parent: System.Security.Cryptography.OidEnumerator
  langs:
  - csharp
  - vb
  name: MoveNext()
  nameWithType: OidEnumerator.MoveNext()
  fullName: System.Security.Cryptography.OidEnumerator.MoveNext()
  type: Method
  source:
    remote:
      path: src/System.Security.Cryptography.Encoding/src/System/Security/Cryptography/OidEnumerator.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: MoveNext
    path: src/System.Security.Cryptography.Encoding/src/System/Security/Cryptography/OidEnumerator.cs
    startLine: 20
  assemblies:
  - System.Security.Cryptography.Encoding
  namespace: System.Security.Cryptography
  summary: "\n<p>Advances to the next <xref href=\"System.Security.Cryptography.Oid\" data-throw-if-not-resolved=\"false\"></xref> object in an <xref href=\"System.Security.Cryptography.OidCollection\" data-throw-if-not-resolved=\"false\"></xref> object.</p>\n"
  syntax:
    content: public bool MoveNext()
    content.vb: Public Function MoveNext As Boolean
    return:
      type: System.Boolean
      description: "\n<p>\n<strong>true</strong>, if the enumerator was successfully advanced to the next element; <strong>false</strong>, if the enumerator has passed the end of the collection.</p>\n"
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "\n<p>The collection was modified after the enumerator was created.</p>\n"
  implements:
  - System.Collections.IEnumerator.MoveNext
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: System.Security.Cryptography.OidEnumerator.Reset
  commentId: M:System.Security.Cryptography.OidEnumerator.Reset
  id: Reset
  parent: System.Security.Cryptography.OidEnumerator
  langs:
  - csharp
  - vb
  name: Reset()
  nameWithType: OidEnumerator.Reset()
  fullName: System.Security.Cryptography.OidEnumerator.Reset()
  type: Method
  source:
    remote:
      path: src/System.Security.Cryptography.Encoding/src/System/Security/Cryptography/OidEnumerator.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: Reset
    path: src/System.Security.Cryptography.Encoding/src/System/Security/Cryptography/OidEnumerator.cs
    startLine: 29
  assemblies:
  - System.Security.Cryptography.Encoding
  namespace: System.Security.Cryptography
  summary: "\n<p>Sets an enumerator to its initial position.</p>\n"
  syntax:
    content: public void Reset()
    content.vb: Public Sub Reset
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "\n<p>The collection was modified after the enumerator was created.</p>\n"
  implements:
  - System.Collections.IEnumerator.Reset
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
references:
- uid: System.Security.Cryptography
  commentId: N:System.Security.Cryptography
  isExternal: false
  name: System.Security.Cryptography
  nameWithType: System.Security.Cryptography
  fullName: System.Security.Cryptography
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: false
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Collections.IEnumerator
  commentId: T:System.Collections.IEnumerator
  parent: System.Collections
  isExternal: false
  name: IEnumerator
  nameWithType: IEnumerator
  fullName: System.Collections.IEnumerator
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: System.Collections
  commentId: N:System.Collections
  isExternal: false
  name: System.Collections
  nameWithType: System.Collections
  fullName: System.Collections
- uid: System.Security.Cryptography.Oid
  commentId: T:System.Security.Cryptography.Oid
  parent: System.Security.Cryptography
  isExternal: false
  name: Oid
  nameWithType: Oid
  fullName: System.Security.Cryptography.Oid
- uid: System.Collections.IEnumerator.Current
  commentId: P:System.Collections.IEnumerator.Current
  parent: System.Collections.IEnumerator
  isExternal: false
  name: Current
  nameWithType: IEnumerator.Current
  fullName: System.Collections.IEnumerator.Current
- uid: System.Collections.IEnumerator.MoveNext
  commentId: M:System.Collections.IEnumerator.MoveNext
  parent: System.Collections.IEnumerator
  isExternal: false
  name: MoveNext()
  nameWithType: IEnumerator.MoveNext()
  fullName: System.Collections.IEnumerator.MoveNext()
  spec.csharp:
  - uid: System.Collections.IEnumerator.MoveNext
    name: MoveNext
    nameWithType: IEnumerator.MoveNext
    fullName: System.Collections.IEnumerator.MoveNext
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.IEnumerator.MoveNext
    name: MoveNext
    nameWithType: IEnumerator.MoveNext
    fullName: System.Collections.IEnumerator.MoveNext
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: false
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Collections.IEnumerator.Reset
  commentId: M:System.Collections.IEnumerator.Reset
  parent: System.Collections.IEnumerator
  isExternal: false
  name: Reset()
  nameWithType: IEnumerator.Reset()
  fullName: System.Collections.IEnumerator.Reset()
  spec.csharp:
  - uid: System.Collections.IEnumerator.Reset
    name: Reset
    nameWithType: IEnumerator.Reset
    fullName: System.Collections.IEnumerator.Reset
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.IEnumerator.Reset
    name: Reset
    nameWithType: IEnumerator.Reset
    fullName: System.Collections.IEnumerator.Reset
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.InvalidOperationException
  commentId: T:System.InvalidOperationException
  parent: System
  isExternal: false
  name: InvalidOperationException
  nameWithType: InvalidOperationException
  fullName: System.InvalidOperationException
