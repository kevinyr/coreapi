items:
- uid: System.ComponentModel.AsyncOperationManager
  commentId: T:System.ComponentModel.AsyncOperationManager
  id: AsyncOperationManager
  parent: System.ComponentModel
  children:
  - System.ComponentModel.AsyncOperationManager.CreateOperation(System.Object)
  - System.ComponentModel.AsyncOperationManager.SynchronizationContext
  langs:
  - csharp
  - vb
  name: AsyncOperationManager
  fullName: System.ComponentModel.AsyncOperationManager
  type: Class
  source:
    remote:
      path: src/System.ComponentModel.EventBasedAsync/src/System/ComponentModel/AsyncOperationManager.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: AsyncOperationManager
    path: src/System.ComponentModel.EventBasedAsync/src/System/ComponentModel/AsyncOperationManager.cs
    startLine: 10
  assemblies:
  - System.ComponentModel.EventBasedAsync
  namespace: System.ComponentModel
  summary: "\n<p>Provides concurrency management for classes that support asynchronous method calls. This class cannot be inherited.</p>\n"
  syntax:
    content: public static class AsyncOperationManager
    content.vb: Public Module AsyncOperationManager
  seealso:
  - type: System.ComponentModel.AsyncOperation
    commentId: T:System.ComponentModel.AsyncOperation
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  modifiers.csharp:
  - public
  - static
  - class
  modifiers.vb:
  - Public
  - Module
  nameWithType: AsyncOperationManager
- uid: System.ComponentModel.AsyncOperationManager.SynchronizationContext
  commentId: P:System.ComponentModel.AsyncOperationManager.SynchronizationContext
  id: SynchronizationContext
  parent: System.ComponentModel.AsyncOperationManager
  langs:
  - csharp
  - vb
  name: SynchronizationContext
  fullName: System.ComponentModel.AsyncOperationManager.SynchronizationContext
  type: Property
  source:
    remote:
      path: src/System.ComponentModel.EventBasedAsync/src/System/ComponentModel/AsyncOperationManager.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: SynchronizationContext
    path: src/System.ComponentModel.EventBasedAsync/src/System/ComponentModel/AsyncOperationManager.cs
    startLine: 17
  assemblies:
  - System.ComponentModel.EventBasedAsync
  namespace: System.ComponentModel
  summary: "\n<p>Gets or sets the synchronization context for the asynchronous operation.</p>\n"
  syntax:
    content: public static SynchronizationContext SynchronizationContext { get; set; }
    content.vb: Public Shared Property SynchronizationContext As SynchronizationContext
    parameters: []
    return:
      type: System.Threading.SynchronizationContext
      description: "\n<p>The synchronization context for the asynchronous operation.</p>\n"
  see:
  - type: System.Security.NamedPermissionSet
    commentId: T:System.Security.NamedPermissionSet
  modifiers.csharp:
  - public
  - static
  - get
  - set
  modifiers.vb:
  - Public
  - Shared
  nameWithType: AsyncOperationManager.SynchronizationContext
- uid: System.ComponentModel.AsyncOperationManager.CreateOperation(System.Object)
  commentId: M:System.ComponentModel.AsyncOperationManager.CreateOperation(System.Object)
  id: CreateOperation(System.Object)
  parent: System.ComponentModel.AsyncOperationManager
  langs:
  - csharp
  - vb
  name: CreateOperation(Object)
  fullName: System.ComponentModel.AsyncOperationManager.CreateOperation(System.Object)
  type: Method
  source:
    remote:
      path: src/System.ComponentModel.EventBasedAsync/src/System/ComponentModel/AsyncOperationManager.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: CreateOperation
    path: src/System.ComponentModel.EventBasedAsync/src/System/ComponentModel/AsyncOperationManager.cs
    startLine: 12
  assemblies:
  - System.ComponentModel.EventBasedAsync
  namespace: System.ComponentModel
  summary: "\n<p>Returns an <xref href=\"System.ComponentModel.AsyncOperation\" data-throw-if-not-resolved=\"false\"></xref> for tracking the duration of a particular asynchronous operation.</p>\n"
  syntax:
    content: public static AsyncOperation CreateOperation(object userSuppliedState)
    content.vb: Public Shared Function CreateOperation(userSuppliedState As Object) As AsyncOperation
    parameters:
    - id: userSuppliedState
      type: System.Object
      description: "\n<p>An object used to associate a piece of client state, such as a task ID, with a particular asynchronous operation. </p>\n"
    return:
      type: System.ComponentModel.AsyncOperation
      description: "\n<p>An <xref href=\"System.ComponentModel.AsyncOperation\" data-throw-if-not-resolved=\"false\"></xref> that you can use to track the duration of an asynchronous method invocation.</p>\n"
  seealso:
  - type: System.ComponentModel.AsyncOperation
    commentId: T:System.ComponentModel.AsyncOperation
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  nameWithType: AsyncOperationManager.CreateOperation(Object)
references:
- uid: System.ComponentModel
  isExternal: false
  name: System.ComponentModel
  fullName: System.ComponentModel
  nameWithType: System.ComponentModel
  commentId: N:System.ComponentModel
- uid: System.Object
  parent: System
  isExternal: false
  name: Object
  fullName: System.Object
  nameWithType: Object
  commentId: T:System.Object
- uid: System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  nameWithType: Object.ToString()
  commentId: M:System.Object.ToString
- uid: System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
  nameWithType: Object.Equals(Object)
  commentId: M:System.Object.Equals(System.Object)
- uid: System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
  nameWithType: Object.Equals(Object, Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
  nameWithType: Object.ReferenceEquals(Object, Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
- uid: System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  nameWithType: Object.GetHashCode()
  commentId: M:System.Object.GetHashCode
- uid: System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  nameWithType: Object.GetType()
  commentId: M:System.Object.GetType
- uid: System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  nameWithType: Object.MemberwiseClone()
  commentId: M:System.Object.MemberwiseClone
- uid: System
  isExternal: false
  name: System
  fullName: System
  nameWithType: System
  commentId: N:System
- uid: System.Threading.SynchronizationContext
  parent: System.Threading
  isExternal: false
  name: SynchronizationContext
  fullName: System.Threading.SynchronizationContext
  nameWithType: SynchronizationContext
  commentId: T:System.Threading.SynchronizationContext
- uid: System.Threading
  isExternal: false
  name: System.Threading
  fullName: System.Threading
  nameWithType: System.Threading
  commentId: N:System.Threading
- uid: System.ComponentModel.AsyncOperation
  parent: System.ComponentModel
  isExternal: false
  name: AsyncOperation
  fullName: System.ComponentModel.AsyncOperation
  nameWithType: AsyncOperation
  commentId: T:System.ComponentModel.AsyncOperation
