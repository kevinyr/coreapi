### YamlMime:ManagedReference
items:
- uid: System.Runtime.ExceptionServices.ExceptionDispatchInfo
  commentId: T:System.Runtime.ExceptionServices.ExceptionDispatchInfo
  id: ExceptionDispatchInfo
  parent: System.Runtime.ExceptionServices
  children:
  - System.Runtime.ExceptionServices.ExceptionDispatchInfo.Capture(System.Exception)
  - System.Runtime.ExceptionServices.ExceptionDispatchInfo.SourceException
  - System.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw
  langs:
  - csharp
  - vb
  name: ExceptionDispatchInfo
  nameWithType: ExceptionDispatchInfo
  fullName: System.Runtime.ExceptionServices.ExceptionDispatchInfo
  type: Class
  source:
    remote:
      path: src/mscorlib/src/System/Runtime/ExceptionServices/ExceptionServicesCommon.cs
      branch: master
      repo: https://github.com/dotnet/coreclr.git
    id: ExceptionDispatchInfo
    path: src/mscorlib/src/System/Runtime/ExceptionServices/ExceptionServicesCommon.cs
    startLine: 28
  assemblies:
  - System.Runtime
  namespace: System.Runtime.ExceptionServices
  summary: "\n<p>Represents an exception whose state is captured at a certain point in code. </p>\n"
  syntax:
    content: public sealed class ExceptionDispatchInfo
    content.vb: Public NotInheritable Class ExceptionDispatchInfo
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  modifiers.csharp:
  - public
  - sealed
  - class
  modifiers.vb:
  - Public
  - NotInheritable
  - Class
- uid: System.Runtime.ExceptionServices.ExceptionDispatchInfo.SourceException
  commentId: P:System.Runtime.ExceptionServices.ExceptionDispatchInfo.SourceException
  id: SourceException
  parent: System.Runtime.ExceptionServices.ExceptionDispatchInfo
  langs:
  - csharp
  - vb
  name: SourceException
  nameWithType: ExceptionDispatchInfo.SourceException
  fullName: System.Runtime.ExceptionServices.ExceptionDispatchInfo.SourceException
  type: Property
  source:
    remote:
      path: src/mscorlib/src/System/Runtime/ExceptionServices/ExceptionServicesCommon.cs
      branch: master
      repo: https://github.com/dotnet/coreclr.git
    id: SourceException
    path: src/mscorlib/src/System/Runtime/ExceptionServices/ExceptionServicesCommon.cs
    startLine: 110
  assemblies:
  - System.Runtime
  namespace: System.Runtime.ExceptionServices
  summary: "\n<p>Gets the exception that is represented by the current instance. </p>\n"
  syntax:
    content: public Exception SourceException { get; }
    content.vb: Public ReadOnly Property SourceException As Exception
    parameters: []
    return:
      type: System.Exception
      description: "\n<p>The exception that is represented by the current instance. </p>\n"
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: System.Runtime.ExceptionServices.ExceptionDispatchInfo.Capture(System.Exception)
  commentId: M:System.Runtime.ExceptionServices.ExceptionDispatchInfo.Capture(System.Exception)
  id: Capture(System.Exception)
  parent: System.Runtime.ExceptionServices.ExceptionDispatchInfo
  langs:
  - csharp
  - vb
  name: Capture(Exception)
  nameWithType: ExceptionDispatchInfo.Capture(Exception)
  fullName: System.Runtime.ExceptionServices.ExceptionDispatchInfo.Capture(System.Exception)
  type: Method
  source:
    remote:
      path: src/mscorlib/src/System/Runtime/ExceptionServices/ExceptionServicesCommon.cs
      branch: master
      repo: https://github.com/dotnet/coreclr.git
    id: Capture
    path: src/mscorlib/src/System/Runtime/ExceptionServices/ExceptionServicesCommon.cs
    startLine: 99
  assemblies:
  - System.Runtime
  namespace: System.Runtime.ExceptionServices
  summary: "\n<p>Creates an <xref href=\"System.Runtime.ExceptionServices.ExceptionDispatchInfo\" data-throw-if-not-resolved=\"false\"></xref> object that represents the specified exception at the current point in code. </p>\n"
  syntax:
    content: public static ExceptionDispatchInfo Capture(Exception source)
    content.vb: Public Shared Function Capture(source As Exception) As ExceptionDispatchInfo
    parameters:
    - id: source
      type: System.Exception
      description: "\n<p>The exception whose state is captured, and which is represented by the returned object. </p>\n"
    return:
      type: System.Runtime.ExceptionServices.ExceptionDispatchInfo
      description: "\n<p>An object that represents the specified exception at the current point in code. </p>\n"
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "\n<p>\n<em>source</em> is <strong>null</strong>. </p>\n"
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: System.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw
  commentId: M:System.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw
  id: Throw
  parent: System.Runtime.ExceptionServices.ExceptionDispatchInfo
  langs:
  - csharp
  - vb
  name: Throw()
  nameWithType: ExceptionDispatchInfo.Throw()
  fullName: System.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()
  type: Method
  source:
    remote:
      path: src/mscorlib/src/System/Runtime/ExceptionServices/ExceptionServicesCommon.cs
      branch: master
      repo: https://github.com/dotnet/coreclr.git
    id: Throw
    path: src/mscorlib/src/System/Runtime/ExceptionServices/ExceptionServicesCommon.cs
    startLine: 126
  assemblies:
  - System.Runtime
  namespace: System.Runtime.ExceptionServices
  summary: "\n<p>Throws the exception that is represented by the current <xref href=\"System.Runtime.ExceptionServices.ExceptionDispatchInfo\" data-throw-if-not-resolved=\"false\"></xref> object, after restoring the state that was saved when the exception was captured. </p>\n"
  syntax:
    content: public void Throw()
    content.vb: Public Sub Throw
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
references:
- uid: System.Runtime.ExceptionServices
  commentId: N:System.Runtime.ExceptionServices
  isExternal: false
  name: System.Runtime.ExceptionServices
  nameWithType: System.Runtime.ExceptionServices
  fullName: System.Runtime.ExceptionServices
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: false
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: System.Exception
  commentId: T:System.Exception
  parent: System
  isExternal: false
  name: Exception
  nameWithType: Exception
  fullName: System.Exception
- uid: System.Runtime.ExceptionServices.ExceptionDispatchInfo
  commentId: T:System.Runtime.ExceptionServices.ExceptionDispatchInfo
  parent: System.Runtime.ExceptionServices
  isExternal: false
  name: ExceptionDispatchInfo
  nameWithType: ExceptionDispatchInfo
  fullName: System.Runtime.ExceptionServices.ExceptionDispatchInfo
- uid: System.ArgumentException
  commentId: T:System.ArgumentException
  parent: System
  isExternal: false
  name: ArgumentException
  nameWithType: ArgumentException
  fullName: System.ArgumentException
