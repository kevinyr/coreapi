### YamlMime:ManagedReference
items:
- uid: System.Collections.Generic.IComparer`1
  commentId: T:System.Collections.Generic.IComparer`1
  id: IComparer`1
  parent: System.Collections.Generic
  children:
  - System.Collections.Generic.IComparer`1.Compare(`0,`0)
  langs:
  - csharp
  - vb
  name: IComparer<T>
  nameWithType: IComparer<T>
  fullName: System.Collections.Generic.IComparer<T>
  type: Interface
  source:
    remote:
      path: src/mscorlib/src/System/Collections/Generic/IComparer.cs
      branch: master
      repo: https://github.com/dotnet/coreclr.git
    id: IComparer
    path: src/mscorlib/src/System/Collections/Generic/IComparer.cs
    startLine: 21
  assemblies:
  - System.Runtime
  namespace: System.Collections.Generic
  summary: "\n<p>Defines a method that a type implements to compare two objects.</p>\n"
  syntax:
    content: public interface IComparer<in T>
    content.vb: Public Interface IComparer(Of In T)
    typeParameters:
    - id: T
      description: "\n<p>The type of objects to compare.</p>\n"
  seealso:
  - linkId: System.Collections.Generic.Comparer`1
    commentId: T:System.Collections.Generic.Comparer`1
  - linkId: System.Collections
    commentId: N:System.Collections
  - linkId: System.Threading.Thread.CurrentCulture
    commentId: P:System.Threading.Thread.CurrentCulture
  - linkId: System.Globalization.CompareInfo
    commentId: T:System.Globalization.CompareInfo
  - linkId: System.Globalization.CultureInfo
    commentId: T:System.Globalization.CultureInfo
  - linkId: System.Collections.Generic.IEqualityComparer`1
    commentId: T:System.Collections.Generic.IEqualityComparer`1
  nameWithType.vb: IComparer(Of T)
  modifiers.csharp:
  - public
  - interface
  modifiers.vb:
  - Public
  - Interface
  fullName.vb: System.Collections.Generic.IComparer(Of T)
  name.vb: IComparer(Of T)
- uid: System.Collections.Generic.IComparer`1.Compare(`0,`0)
  commentId: M:System.Collections.Generic.IComparer`1.Compare(`0,`0)
  id: Compare(`0,`0)
  parent: System.Collections.Generic.IComparer`1
  langs:
  - csharp
  - vb
  name: Compare(T, T)
  nameWithType: IComparer<T>.Compare(T, T)
  fullName: System.Collections.Generic.IComparer<T>.Compare(T, T)
  type: Method
  source:
    remote:
      path: src/mscorlib/src/System/Collections/Generic/IComparer.cs
      branch: master
      repo: https://github.com/dotnet/coreclr.git
    id: Compare
    path: src/mscorlib/src/System/Collections/Generic/IComparer.cs
    startLine: 27
  assemblies:
  - System.Runtime
  namespace: System.Collections.Generic
  summary: "\n<p>Compares two objects and returns a value indicating whether one is less than, equal to, or greater than the other.</p>\n"
  syntax:
    content: int Compare(T x, T y)
    content.vb: Function Compare(x As T, y As T) As Integer
    parameters:
    - id: x
      type: '{T}'
      description: "\n<p>The first object to compare.</p>\n"
    - id: y
      type: '{T}'
      description: "\n<p>The second object to compare.</p>\n"
    return:
      type: System.Int32
      description: "\n<p>A signed integer that indicates the relative values of <em>x</em> and <em>y</em>, as shown in the following table.</p>\n<p>Value </p>\n<p>Meaning </p>\n<table><tbody><tr><td>\n<p>Less than zero</p>\n</td><td>\n<p>\n<em>x</em> is less than <em>y</em>.</p>\n</td></tr><tr><td>\n<p>Zero</p>\n</td><td>\n<p>\n<em>x</em> equals <em>y</em>.</p>\n</td></tr><tr><td>\n<p>Greater than zero</p>\n</td><td>\n<p>\n<em>x</em> is greater than <em>y</em>.</p>\n</td></tr></tbody></table>\n"
  seealso:
  - linkId: System.IComparable`1
    commentId: T:System.IComparable`1
  - linkId: System.Threading.Thread.CurrentCulture
    commentId: P:System.Threading.Thread.CurrentCulture
  - linkId: System.Globalization.CompareInfo
    commentId: T:System.Globalization.CompareInfo
  - linkId: System.Globalization.CultureInfo
    commentId: T:System.Globalization.CultureInfo
  nameWithType.vb: IComparer(Of T).Compare(T, T)
  fullName.vb: System.Collections.Generic.IComparer(Of T).Compare(T, T)
references:
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: false
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
- uid: '{T}'
  commentId: '!:T'
  definition: T
  name: T
  nameWithType: T
  fullName: T
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: false
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: T
  isExternal: false
  name: T
  nameWithType: T
  fullName: T
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
