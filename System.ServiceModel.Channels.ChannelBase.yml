### YamlMime:ManagedReference
items:
- uid: System.ServiceModel.Channels.ChannelBase
  commentId: T:System.ServiceModel.Channels.ChannelBase
  id: ChannelBase
  parent: System.ServiceModel.Channels
  children:
  - System.ServiceModel.Channels.ChannelBase.#ctor(System.ServiceModel.Channels.ChannelManagerBase)
  - System.ServiceModel.Channels.ChannelBase.DefaultCloseTimeout
  - System.ServiceModel.Channels.ChannelBase.DefaultOpenTimeout
  - System.ServiceModel.Channels.ChannelBase.DefaultReceiveTimeout
  - System.ServiceModel.Channels.ChannelBase.DefaultSendTimeout
  - System.ServiceModel.Channels.ChannelBase.GetProperty``1
  - System.ServiceModel.Channels.ChannelBase.Manager
  - System.ServiceModel.Channels.ChannelBase.OnClosed
  - System.ServiceModel.Channels.ChannelBase.System#ServiceModel#IDefaultCommunicationTimeouts#CloseTimeout
  - System.ServiceModel.Channels.ChannelBase.System#ServiceModel#IDefaultCommunicationTimeouts#OpenTimeout
  - System.ServiceModel.Channels.ChannelBase.System#ServiceModel#IDefaultCommunicationTimeouts#ReceiveTimeout
  - System.ServiceModel.Channels.ChannelBase.System#ServiceModel#IDefaultCommunicationTimeouts#SendTimeout
  langs:
  - csharp
  - vb
  name: ChannelBase
  nameWithType: ChannelBase
  fullName: System.ServiceModel.Channels.ChannelBase
  type: Class
  source:
    remote:
      path: src/System.Private.ServiceModel/src/System/ServiceModel/Channels/ChannelBase.cs
      branch: master
      repo: https://github.com/dotnet/wcf.git
    id: ChannelBase
    path: src/System.Private.ServiceModel/src/System/ServiceModel/Channels/ChannelBase.cs
    startLine: 10
  assemblies:
  - System.ServiceModel.Primitives
  namespace: System.ServiceModel.Channels
  summary: "\n<p>Provides the base implementation for custom channels.</p>\n"
  syntax:
    content: 'public abstract class ChannelBase : CommunicationObject, IAsyncCommunicationObject, IChannel, ICommunicationObject, IDefaultCommunicationTimeouts'
    content.vb: >-
      Public MustInherit Class ChannelBase
          Inherits CommunicationObject
          Implements IAsyncCommunicationObject, IChannel, ICommunicationObject, IDefaultCommunicationTimeouts
  inheritance:
  - System.Object
  - System.ServiceModel.Channels.CommunicationObject
  implements:
  - System.ServiceModel.Channels.IChannel
  - System.ServiceModel.ICommunicationObject
  - System.ServiceModel.IDefaultCommunicationTimeouts
  inheritedMembers:
  - System.ServiceModel.Channels.CommunicationObject.IsDisposed
  - System.ServiceModel.Channels.CommunicationObject.State
  - System.ServiceModel.Channels.CommunicationObject.ThisLock
  - System.ServiceModel.Channels.CommunicationObject.Closed
  - System.ServiceModel.Channels.CommunicationObject.Closing
  - System.ServiceModel.Channels.CommunicationObject.Faulted
  - System.ServiceModel.Channels.CommunicationObject.Opened
  - System.ServiceModel.Channels.CommunicationObject.Opening
  - System.ServiceModel.Channels.CommunicationObject.Abort
  - System.ServiceModel.Channels.CommunicationObject.BeginClose(System.AsyncCallback,System.Object)
  - System.ServiceModel.Channels.CommunicationObject.BeginClose(System.TimeSpan,System.AsyncCallback,System.Object)
  - System.ServiceModel.Channels.CommunicationObject.BeginOpen(System.AsyncCallback,System.Object)
  - System.ServiceModel.Channels.CommunicationObject.BeginOpen(System.TimeSpan,System.AsyncCallback,System.Object)
  - System.ServiceModel.Channels.CommunicationObject.Close
  - System.ServiceModel.Channels.CommunicationObject.Close(System.TimeSpan)
  - System.ServiceModel.Channels.CommunicationObject.EndClose(System.IAsyncResult)
  - System.ServiceModel.Channels.CommunicationObject.EndOpen(System.IAsyncResult)
  - System.ServiceModel.Channels.CommunicationObject.Fault
  - System.ServiceModel.Channels.CommunicationObject.GetCommunicationObjectType
  - System.ServiceModel.Channels.CommunicationObject.OnAbort
  - System.ServiceModel.Channels.CommunicationObject.OnBeginClose(System.TimeSpan,System.AsyncCallback,System.Object)
  - System.ServiceModel.Channels.CommunicationObject.OnBeginOpen(System.TimeSpan,System.AsyncCallback,System.Object)
  - System.ServiceModel.Channels.CommunicationObject.OnClose(System.TimeSpan)
  - System.ServiceModel.Channels.CommunicationObject.OnClosing
  - System.ServiceModel.Channels.CommunicationObject.OnEndClose(System.IAsyncResult)
  - System.ServiceModel.Channels.CommunicationObject.OnEndOpen(System.IAsyncResult)
  - System.ServiceModel.Channels.CommunicationObject.OnFaulted
  - System.ServiceModel.Channels.CommunicationObject.OnOpen(System.TimeSpan)
  - System.ServiceModel.Channels.CommunicationObject.OnOpened
  - System.ServiceModel.Channels.CommunicationObject.OnOpening
  - System.ServiceModel.Channels.CommunicationObject.Open
  - System.ServiceModel.Channels.CommunicationObject.Open(System.TimeSpan)
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  modifiers.csharp:
  - public
  - abstract
  - class
  modifiers.vb:
  - Public
  - MustInherit
  - Class
- uid: System.ServiceModel.Channels.ChannelBase.#ctor(System.ServiceModel.Channels.ChannelManagerBase)
  commentId: M:System.ServiceModel.Channels.ChannelBase.#ctor(System.ServiceModel.Channels.ChannelManagerBase)
  id: '#ctor(System.ServiceModel.Channels.ChannelManagerBase)'
  parent: System.ServiceModel.Channels.ChannelBase
  langs:
  - csharp
  - vb
  name: ChannelBase(ChannelManagerBase)
  nameWithType: ChannelBase.ChannelBase(ChannelManagerBase)
  fullName: System.ServiceModel.Channels.ChannelBase.ChannelBase(System.ServiceModel.Channels.ChannelManagerBase)
  type: Constructor
  source:
    remote:
      path: src/System.Private.ServiceModel/src/System/ServiceModel/Channels/ChannelBase.cs
      branch: master
      repo: https://github.com/dotnet/wcf.git
    id: .ctor
    path: src/System.Private.ServiceModel/src/System/ServiceModel/Channels/ChannelBase.cs
    startLine: 14
  assemblies:
  - System.ServiceModel.Primitives
  namespace: System.ServiceModel.Channels
  summary: "\n<p>Initializes a new instance of the <xref href=\"System.ServiceModel.Channels.ChannelBase\" data-throw-if-not-resolved=\"false\"></xref> class.  </p>\n"
  syntax:
    content: protected ChannelBase(ChannelManagerBase channelManager)
    content.vb: Protected Sub New(channelManager As ChannelManagerBase)
    parameters:
    - id: channelManager
      type: System.ServiceModel.Channels.ChannelManagerBase
      description: "\n<p>The <xref href=\"System.ServiceModel.Channels.ChannelManagerBase\" data-throw-if-not-resolved=\"false\"></xref> that provides default timeouts for the channel operations (send, receive, open, and close).</p>\n"
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "\n<p>\n<em>channelManager</em> is <strong>null</strong>.</p>\n"
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: System.ServiceModel.Channels.ChannelBase.DefaultCloseTimeout
  commentId: P:System.ServiceModel.Channels.ChannelBase.DefaultCloseTimeout
  id: DefaultCloseTimeout
  parent: System.ServiceModel.Channels.ChannelBase
  langs:
  - csharp
  - vb
  name: DefaultCloseTimeout
  nameWithType: ChannelBase.DefaultCloseTimeout
  fullName: System.ServiceModel.Channels.ChannelBase.DefaultCloseTimeout
  type: Property
  source:
    remote:
      path: src/System.Private.ServiceModel/src/System/ServiceModel/Channels/ChannelBase.cs
      branch: master
      repo: https://github.com/dotnet/wcf.git
    id: DefaultCloseTimeout
    path: src/System.Private.ServiceModel/src/System/ServiceModel/Channels/ChannelBase.cs
    startLine: 44
  assemblies:
  - System.ServiceModel.Primitives
  namespace: System.ServiceModel.Channels
  summary: "\n<p>Gets the default interval of time provided for a close operation to complete.</p>\n"
  syntax:
    content: protected override TimeSpan DefaultCloseTimeout { get; }
    content.vb: Protected Overrides ReadOnly Property DefaultCloseTimeout As TimeSpan
    parameters: []
    return:
      type: System.TimeSpan
      description: "\n<p>The default <xref href=\"System.TimeSpan\" data-throw-if-not-resolved=\"false\"></xref> that specifies how long the close operation has to complete before timing out.</p>\n"
  overridden: System.ServiceModel.Channels.CommunicationObject.DefaultCloseTimeout
  modifiers.csharp:
  - protected
  - override
  - get
  modifiers.vb:
  - Protected
  - Overrides
  - ReadOnly
- uid: System.ServiceModel.Channels.ChannelBase.DefaultOpenTimeout
  commentId: P:System.ServiceModel.Channels.ChannelBase.DefaultOpenTimeout
  id: DefaultOpenTimeout
  parent: System.ServiceModel.Channels.ChannelBase
  langs:
  - csharp
  - vb
  name: DefaultOpenTimeout
  nameWithType: ChannelBase.DefaultOpenTimeout
  fullName: System.ServiceModel.Channels.ChannelBase.DefaultOpenTimeout
  type: Property
  source:
    remote:
      path: src/System.Private.ServiceModel/src/System/ServiceModel/Channels/ChannelBase.cs
      branch: master
      repo: https://github.com/dotnet/wcf.git
    id: DefaultOpenTimeout
    path: src/System.Private.ServiceModel/src/System/ServiceModel/Channels/ChannelBase.cs
    startLine: 49
  assemblies:
  - System.ServiceModel.Primitives
  namespace: System.ServiceModel.Channels
  summary: "\n<p>Gets the default interval of time provided for an open operation to complete.</p>\n"
  syntax:
    content: protected override TimeSpan DefaultOpenTimeout { get; }
    content.vb: Protected Overrides ReadOnly Property DefaultOpenTimeout As TimeSpan
    parameters: []
    return:
      type: System.TimeSpan
      description: "\n<p>The default <xref href=\"System.TimeSpan\" data-throw-if-not-resolved=\"false\"></xref> that specifies how long the open operation has to complete before timing out.</p>\n"
  overridden: System.ServiceModel.Channels.CommunicationObject.DefaultOpenTimeout
  modifiers.csharp:
  - protected
  - override
  - get
  modifiers.vb:
  - Protected
  - Overrides
  - ReadOnly
- uid: System.ServiceModel.Channels.ChannelBase.DefaultReceiveTimeout
  commentId: P:System.ServiceModel.Channels.ChannelBase.DefaultReceiveTimeout
  id: DefaultReceiveTimeout
  parent: System.ServiceModel.Channels.ChannelBase
  langs:
  - csharp
  - vb
  name: DefaultReceiveTimeout
  nameWithType: ChannelBase.DefaultReceiveTimeout
  fullName: System.ServiceModel.Channels.ChannelBase.DefaultReceiveTimeout
  type: Property
  source:
    remote:
      path: src/System.Private.ServiceModel/src/System/ServiceModel/Channels/ChannelBase.cs
      branch: master
      repo: https://github.com/dotnet/wcf.git
    id: DefaultReceiveTimeout
    path: src/System.Private.ServiceModel/src/System/ServiceModel/Channels/ChannelBase.cs
    startLine: 54
  assemblies:
  - System.ServiceModel.Primitives
  namespace: System.ServiceModel.Channels
  summary: "\n<p>Gets the default interval of time provided for a receive operation to complete.</p>\n"
  syntax:
    content: protected TimeSpan DefaultReceiveTimeout { get; }
    content.vb: Protected ReadOnly Property DefaultReceiveTimeout As TimeSpan
    parameters: []
    return:
      type: System.TimeSpan
      description: "\n<p>The default <xref href=\"System.TimeSpan\" data-throw-if-not-resolved=\"false\"></xref> that specifies how long the receive operation has to complete before timing out.</p>\n"
  modifiers.csharp:
  - protected
  - get
  modifiers.vb:
  - Protected
  - ReadOnly
- uid: System.ServiceModel.Channels.ChannelBase.DefaultSendTimeout
  commentId: P:System.ServiceModel.Channels.ChannelBase.DefaultSendTimeout
  id: DefaultSendTimeout
  parent: System.ServiceModel.Channels.ChannelBase
  langs:
  - csharp
  - vb
  name: DefaultSendTimeout
  nameWithType: ChannelBase.DefaultSendTimeout
  fullName: System.ServiceModel.Channels.ChannelBase.DefaultSendTimeout
  type: Property
  source:
    remote:
      path: src/System.Private.ServiceModel/src/System/ServiceModel/Channels/ChannelBase.cs
      branch: master
      repo: https://github.com/dotnet/wcf.git
    id: DefaultSendTimeout
    path: src/System.Private.ServiceModel/src/System/ServiceModel/Channels/ChannelBase.cs
    startLine: 59
  assemblies:
  - System.ServiceModel.Primitives
  namespace: System.ServiceModel.Channels
  summary: "\n<p>Gets the default interval of time provided for a send operation to complete.</p>\n"
  syntax:
    content: protected TimeSpan DefaultSendTimeout { get; }
    content.vb: Protected ReadOnly Property DefaultSendTimeout As TimeSpan
    parameters: []
    return:
      type: System.TimeSpan
      description: "\n<p>The default <xref href=\"System.TimeSpan\" data-throw-if-not-resolved=\"false\"></xref> that specifies how long the send operation has to complete before timing out.</p>\n"
  modifiers.csharp:
  - protected
  - get
  modifiers.vb:
  - Protected
  - ReadOnly
- uid: System.ServiceModel.Channels.ChannelBase.Manager
  commentId: P:System.ServiceModel.Channels.ChannelBase.Manager
  id: Manager
  parent: System.ServiceModel.Channels.ChannelBase
  langs:
  - csharp
  - vb
  name: Manager
  nameWithType: ChannelBase.Manager
  fullName: System.ServiceModel.Channels.ChannelBase.Manager
  type: Property
  source:
    remote:
      path: src/System.Private.ServiceModel/src/System/ServiceModel/Channels/ChannelBase.cs
      branch: master
      repo: https://github.com/dotnet/wcf.git
    id: Manager
    path: src/System.Private.ServiceModel/src/System/ServiceModel/Channels/ChannelBase.cs
    startLine: 64
  assemblies:
  - System.ServiceModel.Primitives
  namespace: System.ServiceModel.Channels
  summary: "\n<p>Gets the channel manager that is associated with the current channel.</p>\n"
  syntax:
    content: protected ChannelManagerBase Manager { get; }
    content.vb: Protected ReadOnly Property Manager As ChannelManagerBase
    parameters: []
    return:
      type: System.ServiceModel.Channels.ChannelManagerBase
      description: "\n<p>The <xref href=\"System.ServiceModel.Channels.ChannelManagerBase\" data-throw-if-not-resolved=\"false\"></xref> that is associated with the current channel.</p>\n"
  modifiers.csharp:
  - protected
  - get
  modifiers.vb:
  - Protected
  - ReadOnly
- uid: System.ServiceModel.Channels.ChannelBase.System#ServiceModel#IDefaultCommunicationTimeouts#CloseTimeout
  commentId: P:System.ServiceModel.Channels.ChannelBase.System#ServiceModel#IDefaultCommunicationTimeouts#CloseTimeout
  id: System#ServiceModel#IDefaultCommunicationTimeouts#CloseTimeout
  isEii: true
  parent: System.ServiceModel.Channels.ChannelBase
  langs:
  - csharp
  - vb
  name: IDefaultCommunicationTimeouts.CloseTimeout
  nameWithType: ChannelBase.IDefaultCommunicationTimeouts.CloseTimeout
  fullName: System.ServiceModel.Channels.ChannelBase.System.ServiceModel.IDefaultCommunicationTimeouts.CloseTimeout
  type: Property
  source:
    remote:
      path: src/System.Private.ServiceModel/src/System/ServiceModel/Channels/ChannelBase.cs
      branch: master
      repo: https://github.com/dotnet/wcf.git
    id: System.ServiceModel.IDefaultCommunicationTimeouts.CloseTimeout
    path: src/System.Private.ServiceModel/src/System/ServiceModel/Channels/ChannelBase.cs
    startLine: 24
  assemblies:
  - System.ServiceModel.Primitives
  namespace: System.ServiceModel.Channels
  summary: "\n<p>Gets the interval of time after which the close method, invoked by a communication object, times out.</p>\n"
  syntax:
    content: TimeSpan IDefaultCommunicationTimeouts.CloseTimeout { get; }
    content.vb: ReadOnly WriteOnly Property System.ServiceModel.IDefaultCommunicationTimeouts.CloseTimeout As TimeSpan Implements IDefaultCommunicationTimeouts.CloseTimeout
    parameters: []
    return:
      type: System.TimeSpan
      description: "\n<p>The <xref href=\"System.Timespan\" data-throw-if-not-resolved=\"false\"></xref> that specifies the interval of time to wait for the close method to time out.</p>\n"
  implements:
  - System.ServiceModel.IDefaultCommunicationTimeouts.CloseTimeout
  nameWithType.vb: ChannelBase.System.ServiceModel.IDefaultCommunicationTimeouts.CloseTimeout
  modifiers.csharp:
  - get
  modifiers.vb:
  - ReadOnly
  name.vb: System.ServiceModel.IDefaultCommunicationTimeouts.CloseTimeout
- uid: System.ServiceModel.Channels.ChannelBase.System#ServiceModel#IDefaultCommunicationTimeouts#OpenTimeout
  commentId: P:System.ServiceModel.Channels.ChannelBase.System#ServiceModel#IDefaultCommunicationTimeouts#OpenTimeout
  id: System#ServiceModel#IDefaultCommunicationTimeouts#OpenTimeout
  isEii: true
  parent: System.ServiceModel.Channels.ChannelBase
  langs:
  - csharp
  - vb
  name: IDefaultCommunicationTimeouts.OpenTimeout
  nameWithType: ChannelBase.IDefaultCommunicationTimeouts.OpenTimeout
  fullName: System.ServiceModel.Channels.ChannelBase.System.ServiceModel.IDefaultCommunicationTimeouts.OpenTimeout
  type: Property
  source:
    remote:
      path: src/System.Private.ServiceModel/src/System/ServiceModel/Channels/ChannelBase.cs
      branch: master
      repo: https://github.com/dotnet/wcf.git
    id: System.ServiceModel.IDefaultCommunicationTimeouts.OpenTimeout
    path: src/System.Private.ServiceModel/src/System/ServiceModel/Channels/ChannelBase.cs
    startLine: 29
  assemblies:
  - System.ServiceModel.Primitives
  namespace: System.ServiceModel.Channels
  summary: "\n<p>Gets the interval of time after which the open method, invoked by a communication object, times out.</p>\n"
  syntax:
    content: TimeSpan IDefaultCommunicationTimeouts.OpenTimeout { get; }
    content.vb: ReadOnly WriteOnly Property System.ServiceModel.IDefaultCommunicationTimeouts.OpenTimeout As TimeSpan Implements IDefaultCommunicationTimeouts.OpenTimeout
    parameters: []
    return:
      type: System.TimeSpan
      description: "\n<p>The <xref href=\"System.Timespan\" data-throw-if-not-resolved=\"false\"></xref> that specifies the interval of time to wait for the open method to time out.</p>\n"
  implements:
  - System.ServiceModel.IDefaultCommunicationTimeouts.OpenTimeout
  nameWithType.vb: ChannelBase.System.ServiceModel.IDefaultCommunicationTimeouts.OpenTimeout
  modifiers.csharp:
  - get
  modifiers.vb:
  - ReadOnly
  name.vb: System.ServiceModel.IDefaultCommunicationTimeouts.OpenTimeout
- uid: System.ServiceModel.Channels.ChannelBase.System#ServiceModel#IDefaultCommunicationTimeouts#ReceiveTimeout
  commentId: P:System.ServiceModel.Channels.ChannelBase.System#ServiceModel#IDefaultCommunicationTimeouts#ReceiveTimeout
  id: System#ServiceModel#IDefaultCommunicationTimeouts#ReceiveTimeout
  isEii: true
  parent: System.ServiceModel.Channels.ChannelBase
  langs:
  - csharp
  - vb
  name: IDefaultCommunicationTimeouts.ReceiveTimeout
  nameWithType: ChannelBase.IDefaultCommunicationTimeouts.ReceiveTimeout
  fullName: System.ServiceModel.Channels.ChannelBase.System.ServiceModel.IDefaultCommunicationTimeouts.ReceiveTimeout
  type: Property
  source:
    remote:
      path: src/System.Private.ServiceModel/src/System/ServiceModel/Channels/ChannelBase.cs
      branch: master
      repo: https://github.com/dotnet/wcf.git
    id: System.ServiceModel.IDefaultCommunicationTimeouts.ReceiveTimeout
    path: src/System.Private.ServiceModel/src/System/ServiceModel/Channels/ChannelBase.cs
    startLine: 34
  assemblies:
  - System.ServiceModel.Primitives
  namespace: System.ServiceModel.Channels
  summary: "\n<p>Gets the interval of time after which the receive method, invoked by a communication object, times out.</p>\n"
  syntax:
    content: TimeSpan IDefaultCommunicationTimeouts.ReceiveTimeout { get; }
    content.vb: ReadOnly WriteOnly Property System.ServiceModel.IDefaultCommunicationTimeouts.ReceiveTimeout As TimeSpan Implements IDefaultCommunicationTimeouts.ReceiveTimeout
    parameters: []
    return:
      type: System.TimeSpan
      description: "\n<p>The <xref href=\"System.Timespan\" data-throw-if-not-resolved=\"false\"></xref> that specifies the interval of time to wait for the receive method to time out.</p>\n"
  implements:
  - System.ServiceModel.IDefaultCommunicationTimeouts.ReceiveTimeout
  nameWithType.vb: ChannelBase.System.ServiceModel.IDefaultCommunicationTimeouts.ReceiveTimeout
  modifiers.csharp:
  - get
  modifiers.vb:
  - ReadOnly
  name.vb: System.ServiceModel.IDefaultCommunicationTimeouts.ReceiveTimeout
- uid: System.ServiceModel.Channels.ChannelBase.System#ServiceModel#IDefaultCommunicationTimeouts#SendTimeout
  commentId: P:System.ServiceModel.Channels.ChannelBase.System#ServiceModel#IDefaultCommunicationTimeouts#SendTimeout
  id: System#ServiceModel#IDefaultCommunicationTimeouts#SendTimeout
  isEii: true
  parent: System.ServiceModel.Channels.ChannelBase
  langs:
  - csharp
  - vb
  name: IDefaultCommunicationTimeouts.SendTimeout
  nameWithType: ChannelBase.IDefaultCommunicationTimeouts.SendTimeout
  fullName: System.ServiceModel.Channels.ChannelBase.System.ServiceModel.IDefaultCommunicationTimeouts.SendTimeout
  type: Property
  source:
    remote:
      path: src/System.Private.ServiceModel/src/System/ServiceModel/Channels/ChannelBase.cs
      branch: master
      repo: https://github.com/dotnet/wcf.git
    id: System.ServiceModel.IDefaultCommunicationTimeouts.SendTimeout
    path: src/System.Private.ServiceModel/src/System/ServiceModel/Channels/ChannelBase.cs
    startLine: 39
  assemblies:
  - System.ServiceModel.Primitives
  namespace: System.ServiceModel.Channels
  summary: "\n<p>Gets the interval of time after which the send method, invoked by a communication object, times out.</p>\n"
  syntax:
    content: TimeSpan IDefaultCommunicationTimeouts.SendTimeout { get; }
    content.vb: ReadOnly WriteOnly Property System.ServiceModel.IDefaultCommunicationTimeouts.SendTimeout As TimeSpan Implements IDefaultCommunicationTimeouts.SendTimeout
    parameters: []
    return:
      type: System.TimeSpan
      description: "\n<p>The <xref href=\"System.Timespan\" data-throw-if-not-resolved=\"false\"></xref> that specifies the interval of time to wait for the send method to time out.</p>\n"
  implements:
  - System.ServiceModel.IDefaultCommunicationTimeouts.SendTimeout
  nameWithType.vb: ChannelBase.System.ServiceModel.IDefaultCommunicationTimeouts.SendTimeout
  modifiers.csharp:
  - get
  modifiers.vb:
  - ReadOnly
  name.vb: System.ServiceModel.IDefaultCommunicationTimeouts.SendTimeout
- uid: System.ServiceModel.Channels.ChannelBase.GetProperty``1
  commentId: M:System.ServiceModel.Channels.ChannelBase.GetProperty``1
  id: GetProperty``1
  parent: System.ServiceModel.Channels.ChannelBase
  langs:
  - csharp
  - vb
  name: GetProperty<T>()
  nameWithType: ChannelBase.GetProperty<T>()
  fullName: System.ServiceModel.Channels.ChannelBase.GetProperty<T>()
  type: Method
  source:
    remote:
      path: src/System.Private.ServiceModel/src/System/ServiceModel/Channels/ChannelBase.cs
      branch: master
      repo: https://github.com/dotnet/wcf.git
    id: GetProperty
    path: src/System.Private.ServiceModel/src/System/ServiceModel/Channels/ChannelBase.cs
    startLine: 72
  assemblies:
  - System.ServiceModel.Primitives
  namespace: System.ServiceModel.Channels
  summary: "\n<p>Returns the typed object requested, if present, from the appropriate layer in the channel stack.</p>\n"
  syntax:
    content: 'public virtual T GetProperty<T>()where T : class'
    content.vb: Public Overridable Function GetProperty(Of T As Class) As T
    typeParameters:
    - id: T
      description: "\n<p>The typed object for which the method is querying.</p>\n"
    return:
      type: '{T}'
      description: "\n<p>The typed object <em>T</em> requested, if it is present, or <strong>null</strong>, if it is not.</p>\n"
  implements:
  - System.ServiceModel.Channels.IChannel.GetProperty``1
  nameWithType.vb: ChannelBase.GetProperty(Of T)()
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
  fullName.vb: System.ServiceModel.Channels.ChannelBase.GetProperty(Of T)()
  name.vb: GetProperty(Of T)()
- uid: System.ServiceModel.Channels.ChannelBase.OnClosed
  commentId: M:System.ServiceModel.Channels.ChannelBase.OnClosed
  id: OnClosed
  parent: System.ServiceModel.Channels.ChannelBase
  langs:
  - csharp
  - vb
  name: OnClosed()
  nameWithType: ChannelBase.OnClosed()
  fullName: System.ServiceModel.Channels.ChannelBase.OnClosed()
  type: Method
  source:
    remote:
      path: src/System.Private.ServiceModel/src/System/ServiceModel/Channels/ChannelBase.cs
      branch: master
      repo: https://github.com/dotnet/wcf.git
    id: OnClosed
    path: src/System.Private.ServiceModel/src/System/ServiceModel/Channels/ChannelBase.cs
    startLine: 89
  assemblies:
  - System.ServiceModel.Primitives
  namespace: System.ServiceModel.Channels
  summary: "\n<p>Uses diagnostic tracing during the transition into the closing state.</p>\n"
  syntax:
    content: protected override void OnClosed()
    content.vb: Protected Overrides Sub OnClosed
  overridden: System.ServiceModel.Channels.CommunicationObject.OnClosed
  modifiers.csharp:
  - protected
  - override
  modifiers.vb:
  - Protected
  - Overrides
references:
- uid: System.ServiceModel.Channels
  commentId: N:System.ServiceModel.Channels
  isExternal: false
  name: System.ServiceModel.Channels
  nameWithType: System.ServiceModel.Channels
  fullName: System.ServiceModel.Channels
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: false
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.ServiceModel.Channels.CommunicationObject
  commentId: T:System.ServiceModel.Channels.CommunicationObject
  parent: System.ServiceModel.Channels
  isExternal: false
  name: CommunicationObject
  nameWithType: CommunicationObject
  fullName: System.ServiceModel.Channels.CommunicationObject
- uid: System.ServiceModel.Channels.IChannel
  commentId: T:System.ServiceModel.Channels.IChannel
  parent: System.ServiceModel.Channels
  isExternal: false
  name: IChannel
  nameWithType: IChannel
  fullName: System.ServiceModel.Channels.IChannel
- uid: System.ServiceModel.ICommunicationObject
  commentId: T:System.ServiceModel.ICommunicationObject
  parent: System.ServiceModel
  isExternal: false
  name: ICommunicationObject
  nameWithType: ICommunicationObject
  fullName: System.ServiceModel.ICommunicationObject
- uid: System.ServiceModel.IDefaultCommunicationTimeouts
  commentId: T:System.ServiceModel.IDefaultCommunicationTimeouts
  parent: System.ServiceModel
  isExternal: false
  name: IDefaultCommunicationTimeouts
  nameWithType: IDefaultCommunicationTimeouts
  fullName: System.ServiceModel.IDefaultCommunicationTimeouts
- uid: System.ServiceModel.Channels.CommunicationObject.IsDisposed
  commentId: P:System.ServiceModel.Channels.CommunicationObject.IsDisposed
  parent: System.ServiceModel.Channels.CommunicationObject
  isExternal: false
  name: IsDisposed
  nameWithType: CommunicationObject.IsDisposed
  fullName: System.ServiceModel.Channels.CommunicationObject.IsDisposed
- uid: System.ServiceModel.Channels.CommunicationObject.State
  commentId: P:System.ServiceModel.Channels.CommunicationObject.State
  parent: System.ServiceModel.Channels.CommunicationObject
  isExternal: false
  name: State
  nameWithType: CommunicationObject.State
  fullName: System.ServiceModel.Channels.CommunicationObject.State
- uid: System.ServiceModel.Channels.CommunicationObject.ThisLock
  commentId: P:System.ServiceModel.Channels.CommunicationObject.ThisLock
  parent: System.ServiceModel.Channels.CommunicationObject
  isExternal: false
  name: ThisLock
  nameWithType: CommunicationObject.ThisLock
  fullName: System.ServiceModel.Channels.CommunicationObject.ThisLock
- uid: System.ServiceModel.Channels.CommunicationObject.Closed
  commentId: E:System.ServiceModel.Channels.CommunicationObject.Closed
  parent: System.ServiceModel.Channels.CommunicationObject
  isExternal: false
  name: Closed
  nameWithType: CommunicationObject.Closed
  fullName: System.ServiceModel.Channels.CommunicationObject.Closed
- uid: System.ServiceModel.Channels.CommunicationObject.Closing
  commentId: E:System.ServiceModel.Channels.CommunicationObject.Closing
  parent: System.ServiceModel.Channels.CommunicationObject
  isExternal: false
  name: Closing
  nameWithType: CommunicationObject.Closing
  fullName: System.ServiceModel.Channels.CommunicationObject.Closing
- uid: System.ServiceModel.Channels.CommunicationObject.Faulted
  commentId: E:System.ServiceModel.Channels.CommunicationObject.Faulted
  parent: System.ServiceModel.Channels.CommunicationObject
  isExternal: false
  name: Faulted
  nameWithType: CommunicationObject.Faulted
  fullName: System.ServiceModel.Channels.CommunicationObject.Faulted
- uid: System.ServiceModel.Channels.CommunicationObject.Opened
  commentId: E:System.ServiceModel.Channels.CommunicationObject.Opened
  parent: System.ServiceModel.Channels.CommunicationObject
  isExternal: false
  name: Opened
  nameWithType: CommunicationObject.Opened
  fullName: System.ServiceModel.Channels.CommunicationObject.Opened
- uid: System.ServiceModel.Channels.CommunicationObject.Opening
  commentId: E:System.ServiceModel.Channels.CommunicationObject.Opening
  parent: System.ServiceModel.Channels.CommunicationObject
  isExternal: false
  name: Opening
  nameWithType: CommunicationObject.Opening
  fullName: System.ServiceModel.Channels.CommunicationObject.Opening
- uid: System.ServiceModel.Channels.CommunicationObject.Abort
  commentId: M:System.ServiceModel.Channels.CommunicationObject.Abort
  parent: System.ServiceModel.Channels.CommunicationObject
  isExternal: false
  name: Abort()
  nameWithType: CommunicationObject.Abort()
  fullName: System.ServiceModel.Channels.CommunicationObject.Abort()
  spec.csharp:
  - uid: System.ServiceModel.Channels.CommunicationObject.Abort
    name: Abort
    nameWithType: CommunicationObject.Abort
    fullName: System.ServiceModel.Channels.CommunicationObject.Abort
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.ServiceModel.Channels.CommunicationObject.Abort
    name: Abort
    nameWithType: CommunicationObject.Abort
    fullName: System.ServiceModel.Channels.CommunicationObject.Abort
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.ServiceModel.Channels.CommunicationObject.BeginClose(System.AsyncCallback,System.Object)
  commentId: M:System.ServiceModel.Channels.CommunicationObject.BeginClose(System.AsyncCallback,System.Object)
  parent: System.ServiceModel.Channels.CommunicationObject
  isExternal: true
  name: BeginClose(AsyncCallback, Object)
  nameWithType: CommunicationObject.BeginClose(AsyncCallback, Object)
  fullName: System.ServiceModel.Channels.CommunicationObject.BeginClose(System.AsyncCallback, System.Object)
  spec.csharp:
  - uid: System.ServiceModel.Channels.CommunicationObject.BeginClose(System.AsyncCallback,System.Object)
    name: BeginClose
    nameWithType: CommunicationObject.BeginClose
    fullName: System.ServiceModel.Channels.CommunicationObject.BeginClose
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.AsyncCallback
    name: AsyncCallback
    nameWithType: AsyncCallback
    fullName: System.AsyncCallback
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.ServiceModel.Channels.CommunicationObject.BeginClose(System.AsyncCallback,System.Object)
    name: BeginClose
    nameWithType: CommunicationObject.BeginClose
    fullName: System.ServiceModel.Channels.CommunicationObject.BeginClose
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.AsyncCallback
    name: AsyncCallback
    nameWithType: AsyncCallback
    fullName: System.AsyncCallback
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.ServiceModel.Channels.CommunicationObject.BeginClose(System.TimeSpan,System.AsyncCallback,System.Object)
  commentId: M:System.ServiceModel.Channels.CommunicationObject.BeginClose(System.TimeSpan,System.AsyncCallback,System.Object)
  parent: System.ServiceModel.Channels.CommunicationObject
  isExternal: true
  name: BeginClose(TimeSpan, AsyncCallback, Object)
  nameWithType: CommunicationObject.BeginClose(TimeSpan, AsyncCallback, Object)
  fullName: System.ServiceModel.Channels.CommunicationObject.BeginClose(System.TimeSpan, System.AsyncCallback, System.Object)
  spec.csharp:
  - uid: System.ServiceModel.Channels.CommunicationObject.BeginClose(System.TimeSpan,System.AsyncCallback,System.Object)
    name: BeginClose
    nameWithType: CommunicationObject.BeginClose
    fullName: System.ServiceModel.Channels.CommunicationObject.BeginClose
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.TimeSpan
    name: TimeSpan
    nameWithType: TimeSpan
    fullName: System.TimeSpan
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.AsyncCallback
    name: AsyncCallback
    nameWithType: AsyncCallback
    fullName: System.AsyncCallback
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.ServiceModel.Channels.CommunicationObject.BeginClose(System.TimeSpan,System.AsyncCallback,System.Object)
    name: BeginClose
    nameWithType: CommunicationObject.BeginClose
    fullName: System.ServiceModel.Channels.CommunicationObject.BeginClose
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.TimeSpan
    name: TimeSpan
    nameWithType: TimeSpan
    fullName: System.TimeSpan
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.AsyncCallback
    name: AsyncCallback
    nameWithType: AsyncCallback
    fullName: System.AsyncCallback
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.ServiceModel.Channels.CommunicationObject.BeginOpen(System.AsyncCallback,System.Object)
  commentId: M:System.ServiceModel.Channels.CommunicationObject.BeginOpen(System.AsyncCallback,System.Object)
  parent: System.ServiceModel.Channels.CommunicationObject
  isExternal: true
  name: BeginOpen(AsyncCallback, Object)
  nameWithType: CommunicationObject.BeginOpen(AsyncCallback, Object)
  fullName: System.ServiceModel.Channels.CommunicationObject.BeginOpen(System.AsyncCallback, System.Object)
  spec.csharp:
  - uid: System.ServiceModel.Channels.CommunicationObject.BeginOpen(System.AsyncCallback,System.Object)
    name: BeginOpen
    nameWithType: CommunicationObject.BeginOpen
    fullName: System.ServiceModel.Channels.CommunicationObject.BeginOpen
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.AsyncCallback
    name: AsyncCallback
    nameWithType: AsyncCallback
    fullName: System.AsyncCallback
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.ServiceModel.Channels.CommunicationObject.BeginOpen(System.AsyncCallback,System.Object)
    name: BeginOpen
    nameWithType: CommunicationObject.BeginOpen
    fullName: System.ServiceModel.Channels.CommunicationObject.BeginOpen
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.AsyncCallback
    name: AsyncCallback
    nameWithType: AsyncCallback
    fullName: System.AsyncCallback
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.ServiceModel.Channels.CommunicationObject.BeginOpen(System.TimeSpan,System.AsyncCallback,System.Object)
  commentId: M:System.ServiceModel.Channels.CommunicationObject.BeginOpen(System.TimeSpan,System.AsyncCallback,System.Object)
  parent: System.ServiceModel.Channels.CommunicationObject
  isExternal: true
  name: BeginOpen(TimeSpan, AsyncCallback, Object)
  nameWithType: CommunicationObject.BeginOpen(TimeSpan, AsyncCallback, Object)
  fullName: System.ServiceModel.Channels.CommunicationObject.BeginOpen(System.TimeSpan, System.AsyncCallback, System.Object)
  spec.csharp:
  - uid: System.ServiceModel.Channels.CommunicationObject.BeginOpen(System.TimeSpan,System.AsyncCallback,System.Object)
    name: BeginOpen
    nameWithType: CommunicationObject.BeginOpen
    fullName: System.ServiceModel.Channels.CommunicationObject.BeginOpen
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.TimeSpan
    name: TimeSpan
    nameWithType: TimeSpan
    fullName: System.TimeSpan
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.AsyncCallback
    name: AsyncCallback
    nameWithType: AsyncCallback
    fullName: System.AsyncCallback
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.ServiceModel.Channels.CommunicationObject.BeginOpen(System.TimeSpan,System.AsyncCallback,System.Object)
    name: BeginOpen
    nameWithType: CommunicationObject.BeginOpen
    fullName: System.ServiceModel.Channels.CommunicationObject.BeginOpen
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.TimeSpan
    name: TimeSpan
    nameWithType: TimeSpan
    fullName: System.TimeSpan
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.AsyncCallback
    name: AsyncCallback
    nameWithType: AsyncCallback
    fullName: System.AsyncCallback
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.ServiceModel.Channels.CommunicationObject.Close
  commentId: M:System.ServiceModel.Channels.CommunicationObject.Close
  parent: System.ServiceModel.Channels.CommunicationObject
  isExternal: false
  name: Close()
  nameWithType: CommunicationObject.Close()
  fullName: System.ServiceModel.Channels.CommunicationObject.Close()
  spec.csharp:
  - uid: System.ServiceModel.Channels.CommunicationObject.Close
    name: Close
    nameWithType: CommunicationObject.Close
    fullName: System.ServiceModel.Channels.CommunicationObject.Close
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.ServiceModel.Channels.CommunicationObject.Close
    name: Close
    nameWithType: CommunicationObject.Close
    fullName: System.ServiceModel.Channels.CommunicationObject.Close
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.ServiceModel.Channels.CommunicationObject.Close(System.TimeSpan)
  commentId: M:System.ServiceModel.Channels.CommunicationObject.Close(System.TimeSpan)
  parent: System.ServiceModel.Channels.CommunicationObject
  isExternal: true
  name: Close(TimeSpan)
  nameWithType: CommunicationObject.Close(TimeSpan)
  fullName: System.ServiceModel.Channels.CommunicationObject.Close(System.TimeSpan)
  spec.csharp:
  - uid: System.ServiceModel.Channels.CommunicationObject.Close(System.TimeSpan)
    name: Close
    nameWithType: CommunicationObject.Close
    fullName: System.ServiceModel.Channels.CommunicationObject.Close
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.TimeSpan
    name: TimeSpan
    nameWithType: TimeSpan
    fullName: System.TimeSpan
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.ServiceModel.Channels.CommunicationObject.Close(System.TimeSpan)
    name: Close
    nameWithType: CommunicationObject.Close
    fullName: System.ServiceModel.Channels.CommunicationObject.Close
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.TimeSpan
    name: TimeSpan
    nameWithType: TimeSpan
    fullName: System.TimeSpan
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.ServiceModel.Channels.CommunicationObject.EndClose(System.IAsyncResult)
  commentId: M:System.ServiceModel.Channels.CommunicationObject.EndClose(System.IAsyncResult)
  parent: System.ServiceModel.Channels.CommunicationObject
  isExternal: true
  name: EndClose(IAsyncResult)
  nameWithType: CommunicationObject.EndClose(IAsyncResult)
  fullName: System.ServiceModel.Channels.CommunicationObject.EndClose(System.IAsyncResult)
  spec.csharp:
  - uid: System.ServiceModel.Channels.CommunicationObject.EndClose(System.IAsyncResult)
    name: EndClose
    nameWithType: CommunicationObject.EndClose
    fullName: System.ServiceModel.Channels.CommunicationObject.EndClose
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.IAsyncResult
    name: IAsyncResult
    nameWithType: IAsyncResult
    fullName: System.IAsyncResult
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.ServiceModel.Channels.CommunicationObject.EndClose(System.IAsyncResult)
    name: EndClose
    nameWithType: CommunicationObject.EndClose
    fullName: System.ServiceModel.Channels.CommunicationObject.EndClose
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.IAsyncResult
    name: IAsyncResult
    nameWithType: IAsyncResult
    fullName: System.IAsyncResult
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.ServiceModel.Channels.CommunicationObject.EndOpen(System.IAsyncResult)
  commentId: M:System.ServiceModel.Channels.CommunicationObject.EndOpen(System.IAsyncResult)
  parent: System.ServiceModel.Channels.CommunicationObject
  isExternal: true
  name: EndOpen(IAsyncResult)
  nameWithType: CommunicationObject.EndOpen(IAsyncResult)
  fullName: System.ServiceModel.Channels.CommunicationObject.EndOpen(System.IAsyncResult)
  spec.csharp:
  - uid: System.ServiceModel.Channels.CommunicationObject.EndOpen(System.IAsyncResult)
    name: EndOpen
    nameWithType: CommunicationObject.EndOpen
    fullName: System.ServiceModel.Channels.CommunicationObject.EndOpen
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.IAsyncResult
    name: IAsyncResult
    nameWithType: IAsyncResult
    fullName: System.IAsyncResult
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.ServiceModel.Channels.CommunicationObject.EndOpen(System.IAsyncResult)
    name: EndOpen
    nameWithType: CommunicationObject.EndOpen
    fullName: System.ServiceModel.Channels.CommunicationObject.EndOpen
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.IAsyncResult
    name: IAsyncResult
    nameWithType: IAsyncResult
    fullName: System.IAsyncResult
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.ServiceModel.Channels.CommunicationObject.Fault
  commentId: M:System.ServiceModel.Channels.CommunicationObject.Fault
  parent: System.ServiceModel.Channels.CommunicationObject
  isExternal: false
  name: Fault()
  nameWithType: CommunicationObject.Fault()
  fullName: System.ServiceModel.Channels.CommunicationObject.Fault()
  spec.csharp:
  - uid: System.ServiceModel.Channels.CommunicationObject.Fault
    name: Fault
    nameWithType: CommunicationObject.Fault
    fullName: System.ServiceModel.Channels.CommunicationObject.Fault
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.ServiceModel.Channels.CommunicationObject.Fault
    name: Fault
    nameWithType: CommunicationObject.Fault
    fullName: System.ServiceModel.Channels.CommunicationObject.Fault
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.ServiceModel.Channels.CommunicationObject.GetCommunicationObjectType
  commentId: M:System.ServiceModel.Channels.CommunicationObject.GetCommunicationObjectType
  parent: System.ServiceModel.Channels.CommunicationObject
  isExternal: false
  name: GetCommunicationObjectType()
  nameWithType: CommunicationObject.GetCommunicationObjectType()
  fullName: System.ServiceModel.Channels.CommunicationObject.GetCommunicationObjectType()
  spec.csharp:
  - uid: System.ServiceModel.Channels.CommunicationObject.GetCommunicationObjectType
    name: GetCommunicationObjectType
    nameWithType: CommunicationObject.GetCommunicationObjectType
    fullName: System.ServiceModel.Channels.CommunicationObject.GetCommunicationObjectType
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.ServiceModel.Channels.CommunicationObject.GetCommunicationObjectType
    name: GetCommunicationObjectType
    nameWithType: CommunicationObject.GetCommunicationObjectType
    fullName: System.ServiceModel.Channels.CommunicationObject.GetCommunicationObjectType
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.ServiceModel.Channels.CommunicationObject.OnAbort
  commentId: M:System.ServiceModel.Channels.CommunicationObject.OnAbort
  parent: System.ServiceModel.Channels.CommunicationObject
  isExternal: false
  name: OnAbort()
  nameWithType: CommunicationObject.OnAbort()
  fullName: System.ServiceModel.Channels.CommunicationObject.OnAbort()
  spec.csharp:
  - uid: System.ServiceModel.Channels.CommunicationObject.OnAbort
    name: OnAbort
    nameWithType: CommunicationObject.OnAbort
    fullName: System.ServiceModel.Channels.CommunicationObject.OnAbort
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.ServiceModel.Channels.CommunicationObject.OnAbort
    name: OnAbort
    nameWithType: CommunicationObject.OnAbort
    fullName: System.ServiceModel.Channels.CommunicationObject.OnAbort
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.ServiceModel.Channels.CommunicationObject.OnBeginClose(System.TimeSpan,System.AsyncCallback,System.Object)
  commentId: M:System.ServiceModel.Channels.CommunicationObject.OnBeginClose(System.TimeSpan,System.AsyncCallback,System.Object)
  parent: System.ServiceModel.Channels.CommunicationObject
  isExternal: true
  name: OnBeginClose(TimeSpan, AsyncCallback, Object)
  nameWithType: CommunicationObject.OnBeginClose(TimeSpan, AsyncCallback, Object)
  fullName: System.ServiceModel.Channels.CommunicationObject.OnBeginClose(System.TimeSpan, System.AsyncCallback, System.Object)
  spec.csharp:
  - uid: System.ServiceModel.Channels.CommunicationObject.OnBeginClose(System.TimeSpan,System.AsyncCallback,System.Object)
    name: OnBeginClose
    nameWithType: CommunicationObject.OnBeginClose
    fullName: System.ServiceModel.Channels.CommunicationObject.OnBeginClose
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.TimeSpan
    name: TimeSpan
    nameWithType: TimeSpan
    fullName: System.TimeSpan
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.AsyncCallback
    name: AsyncCallback
    nameWithType: AsyncCallback
    fullName: System.AsyncCallback
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.ServiceModel.Channels.CommunicationObject.OnBeginClose(System.TimeSpan,System.AsyncCallback,System.Object)
    name: OnBeginClose
    nameWithType: CommunicationObject.OnBeginClose
    fullName: System.ServiceModel.Channels.CommunicationObject.OnBeginClose
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.TimeSpan
    name: TimeSpan
    nameWithType: TimeSpan
    fullName: System.TimeSpan
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.AsyncCallback
    name: AsyncCallback
    nameWithType: AsyncCallback
    fullName: System.AsyncCallback
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.ServiceModel.Channels.CommunicationObject.OnBeginOpen(System.TimeSpan,System.AsyncCallback,System.Object)
  commentId: M:System.ServiceModel.Channels.CommunicationObject.OnBeginOpen(System.TimeSpan,System.AsyncCallback,System.Object)
  parent: System.ServiceModel.Channels.CommunicationObject
  isExternal: true
  name: OnBeginOpen(TimeSpan, AsyncCallback, Object)
  nameWithType: CommunicationObject.OnBeginOpen(TimeSpan, AsyncCallback, Object)
  fullName: System.ServiceModel.Channels.CommunicationObject.OnBeginOpen(System.TimeSpan, System.AsyncCallback, System.Object)
  spec.csharp:
  - uid: System.ServiceModel.Channels.CommunicationObject.OnBeginOpen(System.TimeSpan,System.AsyncCallback,System.Object)
    name: OnBeginOpen
    nameWithType: CommunicationObject.OnBeginOpen
    fullName: System.ServiceModel.Channels.CommunicationObject.OnBeginOpen
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.TimeSpan
    name: TimeSpan
    nameWithType: TimeSpan
    fullName: System.TimeSpan
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.AsyncCallback
    name: AsyncCallback
    nameWithType: AsyncCallback
    fullName: System.AsyncCallback
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.ServiceModel.Channels.CommunicationObject.OnBeginOpen(System.TimeSpan,System.AsyncCallback,System.Object)
    name: OnBeginOpen
    nameWithType: CommunicationObject.OnBeginOpen
    fullName: System.ServiceModel.Channels.CommunicationObject.OnBeginOpen
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.TimeSpan
    name: TimeSpan
    nameWithType: TimeSpan
    fullName: System.TimeSpan
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.AsyncCallback
    name: AsyncCallback
    nameWithType: AsyncCallback
    fullName: System.AsyncCallback
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.ServiceModel.Channels.CommunicationObject.OnClose(System.TimeSpan)
  commentId: M:System.ServiceModel.Channels.CommunicationObject.OnClose(System.TimeSpan)
  parent: System.ServiceModel.Channels.CommunicationObject
  isExternal: true
  name: OnClose(TimeSpan)
  nameWithType: CommunicationObject.OnClose(TimeSpan)
  fullName: System.ServiceModel.Channels.CommunicationObject.OnClose(System.TimeSpan)
  spec.csharp:
  - uid: System.ServiceModel.Channels.CommunicationObject.OnClose(System.TimeSpan)
    name: OnClose
    nameWithType: CommunicationObject.OnClose
    fullName: System.ServiceModel.Channels.CommunicationObject.OnClose
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.TimeSpan
    name: TimeSpan
    nameWithType: TimeSpan
    fullName: System.TimeSpan
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.ServiceModel.Channels.CommunicationObject.OnClose(System.TimeSpan)
    name: OnClose
    nameWithType: CommunicationObject.OnClose
    fullName: System.ServiceModel.Channels.CommunicationObject.OnClose
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.TimeSpan
    name: TimeSpan
    nameWithType: TimeSpan
    fullName: System.TimeSpan
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.ServiceModel.Channels.CommunicationObject.OnClosing
  commentId: M:System.ServiceModel.Channels.CommunicationObject.OnClosing
  parent: System.ServiceModel.Channels.CommunicationObject
  isExternal: false
  name: OnClosing()
  nameWithType: CommunicationObject.OnClosing()
  fullName: System.ServiceModel.Channels.CommunicationObject.OnClosing()
  spec.csharp:
  - uid: System.ServiceModel.Channels.CommunicationObject.OnClosing
    name: OnClosing
    nameWithType: CommunicationObject.OnClosing
    fullName: System.ServiceModel.Channels.CommunicationObject.OnClosing
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.ServiceModel.Channels.CommunicationObject.OnClosing
    name: OnClosing
    nameWithType: CommunicationObject.OnClosing
    fullName: System.ServiceModel.Channels.CommunicationObject.OnClosing
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.ServiceModel.Channels.CommunicationObject.OnEndClose(System.IAsyncResult)
  commentId: M:System.ServiceModel.Channels.CommunicationObject.OnEndClose(System.IAsyncResult)
  parent: System.ServiceModel.Channels.CommunicationObject
  isExternal: true
  name: OnEndClose(IAsyncResult)
  nameWithType: CommunicationObject.OnEndClose(IAsyncResult)
  fullName: System.ServiceModel.Channels.CommunicationObject.OnEndClose(System.IAsyncResult)
  spec.csharp:
  - uid: System.ServiceModel.Channels.CommunicationObject.OnEndClose(System.IAsyncResult)
    name: OnEndClose
    nameWithType: CommunicationObject.OnEndClose
    fullName: System.ServiceModel.Channels.CommunicationObject.OnEndClose
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.IAsyncResult
    name: IAsyncResult
    nameWithType: IAsyncResult
    fullName: System.IAsyncResult
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.ServiceModel.Channels.CommunicationObject.OnEndClose(System.IAsyncResult)
    name: OnEndClose
    nameWithType: CommunicationObject.OnEndClose
    fullName: System.ServiceModel.Channels.CommunicationObject.OnEndClose
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.IAsyncResult
    name: IAsyncResult
    nameWithType: IAsyncResult
    fullName: System.IAsyncResult
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.ServiceModel.Channels.CommunicationObject.OnEndOpen(System.IAsyncResult)
  commentId: M:System.ServiceModel.Channels.CommunicationObject.OnEndOpen(System.IAsyncResult)
  parent: System.ServiceModel.Channels.CommunicationObject
  isExternal: true
  name: OnEndOpen(IAsyncResult)
  nameWithType: CommunicationObject.OnEndOpen(IAsyncResult)
  fullName: System.ServiceModel.Channels.CommunicationObject.OnEndOpen(System.IAsyncResult)
  spec.csharp:
  - uid: System.ServiceModel.Channels.CommunicationObject.OnEndOpen(System.IAsyncResult)
    name: OnEndOpen
    nameWithType: CommunicationObject.OnEndOpen
    fullName: System.ServiceModel.Channels.CommunicationObject.OnEndOpen
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.IAsyncResult
    name: IAsyncResult
    nameWithType: IAsyncResult
    fullName: System.IAsyncResult
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.ServiceModel.Channels.CommunicationObject.OnEndOpen(System.IAsyncResult)
    name: OnEndOpen
    nameWithType: CommunicationObject.OnEndOpen
    fullName: System.ServiceModel.Channels.CommunicationObject.OnEndOpen
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.IAsyncResult
    name: IAsyncResult
    nameWithType: IAsyncResult
    fullName: System.IAsyncResult
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.ServiceModel.Channels.CommunicationObject.OnFaulted
  commentId: M:System.ServiceModel.Channels.CommunicationObject.OnFaulted
  parent: System.ServiceModel.Channels.CommunicationObject
  isExternal: false
  name: OnFaulted()
  nameWithType: CommunicationObject.OnFaulted()
  fullName: System.ServiceModel.Channels.CommunicationObject.OnFaulted()
  spec.csharp:
  - uid: System.ServiceModel.Channels.CommunicationObject.OnFaulted
    name: OnFaulted
    nameWithType: CommunicationObject.OnFaulted
    fullName: System.ServiceModel.Channels.CommunicationObject.OnFaulted
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.ServiceModel.Channels.CommunicationObject.OnFaulted
    name: OnFaulted
    nameWithType: CommunicationObject.OnFaulted
    fullName: System.ServiceModel.Channels.CommunicationObject.OnFaulted
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.ServiceModel.Channels.CommunicationObject.OnOpen(System.TimeSpan)
  commentId: M:System.ServiceModel.Channels.CommunicationObject.OnOpen(System.TimeSpan)
  parent: System.ServiceModel.Channels.CommunicationObject
  isExternal: true
  name: OnOpen(TimeSpan)
  nameWithType: CommunicationObject.OnOpen(TimeSpan)
  fullName: System.ServiceModel.Channels.CommunicationObject.OnOpen(System.TimeSpan)
  spec.csharp:
  - uid: System.ServiceModel.Channels.CommunicationObject.OnOpen(System.TimeSpan)
    name: OnOpen
    nameWithType: CommunicationObject.OnOpen
    fullName: System.ServiceModel.Channels.CommunicationObject.OnOpen
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.TimeSpan
    name: TimeSpan
    nameWithType: TimeSpan
    fullName: System.TimeSpan
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.ServiceModel.Channels.CommunicationObject.OnOpen(System.TimeSpan)
    name: OnOpen
    nameWithType: CommunicationObject.OnOpen
    fullName: System.ServiceModel.Channels.CommunicationObject.OnOpen
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.TimeSpan
    name: TimeSpan
    nameWithType: TimeSpan
    fullName: System.TimeSpan
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.ServiceModel.Channels.CommunicationObject.OnOpened
  commentId: M:System.ServiceModel.Channels.CommunicationObject.OnOpened
  parent: System.ServiceModel.Channels.CommunicationObject
  isExternal: false
  name: OnOpened()
  nameWithType: CommunicationObject.OnOpened()
  fullName: System.ServiceModel.Channels.CommunicationObject.OnOpened()
  spec.csharp:
  - uid: System.ServiceModel.Channels.CommunicationObject.OnOpened
    name: OnOpened
    nameWithType: CommunicationObject.OnOpened
    fullName: System.ServiceModel.Channels.CommunicationObject.OnOpened
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.ServiceModel.Channels.CommunicationObject.OnOpened
    name: OnOpened
    nameWithType: CommunicationObject.OnOpened
    fullName: System.ServiceModel.Channels.CommunicationObject.OnOpened
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.ServiceModel.Channels.CommunicationObject.OnOpening
  commentId: M:System.ServiceModel.Channels.CommunicationObject.OnOpening
  parent: System.ServiceModel.Channels.CommunicationObject
  isExternal: false
  name: OnOpening()
  nameWithType: CommunicationObject.OnOpening()
  fullName: System.ServiceModel.Channels.CommunicationObject.OnOpening()
  spec.csharp:
  - uid: System.ServiceModel.Channels.CommunicationObject.OnOpening
    name: OnOpening
    nameWithType: CommunicationObject.OnOpening
    fullName: System.ServiceModel.Channels.CommunicationObject.OnOpening
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.ServiceModel.Channels.CommunicationObject.OnOpening
    name: OnOpening
    nameWithType: CommunicationObject.OnOpening
    fullName: System.ServiceModel.Channels.CommunicationObject.OnOpening
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.ServiceModel.Channels.CommunicationObject.Open
  commentId: M:System.ServiceModel.Channels.CommunicationObject.Open
  parent: System.ServiceModel.Channels.CommunicationObject
  isExternal: false
  name: Open()
  nameWithType: CommunicationObject.Open()
  fullName: System.ServiceModel.Channels.CommunicationObject.Open()
  spec.csharp:
  - uid: System.ServiceModel.Channels.CommunicationObject.Open
    name: Open
    nameWithType: CommunicationObject.Open
    fullName: System.ServiceModel.Channels.CommunicationObject.Open
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.ServiceModel.Channels.CommunicationObject.Open
    name: Open
    nameWithType: CommunicationObject.Open
    fullName: System.ServiceModel.Channels.CommunicationObject.Open
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.ServiceModel.Channels.CommunicationObject.Open(System.TimeSpan)
  commentId: M:System.ServiceModel.Channels.CommunicationObject.Open(System.TimeSpan)
  parent: System.ServiceModel.Channels.CommunicationObject
  isExternal: true
  name: Open(TimeSpan)
  nameWithType: CommunicationObject.Open(TimeSpan)
  fullName: System.ServiceModel.Channels.CommunicationObject.Open(System.TimeSpan)
  spec.csharp:
  - uid: System.ServiceModel.Channels.CommunicationObject.Open(System.TimeSpan)
    name: Open
    nameWithType: CommunicationObject.Open
    fullName: System.ServiceModel.Channels.CommunicationObject.Open
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.TimeSpan
    name: TimeSpan
    nameWithType: TimeSpan
    fullName: System.TimeSpan
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.ServiceModel.Channels.CommunicationObject.Open(System.TimeSpan)
    name: Open
    nameWithType: CommunicationObject.Open
    fullName: System.ServiceModel.Channels.CommunicationObject.Open
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.TimeSpan
    name: TimeSpan
    nameWithType: TimeSpan
    fullName: System.TimeSpan
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: System.ServiceModel
  commentId: N:System.ServiceModel
  isExternal: false
  name: System.ServiceModel
  nameWithType: System.ServiceModel
  fullName: System.ServiceModel
- uid: System.ServiceModel.Channels.ChannelManagerBase
  commentId: T:System.ServiceModel.Channels.ChannelManagerBase
  parent: System.ServiceModel.Channels
  isExternal: false
  name: ChannelManagerBase
  nameWithType: ChannelManagerBase
  fullName: System.ServiceModel.Channels.ChannelManagerBase
- uid: System.ServiceModel.Channels.CommunicationObject.DefaultCloseTimeout
  commentId: P:System.ServiceModel.Channels.CommunicationObject.DefaultCloseTimeout
  parent: System.ServiceModel.Channels.CommunicationObject
  isExternal: false
  name: DefaultCloseTimeout
  nameWithType: CommunicationObject.DefaultCloseTimeout
  fullName: System.ServiceModel.Channels.CommunicationObject.DefaultCloseTimeout
- uid: System.TimeSpan
  commentId: T:System.TimeSpan
  parent: System
  isExternal: false
  name: TimeSpan
  nameWithType: TimeSpan
  fullName: System.TimeSpan
- uid: System.ServiceModel.Channels.CommunicationObject.DefaultOpenTimeout
  commentId: P:System.ServiceModel.Channels.CommunicationObject.DefaultOpenTimeout
  parent: System.ServiceModel.Channels.CommunicationObject
  isExternal: false
  name: DefaultOpenTimeout
  nameWithType: CommunicationObject.DefaultOpenTimeout
  fullName: System.ServiceModel.Channels.CommunicationObject.DefaultOpenTimeout
- uid: System.ServiceModel.IDefaultCommunicationTimeouts.CloseTimeout
  commentId: P:System.ServiceModel.IDefaultCommunicationTimeouts.CloseTimeout
  parent: System.ServiceModel.IDefaultCommunicationTimeouts
  isExternal: false
  name: CloseTimeout
  nameWithType: IDefaultCommunicationTimeouts.CloseTimeout
  fullName: System.ServiceModel.IDefaultCommunicationTimeouts.CloseTimeout
- uid: System.ServiceModel.IDefaultCommunicationTimeouts.OpenTimeout
  commentId: P:System.ServiceModel.IDefaultCommunicationTimeouts.OpenTimeout
  parent: System.ServiceModel.IDefaultCommunicationTimeouts
  isExternal: false
  name: OpenTimeout
  nameWithType: IDefaultCommunicationTimeouts.OpenTimeout
  fullName: System.ServiceModel.IDefaultCommunicationTimeouts.OpenTimeout
- uid: System.ServiceModel.IDefaultCommunicationTimeouts.ReceiveTimeout
  commentId: P:System.ServiceModel.IDefaultCommunicationTimeouts.ReceiveTimeout
  parent: System.ServiceModel.IDefaultCommunicationTimeouts
  isExternal: false
  name: ReceiveTimeout
  nameWithType: IDefaultCommunicationTimeouts.ReceiveTimeout
  fullName: System.ServiceModel.IDefaultCommunicationTimeouts.ReceiveTimeout
- uid: System.ServiceModel.IDefaultCommunicationTimeouts.SendTimeout
  commentId: P:System.ServiceModel.IDefaultCommunicationTimeouts.SendTimeout
  parent: System.ServiceModel.IDefaultCommunicationTimeouts
  isExternal: false
  name: SendTimeout
  nameWithType: IDefaultCommunicationTimeouts.SendTimeout
  fullName: System.ServiceModel.IDefaultCommunicationTimeouts.SendTimeout
- uid: System.ServiceModel.Channels.IChannel.GetProperty``1
  commentId: M:System.ServiceModel.Channels.IChannel.GetProperty``1
  parent: System.ServiceModel.Channels.IChannel
  definition: System.ServiceModel.Channels.IChannel.GetProperty``1
  isExternal: false
  name: GetProperty<T>()
  nameWithType: IChannel.GetProperty<T>()
  fullName: System.ServiceModel.Channels.IChannel.GetProperty<T>()
  nameWithType.vb: IChannel.GetProperty(Of T)()
  fullname.vb: System.ServiceModel.Channels.IChannel.GetProperty(Of T)()
  name.vb: GetProperty(Of T)()
  spec.csharp:
  - uid: System.ServiceModel.Channels.IChannel.GetProperty``1
    name: GetProperty<T>
    nameWithType: IChannel.GetProperty<T>
    fullName: System.ServiceModel.Channels.IChannel.GetProperty<T>
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.ServiceModel.Channels.IChannel.GetProperty``1
    name: GetProperty(Of T)
    nameWithType: IChannel.GetProperty(Of T)
    fullName: System.ServiceModel.Channels.IChannel.GetProperty(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: '{T}'
  commentId: '!:T'
  definition: T
  name: T
  nameWithType: T
  fullName: T
- uid: T
  isExternal: false
  name: T
  nameWithType: T
  fullName: T
- uid: System.ServiceModel.Channels.CommunicationObject.OnClosed
  commentId: M:System.ServiceModel.Channels.CommunicationObject.OnClosed
  parent: System.ServiceModel.Channels.CommunicationObject
  isExternal: false
  name: OnClosed()
  nameWithType: CommunicationObject.OnClosed()
  fullName: System.ServiceModel.Channels.CommunicationObject.OnClosed()
  spec.csharp:
  - uid: System.ServiceModel.Channels.CommunicationObject.OnClosed
    name: OnClosed
    nameWithType: CommunicationObject.OnClosed
    fullName: System.ServiceModel.Channels.CommunicationObject.OnClosed
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.ServiceModel.Channels.CommunicationObject.OnClosed
    name: OnClosed
    nameWithType: CommunicationObject.OnClosed
    fullName: System.ServiceModel.Channels.CommunicationObject.OnClosed
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.ArgumentNullException
  commentId: T:System.ArgumentNullException
  isExternal: false
  name: ArgumentNullException
  nameWithType: ArgumentNullException
  fullName: System.ArgumentNullException
