items:
- uid: System.ServiceModel.Channels.BufferManager
  commentId: T:System.ServiceModel.Channels.BufferManager
  id: BufferManager
  parent: System.ServiceModel.Channels
  children:
  - System.ServiceModel.Channels.BufferManager.#ctor
  - System.ServiceModel.Channels.BufferManager.Clear
  - System.ServiceModel.Channels.BufferManager.CreateBufferManager(System.Int64,System.Int32)
  - System.ServiceModel.Channels.BufferManager.ReturnBuffer(System.Byte[])
  - System.ServiceModel.Channels.BufferManager.TakeBuffer(System.Int32)
  langs:
  - csharp
  - vb
  name: BufferManager
  fullName: System.ServiceModel.Channels.BufferManager
  type: Class
  source:
    remote:
      path: src/System.Private.ServiceModel/src/System/ServiceModel/Channels/BufferManager.cs
      branch: master
      repo: https://github.com/dotnet/wcf.git
    id: BufferManager
    path: src/System.Private.ServiceModel/src/System/ServiceModel/Channels/BufferManager.cs
    startLine: 9
  assemblies:
  - System.ServiceModel.Primitives
  namespace: System.ServiceModel.Channels
  summary: "\n<p>Many Windows Communication Foundation (WCF) features require the use of buffers, which are expensive to create and destroy. You can use the <xref href=\"System.ServiceModel.Channels.BufferManager\" data-throw-if-not-resolved=\"false\"></xref> class to manage a buffer pool. The pool and its buffers are created when you instantiate this class and destroyed when the buffer pool is reclaimed by garbage collection. Every time you need to use a buffer, you take one from the pool, use it, and return it to the pool when done. This process is much faster than creating and destroying a buffer every time you need to use one.</p>\n"
  syntax:
    content: public abstract class BufferManager
    content.vb: Public MustInherit Class BufferManager
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  modifiers.csharp:
  - public
  - abstract
  - class
  modifiers.vb:
  - Public
  - MustInherit
  - Class
  nameWithType: BufferManager
- uid: System.ServiceModel.Channels.BufferManager.#ctor
  commentId: M:System.ServiceModel.Channels.BufferManager.#ctor
  id: '#ctor'
  parent: System.ServiceModel.Channels.BufferManager
  langs:
  - csharp
  - vb
  name: BufferManager()
  fullName: System.ServiceModel.Channels.BufferManager.BufferManager()
  type: Constructor
  source:
    remote:
      path: src/System.ServiceModel.Primitives/ref/System.ServiceModel.Primitives.cs
      branch: master
      repo: https://github.com/dotnet/wcf.git
    id: .ctor
    path: src/System.ServiceModel.Primitives/ref/System.ServiceModel.Primitives.cs
    startLine: 669
  assemblies:
  - System.ServiceModel.Primitives
  namespace: System.ServiceModel.Channels
  summary: "\n<p>Initializes a new instance of the <xref href=\"System.ServiceModel.Channels.BufferManager\" data-throw-if-not-resolved=\"false\"></xref> class. </p>\n"
  syntax:
    content: protected BufferManager()
    content.vb: Protected Sub New
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
  nameWithType: BufferManager.BufferManager()
- uid: System.ServiceModel.Channels.BufferManager.Clear
  commentId: M:System.ServiceModel.Channels.BufferManager.Clear
  id: Clear
  parent: System.ServiceModel.Channels.BufferManager
  langs:
  - csharp
  - vb
  name: Clear()
  fullName: System.ServiceModel.Channels.BufferManager.Clear()
  type: Method
  source:
    remote:
      path: src/System.Private.ServiceModel/src/System/ServiceModel/Channels/BufferManager.cs
      branch: master
      repo: https://github.com/dotnet/wcf.git
    id: Clear
    path: src/System.Private.ServiceModel/src/System/ServiceModel/Channels/BufferManager.cs
    startLine: 13
  assemblies:
  - System.ServiceModel.Primitives
  namespace: System.ServiceModel.Channels
  summary: "\n<p>Releases the buffers currently cached in the manager.</p>\n"
  syntax:
    content: public abstract void Clear()
    content.vb: Public MustOverride Sub Clear
  modifiers.csharp:
  - public
  - abstract
  modifiers.vb:
  - Public
  - MustOverride
  nameWithType: BufferManager.Clear()
- uid: System.ServiceModel.Channels.BufferManager.CreateBufferManager(System.Int64,System.Int32)
  commentId: M:System.ServiceModel.Channels.BufferManager.CreateBufferManager(System.Int64,System.Int32)
  id: CreateBufferManager(System.Int64,System.Int32)
  parent: System.ServiceModel.Channels.BufferManager
  langs:
  - csharp
  - vb
  name: CreateBufferManager(Int64, Int32)
  fullName: System.ServiceModel.Channels.BufferManager.CreateBufferManager(System.Int64, System.Int32)
  type: Method
  source:
    remote:
      path: src/System.Private.ServiceModel/src/System/ServiceModel/Channels/BufferManager.cs
      branch: master
      repo: https://github.com/dotnet/wcf.git
    id: CreateBufferManager
    path: src/System.Private.ServiceModel/src/System/ServiceModel/Channels/BufferManager.cs
    startLine: 15
  assemblies:
  - System.ServiceModel.Primitives
  namespace: System.ServiceModel.Channels
  summary: "\n<p>Creates a new BufferManager with a specified maximum buffer pool size and a maximum size for each individual buffer in the pool.</p>\n"
  syntax:
    content: public static BufferManager CreateBufferManager(long maxBufferPoolSize, int maxBufferSize)
    content.vb: Public Shared Function CreateBufferManager(maxBufferPoolSize As Long, maxBufferSize As Integer) As BufferManager
    parameters:
    - id: maxBufferPoolSize
      type: System.Int64
      description: "\n<p>The maximum size of the pool.</p>\n"
    - id: maxBufferSize
      type: System.Int32
      description: "\n<p>The maximum size of an individual buffer.</p>\n"
    return:
      type: System.ServiceModel.Channels.BufferManager
      description: "\n<p>Returns a <xref href=\"System.ServiceModel.Channels.BufferManager\" data-throw-if-not-resolved=\"false\"></xref> object with the specified parameters.</p>\n"
  exceptions:
  - type: System.InsufficientMemoryException
    commentId: T:System.InsufficientMemoryException
    description: "\n<p>In the <see href=\"http://go.microsoft.com/fwlink/?LinkID=247912\">.NET for Windows Store apps</see> or the Portable Class Library, catch the base class exception, <xref href=\"System.OutOfMemoryException\" data-throw-if-not-resolved=\"false\"></xref>, instead.</p>\n<p>There was insufficient memory to create the requested buffer pool.</p>\n"
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "\n<p>\n<em>maxBufferPoolSize</em> or <em>maxBufferSize</em> was less than zero.</p>\n"
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  nameWithType: BufferManager.CreateBufferManager(Int64, Int32)
- uid: System.ServiceModel.Channels.BufferManager.ReturnBuffer(System.Byte[])
  commentId: M:System.ServiceModel.Channels.BufferManager.ReturnBuffer(System.Byte[])
  id: ReturnBuffer(System.Byte[])
  parent: System.ServiceModel.Channels.BufferManager
  langs:
  - csharp
  - vb
  name: ReturnBuffer(Byte[])
  fullName: System.ServiceModel.Channels.BufferManager.ReturnBuffer(System.Byte[])
  type: Method
  source:
    remote:
      path: src/System.Private.ServiceModel/src/System/ServiceModel/Channels/BufferManager.cs
      branch: master
      repo: https://github.com/dotnet/wcf.git
    id: ReturnBuffer
    path: src/System.Private.ServiceModel/src/System/ServiceModel/Channels/BufferManager.cs
    startLine: 12
  assemblies:
  - System.ServiceModel.Primitives
  namespace: System.ServiceModel.Channels
  summary: "\n<p>Returns a buffer to the pool.</p>\n"
  syntax:
    content: public abstract void ReturnBuffer(byte[] buffer)
    content.vb: Public MustOverride Sub ReturnBuffer(buffer As Byte())
    parameters:
    - id: buffer
      type: System.Byte[]
      description: "\n<p>A reference to the buffer being returned.</p>\n"
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "\n<p>\n<em>buffer</em> reference cannot be <strong>null</strong>.</p>\n"
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "\n<p>Length of <em>buffer</em> does not match the pool's buffer length property.</p>\n"
  modifiers.csharp:
  - public
  - abstract
  modifiers.vb:
  - Public
  - MustOverride
  fullName.vb: System.ServiceModel.Channels.BufferManager.ReturnBuffer(System.Byte())
  name.vb: ReturnBuffer(Byte())
  nameWithType: BufferManager.ReturnBuffer(Byte[])
  nameWithType.vb: BufferManager.ReturnBuffer(Byte())
- uid: System.ServiceModel.Channels.BufferManager.TakeBuffer(System.Int32)
  commentId: M:System.ServiceModel.Channels.BufferManager.TakeBuffer(System.Int32)
  id: TakeBuffer(System.Int32)
  parent: System.ServiceModel.Channels.BufferManager
  langs:
  - csharp
  - vb
  name: TakeBuffer(Int32)
  fullName: System.ServiceModel.Channels.BufferManager.TakeBuffer(System.Int32)
  type: Method
  source:
    remote:
      path: src/System.Private.ServiceModel/src/System/ServiceModel/Channels/BufferManager.cs
      branch: master
      repo: https://github.com/dotnet/wcf.git
    id: TakeBuffer
    path: src/System.Private.ServiceModel/src/System/ServiceModel/Channels/BufferManager.cs
    startLine: 11
  assemblies:
  - System.ServiceModel.Primitives
  namespace: System.ServiceModel.Channels
  summary: "\n<p>Gets a buffer of at least the specified size from the pool. </p>\n"
  syntax:
    content: public abstract byte[] TakeBuffer(int bufferSize)
    content.vb: Public MustOverride Function TakeBuffer(bufferSize As Integer) As Byte()
    parameters:
    - id: bufferSize
      type: System.Int32
      description: "\n<p>The size, in bytes, of the requested buffer.</p>\n"
    return:
      type: System.Byte[]
      description: "\n<p>A byte array that is the requested size of the buffer.</p>\n"
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "\n<p>\n<em>bufferSize</em> cannot be less than zero.</p>\n"
  modifiers.csharp:
  - public
  - abstract
  modifiers.vb:
  - Public
  - MustOverride
  nameWithType: BufferManager.TakeBuffer(Int32)
references:
- uid: System.ServiceModel.Channels
  isExternal: false
  name: System.ServiceModel.Channels
  fullName: System.ServiceModel.Channels
  nameWithType: System.ServiceModel.Channels
  commentId: N:System.ServiceModel.Channels
- uid: System.Object
  parent: System
  isExternal: false
  name: Object
  fullName: System.Object
  nameWithType: Object
  commentId: T:System.Object
- uid: System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  nameWithType: Object.ToString()
  commentId: M:System.Object.ToString
- uid: System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
  nameWithType: Object.Equals(Object)
  commentId: M:System.Object.Equals(System.Object)
- uid: System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
  nameWithType: Object.Equals(Object, Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
  nameWithType: Object.ReferenceEquals(Object, Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
- uid: System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  nameWithType: Object.GetHashCode()
  commentId: M:System.Object.GetHashCode
- uid: System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  nameWithType: Object.GetType()
  commentId: M:System.Object.GetType
- uid: System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  nameWithType: Object.MemberwiseClone()
  commentId: M:System.Object.MemberwiseClone
- uid: System
  isExternal: false
  name: System
  fullName: System
  nameWithType: System
  commentId: N:System
- uid: System.Int64
  parent: System
  isExternal: false
  name: Int64
  fullName: System.Int64
  nameWithType: Int64
  commentId: T:System.Int64
- uid: System.Int32
  parent: System
  isExternal: false
  name: Int32
  fullName: System.Int32
  nameWithType: Int32
  commentId: T:System.Int32
- uid: System.ServiceModel.Channels.BufferManager
  parent: System.ServiceModel.Channels
  isExternal: false
  name: BufferManager
  fullName: System.ServiceModel.Channels.BufferManager
  nameWithType: BufferManager
  commentId: T:System.ServiceModel.Channels.BufferManager
- uid: System.Byte[]
  name: Byte[]
  fullName: System.Byte[]
  fullname.vb: System.Byte()
  name.vb: Byte()
  spec.csharp:
  - uid: System.Byte
    name: Byte
    fullName: System.Byte
    isExternal: true
  - name: '[]'
    fullName: '[]'
  spec.vb:
  - uid: System.Byte
    name: Byte
    fullName: System.Byte
    isExternal: true
  - name: ()
    fullName: ()
  nameWithType: Byte[]
  nameWithType.vb: Byte()
- uid: System.InsufficientMemoryException
- uid: System.ArgumentOutOfRangeException
  isExternal: false
  name: ArgumentOutOfRangeException
  fullName: System.ArgumentOutOfRangeException
  nameWithType: ArgumentOutOfRangeException
  commentId: T:System.ArgumentOutOfRangeException
- uid: System.ArgumentNullException
  isExternal: false
  name: ArgumentNullException
  fullName: System.ArgumentNullException
  nameWithType: ArgumentNullException
  commentId: T:System.ArgumentNullException
- uid: System.ArgumentException
  parent: System
  isExternal: false
  name: ArgumentException
  fullName: System.ArgumentException
  nameWithType: ArgumentException
  commentId: T:System.ArgumentException
