### YamlMime:ManagedReference
items:
- uid: System.ServiceModel.Description.OperationDescription
  commentId: T:System.ServiceModel.Description.OperationDescription
  id: OperationDescription
  parent: System.ServiceModel.Description
  children:
  - System.ServiceModel.Description.OperationDescription.#ctor(System.String,System.ServiceModel.Description.ContractDescription)
  - System.ServiceModel.Description.OperationDescription.DeclaringContract
  - System.ServiceModel.Description.OperationDescription.Faults
  - System.ServiceModel.Description.OperationDescription.IsOneWay
  - System.ServiceModel.Description.OperationDescription.KnownTypes
  - System.ServiceModel.Description.OperationDescription.Messages
  - System.ServiceModel.Description.OperationDescription.Name
  - System.ServiceModel.Description.OperationDescription.OperationBehaviors
  - System.ServiceModel.Description.OperationDescription.TaskMethod
  langs:
  - csharp
  - vb
  name: OperationDescription
  nameWithType: OperationDescription
  fullName: System.ServiceModel.Description.OperationDescription
  type: Class
  source:
    remote:
      path: src/System.ServiceModel.Primitives/ref/System.ServiceModel.Primitives.cs
      branch: master
      repo: https://github.com/dotnet/wcf.git
    id: OperationDescription
    path: src/System.ServiceModel.Primitives/ref/System.ServiceModel.Primitives.cs
    startLine: 1319
  assemblies:
  - System.ServiceModel.Primitives
  namespace: System.ServiceModel.Description
  summary: "\n<p>Represents the description of a contract operation that provides a description of the messages that make up the operation.</p>\n"
  syntax:
    content: public class OperationDescription
    content.vb: Public Class OperationDescription
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: System.ServiceModel.Description.OperationDescription.#ctor(System.String,System.ServiceModel.Description.ContractDescription)
  commentId: M:System.ServiceModel.Description.OperationDescription.#ctor(System.String,System.ServiceModel.Description.ContractDescription)
  id: '#ctor(System.String,System.ServiceModel.Description.ContractDescription)'
  parent: System.ServiceModel.Description.OperationDescription
  langs:
  - csharp
  - vb
  name: OperationDescription(String, ContractDescription)
  nameWithType: OperationDescription.OperationDescription(String, ContractDescription)
  fullName: System.ServiceModel.Description.OperationDescription.OperationDescription(System.String, System.ServiceModel.Description.ContractDescription)
  type: Constructor
  source:
    remote:
      path: src/System.ServiceModel.Primitives/ref/System.ServiceModel.Primitives.cs
      branch: master
      repo: https://github.com/dotnet/wcf.git
    id: .ctor
    path: src/System.ServiceModel.Primitives/ref/System.ServiceModel.Primitives.cs
    startLine: 1321
  assemblies:
  - System.ServiceModel.Primitives
  namespace: System.ServiceModel.Description
  summary: "\n<p>Initializes a new instance of the <xref href=\"System.ServiceModel.Description.OperationDescription\" data-throw-if-not-resolved=\"false\"></xref> class with a specified name and contract description.</p>\n"
  syntax:
    content: public OperationDescription(string name, ContractDescription declaringContract)
    content.vb: Public Sub New(name As String, declaringContract As ContractDescription)
    parameters:
    - id: name
      type: System.String
      description: "\n<p>The name of the operation description.</p>\n"
    - id: declaringContract
      type: System.ServiceModel.Description.ContractDescription
      description: "\n<p>The <xref href=\"System.ServiceModel.Description.ContractDescription\" data-throw-if-not-resolved=\"false\"></xref> used to initialize the operation description.</p>\n"
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: System.ServiceModel.Description.OperationDescription.DeclaringContract
  commentId: P:System.ServiceModel.Description.OperationDescription.DeclaringContract
  id: DeclaringContract
  parent: System.ServiceModel.Description.OperationDescription
  langs:
  - csharp
  - vb
  name: DeclaringContract
  nameWithType: OperationDescription.DeclaringContract
  fullName: System.ServiceModel.Description.OperationDescription.DeclaringContract
  type: Property
  source:
    remote:
      path: src/System.ServiceModel.Primitives/ref/System.ServiceModel.Primitives.cs
      branch: master
      repo: https://github.com/dotnet/wcf.git
    id: DeclaringContract
    path: src/System.ServiceModel.Primitives/ref/System.ServiceModel.Primitives.cs
    startLine: 1322
  assemblies:
  - System.ServiceModel.Primitives
  namespace: System.ServiceModel.Description
  summary: "\n<p>Gets or sets the contract to which the operation belongs.</p>\n"
  syntax:
    content: public ContractDescription DeclaringContract { get; set; }
    content.vb: Public Property DeclaringContract As ContractDescription
    parameters: []
    return:
      type: System.ServiceModel.Description.ContractDescription
      description: "\n<p>The <xref href=\"System.ServiceModel.Description.ContractDescription\" data-throw-if-not-resolved=\"false\"></xref> for the operation.</p>\n"
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: System.ServiceModel.Description.OperationDescription.Faults
  commentId: P:System.ServiceModel.Description.OperationDescription.Faults
  id: Faults
  parent: System.ServiceModel.Description.OperationDescription
  langs:
  - csharp
  - vb
  name: Faults
  nameWithType: OperationDescription.Faults
  fullName: System.ServiceModel.Description.OperationDescription.Faults
  type: Property
  source:
    remote:
      path: src/System.ServiceModel.Primitives/ref/System.ServiceModel.Primitives.cs
      branch: master
      repo: https://github.com/dotnet/wcf.git
    id: Faults
    path: src/System.ServiceModel.Primitives/ref/System.ServiceModel.Primitives.cs
    startLine: 1323
  assemblies:
  - System.ServiceModel.Primitives
  namespace: System.ServiceModel.Description
  summary: "\n<p>Gets the descriptions of the faults associated with the operation description.</p>\n"
  syntax:
    content: public FaultDescriptionCollection Faults { get; }
    content.vb: Public ReadOnly Property Faults As FaultDescriptionCollection
    parameters: []
    return:
      type: System.ServiceModel.Description.FaultDescriptionCollection
      description: "\n<p>The <xref href=\"System.ServiceModel.Description.FaultDescriptionCollection\" data-throw-if-not-resolved=\"false\"></xref> that contains details about the faults associated with the operation description.</p>\n"
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: System.ServiceModel.Description.OperationDescription.IsOneWay
  commentId: P:System.ServiceModel.Description.OperationDescription.IsOneWay
  id: IsOneWay
  parent: System.ServiceModel.Description.OperationDescription
  langs:
  - csharp
  - vb
  name: IsOneWay
  nameWithType: OperationDescription.IsOneWay
  fullName: System.ServiceModel.Description.OperationDescription.IsOneWay
  type: Property
  source:
    remote:
      path: src/System.ServiceModel.Primitives/ref/System.ServiceModel.Primitives.cs
      branch: master
      repo: https://github.com/dotnet/wcf.git
    id: IsOneWay
    path: src/System.ServiceModel.Primitives/ref/System.ServiceModel.Primitives.cs
    startLine: 1324
  assemblies:
  - System.ServiceModel.Primitives
  namespace: System.ServiceModel.Description
  summary: "\n<p>Gets or sets a value that indicates whether an operation returns a reply message.</p>\n"
  syntax:
    content: public bool IsOneWay { get; }
    content.vb: Public ReadOnly Property IsOneWay As Boolean
    parameters: []
    return:
      type: System.Boolean
      description: "\n<p>\n<strong>true</strong> if this method receives a request message and returns no reply message; otherwise, <strong>false</strong>. The default is <strong>false</strong>.</p>\n"
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: System.ServiceModel.Description.OperationDescription.KnownTypes
  commentId: P:System.ServiceModel.Description.OperationDescription.KnownTypes
  id: KnownTypes
  parent: System.ServiceModel.Description.OperationDescription
  langs:
  - csharp
  - vb
  name: KnownTypes
  nameWithType: OperationDescription.KnownTypes
  fullName: System.ServiceModel.Description.OperationDescription.KnownTypes
  type: Property
  source:
    remote:
      path: src/System.ServiceModel.Primitives/ref/System.ServiceModel.Primitives.cs
      branch: master
      repo: https://github.com/dotnet/wcf.git
    id: KnownTypes
    path: src/System.ServiceModel.Primitives/ref/System.ServiceModel.Primitives.cs
    startLine: 1325
  assemblies:
  - System.ServiceModel.Primitives
  namespace: System.ServiceModel.Description
  summary: "\n<p>Gets the known types associated with the operation description.</p>\n"
  syntax:
    content: public Collection<Type> KnownTypes { get; }
    content.vb: Public ReadOnly Property KnownTypes As Collection(Of Type)
    parameters: []
    return:
      type: System.Collections.ObjectModel.Collection{System.Type}
      description: "\n<p>The collection of known types associated with the operation description.</p>\n"
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: System.ServiceModel.Description.OperationDescription.Messages
  commentId: P:System.ServiceModel.Description.OperationDescription.Messages
  id: Messages
  parent: System.ServiceModel.Description.OperationDescription
  langs:
  - csharp
  - vb
  name: Messages
  nameWithType: OperationDescription.Messages
  fullName: System.ServiceModel.Description.OperationDescription.Messages
  type: Property
  source:
    remote:
      path: src/System.ServiceModel.Primitives/ref/System.ServiceModel.Primitives.cs
      branch: master
      repo: https://github.com/dotnet/wcf.git
    id: Messages
    path: src/System.ServiceModel.Primitives/ref/System.ServiceModel.Primitives.cs
    startLine: 1326
  assemblies:
  - System.ServiceModel.Primitives
  namespace: System.ServiceModel.Description
  summary: "\n<p>Gets or sets the descriptions of the messages that make up the operation.</p>\n"
  syntax:
    content: public MessageDescriptionCollection Messages { get; }
    content.vb: Public ReadOnly Property Messages As MessageDescriptionCollection
    parameters: []
    return:
      type: System.ServiceModel.Description.MessageDescriptionCollection
      description: "\n<p>A <xref href=\"System.ServiceModel.Description.MessageDescriptionCollection\" data-throw-if-not-resolved=\"false\"></xref> that contains descriptions of the messages that makes up the operation.</p>\n"
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: System.ServiceModel.Description.OperationDescription.Name
  commentId: P:System.ServiceModel.Description.OperationDescription.Name
  id: Name
  parent: System.ServiceModel.Description.OperationDescription
  langs:
  - csharp
  - vb
  name: Name
  nameWithType: OperationDescription.Name
  fullName: System.ServiceModel.Description.OperationDescription.Name
  type: Property
  source:
    remote:
      path: src/System.ServiceModel.Primitives/ref/System.ServiceModel.Primitives.cs
      branch: master
      repo: https://github.com/dotnet/wcf.git
    id: Name
    path: src/System.ServiceModel.Primitives/ref/System.ServiceModel.Primitives.cs
    startLine: 1327
  assemblies:
  - System.ServiceModel.Primitives
  namespace: System.ServiceModel.Description
  summary: "\n<p>Gets or sets the name of the operation description.</p>\n"
  syntax:
    content: public string Name { get; }
    content.vb: Public ReadOnly Property Name As String
    parameters: []
    return:
      type: System.String
      description: "\n<p>The name of the operation description.</p>\n"
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: System.ServiceModel.Description.OperationDescription.OperationBehaviors
  commentId: P:System.ServiceModel.Description.OperationDescription.OperationBehaviors
  id: OperationBehaviors
  parent: System.ServiceModel.Description.OperationDescription
  langs:
  - csharp
  - vb
  name: OperationBehaviors
  nameWithType: OperationDescription.OperationBehaviors
  fullName: System.ServiceModel.Description.OperationDescription.OperationBehaviors
  type: Property
  source:
    remote:
      path: src/System.ServiceModel.Primitives/ref/System.ServiceModel.Primitives.cs
      branch: master
      repo: https://github.com/dotnet/wcf.git
    id: OperationBehaviors
    path: src/System.ServiceModel.Primitives/ref/System.ServiceModel.Primitives.cs
    startLine: 1328
  assemblies:
  - System.ServiceModel.Primitives
  namespace: System.ServiceModel.Description
  summary: "\n<p>Gets the set of behaviors for the operation.</p>\n"
  syntax:
    content: public KeyedCollection<Type, IOperationBehavior> OperationBehaviors { get; }
    content.vb: Public ReadOnly Property OperationBehaviors As KeyedCollection(Of Type, IOperationBehavior)
    parameters: []
    return:
      type: System.Collections.ObjectModel.KeyedCollection{System.Type,System.ServiceModel.Description.IOperationBehavior}
      description: "\n<p>The set of behaviors for the operation.</p>\n"
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: System.ServiceModel.Description.OperationDescription.TaskMethod
  commentId: P:System.ServiceModel.Description.OperationDescription.TaskMethod
  id: TaskMethod
  parent: System.ServiceModel.Description.OperationDescription
  langs:
  - csharp
  - vb
  name: TaskMethod
  nameWithType: OperationDescription.TaskMethod
  fullName: System.ServiceModel.Description.OperationDescription.TaskMethod
  type: Property
  source:
    remote:
      path: src/System.ServiceModel.Primitives/ref/System.ServiceModel.Primitives.cs
      branch: master
      repo: https://github.com/dotnet/wcf.git
    id: TaskMethod
    path: src/System.ServiceModel.Primitives/ref/System.ServiceModel.Primitives.cs
    startLine: 1329
  assemblies:
  - System.ServiceModel.Primitives
  namespace: System.ServiceModel.Description
  summary: "\n<p>Gets or sets the method used for the task operation.</p>\n"
  syntax:
    content: public MethodInfo TaskMethod { get; set; }
    content.vb: Public Property TaskMethod As MethodInfo
    parameters: []
    return:
      type: System.Reflection.MethodInfo
      description: "\n<p>The method used for the task operation.</p>\n"
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
references:
- uid: System.ServiceModel.Description
  commentId: N:System.ServiceModel.Description
  isExternal: false
  name: System.ServiceModel.Description
  nameWithType: System.ServiceModel.Description
  fullName: System.ServiceModel.Description
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: false
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: false
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.ServiceModel.Description.ContractDescription
  commentId: T:System.ServiceModel.Description.ContractDescription
  parent: System.ServiceModel.Description
  isExternal: false
  name: ContractDescription
  nameWithType: ContractDescription
  fullName: System.ServiceModel.Description.ContractDescription
- uid: System.ServiceModel.Description.FaultDescriptionCollection
  commentId: T:System.ServiceModel.Description.FaultDescriptionCollection
  parent: System.ServiceModel.Description
  isExternal: false
  name: FaultDescriptionCollection
  nameWithType: FaultDescriptionCollection
  fullName: System.ServiceModel.Description.FaultDescriptionCollection
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: false
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Collections.ObjectModel.Collection{System.Type}
  commentId: T:System.Collections.ObjectModel.Collection{System.Type}
  parent: System.Collections.ObjectModel
  definition: System.Collections.ObjectModel.Collection`1
  name: Collection<Type>
  nameWithType: Collection<Type>
  fullName: System.Collections.ObjectModel.Collection<System.Type>
  nameWithType.vb: Collection(Of Type)
  fullname.vb: System.Collections.ObjectModel.Collection(Of System.Type)
  name.vb: Collection(Of Type)
  spec.csharp:
  - uid: System.Collections.ObjectModel.Collection`1
    name: Collection
    nameWithType: Collection
    fullName: System.Collections.ObjectModel.Collection
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Type
    name: Type
    nameWithType: Type
    fullName: System.Type
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.ObjectModel.Collection`1
    name: Collection
    nameWithType: Collection
    fullName: System.Collections.ObjectModel.Collection
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Type
    name: Type
    nameWithType: Type
    fullName: System.Type
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.ObjectModel.Collection`1
  commentId: T:System.Collections.ObjectModel.Collection`1
  isExternal: false
  name: Collection<T>
  nameWithType: Collection<T>
  fullName: System.Collections.ObjectModel.Collection<T>
  nameWithType.vb: Collection(Of T)
  fullname.vb: System.Collections.ObjectModel.Collection(Of T)
  name.vb: Collection(Of T)
  spec.csharp:
  - uid: System.Collections.ObjectModel.Collection`1
    name: Collection
    nameWithType: Collection
    fullName: System.Collections.ObjectModel.Collection
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.ObjectModel.Collection`1
    name: Collection
    nameWithType: Collection
    fullName: System.Collections.ObjectModel.Collection
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.ObjectModel
  commentId: N:System.Collections.ObjectModel
  isExternal: false
  name: System.Collections.ObjectModel
  nameWithType: System.Collections.ObjectModel
  fullName: System.Collections.ObjectModel
- uid: System.ServiceModel.Description.MessageDescriptionCollection
  commentId: T:System.ServiceModel.Description.MessageDescriptionCollection
  parent: System.ServiceModel.Description
  isExternal: false
  name: MessageDescriptionCollection
  nameWithType: MessageDescriptionCollection
  fullName: System.ServiceModel.Description.MessageDescriptionCollection
- uid: System.Collections.ObjectModel.KeyedCollection{System.Type,System.ServiceModel.Description.IOperationBehavior}
  commentId: T:System.Collections.ObjectModel.KeyedCollection{System.Type,System.ServiceModel.Description.IOperationBehavior}
  parent: System.Collections.ObjectModel
  definition: System.Collections.ObjectModel.KeyedCollection`2
  name: KeyedCollection<Type, IOperationBehavior>
  nameWithType: KeyedCollection<Type, IOperationBehavior>
  fullName: System.Collections.ObjectModel.KeyedCollection<System.Type, System.ServiceModel.Description.IOperationBehavior>
  nameWithType.vb: KeyedCollection(Of Type, IOperationBehavior)
  fullname.vb: System.Collections.ObjectModel.KeyedCollection(Of System.Type, System.ServiceModel.Description.IOperationBehavior)
  name.vb: KeyedCollection(Of Type, IOperationBehavior)
  spec.csharp:
  - uid: System.Collections.ObjectModel.KeyedCollection`2
    name: KeyedCollection
    nameWithType: KeyedCollection
    fullName: System.Collections.ObjectModel.KeyedCollection
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Type
    name: Type
    nameWithType: Type
    fullName: System.Type
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.ServiceModel.Description.IOperationBehavior
    name: IOperationBehavior
    nameWithType: IOperationBehavior
    fullName: System.ServiceModel.Description.IOperationBehavior
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.ObjectModel.KeyedCollection`2
    name: KeyedCollection
    nameWithType: KeyedCollection
    fullName: System.Collections.ObjectModel.KeyedCollection
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Type
    name: Type
    nameWithType: Type
    fullName: System.Type
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.ServiceModel.Description.IOperationBehavior
    name: IOperationBehavior
    nameWithType: IOperationBehavior
    fullName: System.ServiceModel.Description.IOperationBehavior
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.ObjectModel.KeyedCollection`2
  commentId: T:System.Collections.ObjectModel.KeyedCollection`2
  isExternal: false
  name: KeyedCollection<TKey, TItem>
  nameWithType: KeyedCollection<TKey, TItem>
  fullName: System.Collections.ObjectModel.KeyedCollection<TKey, TItem>
  nameWithType.vb: KeyedCollection(Of TKey, TItem)
  fullname.vb: System.Collections.ObjectModel.KeyedCollection(Of TKey, TItem)
  name.vb: KeyedCollection(Of TKey, TItem)
  spec.csharp:
  - uid: System.Collections.ObjectModel.KeyedCollection`2
    name: KeyedCollection
    nameWithType: KeyedCollection
    fullName: System.Collections.ObjectModel.KeyedCollection
  - name: <
    nameWithType: <
    fullName: <
  - name: TKey
    nameWithType: TKey
    fullName: TKey
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TItem
    nameWithType: TItem
    fullName: TItem
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.ObjectModel.KeyedCollection`2
    name: KeyedCollection
    nameWithType: KeyedCollection
    fullName: System.Collections.ObjectModel.KeyedCollection
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TKey
    nameWithType: TKey
    fullName: TKey
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TItem
    nameWithType: TItem
    fullName: TItem
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Reflection.MethodInfo
  commentId: T:System.Reflection.MethodInfo
  parent: System.Reflection
  isExternal: false
  name: MethodInfo
  nameWithType: MethodInfo
  fullName: System.Reflection.MethodInfo
- uid: System.Reflection
  commentId: N:System.Reflection
  isExternal: false
  name: System.Reflection
  nameWithType: System.Reflection
  fullName: System.Reflection
