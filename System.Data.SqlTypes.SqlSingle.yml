### YamlMime:ManagedReference
items:
- uid: System.Data.SqlTypes.SqlSingle
  commentId: T:System.Data.SqlTypes.SqlSingle
  id: SqlSingle
  parent: System.Data.SqlTypes
  children:
  - System.Data.SqlTypes.SqlSingle.#ctor(System.Double)
  - System.Data.SqlTypes.SqlSingle.#ctor(System.Single)
  - System.Data.SqlTypes.SqlSingle.Add(System.Data.SqlTypes.SqlSingle,System.Data.SqlTypes.SqlSingle)
  - System.Data.SqlTypes.SqlSingle.CompareTo(System.Data.SqlTypes.SqlSingle)
  - System.Data.SqlTypes.SqlSingle.CompareTo(System.Object)
  - System.Data.SqlTypes.SqlSingle.Divide(System.Data.SqlTypes.SqlSingle,System.Data.SqlTypes.SqlSingle)
  - System.Data.SqlTypes.SqlSingle.Equals(System.Data.SqlTypes.SqlSingle,System.Data.SqlTypes.SqlSingle)
  - System.Data.SqlTypes.SqlSingle.Equals(System.Object)
  - System.Data.SqlTypes.SqlSingle.GetHashCode
  - System.Data.SqlTypes.SqlSingle.GreaterThan(System.Data.SqlTypes.SqlSingle,System.Data.SqlTypes.SqlSingle)
  - System.Data.SqlTypes.SqlSingle.GreaterThanOrEqual(System.Data.SqlTypes.SqlSingle,System.Data.SqlTypes.SqlSingle)
  - System.Data.SqlTypes.SqlSingle.IsNull
  - System.Data.SqlTypes.SqlSingle.LessThan(System.Data.SqlTypes.SqlSingle,System.Data.SqlTypes.SqlSingle)
  - System.Data.SqlTypes.SqlSingle.LessThanOrEqual(System.Data.SqlTypes.SqlSingle,System.Data.SqlTypes.SqlSingle)
  - System.Data.SqlTypes.SqlSingle.MaxValue
  - System.Data.SqlTypes.SqlSingle.MinValue
  - System.Data.SqlTypes.SqlSingle.Multiply(System.Data.SqlTypes.SqlSingle,System.Data.SqlTypes.SqlSingle)
  - System.Data.SqlTypes.SqlSingle.NotEquals(System.Data.SqlTypes.SqlSingle,System.Data.SqlTypes.SqlSingle)
  - System.Data.SqlTypes.SqlSingle.Null
  - System.Data.SqlTypes.SqlSingle.op_Addition(System.Data.SqlTypes.SqlSingle,System.Data.SqlTypes.SqlSingle)
  - System.Data.SqlTypes.SqlSingle.op_Division(System.Data.SqlTypes.SqlSingle,System.Data.SqlTypes.SqlSingle)
  - System.Data.SqlTypes.SqlSingle.op_Equality(System.Data.SqlTypes.SqlSingle,System.Data.SqlTypes.SqlSingle)
  - System.Data.SqlTypes.SqlSingle.op_Explicit(System.Data.SqlTypes.SqlBoolean)~System.Data.SqlTypes.SqlSingle
  - System.Data.SqlTypes.SqlSingle.op_Explicit(System.Data.SqlTypes.SqlDouble)~System.Data.SqlTypes.SqlSingle
  - System.Data.SqlTypes.SqlSingle.op_Explicit(System.Data.SqlTypes.SqlSingle)~System.Single
  - System.Data.SqlTypes.SqlSingle.op_Explicit(System.Data.SqlTypes.SqlString)~System.Data.SqlTypes.SqlSingle
  - System.Data.SqlTypes.SqlSingle.op_GreaterThan(System.Data.SqlTypes.SqlSingle,System.Data.SqlTypes.SqlSingle)
  - System.Data.SqlTypes.SqlSingle.op_GreaterThanOrEqual(System.Data.SqlTypes.SqlSingle,System.Data.SqlTypes.SqlSingle)
  - System.Data.SqlTypes.SqlSingle.op_Implicit(System.Data.SqlTypes.SqlByte)~System.Data.SqlTypes.SqlSingle
  - System.Data.SqlTypes.SqlSingle.op_Implicit(System.Data.SqlTypes.SqlDecimal)~System.Data.SqlTypes.SqlSingle
  - System.Data.SqlTypes.SqlSingle.op_Implicit(System.Data.SqlTypes.SqlInt16)~System.Data.SqlTypes.SqlSingle
  - System.Data.SqlTypes.SqlSingle.op_Implicit(System.Data.SqlTypes.SqlInt32)~System.Data.SqlTypes.SqlSingle
  - System.Data.SqlTypes.SqlSingle.op_Implicit(System.Data.SqlTypes.SqlInt64)~System.Data.SqlTypes.SqlSingle
  - System.Data.SqlTypes.SqlSingle.op_Implicit(System.Data.SqlTypes.SqlMoney)~System.Data.SqlTypes.SqlSingle
  - System.Data.SqlTypes.SqlSingle.op_Implicit(System.Single)~System.Data.SqlTypes.SqlSingle
  - System.Data.SqlTypes.SqlSingle.op_Inequality(System.Data.SqlTypes.SqlSingle,System.Data.SqlTypes.SqlSingle)
  - System.Data.SqlTypes.SqlSingle.op_LessThan(System.Data.SqlTypes.SqlSingle,System.Data.SqlTypes.SqlSingle)
  - System.Data.SqlTypes.SqlSingle.op_LessThanOrEqual(System.Data.SqlTypes.SqlSingle,System.Data.SqlTypes.SqlSingle)
  - System.Data.SqlTypes.SqlSingle.op_Multiply(System.Data.SqlTypes.SqlSingle,System.Data.SqlTypes.SqlSingle)
  - System.Data.SqlTypes.SqlSingle.op_Subtraction(System.Data.SqlTypes.SqlSingle,System.Data.SqlTypes.SqlSingle)
  - System.Data.SqlTypes.SqlSingle.op_UnaryNegation(System.Data.SqlTypes.SqlSingle)
  - System.Data.SqlTypes.SqlSingle.Parse(System.String)
  - System.Data.SqlTypes.SqlSingle.Subtract(System.Data.SqlTypes.SqlSingle,System.Data.SqlTypes.SqlSingle)
  - System.Data.SqlTypes.SqlSingle.ToSqlBoolean
  - System.Data.SqlTypes.SqlSingle.ToSqlByte
  - System.Data.SqlTypes.SqlSingle.ToSqlDecimal
  - System.Data.SqlTypes.SqlSingle.ToSqlDouble
  - System.Data.SqlTypes.SqlSingle.ToSqlInt16
  - System.Data.SqlTypes.SqlSingle.ToSqlInt32
  - System.Data.SqlTypes.SqlSingle.ToSqlInt64
  - System.Data.SqlTypes.SqlSingle.ToSqlMoney
  - System.Data.SqlTypes.SqlSingle.ToSqlString
  - System.Data.SqlTypes.SqlSingle.ToString
  - System.Data.SqlTypes.SqlSingle.Value
  - System.Data.SqlTypes.SqlSingle.Zero
  langs:
  - csharp
  - vb
  name: SqlSingle
  nameWithType: SqlSingle
  fullName: System.Data.SqlTypes.SqlSingle
  type: Struct
  source:
    remote:
      path: src/System.Data.SqlClient/src/System/Data/SqlTypes/SQLSingle.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: SqlSingle
    path: src/System.Data.SqlClient/src/System/Data/SqlTypes/SQLSingle.cs
    startLine: 21
  assemblies:
  - System.Data.SqlClient
  namespace: System.Data.SqlTypes
  summary: "\n<p>Represents a floating point number within the range of -3.40E +38 through 3.40E +38 to be stored in or retrieved from a database.</p>\n"
  syntax:
    content: >-
      [StructLayout(LayoutKind.Sequential)]

      public struct SqlSingle : INullable, IComparable
    content.vb: >-
      <StructLayout(LayoutKind.Sequential)>

      Public Structure SqlSingle
          Implements INullable, IComparable
  implements:
  - System.Data.SqlTypes.INullable
  - System.IComparable
  inheritedMembers:
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetType
  attributes:
  - type: System.Runtime.InteropServices.StructLayoutAttribute
    ctor: System.Runtime.InteropServices.StructLayoutAttribute.#ctor(System.Runtime.InteropServices.LayoutKind)
    arguments:
    - type: System.Runtime.InteropServices.LayoutKind
      value: 0
  modifiers.csharp:
  - public
  - struct
  modifiers.vb:
  - Public
  - Structure
- uid: System.Data.SqlTypes.SqlSingle.MaxValue
  commentId: F:System.Data.SqlTypes.SqlSingle.MaxValue
  id: MaxValue
  parent: System.Data.SqlTypes.SqlSingle
  langs:
  - csharp
  - vb
  name: MaxValue
  nameWithType: SqlSingle.MaxValue
  fullName: System.Data.SqlTypes.SqlSingle.MaxValue
  type: Field
  source:
    remote:
      path: src/System.Data.SqlClient/src/System/Data/SqlTypes/SQLSingle.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: MaxValue
    path: src/System.Data.SqlClient/src/System/Data/SqlTypes/SQLSingle.cs
    startLine: 533
  assemblies:
  - System.Data.SqlClient
  namespace: System.Data.SqlTypes
  summary: "\n<p>Represents the maximum value that can be assigned to the <xref href=\"System.Data.SqlTypes.SqlSingle.Value\" data-throw-if-not-resolved=\"false\"></xref> property of an instance of the <xref href=\"System.Data.SqlTypes.SqlSingle\" data-throw-if-not-resolved=\"false\"></xref> class.</p>\n"
  syntax:
    content: public static readonly SqlSingle MaxValue
    content.vb: Public Shared ReadOnly MaxValue As SqlSingle
    return:
      type: System.Data.SqlTypes.SqlSingle
  modifiers.csharp:
  - public
  - static
  - readonly
  modifiers.vb:
  - Public
  - Shared
  - ReadOnly
- uid: System.Data.SqlTypes.SqlSingle.MinValue
  commentId: F:System.Data.SqlTypes.SqlSingle.MinValue
  id: MinValue
  parent: System.Data.SqlTypes.SqlSingle
  langs:
  - csharp
  - vb
  name: MinValue
  nameWithType: SqlSingle.MinValue
  fullName: System.Data.SqlTypes.SqlSingle.MinValue
  type: Field
  source:
    remote:
      path: src/System.Data.SqlClient/src/System/Data/SqlTypes/SQLSingle.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: MinValue
    path: src/System.Data.SqlClient/src/System/Data/SqlTypes/SQLSingle.cs
    startLine: 529
  assemblies:
  - System.Data.SqlClient
  namespace: System.Data.SqlTypes
  summary: "\n<p>Represents the minimum value that can be assigned to <xref href=\"System.Data.SqlTypes.SqlSingle.Value\" data-throw-if-not-resolved=\"false\"></xref> property of an instance of the <xref href=\"System.Data.SqlTypes.SqlSingle\" data-throw-if-not-resolved=\"false\"></xref> class.</p>\n"
  syntax:
    content: public static readonly SqlSingle MinValue
    content.vb: Public Shared ReadOnly MinValue As SqlSingle
    return:
      type: System.Data.SqlTypes.SqlSingle
  modifiers.csharp:
  - public
  - static
  - readonly
  modifiers.vb:
  - Public
  - Shared
  - ReadOnly
- uid: System.Data.SqlTypes.SqlSingle.Null
  commentId: F:System.Data.SqlTypes.SqlSingle.Null
  parent: System.Data.SqlTypes.SqlSingle
  langs:
  - csharp
  - vb
  nameWithType: SqlSingle.Null
  fullName: System.Data.SqlTypes.SqlSingle.Null
  type: Field
  source:
    remote:
      path: src/System.Data.SqlClient/src/System/Data/SqlTypes/SQLSingle.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    path: src/System.Data.SqlClient/src/System/Data/SqlTypes/SQLSingle.cs
    startLine: 521
  assemblies:
  - System.Data.SqlClient
  namespace: System.Data.SqlTypes
  summary: "\n<p>Represents a <xref href=\"System.DBNull\" data-throw-if-not-resolved=\"false\"></xref> that can be assigned to this instance of the <xref href=\"System.Data.SqlTypes.SqlSingle\" data-throw-if-not-resolved=\"false\"></xref> structure.</p>\n"
  syntax:
    content: public static readonly SqlSingle Null
    content.vb: Public Shared ReadOnly Null As SqlSingle
    return:
      type: System.Data.SqlTypes.SqlSingle
  modifiers.csharp:
  - public
  - static
  - readonly
  modifiers.vb:
  - Public
  - Shared
  - ReadOnly
- uid: System.Data.SqlTypes.SqlSingle.Zero
  commentId: F:System.Data.SqlTypes.SqlSingle.Zero
  id: Zero
  parent: System.Data.SqlTypes.SqlSingle
  langs:
  - csharp
  - vb
  name: Zero
  nameWithType: SqlSingle.Zero
  fullName: System.Data.SqlTypes.SqlSingle.Zero
  type: Field
  source:
    remote:
      path: src/System.Data.SqlClient/src/System/Data/SqlTypes/SQLSingle.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: Zero
    path: src/System.Data.SqlClient/src/System/Data/SqlTypes/SQLSingle.cs
    startLine: 525
  assemblies:
  - System.Data.SqlClient
  namespace: System.Data.SqlTypes
  summary: "\n<p>Represents the zero value that can be assigned to the <xref href=\"System.Data.SqlTypes.SqlSingle.Value\" data-throw-if-not-resolved=\"false\"></xref> property of an instance of the <xref href=\"System.Data.SqlTypes.SqlSingle\" data-throw-if-not-resolved=\"false\"></xref> class.</p>\n"
  syntax:
    content: public static readonly SqlSingle Zero
    content.vb: Public Shared ReadOnly Zero As SqlSingle
    return:
      type: System.Data.SqlTypes.SqlSingle
  modifiers.csharp:
  - public
  - static
  - readonly
  modifiers.vb:
  - Public
  - Shared
  - ReadOnly
- uid: System.Data.SqlTypes.SqlSingle.#ctor(System.Double)
  commentId: M:System.Data.SqlTypes.SqlSingle.#ctor(System.Double)
  id: '#ctor(System.Double)'
  parent: System.Data.SqlTypes.SqlSingle
  langs:
  - csharp
  - vb
  name: SqlSingle(Double)
  nameWithType: SqlSingle.SqlSingle(Double)
  fullName: System.Data.SqlTypes.SqlSingle.SqlSingle(System.Double)
  type: Constructor
  source:
    remote:
      path: src/System.Data.SqlClient/src/System/Data/SqlTypes/SQLSingle.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: .ctor
    path: src/System.Data.SqlClient/src/System/Data/SqlTypes/SQLSingle.cs
    startLine: 51
  assemblies:
  - System.Data.SqlClient
  namespace: System.Data.SqlTypes
  summary: "\n<p>Initializes a new instance of the <xref href=\"System.Data.SqlTypes.SqlSingle\" data-throw-if-not-resolved=\"false\"></xref> structure using the supplied double parameter.</p>\n"
  syntax:
    content: public SqlSingle(double value)
    content.vb: Public Sub New(value As Double)
    parameters:
    - id: value
      type: System.Double
      description: "\n<p>A double value which will be used as the <xref href=\"System.Data.SqlTypes.SqlSingle.Value\" data-throw-if-not-resolved=\"false\"></xref> of the new <xref href=\"System.Data.SqlTypes.SqlSingle\" data-throw-if-not-resolved=\"false\"></xref> structure. </p>\n"
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: System.Data.SqlTypes.SqlSingle.#ctor(System.Single)
  commentId: M:System.Data.SqlTypes.SqlSingle.#ctor(System.Single)
  id: '#ctor(System.Single)'
  parent: System.Data.SqlTypes.SqlSingle
  langs:
  - csharp
  - vb
  name: SqlSingle(Single)
  nameWithType: SqlSingle.SqlSingle(Single)
  fullName: System.Data.SqlTypes.SqlSingle.SqlSingle(System.Single)
  type: Constructor
  source:
    remote:
      path: src/System.Data.SqlClient/src/System/Data/SqlTypes/SQLSingle.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: .ctor
    path: src/System.Data.SqlClient/src/System/Data/SqlTypes/SQLSingle.cs
    startLine: 37
  assemblies:
  - System.Data.SqlClient
  namespace: System.Data.SqlTypes
  summary: "\n<p>Initializes a new instance of the <xref href=\"System.Data.SqlTypes.SqlSingle\" data-throw-if-not-resolved=\"false\"></xref> structure.</p>\n"
  syntax:
    content: public SqlSingle(float value)
    content.vb: Public Sub New(value As Single)
    parameters:
    - id: value
      type: System.Single
      description: "\n<p>A floating point number which will be used as the <xref href=\"System.Data.SqlTypes.SqlSingle.Value\" data-throw-if-not-resolved=\"false\"></xref> of the new <xref href=\"System.Data.SqlTypes.SqlSingle\" data-throw-if-not-resolved=\"false\"></xref> structure. </p>\n"
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: System.Data.SqlTypes.SqlSingle.IsNull
  commentId: P:System.Data.SqlTypes.SqlSingle.IsNull
  id: IsNull
  parent: System.Data.SqlTypes.SqlSingle
  langs:
  - csharp
  - vb
  name: IsNull
  nameWithType: SqlSingle.IsNull
  fullName: System.Data.SqlTypes.SqlSingle.IsNull
  type: Property
  source:
    remote:
      path: src/System.Data.SqlClient/src/System/Data/SqlTypes/SQLSingle.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: IsNull
    path: src/System.Data.SqlClient/src/System/Data/SqlTypes/SQLSingle.cs
    startLine: 59
  assemblies:
  - System.Data.SqlClient
  namespace: System.Data.SqlTypes
  summary: "\n<p>Indicates whether this <xref href=\"System.Data.SqlTypes.SqlSingle\" data-throw-if-not-resolved=\"false\"></xref> structure is null.</p>\n"
  syntax:
    content: public bool IsNull { get; }
    content.vb: Public ReadOnly Property IsNull As Boolean
    parameters: []
    return:
      type: System.Boolean
      description: "\n<p>\n<strong>true</strong> if null. Otherwise, <strong>false</strong>.</p>\n"
  implements:
  - System.Data.SqlTypes.INullable.IsNull
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: System.Data.SqlTypes.SqlSingle.Value
  commentId: P:System.Data.SqlTypes.SqlSingle.Value
  id: Value
  parent: System.Data.SqlTypes.SqlSingle
  langs:
  - csharp
  - vb
  name: Value
  nameWithType: SqlSingle.Value
  fullName: System.Data.SqlTypes.SqlSingle.Value
  type: Property
  source:
    remote:
      path: src/System.Data.SqlClient/src/System/Data/SqlTypes/SQLSingle.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: Value
    path: src/System.Data.SqlClient/src/System/Data/SqlTypes/SQLSingle.cs
    startLine: 68
  assemblies:
  - System.Data.SqlClient
  namespace: System.Data.SqlTypes
  summary: "\n<p>Gets the value of this <xref href=\"System.Data.SqlTypes.SqlSingle\" data-throw-if-not-resolved=\"false\"></xref> structure. This property is read-only.</p>\n"
  syntax:
    content: public float Value { get; }
    content.vb: Public ReadOnly Property Value As Single
    parameters: []
    return:
      type: System.Single
      description: "\n<p>A floating point value in the range -3.40E+38 through 3.40E+38.</p>\n"
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: System.Data.SqlTypes.SqlSingle.Add(System.Data.SqlTypes.SqlSingle,System.Data.SqlTypes.SqlSingle)
  commentId: M:System.Data.SqlTypes.SqlSingle.Add(System.Data.SqlTypes.SqlSingle,System.Data.SqlTypes.SqlSingle)
  id: Add(System.Data.SqlTypes.SqlSingle,System.Data.SqlTypes.SqlSingle)
  parent: System.Data.SqlTypes.SqlSingle
  langs:
  - csharp
  - vb
  name: Add(SqlSingle, SqlSingle)
  nameWithType: SqlSingle.Add(SqlSingle, SqlSingle)
  fullName: System.Data.SqlTypes.SqlSingle.Add(System.Data.SqlTypes.SqlSingle, System.Data.SqlTypes.SqlSingle)
  type: Method
  source:
    remote:
      path: src/System.Data.SqlClient/src/System/Data/SqlTypes/SQLSingle.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: Add
    path: src/System.Data.SqlClient/src/System/Data/SqlTypes/SQLSingle.cs
    startLine: 348
  assemblies:
  - System.Data.SqlClient
  namespace: System.Data.SqlTypes
  summary: "\n<p>Computes the sum of the two specified <xref href=\"System.Data.SqlTypes.SqlSingle\" data-throw-if-not-resolved=\"false\"></xref> structures.</p>\n"
  syntax:
    content: public static SqlSingle Add(SqlSingle x, SqlSingle y)
    content.vb: Public Shared Function Add(x As SqlSingle, y As SqlSingle) As SqlSingle
    parameters:
    - id: x
      type: System.Data.SqlTypes.SqlSingle
      description: "\n<p>A <xref href=\"System.Data.SqlTypes.SqlSingle\" data-throw-if-not-resolved=\"false\"></xref> structure. </p>\n"
    - id: y
      type: System.Data.SqlTypes.SqlSingle
      description: "\n<p>A <xref href=\"System.Data.SqlTypes.SqlSingle\" data-throw-if-not-resolved=\"false\"></xref> structure. </p>\n"
    return:
      type: System.Data.SqlTypes.SqlSingle
      description: "\n<p>A <xref href=\"System.Data.SqlTypes.SqlSingle\" data-throw-if-not-resolved=\"false\"></xref> structure that contains the sum of the two specified <xref href=\"System.Data.SqlTypes.SqlSingle\" data-throw-if-not-resolved=\"false\"></xref> structures.</p>\n"
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: System.Data.SqlTypes.SqlSingle.CompareTo(System.Data.SqlTypes.SqlSingle)
  commentId: M:System.Data.SqlTypes.SqlSingle.CompareTo(System.Data.SqlTypes.SqlSingle)
  id: CompareTo(System.Data.SqlTypes.SqlSingle)
  parent: System.Data.SqlTypes.SqlSingle
  langs:
  - csharp
  - vb
  name: CompareTo(SqlSingle)
  nameWithType: SqlSingle.CompareTo(SqlSingle)
  fullName: System.Data.SqlTypes.SqlSingle.CompareTo(System.Data.SqlTypes.SqlSingle)
  type: Method
  source:
    remote:
      path: src/System.Data.SqlClient/src/System/Data/SqlTypes/SQLSingle.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: CompareTo
    path: src/System.Data.SqlClient/src/System/Data/SqlTypes/SQLSingle.cs
    startLine: 475
  assemblies:
  - System.Data.SqlClient
  namespace: System.Data.SqlTypes
  summary: "\n<p>Compares this <xref href=\"System.Data.SqlTypes.SqlSingle\" data-throw-if-not-resolved=\"false\"></xref> instance to the supplied <xref href=\"System.Data.SqlTypes.SqlSingle\" data-throw-if-not-resolved=\"false\"></xref> and returns an indication of their relative values.</p>\n"
  syntax:
    content: public int CompareTo(SqlSingle value)
    content.vb: Public Function CompareTo(value As SqlSingle) As Integer
    parameters:
    - id: value
      type: System.Data.SqlTypes.SqlSingle
      description: "\n<p>The <xref href=\"System.Data.SqlTypes.SqlSingle\" data-throw-if-not-resolved=\"false\"></xref> to be compared.</p>\n"
    return:
      type: System.Int32
      description: "\n<p>A signed number that indicates the relative values of the instance and the object.</p>\n<p>Return Value </p>\n<p>Condition </p>\n<table><tbody><tr><td>\n<p>Less than zero </p>\n</td><td>\n<p>This instance is less than the object. </p>\n</td></tr><tr><td>\n<p>Zero </p>\n</td><td>\n<p>This instance is the same as the object. </p>\n</td></tr><tr><td>\n<p>Greater than zero </p>\n</td><td>\n<p>This instance is greater than the object </p>\n<p>-or- </p>\n<p>The object is a null reference (<strong>Nothing</strong> in Visual Basic) </p>\n</td></tr></tbody></table>\n"
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: System.Data.SqlTypes.SqlSingle.CompareTo(System.Object)
  commentId: M:System.Data.SqlTypes.SqlSingle.CompareTo(System.Object)
  id: CompareTo(System.Object)
  parent: System.Data.SqlTypes.SqlSingle
  langs:
  - csharp
  - vb
  name: CompareTo(Object)
  nameWithType: SqlSingle.CompareTo(Object)
  fullName: System.Data.SqlTypes.SqlSingle.CompareTo(System.Object)
  type: Method
  source:
    remote:
      path: src/System.Data.SqlClient/src/System/Data/SqlTypes/SQLSingle.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: CompareTo
    path: src/System.Data.SqlClient/src/System/Data/SqlTypes/SQLSingle.cs
    startLine: 464
  assemblies:
  - System.Data.SqlClient
  namespace: System.Data.SqlTypes
  summary: "\n<p>Compares this <xref href=\"System.Data.SqlTypes.SqlSingle\" data-throw-if-not-resolved=\"false\"></xref> instance to the supplied <xref href=\"System.Object\" data-throw-if-not-resolved=\"false\"></xref> and returns an indication of their relative values.</p>\n"
  syntax:
    content: public int CompareTo(object value)
    content.vb: Public Function CompareTo(value As Object) As Integer
    parameters:
    - id: value
      type: System.Object
      description: "\n<p>The <xref href=\"System.Object\" data-throw-if-not-resolved=\"false\"></xref> to be compared. </p>\n"
    return:
      type: System.Int32
      description: "\n<p>A signed number that indicates the relative values of the instance and the object.</p>\n<p>Return value </p>\n<p>Condition </p>\n<table><tbody><tr><td>\n<p>Less than zero </p>\n</td><td>\n<p>This instance is less than the object. </p>\n</td></tr><tr><td>\n<p>Zero </p>\n</td><td>\n<p>This instance is the same as the object. </p>\n</td></tr><tr><td>\n<p>Greater than zero </p>\n</td><td>\n<p>This instance is greater than the object </p>\n<p>-or- </p>\n<p>The object is a null reference (<strong>Nothing</strong> in Visual Basic) </p>\n</td></tr></tbody></table>\n"
  implements:
  - System.IComparable.CompareTo(System.Object)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: System.Data.SqlTypes.SqlSingle.Divide(System.Data.SqlTypes.SqlSingle,System.Data.SqlTypes.SqlSingle)
  commentId: M:System.Data.SqlTypes.SqlSingle.Divide(System.Data.SqlTypes.SqlSingle,System.Data.SqlTypes.SqlSingle)
  id: Divide(System.Data.SqlTypes.SqlSingle,System.Data.SqlTypes.SqlSingle)
  parent: System.Data.SqlTypes.SqlSingle
  langs:
  - csharp
  - vb
  name: Divide(SqlSingle, SqlSingle)
  nameWithType: SqlSingle.Divide(SqlSingle, SqlSingle)
  fullName: System.Data.SqlTypes.SqlSingle.Divide(System.Data.SqlTypes.SqlSingle, System.Data.SqlTypes.SqlSingle)
  type: Method
  source:
    remote:
      path: src/System.Data.SqlClient/src/System/Data/SqlTypes/SQLSingle.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: Divide
    path: src/System.Data.SqlClient/src/System/Data/SqlTypes/SQLSingle.cs
    startLine: 365
  assemblies:
  - System.Data.SqlClient
  namespace: System.Data.SqlTypes
  summary: "\n<p>Divides the first <xref href=\"System.Data.SqlTypes.SqlSingle\" data-throw-if-not-resolved=\"false\"></xref> structure by the second.</p>\n"
  syntax:
    content: public static SqlSingle Divide(SqlSingle x, SqlSingle y)
    content.vb: Public Shared Function Divide(x As SqlSingle, y As SqlSingle) As SqlSingle
    parameters:
    - id: x
      type: System.Data.SqlTypes.SqlSingle
      description: "\n<p>A <xref href=\"System.Data.SqlTypes.SqlSingle\" data-throw-if-not-resolved=\"false\"></xref> structure. </p>\n"
    - id: y
      type: System.Data.SqlTypes.SqlSingle
      description: "\n<p>A <xref href=\"System.Data.SqlTypes.SqlSingle\" data-throw-if-not-resolved=\"false\"></xref> structure. </p>\n"
    return:
      type: System.Data.SqlTypes.SqlSingle
      description: "\n<p>A <strong>SqlInt64</strong> structure that contains the results of the division.</p>\n"
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: System.Data.SqlTypes.SqlSingle.Equals(System.Data.SqlTypes.SqlSingle,System.Data.SqlTypes.SqlSingle)
  commentId: M:System.Data.SqlTypes.SqlSingle.Equals(System.Data.SqlTypes.SqlSingle,System.Data.SqlTypes.SqlSingle)
  id: Equals(System.Data.SqlTypes.SqlSingle,System.Data.SqlTypes.SqlSingle)
  parent: System.Data.SqlTypes.SqlSingle
  langs:
  - csharp
  - vb
  name: Equals(SqlSingle, SqlSingle)
  nameWithType: SqlSingle.Equals(SqlSingle, SqlSingle)
  fullName: System.Data.SqlTypes.SqlSingle.Equals(System.Data.SqlTypes.SqlSingle, System.Data.SqlTypes.SqlSingle)
  type: Method
  source:
    remote:
      path: src/System.Data.SqlClient/src/System/Data/SqlTypes/SQLSingle.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: Equals
    path: src/System.Data.SqlClient/src/System/Data/SqlTypes/SQLSingle.cs
    startLine: 371
  assemblies:
  - System.Data.SqlClient
  namespace: System.Data.SqlTypes
  summary: "\n<p>Performs a logical comparison of the two <xref href=\"System.Data.SqlTypes.SqlSingle\" data-throw-if-not-resolved=\"false\"></xref> parameters to determine whether they are equal.</p>\n"
  syntax:
    content: public static SqlBoolean Equals(SqlSingle x, SqlSingle y)
    content.vb: Public Shared Function Equals(x As SqlSingle, y As SqlSingle) As SqlBoolean
    parameters:
    - id: x
      type: System.Data.SqlTypes.SqlSingle
      description: "\n<p>A <xref href=\"System.Data.SqlTypes.SqlSingle\" data-throw-if-not-resolved=\"false\"></xref> structure. </p>\n"
    - id: y
      type: System.Data.SqlTypes.SqlSingle
      description: "\n<p>A <xref href=\"System.Data.SqlTypes.SqlSingle\" data-throw-if-not-resolved=\"false\"></xref> structure. </p>\n"
    return:
      type: System.Data.SqlTypes.SqlBoolean
      description: "\n<p>\n<strong>true</strong> if the two values are equal. Otherwise, <strong>false</strong>. If either instance is null, then the <strong>SqlSingle</strong> will be null.</p>\n"
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: System.Data.SqlTypes.SqlSingle.Equals(System.Object)
  commentId: M:System.Data.SqlTypes.SqlSingle.Equals(System.Object)
  id: Equals(System.Object)
  parent: System.Data.SqlTypes.SqlSingle
  langs:
  - csharp
  - vb
  name: Equals(Object)
  nameWithType: SqlSingle.Equals(Object)
  fullName: System.Data.SqlTypes.SqlSingle.Equals(System.Object)
  type: Method
  source:
    remote:
      path: src/System.Data.SqlClient/src/System/Data/SqlTypes/SQLSingle.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: Equals
    path: src/System.Data.SqlClient/src/System/Data/SqlTypes/SQLSingle.cs
    startLine: 493
  assemblies:
  - System.Data.SqlClient
  namespace: System.Data.SqlTypes
  summary: "\n<p>Compares the supplied object parameter to the <xref href=\"System.Data.SqlTypes.SqlSingle.Value\" data-throw-if-not-resolved=\"false\"></xref> property of the <xref href=\"System.Data.SqlTypes.SqlSingle\" data-throw-if-not-resolved=\"false\"></xref> object.</p>\n"
  syntax:
    content: public override bool Equals(object value)
    content.vb: Public Overrides Function Equals(value As Object) As Boolean
    parameters:
    - id: value
      type: System.Object
      description: "\n<p>The object to be compared. </p>\n"
    return:
      type: System.Boolean
      description: "\n<p>\n<strong>true</strong> if the object is an instance of <xref href=\"System.Data.SqlTypes.SqlSingle\" data-throw-if-not-resolved=\"false\"></xref> and the two are equal. Otherwise, <strong>false</strong>.</p>\n"
  overridden: System.ValueType.Equals(System.Object)
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
- uid: System.Data.SqlTypes.SqlSingle.GetHashCode
  commentId: M:System.Data.SqlTypes.SqlSingle.GetHashCode
  id: GetHashCode
  parent: System.Data.SqlTypes.SqlSingle
  langs:
  - csharp
  - vb
  name: GetHashCode()
  nameWithType: SqlSingle.GetHashCode()
  fullName: System.Data.SqlTypes.SqlSingle.GetHashCode()
  type: Method
  source:
    remote:
      path: src/System.Data.SqlClient/src/System/Data/SqlTypes/SQLSingle.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: GetHashCode
    path: src/System.Data.SqlClient/src/System/Data/SqlTypes/SQLSingle.cs
    startLine: 512
  assemblies:
  - System.Data.SqlClient
  namespace: System.Data.SqlTypes
  summary: "\n<p>Gets the hash code for this instance.</p>\n"
  syntax:
    content: public override int GetHashCode()
    content.vb: Public Overrides Function GetHashCode As Integer
    return:
      type: System.Int32
      description: "\n<p>A 32-bit signed integer hash code.</p>\n"
  overridden: System.ValueType.GetHashCode
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
- uid: System.Data.SqlTypes.SqlSingle.GreaterThan(System.Data.SqlTypes.SqlSingle,System.Data.SqlTypes.SqlSingle)
  commentId: M:System.Data.SqlTypes.SqlSingle.GreaterThan(System.Data.SqlTypes.SqlSingle,System.Data.SqlTypes.SqlSingle)
  id: GreaterThan(System.Data.SqlTypes.SqlSingle,System.Data.SqlTypes.SqlSingle)
  parent: System.Data.SqlTypes.SqlSingle
  langs:
  - csharp
  - vb
  name: GreaterThan(SqlSingle, SqlSingle)
  nameWithType: SqlSingle.GreaterThan(SqlSingle, SqlSingle)
  fullName: System.Data.SqlTypes.SqlSingle.GreaterThan(System.Data.SqlTypes.SqlSingle, System.Data.SqlTypes.SqlSingle)
  type: Method
  source:
    remote:
      path: src/System.Data.SqlClient/src/System/Data/SqlTypes/SQLSingle.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: GreaterThan
    path: src/System.Data.SqlClient/src/System/Data/SqlTypes/SQLSingle.cs
    startLine: 389
  assemblies:
  - System.Data.SqlClient
  namespace: System.Data.SqlTypes
  summary: "\n<p>Performs a logical comparison of the two <xref href=\"System.Data.SqlTypes.SqlSingle\" data-throw-if-not-resolved=\"false\"></xref> operands to determine whether the first is greater than the second.</p>\n"
  syntax:
    content: public static SqlBoolean GreaterThan(SqlSingle x, SqlSingle y)
    content.vb: Public Shared Function GreaterThan(x As SqlSingle, y As SqlSingle) As SqlBoolean
    parameters:
    - id: x
      type: System.Data.SqlTypes.SqlSingle
      description: "\n<p>A <xref href=\"System.Data.SqlTypes.SqlSingle\" data-throw-if-not-resolved=\"false\"></xref> structure. </p>\n"
    - id: y
      type: System.Data.SqlTypes.SqlSingle
      description: "\n<p>A <xref href=\"System.Data.SqlTypes.SqlSingle\" data-throw-if-not-resolved=\"false\"></xref> structure. </p>\n"
    return:
      type: System.Data.SqlTypes.SqlBoolean
      description: "\n<p>A <xref href=\"System.Data.SqlTypes.SqlBoolean\" data-throw-if-not-resolved=\"false\"></xref> that is <xref href=\"System.Data.SqlTypes.SqlBoolean.True\" data-throw-if-not-resolved=\"false\"></xref> if the first instance is greater than the second instance. Otherwise, <xref href=\"System.Data.SqlTypes.SqlBoolean.False\" data-throw-if-not-resolved=\"false\"></xref>. If either instance of <xref href=\"System.Data.SqlTypes.SqlSingle\" data-throw-if-not-resolved=\"false\"></xref> is null, the <xref href=\"System.Data.SqlTypes.SqlBoolean.Value\" data-throw-if-not-resolved=\"false\"></xref> of the <xref href=\"System.Data.SqlTypes.SqlBoolean\" data-throw-if-not-resolved=\"false\"></xref> will be <xref href=\"System.Data.SqlTypes.SqlBoolean.Null\" data-throw-if-not-resolved=\"false\"></xref>.</p>\n"
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: System.Data.SqlTypes.SqlSingle.GreaterThanOrEqual(System.Data.SqlTypes.SqlSingle,System.Data.SqlTypes.SqlSingle)
  commentId: M:System.Data.SqlTypes.SqlSingle.GreaterThanOrEqual(System.Data.SqlTypes.SqlSingle,System.Data.SqlTypes.SqlSingle)
  id: GreaterThanOrEqual(System.Data.SqlTypes.SqlSingle,System.Data.SqlTypes.SqlSingle)
  parent: System.Data.SqlTypes.SqlSingle
  langs:
  - csharp
  - vb
  name: GreaterThanOrEqual(SqlSingle, SqlSingle)
  nameWithType: SqlSingle.GreaterThanOrEqual(SqlSingle, SqlSingle)
  fullName: System.Data.SqlTypes.SqlSingle.GreaterThanOrEqual(System.Data.SqlTypes.SqlSingle, System.Data.SqlTypes.SqlSingle)
  type: Method
  source:
    remote:
      path: src/System.Data.SqlClient/src/System/Data/SqlTypes/SQLSingle.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: GreaterThanOrEqual
    path: src/System.Data.SqlClient/src/System/Data/SqlTypes/SQLSingle.cs
    startLine: 401
  assemblies:
  - System.Data.SqlClient
  namespace: System.Data.SqlTypes
  summary: "\n<p>Performs a logical comparison of two <xref href=\"System.Data.SqlTypes.SqlSingle\" data-throw-if-not-resolved=\"false\"></xref> structures to determine whether the first is greater than or equal to the second.</p>\n"
  syntax:
    content: public static SqlBoolean GreaterThanOrEqual(SqlSingle x, SqlSingle y)
    content.vb: Public Shared Function GreaterThanOrEqual(x As SqlSingle, y As SqlSingle) As SqlBoolean
    parameters:
    - id: x
      type: System.Data.SqlTypes.SqlSingle
      description: "\n<p>A <xref href=\"System.Data.SqlTypes.SqlSingle\" data-throw-if-not-resolved=\"false\"></xref> structure. </p>\n"
    - id: y
      type: System.Data.SqlTypes.SqlSingle
      description: "\n<p>A <xref href=\"System.Data.SqlTypes.SqlSingle\" data-throw-if-not-resolved=\"false\"></xref> structure. </p>\n"
    return:
      type: System.Data.SqlTypes.SqlBoolean
      description: "\n<p>A <xref href=\"System.Data.SqlTypes.SqlBoolean\" data-throw-if-not-resolved=\"false\"></xref> that is <xref href=\"System.Data.SqlTypes.SqlBoolean.True\" data-throw-if-not-resolved=\"false\"></xref> if the first instance is greater than or equal to the second instance. Otherwise, <xref href=\"System.Data.SqlTypes.SqlBoolean.False\" data-throw-if-not-resolved=\"false\"></xref>. If either instance of <xref href=\"System.Data.SqlTypes.SqlSingle\" data-throw-if-not-resolved=\"false\"></xref> is null, the <xref href=\"System.Data.SqlTypes.SqlBoolean.Value\" data-throw-if-not-resolved=\"false\"></xref> of the <xref href=\"System.Data.SqlTypes.SqlBoolean\" data-throw-if-not-resolved=\"false\"></xref> will be <xref href=\"System.Data.SqlTypes.SqlBoolean.Null\" data-throw-if-not-resolved=\"false\"></xref>.</p>\n"
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: System.Data.SqlTypes.SqlSingle.LessThan(System.Data.SqlTypes.SqlSingle,System.Data.SqlTypes.SqlSingle)
  commentId: M:System.Data.SqlTypes.SqlSingle.LessThan(System.Data.SqlTypes.SqlSingle,System.Data.SqlTypes.SqlSingle)
  id: LessThan(System.Data.SqlTypes.SqlSingle,System.Data.SqlTypes.SqlSingle)
  parent: System.Data.SqlTypes.SqlSingle
  langs:
  - csharp
  - vb
  name: LessThan(SqlSingle, SqlSingle)
  nameWithType: SqlSingle.LessThan(SqlSingle, SqlSingle)
  fullName: System.Data.SqlTypes.SqlSingle.LessThan(System.Data.SqlTypes.SqlSingle, System.Data.SqlTypes.SqlSingle)
  type: Method
  source:
    remote:
      path: src/System.Data.SqlClient/src/System/Data/SqlTypes/SQLSingle.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: LessThan
    path: src/System.Data.SqlClient/src/System/Data/SqlTypes/SQLSingle.cs
    startLine: 383
  assemblies:
  - System.Data.SqlClient
  namespace: System.Data.SqlTypes
  summary: "\n<p>Performs a logical comparison of the two <xref href=\"System.Data.SqlTypes.SqlSingle\" data-throw-if-not-resolved=\"false\"></xref> parameters to determine whether the first is less than the second.</p>\n"
  syntax:
    content: public static SqlBoolean LessThan(SqlSingle x, SqlSingle y)
    content.vb: Public Shared Function LessThan(x As SqlSingle, y As SqlSingle) As SqlBoolean
    parameters:
    - id: x
      type: System.Data.SqlTypes.SqlSingle
      description: "\n<p>A <xref href=\"System.Data.SqlTypes.SqlSingle\" data-throw-if-not-resolved=\"false\"></xref> structure. </p>\n"
    - id: y
      type: System.Data.SqlTypes.SqlSingle
      description: "\n<p>A <xref href=\"System.Data.SqlTypes.SqlSingle\" data-throw-if-not-resolved=\"false\"></xref> structure. </p>\n"
    return:
      type: System.Data.SqlTypes.SqlBoolean
      description: "\n<p>A <xref href=\"System.Data.SqlTypes.SqlBoolean\" data-throw-if-not-resolved=\"false\"></xref> that is <xref href=\"System.Data.SqlTypes.SqlBoolean.True\" data-throw-if-not-resolved=\"false\"></xref> if the first instance is less than the second instance. Otherwise, <xref href=\"System.Data.SqlTypes.SqlBoolean.False\" data-throw-if-not-resolved=\"false\"></xref>. If either instance of <xref href=\"System.Data.SqlTypes.SqlSingle\" data-throw-if-not-resolved=\"false\"></xref> is null, the <xref href=\"System.Data.SqlTypes.SqlBoolean.Value\" data-throw-if-not-resolved=\"false\"></xref> of the <xref href=\"System.Data.SqlTypes.SqlBoolean\" data-throw-if-not-resolved=\"false\"></xref> will be <xref href=\"System.Data.SqlTypes.SqlBoolean.Null\" data-throw-if-not-resolved=\"false\"></xref>.</p>\n"
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: System.Data.SqlTypes.SqlSingle.LessThanOrEqual(System.Data.SqlTypes.SqlSingle,System.Data.SqlTypes.SqlSingle)
  commentId: M:System.Data.SqlTypes.SqlSingle.LessThanOrEqual(System.Data.SqlTypes.SqlSingle,System.Data.SqlTypes.SqlSingle)
  id: LessThanOrEqual(System.Data.SqlTypes.SqlSingle,System.Data.SqlTypes.SqlSingle)
  parent: System.Data.SqlTypes.SqlSingle
  langs:
  - csharp
  - vb
  name: LessThanOrEqual(SqlSingle, SqlSingle)
  nameWithType: SqlSingle.LessThanOrEqual(SqlSingle, SqlSingle)
  fullName: System.Data.SqlTypes.SqlSingle.LessThanOrEqual(System.Data.SqlTypes.SqlSingle, System.Data.SqlTypes.SqlSingle)
  type: Method
  source:
    remote:
      path: src/System.Data.SqlClient/src/System/Data/SqlTypes/SQLSingle.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: LessThanOrEqual
    path: src/System.Data.SqlClient/src/System/Data/SqlTypes/SQLSingle.cs
    startLine: 395
  assemblies:
  - System.Data.SqlClient
  namespace: System.Data.SqlTypes
  summary: "\n<p>Performs a logical comparison of the two <xref href=\"System.Data.SqlTypes.SqlSingle\" data-throw-if-not-resolved=\"false\"></xref> parameters to determine whether the first is less than or equal to the second.</p>\n"
  syntax:
    content: public static SqlBoolean LessThanOrEqual(SqlSingle x, SqlSingle y)
    content.vb: Public Shared Function LessThanOrEqual(x As SqlSingle, y As SqlSingle) As SqlBoolean
    parameters:
    - id: x
      type: System.Data.SqlTypes.SqlSingle
      description: "\n<p>A <xref href=\"System.Data.SqlTypes.SqlSingle\" data-throw-if-not-resolved=\"false\"></xref> structure. </p>\n"
    - id: y
      type: System.Data.SqlTypes.SqlSingle
      description: "\n<p>A <xref href=\"System.Data.SqlTypes.SqlSingle\" data-throw-if-not-resolved=\"false\"></xref> structure. </p>\n"
    return:
      type: System.Data.SqlTypes.SqlBoolean
      description: "\n<p>A <xref href=\"System.Data.SqlTypes.SqlBoolean\" data-throw-if-not-resolved=\"false\"></xref> that is <xref href=\"System.Data.SqlTypes.SqlBoolean.True\" data-throw-if-not-resolved=\"false\"></xref> if the first instance is less than or equal to the second instance. Otherwise, <xref href=\"System.Data.SqlTypes.SqlBoolean.False\" data-throw-if-not-resolved=\"false\"></xref>. If either instance of <xref href=\"System.Data.SqlTypes.SqlSingle\" data-throw-if-not-resolved=\"false\"></xref> is null, the <xref href=\"System.Data.SqlTypes.SqlBoolean.Value\" data-throw-if-not-resolved=\"false\"></xref> of the <xref href=\"System.Data.SqlTypes.SqlBoolean\" data-throw-if-not-resolved=\"false\"></xref> will be <xref href=\"System.Data.SqlTypes.SqlBoolean.Null\" data-throw-if-not-resolved=\"false\"></xref>.</p>\n"
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: System.Data.SqlTypes.SqlSingle.Multiply(System.Data.SqlTypes.SqlSingle,System.Data.SqlTypes.SqlSingle)
  commentId: M:System.Data.SqlTypes.SqlSingle.Multiply(System.Data.SqlTypes.SqlSingle,System.Data.SqlTypes.SqlSingle)
  id: Multiply(System.Data.SqlTypes.SqlSingle,System.Data.SqlTypes.SqlSingle)
  parent: System.Data.SqlTypes.SqlSingle
  langs:
  - csharp
  - vb
  name: Multiply(SqlSingle, SqlSingle)
  nameWithType: SqlSingle.Multiply(SqlSingle, SqlSingle)
  fullName: System.Data.SqlTypes.SqlSingle.Multiply(System.Data.SqlTypes.SqlSingle, System.Data.SqlTypes.SqlSingle)
  type: Method
  source:
    remote:
      path: src/System.Data.SqlClient/src/System/Data/SqlTypes/SQLSingle.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: Multiply
    path: src/System.Data.SqlClient/src/System/Data/SqlTypes/SQLSingle.cs
    startLine: 359
  assemblies:
  - System.Data.SqlClient
  namespace: System.Data.SqlTypes
  summary: "\n<p>Computes the product of the two specified <xref href=\"System.Data.SqlTypes.SqlSingle\" data-throw-if-not-resolved=\"false\"></xref> structures.</p>\n"
  syntax:
    content: public static SqlSingle Multiply(SqlSingle x, SqlSingle y)
    content.vb: Public Shared Function Multiply(x As SqlSingle, y As SqlSingle) As SqlSingle
    parameters:
    - id: x
      type: System.Data.SqlTypes.SqlSingle
      description: "\n<p>A <xref href=\"System.Data.SqlTypes.SqlSingle\" data-throw-if-not-resolved=\"false\"></xref> structure. </p>\n"
    - id: y
      type: System.Data.SqlTypes.SqlSingle
      description: "\n<p>A <xref href=\"System.Data.SqlTypes.SqlSingle\" data-throw-if-not-resolved=\"false\"></xref> structure. </p>\n"
    return:
      type: System.Data.SqlTypes.SqlSingle
      description: "\n<p>A <xref href=\"System.Data.SqlTypes.SqlSingle\" data-throw-if-not-resolved=\"false\"></xref> structure that contains the product of the multiplication.</p>\n"
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: System.Data.SqlTypes.SqlSingle.NotEquals(System.Data.SqlTypes.SqlSingle,System.Data.SqlTypes.SqlSingle)
  commentId: M:System.Data.SqlTypes.SqlSingle.NotEquals(System.Data.SqlTypes.SqlSingle,System.Data.SqlTypes.SqlSingle)
  id: NotEquals(System.Data.SqlTypes.SqlSingle,System.Data.SqlTypes.SqlSingle)
  parent: System.Data.SqlTypes.SqlSingle
  langs:
  - csharp
  - vb
  name: NotEquals(SqlSingle, SqlSingle)
  nameWithType: SqlSingle.NotEquals(SqlSingle, SqlSingle)
  fullName: System.Data.SqlTypes.SqlSingle.NotEquals(System.Data.SqlTypes.SqlSingle, System.Data.SqlTypes.SqlSingle)
  type: Method
  source:
    remote:
      path: src/System.Data.SqlClient/src/System/Data/SqlTypes/SQLSingle.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: NotEquals
    path: src/System.Data.SqlClient/src/System/Data/SqlTypes/SQLSingle.cs
    startLine: 377
  assemblies:
  - System.Data.SqlClient
  namespace: System.Data.SqlTypes
  summary: "\n<p>Performs a logical comparison of the two <xref href=\"System.Data.SqlTypes.SqlSingle\" data-throw-if-not-resolved=\"false\"></xref> parameters to determine whether they are not equal.</p>\n"
  syntax:
    content: public static SqlBoolean NotEquals(SqlSingle x, SqlSingle y)
    content.vb: Public Shared Function NotEquals(x As SqlSingle, y As SqlSingle) As SqlBoolean
    parameters:
    - id: x
      type: System.Data.SqlTypes.SqlSingle
      description: "\n<p>A <xref href=\"System.Data.SqlTypes.SqlSingle\" data-throw-if-not-resolved=\"false\"></xref> structure. </p>\n"
    - id: y
      type: System.Data.SqlTypes.SqlSingle
      description: "\n<p>A <xref href=\"System.Data.SqlTypes.SqlSingle\" data-throw-if-not-resolved=\"false\"></xref> structure. </p>\n"
    return:
      type: System.Data.SqlTypes.SqlBoolean
      description: "\n<p>A <xref href=\"System.Data.SqlTypes.SqlBoolean\" data-throw-if-not-resolved=\"false\"></xref> that is <xref href=\"System.Data.SqlTypes.SqlBoolean.True\" data-throw-if-not-resolved=\"false\"></xref> if the two instances are not equal or <xref href=\"System.Data.SqlTypes.SqlBoolean.False\" data-throw-if-not-resolved=\"false\"></xref> if the two instances are equal. If either instance of <xref href=\"System.Data.SqlTypes.SqlSingle\" data-throw-if-not-resolved=\"false\"></xref> is null, the <xref href=\"System.Data.SqlTypes.SqlBoolean.Value\" data-throw-if-not-resolved=\"false\"></xref> of the <xref href=\"System.Data.SqlTypes.SqlBoolean\" data-throw-if-not-resolved=\"false\"></xref> will be <xref href=\"System.Data.SqlTypes.SqlBoolean.Null\" data-throw-if-not-resolved=\"false\"></xref>.</p>\n"
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: System.Data.SqlTypes.SqlSingle.op_Addition(System.Data.SqlTypes.SqlSingle,System.Data.SqlTypes.SqlSingle)
  commentId: M:System.Data.SqlTypes.SqlSingle.op_Addition(System.Data.SqlTypes.SqlSingle,System.Data.SqlTypes.SqlSingle)
  id: op_Addition(System.Data.SqlTypes.SqlSingle,System.Data.SqlTypes.SqlSingle)
  parent: System.Data.SqlTypes.SqlSingle
  langs:
  - csharp
  - vb
  name: Addition(SqlSingle, SqlSingle)
  nameWithType: SqlSingle.Addition(SqlSingle, SqlSingle)
  fullName: System.Data.SqlTypes.SqlSingle.Addition(System.Data.SqlTypes.SqlSingle, System.Data.SqlTypes.SqlSingle)
  type: Operator
  source:
    remote:
      path: src/System.Data.SqlClient/src/System/Data/SqlTypes/SQLSingle.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: op_Addition
    path: src/System.Data.SqlClient/src/System/Data/SqlTypes/SQLSingle.cs
    startLine: 133
  assemblies:
  - System.Data.SqlClient
  namespace: System.Data.SqlTypes
  summary: "\n<p>Computes the sum of the two specified <xref href=\"System.Data.SqlTypes.SqlSingle\" data-throw-if-not-resolved=\"false\"></xref> structures.</p>\n"
  syntax:
    content: public static SqlSingle operator +(SqlSingle x, SqlSingle y)
    content.vb: Public Shared Operator +(x As SqlSingle, y As SqlSingle) As SqlSingle
    parameters:
    - id: x
      type: System.Data.SqlTypes.SqlSingle
      description: "\n<p>A <xref href=\"System.Data.SqlTypes.SqlSingle\" data-throw-if-not-resolved=\"false\"></xref> structure. </p>\n"
    - id: y
      type: System.Data.SqlTypes.SqlSingle
      description: "\n<p>A <xref href=\"System.Data.SqlTypes.SqlSingle\" data-throw-if-not-resolved=\"false\"></xref> structure. </p>\n"
    return:
      type: System.Data.SqlTypes.SqlSingle
      description: "\n<p>A <xref href=\"System.Data.SqlTypes.SqlSingle\" data-throw-if-not-resolved=\"false\"></xref> structure that contains the sum of the two specified <xref href=\"System.Data.SqlTypes.SqlSingle\" data-throw-if-not-resolved=\"false\"></xref> structures.</p>\n"
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: System.Data.SqlTypes.SqlSingle.op_Division(System.Data.SqlTypes.SqlSingle,System.Data.SqlTypes.SqlSingle)
  commentId: M:System.Data.SqlTypes.SqlSingle.op_Division(System.Data.SqlTypes.SqlSingle,System.Data.SqlTypes.SqlSingle)
  id: op_Division(System.Data.SqlTypes.SqlSingle,System.Data.SqlTypes.SqlSingle)
  parent: System.Data.SqlTypes.SqlSingle
  langs:
  - csharp
  - vb
  name: Division(SqlSingle, SqlSingle)
  nameWithType: SqlSingle.Division(SqlSingle, SqlSingle)
  fullName: System.Data.SqlTypes.SqlSingle.Division(System.Data.SqlTypes.SqlSingle, System.Data.SqlTypes.SqlSingle)
  type: Operator
  source:
    remote:
      path: src/System.Data.SqlClient/src/System/Data/SqlTypes/SQLSingle.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: op_Division
    path: src/System.Data.SqlClient/src/System/Data/SqlTypes/SQLSingle.cs
    startLine: 181
  assemblies:
  - System.Data.SqlClient
  namespace: System.Data.SqlTypes
  summary: "\n<p>Divides the first <xref href=\"System.Data.SqlTypes.SqlSingle\" data-throw-if-not-resolved=\"false\"></xref> structure by the second.</p>\n"
  syntax:
    content: public static SqlSingle operator /(SqlSingle x, SqlSingle y)
    content.vb: Public Shared Operator /(x As SqlSingle, y As SqlSingle) As SqlSingle
    parameters:
    - id: x
      type: System.Data.SqlTypes.SqlSingle
      description: "\n<p>A <xref href=\"System.Data.SqlTypes.SqlSingle\" data-throw-if-not-resolved=\"false\"></xref> structure. </p>\n"
    - id: y
      type: System.Data.SqlTypes.SqlSingle
      description: "\n<p>A <xref href=\"System.Data.SqlTypes.SqlSingle\" data-throw-if-not-resolved=\"false\"></xref> structure. </p>\n"
    return:
      type: System.Data.SqlTypes.SqlSingle
      description: "\n<p>A <xref href=\"System.Data.SqlTypes.SqlSingle\" data-throw-if-not-resolved=\"false\"></xref> structure that contains the results of the division.</p>\n"
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: System.Data.SqlTypes.SqlSingle.op_Equality(System.Data.SqlTypes.SqlSingle,System.Data.SqlTypes.SqlSingle)
  commentId: M:System.Data.SqlTypes.SqlSingle.op_Equality(System.Data.SqlTypes.SqlSingle,System.Data.SqlTypes.SqlSingle)
  id: op_Equality(System.Data.SqlTypes.SqlSingle,System.Data.SqlTypes.SqlSingle)
  parent: System.Data.SqlTypes.SqlSingle
  langs:
  - csharp
  - vb
  name: Equality(SqlSingle, SqlSingle)
  nameWithType: SqlSingle.Equality(SqlSingle, SqlSingle)
  fullName: System.Data.SqlTypes.SqlSingle.Equality(System.Data.SqlTypes.SqlSingle, System.Data.SqlTypes.SqlSingle)
  type: Operator
  source:
    remote:
      path: src/System.Data.SqlClient/src/System/Data/SqlTypes/SQLSingle.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: op_Equality
    path: src/System.Data.SqlClient/src/System/Data/SqlTypes/SQLSingle.cs
    startLine: 298
  assemblies:
  - System.Data.SqlClient
  namespace: System.Data.SqlTypes
  summary: "\n<p>Performs a logical comparison of the two SqlSingle parameters to determine whether they are equal.</p>\n"
  syntax:
    content: public static SqlBoolean operator ==(SqlSingle x, SqlSingle y)
    content.vb: Public Shared Operator =(x As SqlSingle, y As SqlSingle) As SqlBoolean
    parameters:
    - id: x
      type: System.Data.SqlTypes.SqlSingle
      description: "\n<p>A <xref href=\"System.Data.SqlTypes.SqlSingle\" data-throw-if-not-resolved=\"false\"></xref> structure. </p>\n"
    - id: y
      type: System.Data.SqlTypes.SqlSingle
      description: "\n<p>A <xref href=\"System.Data.SqlTypes.SqlSingle\" data-throw-if-not-resolved=\"false\"></xref> structure. </p>\n"
    return:
      type: System.Data.SqlTypes.SqlBoolean
      description: "\n<p>A <xref href=\"System.Data.SqlTypes.SqlBoolean\" data-throw-if-not-resolved=\"false\"></xref> that is <xref href=\"System.Data.SqlTypes.SqlBoolean.True\" data-throw-if-not-resolved=\"false\"></xref> if the two instances are equal or <xref href=\"System.Data.SqlTypes.SqlBoolean.False\" data-throw-if-not-resolved=\"false\"></xref> if the two instances are not equal. If either instance of <xref href=\"System.Data.SqlTypes.SqlSingle\" data-throw-if-not-resolved=\"false\"></xref> is null, the <xref href=\"System.Data.SqlTypes.SqlBoolean.Value\" data-throw-if-not-resolved=\"false\"></xref> of the <xref href=\"System.Data.SqlTypes.SqlBoolean\" data-throw-if-not-resolved=\"false\"></xref> will be <xref href=\"System.Data.SqlTypes.SqlBoolean.Null\" data-throw-if-not-resolved=\"false\"></xref>.</p>\n"
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: System.Data.SqlTypes.SqlSingle.op_Explicit(System.Data.SqlTypes.SqlBoolean)~System.Data.SqlTypes.SqlSingle
  commentId: M:System.Data.SqlTypes.SqlSingle.op_Explicit(System.Data.SqlTypes.SqlBoolean)~System.Data.SqlTypes.SqlSingle
  id: op_Explicit(System.Data.SqlTypes.SqlBoolean)~System.Data.SqlTypes.SqlSingle
  parent: System.Data.SqlTypes.SqlSingle
  langs:
  - csharp
  - vb
  name: Explicit(SqlBoolean to SqlSingle)
  nameWithType: SqlSingle.Explicit(SqlBoolean to SqlSingle)
  fullName: System.Data.SqlTypes.SqlSingle.Explicit(System.Data.SqlTypes.SqlBoolean to System.Data.SqlTypes.SqlSingle)
  type: Operator
  source:
    remote:
      path: src/System.Data.SqlClient/src/System/Data/SqlTypes/SQLSingle.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: op_Explicit
    path: src/System.Data.SqlClient/src/System/Data/SqlTypes/SQLSingle.cs
    startLine: 205
  assemblies:
  - System.Data.SqlClient
  namespace: System.Data.SqlTypes
  summary: "\n<p>This implicit operator converts the supplied <xref href=\"System.Data.SqlTypes.SqlBoolean\" data-throw-if-not-resolved=\"false\"></xref> to <xref href=\"System.Data.SqlTypes.SqlSingle\" data-throw-if-not-resolved=\"false\"></xref>.</p>\n"
  syntax:
    content: public static explicit operator SqlSingle(SqlBoolean x)
    content.vb: Public Shared Narrowing Operator CType(x As SqlBoolean) As SqlSingle
    parameters:
    - id: x
      type: System.Data.SqlTypes.SqlBoolean
      description: "\n<p>The <xref href=\"System.Data.SqlTypes.SqlBoolean\" data-throw-if-not-resolved=\"false\"></xref> structure to be converted. </p>\n"
    return:
      type: System.Data.SqlTypes.SqlSingle
      description: "\n<p>A new <xref href=\"System.Data.SqlTypes.SqlSingle\" data-throw-if-not-resolved=\"false\"></xref> structure whose <xref href=\"System.Data.SqlTypes.SqlSingle.Value\" data-throw-if-not-resolved=\"false\"></xref> is equal to the <xref href=\"System.Data.SqlTypes.SqlBoolean.ByteValue\" data-throw-if-not-resolved=\"false\"></xref> of the <xref href=\"System.Data.SqlTypes.SqlBoolean\" data-throw-if-not-resolved=\"false\"></xref> parameter.</p>\n"
  nameWithType.vb: SqlSingle.Narrowing(SqlBoolean to SqlSingle)
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: System.Data.SqlTypes.SqlSingle.Narrowing(System.Data.SqlTypes.SqlBoolean to System.Data.SqlTypes.SqlSingle)
  name.vb: Narrowing(SqlBoolean to SqlSingle)
- uid: System.Data.SqlTypes.SqlSingle.op_Explicit(System.Data.SqlTypes.SqlDouble)~System.Data.SqlTypes.SqlSingle
  commentId: M:System.Data.SqlTypes.SqlSingle.op_Explicit(System.Data.SqlTypes.SqlDouble)~System.Data.SqlTypes.SqlSingle
  id: op_Explicit(System.Data.SqlTypes.SqlDouble)~System.Data.SqlTypes.SqlSingle
  parent: System.Data.SqlTypes.SqlSingle
  langs:
  - csharp
  - vb
  name: Explicit(SqlDouble to SqlSingle)
  nameWithType: SqlSingle.Explicit(SqlDouble to SqlSingle)
  fullName: System.Data.SqlTypes.SqlSingle.Explicit(System.Data.SqlTypes.SqlDouble to System.Data.SqlTypes.SqlSingle)
  type: Operator
  source:
    remote:
      path: src/System.Data.SqlClient/src/System/Data/SqlTypes/SQLSingle.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: op_Explicit
    path: src/System.Data.SqlClient/src/System/Data/SqlTypes/SQLSingle.cs
    startLine: 277
  assemblies:
  - System.Data.SqlClient
  namespace: System.Data.SqlTypes
  summary: "\n<p>Converts the supplied <xref href=\"System.Data.SqlTypes.SqlDouble\" data-throw-if-not-resolved=\"false\"></xref> parameter to <xref href=\"System.Data.SqlTypes.SqlSingle\" data-throw-if-not-resolved=\"false\"></xref>.</p>\n"
  syntax:
    content: public static explicit operator SqlSingle(SqlDouble x)
    content.vb: Public Shared Narrowing Operator CType(x As SqlDouble) As SqlSingle
    parameters:
    - id: x
      type: System.Data.SqlTypes.SqlDouble
      description: "\n<p>The <xref href=\"System.Data.SqlTypes.SqlDouble\" data-throw-if-not-resolved=\"false\"></xref> parameter to be converted. </p>\n"
    return:
      type: System.Data.SqlTypes.SqlSingle
      description: "\n<p>A new <xref href=\"System.Data.SqlTypes.SqlSingle\" data-throw-if-not-resolved=\"false\"></xref> structure whose <xref href=\"System.Data.SqlTypes.SqlSingle.Value\" data-throw-if-not-resolved=\"false\"></xref> is equal to the <xref href=\"System.Data.SqlTypes.SqlDouble.Value\" data-throw-if-not-resolved=\"false\"></xref> of the <xref href=\"System.Data.SqlTypes.SqlDouble\" data-throw-if-not-resolved=\"false\"></xref> parameter.</p>\n"
  nameWithType.vb: SqlSingle.Narrowing(SqlDouble to SqlSingle)
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: System.Data.SqlTypes.SqlSingle.Narrowing(System.Data.SqlTypes.SqlDouble to System.Data.SqlTypes.SqlSingle)
  name.vb: Narrowing(SqlDouble to SqlSingle)
- uid: System.Data.SqlTypes.SqlSingle.op_Explicit(System.Data.SqlTypes.SqlSingle)~System.Single
  commentId: M:System.Data.SqlTypes.SqlSingle.op_Explicit(System.Data.SqlTypes.SqlSingle)~System.Single
  id: op_Explicit(System.Data.SqlTypes.SqlSingle)~System.Single
  parent: System.Data.SqlTypes.SqlSingle
  langs:
  - csharp
  - vb
  name: Explicit(SqlSingle to Single)
  nameWithType: SqlSingle.Explicit(SqlSingle to Single)
  fullName: System.Data.SqlTypes.SqlSingle.Explicit(System.Data.SqlTypes.SqlSingle to System.Single)
  type: Operator
  source:
    remote:
      path: src/System.Data.SqlClient/src/System/Data/SqlTypes/SQLSingle.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: op_Explicit
    path: src/System.Data.SqlClient/src/System/Data/SqlTypes/SQLSingle.cs
    startLine: 92
  assemblies:
  - System.Data.SqlClient
  namespace: System.Data.SqlTypes
  summary: "\n<p>Converts the specified <xref href=\"System.Data.SqlTypes.SqlSingle\" data-throw-if-not-resolved=\"false\"></xref> structure to float.</p>\n"
  syntax:
    content: public static explicit operator float (SqlSingle x)
    content.vb: Public Shared Narrowing Operator CType(x As SqlSingle) As Single
    parameters:
    - id: x
      type: System.Data.SqlTypes.SqlSingle
      description: "\n<p>The <xref href=\"System.Data.SqlTypes.SqlSingle\" data-throw-if-not-resolved=\"false\"></xref> value to be converted to float. </p>\n"
    return:
      type: System.Single
      description: "\n<p>A float that contains the value of the <xref href=\"System.Data.SqlTypes.SqlSingle\" data-throw-if-not-resolved=\"false\"></xref> structure.</p>\n"
  nameWithType.vb: SqlSingle.Narrowing(SqlSingle to Single)
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: System.Data.SqlTypes.SqlSingle.Narrowing(System.Data.SqlTypes.SqlSingle to System.Single)
  name.vb: Narrowing(SqlSingle to Single)
- uid: System.Data.SqlTypes.SqlSingle.op_Explicit(System.Data.SqlTypes.SqlString)~System.Data.SqlTypes.SqlSingle
  commentId: M:System.Data.SqlTypes.SqlSingle.op_Explicit(System.Data.SqlTypes.SqlString)~System.Data.SqlTypes.SqlSingle
  id: op_Explicit(System.Data.SqlTypes.SqlString)~System.Data.SqlTypes.SqlSingle
  parent: System.Data.SqlTypes.SqlSingle
  langs:
  - csharp
  - vb
  name: Explicit(SqlString to SqlSingle)
  nameWithType: SqlSingle.Explicit(SqlString to SqlSingle)
  fullName: System.Data.SqlTypes.SqlSingle.Explicit(System.Data.SqlTypes.SqlString to System.Data.SqlTypes.SqlSingle)
  type: Operator
  source:
    remote:
      path: src/System.Data.SqlClient/src/System/Data/SqlTypes/SQLSingle.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: op_Explicit
    path: src/System.Data.SqlClient/src/System/Data/SqlTypes/SQLSingle.cs
    startLine: 287
  assemblies:
  - System.Data.SqlClient
  namespace: System.Data.SqlTypes
  summary: "\n<p>Converts the supplied <xref href=\"System.Data.SqlTypes.SqlString\" data-throw-if-not-resolved=\"false\"></xref> parameter to <xref href=\"System.Data.SqlTypes.SqlSingle\" data-throw-if-not-resolved=\"false\"></xref>.</p>\n"
  syntax:
    content: public static explicit operator SqlSingle(SqlString x)
    content.vb: Public Shared Narrowing Operator CType(x As SqlString) As SqlSingle
    parameters:
    - id: x
      type: System.Data.SqlTypes.SqlString
      description: "\n<p>The <xref href=\"System.Data.SqlTypes.SqlString\" data-throw-if-not-resolved=\"false\"></xref> object to be converted. </p>\n"
    return:
      type: System.Data.SqlTypes.SqlSingle
      description: "\n<p>A new <xref href=\"System.Data.SqlTypes.SqlSingle\" data-throw-if-not-resolved=\"false\"></xref> structure whose <xref href=\"System.Data.SqlTypes.SqlSingle.Value\" data-throw-if-not-resolved=\"false\"></xref> is equal to the value represented by the <xref href=\"System.Data.SqlTypes.SqlString\" data-throw-if-not-resolved=\"false\"></xref> parameter.</p>\n"
  nameWithType.vb: SqlSingle.Narrowing(SqlString to SqlSingle)
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: System.Data.SqlTypes.SqlSingle.Narrowing(System.Data.SqlTypes.SqlString to System.Data.SqlTypes.SqlSingle)
  name.vb: Narrowing(SqlString to SqlSingle)
- uid: System.Data.SqlTypes.SqlSingle.op_GreaterThan(System.Data.SqlTypes.SqlSingle,System.Data.SqlTypes.SqlSingle)
  commentId: M:System.Data.SqlTypes.SqlSingle.op_GreaterThan(System.Data.SqlTypes.SqlSingle,System.Data.SqlTypes.SqlSingle)
  id: op_GreaterThan(System.Data.SqlTypes.SqlSingle,System.Data.SqlTypes.SqlSingle)
  parent: System.Data.SqlTypes.SqlSingle
  langs:
  - csharp
  - vb
  name: GreaterThan(SqlSingle, SqlSingle)
  nameWithType: SqlSingle.GreaterThan(SqlSingle, SqlSingle)
  fullName: System.Data.SqlTypes.SqlSingle.GreaterThan(System.Data.SqlTypes.SqlSingle, System.Data.SqlTypes.SqlSingle)
  type: Operator
  source:
    remote:
      path: src/System.Data.SqlClient/src/System/Data/SqlTypes/SQLSingle.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: op_GreaterThan
    path: src/System.Data.SqlClient/src/System/Data/SqlTypes/SQLSingle.cs
    startLine: 322
  assemblies:
  - System.Data.SqlClient
  namespace: System.Data.SqlTypes
  summary: "\n<p>Performs a logical comparison of the two <xref href=\"System.Data.SqlTypes.SqlSingle\" data-throw-if-not-resolved=\"false\"></xref> operands to determine whether the first is greater than the second.</p>\n"
  syntax:
    content: public static SqlBoolean operator>(SqlSingle x, SqlSingle y)
    content.vb: Public Shared Operator>(x As SqlSingle, y As SqlSingle) As SqlBoolean
    parameters:
    - id: x
      type: System.Data.SqlTypes.SqlSingle
      description: "\n<p>A <xref href=\"System.Data.SqlTypes.SqlSingle\" data-throw-if-not-resolved=\"false\"></xref> structure. </p>\n"
    - id: y
      type: System.Data.SqlTypes.SqlSingle
      description: "\n<p>A <xref href=\"System.Data.SqlTypes.SqlSingle\" data-throw-if-not-resolved=\"false\"></xref> structure. </p>\n"
    return:
      type: System.Data.SqlTypes.SqlBoolean
      description: "\n<p>A <xref href=\"System.Data.SqlTypes.SqlBoolean\" data-throw-if-not-resolved=\"false\"></xref> that is <xref href=\"System.Data.SqlTypes.SqlBoolean.True\" data-throw-if-not-resolved=\"false\"></xref> if the first instance is greater than the second instance. Otherwise, <xref href=\"System.Data.SqlTypes.SqlBoolean.False\" data-throw-if-not-resolved=\"false\"></xref>. If either instance of <xref href=\"System.Data.SqlTypes.SqlSingle\" data-throw-if-not-resolved=\"false\"></xref> is null, the <xref href=\"System.Data.SqlTypes.SqlBoolean.Value\" data-throw-if-not-resolved=\"false\"></xref> of the <xref href=\"System.Data.SqlTypes.SqlBoolean\" data-throw-if-not-resolved=\"false\"></xref> will be <xref href=\"System.Data.SqlTypes.SqlBoolean.Null\" data-throw-if-not-resolved=\"false\"></xref>.</p>\n"
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: System.Data.SqlTypes.SqlSingle.op_GreaterThanOrEqual(System.Data.SqlTypes.SqlSingle,System.Data.SqlTypes.SqlSingle)
  commentId: M:System.Data.SqlTypes.SqlSingle.op_GreaterThanOrEqual(System.Data.SqlTypes.SqlSingle,System.Data.SqlTypes.SqlSingle)
  id: op_GreaterThanOrEqual(System.Data.SqlTypes.SqlSingle,System.Data.SqlTypes.SqlSingle)
  parent: System.Data.SqlTypes.SqlSingle
  langs:
  - csharp
  - vb
  name: GreaterThanOrEqual(SqlSingle, SqlSingle)
  nameWithType: SqlSingle.GreaterThanOrEqual(SqlSingle, SqlSingle)
  fullName: System.Data.SqlTypes.SqlSingle.GreaterThanOrEqual(System.Data.SqlTypes.SqlSingle, System.Data.SqlTypes.SqlSingle)
  type: Operator
  source:
    remote:
      path: src/System.Data.SqlClient/src/System/Data/SqlTypes/SQLSingle.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: op_GreaterThanOrEqual
    path: src/System.Data.SqlClient/src/System/Data/SqlTypes/SQLSingle.cs
    startLine: 338
  assemblies:
  - System.Data.SqlClient
  namespace: System.Data.SqlTypes
  summary: "\n<p>Performs a logical comparison of two <xref href=\"System.Data.SqlTypes.SqlSingle\" data-throw-if-not-resolved=\"false\"></xref> structures to determine whether the first is greater than or equl to the second.</p>\n"
  syntax:
    content: public static SqlBoolean operator >=(SqlSingle x, SqlSingle y)
    content.vb: Public Shared Operator >=(x As SqlSingle, y As SqlSingle) As SqlBoolean
    parameters:
    - id: x
      type: System.Data.SqlTypes.SqlSingle
      description: "\n<p>A <xref href=\"System.Data.SqlTypes.SqlSingle\" data-throw-if-not-resolved=\"false\"></xref> structure. </p>\n"
    - id: y
      type: System.Data.SqlTypes.SqlSingle
      description: "\n<p>A <xref href=\"System.Data.SqlTypes.SqlSingle\" data-throw-if-not-resolved=\"false\"></xref> structure. </p>\n"
    return:
      type: System.Data.SqlTypes.SqlBoolean
      description: "\n<p>A <xref href=\"System.Data.SqlTypes.SqlBoolean\" data-throw-if-not-resolved=\"false\"></xref> that is <xref href=\"System.Data.SqlTypes.SqlBoolean.True\" data-throw-if-not-resolved=\"false\"></xref> if the first instance is greater than or equal to the second instance. Otherwise, <xref href=\"System.Data.SqlTypes.SqlBoolean.False\" data-throw-if-not-resolved=\"false\"></xref>. If either instance of <xref href=\"System.Data.SqlTypes.SqlSingle\" data-throw-if-not-resolved=\"false\"></xref> is null, the <xref href=\"System.Data.SqlTypes.SqlBoolean.Value\" data-throw-if-not-resolved=\"false\"></xref> of the <xref href=\"System.Data.SqlTypes.SqlBoolean\" data-throw-if-not-resolved=\"false\"></xref> will be <xref href=\"System.Data.SqlTypes.SqlBoolean.Null\" data-throw-if-not-resolved=\"false\"></xref>.</p>\n"
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: System.Data.SqlTypes.SqlSingle.op_Implicit(System.Data.SqlTypes.SqlByte)~System.Data.SqlTypes.SqlSingle
  commentId: M:System.Data.SqlTypes.SqlSingle.op_Implicit(System.Data.SqlTypes.SqlByte)~System.Data.SqlTypes.SqlSingle
  id: op_Implicit(System.Data.SqlTypes.SqlByte)~System.Data.SqlTypes.SqlSingle
  parent: System.Data.SqlTypes.SqlSingle
  langs:
  - csharp
  - vb
  name: Implicit(SqlByte to SqlSingle)
  nameWithType: SqlSingle.Implicit(SqlByte to SqlSingle)
  fullName: System.Data.SqlTypes.SqlSingle.Implicit(System.Data.SqlTypes.SqlByte to System.Data.SqlTypes.SqlSingle)
  type: Operator
  source:
    remote:
      path: src/System.Data.SqlClient/src/System/Data/SqlTypes/SQLSingle.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: op_Implicit
    path: src/System.Data.SqlClient/src/System/Data/SqlTypes/SQLSingle.cs
    startLine: 214
  assemblies:
  - System.Data.SqlClient
  namespace: System.Data.SqlTypes
  summary: "\n<p>This implicit operator converts the <xref href=\"System.Data.SqlTypes.SqlByte\" data-throw-if-not-resolved=\"false\"></xref> parameter to <xref href=\"System.Data.SqlTypes.SqlSingle\" data-throw-if-not-resolved=\"false\"></xref>.</p>\n"
  syntax:
    content: public static implicit operator SqlSingle(SqlByte x)
    content.vb: Public Shared Widening Operator CType(x As SqlByte) As SqlSingle
    parameters:
    - id: x
      type: System.Data.SqlTypes.SqlByte
      description: "\n<p>The <xref href=\"System.Data.SqlTypes.SqlByte\" data-throw-if-not-resolved=\"false\"></xref> to be converted. </p>\n"
    return:
      type: System.Data.SqlTypes.SqlSingle
      description: "\n<p>A new <xref href=\"System.Data.SqlTypes.SqlSingle\" data-throw-if-not-resolved=\"false\"></xref> structure whose <xref href=\"System.Data.SqlTypes.SqlSingle.Value\" data-throw-if-not-resolved=\"false\"></xref> property equals the <xref href=\"System.Data.SqlTypes.SqlByte.Value\" data-throw-if-not-resolved=\"false\"></xref> of the <xref href=\"System.Data.SqlTypes.SqlByte\" data-throw-if-not-resolved=\"false\"></xref> parameter.</p>\n"
  nameWithType.vb: SqlSingle.Widening(SqlByte to SqlSingle)
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: System.Data.SqlTypes.SqlSingle.Widening(System.Data.SqlTypes.SqlByte to System.Data.SqlTypes.SqlSingle)
  name.vb: Widening(SqlByte to SqlSingle)
- uid: System.Data.SqlTypes.SqlSingle.op_Implicit(System.Data.SqlTypes.SqlDecimal)~System.Data.SqlTypes.SqlSingle
  commentId: M:System.Data.SqlTypes.SqlSingle.op_Implicit(System.Data.SqlTypes.SqlDecimal)~System.Data.SqlTypes.SqlSingle
  id: op_Implicit(System.Data.SqlTypes.SqlDecimal)~System.Data.SqlTypes.SqlSingle
  parent: System.Data.SqlTypes.SqlSingle
  langs:
  - csharp
  - vb
  name: Implicit(SqlDecimal to SqlSingle)
  nameWithType: SqlSingle.Implicit(SqlDecimal to SqlSingle)
  fullName: System.Data.SqlTypes.SqlSingle.Implicit(System.Data.SqlTypes.SqlDecimal to System.Data.SqlTypes.SqlSingle)
  type: Operator
  source:
    remote:
      path: src/System.Data.SqlClient/src/System/Data/SqlTypes/SQLSingle.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: op_Implicit
    path: src/System.Data.SqlClient/src/System/Data/SqlTypes/SQLSingle.cs
    startLine: 263
  assemblies:
  - System.Data.SqlClient
  namespace: System.Data.SqlTypes
  summary: "\n<p>Converts the supplied <xref href=\"System.Data.SqlTypes.SqlDecimal\" data-throw-if-not-resolved=\"false\"></xref> parameter to <xref href=\"System.Data.SqlTypes.SqlSingle\" data-throw-if-not-resolved=\"false\"></xref>.</p>\n"
  syntax:
    content: public static implicit operator SqlSingle(SqlDecimal x)
    content.vb: Public Shared Widening Operator CType(x As SqlDecimal) As SqlSingle
    parameters:
    - id: x
      type: System.Data.SqlTypes.SqlDecimal
      description: "\n<p>The <xref href=\"System.Data.SqlTypes.SqlDecimal\" data-throw-if-not-resolved=\"false\"></xref> structure to be converted. </p>\n"
    return:
      type: System.Data.SqlTypes.SqlSingle
      description: "\n<p>A new <xref href=\"System.Data.SqlTypes.SqlSingle\" data-throw-if-not-resolved=\"false\"></xref> structure whose <xref href=\"System.Data.SqlTypes.SqlSingle.Value\" data-throw-if-not-resolved=\"false\"></xref> is equal to the <xref href=\"System.Data.SqlTypes.SqlDecimal.Value\" data-throw-if-not-resolved=\"false\"></xref> of the <xref href=\"System.Data.SqlTypes.SqlDecimal\" data-throw-if-not-resolved=\"false\"></xref> parameter.</p>\n"
  nameWithType.vb: SqlSingle.Widening(SqlDecimal to SqlSingle)
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: System.Data.SqlTypes.SqlSingle.Widening(System.Data.SqlTypes.SqlDecimal to System.Data.SqlTypes.SqlSingle)
  name.vb: Widening(SqlDecimal to SqlSingle)
- uid: System.Data.SqlTypes.SqlSingle.op_Implicit(System.Data.SqlTypes.SqlInt16)~System.Data.SqlTypes.SqlSingle
  commentId: M:System.Data.SqlTypes.SqlSingle.op_Implicit(System.Data.SqlTypes.SqlInt16)~System.Data.SqlTypes.SqlSingle
  id: op_Implicit(System.Data.SqlTypes.SqlInt16)~System.Data.SqlTypes.SqlSingle
  parent: System.Data.SqlTypes.SqlSingle
  langs:
  - csharp
  - vb
  name: Implicit(SqlInt16 to SqlSingle)
  nameWithType: SqlSingle.Implicit(SqlInt16 to SqlSingle)
  fullName: System.Data.SqlTypes.SqlSingle.Implicit(System.Data.SqlTypes.SqlInt16 to System.Data.SqlTypes.SqlSingle)
  type: Operator
  source:
    remote:
      path: src/System.Data.SqlClient/src/System/Data/SqlTypes/SQLSingle.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: op_Implicit
    path: src/System.Data.SqlClient/src/System/Data/SqlTypes/SQLSingle.cs
    startLine: 224
  assemblies:
  - System.Data.SqlClient
  namespace: System.Data.SqlTypes
  summary: "\n<p>Converts the supplied <xref href=\"System.Data.SqlTypes.SqlInt16\" data-throw-if-not-resolved=\"false\"></xref> parameter to <xref href=\"System.Data.SqlTypes.SqlSingle\" data-throw-if-not-resolved=\"false\"></xref>.</p>\n"
  syntax:
    content: public static implicit operator SqlSingle(SqlInt16 x)
    content.vb: Public Shared Widening Operator CType(x As SqlInt16) As SqlSingle
    parameters:
    - id: x
      type: System.Data.SqlTypes.SqlInt16
      description: "\n<p>The <xref href=\"System.Data.SqlTypes.SqlInt16\" data-throw-if-not-resolved=\"false\"></xref> structure to be converted. </p>\n"
    return:
      type: System.Data.SqlTypes.SqlSingle
      description: "\n<p>A new <xref href=\"System.Data.SqlTypes.SqlSingle\" data-throw-if-not-resolved=\"false\"></xref> structure whose <xref href=\"System.Data.SqlTypes.SqlSingle.Value\" data-throw-if-not-resolved=\"false\"></xref> is equal to the <xref href=\"System.Data.SqlTypes.SqlInt16.Value\" data-throw-if-not-resolved=\"false\"></xref> of the <xref href=\"System.Data.SqlTypes.SqlInt16\" data-throw-if-not-resolved=\"false\"></xref> parameter.</p>\n"
  nameWithType.vb: SqlSingle.Widening(SqlInt16 to SqlSingle)
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: System.Data.SqlTypes.SqlSingle.Widening(System.Data.SqlTypes.SqlInt16 to System.Data.SqlTypes.SqlSingle)
  name.vb: Widening(SqlInt16 to SqlSingle)
- uid: System.Data.SqlTypes.SqlSingle.op_Implicit(System.Data.SqlTypes.SqlInt32)~System.Data.SqlTypes.SqlSingle
  commentId: M:System.Data.SqlTypes.SqlSingle.op_Implicit(System.Data.SqlTypes.SqlInt32)~System.Data.SqlTypes.SqlSingle
  id: op_Implicit(System.Data.SqlTypes.SqlInt32)~System.Data.SqlTypes.SqlSingle
  parent: System.Data.SqlTypes.SqlSingle
  langs:
  - csharp
  - vb
  name: Implicit(SqlInt32 to SqlSingle)
  nameWithType: SqlSingle.Implicit(SqlInt32 to SqlSingle)
  fullName: System.Data.SqlTypes.SqlSingle.Implicit(System.Data.SqlTypes.SqlInt32 to System.Data.SqlTypes.SqlSingle)
  type: Operator
  source:
    remote:
      path: src/System.Data.SqlClient/src/System/Data/SqlTypes/SQLSingle.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: op_Implicit
    path: src/System.Data.SqlClient/src/System/Data/SqlTypes/SQLSingle.cs
    startLine: 234
  assemblies:
  - System.Data.SqlClient
  namespace: System.Data.SqlTypes
  summary: "\n<p>Converts the supplied <xref href=\"System.Data.SqlTypes.SqlInt32\" data-throw-if-not-resolved=\"false\"></xref> structure to <xref href=\"System.Data.SqlTypes.SqlSingle\" data-throw-if-not-resolved=\"false\"></xref>.</p>\n"
  syntax:
    content: public static implicit operator SqlSingle(SqlInt32 x)
    content.vb: Public Shared Widening Operator CType(x As SqlInt32) As SqlSingle
    parameters:
    - id: x
      type: System.Data.SqlTypes.SqlInt32
      description: "\n<p>The <xref href=\"System.Data.SqlTypes.SqlInt32\" data-throw-if-not-resolved=\"false\"></xref> structure to be converted. </p>\n"
    return:
      type: System.Data.SqlTypes.SqlSingle
      description: "\n<p>A new <xref href=\"System.Data.SqlTypes.SqlSingle\" data-throw-if-not-resolved=\"false\"></xref> structure whose <xref href=\"System.Data.SqlTypes.SqlSingle.Value\" data-throw-if-not-resolved=\"false\"></xref> is equal to the <xref href=\"System.Data.SqlTypes.SqlInt32.Value\" data-throw-if-not-resolved=\"false\"></xref> of the <xref href=\"System.Data.SqlTypes.SqlInt32\" data-throw-if-not-resolved=\"false\"></xref> parameter.</p>\n"
  nameWithType.vb: SqlSingle.Widening(SqlInt32 to SqlSingle)
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: System.Data.SqlTypes.SqlSingle.Widening(System.Data.SqlTypes.SqlInt32 to System.Data.SqlTypes.SqlSingle)
  name.vb: Widening(SqlInt32 to SqlSingle)
- uid: System.Data.SqlTypes.SqlSingle.op_Implicit(System.Data.SqlTypes.SqlInt64)~System.Data.SqlTypes.SqlSingle
  commentId: M:System.Data.SqlTypes.SqlSingle.op_Implicit(System.Data.SqlTypes.SqlInt64)~System.Data.SqlTypes.SqlSingle
  id: op_Implicit(System.Data.SqlTypes.SqlInt64)~System.Data.SqlTypes.SqlSingle
  parent: System.Data.SqlTypes.SqlSingle
  langs:
  - csharp
  - vb
  name: Implicit(SqlInt64 to SqlSingle)
  nameWithType: SqlSingle.Implicit(SqlInt64 to SqlSingle)
  fullName: System.Data.SqlTypes.SqlSingle.Implicit(System.Data.SqlTypes.SqlInt64 to System.Data.SqlTypes.SqlSingle)
  type: Operator
  source:
    remote:
      path: src/System.Data.SqlClient/src/System/Data/SqlTypes/SQLSingle.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: op_Implicit
    path: src/System.Data.SqlClient/src/System/Data/SqlTypes/SQLSingle.cs
    startLine: 244
  assemblies:
  - System.Data.SqlClient
  namespace: System.Data.SqlTypes
  summary: "\n<p>Converts the supplied <xref href=\"System.Data.SqlTypes.SqlInt64\" data-throw-if-not-resolved=\"false\"></xref> parameter to <xref href=\"System.Data.SqlTypes.SqlSingle\" data-throw-if-not-resolved=\"false\"></xref>.</p>\n"
  syntax:
    content: public static implicit operator SqlSingle(SqlInt64 x)
    content.vb: Public Shared Widening Operator CType(x As SqlInt64) As SqlSingle
    parameters:
    - id: x
      type: System.Data.SqlTypes.SqlInt64
      description: "\n<p>The <xref href=\"System.Data.SqlTypes.SqlInt64\" data-throw-if-not-resolved=\"false\"></xref> structure to be converted. </p>\n"
    return:
      type: System.Data.SqlTypes.SqlSingle
      description: "\n<p>A new <xref href=\"System.Data.SqlTypes.SqlSingle\" data-throw-if-not-resolved=\"false\"></xref> structure whose <xref href=\"System.Data.SqlTypes.SqlSingle.Value\" data-throw-if-not-resolved=\"false\"></xref> is equal to the <xref href=\"System.Data.SqlTypes.SqlInt64.Value\" data-throw-if-not-resolved=\"false\"></xref> of the <xref href=\"System.Data.SqlTypes.SqlInt64\" data-throw-if-not-resolved=\"false\"></xref> parameter.</p>\n"
  nameWithType.vb: SqlSingle.Widening(SqlInt64 to SqlSingle)
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: System.Data.SqlTypes.SqlSingle.Widening(System.Data.SqlTypes.SqlInt64 to System.Data.SqlTypes.SqlSingle)
  name.vb: Widening(SqlInt64 to SqlSingle)
- uid: System.Data.SqlTypes.SqlSingle.op_Implicit(System.Data.SqlTypes.SqlMoney)~System.Data.SqlTypes.SqlSingle
  commentId: M:System.Data.SqlTypes.SqlSingle.op_Implicit(System.Data.SqlTypes.SqlMoney)~System.Data.SqlTypes.SqlSingle
  id: op_Implicit(System.Data.SqlTypes.SqlMoney)~System.Data.SqlTypes.SqlSingle
  parent: System.Data.SqlTypes.SqlSingle
  langs:
  - csharp
  - vb
  name: Implicit(SqlMoney to SqlSingle)
  nameWithType: SqlSingle.Implicit(SqlMoney to SqlSingle)
  fullName: System.Data.SqlTypes.SqlSingle.Implicit(System.Data.SqlTypes.SqlMoney to System.Data.SqlTypes.SqlSingle)
  type: Operator
  source:
    remote:
      path: src/System.Data.SqlClient/src/System/Data/SqlTypes/SQLSingle.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: op_Implicit
    path: src/System.Data.SqlClient/src/System/Data/SqlTypes/SQLSingle.cs
    startLine: 254
  assemblies:
  - System.Data.SqlClient
  namespace: System.Data.SqlTypes
  summary: "\n<p>Converts the supplied <xref href=\"System.Data.SqlTypes.SqlMoney\" data-throw-if-not-resolved=\"false\"></xref> structure to <xref href=\"System.Data.SqlTypes.SqlSingle\" data-throw-if-not-resolved=\"false\"></xref>.</p>\n"
  syntax:
    content: public static implicit operator SqlSingle(SqlMoney x)
    content.vb: Public Shared Widening Operator CType(x As SqlMoney) As SqlSingle
    parameters:
    - id: x
      type: System.Data.SqlTypes.SqlMoney
      description: "\n<p>The <xref href=\"System.Data.SqlTypes.SqlMoney\" data-throw-if-not-resolved=\"false\"></xref> structure to be converted. </p>\n"
    return:
      type: System.Data.SqlTypes.SqlSingle
      description: "\n<p>A new <xref href=\"System.Data.SqlTypes.SqlSingle\" data-throw-if-not-resolved=\"false\"></xref> structure whose <xref href=\"System.Data.SqlTypes.SqlSingle.Value\" data-throw-if-not-resolved=\"false\"></xref> is equal to the <xref href=\"System.Data.SqlTypes.SqlMoney.Value\" data-throw-if-not-resolved=\"false\"></xref> of the <xref href=\"System.Data.SqlTypes.SqlMoney\" data-throw-if-not-resolved=\"false\"></xref> parameter.</p>\n"
  nameWithType.vb: SqlSingle.Widening(SqlMoney to SqlSingle)
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: System.Data.SqlTypes.SqlSingle.Widening(System.Data.SqlTypes.SqlMoney to System.Data.SqlTypes.SqlSingle)
  name.vb: Widening(SqlMoney to SqlSingle)
- uid: System.Data.SqlTypes.SqlSingle.op_Implicit(System.Single)~System.Data.SqlTypes.SqlSingle
  commentId: M:System.Data.SqlTypes.SqlSingle.op_Implicit(System.Single)~System.Data.SqlTypes.SqlSingle
  id: op_Implicit(System.Single)~System.Data.SqlTypes.SqlSingle
  parent: System.Data.SqlTypes.SqlSingle
  langs:
  - csharp
  - vb
  name: Implicit(Single to SqlSingle)
  nameWithType: SqlSingle.Implicit(Single to SqlSingle)
  fullName: System.Data.SqlTypes.SqlSingle.Implicit(System.Single to System.Data.SqlTypes.SqlSingle)
  type: Operator
  source:
    remote:
      path: src/System.Data.SqlClient/src/System/Data/SqlTypes/SQLSingle.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: op_Implicit
    path: src/System.Data.SqlClient/src/System/Data/SqlTypes/SQLSingle.cs
    startLine: 83
  assemblies:
  - System.Data.SqlClient
  namespace: System.Data.SqlTypes
  summary: "\n<p>Converts the specified floating point value to <xref href=\"System.Data.SqlTypes.SqlSingle\" data-throw-if-not-resolved=\"false\"></xref>.</p>\n"
  syntax:
    content: public static implicit operator SqlSingle(float x)
    content.vb: Public Shared Widening Operator CType(x As Single) As SqlSingle
    parameters:
    - id: x
      type: System.Single
      description: "\n<p>The float value to be converted to <xref href=\"System.Data.SqlTypes.SqlSingle\" data-throw-if-not-resolved=\"false\"></xref>. </p>\n"
    return:
      type: System.Data.SqlTypes.SqlSingle
      description: "\n<p>A <xref href=\"System.Data.SqlTypes.SqlSingle\" data-throw-if-not-resolved=\"false\"></xref> structure that contains the value of the specified float.</p>\n"
  nameWithType.vb: SqlSingle.Widening(Single to SqlSingle)
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: System.Data.SqlTypes.SqlSingle.Widening(System.Single to System.Data.SqlTypes.SqlSingle)
  name.vb: Widening(Single to SqlSingle)
- uid: System.Data.SqlTypes.SqlSingle.op_Inequality(System.Data.SqlTypes.SqlSingle,System.Data.SqlTypes.SqlSingle)
  commentId: M:System.Data.SqlTypes.SqlSingle.op_Inequality(System.Data.SqlTypes.SqlSingle,System.Data.SqlTypes.SqlSingle)
  id: op_Inequality(System.Data.SqlTypes.SqlSingle,System.Data.SqlTypes.SqlSingle)
  parent: System.Data.SqlTypes.SqlSingle
  langs:
  - csharp
  - vb
  name: Inequality(SqlSingle, SqlSingle)
  nameWithType: SqlSingle.Inequality(SqlSingle, SqlSingle)
  fullName: System.Data.SqlTypes.SqlSingle.Inequality(System.Data.SqlTypes.SqlSingle, System.Data.SqlTypes.SqlSingle)
  type: Operator
  source:
    remote:
      path: src/System.Data.SqlClient/src/System/Data/SqlTypes/SQLSingle.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: op_Inequality
    path: src/System.Data.SqlClient/src/System/Data/SqlTypes/SQLSingle.cs
    startLine: 306
  assemblies:
  - System.Data.SqlClient
  namespace: System.Data.SqlTypes
  summary: "\n<p>Performs a logical comparison of the two <xref href=\"System.Data.SqlTypes.SqlSingle\" data-throw-if-not-resolved=\"false\"></xref> parameters to determine whether they are not equal.</p>\n"
  syntax:
    content: public static SqlBoolean operator !=(SqlSingle x, SqlSingle y)
    content.vb: Public Shared Operator <>(x As SqlSingle, y As SqlSingle) As SqlBoolean
    parameters:
    - id: x
      type: System.Data.SqlTypes.SqlSingle
      description: "\n<p>A <xref href=\"System.Data.SqlTypes.SqlSingle\" data-throw-if-not-resolved=\"false\"></xref> structure. </p>\n"
    - id: y
      type: System.Data.SqlTypes.SqlSingle
      description: "\n<p>A <xref href=\"System.Data.SqlTypes.SqlSingle\" data-throw-if-not-resolved=\"false\"></xref> structure. </p>\n"
    return:
      type: System.Data.SqlTypes.SqlBoolean
      description: "\n<p>A <xref href=\"System.Data.SqlTypes.SqlBoolean\" data-throw-if-not-resolved=\"false\"></xref> that is <xref href=\"System.Data.SqlTypes.SqlBoolean.True\" data-throw-if-not-resolved=\"false\"></xref> if the two instances are not equal or <xref href=\"System.Data.SqlTypes.SqlBoolean.False\" data-throw-if-not-resolved=\"false\"></xref> if the two instances are equal. If either instance of <xref href=\"System.Data.SqlTypes.SqlSingle\" data-throw-if-not-resolved=\"false\"></xref> is null, the <xref href=\"System.Data.SqlTypes.SqlBoolean.Value\" data-throw-if-not-resolved=\"false\"></xref> of the <xref href=\"System.Data.SqlTypes.SqlBoolean\" data-throw-if-not-resolved=\"false\"></xref> will be <xref href=\"System.Data.SqlTypes.SqlBoolean.Null\" data-throw-if-not-resolved=\"false\"></xref>.</p>\n"
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: System.Data.SqlTypes.SqlSingle.op_LessThan(System.Data.SqlTypes.SqlSingle,System.Data.SqlTypes.SqlSingle)
  commentId: M:System.Data.SqlTypes.SqlSingle.op_LessThan(System.Data.SqlTypes.SqlSingle,System.Data.SqlTypes.SqlSingle)
  id: op_LessThan(System.Data.SqlTypes.SqlSingle,System.Data.SqlTypes.SqlSingle)
  parent: System.Data.SqlTypes.SqlSingle
  langs:
  - csharp
  - vb
  name: LessThan(SqlSingle, SqlSingle)
  nameWithType: SqlSingle.LessThan(SqlSingle, SqlSingle)
  fullName: System.Data.SqlTypes.SqlSingle.LessThan(System.Data.SqlTypes.SqlSingle, System.Data.SqlTypes.SqlSingle)
  type: Operator
  source:
    remote:
      path: src/System.Data.SqlClient/src/System/Data/SqlTypes/SQLSingle.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: op_LessThan
    path: src/System.Data.SqlClient/src/System/Data/SqlTypes/SQLSingle.cs
    startLine: 314
  assemblies:
  - System.Data.SqlClient
  namespace: System.Data.SqlTypes
  summary: "\n<p>Performs a logical comparison of the two <xref href=\"System.Data.SqlTypes.SqlSingle\" data-throw-if-not-resolved=\"false\"></xref> parameters to determine whether the first is less than the second.</p>\n"
  syntax:
    content: public static SqlBoolean operator <(SqlSingle x, SqlSingle y)
    content.vb: Public Shared Operator <(x As SqlSingle, y As SqlSingle) As SqlBoolean
    parameters:
    - id: x
      type: System.Data.SqlTypes.SqlSingle
      description: "\n<p>A <xref href=\"System.Data.SqlTypes.SqlSingle\" data-throw-if-not-resolved=\"false\"></xref> structure. </p>\n"
    - id: y
      type: System.Data.SqlTypes.SqlSingle
      description: "\n<p>A <xref href=\"System.Data.SqlTypes.SqlSingle\" data-throw-if-not-resolved=\"false\"></xref> structure. </p>\n"
    return:
      type: System.Data.SqlTypes.SqlBoolean
      description: "\n<p>A <xref href=\"System.Data.SqlTypes.SqlBoolean\" data-throw-if-not-resolved=\"false\"></xref> that is <xref href=\"System.Data.SqlTypes.SqlBoolean.True\" data-throw-if-not-resolved=\"false\"></xref> if the first instance is less than the second instance. Otherwise, <xref href=\"System.Data.SqlTypes.SqlBoolean.False\" data-throw-if-not-resolved=\"false\"></xref>. If either instance of <xref href=\"System.Data.SqlTypes.SqlSingle\" data-throw-if-not-resolved=\"false\"></xref> is null, the <xref href=\"System.Data.SqlTypes.SqlBoolean.Value\" data-throw-if-not-resolved=\"false\"></xref> of the <xref href=\"System.Data.SqlTypes.SqlBoolean\" data-throw-if-not-resolved=\"false\"></xref> will be <xref href=\"System.Data.SqlTypes.SqlBoolean.Null\" data-throw-if-not-resolved=\"false\"></xref>.</p>\n"
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: System.Data.SqlTypes.SqlSingle.op_LessThanOrEqual(System.Data.SqlTypes.SqlSingle,System.Data.SqlTypes.SqlSingle)
  commentId: M:System.Data.SqlTypes.SqlSingle.op_LessThanOrEqual(System.Data.SqlTypes.SqlSingle,System.Data.SqlTypes.SqlSingle)
  id: op_LessThanOrEqual(System.Data.SqlTypes.SqlSingle,System.Data.SqlTypes.SqlSingle)
  parent: System.Data.SqlTypes.SqlSingle
  langs:
  - csharp
  - vb
  name: LessThanOrEqual(SqlSingle, SqlSingle)
  nameWithType: SqlSingle.LessThanOrEqual(SqlSingle, SqlSingle)
  fullName: System.Data.SqlTypes.SqlSingle.LessThanOrEqual(System.Data.SqlTypes.SqlSingle, System.Data.SqlTypes.SqlSingle)
  type: Operator
  source:
    remote:
      path: src/System.Data.SqlClient/src/System/Data/SqlTypes/SQLSingle.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: op_LessThanOrEqual
    path: src/System.Data.SqlClient/src/System/Data/SqlTypes/SQLSingle.cs
    startLine: 330
  assemblies:
  - System.Data.SqlClient
  namespace: System.Data.SqlTypes
  summary: "\n<p>Performs a logical comparison of the two <xref href=\"System.Data.SqlTypes.SqlSingle\" data-throw-if-not-resolved=\"false\"></xref> parameters to determine whether the first is less than or equal to the second.</p>\n"
  syntax:
    content: public static SqlBoolean operator <=(SqlSingle x, SqlSingle y)
    content.vb: Public Shared Operator <=(x As SqlSingle, y As SqlSingle) As SqlBoolean
    parameters:
    - id: x
      type: System.Data.SqlTypes.SqlSingle
      description: "\n<p>A <xref href=\"System.Data.SqlTypes.SqlSingle\" data-throw-if-not-resolved=\"false\"></xref> structure. </p>\n"
    - id: y
      type: System.Data.SqlTypes.SqlSingle
      description: "\n<p>A <xref href=\"System.Data.SqlTypes.SqlSingle\" data-throw-if-not-resolved=\"false\"></xref> structure. </p>\n"
    return:
      type: System.Data.SqlTypes.SqlBoolean
      description: "\n<p>A <xref href=\"System.Data.SqlTypes.SqlBoolean\" data-throw-if-not-resolved=\"false\"></xref> that is <xref href=\"System.Data.SqlTypes.SqlBoolean.True\" data-throw-if-not-resolved=\"false\"></xref> if the first instance is less than or equal to the second instance. Otherwise, <xref href=\"System.Data.SqlTypes.SqlBoolean.False\" data-throw-if-not-resolved=\"false\"></xref>. If either instance of <xref href=\"System.Data.SqlTypes.SqlSingle\" data-throw-if-not-resolved=\"false\"></xref> is null, the <xref href=\"System.Data.SqlTypes.SqlBoolean.Value\" data-throw-if-not-resolved=\"false\"></xref> of the <xref href=\"System.Data.SqlTypes.SqlBoolean\" data-throw-if-not-resolved=\"false\"></xref> will be <xref href=\"System.Data.SqlTypes.SqlBoolean.Null\" data-throw-if-not-resolved=\"false\"></xref>.</p>\n"
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: System.Data.SqlTypes.SqlSingle.op_Multiply(System.Data.SqlTypes.SqlSingle,System.Data.SqlTypes.SqlSingle)
  commentId: M:System.Data.SqlTypes.SqlSingle.op_Multiply(System.Data.SqlTypes.SqlSingle,System.Data.SqlTypes.SqlSingle)
  id: op_Multiply(System.Data.SqlTypes.SqlSingle,System.Data.SqlTypes.SqlSingle)
  parent: System.Data.SqlTypes.SqlSingle
  langs:
  - csharp
  - vb
  name: Multiply(SqlSingle, SqlSingle)
  nameWithType: SqlSingle.Multiply(SqlSingle, SqlSingle)
  fullName: System.Data.SqlTypes.SqlSingle.Multiply(System.Data.SqlTypes.SqlSingle, System.Data.SqlTypes.SqlSingle)
  type: Operator
  source:
    remote:
      path: src/System.Data.SqlClient/src/System/Data/SqlTypes/SQLSingle.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: op_Multiply
    path: src/System.Data.SqlClient/src/System/Data/SqlTypes/SQLSingle.cs
    startLine: 165
  assemblies:
  - System.Data.SqlClient
  namespace: System.Data.SqlTypes
  summary: "\n<p>Computes the product of the two specified <xref href=\"System.Data.SqlTypes.SqlSingle\" data-throw-if-not-resolved=\"false\"></xref> structures.</p>\n"
  syntax:
    content: public static SqlSingle operator *(SqlSingle x, SqlSingle y)
    content.vb: Public Shared Operator *(x As SqlSingle, y As SqlSingle) As SqlSingle
    parameters:
    - id: x
      type: System.Data.SqlTypes.SqlSingle
      description: "\n<p>A <xref href=\"System.Data.SqlTypes.SqlSingle\" data-throw-if-not-resolved=\"false\"></xref> structure. </p>\n"
    - id: y
      type: System.Data.SqlTypes.SqlSingle
      description: "\n<p>A <xref href=\"System.Data.SqlTypes.SqlSingle\" data-throw-if-not-resolved=\"false\"></xref> structure. </p>\n"
    return:
      type: System.Data.SqlTypes.SqlSingle
      description: "\n<p>A <xref href=\"System.Data.SqlTypes.SqlSingle\" data-throw-if-not-resolved=\"false\"></xref> structure that contains the product of the multiplication.</p>\n"
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: System.Data.SqlTypes.SqlSingle.op_Subtraction(System.Data.SqlTypes.SqlSingle,System.Data.SqlTypes.SqlSingle)
  commentId: M:System.Data.SqlTypes.SqlSingle.op_Subtraction(System.Data.SqlTypes.SqlSingle,System.Data.SqlTypes.SqlSingle)
  id: op_Subtraction(System.Data.SqlTypes.SqlSingle,System.Data.SqlTypes.SqlSingle)
  parent: System.Data.SqlTypes.SqlSingle
  langs:
  - csharp
  - vb
  name: Subtraction(SqlSingle, SqlSingle)
  nameWithType: SqlSingle.Subtraction(SqlSingle, SqlSingle)
  fullName: System.Data.SqlTypes.SqlSingle.Subtraction(System.Data.SqlTypes.SqlSingle, System.Data.SqlTypes.SqlSingle)
  type: Operator
  source:
    remote:
      path: src/System.Data.SqlClient/src/System/Data/SqlTypes/SQLSingle.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: op_Subtraction
    path: src/System.Data.SqlClient/src/System/Data/SqlTypes/SQLSingle.cs
    startLine: 149
  assemblies:
  - System.Data.SqlClient
  namespace: System.Data.SqlTypes
  summary: "\n<p>Subtracts the second <xref href=\"System.Data.SqlTypes.SqlSingle\" data-throw-if-not-resolved=\"false\"></xref> structure from the first.</p>\n"
  syntax:
    content: public static SqlSingle operator -(SqlSingle x, SqlSingle y)
    content.vb: Public Shared Operator -(x As SqlSingle, y As SqlSingle) As SqlSingle
    parameters:
    - id: x
      type: System.Data.SqlTypes.SqlSingle
      description: "\n<p>A <xref href=\"System.Data.SqlTypes.SqlSingle\" data-throw-if-not-resolved=\"false\"></xref> structure. </p>\n"
    - id: y
      type: System.Data.SqlTypes.SqlSingle
      description: "\n<p>A <xref href=\"System.Data.SqlTypes.SqlSingle\" data-throw-if-not-resolved=\"false\"></xref> structure. </p>\n"
    return:
      type: System.Data.SqlTypes.SqlSingle
      description: "\n<p>A <xref href=\"System.Data.SqlTypes.SqlSingle\" data-throw-if-not-resolved=\"false\"></xref> structure that contains the results of the subtraction.</p>\n"
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: System.Data.SqlTypes.SqlSingle.op_UnaryNegation(System.Data.SqlTypes.SqlSingle)
  commentId: M:System.Data.SqlTypes.SqlSingle.op_UnaryNegation(System.Data.SqlTypes.SqlSingle)
  id: op_UnaryNegation(System.Data.SqlTypes.SqlSingle)
  parent: System.Data.SqlTypes.SqlSingle
  langs:
  - csharp
  - vb
  name: UnaryNegation(SqlSingle)
  nameWithType: SqlSingle.UnaryNegation(SqlSingle)
  fullName: System.Data.SqlTypes.SqlSingle.UnaryNegation(System.Data.SqlTypes.SqlSingle)
  type: Operator
  source:
    remote:
      path: src/System.Data.SqlClient/src/System/Data/SqlTypes/SQLSingle.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: op_UnaryNegation
    path: src/System.Data.SqlClient/src/System/Data/SqlTypes/SQLSingle.cs
    startLine: 121
  assemblies:
  - System.Data.SqlClient
  namespace: System.Data.SqlTypes
  summary: "\n<p>Negates the <xref href=\"System.Data.SqlTypes.SqlSingle.Value\" data-throw-if-not-resolved=\"false\"></xref> of the specified <xref href=\"System.Data.SqlTypes.SqlSingle\" data-throw-if-not-resolved=\"false\"></xref> structure.</p>\n"
  syntax:
    content: public static SqlSingle operator -(SqlSingle x)
    content.vb: Public Shared Operator -(x As SqlSingle) As SqlSingle
    parameters:
    - id: x
      type: System.Data.SqlTypes.SqlSingle
      description: "\n<p>A <xref href=\"System.Data.SqlTypes.SqlSingle\" data-throw-if-not-resolved=\"false\"></xref> structure. </p>\n"
    return:
      type: System.Data.SqlTypes.SqlSingle
      description: "\n<p>A <xref href=\"System.Data.SqlTypes.SqlSingle\" data-throw-if-not-resolved=\"false\"></xref> structure that contains the negated value.</p>\n"
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: System.Data.SqlTypes.SqlSingle.Parse(System.String)
  commentId: M:System.Data.SqlTypes.SqlSingle.Parse(System.String)
  id: Parse(System.String)
  parent: System.Data.SqlTypes.SqlSingle
  langs:
  - csharp
  - vb
  name: Parse(String)
  nameWithType: SqlSingle.Parse(String)
  fullName: System.Data.SqlTypes.SqlSingle.Parse(System.String)
  type: Method
  source:
    remote:
      path: src/System.Data.SqlClient/src/System/Data/SqlTypes/SQLSingle.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: Parse
    path: src/System.Data.SqlClient/src/System/Data/SqlTypes/SQLSingle.cs
    startLine: 108
  assemblies:
  - System.Data.SqlClient
  namespace: System.Data.SqlTypes
  summary: "\n<p>Converts the specified <xref href=\"System.String\" data-throw-if-not-resolved=\"false\"></xref> to a <xref href=\"System.Data.SqlTypes.SqlSingle\" data-throw-if-not-resolved=\"false\"></xref> structure.</p>\n"
  syntax:
    content: public static SqlSingle Parse(string s)
    content.vb: Public Shared Function Parse(s As String) As SqlSingle
    parameters:
    - id: s
      type: System.String
      description: "\n<p>The <xref href=\"System.String\" data-throw-if-not-resolved=\"false\"></xref> to be parsed. </p>\n"
    return:
      type: System.Data.SqlTypes.SqlSingle
      description: "\n<p>A <xref href=\"System.Data.SqlTypes.SqlSingle\" data-throw-if-not-resolved=\"false\"></xref> equivalent to the value that is contained in the specified <xref href=\"System.String\" data-throw-if-not-resolved=\"false\"></xref>.</p>\n"
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: System.Data.SqlTypes.SqlSingle.Subtract(System.Data.SqlTypes.SqlSingle,System.Data.SqlTypes.SqlSingle)
  commentId: M:System.Data.SqlTypes.SqlSingle.Subtract(System.Data.SqlTypes.SqlSingle,System.Data.SqlTypes.SqlSingle)
  id: Subtract(System.Data.SqlTypes.SqlSingle,System.Data.SqlTypes.SqlSingle)
  parent: System.Data.SqlTypes.SqlSingle
  langs:
  - csharp
  - vb
  name: Subtract(SqlSingle, SqlSingle)
  nameWithType: SqlSingle.Subtract(SqlSingle, SqlSingle)
  fullName: System.Data.SqlTypes.SqlSingle.Subtract(System.Data.SqlTypes.SqlSingle, System.Data.SqlTypes.SqlSingle)
  type: Method
  source:
    remote:
      path: src/System.Data.SqlClient/src/System/Data/SqlTypes/SQLSingle.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: Subtract
    path: src/System.Data.SqlClient/src/System/Data/SqlTypes/SQLSingle.cs
    startLine: 353
  assemblies:
  - System.Data.SqlClient
  namespace: System.Data.SqlTypes
  summary: "\n<p>Subtracts the second <xref href=\"System.Data.SqlTypes.SqlSingle\" data-throw-if-not-resolved=\"false\"></xref> structure from the first.</p>\n"
  syntax:
    content: public static SqlSingle Subtract(SqlSingle x, SqlSingle y)
    content.vb: Public Shared Function Subtract(x As SqlSingle, y As SqlSingle) As SqlSingle
    parameters:
    - id: x
      type: System.Data.SqlTypes.SqlSingle
      description: "\n<p>A <xref href=\"System.Data.SqlTypes.SqlSingle\" data-throw-if-not-resolved=\"false\"></xref> structure. </p>\n"
    - id: y
      type: System.Data.SqlTypes.SqlSingle
      description: "\n<p>A <xref href=\"System.Data.SqlTypes.SqlSingle\" data-throw-if-not-resolved=\"false\"></xref> structure. </p>\n"
    return:
      type: System.Data.SqlTypes.SqlSingle
      description: "\n<p>A <xref href=\"System.Data.SqlTypes.SqlSingle\" data-throw-if-not-resolved=\"false\"></xref> structure that contains the results of the subtraction.</p>\n"
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: System.Data.SqlTypes.SqlSingle.ToSqlBoolean
  commentId: M:System.Data.SqlTypes.SqlSingle.ToSqlBoolean
  id: ToSqlBoolean
  parent: System.Data.SqlTypes.SqlSingle
  langs:
  - csharp
  - vb
  name: ToSqlBoolean()
  nameWithType: SqlSingle.ToSqlBoolean()
  fullName: System.Data.SqlTypes.SqlSingle.ToSqlBoolean()
  type: Method
  source:
    remote:
      path: src/System.Data.SqlClient/src/System/Data/SqlTypes/SQLSingle.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: ToSqlBoolean
    path: src/System.Data.SqlClient/src/System/Data/SqlTypes/SQLSingle.cs
    startLine: 408
  assemblies:
  - System.Data.SqlClient
  namespace: System.Data.SqlTypes
  summary: "\n<p>Converts this <xref href=\"System.Data.SqlTypes.SqlSingle\" data-throw-if-not-resolved=\"false\"></xref> structure to <xref href=\"System.Data.SqlTypes.SqlBoolean\" data-throw-if-not-resolved=\"false\"></xref>.</p>\n"
  syntax:
    content: public SqlBoolean ToSqlBoolean()
    content.vb: Public Function ToSqlBoolean As SqlBoolean
    return:
      type: System.Data.SqlTypes.SqlBoolean
      description: "\n<p>\n<strong>true</strong> if the <xref href=\"System.Data.SqlTypes.SqlSingle.Value\" data-throw-if-not-resolved=\"false\"></xref> is non-zero; <strong>false</strong> if zero; otherwise Null.</p>\n"
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: System.Data.SqlTypes.SqlSingle.ToSqlByte
  commentId: M:System.Data.SqlTypes.SqlSingle.ToSqlByte
  id: ToSqlByte
  parent: System.Data.SqlTypes.SqlSingle
  langs:
  - csharp
  - vb
  name: ToSqlByte()
  nameWithType: SqlSingle.ToSqlByte()
  fullName: System.Data.SqlTypes.SqlSingle.ToSqlByte()
  type: Method
  source:
    remote:
      path: src/System.Data.SqlClient/src/System/Data/SqlTypes/SQLSingle.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: ToSqlByte
    path: src/System.Data.SqlClient/src/System/Data/SqlTypes/SQLSingle.cs
    startLine: 413
  assemblies:
  - System.Data.SqlClient
  namespace: System.Data.SqlTypes
  summary: "\n<p>Converts this <xref href=\"System.Data.SqlTypes.SqlSingle\" data-throw-if-not-resolved=\"false\"></xref> structure to <xref href=\"System.Data.SqlTypes.SqlByte\" data-throw-if-not-resolved=\"false\"></xref>.</p>\n"
  syntax:
    content: public SqlByte ToSqlByte()
    content.vb: Public Function ToSqlByte As SqlByte
    return:
      type: System.Data.SqlTypes.SqlByte
      description: "\n<p>A <xref href=\"System.Data.SqlTypes.SqlByte\" data-throw-if-not-resolved=\"false\"></xref> structure whose <strong>Value</strong> equals the <strong>Value</strong> of this <xref href=\"System.Data.SqlTypes.SqlSingle\" data-throw-if-not-resolved=\"false\"></xref> structure. If the <xref href=\"System.Data.SqlTypes.SqlSingle\" data-throw-if-not-resolved=\"false\"></xref> structure's Value is <strong>true</strong>, the <xref href=\"System.Data.SqlTypes.SqlByte\" data-throw-if-not-resolved=\"false\"></xref> structure's <strong>Value</strong> will be 1. Otherwise, the <xref href=\"System.Data.SqlTypes.SqlByte\" data-throw-if-not-resolved=\"false\"></xref> structure's <strong>Value</strong> will be 0.</p>\n"
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: System.Data.SqlTypes.SqlSingle.ToSqlDecimal
  commentId: M:System.Data.SqlTypes.SqlSingle.ToSqlDecimal
  id: ToSqlDecimal
  parent: System.Data.SqlTypes.SqlSingle
  langs:
  - csharp
  - vb
  name: ToSqlDecimal()
  nameWithType: SqlSingle.ToSqlDecimal()
  fullName: System.Data.SqlTypes.SqlSingle.ToSqlDecimal()
  type: Method
  source:
    remote:
      path: src/System.Data.SqlClient/src/System/Data/SqlTypes/SQLSingle.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: ToSqlDecimal
    path: src/System.Data.SqlClient/src/System/Data/SqlTypes/SQLSingle.cs
    startLine: 443
  assemblies:
  - System.Data.SqlClient
  namespace: System.Data.SqlTypes
  summary: "\n<p>Converts this <xref href=\"System.Data.SqlTypes.SqlSingle\" data-throw-if-not-resolved=\"false\"></xref> structure to <xref href=\"System.Data.SqlTypes.SqlDecimal\" data-throw-if-not-resolved=\"false\"></xref>.</p>\n"
  syntax:
    content: public SqlDecimal ToSqlDecimal()
    content.vb: Public Function ToSqlDecimal As SqlDecimal
    return:
      type: System.Data.SqlTypes.SqlDecimal
      description: "\n<p>A new <strong>SqlDecimal</strong> equal to the value of this <xref href=\"System.Data.SqlTypes.SqlSingle\" data-throw-if-not-resolved=\"false\"></xref>.</p>\n"
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: System.Data.SqlTypes.SqlSingle.ToSqlDouble
  commentId: M:System.Data.SqlTypes.SqlSingle.ToSqlDouble
  id: ToSqlDouble
  parent: System.Data.SqlTypes.SqlSingle
  langs:
  - csharp
  - vb
  name: ToSqlDouble()
  nameWithType: SqlSingle.ToSqlDouble()
  fullName: System.Data.SqlTypes.SqlSingle.ToSqlDouble()
  type: Method
  source:
    remote:
      path: src/System.Data.SqlClient/src/System/Data/SqlTypes/SQLSingle.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: ToSqlDouble
    path: src/System.Data.SqlClient/src/System/Data/SqlTypes/SQLSingle.cs
    startLine: 418
  assemblies:
  - System.Data.SqlClient
  namespace: System.Data.SqlTypes
  summary: "\n<p>Converts this <xref href=\"System.Data.SqlTypes.SqlSingle\" data-throw-if-not-resolved=\"false\"></xref> structure to <xref href=\"System.Data.SqlTypes.SqlDouble\" data-throw-if-not-resolved=\"false\"></xref>.</p>\n"
  syntax:
    content: public SqlDouble ToSqlDouble()
    content.vb: Public Function ToSqlDouble As SqlDouble
    return:
      type: System.Data.SqlTypes.SqlDouble
      description: "\n<p>A new <strong>SqlDouble </strong>equal to the value of this <xref href=\"System.Data.SqlTypes.SqlSingle\" data-throw-if-not-resolved=\"false\"></xref>.</p>\n"
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: System.Data.SqlTypes.SqlSingle.ToSqlInt16
  commentId: M:System.Data.SqlTypes.SqlSingle.ToSqlInt16
  id: ToSqlInt16
  parent: System.Data.SqlTypes.SqlSingle
  langs:
  - csharp
  - vb
  name: ToSqlInt16()
  nameWithType: SqlSingle.ToSqlInt16()
  fullName: System.Data.SqlTypes.SqlSingle.ToSqlInt16()
  type: Method
  source:
    remote:
      path: src/System.Data.SqlClient/src/System/Data/SqlTypes/SQLSingle.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: ToSqlInt16
    path: src/System.Data.SqlClient/src/System/Data/SqlTypes/SQLSingle.cs
    startLine: 423
  assemblies:
  - System.Data.SqlClient
  namespace: System.Data.SqlTypes
  summary: "\n<p>Converts this <xref href=\"System.Data.SqlTypes.SqlSingle\" data-throw-if-not-resolved=\"false\"></xref> structure to <xref href=\"System.Data.SqlTypes.SqlInt16\" data-throw-if-not-resolved=\"false\"></xref>.</p>\n"
  syntax:
    content: public SqlInt16 ToSqlInt16()
    content.vb: Public Function ToSqlInt16 As SqlInt16
    return:
      type: System.Data.SqlTypes.SqlInt16
      description: "\n<p>A new <strong>SqlInt16</strong> equal to the value of this <xref href=\"System.Data.SqlTypes.SqlSingle\" data-throw-if-not-resolved=\"false\"></xref>.</p>\n"
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: System.Data.SqlTypes.SqlSingle.ToSqlInt32
  commentId: M:System.Data.SqlTypes.SqlSingle.ToSqlInt32
  id: ToSqlInt32
  parent: System.Data.SqlTypes.SqlSingle
  langs:
  - csharp
  - vb
  name: ToSqlInt32()
  nameWithType: SqlSingle.ToSqlInt32()
  fullName: System.Data.SqlTypes.SqlSingle.ToSqlInt32()
  type: Method
  source:
    remote:
      path: src/System.Data.SqlClient/src/System/Data/SqlTypes/SQLSingle.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: ToSqlInt32
    path: src/System.Data.SqlClient/src/System/Data/SqlTypes/SQLSingle.cs
    startLine: 428
  assemblies:
  - System.Data.SqlClient
  namespace: System.Data.SqlTypes
  summary: "\n<p>Converts this <xref href=\"System.Data.SqlTypes.SqlSingle\" data-throw-if-not-resolved=\"false\"></xref> structure to <xref href=\"System.Data.SqlTypes.SqlInt32\" data-throw-if-not-resolved=\"false\"></xref>.</p>\n"
  syntax:
    content: public SqlInt32 ToSqlInt32()
    content.vb: Public Function ToSqlInt32 As SqlInt32
    return:
      type: System.Data.SqlTypes.SqlInt32
      description: "\n<p>A new <xref href=\"System.Data.SqlTypes.SqlInt32\" data-throw-if-not-resolved=\"false\"></xref> equal to the value of this <xref href=\"System.Data.SqlTypes.SqlSingle\" data-throw-if-not-resolved=\"false\"></xref>.</p>\n"
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: System.Data.SqlTypes.SqlSingle.ToSqlInt64
  commentId: M:System.Data.SqlTypes.SqlSingle.ToSqlInt64
  id: ToSqlInt64
  parent: System.Data.SqlTypes.SqlSingle
  langs:
  - csharp
  - vb
  name: ToSqlInt64()
  nameWithType: SqlSingle.ToSqlInt64()
  fullName: System.Data.SqlTypes.SqlSingle.ToSqlInt64()
  type: Method
  source:
    remote:
      path: src/System.Data.SqlClient/src/System/Data/SqlTypes/SQLSingle.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: ToSqlInt64
    path: src/System.Data.SqlClient/src/System/Data/SqlTypes/SQLSingle.cs
    startLine: 433
  assemblies:
  - System.Data.SqlClient
  namespace: System.Data.SqlTypes
  summary: "\n<p>Converts this <xref href=\"System.Data.SqlTypes.SqlSingle\" data-throw-if-not-resolved=\"false\"></xref> structure to <xref href=\"System.Data.SqlTypes.SqlInt64\" data-throw-if-not-resolved=\"false\"></xref>.</p>\n"
  syntax:
    content: public SqlInt64 ToSqlInt64()
    content.vb: Public Function ToSqlInt64 As SqlInt64
    return:
      type: System.Data.SqlTypes.SqlInt64
      description: "\n<p>A new <xref href=\"System.Data.SqlTypes.SqlInt64\" data-throw-if-not-resolved=\"false\"></xref> equal to the value of this <xref href=\"System.Data.SqlTypes.SqlSingle\" data-throw-if-not-resolved=\"false\"></xref>.</p>\n"
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: System.Data.SqlTypes.SqlSingle.ToSqlMoney
  commentId: M:System.Data.SqlTypes.SqlSingle.ToSqlMoney
  id: ToSqlMoney
  parent: System.Data.SqlTypes.SqlSingle
  langs:
  - csharp
  - vb
  name: ToSqlMoney()
  nameWithType: SqlSingle.ToSqlMoney()
  fullName: System.Data.SqlTypes.SqlSingle.ToSqlMoney()
  type: Method
  source:
    remote:
      path: src/System.Data.SqlClient/src/System/Data/SqlTypes/SQLSingle.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: ToSqlMoney
    path: src/System.Data.SqlClient/src/System/Data/SqlTypes/SQLSingle.cs
    startLine: 438
  assemblies:
  - System.Data.SqlClient
  namespace: System.Data.SqlTypes
  summary: "\n<p>Converts this <xref href=\"System.Data.SqlTypes.SqlSingle\" data-throw-if-not-resolved=\"false\"></xref> structure to <xref href=\"System.Data.SqlTypes.SqlMoney\" data-throw-if-not-resolved=\"false\"></xref>.</p>\n"
  syntax:
    content: public SqlMoney ToSqlMoney()
    content.vb: Public Function ToSqlMoney As SqlMoney
    return:
      type: System.Data.SqlTypes.SqlMoney
      description: "\n<p>A <xref href=\"System.Data.SqlTypes.SqlMoney\" data-throw-if-not-resolved=\"false\"></xref> equal to the value of this <xref href=\"System.Data.SqlTypes.SqlSingle\" data-throw-if-not-resolved=\"false\"></xref>.</p>\n"
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: System.Data.SqlTypes.SqlSingle.ToSqlString
  commentId: M:System.Data.SqlTypes.SqlSingle.ToSqlString
  id: ToSqlString
  parent: System.Data.SqlTypes.SqlSingle
  langs:
  - csharp
  - vb
  name: ToSqlString()
  nameWithType: SqlSingle.ToSqlString()
  fullName: System.Data.SqlTypes.SqlSingle.ToSqlString()
  type: Method
  source:
    remote:
      path: src/System.Data.SqlClient/src/System/Data/SqlTypes/SQLSingle.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: ToSqlString
    path: src/System.Data.SqlClient/src/System/Data/SqlTypes/SQLSingle.cs
    startLine: 448
  assemblies:
  - System.Data.SqlClient
  namespace: System.Data.SqlTypes
  summary: "\n<p>Converts this <xref href=\"System.Data.SqlTypes.SqlSingle\" data-throw-if-not-resolved=\"false\"></xref> structure to <xref href=\"System.Data.SqlTypes.SqlString\" data-throw-if-not-resolved=\"false\"></xref>.</p>\n"
  syntax:
    content: public SqlString ToSqlString()
    content.vb: Public Function ToSqlString As SqlString
    return:
      type: System.Data.SqlTypes.SqlString
      description: "\n<p>A <xref href=\"System.Data.SqlTypes.SqlString\" data-throw-if-not-resolved=\"false\"></xref> representing the value of this <xref href=\"System.Data.SqlTypes.SqlSingle\" data-throw-if-not-resolved=\"false\"></xref>.</p>\n"
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: System.Data.SqlTypes.SqlSingle.ToString
  commentId: M:System.Data.SqlTypes.SqlSingle.ToString
  id: ToString
  parent: System.Data.SqlTypes.SqlSingle
  langs:
  - csharp
  - vb
  name: ToString()
  nameWithType: SqlSingle.ToString()
  fullName: System.Data.SqlTypes.SqlSingle.ToString()
  type: Method
  source:
    remote:
      path: src/System.Data.SqlClient/src/System/Data/SqlTypes/SQLSingle.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: ToString
    path: src/System.Data.SqlClient/src/System/Data/SqlTypes/SQLSingle.cs
    startLine: 100
  assemblies:
  - System.Data.SqlClient
  namespace: System.Data.SqlTypes
  summary: "\n<p>Converts this <xref href=\"System.Data.SqlTypes.SqlSingle\" data-throw-if-not-resolved=\"false\"></xref> structure to <xref href=\"System.String\" data-throw-if-not-resolved=\"false\"></xref>.</p>\n"
  syntax:
    content: public override string ToString()
    content.vb: Public Overrides Function ToString As String
    return:
      type: System.String
      description: "\n<p>A <strong>String</strong> object representing the value of this <xref href=\"System.Data.SqlTypes.SqlSingle\" data-throw-if-not-resolved=\"false\"></xref>.</p>\n"
  overridden: System.ValueType.ToString
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
references:
- uid: System.Data.SqlTypes
  commentId: N:System.Data.SqlTypes
  isExternal: false
  name: System.Data.SqlTypes
  nameWithType: System.Data.SqlTypes
  fullName: System.Data.SqlTypes
- uid: System.Data.SqlTypes.INullable
  commentId: T:System.Data.SqlTypes.INullable
  parent: System.Data.SqlTypes
  isExternal: false
  name: INullable
  nameWithType: INullable
  fullName: System.Data.SqlTypes.INullable
- uid: System.IComparable
  commentId: T:System.IComparable
  parent: System
  isExternal: false
  name: IComparable
  nameWithType: IComparable
  fullName: System.IComparable
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: false
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Data.SqlTypes.SqlSingle
  commentId: T:System.Data.SqlTypes.SqlSingle
  parent: System.Data.SqlTypes
  isExternal: false
  name: SqlSingle
  nameWithType: SqlSingle
  fullName: System.Data.SqlTypes.SqlSingle
- uid: System.Double
  commentId: T:System.Double
  parent: System
  isExternal: false
  name: Double
  nameWithType: Double
  fullName: System.Double
- uid: System.Single
  commentId: T:System.Single
  parent: System
  isExternal: false
  name: Single
  nameWithType: Single
  fullName: System.Single
- uid: System.Data.SqlTypes.INullable.IsNull
  commentId: P:System.Data.SqlTypes.INullable.IsNull
  parent: System.Data.SqlTypes.INullable
  isExternal: false
  name: IsNull
  nameWithType: INullable.IsNull
  fullName: System.Data.SqlTypes.INullable.IsNull
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: false
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: false
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.IComparable.CompareTo(System.Object)
  commentId: M:System.IComparable.CompareTo(System.Object)
  parent: System.IComparable
  isExternal: true
  name: CompareTo(Object)
  nameWithType: IComparable.CompareTo(Object)
  fullName: System.IComparable.CompareTo(System.Object)
  spec.csharp:
  - uid: System.IComparable.CompareTo(System.Object)
    name: CompareTo
    nameWithType: IComparable.CompareTo
    fullName: System.IComparable.CompareTo
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.IComparable.CompareTo(System.Object)
    name: CompareTo
    nameWithType: IComparable.CompareTo
    fullName: System.IComparable.CompareTo
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Data.SqlTypes.SqlBoolean
  commentId: T:System.Data.SqlTypes.SqlBoolean
  parent: System.Data.SqlTypes
  isExternal: false
  name: SqlBoolean
  nameWithType: SqlBoolean
  fullName: System.Data.SqlTypes.SqlBoolean
- uid: System.ValueType.Equals(System.Object)
  commentId: M:System.ValueType.Equals(System.Object)
  parent: System.ValueType
  isExternal: true
  name: Equals(Object)
  nameWithType: ValueType.Equals(Object)
  fullName: System.ValueType.Equals(System.Object)
  spec.csharp:
  - uid: System.ValueType.Equals(System.Object)
    name: Equals
    nameWithType: ValueType.Equals
    fullName: System.ValueType.Equals
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.ValueType.Equals(System.Object)
    name: Equals
    nameWithType: ValueType.Equals
    fullName: System.ValueType.Equals
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.ValueType
  commentId: T:System.ValueType
  parent: System
  isExternal: false
  name: ValueType
  nameWithType: ValueType
  fullName: System.ValueType
- uid: System.ValueType.GetHashCode
  commentId: M:System.ValueType.GetHashCode
  parent: System.ValueType
  isExternal: false
  name: GetHashCode()
  nameWithType: ValueType.GetHashCode()
  fullName: System.ValueType.GetHashCode()
  spec.csharp:
  - uid: System.ValueType.GetHashCode
    name: GetHashCode
    nameWithType: ValueType.GetHashCode
    fullName: System.ValueType.GetHashCode
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.ValueType.GetHashCode
    name: GetHashCode
    nameWithType: ValueType.GetHashCode
    fullName: System.ValueType.GetHashCode
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Data.SqlTypes.SqlDouble
  commentId: T:System.Data.SqlTypes.SqlDouble
  parent: System.Data.SqlTypes
  isExternal: false
  name: SqlDouble
  nameWithType: SqlDouble
  fullName: System.Data.SqlTypes.SqlDouble
- uid: System.Data.SqlTypes.SqlString
  commentId: T:System.Data.SqlTypes.SqlString
  parent: System.Data.SqlTypes
  isExternal: false
  name: SqlString
  nameWithType: SqlString
  fullName: System.Data.SqlTypes.SqlString
- uid: System.Data.SqlTypes.SqlByte
  commentId: T:System.Data.SqlTypes.SqlByte
  parent: System.Data.SqlTypes
  isExternal: false
  name: SqlByte
  nameWithType: SqlByte
  fullName: System.Data.SqlTypes.SqlByte
- uid: System.Data.SqlTypes.SqlDecimal
  commentId: T:System.Data.SqlTypes.SqlDecimal
  parent: System.Data.SqlTypes
  isExternal: false
  name: SqlDecimal
  nameWithType: SqlDecimal
  fullName: System.Data.SqlTypes.SqlDecimal
- uid: System.Data.SqlTypes.SqlInt16
  commentId: T:System.Data.SqlTypes.SqlInt16
  parent: System.Data.SqlTypes
  isExternal: false
  name: SqlInt16
  nameWithType: SqlInt16
  fullName: System.Data.SqlTypes.SqlInt16
- uid: System.Data.SqlTypes.SqlInt32
  commentId: T:System.Data.SqlTypes.SqlInt32
  parent: System.Data.SqlTypes
  isExternal: false
  name: SqlInt32
  nameWithType: SqlInt32
  fullName: System.Data.SqlTypes.SqlInt32
- uid: System.Data.SqlTypes.SqlInt64
  commentId: T:System.Data.SqlTypes.SqlInt64
  parent: System.Data.SqlTypes
  isExternal: false
  name: SqlInt64
  nameWithType: SqlInt64
  fullName: System.Data.SqlTypes.SqlInt64
- uid: System.Data.SqlTypes.SqlMoney
  commentId: T:System.Data.SqlTypes.SqlMoney
  parent: System.Data.SqlTypes
  isExternal: false
  name: SqlMoney
  nameWithType: SqlMoney
  fullName: System.Data.SqlTypes.SqlMoney
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: false
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.ValueType.ToString
  commentId: M:System.ValueType.ToString
  parent: System.ValueType
  isExternal: false
  name: ToString()
  nameWithType: ValueType.ToString()
  fullName: System.ValueType.ToString()
  spec.csharp:
  - uid: System.ValueType.ToString
    name: ToString
    nameWithType: ValueType.ToString
    fullName: System.ValueType.ToString
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.ValueType.ToString
    name: ToString
    nameWithType: ValueType.ToString
    fullName: System.ValueType.ToString
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
