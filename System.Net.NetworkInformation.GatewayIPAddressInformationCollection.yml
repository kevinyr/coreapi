items:
- uid: System.Net.NetworkInformation.GatewayIPAddressInformationCollection
  commentId: T:System.Net.NetworkInformation.GatewayIPAddressInformationCollection
  id: GatewayIPAddressInformationCollection
  parent: System.Net.NetworkInformation
  children:
  - System.Net.NetworkInformation.GatewayIPAddressInformationCollection.#ctor
  - System.Net.NetworkInformation.GatewayIPAddressInformationCollection.Add(System.Net.NetworkInformation.GatewayIPAddressInformation)
  - System.Net.NetworkInformation.GatewayIPAddressInformationCollection.Clear
  - System.Net.NetworkInformation.GatewayIPAddressInformationCollection.Contains(System.Net.NetworkInformation.GatewayIPAddressInformation)
  - System.Net.NetworkInformation.GatewayIPAddressInformationCollection.CopyTo(System.Net.NetworkInformation.GatewayIPAddressInformation[],System.Int32)
  - System.Net.NetworkInformation.GatewayIPAddressInformationCollection.Count
  - System.Net.NetworkInformation.GatewayIPAddressInformationCollection.GetEnumerator
  - System.Net.NetworkInformation.GatewayIPAddressInformationCollection.IsReadOnly
  - System.Net.NetworkInformation.GatewayIPAddressInformationCollection.Item(System.Int32)
  - System.Net.NetworkInformation.GatewayIPAddressInformationCollection.Remove(System.Net.NetworkInformation.GatewayIPAddressInformation)
  - System.Net.NetworkInformation.GatewayIPAddressInformationCollection.System#Collections#IEnumerable#GetEnumerator
  langs:
  - csharp
  - vb
  name: GatewayIPAddressInformationCollection
  fullName: System.Net.NetworkInformation.GatewayIPAddressInformationCollection
  type: Class
  source:
    remote:
      path: src/System.Net.NetworkInformation/src/System/Net/NetworkInformation/GatewayIPAddressInformationCollection.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: GatewayIPAddressInformationCollection
    path: src/System.Net.NetworkInformation/src/System/Net/NetworkInformation/GatewayIPAddressInformationCollection.cs
    startLine: 8
  assemblies:
  - System.Net.NetworkInformation
  namespace: System.Net.NetworkInformation
  summary: "\n<p>Stores a set of <xref href=\"System.Net.NetworkInformation.GatewayIPAddressInformation\" data-throw-if-not-resolved=\"false\"></xref> types.</p>\n"
  syntax:
    content: 'public class GatewayIPAddressInformationCollection : ICollection<GatewayIPAddressInformation>, IEnumerable<GatewayIPAddressInformation>, IEnumerable'
    content.vb: >-
      Public Class GatewayIPAddressInformationCollection
          Implements ICollection(Of GatewayIPAddressInformation), IEnumerable(Of GatewayIPAddressInformation), IEnumerable
  inheritance:
  - System.Object
  implements:
  - System.Collections.Generic.ICollection{System.Net.NetworkInformation.GatewayIPAddressInformation}
  - System.Collections.Generic.IEnumerable{System.Net.NetworkInformation.GatewayIPAddressInformation}
  - System.Collections.IEnumerable
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
  nameWithType: GatewayIPAddressInformationCollection
  extensionMethods:
  - System.Collections.IEnumerable.System.Linq.Queryable.AsQueryable
  - System.Collections.Generic.IEnumerable{System.Net.NetworkInformation.GatewayIPAddressInformation}.System.Linq.Queryable.AsQueryable``1
  - System.Collections.IEnumerable.System.Linq.ParallelEnumerable.AsParallel
  - System.Collections.Generic.IEnumerable{System.Net.NetworkInformation.GatewayIPAddressInformation}.System.Linq.ParallelEnumerable.AsParallel``1
  - System.Collections.Generic.IEnumerable{System.Net.NetworkInformation.GatewayIPAddressInformation}.System.Linq.Enumerable.Aggregate``1(System.Func{System.Net.NetworkInformation.GatewayIPAddressInformation,System.Net.NetworkInformation.GatewayIPAddressInformation,System.Net.NetworkInformation.GatewayIPAddressInformation})
  - System.Collections.Generic.IEnumerable{System.Net.NetworkInformation.GatewayIPAddressInformation}.System.Linq.Enumerable.Aggregate``2({TAccumulate},System.Func{{TAccumulate},System.Net.NetworkInformation.GatewayIPAddressInformation,{TAccumulate}})
  - System.Collections.Generic.IEnumerable{System.Net.NetworkInformation.GatewayIPAddressInformation}.System.Linq.Enumerable.Aggregate``3({TAccumulate},System.Func{{TAccumulate},System.Net.NetworkInformation.GatewayIPAddressInformation,{TAccumulate}},System.Func{{TAccumulate},{TResult}})
  - System.Collections.Generic.IEnumerable{System.Net.NetworkInformation.GatewayIPAddressInformation}.System.Linq.Enumerable.All``1(System.Func{System.Net.NetworkInformation.GatewayIPAddressInformation,System.Boolean})
  - System.Collections.Generic.IEnumerable{System.Net.NetworkInformation.GatewayIPAddressInformation}.System.Linq.Enumerable.Any``1
  - System.Collections.Generic.IEnumerable{System.Net.NetworkInformation.GatewayIPAddressInformation}.System.Linq.Enumerable.Any``1(System.Func{System.Net.NetworkInformation.GatewayIPAddressInformation,System.Boolean})
  - System.Collections.Generic.IEnumerable{System.Net.NetworkInformation.GatewayIPAddressInformation}.System.Linq.Enumerable.AsEnumerable``1
  - System.Collections.Generic.IEnumerable{System.Net.NetworkInformation.GatewayIPAddressInformation}.System.Linq.Enumerable.Average``1(System.Func{System.Net.NetworkInformation.GatewayIPAddressInformation,System.Decimal})
  - System.Collections.Generic.IEnumerable{System.Net.NetworkInformation.GatewayIPAddressInformation}.System.Linq.Enumerable.Average``1(System.Func{System.Net.NetworkInformation.GatewayIPAddressInformation,System.Double})
  - System.Collections.Generic.IEnumerable{System.Net.NetworkInformation.GatewayIPAddressInformation}.System.Linq.Enumerable.Average``1(System.Func{System.Net.NetworkInformation.GatewayIPAddressInformation,System.Int32})
  - System.Collections.Generic.IEnumerable{System.Net.NetworkInformation.GatewayIPAddressInformation}.System.Linq.Enumerable.Average``1(System.Func{System.Net.NetworkInformation.GatewayIPAddressInformation,System.Int64})
  - System.Collections.Generic.IEnumerable{System.Net.NetworkInformation.GatewayIPAddressInformation}.System.Linq.Enumerable.Average``1(System.Func{System.Net.NetworkInformation.GatewayIPAddressInformation,System.Nullable{System.Decimal}})
  - System.Collections.Generic.IEnumerable{System.Net.NetworkInformation.GatewayIPAddressInformation}.System.Linq.Enumerable.Average``1(System.Func{System.Net.NetworkInformation.GatewayIPAddressInformation,System.Nullable{System.Double}})
  - System.Collections.Generic.IEnumerable{System.Net.NetworkInformation.GatewayIPAddressInformation}.System.Linq.Enumerable.Average``1(System.Func{System.Net.NetworkInformation.GatewayIPAddressInformation,System.Nullable{System.Int32}})
  - System.Collections.Generic.IEnumerable{System.Net.NetworkInformation.GatewayIPAddressInformation}.System.Linq.Enumerable.Average``1(System.Func{System.Net.NetworkInformation.GatewayIPAddressInformation,System.Nullable{System.Int64}})
  - System.Collections.Generic.IEnumerable{System.Net.NetworkInformation.GatewayIPAddressInformation}.System.Linq.Enumerable.Average``1(System.Func{System.Net.NetworkInformation.GatewayIPAddressInformation,System.Nullable{System.Single}})
  - System.Collections.Generic.IEnumerable{System.Net.NetworkInformation.GatewayIPAddressInformation}.System.Linq.Enumerable.Average``1(System.Func{System.Net.NetworkInformation.GatewayIPAddressInformation,System.Single})
  - System.Collections.IEnumerable.System.Linq.Enumerable.Cast``1
  - System.Collections.Generic.IEnumerable{System.Net.NetworkInformation.GatewayIPAddressInformation}.System.Linq.Enumerable.Concat``1(System.Collections.Generic.IEnumerable{System.Net.NetworkInformation.GatewayIPAddressInformation})
  - System.Collections.Generic.IEnumerable{System.Net.NetworkInformation.GatewayIPAddressInformation}.System.Linq.Enumerable.Append``1(System.Net.NetworkInformation.GatewayIPAddressInformation)
  - System.Collections.Generic.IEnumerable{System.Net.NetworkInformation.GatewayIPAddressInformation}.System.Linq.Enumerable.Prepend``1(System.Net.NetworkInformation.GatewayIPAddressInformation)
  - System.Collections.Generic.IEnumerable{System.Net.NetworkInformation.GatewayIPAddressInformation}.System.Linq.Enumerable.Contains``1(System.Net.NetworkInformation.GatewayIPAddressInformation)
  - System.Collections.Generic.IEnumerable{System.Net.NetworkInformation.GatewayIPAddressInformation}.System.Linq.Enumerable.Contains``1(System.Net.NetworkInformation.GatewayIPAddressInformation,System.Collections.Generic.IEqualityComparer{System.Net.NetworkInformation.GatewayIPAddressInformation})
  - System.Collections.Generic.IEnumerable{System.Net.NetworkInformation.GatewayIPAddressInformation}.System.Linq.Enumerable.Count``1
  - System.Collections.Generic.IEnumerable{System.Net.NetworkInformation.GatewayIPAddressInformation}.System.Linq.Enumerable.Count``1(System.Func{System.Net.NetworkInformation.GatewayIPAddressInformation,System.Boolean})
  - System.Collections.Generic.IEnumerable{System.Net.NetworkInformation.GatewayIPAddressInformation}.System.Linq.Enumerable.DefaultIfEmpty``1
  - System.Collections.Generic.IEnumerable{System.Net.NetworkInformation.GatewayIPAddressInformation}.System.Linq.Enumerable.DefaultIfEmpty``1(System.Net.NetworkInformation.GatewayIPAddressInformation)
  - System.Collections.Generic.IEnumerable{System.Net.NetworkInformation.GatewayIPAddressInformation}.System.Linq.Enumerable.Distinct``1
  - System.Collections.Generic.IEnumerable{System.Net.NetworkInformation.GatewayIPAddressInformation}.System.Linq.Enumerable.Distinct``1(System.Collections.Generic.IEqualityComparer{System.Net.NetworkInformation.GatewayIPAddressInformation})
  - System.Collections.Generic.IEnumerable{System.Net.NetworkInformation.GatewayIPAddressInformation}.System.Linq.Enumerable.ElementAt``1(System.Int32)
  - System.Collections.Generic.IEnumerable{System.Net.NetworkInformation.GatewayIPAddressInformation}.System.Linq.Enumerable.ElementAtOrDefault``1(System.Int32)
  - System.Collections.Generic.IEnumerable{System.Net.NetworkInformation.GatewayIPAddressInformation}.System.Linq.Enumerable.Except``1(System.Collections.Generic.IEnumerable{System.Net.NetworkInformation.GatewayIPAddressInformation})
  - System.Collections.Generic.IEnumerable{System.Net.NetworkInformation.GatewayIPAddressInformation}.System.Linq.Enumerable.Except``1(System.Collections.Generic.IEnumerable{System.Net.NetworkInformation.GatewayIPAddressInformation},System.Collections.Generic.IEqualityComparer{System.Net.NetworkInformation.GatewayIPAddressInformation})
  - System.Collections.Generic.IEnumerable{System.Net.NetworkInformation.GatewayIPAddressInformation}.System.Linq.Enumerable.First``1
  - System.Collections.Generic.IEnumerable{System.Net.NetworkInformation.GatewayIPAddressInformation}.System.Linq.Enumerable.First``1(System.Func{System.Net.NetworkInformation.GatewayIPAddressInformation,System.Boolean})
  - System.Collections.Generic.IEnumerable{System.Net.NetworkInformation.GatewayIPAddressInformation}.System.Linq.Enumerable.FirstOrDefault``1
  - System.Collections.Generic.IEnumerable{System.Net.NetworkInformation.GatewayIPAddressInformation}.System.Linq.Enumerable.FirstOrDefault``1(System.Func{System.Net.NetworkInformation.GatewayIPAddressInformation,System.Boolean})
  - System.Collections.Generic.IEnumerable{System.Net.NetworkInformation.GatewayIPAddressInformation}.System.Linq.Enumerable.GroupBy``2(System.Func{System.Net.NetworkInformation.GatewayIPAddressInformation,{TKey}})
  - System.Collections.Generic.IEnumerable{System.Net.NetworkInformation.GatewayIPAddressInformation}.System.Linq.Enumerable.GroupBy``2(System.Func{System.Net.NetworkInformation.GatewayIPAddressInformation,{TKey}},System.Collections.Generic.IEqualityComparer{{TKey}})
  - System.Collections.Generic.IEnumerable{System.Net.NetworkInformation.GatewayIPAddressInformation}.System.Linq.Enumerable.GroupBy``3(System.Func{System.Net.NetworkInformation.GatewayIPAddressInformation,{TKey}},System.Func{System.Net.NetworkInformation.GatewayIPAddressInformation,{TElement}})
  - System.Collections.Generic.IEnumerable{System.Net.NetworkInformation.GatewayIPAddressInformation}.System.Linq.Enumerable.GroupBy``3(System.Func{System.Net.NetworkInformation.GatewayIPAddressInformation,{TKey}},System.Func{System.Net.NetworkInformation.GatewayIPAddressInformation,{TElement}},System.Collections.Generic.IEqualityComparer{{TKey}})
  - System.Collections.Generic.IEnumerable{System.Net.NetworkInformation.GatewayIPAddressInformation}.System.Linq.Enumerable.GroupBy``3(System.Func{System.Net.NetworkInformation.GatewayIPAddressInformation,{TKey}},System.Func{{TKey},System.Collections.Generic.IEnumerable{System.Net.NetworkInformation.GatewayIPAddressInformation},{TResult}})
  - System.Collections.Generic.IEnumerable{System.Net.NetworkInformation.GatewayIPAddressInformation}.System.Linq.Enumerable.GroupBy``3(System.Func{System.Net.NetworkInformation.GatewayIPAddressInformation,{TKey}},System.Func{{TKey},System.Collections.Generic.IEnumerable{System.Net.NetworkInformation.GatewayIPAddressInformation},{TResult}},System.Collections.Generic.IEqualityComparer{{TKey}})
  - System.Collections.Generic.IEnumerable{System.Net.NetworkInformation.GatewayIPAddressInformation}.System.Linq.Enumerable.GroupBy``4(System.Func{System.Net.NetworkInformation.GatewayIPAddressInformation,{TKey}},System.Func{System.Net.NetworkInformation.GatewayIPAddressInformation,{TElement}},System.Func{{TKey},System.Collections.Generic.IEnumerable{{TElement}},{TResult}})
  - System.Collections.Generic.IEnumerable{System.Net.NetworkInformation.GatewayIPAddressInformation}.System.Linq.Enumerable.GroupBy``4(System.Func{System.Net.NetworkInformation.GatewayIPAddressInformation,{TKey}},System.Func{System.Net.NetworkInformation.GatewayIPAddressInformation,{TElement}},System.Func{{TKey},System.Collections.Generic.IEnumerable{{TElement}},{TResult}},System.Collections.Generic.IEqualityComparer{{TKey}})
  - System.Collections.Generic.IEnumerable{System.Net.NetworkInformation.GatewayIPAddressInformation}.System.Linq.Enumerable.GroupJoin``4(System.Collections.Generic.IEnumerable{{TInner}},System.Func{System.Net.NetworkInformation.GatewayIPAddressInformation,{TKey}},System.Func{{TInner},{TKey}},System.Func{System.Net.NetworkInformation.GatewayIPAddressInformation,System.Collections.Generic.IEnumerable{{TInner}},{TResult}})
  - System.Collections.Generic.IEnumerable{System.Net.NetworkInformation.GatewayIPAddressInformation}.System.Linq.Enumerable.GroupJoin``4(System.Collections.Generic.IEnumerable{{TInner}},System.Func{System.Net.NetworkInformation.GatewayIPAddressInformation,{TKey}},System.Func{{TInner},{TKey}},System.Func{System.Net.NetworkInformation.GatewayIPAddressInformation,System.Collections.Generic.IEnumerable{{TInner}},{TResult}},System.Collections.Generic.IEqualityComparer{{TKey}})
  - System.Collections.Generic.IEnumerable{System.Net.NetworkInformation.GatewayIPAddressInformation}.System.Linq.Enumerable.Intersect``1(System.Collections.Generic.IEnumerable{System.Net.NetworkInformation.GatewayIPAddressInformation})
  - System.Collections.Generic.IEnumerable{System.Net.NetworkInformation.GatewayIPAddressInformation}.System.Linq.Enumerable.Intersect``1(System.Collections.Generic.IEnumerable{System.Net.NetworkInformation.GatewayIPAddressInformation},System.Collections.Generic.IEqualityComparer{System.Net.NetworkInformation.GatewayIPAddressInformation})
  - System.Collections.Generic.IEnumerable{System.Net.NetworkInformation.GatewayIPAddressInformation}.System.Linq.Enumerable.Join``4(System.Collections.Generic.IEnumerable{{TInner}},System.Func{System.Net.NetworkInformation.GatewayIPAddressInformation,{TKey}},System.Func{{TInner},{TKey}},System.Func{System.Net.NetworkInformation.GatewayIPAddressInformation,{TInner},{TResult}})
  - System.Collections.Generic.IEnumerable{System.Net.NetworkInformation.GatewayIPAddressInformation}.System.Linq.Enumerable.Join``4(System.Collections.Generic.IEnumerable{{TInner}},System.Func{System.Net.NetworkInformation.GatewayIPAddressInformation,{TKey}},System.Func{{TInner},{TKey}},System.Func{System.Net.NetworkInformation.GatewayIPAddressInformation,{TInner},{TResult}},System.Collections.Generic.IEqualityComparer{{TKey}})
  - System.Collections.Generic.IEnumerable{System.Net.NetworkInformation.GatewayIPAddressInformation}.System.Linq.Enumerable.Last``1
  - System.Collections.Generic.IEnumerable{System.Net.NetworkInformation.GatewayIPAddressInformation}.System.Linq.Enumerable.Last``1(System.Func{System.Net.NetworkInformation.GatewayIPAddressInformation,System.Boolean})
  - System.Collections.Generic.IEnumerable{System.Net.NetworkInformation.GatewayIPAddressInformation}.System.Linq.Enumerable.LastOrDefault``1
  - System.Collections.Generic.IEnumerable{System.Net.NetworkInformation.GatewayIPAddressInformation}.System.Linq.Enumerable.LastOrDefault``1(System.Func{System.Net.NetworkInformation.GatewayIPAddressInformation,System.Boolean})
  - System.Collections.Generic.IEnumerable{System.Net.NetworkInformation.GatewayIPAddressInformation}.System.Linq.Enumerable.LongCount``1
  - System.Collections.Generic.IEnumerable{System.Net.NetworkInformation.GatewayIPAddressInformation}.System.Linq.Enumerable.LongCount``1(System.Func{System.Net.NetworkInformation.GatewayIPAddressInformation,System.Boolean})
  - System.Collections.Generic.IEnumerable{System.Net.NetworkInformation.GatewayIPAddressInformation}.System.Linq.Enumerable.Max``1
  - System.Collections.Generic.IEnumerable{System.Net.NetworkInformation.GatewayIPAddressInformation}.System.Linq.Enumerable.Max``1(System.Func{System.Net.NetworkInformation.GatewayIPAddressInformation,System.Decimal})
  - System.Collections.Generic.IEnumerable{System.Net.NetworkInformation.GatewayIPAddressInformation}.System.Linq.Enumerable.Max``1(System.Func{System.Net.NetworkInformation.GatewayIPAddressInformation,System.Double})
  - System.Collections.Generic.IEnumerable{System.Net.NetworkInformation.GatewayIPAddressInformation}.System.Linq.Enumerable.Max``1(System.Func{System.Net.NetworkInformation.GatewayIPAddressInformation,System.Int32})
  - System.Collections.Generic.IEnumerable{System.Net.NetworkInformation.GatewayIPAddressInformation}.System.Linq.Enumerable.Max``1(System.Func{System.Net.NetworkInformation.GatewayIPAddressInformation,System.Int64})
  - System.Collections.Generic.IEnumerable{System.Net.NetworkInformation.GatewayIPAddressInformation}.System.Linq.Enumerable.Max``1(System.Func{System.Net.NetworkInformation.GatewayIPAddressInformation,System.Nullable{System.Decimal}})
  - System.Collections.Generic.IEnumerable{System.Net.NetworkInformation.GatewayIPAddressInformation}.System.Linq.Enumerable.Max``1(System.Func{System.Net.NetworkInformation.GatewayIPAddressInformation,System.Nullable{System.Double}})
  - System.Collections.Generic.IEnumerable{System.Net.NetworkInformation.GatewayIPAddressInformation}.System.Linq.Enumerable.Max``1(System.Func{System.Net.NetworkInformation.GatewayIPAddressInformation,System.Nullable{System.Int32}})
  - System.Collections.Generic.IEnumerable{System.Net.NetworkInformation.GatewayIPAddressInformation}.System.Linq.Enumerable.Max``1(System.Func{System.Net.NetworkInformation.GatewayIPAddressInformation,System.Nullable{System.Int64}})
  - System.Collections.Generic.IEnumerable{System.Net.NetworkInformation.GatewayIPAddressInformation}.System.Linq.Enumerable.Max``1(System.Func{System.Net.NetworkInformation.GatewayIPAddressInformation,System.Nullable{System.Single}})
  - System.Collections.Generic.IEnumerable{System.Net.NetworkInformation.GatewayIPAddressInformation}.System.Linq.Enumerable.Max``1(System.Func{System.Net.NetworkInformation.GatewayIPAddressInformation,System.Single})
  - System.Collections.Generic.IEnumerable{System.Net.NetworkInformation.GatewayIPAddressInformation}.System.Linq.Enumerable.Max``2(System.Func{System.Net.NetworkInformation.GatewayIPAddressInformation,{TResult}})
  - System.Collections.Generic.IEnumerable{System.Net.NetworkInformation.GatewayIPAddressInformation}.System.Linq.Enumerable.Min``1
  - System.Collections.Generic.IEnumerable{System.Net.NetworkInformation.GatewayIPAddressInformation}.System.Linq.Enumerable.Min``1(System.Func{System.Net.NetworkInformation.GatewayIPAddressInformation,System.Decimal})
  - System.Collections.Generic.IEnumerable{System.Net.NetworkInformation.GatewayIPAddressInformation}.System.Linq.Enumerable.Min``1(System.Func{System.Net.NetworkInformation.GatewayIPAddressInformation,System.Double})
  - System.Collections.Generic.IEnumerable{System.Net.NetworkInformation.GatewayIPAddressInformation}.System.Linq.Enumerable.Min``1(System.Func{System.Net.NetworkInformation.GatewayIPAddressInformation,System.Int32})
  - System.Collections.Generic.IEnumerable{System.Net.NetworkInformation.GatewayIPAddressInformation}.System.Linq.Enumerable.Min``1(System.Func{System.Net.NetworkInformation.GatewayIPAddressInformation,System.Int64})
  - System.Collections.Generic.IEnumerable{System.Net.NetworkInformation.GatewayIPAddressInformation}.System.Linq.Enumerable.Min``1(System.Func{System.Net.NetworkInformation.GatewayIPAddressInformation,System.Nullable{System.Decimal}})
  - System.Collections.Generic.IEnumerable{System.Net.NetworkInformation.GatewayIPAddressInformation}.System.Linq.Enumerable.Min``1(System.Func{System.Net.NetworkInformation.GatewayIPAddressInformation,System.Nullable{System.Double}})
  - System.Collections.Generic.IEnumerable{System.Net.NetworkInformation.GatewayIPAddressInformation}.System.Linq.Enumerable.Min``1(System.Func{System.Net.NetworkInformation.GatewayIPAddressInformation,System.Nullable{System.Int32}})
  - System.Collections.Generic.IEnumerable{System.Net.NetworkInformation.GatewayIPAddressInformation}.System.Linq.Enumerable.Min``1(System.Func{System.Net.NetworkInformation.GatewayIPAddressInformation,System.Nullable{System.Int64}})
  - System.Collections.Generic.IEnumerable{System.Net.NetworkInformation.GatewayIPAddressInformation}.System.Linq.Enumerable.Min``1(System.Func{System.Net.NetworkInformation.GatewayIPAddressInformation,System.Nullable{System.Single}})
  - System.Collections.Generic.IEnumerable{System.Net.NetworkInformation.GatewayIPAddressInformation}.System.Linq.Enumerable.Min``1(System.Func{System.Net.NetworkInformation.GatewayIPAddressInformation,System.Single})
  - System.Collections.Generic.IEnumerable{System.Net.NetworkInformation.GatewayIPAddressInformation}.System.Linq.Enumerable.Min``2(System.Func{System.Net.NetworkInformation.GatewayIPAddressInformation,{TResult}})
  - System.Collections.IEnumerable.System.Linq.Enumerable.OfType``1
  - System.Collections.Generic.IEnumerable{System.Net.NetworkInformation.GatewayIPAddressInformation}.System.Linq.Enumerable.OrderBy``2(System.Func{System.Net.NetworkInformation.GatewayIPAddressInformation,{TKey}})
  - System.Collections.Generic.IEnumerable{System.Net.NetworkInformation.GatewayIPAddressInformation}.System.Linq.Enumerable.OrderBy``2(System.Func{System.Net.NetworkInformation.GatewayIPAddressInformation,{TKey}},System.Collections.Generic.IComparer{{TKey}})
  - System.Collections.Generic.IEnumerable{System.Net.NetworkInformation.GatewayIPAddressInformation}.System.Linq.Enumerable.OrderByDescending``2(System.Func{System.Net.NetworkInformation.GatewayIPAddressInformation,{TKey}})
  - System.Collections.Generic.IEnumerable{System.Net.NetworkInformation.GatewayIPAddressInformation}.System.Linq.Enumerable.OrderByDescending``2(System.Func{System.Net.NetworkInformation.GatewayIPAddressInformation,{TKey}},System.Collections.Generic.IComparer{{TKey}})
  - System.Collections.Generic.IEnumerable{System.Net.NetworkInformation.GatewayIPAddressInformation}.System.Linq.Enumerable.Reverse``1
  - System.Collections.Generic.IEnumerable{System.Net.NetworkInformation.GatewayIPAddressInformation}.System.Linq.Enumerable.Select``2(System.Func{System.Net.NetworkInformation.GatewayIPAddressInformation,{TResult}})
  - System.Collections.Generic.IEnumerable{System.Net.NetworkInformation.GatewayIPAddressInformation}.System.Linq.Enumerable.Select``2(System.Func{System.Net.NetworkInformation.GatewayIPAddressInformation,System.Int32,{TResult}})
  - System.Collections.Generic.IEnumerable{System.Net.NetworkInformation.GatewayIPAddressInformation}.System.Linq.Enumerable.SelectMany``2(System.Func{System.Net.NetworkInformation.GatewayIPAddressInformation,System.Collections.Generic.IEnumerable{{TResult}}})
  - System.Collections.Generic.IEnumerable{System.Net.NetworkInformation.GatewayIPAddressInformation}.System.Linq.Enumerable.SelectMany``2(System.Func{System.Net.NetworkInformation.GatewayIPAddressInformation,System.Int32,System.Collections.Generic.IEnumerable{{TResult}}})
  - System.Collections.Generic.IEnumerable{System.Net.NetworkInformation.GatewayIPAddressInformation}.System.Linq.Enumerable.SelectMany``3(System.Func{System.Net.NetworkInformation.GatewayIPAddressInformation,System.Collections.Generic.IEnumerable{{TCollection}}},System.Func{System.Net.NetworkInformation.GatewayIPAddressInformation,{TCollection},{TResult}})
  - System.Collections.Generic.IEnumerable{System.Net.NetworkInformation.GatewayIPAddressInformation}.System.Linq.Enumerable.SelectMany``3(System.Func{System.Net.NetworkInformation.GatewayIPAddressInformation,System.Int32,System.Collections.Generic.IEnumerable{{TCollection}}},System.Func{System.Net.NetworkInformation.GatewayIPAddressInformation,{TCollection},{TResult}})
  - System.Collections.Generic.IEnumerable{System.Net.NetworkInformation.GatewayIPAddressInformation}.System.Linq.Enumerable.SequenceEqual``1(System.Collections.Generic.IEnumerable{System.Net.NetworkInformation.GatewayIPAddressInformation})
  - System.Collections.Generic.IEnumerable{System.Net.NetworkInformation.GatewayIPAddressInformation}.System.Linq.Enumerable.SequenceEqual``1(System.Collections.Generic.IEnumerable{System.Net.NetworkInformation.GatewayIPAddressInformation},System.Collections.Generic.IEqualityComparer{System.Net.NetworkInformation.GatewayIPAddressInformation})
  - System.Collections.Generic.IEnumerable{System.Net.NetworkInformation.GatewayIPAddressInformation}.System.Linq.Enumerable.Single``1
  - System.Collections.Generic.IEnumerable{System.Net.NetworkInformation.GatewayIPAddressInformation}.System.Linq.Enumerable.Single``1(System.Func{System.Net.NetworkInformation.GatewayIPAddressInformation,System.Boolean})
  - System.Collections.Generic.IEnumerable{System.Net.NetworkInformation.GatewayIPAddressInformation}.System.Linq.Enumerable.SingleOrDefault``1
  - System.Collections.Generic.IEnumerable{System.Net.NetworkInformation.GatewayIPAddressInformation}.System.Linq.Enumerable.SingleOrDefault``1(System.Func{System.Net.NetworkInformation.GatewayIPAddressInformation,System.Boolean})
  - System.Collections.Generic.IEnumerable{System.Net.NetworkInformation.GatewayIPAddressInformation}.System.Linq.Enumerable.Skip``1(System.Int32)
  - System.Collections.Generic.IEnumerable{System.Net.NetworkInformation.GatewayIPAddressInformation}.System.Linq.Enumerable.SkipWhile``1(System.Func{System.Net.NetworkInformation.GatewayIPAddressInformation,System.Boolean})
  - System.Collections.Generic.IEnumerable{System.Net.NetworkInformation.GatewayIPAddressInformation}.System.Linq.Enumerable.SkipWhile``1(System.Func{System.Net.NetworkInformation.GatewayIPAddressInformation,System.Int32,System.Boolean})
  - System.Collections.Generic.IEnumerable{System.Net.NetworkInformation.GatewayIPAddressInformation}.System.Linq.Enumerable.Sum``1(System.Func{System.Net.NetworkInformation.GatewayIPAddressInformation,System.Decimal})
  - System.Collections.Generic.IEnumerable{System.Net.NetworkInformation.GatewayIPAddressInformation}.System.Linq.Enumerable.Sum``1(System.Func{System.Net.NetworkInformation.GatewayIPAddressInformation,System.Double})
  - System.Collections.Generic.IEnumerable{System.Net.NetworkInformation.GatewayIPAddressInformation}.System.Linq.Enumerable.Sum``1(System.Func{System.Net.NetworkInformation.GatewayIPAddressInformation,System.Int32})
  - System.Collections.Generic.IEnumerable{System.Net.NetworkInformation.GatewayIPAddressInformation}.System.Linq.Enumerable.Sum``1(System.Func{System.Net.NetworkInformation.GatewayIPAddressInformation,System.Int64})
  - System.Collections.Generic.IEnumerable{System.Net.NetworkInformation.GatewayIPAddressInformation}.System.Linq.Enumerable.Sum``1(System.Func{System.Net.NetworkInformation.GatewayIPAddressInformation,System.Nullable{System.Decimal}})
  - System.Collections.Generic.IEnumerable{System.Net.NetworkInformation.GatewayIPAddressInformation}.System.Linq.Enumerable.Sum``1(System.Func{System.Net.NetworkInformation.GatewayIPAddressInformation,System.Nullable{System.Double}})
  - System.Collections.Generic.IEnumerable{System.Net.NetworkInformation.GatewayIPAddressInformation}.System.Linq.Enumerable.Sum``1(System.Func{System.Net.NetworkInformation.GatewayIPAddressInformation,System.Nullable{System.Int32}})
  - System.Collections.Generic.IEnumerable{System.Net.NetworkInformation.GatewayIPAddressInformation}.System.Linq.Enumerable.Sum``1(System.Func{System.Net.NetworkInformation.GatewayIPAddressInformation,System.Nullable{System.Int64}})
  - System.Collections.Generic.IEnumerable{System.Net.NetworkInformation.GatewayIPAddressInformation}.System.Linq.Enumerable.Sum``1(System.Func{System.Net.NetworkInformation.GatewayIPAddressInformation,System.Nullable{System.Single}})
  - System.Collections.Generic.IEnumerable{System.Net.NetworkInformation.GatewayIPAddressInformation}.System.Linq.Enumerable.Sum``1(System.Func{System.Net.NetworkInformation.GatewayIPAddressInformation,System.Single})
  - System.Collections.Generic.IEnumerable{System.Net.NetworkInformation.GatewayIPAddressInformation}.System.Linq.Enumerable.Take``1(System.Int32)
  - System.Collections.Generic.IEnumerable{System.Net.NetworkInformation.GatewayIPAddressInformation}.System.Linq.Enumerable.TakeWhile``1(System.Func{System.Net.NetworkInformation.GatewayIPAddressInformation,System.Boolean})
  - System.Collections.Generic.IEnumerable{System.Net.NetworkInformation.GatewayIPAddressInformation}.System.Linq.Enumerable.TakeWhile``1(System.Func{System.Net.NetworkInformation.GatewayIPAddressInformation,System.Int32,System.Boolean})
  - System.Collections.Generic.IEnumerable{System.Net.NetworkInformation.GatewayIPAddressInformation}.System.Linq.Enumerable.ToArray``1
  - System.Collections.Generic.IEnumerable{System.Net.NetworkInformation.GatewayIPAddressInformation}.System.Linq.Enumerable.ToDictionary``2(System.Func{System.Net.NetworkInformation.GatewayIPAddressInformation,{TKey}})
  - System.Collections.Generic.IEnumerable{System.Net.NetworkInformation.GatewayIPAddressInformation}.System.Linq.Enumerable.ToDictionary``2(System.Func{System.Net.NetworkInformation.GatewayIPAddressInformation,{TKey}},System.Collections.Generic.IEqualityComparer{{TKey}})
  - System.Collections.Generic.IEnumerable{System.Net.NetworkInformation.GatewayIPAddressInformation}.System.Linq.Enumerable.ToDictionary``3(System.Func{System.Net.NetworkInformation.GatewayIPAddressInformation,{TKey}},System.Func{System.Net.NetworkInformation.GatewayIPAddressInformation,{TElement}})
  - System.Collections.Generic.IEnumerable{System.Net.NetworkInformation.GatewayIPAddressInformation}.System.Linq.Enumerable.ToDictionary``3(System.Func{System.Net.NetworkInformation.GatewayIPAddressInformation,{TKey}},System.Func{System.Net.NetworkInformation.GatewayIPAddressInformation,{TElement}},System.Collections.Generic.IEqualityComparer{{TKey}})
  - System.Collections.Generic.IEnumerable{System.Net.NetworkInformation.GatewayIPAddressInformation}.System.Linq.Enumerable.ToList``1
  - System.Collections.Generic.IEnumerable{System.Net.NetworkInformation.GatewayIPAddressInformation}.System.Linq.Enumerable.ToLookup``2(System.Func{System.Net.NetworkInformation.GatewayIPAddressInformation,{TKey}})
  - System.Collections.Generic.IEnumerable{System.Net.NetworkInformation.GatewayIPAddressInformation}.System.Linq.Enumerable.ToLookup``2(System.Func{System.Net.NetworkInformation.GatewayIPAddressInformation,{TKey}},System.Collections.Generic.IEqualityComparer{{TKey}})
  - System.Collections.Generic.IEnumerable{System.Net.NetworkInformation.GatewayIPAddressInformation}.System.Linq.Enumerable.ToLookup``3(System.Func{System.Net.NetworkInformation.GatewayIPAddressInformation,{TKey}},System.Func{System.Net.NetworkInformation.GatewayIPAddressInformation,{TElement}})
  - System.Collections.Generic.IEnumerable{System.Net.NetworkInformation.GatewayIPAddressInformation}.System.Linq.Enumerable.ToLookup``3(System.Func{System.Net.NetworkInformation.GatewayIPAddressInformation,{TKey}},System.Func{System.Net.NetworkInformation.GatewayIPAddressInformation,{TElement}},System.Collections.Generic.IEqualityComparer{{TKey}})
  - System.Collections.Generic.IEnumerable{System.Net.NetworkInformation.GatewayIPAddressInformation}.System.Linq.Enumerable.Union``1(System.Collections.Generic.IEnumerable{System.Net.NetworkInformation.GatewayIPAddressInformation})
  - System.Collections.Generic.IEnumerable{System.Net.NetworkInformation.GatewayIPAddressInformation}.System.Linq.Enumerable.Union``1(System.Collections.Generic.IEnumerable{System.Net.NetworkInformation.GatewayIPAddressInformation},System.Collections.Generic.IEqualityComparer{System.Net.NetworkInformation.GatewayIPAddressInformation})
  - System.Collections.Generic.IEnumerable{System.Net.NetworkInformation.GatewayIPAddressInformation}.System.Linq.Enumerable.Where``1(System.Func{System.Net.NetworkInformation.GatewayIPAddressInformation,System.Boolean})
  - System.Collections.Generic.IEnumerable{System.Net.NetworkInformation.GatewayIPAddressInformation}.System.Linq.Enumerable.Where``1(System.Func{System.Net.NetworkInformation.GatewayIPAddressInformation,System.Int32,System.Boolean})
  - System.Collections.Generic.IEnumerable{System.Net.NetworkInformation.GatewayIPAddressInformation}.System.Linq.Enumerable.Zip``3(System.Collections.Generic.IEnumerable{{TSecond}},System.Func{System.Net.NetworkInformation.GatewayIPAddressInformation,{TSecond},{TResult}})
- uid: System.Net.NetworkInformation.GatewayIPAddressInformationCollection.#ctor
  commentId: M:System.Net.NetworkInformation.GatewayIPAddressInformationCollection.#ctor
  id: '#ctor'
  parent: System.Net.NetworkInformation.GatewayIPAddressInformationCollection
  langs:
  - csharp
  - vb
  name: GatewayIPAddressInformationCollection()
  fullName: System.Net.NetworkInformation.GatewayIPAddressInformationCollection.GatewayIPAddressInformationCollection()
  type: Constructor
  source:
    remote:
      path: src/System.Net.NetworkInformation/src/System/Net/NetworkInformation/GatewayIPAddressInformationCollection.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: .ctor
    path: src/System.Net.NetworkInformation/src/System/Net/NetworkInformation/GatewayIPAddressInformationCollection.cs
    startLine: 12
  assemblies:
  - System.Net.NetworkInformation
  namespace: System.Net.NetworkInformation
  summary: "\n<p>Initializes a new instance of the <xref href=\"System.Net.NetworkInformation.GatewayIPAddressInformationCollection\" data-throw-if-not-resolved=\"false\"></xref> class.</p>\n"
  syntax:
    content: protected GatewayIPAddressInformationCollection()
    content.vb: Protected Sub New
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
  nameWithType: GatewayIPAddressInformationCollection.GatewayIPAddressInformationCollection()
- uid: System.Net.NetworkInformation.GatewayIPAddressInformationCollection.Count
  commentId: P:System.Net.NetworkInformation.GatewayIPAddressInformationCollection.Count
  id: Count
  parent: System.Net.NetworkInformation.GatewayIPAddressInformationCollection
  langs:
  - csharp
  - vb
  name: Count
  fullName: System.Net.NetworkInformation.GatewayIPAddressInformationCollection.Count
  type: Property
  source:
    remote:
      path: src/System.Net.NetworkInformation/src/System/Net/NetworkInformation/GatewayIPAddressInformationCollection.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: Count
    path: src/System.Net.NetworkInformation/src/System/Net/NetworkInformation/GatewayIPAddressInformationCollection.cs
    startLine: 27
  assemblies:
  - System.Net.NetworkInformation
  namespace: System.Net.NetworkInformation
  summary: "\n<p>Gets the number of <xref href=\"System.Net.NetworkInformation.GatewayIPAddressInformation\" data-throw-if-not-resolved=\"false\"></xref> types in this collection.</p>\n"
  syntax:
    content: public virtual int Count { get; }
    content.vb: Public Overridable ReadOnly Property Count As Integer
    parameters: []
    return:
      type: System.Int32
      description: "\n<p>An <xref href=\"System.Int32\" data-throw-if-not-resolved=\"false\"></xref> value that contains the number of <xref href=\"System.Net.NetworkInformation.GatewayIPAddressInformation\" data-throw-if-not-resolved=\"false\"></xref> types in this collection.</p>\n"
  implements:
  - System.Collections.Generic.ICollection{System.Net.NetworkInformation.GatewayIPAddressInformation}.Count
  modifiers.csharp:
  - public
  - virtual
  - get
  modifiers.vb:
  - Public
  - Overridable
  - ReadOnly
  nameWithType: GatewayIPAddressInformationCollection.Count
- uid: System.Net.NetworkInformation.GatewayIPAddressInformationCollection.IsReadOnly
  commentId: P:System.Net.NetworkInformation.GatewayIPAddressInformationCollection.IsReadOnly
  id: IsReadOnly
  parent: System.Net.NetworkInformation.GatewayIPAddressInformationCollection
  langs:
  - csharp
  - vb
  name: IsReadOnly
  fullName: System.Net.NetworkInformation.GatewayIPAddressInformationCollection.IsReadOnly
  type: Property
  source:
    remote:
      path: src/System.Net.NetworkInformation/src/System/Net/NetworkInformation/GatewayIPAddressInformationCollection.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: IsReadOnly
    path: src/System.Net.NetworkInformation/src/System/Net/NetworkInformation/GatewayIPAddressInformationCollection.cs
    startLine: 35
  assemblies:
  - System.Net.NetworkInformation
  namespace: System.Net.NetworkInformation
  summary: "\n<p>Gets a value that indicates whether access to this collection is read-only.</p>\n"
  syntax:
    content: public virtual bool IsReadOnly { get; }
    content.vb: Public Overridable ReadOnly Property IsReadOnly As Boolean
    parameters: []
    return:
      type: System.Boolean
      description: "\n<p>\n<strong>true</strong> in all cases.</p>\n"
  implements:
  - System.Collections.Generic.ICollection{System.Net.NetworkInformation.GatewayIPAddressInformation}.IsReadOnly
  modifiers.csharp:
  - public
  - virtual
  - get
  modifiers.vb:
  - Public
  - Overridable
  - ReadOnly
  nameWithType: GatewayIPAddressInformationCollection.IsReadOnly
- uid: System.Net.NetworkInformation.GatewayIPAddressInformationCollection.Item(System.Int32)
  commentId: P:System.Net.NetworkInformation.GatewayIPAddressInformationCollection.Item(System.Int32)
  id: Item(System.Int32)
  parent: System.Net.NetworkInformation.GatewayIPAddressInformationCollection
  langs:
  - csharp
  - vb
  name: Item[Int32]
  fullName: System.Net.NetworkInformation.GatewayIPAddressInformationCollection.Item[System.Int32]
  type: Property
  source:
    remote:
      path: src/System.Net.NetworkInformation/src/System/Net/NetworkInformation/GatewayIPAddressInformationCollection.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: this[]
    path: src/System.Net.NetworkInformation/src/System/Net/NetworkInformation/GatewayIPAddressInformationCollection.cs
    startLine: 43
  assemblies:
  - System.Net.NetworkInformation
  namespace: System.Net.NetworkInformation
  summary: "\n<p>Gets the <xref href=\"System.Net.NetworkInformation.GatewayIPAddressInformation\" data-throw-if-not-resolved=\"false\"></xref> at the specific index of the collection.</p>\n"
  syntax:
    content: public virtual GatewayIPAddressInformation this[int index] { get; }
    content.vb: Public Overridable ReadOnly Property Item(index As Integer) As GatewayIPAddressInformation
    parameters:
    - id: index
      type: System.Int32
      description: "\n<p>The index of interest.</p>\n"
    return:
      type: System.Net.NetworkInformation.GatewayIPAddressInformation
      description: "\n<p>The <xref href=\"System.Net.NetworkInformation.GatewayIPAddressInformation\" data-throw-if-not-resolved=\"false\"></xref> at the specific index in the collection.</p>\n"
  modifiers.csharp:
  - public
  - virtual
  - get
  modifiers.vb:
  - Public
  - Overridable
  - ReadOnly
  fullName.vb: System.Net.NetworkInformation.GatewayIPAddressInformationCollection.Item(System.Int32)
  name.vb: Item(Int32)
  nameWithType: GatewayIPAddressInformationCollection.Item[Int32]
  nameWithType.vb: GatewayIPAddressInformationCollection.Item(Int32)
- uid: System.Net.NetworkInformation.GatewayIPAddressInformationCollection.Add(System.Net.NetworkInformation.GatewayIPAddressInformation)
  commentId: M:System.Net.NetworkInformation.GatewayIPAddressInformationCollection.Add(System.Net.NetworkInformation.GatewayIPAddressInformation)
  id: Add(System.Net.NetworkInformation.GatewayIPAddressInformation)
  parent: System.Net.NetworkInformation.GatewayIPAddressInformationCollection
  langs:
  - csharp
  - vb
  name: Add(GatewayIPAddressInformation)
  fullName: System.Net.NetworkInformation.GatewayIPAddressInformationCollection.Add(System.Net.NetworkInformation.GatewayIPAddressInformation)
  type: Method
  source:
    remote:
      path: src/System.Net.NetworkInformation/src/System/Net/NetworkInformation/GatewayIPAddressInformationCollection.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: Add
    path: src/System.Net.NetworkInformation/src/System/Net/NetworkInformation/GatewayIPAddressInformationCollection.cs
    startLine: 51
  assemblies:
  - System.Net.NetworkInformation
  namespace: System.Net.NetworkInformation
  summary: "\n<p>Throws a <xref href=\"System.NotSupportedException\" data-throw-if-not-resolved=\"false\"></xref> because this operation is not supported for this collection.</p>\n"
  syntax:
    content: public virtual void Add(GatewayIPAddressInformation address)
    content.vb: Public Overridable Sub Add(address As GatewayIPAddressInformation)
    parameters:
    - id: address
      type: System.Net.NetworkInformation.GatewayIPAddressInformation
      description: "\n<p>The object to be added to the collection.</p>\n"
  implements:
  - System.Collections.Generic.ICollection{System.Net.NetworkInformation.GatewayIPAddressInformation}.Add(System.Net.NetworkInformation.GatewayIPAddressInformation)
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
  nameWithType: GatewayIPAddressInformationCollection.Add(GatewayIPAddressInformation)
- uid: System.Net.NetworkInformation.GatewayIPAddressInformationCollection.Clear
  commentId: M:System.Net.NetworkInformation.GatewayIPAddressInformationCollection.Clear
  id: Clear
  parent: System.Net.NetworkInformation.GatewayIPAddressInformationCollection
  langs:
  - csharp
  - vb
  name: Clear()
  fullName: System.Net.NetworkInformation.GatewayIPAddressInformationCollection.Clear()
  type: Method
  source:
    remote:
      path: src/System.Net.NetworkInformation/src/System/Net/NetworkInformation/GatewayIPAddressInformationCollection.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: Clear
    path: src/System.Net.NetworkInformation/src/System/Net/NetworkInformation/GatewayIPAddressInformationCollection.cs
    startLine: 81
  assemblies:
  - System.Net.NetworkInformation
  namespace: System.Net.NetworkInformation
  summary: "\n<p>Throws a <xref href=\"System.NotSupportedException\" data-throw-if-not-resolved=\"false\"></xref> because this operation is not supported for this collection.</p>\n"
  syntax:
    content: public virtual void Clear()
    content.vb: Public Overridable Sub Clear
  implements:
  - System.Collections.Generic.ICollection{System.Net.NetworkInformation.GatewayIPAddressInformation}.Clear
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
  nameWithType: GatewayIPAddressInformationCollection.Clear()
- uid: System.Net.NetworkInformation.GatewayIPAddressInformationCollection.Contains(System.Net.NetworkInformation.GatewayIPAddressInformation)
  commentId: M:System.Net.NetworkInformation.GatewayIPAddressInformationCollection.Contains(System.Net.NetworkInformation.GatewayIPAddressInformation)
  id: Contains(System.Net.NetworkInformation.GatewayIPAddressInformation)
  parent: System.Net.NetworkInformation.GatewayIPAddressInformationCollection
  langs:
  - csharp
  - vb
  name: Contains(GatewayIPAddressInformation)
  fullName: System.Net.NetworkInformation.GatewayIPAddressInformationCollection.Contains(System.Net.NetworkInformation.GatewayIPAddressInformation)
  type: Method
  source:
    remote:
      path: src/System.Net.NetworkInformation/src/System/Net/NetworkInformation/GatewayIPAddressInformationCollection.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: Contains
    path: src/System.Net.NetworkInformation/src/System/Net/NetworkInformation/GatewayIPAddressInformationCollection.cs
    startLine: 61
  assemblies:
  - System.Net.NetworkInformation
  namespace: System.Net.NetworkInformation
  summary: "\n<p>Checks whether the collection contains the specified <xref href=\"System.Net.NetworkInformation.GatewayIPAddressInformation\" data-throw-if-not-resolved=\"false\"></xref> object.</p>\n"
  syntax:
    content: public virtual bool Contains(GatewayIPAddressInformation address)
    content.vb: Public Overridable Function Contains(address As GatewayIPAddressInformation) As Boolean
    parameters:
    - id: address
      type: System.Net.NetworkInformation.GatewayIPAddressInformation
      description: "\n<p>The <xref href=\"System.Net.NetworkInformation.GatewayIPAddressInformation\" data-throw-if-not-resolved=\"false\"></xref> object to be searched in the collection.</p>\n"
    return:
      type: System.Boolean
      description: "\n<p>\n<strong>true</strong> if the <xref href=\"System.Net.NetworkInformation.GatewayIPAddressInformation\" data-throw-if-not-resolved=\"false\"></xref> object exists in the collection; otherwise <strong>false</strong>.</p>\n"
  implements:
  - System.Collections.Generic.ICollection{System.Net.NetworkInformation.GatewayIPAddressInformation}.Contains(System.Net.NetworkInformation.GatewayIPAddressInformation)
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
  nameWithType: GatewayIPAddressInformationCollection.Contains(GatewayIPAddressInformation)
- uid: System.Net.NetworkInformation.GatewayIPAddressInformationCollection.CopyTo(System.Net.NetworkInformation.GatewayIPAddressInformation[],System.Int32)
  commentId: M:System.Net.NetworkInformation.GatewayIPAddressInformationCollection.CopyTo(System.Net.NetworkInformation.GatewayIPAddressInformation[],System.Int32)
  id: CopyTo(System.Net.NetworkInformation.GatewayIPAddressInformation[],System.Int32)
  parent: System.Net.NetworkInformation.GatewayIPAddressInformationCollection
  langs:
  - csharp
  - vb
  name: CopyTo(GatewayIPAddressInformation[], Int32)
  fullName: System.Net.NetworkInformation.GatewayIPAddressInformationCollection.CopyTo(System.Net.NetworkInformation.GatewayIPAddressInformation[], System.Int32)
  type: Method
  source:
    remote:
      path: src/System.Net.NetworkInformation/src/System/Net/NetworkInformation/GatewayIPAddressInformationCollection.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: CopyTo
    path: src/System.Net.NetworkInformation/src/System/Net/NetworkInformation/GatewayIPAddressInformationCollection.cs
    startLine: 22
  assemblies:
  - System.Net.NetworkInformation
  namespace: System.Net.NetworkInformation
  summary: "\n<p>Copies the elements in this collection to a one-dimensional array of type <xref href=\"System.Net.NetworkInformation.GatewayIPAddressInformation\" data-throw-if-not-resolved=\"false\"></xref>.</p>\n"
  syntax:
    content: public virtual void CopyTo(GatewayIPAddressInformation[] array, int offset)
    content.vb: Public Overridable Sub CopyTo(array As GatewayIPAddressInformation(), offset As Integer)
    parameters:
    - id: array
      type: System.Net.NetworkInformation.GatewayIPAddressInformation[]
      description: "\n<p>A one-dimensional array that receives a copy of the collection.</p>\n"
    - id: offset
      type: System.Int32
      description: "\n<p>The zero-based index in <em>array</em> at which the copy begins.</p>\n"
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "\n<p>\n<em>array</em> is <strong>null</strong>. </p>\n"
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "\n<p>\n<em>count</em> is less than zero. </p>\n"
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "\n<p>\n<em>array</em> is multidimensional.</p>\n<p>-or- </p>\n<p>The number of elements in this <xref href=\"System.Net.NetworkInformation.GatewayIPAddressInformation\" data-throw-if-not-resolved=\"false\"></xref> is greater than the available space from <em>count</em> to the end of the destination <em>array</em>. </p>\n"
  - type: System.InvalidCastException
    commentId: T:System.InvalidCastException
    description: "\n<p>The elements in this <xref href=\"System.Net.NetworkInformation.GatewayIPAddressInformation\" data-throw-if-not-resolved=\"false\"></xref> cannot be cast automatically to the type of the destination <em>array</em>. </p>\n"
  implements:
  - System.Collections.Generic.ICollection{System.Net.NetworkInformation.GatewayIPAddressInformation}.CopyTo(System.Net.NetworkInformation.GatewayIPAddressInformation[],System.Int32)
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
  fullName.vb: System.Net.NetworkInformation.GatewayIPAddressInformationCollection.CopyTo(System.Net.NetworkInformation.GatewayIPAddressInformation(), System.Int32)
  name.vb: CopyTo(GatewayIPAddressInformation(), Int32)
  nameWithType: GatewayIPAddressInformationCollection.CopyTo(GatewayIPAddressInformation[], Int32)
  nameWithType.vb: GatewayIPAddressInformationCollection.CopyTo(GatewayIPAddressInformation(), Int32)
- uid: System.Net.NetworkInformation.GatewayIPAddressInformationCollection.GetEnumerator
  commentId: M:System.Net.NetworkInformation.GatewayIPAddressInformationCollection.GetEnumerator
  id: GetEnumerator
  parent: System.Net.NetworkInformation.GatewayIPAddressInformationCollection
  langs:
  - csharp
  - vb
  name: GetEnumerator()
  fullName: System.Net.NetworkInformation.GatewayIPAddressInformationCollection.GetEnumerator()
  type: Method
  source:
    remote:
      path: src/System.Net.NetworkInformation/src/System/Net/NetworkInformation/GatewayIPAddressInformationCollection.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: GetEnumerator
    path: src/System.Net.NetworkInformation/src/System/Net/NetworkInformation/GatewayIPAddressInformationCollection.cs
    startLine: 66
  assemblies:
  - System.Net.NetworkInformation
  namespace: System.Net.NetworkInformation
  summary: "\n<p>Returns an object that can be used to iterate through this collection.</p>\n"
  syntax:
    content: public virtual IEnumerator<GatewayIPAddressInformation> GetEnumerator()
    content.vb: Public Overridable Function GetEnumerator As IEnumerator(Of GatewayIPAddressInformation)
    return:
      type: System.Collections.Generic.IEnumerator{System.Net.NetworkInformation.GatewayIPAddressInformation}
      description: "\n<p>An object that implements the <xref href=\"System.Collections.IEnumerator\" data-throw-if-not-resolved=\"false\"></xref> interface and provides access to the <xref href=\"System.Net.NetworkInformation.UnicastIPAddressInformation\" data-throw-if-not-resolved=\"false\"></xref> types in this collection.</p>\n"
  implements:
  - System.Collections.Generic.IEnumerable{System.Net.NetworkInformation.GatewayIPAddressInformation}.GetEnumerator
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
  nameWithType: GatewayIPAddressInformationCollection.GetEnumerator()
- uid: System.Net.NetworkInformation.GatewayIPAddressInformationCollection.Remove(System.Net.NetworkInformation.GatewayIPAddressInformation)
  commentId: M:System.Net.NetworkInformation.GatewayIPAddressInformationCollection.Remove(System.Net.NetworkInformation.GatewayIPAddressInformation)
  id: Remove(System.Net.NetworkInformation.GatewayIPAddressInformation)
  parent: System.Net.NetworkInformation.GatewayIPAddressInformationCollection
  langs:
  - csharp
  - vb
  name: Remove(GatewayIPAddressInformation)
  fullName: System.Net.NetworkInformation.GatewayIPAddressInformationCollection.Remove(System.Net.NetworkInformation.GatewayIPAddressInformation)
  type: Method
  source:
    remote:
      path: src/System.Net.NetworkInformation/src/System/Net/NetworkInformation/GatewayIPAddressInformationCollection.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: Remove
    path: src/System.Net.NetworkInformation/src/System/Net/NetworkInformation/GatewayIPAddressInformationCollection.cs
    startLine: 76
  assemblies:
  - System.Net.NetworkInformation
  namespace: System.Net.NetworkInformation
  summary: "\n<p>Throws a <xref href=\"System.NotSupportedException\" data-throw-if-not-resolved=\"false\"></xref> because this operation is not supported for this collection.</p>\n"
  syntax:
    content: public virtual bool Remove(GatewayIPAddressInformation address)
    content.vb: Public Overridable Function Remove(address As GatewayIPAddressInformation) As Boolean
    parameters:
    - id: address
      type: System.Net.NetworkInformation.GatewayIPAddressInformation
      description: "\n<p>The object to be removed.</p>\n"
    return:
      type: System.Boolean
      description: "\n<p>Always throws a <xref href=\"System.NotSupportedException\" data-throw-if-not-resolved=\"false\"></xref>.</p>\n"
  implements:
  - System.Collections.Generic.ICollection{System.Net.NetworkInformation.GatewayIPAddressInformation}.Remove(System.Net.NetworkInformation.GatewayIPAddressInformation)
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
  nameWithType: GatewayIPAddressInformationCollection.Remove(GatewayIPAddressInformation)
- uid: System.Net.NetworkInformation.GatewayIPAddressInformationCollection.System#Collections#IEnumerable#GetEnumerator
  commentId: M:System.Net.NetworkInformation.GatewayIPAddressInformationCollection.System#Collections#IEnumerable#GetEnumerator
  id: System#Collections#IEnumerable#GetEnumerator
  isEii: true
  parent: System.Net.NetworkInformation.GatewayIPAddressInformationCollection
  langs:
  - csharp
  - vb
  name: IEnumerable.GetEnumerator()
  fullName: System.Net.NetworkInformation.GatewayIPAddressInformationCollection.System.Collections.IEnumerable.GetEnumerator()
  type: Method
  source:
    remote:
      path: src/System.Net.NetworkInformation/src/System/Net/NetworkInformation/GatewayIPAddressInformationCollection.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: System.Collections.IEnumerable.GetEnumerator
    path: src/System.Net.NetworkInformation/src/System/Net/NetworkInformation/GatewayIPAddressInformationCollection.cs
    startLine: 71
  assemblies:
  - System.Net.NetworkInformation
  namespace: System.Net.NetworkInformation
  summary: "\n<p>Returns an object that can be used to iterate through this collection.</p>\n"
  syntax:
    content: IEnumerator IEnumerable.GetEnumerator()
    content.vb: Function System.Collections.IEnumerable.GetEnumerator As IEnumerator Implements IEnumerable.GetEnumerator
    return:
      type: System.Collections.IEnumerator
      description: "\n<p>An object that implements the <xref href=\"System.Collections.IEnumerator\" data-throw-if-not-resolved=\"false\"></xref> interface and provides access to the <xref href=\"System.Net.NetworkInformation.UnicastIPAddressInformation\" data-throw-if-not-resolved=\"false\"></xref> types in this collection.</p>\n"
  implements:
  - System.Collections.IEnumerable.GetEnumerator
  name.vb: System.Collections.IEnumerable.GetEnumerator()
  nameWithType: GatewayIPAddressInformationCollection.IEnumerable.GetEnumerator()
  nameWithType.vb: GatewayIPAddressInformationCollection.System.Collections.IEnumerable.GetEnumerator()
references:
- uid: System.Net.NetworkInformation
  isExternal: false
  name: System.Net.NetworkInformation
  fullName: System.Net.NetworkInformation
  nameWithType: System.Net.NetworkInformation
  commentId: N:System.Net.NetworkInformation
- uid: System.Object
  parent: System
  isExternal: false
  name: Object
  fullName: System.Object
  nameWithType: Object
  commentId: T:System.Object
- uid: System.Collections.Generic.ICollection{System.Net.NetworkInformation.GatewayIPAddressInformation}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.ICollection`1
  name: ICollection<GatewayIPAddressInformation>
  fullName: System.Collections.Generic.ICollection<System.Net.NetworkInformation.GatewayIPAddressInformation>
  fullname.vb: System.Collections.Generic.ICollection(Of System.Net.NetworkInformation.GatewayIPAddressInformation)
  name.vb: ICollection(Of GatewayIPAddressInformation)
  spec.csharp:
  - uid: System.Collections.Generic.ICollection`1
    name: ICollection
    fullName: System.Collections.Generic.ICollection
    isExternal: true
  - name: <
    fullName: <
  - uid: System.Net.NetworkInformation.GatewayIPAddressInformation
    name: GatewayIPAddressInformation
    fullName: System.Net.NetworkInformation.GatewayIPAddressInformation
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.ICollection`1
    name: ICollection
    fullName: System.Collections.Generic.ICollection
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - uid: System.Net.NetworkInformation.GatewayIPAddressInformation
    name: GatewayIPAddressInformation
    fullName: System.Net.NetworkInformation.GatewayIPAddressInformation
  - name: )
    fullName: )
  nameWithType: ICollection<GatewayIPAddressInformation>
  nameWithType.vb: ICollection(Of GatewayIPAddressInformation)
  commentId: T:System.Collections.Generic.ICollection{System.Net.NetworkInformation.GatewayIPAddressInformation}
- uid: System.Collections.Generic.IEnumerable{System.Net.NetworkInformation.GatewayIPAddressInformation}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IEnumerable`1
  name: IEnumerable<GatewayIPAddressInformation>
  fullName: System.Collections.Generic.IEnumerable<System.Net.NetworkInformation.GatewayIPAddressInformation>
  fullname.vb: System.Collections.Generic.IEnumerable(Of System.Net.NetworkInformation.GatewayIPAddressInformation)
  name.vb: IEnumerable(Of GatewayIPAddressInformation)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    fullName: <
  - uid: System.Net.NetworkInformation.GatewayIPAddressInformation
    name: GatewayIPAddressInformation
    fullName: System.Net.NetworkInformation.GatewayIPAddressInformation
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - uid: System.Net.NetworkInformation.GatewayIPAddressInformation
    name: GatewayIPAddressInformation
    fullName: System.Net.NetworkInformation.GatewayIPAddressInformation
  - name: )
    fullName: )
  nameWithType: IEnumerable<GatewayIPAddressInformation>
  nameWithType.vb: IEnumerable(Of GatewayIPAddressInformation)
  commentId: T:System.Collections.Generic.IEnumerable{System.Net.NetworkInformation.GatewayIPAddressInformation}
- uid: System.Collections.IEnumerable
  parent: System.Collections
  isExternal: false
  name: IEnumerable
  fullName: System.Collections.IEnumerable
  nameWithType: IEnumerable
  commentId: T:System.Collections.IEnumerable
- uid: System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  nameWithType: Object.ToString()
  commentId: M:System.Object.ToString
- uid: System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
  nameWithType: Object.Equals(Object)
  commentId: M:System.Object.Equals(System.Object)
- uid: System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
  nameWithType: Object.Equals(Object, Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
  nameWithType: Object.ReferenceEquals(Object, Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
- uid: System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  nameWithType: Object.GetHashCode()
  commentId: M:System.Object.GetHashCode
- uid: System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  nameWithType: Object.GetType()
  commentId: M:System.Object.GetType
- uid: System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  nameWithType: Object.MemberwiseClone()
  commentId: M:System.Object.MemberwiseClone
- uid: System.Collections.IEnumerable.System.Linq.Queryable.AsQueryable
  parent: System.Linq.Queryable
  definition: System.Linq.Queryable.AsQueryable(System.Collections.IEnumerable)
  name: AsQueryable()
  fullName: System.Linq.Queryable.AsQueryable()
  spec.csharp:
  - uid: System.Linq.Queryable.AsQueryable
    name: AsQueryable
    fullName: System.Linq.Queryable.AsQueryable
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Linq.Queryable.AsQueryable
    name: AsQueryable
    fullName: System.Linq.Queryable.AsQueryable
  - name: (
    fullName: (
  - name: )
    fullName: )
  nameWithType: Queryable.AsQueryable()
  commentId: M:System.Linq.Queryable.AsQueryable(System.Collections.IEnumerable)
- uid: System.Collections.Generic.IEnumerable{System.Net.NetworkInformation.GatewayIPAddressInformation}.System.Linq.Queryable.AsQueryable``1
  parent: System.Linq.Queryable
  definition: System.Linq.Queryable.AsQueryable``1(System.Collections.Generic.IEnumerable{``0})
  name: AsQueryable<GatewayIPAddressInformation>()
  fullName: System.Linq.Queryable.AsQueryable<System.Net.NetworkInformation.GatewayIPAddressInformation>()
  fullname.vb: System.Linq.Queryable.AsQueryable(Of System.Net.NetworkInformation.GatewayIPAddressInformation)()
  name.vb: AsQueryable(Of GatewayIPAddressInformation)()
  spec.csharp:
  - uid: System.Linq.Queryable.AsQueryable``1
    name: AsQueryable<GatewayIPAddressInformation>
    fullName: System.Linq.Queryable.AsQueryable<System.Net.NetworkInformation.GatewayIPAddressInformation>
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Linq.Queryable.AsQueryable``1
    name: AsQueryable(Of GatewayIPAddressInformation)
    fullName: System.Linq.Queryable.AsQueryable(Of System.Net.NetworkInformation.GatewayIPAddressInformation)
  - name: (
    fullName: (
  - name: )
    fullName: )
  nameWithType: Queryable.AsQueryable<GatewayIPAddressInformation>()
  nameWithType.vb: Queryable.AsQueryable(Of GatewayIPAddressInformation)()
  commentId: M:System.Linq.Queryable.AsQueryable``1(System.Collections.Generic.IEnumerable{``0})
- uid: System.Collections.IEnumerable.System.Linq.ParallelEnumerable.AsParallel
  parent: System.Linq.ParallelEnumerable
  definition: System.Linq.ParallelEnumerable.AsParallel(System.Collections.IEnumerable)
  name: AsParallel()
  fullName: System.Linq.ParallelEnumerable.AsParallel()
  spec.csharp:
  - uid: System.Linq.ParallelEnumerable.AsParallel
    name: AsParallel
    fullName: System.Linq.ParallelEnumerable.AsParallel
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Linq.ParallelEnumerable.AsParallel
    name: AsParallel
    fullName: System.Linq.ParallelEnumerable.AsParallel
  - name: (
    fullName: (
  - name: )
    fullName: )
  nameWithType: ParallelEnumerable.AsParallel()
  commentId: M:System.Linq.ParallelEnumerable.AsParallel(System.Collections.IEnumerable)
- uid: System.Collections.Generic.IEnumerable{System.Net.NetworkInformation.GatewayIPAddressInformation}.System.Linq.ParallelEnumerable.AsParallel``1
  parent: System.Linq.ParallelEnumerable
  definition: System.Linq.ParallelEnumerable.AsParallel``1(System.Collections.Generic.IEnumerable{``0})
  name: AsParallel<GatewayIPAddressInformation>()
  fullName: System.Linq.ParallelEnumerable.AsParallel<System.Net.NetworkInformation.GatewayIPAddressInformation>()
  fullname.vb: System.Linq.ParallelEnumerable.AsParallel(Of System.Net.NetworkInformation.GatewayIPAddressInformation)()
  name.vb: AsParallel(Of GatewayIPAddressInformation)()
  spec.csharp:
  - uid: System.Linq.ParallelEnumerable.AsParallel``1
    name: AsParallel<GatewayIPAddressInformation>
    fullName: System.Linq.ParallelEnumerable.AsParallel<System.Net.NetworkInformation.GatewayIPAddressInformation>
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Linq.ParallelEnumerable.AsParallel``1
    name: AsParallel(Of GatewayIPAddressInformation)
    fullName: System.Linq.ParallelEnumerable.AsParallel(Of System.Net.NetworkInformation.GatewayIPAddressInformation)
  - name: (
    fullName: (
  - name: )
    fullName: )
  nameWithType: ParallelEnumerable.AsParallel<GatewayIPAddressInformation>()
  nameWithType.vb: ParallelEnumerable.AsParallel(Of GatewayIPAddressInformation)()
  commentId: M:System.Linq.ParallelEnumerable.AsParallel``1(System.Collections.Generic.IEnumerable{``0})
- uid: System.Collections.Generic.IEnumerable{System.Net.NetworkInformation.GatewayIPAddressInformation}.System.Linq.Enumerable.Aggregate``1(System.Func{System.Net.NetworkInformation.GatewayIPAddressInformation,System.Net.NetworkInformation.GatewayIPAddressInformation,System.Net.NetworkInformation.GatewayIPAddressInformation})
  parent: System.Linq.Enumerable
  definition: System.Linq.Enumerable.Aggregate``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``0,``0})
  name: Aggregate<GatewayIPAddressInformation>(Func<GatewayIPAddressInformation, GatewayIPAddressInformation, GatewayIPAddressInformation>)
  fullName: System.Linq.Enumerable.Aggregate<System.Net.NetworkInformation.GatewayIPAddressInformation>(System.Func<System.Net.NetworkInformation.GatewayIPAddressInformation, System.Net.NetworkInformation.GatewayIPAddressInformation, System.Net.NetworkInformation.GatewayIPAddressInformation>)
  fullname.vb: System.Linq.Enumerable.Aggregate(Of System.Net.NetworkInformation.GatewayIPAddressInformation)(System.Func(Of System.Net.NetworkInformation.GatewayIPAddressInformation, System.Net.NetworkInformation.GatewayIPAddressInformation, System.Net.NetworkInformation.GatewayIPAddressInformation))
  name.vb: Aggregate(Of GatewayIPAddressInformation)(Func(Of GatewayIPAddressInformation, GatewayIPAddressInformation, GatewayIPAddressInformation))
  spec.csharp:
  - uid: System.Linq.Enumerable.Aggregate``1(System.Func{``0,``0,``0})
    name: Aggregate<GatewayIPAddressInformation>
    fullName: System.Linq.Enumerable.Aggregate<System.Net.NetworkInformation.GatewayIPAddressInformation>
  - name: (
    fullName: (
  - uid: System.Func`3
    name: Func
    fullName: System.Func
    isExternal: true
  - name: <
    fullName: <
  - uid: System.Net.NetworkInformation.GatewayIPAddressInformation
    name: GatewayIPAddressInformation
    fullName: System.Net.NetworkInformation.GatewayIPAddressInformation
  - name: ', '
    fullName: ', '
  - uid: System.Net.NetworkInformation.GatewayIPAddressInformation
    name: GatewayIPAddressInformation
    fullName: System.Net.NetworkInformation.GatewayIPAddressInformation
  - name: ', '
    fullName: ', '
  - uid: System.Net.NetworkInformation.GatewayIPAddressInformation
    name: GatewayIPAddressInformation
    fullName: System.Net.NetworkInformation.GatewayIPAddressInformation
  - name: '>'
    fullName: '>'
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Linq.Enumerable.Aggregate``1(System.Func{``0,``0,``0})
    name: Aggregate(Of GatewayIPAddressInformation)
    fullName: System.Linq.Enumerable.Aggregate(Of System.Net.NetworkInformation.GatewayIPAddressInformation)
  - name: (
    fullName: (
  - uid: System.Func`3
    name: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - uid: System.Net.NetworkInformation.GatewayIPAddressInformation
    name: GatewayIPAddressInformation
    fullName: System.Net.NetworkInformation.GatewayIPAddressInformation
  - name: ', '
    fullName: ', '
  - uid: System.Net.NetworkInformation.GatewayIPAddressInformation
    name: GatewayIPAddressInformation
    fullName: System.Net.NetworkInformation.GatewayIPAddressInformation
  - name: ', '
    fullName: ', '
  - uid: System.Net.NetworkInformation.GatewayIPAddressInformation
    name: GatewayIPAddressInformation
    fullName: System.Net.NetworkInformation.GatewayIPAddressInformation
  - name: )
    fullName: )
  - name: )
    fullName: )
  nameWithType: Enumerable.Aggregate<GatewayIPAddressInformation>(Func<GatewayIPAddressInformation, GatewayIPAddressInformation, GatewayIPAddressInformation>)
  nameWithType.vb: Enumerable.Aggregate(Of GatewayIPAddressInformation)(Func(Of GatewayIPAddressInformation, GatewayIPAddressInformation, GatewayIPAddressInformation))
  commentId: M:System.Linq.Enumerable.Aggregate``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``0,``0})
- uid: System.Collections.Generic.IEnumerable{System.Net.NetworkInformation.GatewayIPAddressInformation}.System.Linq.Enumerable.Aggregate``2({TAccumulate},System.Func{{TAccumulate},System.Net.NetworkInformation.GatewayIPAddressInformation,{TAccumulate}})
  parent: System.Linq.Enumerable
  definition: System.Linq.Enumerable.Aggregate``2(System.Collections.Generic.IEnumerable{``0},``1,System.Func{``1,``0,``1})
  name: Aggregate<GatewayIPAddressInformation, TAccumulate>(TAccumulate, Func<TAccumulate, GatewayIPAddressInformation, TAccumulate>)
  fullName: System.Linq.Enumerable.Aggregate<System.Net.NetworkInformation.GatewayIPAddressInformation, TAccumulate>(TAccumulate, System.Func<TAccumulate, System.Net.NetworkInformation.GatewayIPAddressInformation, TAccumulate>)
  fullname.vb: System.Linq.Enumerable.Aggregate(Of System.Net.NetworkInformation.GatewayIPAddressInformation, TAccumulate)(TAccumulate, System.Func(Of TAccumulate, System.Net.NetworkInformation.GatewayIPAddressInformation, TAccumulate))
  name.vb: Aggregate(Of GatewayIPAddressInformation, TAccumulate)(TAccumulate, Func(Of TAccumulate, GatewayIPAddressInformation, TAccumulate))
  spec.csharp:
  - uid: System.Linq.Enumerable.Aggregate``2(``1,System.Func{``1,``0,``1})
    name: Aggregate<GatewayIPAddressInformation, TAccumulate>
    fullName: System.Linq.Enumerable.Aggregate<System.Net.NetworkInformation.GatewayIPAddressInformation, TAccumulate>
  - name: (
    fullName: (
  - name: TAccumulate
    fullName: TAccumulate
  - name: ', '
    fullName: ', '
  - uid: System.Func`3
    name: Func
    fullName: System.Func
    isExternal: true
  - name: <
    fullName: <
  - name: TAccumulate
    fullName: TAccumulate
  - name: ', '
    fullName: ', '
  - uid: System.Net.NetworkInformation.GatewayIPAddressInformation
    name: GatewayIPAddressInformation
    fullName: System.Net.NetworkInformation.GatewayIPAddressInformation
  - name: ', '
    fullName: ', '
  - name: TAccumulate
    fullName: TAccumulate
  - name: '>'
    fullName: '>'
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Linq.Enumerable.Aggregate``2(``1,System.Func{``1,``0,``1})
    name: Aggregate(Of GatewayIPAddressInformation, TAccumulate)
    fullName: System.Linq.Enumerable.Aggregate(Of System.Net.NetworkInformation.GatewayIPAddressInformation, TAccumulate)
  - name: (
    fullName: (
  - name: TAccumulate
    fullName: TAccumulate
  - name: ', '
    fullName: ', '
  - uid: System.Func`3
    name: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - name: TAccumulate
    fullName: TAccumulate
  - name: ', '
    fullName: ', '
  - uid: System.Net.NetworkInformation.GatewayIPAddressInformation
    name: GatewayIPAddressInformation
    fullName: System.Net.NetworkInformation.GatewayIPAddressInformation
  - name: ', '
    fullName: ', '
  - name: TAccumulate
    fullName: TAccumulate
  - name: )
    fullName: )
  - name: )
    fullName: )
  nameWithType: Enumerable.Aggregate<GatewayIPAddressInformation, TAccumulate>(TAccumulate, Func<TAccumulate, GatewayIPAddressInformation, TAccumulate>)
  nameWithType.vb: Enumerable.Aggregate(Of GatewayIPAddressInformation, TAccumulate)(TAccumulate, Func(Of TAccumulate, GatewayIPAddressInformation, TAccumulate))
  commentId: M:System.Linq.Enumerable.Aggregate``2(System.Collections.Generic.IEnumerable{``0},``1,System.Func{``1,``0,``1})
- uid: System.Collections.Generic.IEnumerable{System.Net.NetworkInformation.GatewayIPAddressInformation}.System.Linq.Enumerable.Aggregate``3({TAccumulate},System.Func{{TAccumulate},System.Net.NetworkInformation.GatewayIPAddressInformation,{TAccumulate}},System.Func{{TAccumulate},{TResult}})
  parent: System.Linq.Enumerable
  definition: System.Linq.Enumerable.Aggregate``3(System.Collections.Generic.IEnumerable{``0},``1,System.Func{``1,``0,``1},System.Func{``1,``2})
  name: Aggregate<GatewayIPAddressInformation, TAccumulate, TResult>(TAccumulate, Func<TAccumulate, GatewayIPAddressInformation, TAccumulate>, Func<TAccumulate, TResult>)
  fullName: System.Linq.Enumerable.Aggregate<System.Net.NetworkInformation.GatewayIPAddressInformation, TAccumulate, TResult>(TAccumulate, System.Func<TAccumulate, System.Net.NetworkInformation.GatewayIPAddressInformation, TAccumulate>, System.Func<TAccumulate, TResult>)
  fullname.vb: System.Linq.Enumerable.Aggregate(Of System.Net.NetworkInformation.GatewayIPAddressInformation, TAccumulate, TResult)(TAccumulate, System.Func(Of TAccumulate, System.Net.NetworkInformation.GatewayIPAddressInformation, TAccumulate), System.Func(Of TAccumulate, TResult))
  name.vb: Aggregate(Of GatewayIPAddressInformation, TAccumulate, TResult)(TAccumulate, Func(Of TAccumulate, GatewayIPAddressInformation, TAccumulate), Func(Of TAccumulate, TResult))
  spec.csharp:
  - uid: System.Linq.Enumerable.Aggregate``3(``1,System.Func{``1,``0,``1},System.Func{``1,``2})
    name: Aggregate<GatewayIPAddressInformation, TAccumulate, TResult>
    fullName: System.Linq.Enumerable.Aggregate<System.Net.NetworkInformation.GatewayIPAddressInformation, TAccumulate, TResult>
  - name: (
    fullName: (
  - name: TAccumulate
    fullName: TAccumulate
  - name: ', '
    fullName: ', '
  - uid: System.Func`3
    name: Func
    fullName: System.Func
    isExternal: true
  - name: <
    fullName: <
  - name: TAccumulate
    fullName: TAccumulate
  - name: ', '
    fullName: ', '
  - uid: System.Net.NetworkInformation.GatewayIPAddressInformation
    name: GatewayIPAddressInformation
    fullName: System.Net.NetworkInformation.GatewayIPAddressInformation
  - name: ', '
    fullName: ', '
  - name: TAccumulate
    fullName: TAccumulate
  - name: '>'
    fullName: '>'
  - name: ', '
    fullName: ', '
  - uid: System.Func`2
    name: Func
    fullName: System.Func
    isExternal: true
  - name: <
    fullName: <
  - name: TAccumulate
    fullName: TAccumulate
  - name: ', '
    fullName: ', '
  - name: TResult
    fullName: TResult
  - name: '>'
    fullName: '>'
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Linq.Enumerable.Aggregate``3(``1,System.Func{``1,``0,``1},System.Func{``1,``2})
    name: Aggregate(Of GatewayIPAddressInformation, TAccumulate, TResult)
    fullName: System.Linq.Enumerable.Aggregate(Of System.Net.NetworkInformation.GatewayIPAddressInformation, TAccumulate, TResult)
  - name: (
    fullName: (
  - name: TAccumulate
    fullName: TAccumulate
  - name: ', '
    fullName: ', '
  - uid: System.Func`3
    name: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - name: TAccumulate
    fullName: TAccumulate
  - name: ', '
    fullName: ', '
  - uid: System.Net.NetworkInformation.GatewayIPAddressInformation
    name: GatewayIPAddressInformation
    fullName: System.Net.NetworkInformation.GatewayIPAddressInformation
  - name: ', '
    fullName: ', '
  - name: TAccumulate
    fullName: TAccumulate
  - name: )
    fullName: )
  - name: ', '
    fullName: ', '
  - uid: System.Func`2
    name: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - name: TAccumulate
    fullName: TAccumulate
  - name: ', '
    fullName: ', '
  - name: TResult
    fullName: TResult
  - name: )
    fullName: )
  - name: )
    fullName: )
  nameWithType: Enumerable.Aggregate<GatewayIPAddressInformation, TAccumulate, TResult>(TAccumulate, Func<TAccumulate, GatewayIPAddressInformation, TAccumulate>, Func<TAccumulate, TResult>)
  nameWithType.vb: Enumerable.Aggregate(Of GatewayIPAddressInformation, TAccumulate, TResult)(TAccumulate, Func(Of TAccumulate, GatewayIPAddressInformation, TAccumulate), Func(Of TAccumulate, TResult))
  commentId: M:System.Linq.Enumerable.Aggregate``3(System.Collections.Generic.IEnumerable{``0},``1,System.Func{``1,``0,``1},System.Func{``1,``2})
- uid: System.Collections.Generic.IEnumerable{System.Net.NetworkInformation.GatewayIPAddressInformation}.System.Linq.Enumerable.All``1(System.Func{System.Net.NetworkInformation.GatewayIPAddressInformation,System.Boolean})
  parent: System.Linq.Enumerable
  definition: System.Linq.Enumerable.All``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})
  name: All<GatewayIPAddressInformation>(Func<GatewayIPAddressInformation, Boolean>)
  fullName: System.Linq.Enumerable.All<System.Net.NetworkInformation.GatewayIPAddressInformation>(System.Func<System.Net.NetworkInformation.GatewayIPAddressInformation, System.Boolean>)
  fullname.vb: System.Linq.Enumerable.All(Of System.Net.NetworkInformation.GatewayIPAddressInformation)(System.Func(Of System.Net.NetworkInformation.GatewayIPAddressInformation, System.Boolean))
  name.vb: All(Of GatewayIPAddressInformation)(Func(Of GatewayIPAddressInformation, Boolean))
  spec.csharp:
  - uid: System.Linq.Enumerable.All``1(System.Func{``0,System.Boolean})
    name: All<GatewayIPAddressInformation>
    fullName: System.Linq.Enumerable.All<System.Net.NetworkInformation.GatewayIPAddressInformation>
  - name: (
    fullName: (
  - uid: System.Func`2
    name: Func
    fullName: System.Func
    isExternal: true
  - name: <
    fullName: <
  - uid: System.Net.NetworkInformation.GatewayIPAddressInformation
    name: GatewayIPAddressInformation
    fullName: System.Net.NetworkInformation.GatewayIPAddressInformation
  - name: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: '>'
    fullName: '>'
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Linq.Enumerable.All``1(System.Func{``0,System.Boolean})
    name: All(Of GatewayIPAddressInformation)
    fullName: System.Linq.Enumerable.All(Of System.Net.NetworkInformation.GatewayIPAddressInformation)
  - name: (
    fullName: (
  - uid: System.Func`2
    name: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - uid: System.Net.NetworkInformation.GatewayIPAddressInformation
    name: GatewayIPAddressInformation
    fullName: System.Net.NetworkInformation.GatewayIPAddressInformation
  - name: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    fullName: )
  - name: )
    fullName: )
  nameWithType: Enumerable.All<GatewayIPAddressInformation>(Func<GatewayIPAddressInformation, Boolean>)
  nameWithType.vb: Enumerable.All(Of GatewayIPAddressInformation)(Func(Of GatewayIPAddressInformation, Boolean))
  commentId: M:System.Linq.Enumerable.All``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})
- uid: System.Collections.Generic.IEnumerable{System.Net.NetworkInformation.GatewayIPAddressInformation}.System.Linq.Enumerable.Any``1
  parent: System.Linq.Enumerable
  definition: System.Linq.Enumerable.Any``1(System.Collections.Generic.IEnumerable{``0})
  name: Any<GatewayIPAddressInformation>()
  fullName: System.Linq.Enumerable.Any<System.Net.NetworkInformation.GatewayIPAddressInformation>()
  fullname.vb: System.Linq.Enumerable.Any(Of System.Net.NetworkInformation.GatewayIPAddressInformation)()
  name.vb: Any(Of GatewayIPAddressInformation)()
  spec.csharp:
  - uid: System.Linq.Enumerable.Any``1
    name: Any<GatewayIPAddressInformation>
    fullName: System.Linq.Enumerable.Any<System.Net.NetworkInformation.GatewayIPAddressInformation>
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Linq.Enumerable.Any``1
    name: Any(Of GatewayIPAddressInformation)
    fullName: System.Linq.Enumerable.Any(Of System.Net.NetworkInformation.GatewayIPAddressInformation)
  - name: (
    fullName: (
  - name: )
    fullName: )
  nameWithType: Enumerable.Any<GatewayIPAddressInformation>()
  nameWithType.vb: Enumerable.Any(Of GatewayIPAddressInformation)()
  commentId: M:System.Linq.Enumerable.Any``1(System.Collections.Generic.IEnumerable{``0})
- uid: System.Collections.Generic.IEnumerable{System.Net.NetworkInformation.GatewayIPAddressInformation}.System.Linq.Enumerable.Any``1(System.Func{System.Net.NetworkInformation.GatewayIPAddressInformation,System.Boolean})
  parent: System.Linq.Enumerable
  definition: System.Linq.Enumerable.Any``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})
  name: Any<GatewayIPAddressInformation>(Func<GatewayIPAddressInformation, Boolean>)
  fullName: System.Linq.Enumerable.Any<System.Net.NetworkInformation.GatewayIPAddressInformation>(System.Func<System.Net.NetworkInformation.GatewayIPAddressInformation, System.Boolean>)
  fullname.vb: System.Linq.Enumerable.Any(Of System.Net.NetworkInformation.GatewayIPAddressInformation)(System.Func(Of System.Net.NetworkInformation.GatewayIPAddressInformation, System.Boolean))
  name.vb: Any(Of GatewayIPAddressInformation)(Func(Of GatewayIPAddressInformation, Boolean))
  spec.csharp:
  - uid: System.Linq.Enumerable.Any``1(System.Func{``0,System.Boolean})
    name: Any<GatewayIPAddressInformation>
    fullName: System.Linq.Enumerable.Any<System.Net.NetworkInformation.GatewayIPAddressInformation>
  - name: (
    fullName: (
  - uid: System.Func`2
    name: Func
    fullName: System.Func
    isExternal: true
  - name: <
    fullName: <
  - uid: System.Net.NetworkInformation.GatewayIPAddressInformation
    name: GatewayIPAddressInformation
    fullName: System.Net.NetworkInformation.GatewayIPAddressInformation
  - name: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: '>'
    fullName: '>'
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Linq.Enumerable.Any``1(System.Func{``0,System.Boolean})
    name: Any(Of GatewayIPAddressInformation)
    fullName: System.Linq.Enumerable.Any(Of System.Net.NetworkInformation.GatewayIPAddressInformation)
  - name: (
    fullName: (
  - uid: System.Func`2
    name: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - uid: System.Net.NetworkInformation.GatewayIPAddressInformation
    name: GatewayIPAddressInformation
    fullName: System.Net.NetworkInformation.GatewayIPAddressInformation
  - name: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    fullName: )
  - name: )
    fullName: )
  nameWithType: Enumerable.Any<GatewayIPAddressInformation>(Func<GatewayIPAddressInformation, Boolean>)
  nameWithType.vb: Enumerable.Any(Of GatewayIPAddressInformation)(Func(Of GatewayIPAddressInformation, Boolean))
  commentId: M:System.Linq.Enumerable.Any``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})
- uid: System.Collections.Generic.IEnumerable{System.Net.NetworkInformation.GatewayIPAddressInformation}.System.Linq.Enumerable.AsEnumerable``1
  parent: System.Linq.Enumerable
  definition: System.Linq.Enumerable.AsEnumerable``1(System.Collections.Generic.IEnumerable{``0})
  name: AsEnumerable<GatewayIPAddressInformation>()
  fullName: System.Linq.Enumerable.AsEnumerable<System.Net.NetworkInformation.GatewayIPAddressInformation>()
  fullname.vb: System.Linq.Enumerable.AsEnumerable(Of System.Net.NetworkInformation.GatewayIPAddressInformation)()
  name.vb: AsEnumerable(Of GatewayIPAddressInformation)()
  spec.csharp:
  - uid: System.Linq.Enumerable.AsEnumerable``1
    name: AsEnumerable<GatewayIPAddressInformation>
    fullName: System.Linq.Enumerable.AsEnumerable<System.Net.NetworkInformation.GatewayIPAddressInformation>
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Linq.Enumerable.AsEnumerable``1
    name: AsEnumerable(Of GatewayIPAddressInformation)
    fullName: System.Linq.Enumerable.AsEnumerable(Of System.Net.NetworkInformation.GatewayIPAddressInformation)
  - name: (
    fullName: (
  - name: )
    fullName: )
  nameWithType: Enumerable.AsEnumerable<GatewayIPAddressInformation>()
  nameWithType.vb: Enumerable.AsEnumerable(Of GatewayIPAddressInformation)()
  commentId: M:System.Linq.Enumerable.AsEnumerable``1(System.Collections.Generic.IEnumerable{``0})
- uid: System.Collections.Generic.IEnumerable{System.Net.NetworkInformation.GatewayIPAddressInformation}.System.Linq.Enumerable.Average``1(System.Func{System.Net.NetworkInformation.GatewayIPAddressInformation,System.Decimal})
  parent: System.Linq.Enumerable
  definition: System.Linq.Enumerable.Average``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Decimal})
  name: Average<GatewayIPAddressInformation>(Func<GatewayIPAddressInformation, Decimal>)
  fullName: System.Linq.Enumerable.Average<System.Net.NetworkInformation.GatewayIPAddressInformation>(System.Func<System.Net.NetworkInformation.GatewayIPAddressInformation, System.Decimal>)
  fullname.vb: System.Linq.Enumerable.Average(Of System.Net.NetworkInformation.GatewayIPAddressInformation)(System.Func(Of System.Net.NetworkInformation.GatewayIPAddressInformation, System.Decimal))
  name.vb: Average(Of GatewayIPAddressInformation)(Func(Of GatewayIPAddressInformation, Decimal))
  spec.csharp:
  - uid: System.Linq.Enumerable.Average``1(System.Func{``0,System.Decimal})
    name: Average<GatewayIPAddressInformation>
    fullName: System.Linq.Enumerable.Average<System.Net.NetworkInformation.GatewayIPAddressInformation>
  - name: (
    fullName: (
  - uid: System.Func`2
    name: Func
    fullName: System.Func
    isExternal: true
  - name: <
    fullName: <
  - uid: System.Net.NetworkInformation.GatewayIPAddressInformation
    name: GatewayIPAddressInformation
    fullName: System.Net.NetworkInformation.GatewayIPAddressInformation
  - name: ', '
    fullName: ', '
  - uid: System.Decimal
    name: Decimal
    fullName: System.Decimal
    isExternal: true
  - name: '>'
    fullName: '>'
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Linq.Enumerable.Average``1(System.Func{``0,System.Decimal})
    name: Average(Of GatewayIPAddressInformation)
    fullName: System.Linq.Enumerable.Average(Of System.Net.NetworkInformation.GatewayIPAddressInformation)
  - name: (
    fullName: (
  - uid: System.Func`2
    name: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - uid: System.Net.NetworkInformation.GatewayIPAddressInformation
    name: GatewayIPAddressInformation
    fullName: System.Net.NetworkInformation.GatewayIPAddressInformation
  - name: ', '
    fullName: ', '
  - uid: System.Decimal
    name: Decimal
    fullName: System.Decimal
    isExternal: true
  - name: )
    fullName: )
  - name: )
    fullName: )
  nameWithType: Enumerable.Average<GatewayIPAddressInformation>(Func<GatewayIPAddressInformation, Decimal>)
  nameWithType.vb: Enumerable.Average(Of GatewayIPAddressInformation)(Func(Of GatewayIPAddressInformation, Decimal))
  commentId: M:System.Linq.Enumerable.Average``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Decimal})
- uid: System.Collections.Generic.IEnumerable{System.Net.NetworkInformation.GatewayIPAddressInformation}.System.Linq.Enumerable.Average``1(System.Func{System.Net.NetworkInformation.GatewayIPAddressInformation,System.Double})
  parent: System.Linq.Enumerable
  definition: System.Linq.Enumerable.Average``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Double})
  name: Average<GatewayIPAddressInformation>(Func<GatewayIPAddressInformation, Double>)
  fullName: System.Linq.Enumerable.Average<System.Net.NetworkInformation.GatewayIPAddressInformation>(System.Func<System.Net.NetworkInformation.GatewayIPAddressInformation, System.Double>)
  fullname.vb: System.Linq.Enumerable.Average(Of System.Net.NetworkInformation.GatewayIPAddressInformation)(System.Func(Of System.Net.NetworkInformation.GatewayIPAddressInformation, System.Double))
  name.vb: Average(Of GatewayIPAddressInformation)(Func(Of GatewayIPAddressInformation, Double))
  spec.csharp:
  - uid: System.Linq.Enumerable.Average``1(System.Func{``0,System.Double})
    name: Average<GatewayIPAddressInformation>
    fullName: System.Linq.Enumerable.Average<System.Net.NetworkInformation.GatewayIPAddressInformation>
  - name: (
    fullName: (
  - uid: System.Func`2
    name: Func
    fullName: System.Func
    isExternal: true
  - name: <
    fullName: <
  - uid: System.Net.NetworkInformation.GatewayIPAddressInformation
    name: GatewayIPAddressInformation
    fullName: System.Net.NetworkInformation.GatewayIPAddressInformation
  - name: ', '
    fullName: ', '
  - uid: System.Double
    name: Double
    fullName: System.Double
    isExternal: true
  - name: '>'
    fullName: '>'
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Linq.Enumerable.Average``1(System.Func{``0,System.Double})
    name: Average(Of GatewayIPAddressInformation)
    fullName: System.Linq.Enumerable.Average(Of System.Net.NetworkInformation.GatewayIPAddressInformation)
  - name: (
    fullName: (
  - uid: System.Func`2
    name: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - uid: System.Net.NetworkInformation.GatewayIPAddressInformation
    name: GatewayIPAddressInformation
    fullName: System.Net.NetworkInformation.GatewayIPAddressInformation
  - name: ', '
    fullName: ', '
  - uid: System.Double
    name: Double
    fullName: System.Double
    isExternal: true
  - name: )
    fullName: )
  - name: )
    fullName: )
  nameWithType: Enumerable.Average<GatewayIPAddressInformation>(Func<GatewayIPAddressInformation, Double>)
  nameWithType.vb: Enumerable.Average(Of GatewayIPAddressInformation)(Func(Of GatewayIPAddressInformation, Double))
  commentId: M:System.Linq.Enumerable.Average``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Double})
- uid: System.Collections.Generic.IEnumerable{System.Net.NetworkInformation.GatewayIPAddressInformation}.System.Linq.Enumerable.Average``1(System.Func{System.Net.NetworkInformation.GatewayIPAddressInformation,System.Int32})
  parent: System.Linq.Enumerable
  definition: System.Linq.Enumerable.Average``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32})
  name: Average<GatewayIPAddressInformation>(Func<GatewayIPAddressInformation, Int32>)
  fullName: System.Linq.Enumerable.Average<System.Net.NetworkInformation.GatewayIPAddressInformation>(System.Func<System.Net.NetworkInformation.GatewayIPAddressInformation, System.Int32>)
  fullname.vb: System.Linq.Enumerable.Average(Of System.Net.NetworkInformation.GatewayIPAddressInformation)(System.Func(Of System.Net.NetworkInformation.GatewayIPAddressInformation, System.Int32))
  name.vb: Average(Of GatewayIPAddressInformation)(Func(Of GatewayIPAddressInformation, Int32))
  spec.csharp:
  - uid: System.Linq.Enumerable.Average``1(System.Func{``0,System.Int32})
    name: Average<GatewayIPAddressInformation>
    fullName: System.Linq.Enumerable.Average<System.Net.NetworkInformation.GatewayIPAddressInformation>
  - name: (
    fullName: (
  - uid: System.Func`2
    name: Func
    fullName: System.Func
    isExternal: true
  - name: <
    fullName: <
  - uid: System.Net.NetworkInformation.GatewayIPAddressInformation
    name: GatewayIPAddressInformation
    fullName: System.Net.NetworkInformation.GatewayIPAddressInformation
  - name: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    fullName: System.Int32
    isExternal: true
  - name: '>'
    fullName: '>'
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Linq.Enumerable.Average``1(System.Func{``0,System.Int32})
    name: Average(Of GatewayIPAddressInformation)
    fullName: System.Linq.Enumerable.Average(Of System.Net.NetworkInformation.GatewayIPAddressInformation)
  - name: (
    fullName: (
  - uid: System.Func`2
    name: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - uid: System.Net.NetworkInformation.GatewayIPAddressInformation
    name: GatewayIPAddressInformation
    fullName: System.Net.NetworkInformation.GatewayIPAddressInformation
  - name: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    fullName: )
  - name: )
    fullName: )
  nameWithType: Enumerable.Average<GatewayIPAddressInformation>(Func<GatewayIPAddressInformation, Int32>)
  nameWithType.vb: Enumerable.Average(Of GatewayIPAddressInformation)(Func(Of GatewayIPAddressInformation, Int32))
  commentId: M:System.Linq.Enumerable.Average``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32})
- uid: System.Collections.Generic.IEnumerable{System.Net.NetworkInformation.GatewayIPAddressInformation}.System.Linq.Enumerable.Average``1(System.Func{System.Net.NetworkInformation.GatewayIPAddressInformation,System.Int64})
  parent: System.Linq.Enumerable
  definition: System.Linq.Enumerable.Average``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int64})
  name: Average<GatewayIPAddressInformation>(Func<GatewayIPAddressInformation, Int64>)
  fullName: System.Linq.Enumerable.Average<System.Net.NetworkInformation.GatewayIPAddressInformation>(System.Func<System.Net.NetworkInformation.GatewayIPAddressInformation, System.Int64>)
  fullname.vb: System.Linq.Enumerable.Average(Of System.Net.NetworkInformation.GatewayIPAddressInformation)(System.Func(Of System.Net.NetworkInformation.GatewayIPAddressInformation, System.Int64))
  name.vb: Average(Of GatewayIPAddressInformation)(Func(Of GatewayIPAddressInformation, Int64))
  spec.csharp:
  - uid: System.Linq.Enumerable.Average``1(System.Func{``0,System.Int64})
    name: Average<GatewayIPAddressInformation>
    fullName: System.Linq.Enumerable.Average<System.Net.NetworkInformation.GatewayIPAddressInformation>
  - name: (
    fullName: (
  - uid: System.Func`2
    name: Func
    fullName: System.Func
    isExternal: true
  - name: <
    fullName: <
  - uid: System.Net.NetworkInformation.GatewayIPAddressInformation
    name: GatewayIPAddressInformation
    fullName: System.Net.NetworkInformation.GatewayIPAddressInformation
  - name: ', '
    fullName: ', '
  - uid: System.Int64
    name: Int64
    fullName: System.Int64
    isExternal: true
  - name: '>'
    fullName: '>'
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Linq.Enumerable.Average``1(System.Func{``0,System.Int64})
    name: Average(Of GatewayIPAddressInformation)
    fullName: System.Linq.Enumerable.Average(Of System.Net.NetworkInformation.GatewayIPAddressInformation)
  - name: (
    fullName: (
  - uid: System.Func`2
    name: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - uid: System.Net.NetworkInformation.GatewayIPAddressInformation
    name: GatewayIPAddressInformation
    fullName: System.Net.NetworkInformation.GatewayIPAddressInformation
  - name: ', '
    fullName: ', '
  - uid: System.Int64
    name: Int64
    fullName: System.Int64
    isExternal: true
  - name: )
    fullName: )
  - name: )
    fullName: )
  nameWithType: Enumerable.Average<GatewayIPAddressInformation>(Func<GatewayIPAddressInformation, Int64>)
  nameWithType.vb: Enumerable.Average(Of GatewayIPAddressInformation)(Func(Of GatewayIPAddressInformation, Int64))
  commentId: M:System.Linq.Enumerable.Average``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int64})
- uid: System.Collections.Generic.IEnumerable{System.Net.NetworkInformation.GatewayIPAddressInformation}.System.Linq.Enumerable.Average``1(System.Func{System.Net.NetworkInformation.GatewayIPAddressInformation,System.Nullable{System.Decimal}})
  parent: System.Linq.Enumerable
  definition: System.Linq.Enumerable.Average``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Decimal}})
  name: Average<GatewayIPAddressInformation>(Func<GatewayIPAddressInformation, Nullable<Decimal>>)
  fullName: System.Linq.Enumerable.Average<System.Net.NetworkInformation.GatewayIPAddressInformation>(System.Func<System.Net.NetworkInformation.GatewayIPAddressInformation, System.Nullable<System.Decimal>>)
  fullname.vb: System.Linq.Enumerable.Average(Of System.Net.NetworkInformation.GatewayIPAddressInformation)(System.Func(Of System.Net.NetworkInformation.GatewayIPAddressInformation, System.Nullable(Of System.Decimal)))
  name.vb: Average(Of GatewayIPAddressInformation)(Func(Of GatewayIPAddressInformation, Nullable(Of Decimal)))
  spec.csharp:
  - uid: System.Linq.Enumerable.Average``1(System.Func{``0,System.Nullable{System.Decimal}})
    name: Average<GatewayIPAddressInformation>
    fullName: System.Linq.Enumerable.Average<System.Net.NetworkInformation.GatewayIPAddressInformation>
  - name: (
    fullName: (
  - uid: System.Func`2
    name: Func
    fullName: System.Func
    isExternal: true
  - name: <
    fullName: <
  - uid: System.Net.NetworkInformation.GatewayIPAddressInformation
    name: GatewayIPAddressInformation
    fullName: System.Net.NetworkInformation.GatewayIPAddressInformation
  - name: ', '
    fullName: ', '
  - uid: System.Nullable`1
    name: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    fullName: <
  - uid: System.Decimal
    name: Decimal
    fullName: System.Decimal
    isExternal: true
  - name: '>'
    fullName: '>'
  - name: '>'
    fullName: '>'
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Linq.Enumerable.Average``1(System.Func{``0,System.Nullable{System.Decimal}})
    name: Average(Of GatewayIPAddressInformation)
    fullName: System.Linq.Enumerable.Average(Of System.Net.NetworkInformation.GatewayIPAddressInformation)
  - name: (
    fullName: (
  - uid: System.Func`2
    name: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - uid: System.Net.NetworkInformation.GatewayIPAddressInformation
    name: GatewayIPAddressInformation
    fullName: System.Net.NetworkInformation.GatewayIPAddressInformation
  - name: ', '
    fullName: ', '
  - uid: System.Nullable`1
    name: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - uid: System.Decimal
    name: Decimal
    fullName: System.Decimal
    isExternal: true
  - name: )
    fullName: )
  - name: )
    fullName: )
  - name: )
    fullName: )
  nameWithType: Enumerable.Average<GatewayIPAddressInformation>(Func<GatewayIPAddressInformation, Nullable<Decimal>>)
  nameWithType.vb: Enumerable.Average(Of GatewayIPAddressInformation)(Func(Of GatewayIPAddressInformation, Nullable(Of Decimal)))
  commentId: M:System.Linq.Enumerable.Average``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Decimal}})
- uid: System.Collections.Generic.IEnumerable{System.Net.NetworkInformation.GatewayIPAddressInformation}.System.Linq.Enumerable.Average``1(System.Func{System.Net.NetworkInformation.GatewayIPAddressInformation,System.Nullable{System.Double}})
  parent: System.Linq.Enumerable
  definition: System.Linq.Enumerable.Average``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Double}})
  name: Average<GatewayIPAddressInformation>(Func<GatewayIPAddressInformation, Nullable<Double>>)
  fullName: System.Linq.Enumerable.Average<System.Net.NetworkInformation.GatewayIPAddressInformation>(System.Func<System.Net.NetworkInformation.GatewayIPAddressInformation, System.Nullable<System.Double>>)
  fullname.vb: System.Linq.Enumerable.Average(Of System.Net.NetworkInformation.GatewayIPAddressInformation)(System.Func(Of System.Net.NetworkInformation.GatewayIPAddressInformation, System.Nullable(Of System.Double)))
  name.vb: Average(Of GatewayIPAddressInformation)(Func(Of GatewayIPAddressInformation, Nullable(Of Double)))
  spec.csharp:
  - uid: System.Linq.Enumerable.Average``1(System.Func{``0,System.Nullable{System.Double}})
    name: Average<GatewayIPAddressInformation>
    fullName: System.Linq.Enumerable.Average<System.Net.NetworkInformation.GatewayIPAddressInformation>
  - name: (
    fullName: (
  - uid: System.Func`2
    name: Func
    fullName: System.Func
    isExternal: true
  - name: <
    fullName: <
  - uid: System.Net.NetworkInformation.GatewayIPAddressInformation
    name: GatewayIPAddressInformation
    fullName: System.Net.NetworkInformation.GatewayIPAddressInformation
  - name: ', '
    fullName: ', '
  - uid: System.Nullable`1
    name: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    fullName: <
  - uid: System.Double
    name: Double
    fullName: System.Double
    isExternal: true
  - name: '>'
    fullName: '>'
  - name: '>'
    fullName: '>'
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Linq.Enumerable.Average``1(System.Func{``0,System.Nullable{System.Double}})
    name: Average(Of GatewayIPAddressInformation)
    fullName: System.Linq.Enumerable.Average(Of System.Net.NetworkInformation.GatewayIPAddressInformation)
  - name: (
    fullName: (
  - uid: System.Func`2
    name: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - uid: System.Net.NetworkInformation.GatewayIPAddressInformation
    name: GatewayIPAddressInformation
    fullName: System.Net.NetworkInformation.GatewayIPAddressInformation
  - name: ', '
    fullName: ', '
  - uid: System.Nullable`1
    name: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - uid: System.Double
    name: Double
    fullName: System.Double
    isExternal: true
  - name: )
    fullName: )
  - name: )
    fullName: )
  - name: )
    fullName: )
  nameWithType: Enumerable.Average<GatewayIPAddressInformation>(Func<GatewayIPAddressInformation, Nullable<Double>>)
  nameWithType.vb: Enumerable.Average(Of GatewayIPAddressInformation)(Func(Of GatewayIPAddressInformation, Nullable(Of Double)))
  commentId: M:System.Linq.Enumerable.Average``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Double}})
- uid: System.Collections.Generic.IEnumerable{System.Net.NetworkInformation.GatewayIPAddressInformation}.System.Linq.Enumerable.Average``1(System.Func{System.Net.NetworkInformation.GatewayIPAddressInformation,System.Nullable{System.Int32}})
  parent: System.Linq.Enumerable
  definition: System.Linq.Enumerable.Average``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Int32}})
  name: Average<GatewayIPAddressInformation>(Func<GatewayIPAddressInformation, Nullable<Int32>>)
  fullName: System.Linq.Enumerable.Average<System.Net.NetworkInformation.GatewayIPAddressInformation>(System.Func<System.Net.NetworkInformation.GatewayIPAddressInformation, System.Nullable<System.Int32>>)
  fullname.vb: System.Linq.Enumerable.Average(Of System.Net.NetworkInformation.GatewayIPAddressInformation)(System.Func(Of System.Net.NetworkInformation.GatewayIPAddressInformation, System.Nullable(Of System.Int32)))
  name.vb: Average(Of GatewayIPAddressInformation)(Func(Of GatewayIPAddressInformation, Nullable(Of Int32)))
  spec.csharp:
  - uid: System.Linq.Enumerable.Average``1(System.Func{``0,System.Nullable{System.Int32}})
    name: Average<GatewayIPAddressInformation>
    fullName: System.Linq.Enumerable.Average<System.Net.NetworkInformation.GatewayIPAddressInformation>
  - name: (
    fullName: (
  - uid: System.Func`2
    name: Func
    fullName: System.Func
    isExternal: true
  - name: <
    fullName: <
  - uid: System.Net.NetworkInformation.GatewayIPAddressInformation
    name: GatewayIPAddressInformation
    fullName: System.Net.NetworkInformation.GatewayIPAddressInformation
  - name: ', '
    fullName: ', '
  - uid: System.Nullable`1
    name: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    fullName: <
  - uid: System.Int32
    name: Int32
    fullName: System.Int32
    isExternal: true
  - name: '>'
    fullName: '>'
  - name: '>'
    fullName: '>'
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Linq.Enumerable.Average``1(System.Func{``0,System.Nullable{System.Int32}})
    name: Average(Of GatewayIPAddressInformation)
    fullName: System.Linq.Enumerable.Average(Of System.Net.NetworkInformation.GatewayIPAddressInformation)
  - name: (
    fullName: (
  - uid: System.Func`2
    name: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - uid: System.Net.NetworkInformation.GatewayIPAddressInformation
    name: GatewayIPAddressInformation
    fullName: System.Net.NetworkInformation.GatewayIPAddressInformation
  - name: ', '
    fullName: ', '
  - uid: System.Nullable`1
    name: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - uid: System.Int32
    name: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    fullName: )
  - name: )
    fullName: )
  - name: )
    fullName: )
  nameWithType: Enumerable.Average<GatewayIPAddressInformation>(Func<GatewayIPAddressInformation, Nullable<Int32>>)
  nameWithType.vb: Enumerable.Average(Of GatewayIPAddressInformation)(Func(Of GatewayIPAddressInformation, Nullable(Of Int32)))
  commentId: M:System.Linq.Enumerable.Average``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Int32}})
- uid: System.Collections.Generic.IEnumerable{System.Net.NetworkInformation.GatewayIPAddressInformation}.System.Linq.Enumerable.Average``1(System.Func{System.Net.NetworkInformation.GatewayIPAddressInformation,System.Nullable{System.Int64}})
  parent: System.Linq.Enumerable
  definition: System.Linq.Enumerable.Average``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Int64}})
  name: Average<GatewayIPAddressInformation>(Func<GatewayIPAddressInformation, Nullable<Int64>>)
  fullName: System.Linq.Enumerable.Average<System.Net.NetworkInformation.GatewayIPAddressInformation>(System.Func<System.Net.NetworkInformation.GatewayIPAddressInformation, System.Nullable<System.Int64>>)
  fullname.vb: System.Linq.Enumerable.Average(Of System.Net.NetworkInformation.GatewayIPAddressInformation)(System.Func(Of System.Net.NetworkInformation.GatewayIPAddressInformation, System.Nullable(Of System.Int64)))
  name.vb: Average(Of GatewayIPAddressInformation)(Func(Of GatewayIPAddressInformation, Nullable(Of Int64)))
  spec.csharp:
  - uid: System.Linq.Enumerable.Average``1(System.Func{``0,System.Nullable{System.Int64}})
    name: Average<GatewayIPAddressInformation>
    fullName: System.Linq.Enumerable.Average<System.Net.NetworkInformation.GatewayIPAddressInformation>
  - name: (
    fullName: (
  - uid: System.Func`2
    name: Func
    fullName: System.Func
    isExternal: true
  - name: <
    fullName: <
  - uid: System.Net.NetworkInformation.GatewayIPAddressInformation
    name: GatewayIPAddressInformation
    fullName: System.Net.NetworkInformation.GatewayIPAddressInformation
  - name: ', '
    fullName: ', '
  - uid: System.Nullable`1
    name: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    fullName: <
  - uid: System.Int64
    name: Int64
    fullName: System.Int64
    isExternal: true
  - name: '>'
    fullName: '>'
  - name: '>'
    fullName: '>'
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Linq.Enumerable.Average``1(System.Func{``0,System.Nullable{System.Int64}})
    name: Average(Of GatewayIPAddressInformation)
    fullName: System.Linq.Enumerable.Average(Of System.Net.NetworkInformation.GatewayIPAddressInformation)
  - name: (
    fullName: (
  - uid: System.Func`2
    name: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - uid: System.Net.NetworkInformation.GatewayIPAddressInformation
    name: GatewayIPAddressInformation
    fullName: System.Net.NetworkInformation.GatewayIPAddressInformation
  - name: ', '
    fullName: ', '
  - uid: System.Nullable`1
    name: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - uid: System.Int64
    name: Int64
    fullName: System.Int64
    isExternal: true
  - name: )
    fullName: )
  - name: )
    fullName: )
  - name: )
    fullName: )
  nameWithType: Enumerable.Average<GatewayIPAddressInformation>(Func<GatewayIPAddressInformation, Nullable<Int64>>)
  nameWithType.vb: Enumerable.Average(Of GatewayIPAddressInformation)(Func(Of GatewayIPAddressInformation, Nullable(Of Int64)))
  commentId: M:System.Linq.Enumerable.Average``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Int64}})
- uid: System.Collections.Generic.IEnumerable{System.Net.NetworkInformation.GatewayIPAddressInformation}.System.Linq.Enumerable.Average``1(System.Func{System.Net.NetworkInformation.GatewayIPAddressInformation,System.Nullable{System.Single}})
  parent: System.Linq.Enumerable
  definition: System.Linq.Enumerable.Average``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Single}})
  name: Average<GatewayIPAddressInformation>(Func<GatewayIPAddressInformation, Nullable<Single>>)
  fullName: System.Linq.Enumerable.Average<System.Net.NetworkInformation.GatewayIPAddressInformation>(System.Func<System.Net.NetworkInformation.GatewayIPAddressInformation, System.Nullable<System.Single>>)
  fullname.vb: System.Linq.Enumerable.Average(Of System.Net.NetworkInformation.GatewayIPAddressInformation)(System.Func(Of System.Net.NetworkInformation.GatewayIPAddressInformation, System.Nullable(Of System.Single)))
  name.vb: Average(Of GatewayIPAddressInformation)(Func(Of GatewayIPAddressInformation, Nullable(Of Single)))
  spec.csharp:
  - uid: System.Linq.Enumerable.Average``1(System.Func{``0,System.Nullable{System.Single}})
    name: Average<GatewayIPAddressInformation>
    fullName: System.Linq.Enumerable.Average<System.Net.NetworkInformation.GatewayIPAddressInformation>
  - name: (
    fullName: (
  - uid: System.Func`2
    name: Func
    fullName: System.Func
    isExternal: true
  - name: <
    fullName: <
  - uid: System.Net.NetworkInformation.GatewayIPAddressInformation
    name: GatewayIPAddressInformation
    fullName: System.Net.NetworkInformation.GatewayIPAddressInformation
  - name: ', '
    fullName: ', '
  - uid: System.Nullable`1
    name: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    fullName: <
  - uid: System.Single
    name: Single
    fullName: System.Single
    isExternal: true
  - name: '>'
    fullName: '>'
  - name: '>'
    fullName: '>'
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Linq.Enumerable.Average``1(System.Func{``0,System.Nullable{System.Single}})
    name: Average(Of GatewayIPAddressInformation)
    fullName: System.Linq.Enumerable.Average(Of System.Net.NetworkInformation.GatewayIPAddressInformation)
  - name: (
    fullName: (
  - uid: System.Func`2
    name: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - uid: System.Net.NetworkInformation.GatewayIPAddressInformation
    name: GatewayIPAddressInformation
    fullName: System.Net.NetworkInformation.GatewayIPAddressInformation
  - name: ', '
    fullName: ', '
  - uid: System.Nullable`1
    name: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - uid: System.Single
    name: Single
    fullName: System.Single
    isExternal: true
  - name: )
    fullName: )
  - name: )
    fullName: )
  - name: )
    fullName: )
  nameWithType: Enumerable.Average<GatewayIPAddressInformation>(Func<GatewayIPAddressInformation, Nullable<Single>>)
  nameWithType.vb: Enumerable.Average(Of GatewayIPAddressInformation)(Func(Of GatewayIPAddressInformation, Nullable(Of Single)))
  commentId: M:System.Linq.Enumerable.Average``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Single}})
- uid: System.Collections.Generic.IEnumerable{System.Net.NetworkInformation.GatewayIPAddressInformation}.System.Linq.Enumerable.Average``1(System.Func{System.Net.NetworkInformation.GatewayIPAddressInformation,System.Single})
  parent: System.Linq.Enumerable
  definition: System.Linq.Enumerable.Average``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Single})
  name: Average<GatewayIPAddressInformation>(Func<GatewayIPAddressInformation, Single>)
  fullName: System.Linq.Enumerable.Average<System.Net.NetworkInformation.GatewayIPAddressInformation>(System.Func<System.Net.NetworkInformation.GatewayIPAddressInformation, System.Single>)
  fullname.vb: System.Linq.Enumerable.Average(Of System.Net.NetworkInformation.GatewayIPAddressInformation)(System.Func(Of System.Net.NetworkInformation.GatewayIPAddressInformation, System.Single))
  name.vb: Average(Of GatewayIPAddressInformation)(Func(Of GatewayIPAddressInformation, Single))
  spec.csharp:
  - uid: System.Linq.Enumerable.Average``1(System.Func{``0,System.Single})
    name: Average<GatewayIPAddressInformation>
    fullName: System.Linq.Enumerable.Average<System.Net.NetworkInformation.GatewayIPAddressInformation>
  - name: (
    fullName: (
  - uid: System.Func`2
    name: Func
    fullName: System.Func
    isExternal: true
  - name: <
    fullName: <
  - uid: System.Net.NetworkInformation.GatewayIPAddressInformation
    name: GatewayIPAddressInformation
    fullName: System.Net.NetworkInformation.GatewayIPAddressInformation
  - name: ', '
    fullName: ', '
  - uid: System.Single
    name: Single
    fullName: System.Single
    isExternal: true
  - name: '>'
    fullName: '>'
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Linq.Enumerable.Average``1(System.Func{``0,System.Single})
    name: Average(Of GatewayIPAddressInformation)
    fullName: System.Linq.Enumerable.Average(Of System.Net.NetworkInformation.GatewayIPAddressInformation)
  - name: (
    fullName: (
  - uid: System.Func`2
    name: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - uid: System.Net.NetworkInformation.GatewayIPAddressInformation
    name: GatewayIPAddressInformation
    fullName: System.Net.NetworkInformation.GatewayIPAddressInformation
  - name: ', '
    fullName: ', '
  - uid: System.Single
    name: Single
    fullName: System.Single
    isExternal: true
  - name: )
    fullName: )
  - name: )
    fullName: )
  nameWithType: Enumerable.Average<GatewayIPAddressInformation>(Func<GatewayIPAddressInformation, Single>)
  nameWithType.vb: Enumerable.Average(Of GatewayIPAddressInformation)(Func(Of GatewayIPAddressInformation, Single))
  commentId: M:System.Linq.Enumerable.Average``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Single})
- uid: System.Collections.IEnumerable.System.Linq.Enumerable.Cast``1
  parent: System.Linq.Enumerable
  definition: System.Linq.Enumerable.Cast``1(System.Collections.IEnumerable)
  name: Cast<TResult>()
  fullName: System.Linq.Enumerable.Cast<TResult>()
  fullname.vb: System.Linq.Enumerable.Cast(Of TResult)()
  name.vb: Cast(Of TResult)()
  spec.csharp:
  - uid: System.Linq.Enumerable.Cast``1
    name: Cast<TResult>
    fullName: System.Linq.Enumerable.Cast<TResult>
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Linq.Enumerable.Cast``1
    name: Cast(Of TResult)
    fullName: System.Linq.Enumerable.Cast(Of TResult)
  - name: (
    fullName: (
  - name: )
    fullName: )
  nameWithType: Enumerable.Cast<TResult>()
  nameWithType.vb: Enumerable.Cast(Of TResult)()
  commentId: M:System.Linq.Enumerable.Cast``1(System.Collections.IEnumerable)
- uid: System.Collections.Generic.IEnumerable{System.Net.NetworkInformation.GatewayIPAddressInformation}.System.Linq.Enumerable.Concat``1(System.Collections.Generic.IEnumerable{System.Net.NetworkInformation.GatewayIPAddressInformation})
  parent: System.Linq.Enumerable
  definition: System.Linq.Enumerable.Concat``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0})
  name: Concat<GatewayIPAddressInformation>(IEnumerable<GatewayIPAddressInformation>)
  fullName: System.Linq.Enumerable.Concat<System.Net.NetworkInformation.GatewayIPAddressInformation>(System.Collections.Generic.IEnumerable<System.Net.NetworkInformation.GatewayIPAddressInformation>)
  fullname.vb: System.Linq.Enumerable.Concat(Of System.Net.NetworkInformation.GatewayIPAddressInformation)(System.Collections.Generic.IEnumerable(Of System.Net.NetworkInformation.GatewayIPAddressInformation))
  name.vb: Concat(Of GatewayIPAddressInformation)(IEnumerable(Of GatewayIPAddressInformation))
  spec.csharp:
  - uid: System.Linq.Enumerable.Concat``1(System.Collections.Generic.IEnumerable{``0})
    name: Concat<GatewayIPAddressInformation>
    fullName: System.Linq.Enumerable.Concat<System.Net.NetworkInformation.GatewayIPAddressInformation>
  - name: (
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    fullName: <
  - uid: System.Net.NetworkInformation.GatewayIPAddressInformation
    name: GatewayIPAddressInformation
    fullName: System.Net.NetworkInformation.GatewayIPAddressInformation
  - name: '>'
    fullName: '>'
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Linq.Enumerable.Concat``1(System.Collections.Generic.IEnumerable{``0})
    name: Concat(Of GatewayIPAddressInformation)
    fullName: System.Linq.Enumerable.Concat(Of System.Net.NetworkInformation.GatewayIPAddressInformation)
  - name: (
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - uid: System.Net.NetworkInformation.GatewayIPAddressInformation
    name: GatewayIPAddressInformation
    fullName: System.Net.NetworkInformation.GatewayIPAddressInformation
  - name: )
    fullName: )
  - name: )
    fullName: )
  nameWithType: Enumerable.Concat<GatewayIPAddressInformation>(IEnumerable<GatewayIPAddressInformation>)
  nameWithType.vb: Enumerable.Concat(Of GatewayIPAddressInformation)(IEnumerable(Of GatewayIPAddressInformation))
  commentId: M:System.Linq.Enumerable.Concat``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0})
- uid: System.Collections.Generic.IEnumerable{System.Net.NetworkInformation.GatewayIPAddressInformation}.System.Linq.Enumerable.Append``1(System.Net.NetworkInformation.GatewayIPAddressInformation)
  parent: System.Linq.Enumerable
  definition: System.Linq.Enumerable.Append``1(System.Collections.Generic.IEnumerable{``0},``0)
  name: Append<GatewayIPAddressInformation>(GatewayIPAddressInformation)
  fullName: System.Linq.Enumerable.Append<System.Net.NetworkInformation.GatewayIPAddressInformation>(System.Net.NetworkInformation.GatewayIPAddressInformation)
  fullname.vb: System.Linq.Enumerable.Append(Of System.Net.NetworkInformation.GatewayIPAddressInformation)(System.Net.NetworkInformation.GatewayIPAddressInformation)
  name.vb: Append(Of GatewayIPAddressInformation)(GatewayIPAddressInformation)
  spec.csharp:
  - uid: System.Linq.Enumerable.Append``1(``0)
    name: Append<GatewayIPAddressInformation>
    fullName: System.Linq.Enumerable.Append<System.Net.NetworkInformation.GatewayIPAddressInformation>
  - name: (
    fullName: (
  - uid: System.Net.NetworkInformation.GatewayIPAddressInformation
    name: GatewayIPAddressInformation
    fullName: System.Net.NetworkInformation.GatewayIPAddressInformation
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Linq.Enumerable.Append``1(``0)
    name: Append(Of GatewayIPAddressInformation)
    fullName: System.Linq.Enumerable.Append(Of System.Net.NetworkInformation.GatewayIPAddressInformation)
  - name: (
    fullName: (
  - uid: System.Net.NetworkInformation.GatewayIPAddressInformation
    name: GatewayIPAddressInformation
    fullName: System.Net.NetworkInformation.GatewayIPAddressInformation
  - name: )
    fullName: )
  nameWithType: Enumerable.Append<GatewayIPAddressInformation>(GatewayIPAddressInformation)
  nameWithType.vb: Enumerable.Append(Of GatewayIPAddressInformation)(GatewayIPAddressInformation)
  commentId: M:System.Linq.Enumerable.Append``1(System.Collections.Generic.IEnumerable{``0},``0)
- uid: System.Collections.Generic.IEnumerable{System.Net.NetworkInformation.GatewayIPAddressInformation}.System.Linq.Enumerable.Prepend``1(System.Net.NetworkInformation.GatewayIPAddressInformation)
  parent: System.Linq.Enumerable
  definition: System.Linq.Enumerable.Prepend``1(System.Collections.Generic.IEnumerable{``0},``0)
  name: Prepend<GatewayIPAddressInformation>(GatewayIPAddressInformation)
  fullName: System.Linq.Enumerable.Prepend<System.Net.NetworkInformation.GatewayIPAddressInformation>(System.Net.NetworkInformation.GatewayIPAddressInformation)
  fullname.vb: System.Linq.Enumerable.Prepend(Of System.Net.NetworkInformation.GatewayIPAddressInformation)(System.Net.NetworkInformation.GatewayIPAddressInformation)
  name.vb: Prepend(Of GatewayIPAddressInformation)(GatewayIPAddressInformation)
  spec.csharp:
  - uid: System.Linq.Enumerable.Prepend``1(``0)
    name: Prepend<GatewayIPAddressInformation>
    fullName: System.Linq.Enumerable.Prepend<System.Net.NetworkInformation.GatewayIPAddressInformation>
  - name: (
    fullName: (
  - uid: System.Net.NetworkInformation.GatewayIPAddressInformation
    name: GatewayIPAddressInformation
    fullName: System.Net.NetworkInformation.GatewayIPAddressInformation
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Linq.Enumerable.Prepend``1(``0)
    name: Prepend(Of GatewayIPAddressInformation)
    fullName: System.Linq.Enumerable.Prepend(Of System.Net.NetworkInformation.GatewayIPAddressInformation)
  - name: (
    fullName: (
  - uid: System.Net.NetworkInformation.GatewayIPAddressInformation
    name: GatewayIPAddressInformation
    fullName: System.Net.NetworkInformation.GatewayIPAddressInformation
  - name: )
    fullName: )
  nameWithType: Enumerable.Prepend<GatewayIPAddressInformation>(GatewayIPAddressInformation)
  nameWithType.vb: Enumerable.Prepend(Of GatewayIPAddressInformation)(GatewayIPAddressInformation)
  commentId: M:System.Linq.Enumerable.Prepend``1(System.Collections.Generic.IEnumerable{``0},``0)
- uid: System.Collections.Generic.IEnumerable{System.Net.NetworkInformation.GatewayIPAddressInformation}.System.Linq.Enumerable.Contains``1(System.Net.NetworkInformation.GatewayIPAddressInformation)
  parent: System.Linq.Enumerable
  definition: System.Linq.Enumerable.Contains``1(System.Collections.Generic.IEnumerable{``0},``0)
  name: Contains<GatewayIPAddressInformation>(GatewayIPAddressInformation)
  fullName: System.Linq.Enumerable.Contains<System.Net.NetworkInformation.GatewayIPAddressInformation>(System.Net.NetworkInformation.GatewayIPAddressInformation)
  fullname.vb: System.Linq.Enumerable.Contains(Of System.Net.NetworkInformation.GatewayIPAddressInformation)(System.Net.NetworkInformation.GatewayIPAddressInformation)
  name.vb: Contains(Of GatewayIPAddressInformation)(GatewayIPAddressInformation)
  spec.csharp:
  - uid: System.Linq.Enumerable.Contains``1(``0)
    name: Contains<GatewayIPAddressInformation>
    fullName: System.Linq.Enumerable.Contains<System.Net.NetworkInformation.GatewayIPAddressInformation>
  - name: (
    fullName: (
  - uid: System.Net.NetworkInformation.GatewayIPAddressInformation
    name: GatewayIPAddressInformation
    fullName: System.Net.NetworkInformation.GatewayIPAddressInformation
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Linq.Enumerable.Contains``1(``0)
    name: Contains(Of GatewayIPAddressInformation)
    fullName: System.Linq.Enumerable.Contains(Of System.Net.NetworkInformation.GatewayIPAddressInformation)
  - name: (
    fullName: (
  - uid: System.Net.NetworkInformation.GatewayIPAddressInformation
    name: GatewayIPAddressInformation
    fullName: System.Net.NetworkInformation.GatewayIPAddressInformation
  - name: )
    fullName: )
  nameWithType: Enumerable.Contains<GatewayIPAddressInformation>(GatewayIPAddressInformation)
  nameWithType.vb: Enumerable.Contains(Of GatewayIPAddressInformation)(GatewayIPAddressInformation)
  commentId: M:System.Linq.Enumerable.Contains``1(System.Collections.Generic.IEnumerable{``0},``0)
- uid: System.Collections.Generic.IEnumerable{System.Net.NetworkInformation.GatewayIPAddressInformation}.System.Linq.Enumerable.Contains``1(System.Net.NetworkInformation.GatewayIPAddressInformation,System.Collections.Generic.IEqualityComparer{System.Net.NetworkInformation.GatewayIPAddressInformation})
  parent: System.Linq.Enumerable
  definition: System.Linq.Enumerable.Contains``1(System.Collections.Generic.IEnumerable{``0},``0,System.Collections.Generic.IEqualityComparer{``0})
  name: Contains<GatewayIPAddressInformation>(GatewayIPAddressInformation, IEqualityComparer<GatewayIPAddressInformation>)
  fullName: System.Linq.Enumerable.Contains<System.Net.NetworkInformation.GatewayIPAddressInformation>(System.Net.NetworkInformation.GatewayIPAddressInformation, System.Collections.Generic.IEqualityComparer<System.Net.NetworkInformation.GatewayIPAddressInformation>)
  fullname.vb: System.Linq.Enumerable.Contains(Of System.Net.NetworkInformation.GatewayIPAddressInformation)(System.Net.NetworkInformation.GatewayIPAddressInformation, System.Collections.Generic.IEqualityComparer(Of System.Net.NetworkInformation.GatewayIPAddressInformation))
  name.vb: Contains(Of GatewayIPAddressInformation)(GatewayIPAddressInformation, IEqualityComparer(Of GatewayIPAddressInformation))
  spec.csharp:
  - uid: System.Linq.Enumerable.Contains``1(``0,System.Collections.Generic.IEqualityComparer{``0})
    name: Contains<GatewayIPAddressInformation>
    fullName: System.Linq.Enumerable.Contains<System.Net.NetworkInformation.GatewayIPAddressInformation>
  - name: (
    fullName: (
  - uid: System.Net.NetworkInformation.GatewayIPAddressInformation
    name: GatewayIPAddressInformation
    fullName: System.Net.NetworkInformation.GatewayIPAddressInformation
  - name: ', '
    fullName: ', '
  - uid: System.Collections.Generic.IEqualityComparer`1
    name: IEqualityComparer
    fullName: System.Collections.Generic.IEqualityComparer
    isExternal: true
  - name: <
    fullName: <
  - uid: System.Net.NetworkInformation.GatewayIPAddressInformation
    name: GatewayIPAddressInformation
    fullName: System.Net.NetworkInformation.GatewayIPAddressInformation
  - name: '>'
    fullName: '>'
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Linq.Enumerable.Contains``1(``0,System.Collections.Generic.IEqualityComparer{``0})
    name: Contains(Of GatewayIPAddressInformation)
    fullName: System.Linq.Enumerable.Contains(Of System.Net.NetworkInformation.GatewayIPAddressInformation)
  - name: (
    fullName: (
  - uid: System.Net.NetworkInformation.GatewayIPAddressInformation
    name: GatewayIPAddressInformation
    fullName: System.Net.NetworkInformation.GatewayIPAddressInformation
  - name: ', '
    fullName: ', '
  - uid: System.Collections.Generic.IEqualityComparer`1
    name: IEqualityComparer
    fullName: System.Collections.Generic.IEqualityComparer
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - uid: System.Net.NetworkInformation.GatewayIPAddressInformation
    name: GatewayIPAddressInformation
    fullName: System.Net.NetworkInformation.GatewayIPAddressInformation
  - name: )
    fullName: )
  - name: )
    fullName: )
  nameWithType: Enumerable.Contains<GatewayIPAddressInformation>(GatewayIPAddressInformation, IEqualityComparer<GatewayIPAddressInformation>)
  nameWithType.vb: Enumerable.Contains(Of GatewayIPAddressInformation)(GatewayIPAddressInformation, IEqualityComparer(Of GatewayIPAddressInformation))
  commentId: M:System.Linq.Enumerable.Contains``1(System.Collections.Generic.IEnumerable{``0},``0,System.Collections.Generic.IEqualityComparer{``0})
- uid: System.Collections.Generic.IEnumerable{System.Net.NetworkInformation.GatewayIPAddressInformation}.System.Linq.Enumerable.Count``1
  parent: System.Linq.Enumerable
  definition: System.Linq.Enumerable.Count``1(System.Collections.Generic.IEnumerable{``0})
  name: Count<GatewayIPAddressInformation>()
  fullName: System.Linq.Enumerable.Count<System.Net.NetworkInformation.GatewayIPAddressInformation>()
  fullname.vb: System.Linq.Enumerable.Count(Of System.Net.NetworkInformation.GatewayIPAddressInformation)()
  name.vb: Count(Of GatewayIPAddressInformation)()
  spec.csharp:
  - uid: System.Linq.Enumerable.Count``1
    name: Count<GatewayIPAddressInformation>
    fullName: System.Linq.Enumerable.Count<System.Net.NetworkInformation.GatewayIPAddressInformation>
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Linq.Enumerable.Count``1
    name: Count(Of GatewayIPAddressInformation)
    fullName: System.Linq.Enumerable.Count(Of System.Net.NetworkInformation.GatewayIPAddressInformation)
  - name: (
    fullName: (
  - name: )
    fullName: )
  nameWithType: Enumerable.Count<GatewayIPAddressInformation>()
  nameWithType.vb: Enumerable.Count(Of GatewayIPAddressInformation)()
  commentId: M:System.Linq.Enumerable.Count``1(System.Collections.Generic.IEnumerable{``0})
- uid: System.Collections.Generic.IEnumerable{System.Net.NetworkInformation.GatewayIPAddressInformation}.System.Linq.Enumerable.Count``1(System.Func{System.Net.NetworkInformation.GatewayIPAddressInformation,System.Boolean})
  parent: System.Linq.Enumerable
  definition: System.Linq.Enumerable.Count``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})
  name: Count<GatewayIPAddressInformation>(Func<GatewayIPAddressInformation, Boolean>)
  fullName: System.Linq.Enumerable.Count<System.Net.NetworkInformation.GatewayIPAddressInformation>(System.Func<System.Net.NetworkInformation.GatewayIPAddressInformation, System.Boolean>)
  fullname.vb: System.Linq.Enumerable.Count(Of System.Net.NetworkInformation.GatewayIPAddressInformation)(System.Func(Of System.Net.NetworkInformation.GatewayIPAddressInformation, System.Boolean))
  name.vb: Count(Of GatewayIPAddressInformation)(Func(Of GatewayIPAddressInformation, Boolean))
  spec.csharp:
  - uid: System.Linq.Enumerable.Count``1(System.Func{``0,System.Boolean})
    name: Count<GatewayIPAddressInformation>
    fullName: System.Linq.Enumerable.Count<System.Net.NetworkInformation.GatewayIPAddressInformation>
  - name: (
    fullName: (
  - uid: System.Func`2
    name: Func
    fullName: System.Func
    isExternal: true
  - name: <
    fullName: <
  - uid: System.Net.NetworkInformation.GatewayIPAddressInformation
    name: GatewayIPAddressInformation
    fullName: System.Net.NetworkInformation.GatewayIPAddressInformation
  - name: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: '>'
    fullName: '>'
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Linq.Enumerable.Count``1(System.Func{``0,System.Boolean})
    name: Count(Of GatewayIPAddressInformation)
    fullName: System.Linq.Enumerable.Count(Of System.Net.NetworkInformation.GatewayIPAddressInformation)
  - name: (
    fullName: (
  - uid: System.Func`2
    name: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - uid: System.Net.NetworkInformation.GatewayIPAddressInformation
    name: GatewayIPAddressInformation
    fullName: System.Net.NetworkInformation.GatewayIPAddressInformation
  - name: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    fullName: )
  - name: )
    fullName: )
  nameWithType: Enumerable.Count<GatewayIPAddressInformation>(Func<GatewayIPAddressInformation, Boolean>)
  nameWithType.vb: Enumerable.Count(Of GatewayIPAddressInformation)(Func(Of GatewayIPAddressInformation, Boolean))
  commentId: M:System.Linq.Enumerable.Count``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})
- uid: System.Collections.Generic.IEnumerable{System.Net.NetworkInformation.GatewayIPAddressInformation}.System.Linq.Enumerable.DefaultIfEmpty``1
  parent: System.Linq.Enumerable
  definition: System.Linq.Enumerable.DefaultIfEmpty``1(System.Collections.Generic.IEnumerable{``0})
  name: DefaultIfEmpty<GatewayIPAddressInformation>()
  fullName: System.Linq.Enumerable.DefaultIfEmpty<System.Net.NetworkInformation.GatewayIPAddressInformation>()
  fullname.vb: System.Linq.Enumerable.DefaultIfEmpty(Of System.Net.NetworkInformation.GatewayIPAddressInformation)()
  name.vb: DefaultIfEmpty(Of GatewayIPAddressInformation)()
  spec.csharp:
  - uid: System.Linq.Enumerable.DefaultIfEmpty``1
    name: DefaultIfEmpty<GatewayIPAddressInformation>
    fullName: System.Linq.Enumerable.DefaultIfEmpty<System.Net.NetworkInformation.GatewayIPAddressInformation>
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Linq.Enumerable.DefaultIfEmpty``1
    name: DefaultIfEmpty(Of GatewayIPAddressInformation)
    fullName: System.Linq.Enumerable.DefaultIfEmpty(Of System.Net.NetworkInformation.GatewayIPAddressInformation)
  - name: (
    fullName: (
  - name: )
    fullName: )
  nameWithType: Enumerable.DefaultIfEmpty<GatewayIPAddressInformation>()
  nameWithType.vb: Enumerable.DefaultIfEmpty(Of GatewayIPAddressInformation)()
  commentId: M:System.Linq.Enumerable.DefaultIfEmpty``1(System.Collections.Generic.IEnumerable{``0})
- uid: System.Collections.Generic.IEnumerable{System.Net.NetworkInformation.GatewayIPAddressInformation}.System.Linq.Enumerable.DefaultIfEmpty``1(System.Net.NetworkInformation.GatewayIPAddressInformation)
  parent: System.Linq.Enumerable
  definition: System.Linq.Enumerable.DefaultIfEmpty``1(System.Collections.Generic.IEnumerable{``0},``0)
  name: DefaultIfEmpty<GatewayIPAddressInformation>(GatewayIPAddressInformation)
  fullName: System.Linq.Enumerable.DefaultIfEmpty<System.Net.NetworkInformation.GatewayIPAddressInformation>(System.Net.NetworkInformation.GatewayIPAddressInformation)
  fullname.vb: System.Linq.Enumerable.DefaultIfEmpty(Of System.Net.NetworkInformation.GatewayIPAddressInformation)(System.Net.NetworkInformation.GatewayIPAddressInformation)
  name.vb: DefaultIfEmpty(Of GatewayIPAddressInformation)(GatewayIPAddressInformation)
  spec.csharp:
  - uid: System.Linq.Enumerable.DefaultIfEmpty``1(``0)
    name: DefaultIfEmpty<GatewayIPAddressInformation>
    fullName: System.Linq.Enumerable.DefaultIfEmpty<System.Net.NetworkInformation.GatewayIPAddressInformation>
  - name: (
    fullName: (
  - uid: System.Net.NetworkInformation.GatewayIPAddressInformation
    name: GatewayIPAddressInformation
    fullName: System.Net.NetworkInformation.GatewayIPAddressInformation
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Linq.Enumerable.DefaultIfEmpty``1(``0)
    name: DefaultIfEmpty(Of GatewayIPAddressInformation)
    fullName: System.Linq.Enumerable.DefaultIfEmpty(Of System.Net.NetworkInformation.GatewayIPAddressInformation)
  - name: (
    fullName: (
  - uid: System.Net.NetworkInformation.GatewayIPAddressInformation
    name: GatewayIPAddressInformation
    fullName: System.Net.NetworkInformation.GatewayIPAddressInformation
  - name: )
    fullName: )
  nameWithType: Enumerable.DefaultIfEmpty<GatewayIPAddressInformation>(GatewayIPAddressInformation)
  nameWithType.vb: Enumerable.DefaultIfEmpty(Of GatewayIPAddressInformation)(GatewayIPAddressInformation)
  commentId: M:System.Linq.Enumerable.DefaultIfEmpty``1(System.Collections.Generic.IEnumerable{``0},``0)
- uid: System.Collections.Generic.IEnumerable{System.Net.NetworkInformation.GatewayIPAddressInformation}.System.Linq.Enumerable.Distinct``1
  parent: System.Linq.Enumerable
  definition: System.Linq.Enumerable.Distinct``1(System.Collections.Generic.IEnumerable{``0})
  name: Distinct<GatewayIPAddressInformation>()
  fullName: System.Linq.Enumerable.Distinct<System.Net.NetworkInformation.GatewayIPAddressInformation>()
  fullname.vb: System.Linq.Enumerable.Distinct(Of System.Net.NetworkInformation.GatewayIPAddressInformation)()
  name.vb: Distinct(Of GatewayIPAddressInformation)()
  spec.csharp:
  - uid: System.Linq.Enumerable.Distinct``1
    name: Distinct<GatewayIPAddressInformation>
    fullName: System.Linq.Enumerable.Distinct<System.Net.NetworkInformation.GatewayIPAddressInformation>
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Linq.Enumerable.Distinct``1
    name: Distinct(Of GatewayIPAddressInformation)
    fullName: System.Linq.Enumerable.Distinct(Of System.Net.NetworkInformation.GatewayIPAddressInformation)
  - name: (
    fullName: (
  - name: )
    fullName: )
  nameWithType: Enumerable.Distinct<GatewayIPAddressInformation>()
  nameWithType.vb: Enumerable.Distinct(Of GatewayIPAddressInformation)()
  commentId: M:System.Linq.Enumerable.Distinct``1(System.Collections.Generic.IEnumerable{``0})
- uid: System.Collections.Generic.IEnumerable{System.Net.NetworkInformation.GatewayIPAddressInformation}.System.Linq.Enumerable.Distinct``1(System.Collections.Generic.IEqualityComparer{System.Net.NetworkInformation.GatewayIPAddressInformation})
  parent: System.Linq.Enumerable
  definition: System.Linq.Enumerable.Distinct``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEqualityComparer{``0})
  name: Distinct<GatewayIPAddressInformation>(IEqualityComparer<GatewayIPAddressInformation>)
  fullName: System.Linq.Enumerable.Distinct<System.Net.NetworkInformation.GatewayIPAddressInformation>(System.Collections.Generic.IEqualityComparer<System.Net.NetworkInformation.GatewayIPAddressInformation>)
  fullname.vb: System.Linq.Enumerable.Distinct(Of System.Net.NetworkInformation.GatewayIPAddressInformation)(System.Collections.Generic.IEqualityComparer(Of System.Net.NetworkInformation.GatewayIPAddressInformation))
  name.vb: Distinct(Of GatewayIPAddressInformation)(IEqualityComparer(Of GatewayIPAddressInformation))
  spec.csharp:
  - uid: System.Linq.Enumerable.Distinct``1(System.Collections.Generic.IEqualityComparer{``0})
    name: Distinct<GatewayIPAddressInformation>
    fullName: System.Linq.Enumerable.Distinct<System.Net.NetworkInformation.GatewayIPAddressInformation>
  - name: (
    fullName: (
  - uid: System.Collections.Generic.IEqualityComparer`1
    name: IEqualityComparer
    fullName: System.Collections.Generic.IEqualityComparer
    isExternal: true
  - name: <
    fullName: <
  - uid: System.Net.NetworkInformation.GatewayIPAddressInformation
    name: GatewayIPAddressInformation
    fullName: System.Net.NetworkInformation.GatewayIPAddressInformation
  - name: '>'
    fullName: '>'
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Linq.Enumerable.Distinct``1(System.Collections.Generic.IEqualityComparer{``0})
    name: Distinct(Of GatewayIPAddressInformation)
    fullName: System.Linq.Enumerable.Distinct(Of System.Net.NetworkInformation.GatewayIPAddressInformation)
  - name: (
    fullName: (
  - uid: System.Collections.Generic.IEqualityComparer`1
    name: IEqualityComparer
    fullName: System.Collections.Generic.IEqualityComparer
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - uid: System.Net.NetworkInformation.GatewayIPAddressInformation
    name: GatewayIPAddressInformation
    fullName: System.Net.NetworkInformation.GatewayIPAddressInformation
  - name: )
    fullName: )
  - name: )
    fullName: )
  nameWithType: Enumerable.Distinct<GatewayIPAddressInformation>(IEqualityComparer<GatewayIPAddressInformation>)
  nameWithType.vb: Enumerable.Distinct(Of GatewayIPAddressInformation)(IEqualityComparer(Of GatewayIPAddressInformation))
  commentId: M:System.Linq.Enumerable.Distinct``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEqualityComparer{``0})
- uid: System.Collections.Generic.IEnumerable{System.Net.NetworkInformation.GatewayIPAddressInformation}.System.Linq.Enumerable.ElementAt``1(System.Int32)
  parent: System.Linq.Enumerable
  definition: System.Linq.Enumerable.ElementAt``1(System.Collections.Generic.IEnumerable{``0},System.Int32)
  name: ElementAt<GatewayIPAddressInformation>(Int32)
  fullName: System.Linq.Enumerable.ElementAt<System.Net.NetworkInformation.GatewayIPAddressInformation>(System.Int32)
  fullname.vb: System.Linq.Enumerable.ElementAt(Of System.Net.NetworkInformation.GatewayIPAddressInformation)(System.Int32)
  name.vb: ElementAt(Of GatewayIPAddressInformation)(Int32)
  spec.csharp:
  - uid: System.Linq.Enumerable.ElementAt``1(System.Int32)
    name: ElementAt<GatewayIPAddressInformation>
    fullName: System.Linq.Enumerable.ElementAt<System.Net.NetworkInformation.GatewayIPAddressInformation>
  - name: (
    fullName: (
  - uid: System.Int32
    name: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Linq.Enumerable.ElementAt``1(System.Int32)
    name: ElementAt(Of GatewayIPAddressInformation)
    fullName: System.Linq.Enumerable.ElementAt(Of System.Net.NetworkInformation.GatewayIPAddressInformation)
  - name: (
    fullName: (
  - uid: System.Int32
    name: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    fullName: )
  nameWithType: Enumerable.ElementAt<GatewayIPAddressInformation>(Int32)
  nameWithType.vb: Enumerable.ElementAt(Of GatewayIPAddressInformation)(Int32)
  commentId: M:System.Linq.Enumerable.ElementAt``1(System.Collections.Generic.IEnumerable{``0},System.Int32)
- uid: System.Collections.Generic.IEnumerable{System.Net.NetworkInformation.GatewayIPAddressInformation}.System.Linq.Enumerable.ElementAtOrDefault``1(System.Int32)
  parent: System.Linq.Enumerable
  definition: System.Linq.Enumerable.ElementAtOrDefault``1(System.Collections.Generic.IEnumerable{``0},System.Int32)
  name: ElementAtOrDefault<GatewayIPAddressInformation>(Int32)
  fullName: System.Linq.Enumerable.ElementAtOrDefault<System.Net.NetworkInformation.GatewayIPAddressInformation>(System.Int32)
  fullname.vb: System.Linq.Enumerable.ElementAtOrDefault(Of System.Net.NetworkInformation.GatewayIPAddressInformation)(System.Int32)
  name.vb: ElementAtOrDefault(Of GatewayIPAddressInformation)(Int32)
  spec.csharp:
  - uid: System.Linq.Enumerable.ElementAtOrDefault``1(System.Int32)
    name: ElementAtOrDefault<GatewayIPAddressInformation>
    fullName: System.Linq.Enumerable.ElementAtOrDefault<System.Net.NetworkInformation.GatewayIPAddressInformation>
  - name: (
    fullName: (
  - uid: System.Int32
    name: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Linq.Enumerable.ElementAtOrDefault``1(System.Int32)
    name: ElementAtOrDefault(Of GatewayIPAddressInformation)
    fullName: System.Linq.Enumerable.ElementAtOrDefault(Of System.Net.NetworkInformation.GatewayIPAddressInformation)
  - name: (
    fullName: (
  - uid: System.Int32
    name: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    fullName: )
  nameWithType: Enumerable.ElementAtOrDefault<GatewayIPAddressInformation>(Int32)
  nameWithType.vb: Enumerable.ElementAtOrDefault(Of GatewayIPAddressInformation)(Int32)
  commentId: M:System.Linq.Enumerable.ElementAtOrDefault``1(System.Collections.Generic.IEnumerable{``0},System.Int32)
- uid: System.Collections.Generic.IEnumerable{System.Net.NetworkInformation.GatewayIPAddressInformation}.System.Linq.Enumerable.Except``1(System.Collections.Generic.IEnumerable{System.Net.NetworkInformation.GatewayIPAddressInformation})
  parent: System.Linq.Enumerable
  definition: System.Linq.Enumerable.Except``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0})
  name: Except<GatewayIPAddressInformation>(IEnumerable<GatewayIPAddressInformation>)
  fullName: System.Linq.Enumerable.Except<System.Net.NetworkInformation.GatewayIPAddressInformation>(System.Collections.Generic.IEnumerable<System.Net.NetworkInformation.GatewayIPAddressInformation>)
  fullname.vb: System.Linq.Enumerable.Except(Of System.Net.NetworkInformation.GatewayIPAddressInformation)(System.Collections.Generic.IEnumerable(Of System.Net.NetworkInformation.GatewayIPAddressInformation))
  name.vb: Except(Of GatewayIPAddressInformation)(IEnumerable(Of GatewayIPAddressInformation))
  spec.csharp:
  - uid: System.Linq.Enumerable.Except``1(System.Collections.Generic.IEnumerable{``0})
    name: Except<GatewayIPAddressInformation>
    fullName: System.Linq.Enumerable.Except<System.Net.NetworkInformation.GatewayIPAddressInformation>
  - name: (
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    fullName: <
  - uid: System.Net.NetworkInformation.GatewayIPAddressInformation
    name: GatewayIPAddressInformation
    fullName: System.Net.NetworkInformation.GatewayIPAddressInformation
  - name: '>'
    fullName: '>'
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Linq.Enumerable.Except``1(System.Collections.Generic.IEnumerable{``0})
    name: Except(Of GatewayIPAddressInformation)
    fullName: System.Linq.Enumerable.Except(Of System.Net.NetworkInformation.GatewayIPAddressInformation)
  - name: (
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - uid: System.Net.NetworkInformation.GatewayIPAddressInformation
    name: GatewayIPAddressInformation
    fullName: System.Net.NetworkInformation.GatewayIPAddressInformation
  - name: )
    fullName: )
  - name: )
    fullName: )
  nameWithType: Enumerable.Except<GatewayIPAddressInformation>(IEnumerable<GatewayIPAddressInformation>)
  nameWithType.vb: Enumerable.Except(Of GatewayIPAddressInformation)(IEnumerable(Of GatewayIPAddressInformation))
  commentId: M:System.Linq.Enumerable.Except``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0})
- uid: System.Collections.Generic.IEnumerable{System.Net.NetworkInformation.GatewayIPAddressInformation}.System.Linq.Enumerable.Except``1(System.Collections.Generic.IEnumerable{System.Net.NetworkInformation.GatewayIPAddressInformation},System.Collections.Generic.IEqualityComparer{System.Net.NetworkInformation.GatewayIPAddressInformation})
  parent: System.Linq.Enumerable
  definition: System.Linq.Enumerable.Except``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEqualityComparer{``0})
  name: Except<GatewayIPAddressInformation>(IEnumerable<GatewayIPAddressInformation>, IEqualityComparer<GatewayIPAddressInformation>)
  fullName: System.Linq.Enumerable.Except<System.Net.NetworkInformation.GatewayIPAddressInformation>(System.Collections.Generic.IEnumerable<System.Net.NetworkInformation.GatewayIPAddressInformation>, System.Collections.Generic.IEqualityComparer<System.Net.NetworkInformation.GatewayIPAddressInformation>)
  fullname.vb: System.Linq.Enumerable.Except(Of System.Net.NetworkInformation.GatewayIPAddressInformation)(System.Collections.Generic.IEnumerable(Of System.Net.NetworkInformation.GatewayIPAddressInformation), System.Collections.Generic.IEqualityComparer(Of System.Net.NetworkInformation.GatewayIPAddressInformation))
  name.vb: Except(Of GatewayIPAddressInformation)(IEnumerable(Of GatewayIPAddressInformation), IEqualityComparer(Of GatewayIPAddressInformation))
  spec.csharp:
  - uid: System.Linq.Enumerable.Except``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEqualityComparer{``0})
    name: Except<GatewayIPAddressInformation>
    fullName: System.Linq.Enumerable.Except<System.Net.NetworkInformation.GatewayIPAddressInformation>
  - name: (
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    fullName: <
  - uid: System.Net.NetworkInformation.GatewayIPAddressInformation
    name: GatewayIPAddressInformation
    fullName: System.Net.NetworkInformation.GatewayIPAddressInformation
  - name: '>'
    fullName: '>'
  - name: ', '
    fullName: ', '
  - uid: System.Collections.Generic.IEqualityComparer`1
    name: IEqualityComparer
    fullName: System.Collections.Generic.IEqualityComparer
    isExternal: true
  - name: <
    fullName: <
  - uid: System.Net.NetworkInformation.GatewayIPAddressInformation
    name: GatewayIPAddressInformation
    fullName: System.Net.NetworkInformation.GatewayIPAddressInformation
  - name: '>'
    fullName: '>'
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Linq.Enumerable.Except``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEqualityComparer{``0})
    name: Except(Of GatewayIPAddressInformation)
    fullName: System.Linq.Enumerable.Except(Of System.Net.NetworkInformation.GatewayIPAddressInformation)
  - name: (
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - uid: System.Net.NetworkInformation.GatewayIPAddressInformation
    name: GatewayIPAddressInformation
    fullName: System.Net.NetworkInformation.GatewayIPAddressInformation
  - name: )
    fullName: )
  - name: ', '
    fullName: ', '
  - uid: System.Collections.Generic.IEqualityComparer`1
    name: IEqualityComparer
    fullName: System.Collections.Generic.IEqualityComparer
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - uid: System.Net.NetworkInformation.GatewayIPAddressInformation
    name: GatewayIPAddressInformation
    fullName: System.Net.NetworkInformation.GatewayIPAddressInformation
  - name: )
    fullName: )
  - name: )
    fullName: )
  nameWithType: Enumerable.Except<GatewayIPAddressInformation>(IEnumerable<GatewayIPAddressInformation>, IEqualityComparer<GatewayIPAddressInformation>)
  nameWithType.vb: Enumerable.Except(Of GatewayIPAddressInformation)(IEnumerable(Of GatewayIPAddressInformation), IEqualityComparer(Of GatewayIPAddressInformation))
  commentId: M:System.Linq.Enumerable.Except``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEqualityComparer{``0})
- uid: System.Collections.Generic.IEnumerable{System.Net.NetworkInformation.GatewayIPAddressInformation}.System.Linq.Enumerable.First``1
  parent: System.Linq.Enumerable
  definition: System.Linq.Enumerable.First``1(System.Collections.Generic.IEnumerable{``0})
  name: First<GatewayIPAddressInformation>()
  fullName: System.Linq.Enumerable.First<System.Net.NetworkInformation.GatewayIPAddressInformation>()
  fullname.vb: System.Linq.Enumerable.First(Of System.Net.NetworkInformation.GatewayIPAddressInformation)()
  name.vb: First(Of GatewayIPAddressInformation)()
  spec.csharp:
  - uid: System.Linq.Enumerable.First``1
    name: First<GatewayIPAddressInformation>
    fullName: System.Linq.Enumerable.First<System.Net.NetworkInformation.GatewayIPAddressInformation>
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Linq.Enumerable.First``1
    name: First(Of GatewayIPAddressInformation)
    fullName: System.Linq.Enumerable.First(Of System.Net.NetworkInformation.GatewayIPAddressInformation)
  - name: (
    fullName: (
  - name: )
    fullName: )
  nameWithType: Enumerable.First<GatewayIPAddressInformation>()
  nameWithType.vb: Enumerable.First(Of GatewayIPAddressInformation)()
  commentId: M:System.Linq.Enumerable.First``1(System.Collections.Generic.IEnumerable{``0})
- uid: System.Collections.Generic.IEnumerable{System.Net.NetworkInformation.GatewayIPAddressInformation}.System.Linq.Enumerable.First``1(System.Func{System.Net.NetworkInformation.GatewayIPAddressInformation,System.Boolean})
  parent: System.Linq.Enumerable
  definition: System.Linq.Enumerable.First``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})
  name: First<GatewayIPAddressInformation>(Func<GatewayIPAddressInformation, Boolean>)
  fullName: System.Linq.Enumerable.First<System.Net.NetworkInformation.GatewayIPAddressInformation>(System.Func<System.Net.NetworkInformation.GatewayIPAddressInformation, System.Boolean>)
  fullname.vb: System.Linq.Enumerable.First(Of System.Net.NetworkInformation.GatewayIPAddressInformation)(System.Func(Of System.Net.NetworkInformation.GatewayIPAddressInformation, System.Boolean))
  name.vb: First(Of GatewayIPAddressInformation)(Func(Of GatewayIPAddressInformation, Boolean))
  spec.csharp:
  - uid: System.Linq.Enumerable.First``1(System.Func{``0,System.Boolean})
    name: First<GatewayIPAddressInformation>
    fullName: System.Linq.Enumerable.First<System.Net.NetworkInformation.GatewayIPAddressInformation>
  - name: (
    fullName: (
  - uid: System.Func`2
    name: Func
    fullName: System.Func
    isExternal: true
  - name: <
    fullName: <
  - uid: System.Net.NetworkInformation.GatewayIPAddressInformation
    name: GatewayIPAddressInformation
    fullName: System.Net.NetworkInformation.GatewayIPAddressInformation
  - name: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: '>'
    fullName: '>'
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Linq.Enumerable.First``1(System.Func{``0,System.Boolean})
    name: First(Of GatewayIPAddressInformation)
    fullName: System.Linq.Enumerable.First(Of System.Net.NetworkInformation.GatewayIPAddressInformation)
  - name: (
    fullName: (
  - uid: System.Func`2
    name: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - uid: System.Net.NetworkInformation.GatewayIPAddressInformation
    name: GatewayIPAddressInformation
    fullName: System.Net.NetworkInformation.GatewayIPAddressInformation
  - name: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    fullName: )
  - name: )
    fullName: )
  nameWithType: Enumerable.First<GatewayIPAddressInformation>(Func<GatewayIPAddressInformation, Boolean>)
  nameWithType.vb: Enumerable.First(Of GatewayIPAddressInformation)(Func(Of GatewayIPAddressInformation, Boolean))
  commentId: M:System.Linq.Enumerable.First``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})
- uid: System.Collections.Generic.IEnumerable{System.Net.NetworkInformation.GatewayIPAddressInformation}.System.Linq.Enumerable.FirstOrDefault``1
  parent: System.Linq.Enumerable
  definition: System.Linq.Enumerable.FirstOrDefault``1(System.Collections.Generic.IEnumerable{``0})
  name: FirstOrDefault<GatewayIPAddressInformation>()
  fullName: System.Linq.Enumerable.FirstOrDefault<System.Net.NetworkInformation.GatewayIPAddressInformation>()
  fullname.vb: System.Linq.Enumerable.FirstOrDefault(Of System.Net.NetworkInformation.GatewayIPAddressInformation)()
  name.vb: FirstOrDefault(Of GatewayIPAddressInformation)()
  spec.csharp:
  - uid: System.Linq.Enumerable.FirstOrDefault``1
    name: FirstOrDefault<GatewayIPAddressInformation>
    fullName: System.Linq.Enumerable.FirstOrDefault<System.Net.NetworkInformation.GatewayIPAddressInformation>
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Linq.Enumerable.FirstOrDefault``1
    name: FirstOrDefault(Of GatewayIPAddressInformation)
    fullName: System.Linq.Enumerable.FirstOrDefault(Of System.Net.NetworkInformation.GatewayIPAddressInformation)
  - name: (
    fullName: (
  - name: )
    fullName: )
  nameWithType: Enumerable.FirstOrDefault<GatewayIPAddressInformation>()
  nameWithType.vb: Enumerable.FirstOrDefault(Of GatewayIPAddressInformation)()
  commentId: M:System.Linq.Enumerable.FirstOrDefault``1(System.Collections.Generic.IEnumerable{``0})
- uid: System.Collections.Generic.IEnumerable{System.Net.NetworkInformation.GatewayIPAddressInformation}.System.Linq.Enumerable.FirstOrDefault``1(System.Func{System.Net.NetworkInformation.GatewayIPAddressInformation,System.Boolean})
  parent: System.Linq.Enumerable
  definition: System.Linq.Enumerable.FirstOrDefault``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})
  name: FirstOrDefault<GatewayIPAddressInformation>(Func<GatewayIPAddressInformation, Boolean>)
  fullName: System.Linq.Enumerable.FirstOrDefault<System.Net.NetworkInformation.GatewayIPAddressInformation>(System.Func<System.Net.NetworkInformation.GatewayIPAddressInformation, System.Boolean>)
  fullname.vb: System.Linq.Enumerable.FirstOrDefault(Of System.Net.NetworkInformation.GatewayIPAddressInformation)(System.Func(Of System.Net.NetworkInformation.GatewayIPAddressInformation, System.Boolean))
  name.vb: FirstOrDefault(Of GatewayIPAddressInformation)(Func(Of GatewayIPAddressInformation, Boolean))
  spec.csharp:
  - uid: System.Linq.Enumerable.FirstOrDefault``1(System.Func{``0,System.Boolean})
    name: FirstOrDefault<GatewayIPAddressInformation>
    fullName: System.Linq.Enumerable.FirstOrDefault<System.Net.NetworkInformation.GatewayIPAddressInformation>
  - name: (
    fullName: (
  - uid: System.Func`2
    name: Func
    fullName: System.Func
    isExternal: true
  - name: <
    fullName: <
  - uid: System.Net.NetworkInformation.GatewayIPAddressInformation
    name: GatewayIPAddressInformation
    fullName: System.Net.NetworkInformation.GatewayIPAddressInformation
  - name: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: '>'
    fullName: '>'
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Linq.Enumerable.FirstOrDefault``1(System.Func{``0,System.Boolean})
    name: FirstOrDefault(Of GatewayIPAddressInformation)
    fullName: System.Linq.Enumerable.FirstOrDefault(Of System.Net.NetworkInformation.GatewayIPAddressInformation)
  - name: (
    fullName: (
  - uid: System.Func`2
    name: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - uid: System.Net.NetworkInformation.GatewayIPAddressInformation
    name: GatewayIPAddressInformation
    fullName: System.Net.NetworkInformation.GatewayIPAddressInformation
  - name: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    fullName: )
  - name: )
    fullName: )
  nameWithType: Enumerable.FirstOrDefault<GatewayIPAddressInformation>(Func<GatewayIPAddressInformation, Boolean>)
  nameWithType.vb: Enumerable.FirstOrDefault(Of GatewayIPAddressInformation)(Func(Of GatewayIPAddressInformation, Boolean))
  commentId: M:System.Linq.Enumerable.FirstOrDefault``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})
- uid: System.Collections.Generic.IEnumerable{System.Net.NetworkInformation.GatewayIPAddressInformation}.System.Linq.Enumerable.GroupBy``2(System.Func{System.Net.NetworkInformation.GatewayIPAddressInformation,{TKey}})
  parent: System.Linq.Enumerable
  definition: System.Linq.Enumerable.GroupBy``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})
  name: GroupBy<GatewayIPAddressInformation, TKey>(Func<GatewayIPAddressInformation, TKey>)
  fullName: System.Linq.Enumerable.GroupBy<System.Net.NetworkInformation.GatewayIPAddressInformation, TKey>(System.Func<System.Net.NetworkInformation.GatewayIPAddressInformation, TKey>)
  fullname.vb: System.Linq.Enumerable.GroupBy(Of System.Net.NetworkInformation.GatewayIPAddressInformation, TKey)(System.Func(Of System.Net.NetworkInformation.GatewayIPAddressInformation, TKey))
  name.vb: GroupBy(Of GatewayIPAddressInformation, TKey)(Func(Of GatewayIPAddressInformation, TKey))
  spec.csharp:
  - uid: System.Linq.Enumerable.GroupBy``2(System.Func{``0,``1})
    name: GroupBy<GatewayIPAddressInformation, TKey>
    fullName: System.Linq.Enumerable.GroupBy<System.Net.NetworkInformation.GatewayIPAddressInformation, TKey>
  - name: (
    fullName: (
  - uid: System.Func`2
    name: Func
    fullName: System.Func
    isExternal: true
  - name: <
    fullName: <
  - uid: System.Net.NetworkInformation.GatewayIPAddressInformation
    name: GatewayIPAddressInformation
    fullName: System.Net.NetworkInformation.GatewayIPAddressInformation
  - name: ', '
    fullName: ', '
  - name: TKey
    fullName: TKey
  - name: '>'
    fullName: '>'
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Linq.Enumerable.GroupBy``2(System.Func{``0,``1})
    name: GroupBy(Of GatewayIPAddressInformation, TKey)
    fullName: System.Linq.Enumerable.GroupBy(Of System.Net.NetworkInformation.GatewayIPAddressInformation, TKey)
  - name: (
    fullName: (
  - uid: System.Func`2
    name: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - uid: System.Net.NetworkInformation.GatewayIPAddressInformation
    name: GatewayIPAddressInformation
    fullName: System.Net.NetworkInformation.GatewayIPAddressInformation
  - name: ', '
    fullName: ', '
  - name: TKey
    fullName: TKey
  - name: )
    fullName: )
  - name: )
    fullName: )
  nameWithType: Enumerable.GroupBy<GatewayIPAddressInformation, TKey>(Func<GatewayIPAddressInformation, TKey>)
  nameWithType.vb: Enumerable.GroupBy(Of GatewayIPAddressInformation, TKey)(Func(Of GatewayIPAddressInformation, TKey))
  commentId: M:System.Linq.Enumerable.GroupBy``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})
- uid: System.Collections.Generic.IEnumerable{System.Net.NetworkInformation.GatewayIPAddressInformation}.System.Linq.Enumerable.GroupBy``2(System.Func{System.Net.NetworkInformation.GatewayIPAddressInformation,{TKey}},System.Collections.Generic.IEqualityComparer{{TKey}})
  parent: System.Linq.Enumerable
  definition: System.Linq.Enumerable.GroupBy``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IEqualityComparer{``1})
  name: GroupBy<GatewayIPAddressInformation, TKey>(Func<GatewayIPAddressInformation, TKey>, IEqualityComparer<TKey>)
  fullName: System.Linq.Enumerable.GroupBy<System.Net.NetworkInformation.GatewayIPAddressInformation, TKey>(System.Func<System.Net.NetworkInformation.GatewayIPAddressInformation, TKey>, System.Collections.Generic.IEqualityComparer<TKey>)
  fullname.vb: System.Linq.Enumerable.GroupBy(Of System.Net.NetworkInformation.GatewayIPAddressInformation, TKey)(System.Func(Of System.Net.NetworkInformation.GatewayIPAddressInformation, TKey), System.Collections.Generic.IEqualityComparer(Of TKey))
  name.vb: GroupBy(Of GatewayIPAddressInformation, TKey)(Func(Of GatewayIPAddressInformation, TKey), IEqualityComparer(Of TKey))
  spec.csharp:
  - uid: System.Linq.Enumerable.GroupBy``2(System.Func{``0,``1},System.Collections.Generic.IEqualityComparer{``1})
    name: GroupBy<GatewayIPAddressInformation, TKey>
    fullName: System.Linq.Enumerable.GroupBy<System.Net.NetworkInformation.GatewayIPAddressInformation, TKey>
  - name: (
    fullName: (
  - uid: System.Func`2
    name: Func
    fullName: System.Func
    isExternal: true
  - name: <
    fullName: <
  - uid: System.Net.NetworkInformation.GatewayIPAddressInformation
    name: GatewayIPAddressInformation
    fullName: System.Net.NetworkInformation.GatewayIPAddressInformation
  - name: ', '
    fullName: ', '
  - name: TKey
    fullName: TKey
  - name: '>'
    fullName: '>'
  - name: ', '
    fullName: ', '
  - uid: System.Collections.Generic.IEqualityComparer`1
    name: IEqualityComparer
    fullName: System.Collections.Generic.IEqualityComparer
    isExternal: true
  - name: <
    fullName: <
  - name: TKey
    fullName: TKey
  - name: '>'
    fullName: '>'
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Linq.Enumerable.GroupBy``2(System.Func{``0,``1},System.Collections.Generic.IEqualityComparer{``1})
    name: GroupBy(Of GatewayIPAddressInformation, TKey)
    fullName: System.Linq.Enumerable.GroupBy(Of System.Net.NetworkInformation.GatewayIPAddressInformation, TKey)
  - name: (
    fullName: (
  - uid: System.Func`2
    name: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - uid: System.Net.NetworkInformation.GatewayIPAddressInformation
    name: GatewayIPAddressInformation
    fullName: System.Net.NetworkInformation.GatewayIPAddressInformation
  - name: ', '
    fullName: ', '
  - name: TKey
    fullName: TKey
  - name: )
    fullName: )
  - name: ', '
    fullName: ', '
  - uid: System.Collections.Generic.IEqualityComparer`1
    name: IEqualityComparer
    fullName: System.Collections.Generic.IEqualityComparer
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - name: TKey
    fullName: TKey
  - name: )
    fullName: )
  - name: )
    fullName: )
  nameWithType: Enumerable.GroupBy<GatewayIPAddressInformation, TKey>(Func<GatewayIPAddressInformation, TKey>, IEqualityComparer<TKey>)
  nameWithType.vb: Enumerable.GroupBy(Of GatewayIPAddressInformation, TKey)(Func(Of GatewayIPAddressInformation, TKey), IEqualityComparer(Of TKey))
  commentId: M:System.Linq.Enumerable.GroupBy``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IEqualityComparer{``1})
- uid: System.Collections.Generic.IEnumerable{System.Net.NetworkInformation.GatewayIPAddressInformation}.System.Linq.Enumerable.GroupBy``3(System.Func{System.Net.NetworkInformation.GatewayIPAddressInformation,{TKey}},System.Func{System.Net.NetworkInformation.GatewayIPAddressInformation,{TElement}})
  parent: System.Linq.Enumerable
  definition: System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2})
  name: GroupBy<GatewayIPAddressInformation, TKey, TElement>(Func<GatewayIPAddressInformation, TKey>, Func<GatewayIPAddressInformation, TElement>)
  fullName: System.Linq.Enumerable.GroupBy<System.Net.NetworkInformation.GatewayIPAddressInformation, TKey, TElement>(System.Func<System.Net.NetworkInformation.GatewayIPAddressInformation, TKey>, System.Func<System.Net.NetworkInformation.GatewayIPAddressInformation, TElement>)
  fullname.vb: System.Linq.Enumerable.GroupBy(Of System.Net.NetworkInformation.GatewayIPAddressInformation, TKey, TElement)(System.Func(Of System.Net.NetworkInformation.GatewayIPAddressInformation, TKey), System.Func(Of System.Net.NetworkInformation.GatewayIPAddressInformation, TElement))
  name.vb: GroupBy(Of GatewayIPAddressInformation, TKey, TElement)(Func(Of GatewayIPAddressInformation, TKey), Func(Of GatewayIPAddressInformation, TElement))
  spec.csharp:
  - uid: System.Linq.Enumerable.GroupBy``3(System.Func{``0,``1},System.Func{``0,``2})
    name: GroupBy<GatewayIPAddressInformation, TKey, TElement>
    fullName: System.Linq.Enumerable.GroupBy<System.Net.NetworkInformation.GatewayIPAddressInformation, TKey, TElement>
  - name: (
    fullName: (
  - uid: System.Func`2
    name: Func
    fullName: System.Func
    isExternal: true
  - name: <
    fullName: <
  - uid: System.Net.NetworkInformation.GatewayIPAddressInformation
    name: GatewayIPAddressInformation
    fullName: System.Net.NetworkInformation.GatewayIPAddressInformation
  - name: ', '
    fullName: ', '
  - name: TKey
    fullName: TKey
  - name: '>'
    fullName: '>'
  - name: ', '
    fullName: ', '
  - uid: System.Func`2
    name: Func
    fullName: System.Func
    isExternal: true
  - name: <
    fullName: <
  - uid: System.Net.NetworkInformation.GatewayIPAddressInformation
    name: GatewayIPAddressInformation
    fullName: System.Net.NetworkInformation.GatewayIPAddressInformation
  - name: ', '
    fullName: ', '
  - name: TElement
    fullName: TElement
  - name: '>'
    fullName: '>'
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Linq.Enumerable.GroupBy``3(System.Func{``0,``1},System.Func{``0,``2})
    name: GroupBy(Of GatewayIPAddressInformation, TKey, TElement)
    fullName: System.Linq.Enumerable.GroupBy(Of System.Net.NetworkInformation.GatewayIPAddressInformation, TKey, TElement)
  - name: (
    fullName: (
  - uid: System.Func`2
    name: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - uid: System.Net.NetworkInformation.GatewayIPAddressInformation
    name: GatewayIPAddressInformation
    fullName: System.Net.NetworkInformation.GatewayIPAddressInformation
  - name: ', '
    fullName: ', '
  - name: TKey
    fullName: TKey
  - name: )
    fullName: )
  - name: ', '
    fullName: ', '
  - uid: System.Func`2
    name: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - uid: System.Net.NetworkInformation.GatewayIPAddressInformation
    name: GatewayIPAddressInformation
    fullName: System.Net.NetworkInformation.GatewayIPAddressInformation
  - name: ', '
    fullName: ', '
  - name: TElement
    fullName: TElement
  - name: )
    fullName: )
  - name: )
    fullName: )
  nameWithType: Enumerable.GroupBy<GatewayIPAddressInformation, TKey, TElement>(Func<GatewayIPAddressInformation, TKey>, Func<GatewayIPAddressInformation, TElement>)
  nameWithType.vb: Enumerable.GroupBy(Of GatewayIPAddressInformation, TKey, TElement)(Func(Of GatewayIPAddressInformation, TKey), Func(Of GatewayIPAddressInformation, TElement))
  commentId: M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2})
- uid: System.Collections.Generic.IEnumerable{System.Net.NetworkInformation.GatewayIPAddressInformation}.System.Linq.Enumerable.GroupBy``3(System.Func{System.Net.NetworkInformation.GatewayIPAddressInformation,{TKey}},System.Func{System.Net.NetworkInformation.GatewayIPAddressInformation,{TElement}},System.Collections.Generic.IEqualityComparer{{TKey}})
  parent: System.Linq.Enumerable
  definition: System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})
  name: GroupBy<GatewayIPAddressInformation, TKey, TElement>(Func<GatewayIPAddressInformation, TKey>, Func<GatewayIPAddressInformation, TElement>, IEqualityComparer<TKey>)
  fullName: System.Linq.Enumerable.GroupBy<System.Net.NetworkInformation.GatewayIPAddressInformation, TKey, TElement>(System.Func<System.Net.NetworkInformation.GatewayIPAddressInformation, TKey>, System.Func<System.Net.NetworkInformation.GatewayIPAddressInformation, TElement>, System.Collections.Generic.IEqualityComparer<TKey>)
  fullname.vb: System.Linq.Enumerable.GroupBy(Of System.Net.NetworkInformation.GatewayIPAddressInformation, TKey, TElement)(System.Func(Of System.Net.NetworkInformation.GatewayIPAddressInformation, TKey), System.Func(Of System.Net.NetworkInformation.GatewayIPAddressInformation, TElement), System.Collections.Generic.IEqualityComparer(Of TKey))
  name.vb: GroupBy(Of GatewayIPAddressInformation, TKey, TElement)(Func(Of GatewayIPAddressInformation, TKey), Func(Of GatewayIPAddressInformation, TElement), IEqualityComparer(Of TKey))
  spec.csharp:
  - uid: System.Linq.Enumerable.GroupBy``3(System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})
    name: GroupBy<GatewayIPAddressInformation, TKey, TElement>
    fullName: System.Linq.Enumerable.GroupBy<System.Net.NetworkInformation.GatewayIPAddressInformation, TKey, TElement>
  - name: (
    fullName: (
  - uid: System.Func`2
    name: Func
    fullName: System.Func
    isExternal: true
  - name: <
    fullName: <
  - uid: System.Net.NetworkInformation.GatewayIPAddressInformation
    name: GatewayIPAddressInformation
    fullName: System.Net.NetworkInformation.GatewayIPAddressInformation
  - name: ', '
    fullName: ', '
  - name: TKey
    fullName: TKey
  - name: '>'
    fullName: '>'
  - name: ', '
    fullName: ', '
  - uid: System.Func`2
    name: Func
    fullName: System.Func
    isExternal: true
  - name: <
    fullName: <
  - uid: System.Net.NetworkInformation.GatewayIPAddressInformation
    name: GatewayIPAddressInformation
    fullName: System.Net.NetworkInformation.GatewayIPAddressInformation
  - name: ', '
    fullName: ', '
  - name: TElement
    fullName: TElement
  - name: '>'
    fullName: '>'
  - name: ', '
    fullName: ', '
  - uid: System.Collections.Generic.IEqualityComparer`1
    name: IEqualityComparer
    fullName: System.Collections.Generic.IEqualityComparer
    isExternal: true
  - name: <
    fullName: <
  - name: TKey
    fullName: TKey
  - name: '>'
    fullName: '>'
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Linq.Enumerable.GroupBy``3(System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})
    name: GroupBy(Of GatewayIPAddressInformation, TKey, TElement)
    fullName: System.Linq.Enumerable.GroupBy(Of System.Net.NetworkInformation.GatewayIPAddressInformation, TKey, TElement)
  - name: (
    fullName: (
  - uid: System.Func`2
    name: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - uid: System.Net.NetworkInformation.GatewayIPAddressInformation
    name: GatewayIPAddressInformation
    fullName: System.Net.NetworkInformation.GatewayIPAddressInformation
  - name: ', '
    fullName: ', '
  - name: TKey
    fullName: TKey
  - name: )
    fullName: )
  - name: ', '
    fullName: ', '
  - uid: System.Func`2
    name: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - uid: System.Net.NetworkInformation.GatewayIPAddressInformation
    name: GatewayIPAddressInformation
    fullName: System.Net.NetworkInformation.GatewayIPAddressInformation
  - name: ', '
    fullName: ', '
  - name: TElement
    fullName: TElement
  - name: )
    fullName: )
  - name: ', '
    fullName: ', '
  - uid: System.Collections.Generic.IEqualityComparer`1
    name: IEqualityComparer
    fullName: System.Collections.Generic.IEqualityComparer
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - name: TKey
    fullName: TKey
  - name: )
    fullName: )
  - name: )
    fullName: )
  nameWithType: Enumerable.GroupBy<GatewayIPAddressInformation, TKey, TElement>(Func<GatewayIPAddressInformation, TKey>, Func<GatewayIPAddressInformation, TElement>, IEqualityComparer<TKey>)
  nameWithType.vb: Enumerable.GroupBy(Of GatewayIPAddressInformation, TKey, TElement)(Func(Of GatewayIPAddressInformation, TKey), Func(Of GatewayIPAddressInformation, TElement), IEqualityComparer(Of TKey))
  commentId: M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})
- uid: System.Collections.Generic.IEnumerable{System.Net.NetworkInformation.GatewayIPAddressInformation}.System.Linq.Enumerable.GroupBy``3(System.Func{System.Net.NetworkInformation.GatewayIPAddressInformation,{TKey}},System.Func{{TKey},System.Collections.Generic.IEnumerable{System.Net.NetworkInformation.GatewayIPAddressInformation},{TResult}})
  parent: System.Linq.Enumerable
  definition: System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``1,System.Collections.Generic.IEnumerable{``0},``2})
  name: GroupBy<GatewayIPAddressInformation, TKey, TResult>(Func<GatewayIPAddressInformation, TKey>, Func<TKey, IEnumerable<GatewayIPAddressInformation>, TResult>)
  fullName: System.Linq.Enumerable.GroupBy<System.Net.NetworkInformation.GatewayIPAddressInformation, TKey, TResult>(System.Func<System.Net.NetworkInformation.GatewayIPAddressInformation, TKey>, System.Func<TKey, System.Collections.Generic.IEnumerable<System.Net.NetworkInformation.GatewayIPAddressInformation>, TResult>)
  fullname.vb: System.Linq.Enumerable.GroupBy(Of System.Net.NetworkInformation.GatewayIPAddressInformation, TKey, TResult)(System.Func(Of System.Net.NetworkInformation.GatewayIPAddressInformation, TKey), System.Func(Of TKey, System.Collections.Generic.IEnumerable(Of System.Net.NetworkInformation.GatewayIPAddressInformation), TResult))
  name.vb: GroupBy(Of GatewayIPAddressInformation, TKey, TResult)(Func(Of GatewayIPAddressInformation, TKey), Func(Of TKey, IEnumerable(Of GatewayIPAddressInformation), TResult))
  spec.csharp:
  - uid: System.Linq.Enumerable.GroupBy``3(System.Func{``0,``1},System.Func{``1,System.Collections.Generic.IEnumerable{``0},``2})
    name: GroupBy<GatewayIPAddressInformation, TKey, TResult>
    fullName: System.Linq.Enumerable.GroupBy<System.Net.NetworkInformation.GatewayIPAddressInformation, TKey, TResult>
  - name: (
    fullName: (
  - uid: System.Func`2
    name: Func
    fullName: System.Func
    isExternal: true
  - name: <
    fullName: <
  - uid: System.Net.NetworkInformation.GatewayIPAddressInformation
    name: GatewayIPAddressInformation
    fullName: System.Net.NetworkInformation.GatewayIPAddressInformation
  - name: ', '
    fullName: ', '
  - name: TKey
    fullName: TKey
  - name: '>'
    fullName: '>'
  - name: ', '
    fullName: ', '
  - uid: System.Func`3
    name: Func
    fullName: System.Func
    isExternal: true
  - name: <
    fullName: <
  - name: TKey
    fullName: TKey
  - name: ', '
    fullName: ', '
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    fullName: <
  - uid: System.Net.NetworkInformation.GatewayIPAddressInformation
    name: GatewayIPAddressInformation
    fullName: System.Net.NetworkInformation.GatewayIPAddressInformation
  - name: '>'
    fullName: '>'
  - name: ', '
    fullName: ', '
  - name: TResult
    fullName: TResult
  - name: '>'
    fullName: '>'
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Linq.Enumerable.GroupBy``3(System.Func{``0,``1},System.Func{``1,System.Collections.Generic.IEnumerable{``0},``2})
    name: GroupBy(Of GatewayIPAddressInformation, TKey, TResult)
    fullName: System.Linq.Enumerable.GroupBy(Of System.Net.NetworkInformation.GatewayIPAddressInformation, TKey, TResult)
  - name: (
    fullName: (
  - uid: System.Func`2
    name: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - uid: System.Net.NetworkInformation.GatewayIPAddressInformation
    name: GatewayIPAddressInformation
    fullName: System.Net.NetworkInformation.GatewayIPAddressInformation
  - name: ', '
    fullName: ', '
  - name: TKey
    fullName: TKey
  - name: )
    fullName: )
  - name: ', '
    fullName: ', '
  - uid: System.Func`3
    name: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - name: TKey
    fullName: TKey
  - name: ', '
    fullName: ', '
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - uid: System.Net.NetworkInformation.GatewayIPAddressInformation
    name: GatewayIPAddressInformation
    fullName: System.Net.NetworkInformation.GatewayIPAddressInformation
  - name: )
    fullName: )
  - name: ', '
    fullName: ', '
  - name: TResult
    fullName: TResult
  - name: )
    fullName: )
  - name: )
    fullName: )
  nameWithType: Enumerable.GroupBy<GatewayIPAddressInformation, TKey, TResult>(Func<GatewayIPAddressInformation, TKey>, Func<TKey, IEnumerable<GatewayIPAddressInformation>, TResult>)
  nameWithType.vb: Enumerable.GroupBy(Of GatewayIPAddressInformation, TKey, TResult)(Func(Of GatewayIPAddressInformation, TKey), Func(Of TKey, IEnumerable(Of GatewayIPAddressInformation), TResult))
  commentId: M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``1,System.Collections.Generic.IEnumerable{``0},``2})
- uid: System.Collections.Generic.IEnumerable{System.Net.NetworkInformation.GatewayIPAddressInformation}.System.Linq.Enumerable.GroupBy``3(System.Func{System.Net.NetworkInformation.GatewayIPAddressInformation,{TKey}},System.Func{{TKey},System.Collections.Generic.IEnumerable{System.Net.NetworkInformation.GatewayIPAddressInformation},{TResult}},System.Collections.Generic.IEqualityComparer{{TKey}})
  parent: System.Linq.Enumerable
  definition: System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``1,System.Collections.Generic.IEnumerable{``0},``2},System.Collections.Generic.IEqualityComparer{``1})
  name: GroupBy<GatewayIPAddressInformation, TKey, TResult>(Func<GatewayIPAddressInformation, TKey>, Func<TKey, IEnumerable<GatewayIPAddressInformation>, TResult>, IEqualityComparer<TKey>)
  fullName: System.Linq.Enumerable.GroupBy<System.Net.NetworkInformation.GatewayIPAddressInformation, TKey, TResult>(System.Func<System.Net.NetworkInformation.GatewayIPAddressInformation, TKey>, System.Func<TKey, System.Collections.Generic.IEnumerable<System.Net.NetworkInformation.GatewayIPAddressInformation>, TResult>, System.Collections.Generic.IEqualityComparer<TKey>)
  fullname.vb: System.Linq.Enumerable.GroupBy(Of System.Net.NetworkInformation.GatewayIPAddressInformation, TKey, TResult)(System.Func(Of System.Net.NetworkInformation.GatewayIPAddressInformation, TKey), System.Func(Of TKey, System.Collections.Generic.IEnumerable(Of System.Net.NetworkInformation.GatewayIPAddressInformation), TResult), System.Collections.Generic.IEqualityComparer(Of TKey))
  name.vb: GroupBy(Of GatewayIPAddressInformation, TKey, TResult)(Func(Of GatewayIPAddressInformation, TKey), Func(Of TKey, IEnumerable(Of GatewayIPAddressInformation), TResult), IEqualityComparer(Of TKey))
  spec.csharp:
  - uid: System.Linq.Enumerable.GroupBy``3(System.Func{``0,``1},System.Func{``1,System.Collections.Generic.IEnumerable{``0},``2},System.Collections.Generic.IEqualityComparer{``1})
    name: GroupBy<GatewayIPAddressInformation, TKey, TResult>
    fullName: System.Linq.Enumerable.GroupBy<System.Net.NetworkInformation.GatewayIPAddressInformation, TKey, TResult>
  - name: (
    fullName: (
  - uid: System.Func`2
    name: Func
    fullName: System.Func
    isExternal: true
  - name: <
    fullName: <
  - uid: System.Net.NetworkInformation.GatewayIPAddressInformation
    name: GatewayIPAddressInformation
    fullName: System.Net.NetworkInformation.GatewayIPAddressInformation
  - name: ', '
    fullName: ', '
  - name: TKey
    fullName: TKey
  - name: '>'
    fullName: '>'
  - name: ', '
    fullName: ', '
  - uid: System.Func`3
    name: Func
    fullName: System.Func
    isExternal: true
  - name: <
    fullName: <
  - name: TKey
    fullName: TKey
  - name: ', '
    fullName: ', '
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    fullName: <
  - uid: System.Net.NetworkInformation.GatewayIPAddressInformation
    name: GatewayIPAddressInformation
    fullName: System.Net.NetworkInformation.GatewayIPAddressInformation
  - name: '>'
    fullName: '>'
  - name: ', '
    fullName: ', '
  - name: TResult
    fullName: TResult
  - name: '>'
    fullName: '>'
  - name: ', '
    fullName: ', '
  - uid: System.Collections.Generic.IEqualityComparer`1
    name: IEqualityComparer
    fullName: System.Collections.Generic.IEqualityComparer
    isExternal: true
  - name: <
    fullName: <
  - name: TKey
    fullName: TKey
  - name: '>'
    fullName: '>'
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Linq.Enumerable.GroupBy``3(System.Func{``0,``1},System.Func{``1,System.Collections.Generic.IEnumerable{``0},``2},System.Collections.Generic.IEqualityComparer{``1})
    name: GroupBy(Of GatewayIPAddressInformation, TKey, TResult)
    fullName: System.Linq.Enumerable.GroupBy(Of System.Net.NetworkInformation.GatewayIPAddressInformation, TKey, TResult)
  - name: (
    fullName: (
  - uid: System.Func`2
    name: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - uid: System.Net.NetworkInformation.GatewayIPAddressInformation
    name: GatewayIPAddressInformation
    fullName: System.Net.NetworkInformation.GatewayIPAddressInformation
  - name: ', '
    fullName: ', '
  - name: TKey
    fullName: TKey
  - name: )
    fullName: )
  - name: ', '
    fullName: ', '
  - uid: System.Func`3
    name: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - name: TKey
    fullName: TKey
  - name: ', '
    fullName: ', '
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - uid: System.Net.NetworkInformation.GatewayIPAddressInformation
    name: GatewayIPAddressInformation
    fullName: System.Net.NetworkInformation.GatewayIPAddressInformation
  - name: )
    fullName: )
  - name: ', '
    fullName: ', '
  - name: TResult
    fullName: TResult
  - name: )
    fullName: )
  - name: ', '
    fullName: ', '
  - uid: System.Collections.Generic.IEqualityComparer`1
    name: IEqualityComparer
    fullName: System.Collections.Generic.IEqualityComparer
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - name: TKey
    fullName: TKey
  - name: )
    fullName: )
  - name: )
    fullName: )
  nameWithType: Enumerable.GroupBy<GatewayIPAddressInformation, TKey, TResult>(Func<GatewayIPAddressInformation, TKey>, Func<TKey, IEnumerable<GatewayIPAddressInformation>, TResult>, IEqualityComparer<TKey>)
  nameWithType.vb: Enumerable.GroupBy(Of GatewayIPAddressInformation, TKey, TResult)(Func(Of GatewayIPAddressInformation, TKey), Func(Of TKey, IEnumerable(Of GatewayIPAddressInformation), TResult), IEqualityComparer(Of TKey))
  commentId: M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``1,System.Collections.Generic.IEnumerable{``0},``2},System.Collections.Generic.IEqualityComparer{``1})
- uid: System.Collections.Generic.IEnumerable{System.Net.NetworkInformation.GatewayIPAddressInformation}.System.Linq.Enumerable.GroupBy``4(System.Func{System.Net.NetworkInformation.GatewayIPAddressInformation,{TKey}},System.Func{System.Net.NetworkInformation.GatewayIPAddressInformation,{TElement}},System.Func{{TKey},System.Collections.Generic.IEnumerable{{TElement}},{TResult}})
  parent: System.Linq.Enumerable
  definition: System.Linq.Enumerable.GroupBy``4(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Func{``1,System.Collections.Generic.IEnumerable{``2},``3})
  name: GroupBy<GatewayIPAddressInformation, TKey, TElement, TResult>(Func<GatewayIPAddressInformation, TKey>, Func<GatewayIPAddressInformation, TElement>, Func<TKey, IEnumerable<TElement>, TResult>)
  fullName: System.Linq.Enumerable.GroupBy<System.Net.NetworkInformation.GatewayIPAddressInformation, TKey, TElement, TResult>(System.Func<System.Net.NetworkInformation.GatewayIPAddressInformation, TKey>, System.Func<System.Net.NetworkInformation.GatewayIPAddressInformation, TElement>, System.Func<TKey, System.Collections.Generic.IEnumerable<TElement>, TResult>)
  fullname.vb: System.Linq.Enumerable.GroupBy(Of System.Net.NetworkInformation.GatewayIPAddressInformation, TKey, TElement, TResult)(System.Func(Of System.Net.NetworkInformation.GatewayIPAddressInformation, TKey), System.Func(Of System.Net.NetworkInformation.GatewayIPAddressInformation, TElement), System.Func(Of TKey, System.Collections.Generic.IEnumerable(Of TElement), TResult))
  name.vb: GroupBy(Of GatewayIPAddressInformation, TKey, TElement, TResult)(Func(Of GatewayIPAddressInformation, TKey), Func(Of GatewayIPAddressInformation, TElement), Func(Of TKey, IEnumerable(Of TElement), TResult))
  spec.csharp:
  - uid: System.Linq.Enumerable.GroupBy``4(System.Func{``0,``1},System.Func{``0,``2},System.Func{``1,System.Collections.Generic.IEnumerable{``2},``3})
    name: GroupBy<GatewayIPAddressInformation, TKey, TElement, TResult>
    fullName: System.Linq.Enumerable.GroupBy<System.Net.NetworkInformation.GatewayIPAddressInformation, TKey, TElement, TResult>
  - name: (
    fullName: (
  - uid: System.Func`2
    name: Func
    fullName: System.Func
    isExternal: true
  - name: <
    fullName: <
  - uid: System.Net.NetworkInformation.GatewayIPAddressInformation
    name: GatewayIPAddressInformation
    fullName: System.Net.NetworkInformation.GatewayIPAddressInformation
  - name: ', '
    fullName: ', '
  - name: TKey
    fullName: TKey
  - name: '>'
    fullName: '>'
  - name: ', '
    fullName: ', '
  - uid: System.Func`2
    name: Func
    fullName: System.Func
    isExternal: true
  - name: <
    fullName: <
  - uid: System.Net.NetworkInformation.GatewayIPAddressInformation
    name: GatewayIPAddressInformation
    fullName: System.Net.NetworkInformation.GatewayIPAddressInformation
  - name: ', '
    fullName: ', '
  - name: TElement
    fullName: TElement
  - name: '>'
    fullName: '>'
  - name: ', '
    fullName: ', '
  - uid: System.Func`3
    name: Func
    fullName: System.Func
    isExternal: true
  - name: <
    fullName: <
  - name: TKey
    fullName: TKey
  - name: ', '
    fullName: ', '
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    fullName: <
  - name: TElement
    fullName: TElement
  - name: '>'
    fullName: '>'
  - name: ', '
    fullName: ', '
  - name: TResult
    fullName: TResult
  - name: '>'
    fullName: '>'
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Linq.Enumerable.GroupBy``4(System.Func{``0,``1},System.Func{``0,``2},System.Func{``1,System.Collections.Generic.IEnumerable{``2},``3})
    name: GroupBy(Of GatewayIPAddressInformation, TKey, TElement, TResult)
    fullName: System.Linq.Enumerable.GroupBy(Of System.Net.NetworkInformation.GatewayIPAddressInformation, TKey, TElement, TResult)
  - name: (
    fullName: (
  - uid: System.Func`2
    name: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - uid: System.Net.NetworkInformation.GatewayIPAddressInformation
    name: GatewayIPAddressInformation
    fullName: System.Net.NetworkInformation.GatewayIPAddressInformation
  - name: ', '
    fullName: ', '
  - name: TKey
    fullName: TKey
  - name: )
    fullName: )
  - name: ', '
    fullName: ', '
  - uid: System.Func`2
    name: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - uid: System.Net.NetworkInformation.GatewayIPAddressInformation
    name: GatewayIPAddressInformation
    fullName: System.Net.NetworkInformation.GatewayIPAddressInformation
  - name: ', '
    fullName: ', '
  - name: TElement
    fullName: TElement
  - name: )
    fullName: )
  - name: ', '
    fullName: ', '
  - uid: System.Func`3
    name: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - name: TKey
    fullName: TKey
  - name: ', '
    fullName: ', '
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - name: TElement
    fullName: TElement
  - name: )
    fullName: )
  - name: ', '
    fullName: ', '
  - name: TResult
    fullName: TResult
  - name: )
    fullName: )
  - name: )
    fullName: )
  nameWithType: Enumerable.GroupBy<GatewayIPAddressInformation, TKey, TElement, TResult>(Func<GatewayIPAddressInformation, TKey>, Func<GatewayIPAddressInformation, TElement>, Func<TKey, IEnumerable<TElement>, TResult>)
  nameWithType.vb: Enumerable.GroupBy(Of GatewayIPAddressInformation, TKey, TElement, TResult)(Func(Of GatewayIPAddressInformation, TKey), Func(Of GatewayIPAddressInformation, TElement), Func(Of TKey, IEnumerable(Of TElement), TResult))
  commentId: M:System.Linq.Enumerable.GroupBy``4(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Func{``1,System.Collections.Generic.IEnumerable{``2},``3})
- uid: System.Collections.Generic.IEnumerable{System.Net.NetworkInformation.GatewayIPAddressInformation}.System.Linq.Enumerable.GroupBy``4(System.Func{System.Net.NetworkInformation.GatewayIPAddressInformation,{TKey}},System.Func{System.Net.NetworkInformation.GatewayIPAddressInformation,{TElement}},System.Func{{TKey},System.Collections.Generic.IEnumerable{{TElement}},{TResult}},System.Collections.Generic.IEqualityComparer{{TKey}})
  parent: System.Linq.Enumerable
  definition: System.Linq.Enumerable.GroupBy``4(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Func{``1,System.Collections.Generic.IEnumerable{``2},``3},System.Collections.Generic.IEqualityComparer{``1})
  name: GroupBy<GatewayIPAddressInformation, TKey, TElement, TResult>(Func<GatewayIPAddressInformation, TKey>, Func<GatewayIPAddressInformation, TElement>, Func<TKey, IEnumerable<TElement>, TResult>, IEqualityComparer<TKey>)
  fullName: System.Linq.Enumerable.GroupBy<System.Net.NetworkInformation.GatewayIPAddressInformation, TKey, TElement, TResult>(System.Func<System.Net.NetworkInformation.GatewayIPAddressInformation, TKey>, System.Func<System.Net.NetworkInformation.GatewayIPAddressInformation, TElement>, System.Func<TKey, System.Collections.Generic.IEnumerable<TElement>, TResult>, System.Collections.Generic.IEqualityComparer<TKey>)
  fullname.vb: System.Linq.Enumerable.GroupBy(Of System.Net.NetworkInformation.GatewayIPAddressInformation, TKey, TElement, TResult)(System.Func(Of System.Net.NetworkInformation.GatewayIPAddressInformation, TKey), System.Func(Of System.Net.NetworkInformation.GatewayIPAddressInformation, TElement), System.Func(Of TKey, System.Collections.Generic.IEnumerable(Of TElement), TResult), System.Collections.Generic.IEqualityComparer(Of TKey))
  name.vb: GroupBy(Of GatewayIPAddressInformation, TKey, TElement, TResult)(Func(Of GatewayIPAddressInformation, TKey), Func(Of GatewayIPAddressInformation, TElement), Func(Of TKey, IEnumerable(Of TElement), TResult), IEqualityComparer(Of TKey))
  spec.csharp:
  - uid: System.Linq.Enumerable.GroupBy``4(System.Func{``0,``1},System.Func{``0,``2},System.Func{``1,System.Collections.Generic.IEnumerable{``2},``3},System.Collections.Generic.IEqualityComparer{``1})
    name: GroupBy<GatewayIPAddressInformation, TKey, TElement, TResult>
    fullName: System.Linq.Enumerable.GroupBy<System.Net.NetworkInformation.GatewayIPAddressInformation, TKey, TElement, TResult>
  - name: (
    fullName: (
  - uid: System.Func`2
    name: Func
    fullName: System.Func
    isExternal: true
  - name: <
    fullName: <
  - uid: System.Net.NetworkInformation.GatewayIPAddressInformation
    name: GatewayIPAddressInformation
    fullName: System.Net.NetworkInformation.GatewayIPAddressInformation
  - name: ', '
    fullName: ', '
  - name: TKey
    fullName: TKey
  - name: '>'
    fullName: '>'
  - name: ', '
    fullName: ', '
  - uid: System.Func`2
    name: Func
    fullName: System.Func
    isExternal: true
  - name: <
    fullName: <
  - uid: System.Net.NetworkInformation.GatewayIPAddressInformation
    name: GatewayIPAddressInformation
    fullName: System.Net.NetworkInformation.GatewayIPAddressInformation
  - name: ', '
    fullName: ', '
  - name: TElement
    fullName: TElement
  - name: '>'
    fullName: '>'
  - name: ', '
    fullName: ', '
  - uid: System.Func`3
    name: Func
    fullName: System.Func
    isExternal: true
  - name: <
    fullName: <
  - name: TKey
    fullName: TKey
  - name: ', '
    fullName: ', '
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    fullName: <
  - name: TElement
    fullName: TElement
  - name: '>'
    fullName: '>'
  - name: ', '
    fullName: ', '
  - name: TResult
    fullName: TResult
  - name: '>'
    fullName: '>'
  - name: ', '
    fullName: ', '
  - uid: System.Collections.Generic.IEqualityComparer`1
    name: IEqualityComparer
    fullName: System.Collections.Generic.IEqualityComparer
    isExternal: true
  - name: <
    fullName: <
  - name: TKey
    fullName: TKey
  - name: '>'
    fullName: '>'
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Linq.Enumerable.GroupBy``4(System.Func{``0,``1},System.Func{``0,``2},System.Func{``1,System.Collections.Generic.IEnumerable{``2},``3},System.Collections.Generic.IEqualityComparer{``1})
    name: GroupBy(Of GatewayIPAddressInformation, TKey, TElement, TResult)
    fullName: System.Linq.Enumerable.GroupBy(Of System.Net.NetworkInformation.GatewayIPAddressInformation, TKey, TElement, TResult)
  - name: (
    fullName: (
  - uid: System.Func`2
    name: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - uid: System.Net.NetworkInformation.GatewayIPAddressInformation
    name: GatewayIPAddressInformation
    fullName: System.Net.NetworkInformation.GatewayIPAddressInformation
  - name: ', '
    fullName: ', '
  - name: TKey
    fullName: TKey
  - name: )
    fullName: )
  - name: ', '
    fullName: ', '
  - uid: System.Func`2
    name: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - uid: System.Net.NetworkInformation.GatewayIPAddressInformation
    name: GatewayIPAddressInformation
    fullName: System.Net.NetworkInformation.GatewayIPAddressInformation
  - name: ', '
    fullName: ', '
  - name: TElement
    fullName: TElement
  - name: )
    fullName: )
  - name: ', '
    fullName: ', '
  - uid: System.Func`3
    name: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - name: TKey
    fullName: TKey
  - name: ', '
    fullName: ', '
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - name: TElement
    fullName: TElement
  - name: )
    fullName: )
  - name: ', '
    fullName: ', '
  - name: TResult
    fullName: TResult
  - name: )
    fullName: )
  - name: ', '
    fullName: ', '
  - uid: System.Collections.Generic.IEqualityComparer`1
    name: IEqualityComparer
    fullName: System.Collections.Generic.IEqualityComparer
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - name: TKey
    fullName: TKey
  - name: )
    fullName: )
  - name: )
    fullName: )
  nameWithType: Enumerable.GroupBy<GatewayIPAddressInformation, TKey, TElement, TResult>(Func<GatewayIPAddressInformation, TKey>, Func<GatewayIPAddressInformation, TElement>, Func<TKey, IEnumerable<TElement>, TResult>, IEqualityComparer<TKey>)
  nameWithType.vb: Enumerable.GroupBy(Of GatewayIPAddressInformation, TKey, TElement, TResult)(Func(Of GatewayIPAddressInformation, TKey), Func(Of GatewayIPAddressInformation, TElement), Func(Of TKey, IEnumerable(Of TElement), TResult), IEqualityComparer(Of TKey))
  commentId: M:System.Linq.Enumerable.GroupBy``4(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Func{``1,System.Collections.Generic.IEnumerable{``2},``3},System.Collections.Generic.IEqualityComparer{``1})
- uid: System.Collections.Generic.IEnumerable{System.Net.NetworkInformation.GatewayIPAddressInformation}.System.Linq.Enumerable.GroupJoin``4(System.Collections.Generic.IEnumerable{{TInner}},System.Func{System.Net.NetworkInformation.GatewayIPAddressInformation,{TKey}},System.Func{{TInner},{TKey}},System.Func{System.Net.NetworkInformation.GatewayIPAddressInformation,System.Collections.Generic.IEnumerable{{TInner}},{TResult}})
  parent: System.Linq.Enumerable
  definition: System.Linq.Enumerable.GroupJoin``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3})
  name: GroupJoin<GatewayIPAddressInformation, TInner, TKey, TResult>(IEnumerable<TInner>, Func<GatewayIPAddressInformation, TKey>, Func<TInner, TKey>, Func<GatewayIPAddressInformation, IEnumerable<TInner>, TResult>)
  fullName: System.Linq.Enumerable.GroupJoin<System.Net.NetworkInformation.GatewayIPAddressInformation, TInner, TKey, TResult>(System.Collections.Generic.IEnumerable<TInner>, System.Func<System.Net.NetworkInformation.GatewayIPAddressInformation, TKey>, System.Func<TInner, TKey>, System.Func<System.Net.NetworkInformation.GatewayIPAddressInformation, System.Collections.Generic.IEnumerable<TInner>, TResult>)
  fullname.vb: System.Linq.Enumerable.GroupJoin(Of System.Net.NetworkInformation.GatewayIPAddressInformation, TInner, TKey, TResult)(System.Collections.Generic.IEnumerable(Of TInner), System.Func(Of System.Net.NetworkInformation.GatewayIPAddressInformation, TKey), System.Func(Of TInner, TKey), System.Func(Of System.Net.NetworkInformation.GatewayIPAddressInformation, System.Collections.Generic.IEnumerable(Of TInner), TResult))
  name.vb: GroupJoin(Of GatewayIPAddressInformation, TInner, TKey, TResult)(IEnumerable(Of TInner), Func(Of GatewayIPAddressInformation, TKey), Func(Of TInner, TKey), Func(Of GatewayIPAddressInformation, IEnumerable(Of TInner), TResult))
  spec.csharp:
  - uid: System.Linq.Enumerable.GroupJoin``4(System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3})
    name: GroupJoin<GatewayIPAddressInformation, TInner, TKey, TResult>
    fullName: System.Linq.Enumerable.GroupJoin<System.Net.NetworkInformation.GatewayIPAddressInformation, TInner, TKey, TResult>
  - name: (
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    fullName: <
  - name: TInner
    fullName: TInner
  - name: '>'
    fullName: '>'
  - name: ', '
    fullName: ', '
  - uid: System.Func`2
    name: Func
    fullName: System.Func
    isExternal: true
  - name: <
    fullName: <
  - uid: System.Net.NetworkInformation.GatewayIPAddressInformation
    name: GatewayIPAddressInformation
    fullName: System.Net.NetworkInformation.GatewayIPAddressInformation
  - name: ', '
    fullName: ', '
  - name: TKey
    fullName: TKey
  - name: '>'
    fullName: '>'
  - name: ', '
    fullName: ', '
  - uid: System.Func`2
    name: Func
    fullName: System.Func
    isExternal: true
  - name: <
    fullName: <
  - name: TInner
    fullName: TInner
  - name: ', '
    fullName: ', '
  - name: TKey
    fullName: TKey
  - name: '>'
    fullName: '>'
  - name: ', '
    fullName: ', '
  - uid: System.Func`3
    name: Func
    fullName: System.Func
    isExternal: true
  - name: <
    fullName: <
  - uid: System.Net.NetworkInformation.GatewayIPAddressInformation
    name: GatewayIPAddressInformation
    fullName: System.Net.NetworkInformation.GatewayIPAddressInformation
  - name: ', '
    fullName: ', '
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    fullName: <
  - name: TInner
    fullName: TInner
  - name: '>'
    fullName: '>'
  - name: ', '
    fullName: ', '
  - name: TResult
    fullName: TResult
  - name: '>'
    fullName: '>'
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Linq.Enumerable.GroupJoin``4(System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3})
    name: GroupJoin(Of GatewayIPAddressInformation, TInner, TKey, TResult)
    fullName: System.Linq.Enumerable.GroupJoin(Of System.Net.NetworkInformation.GatewayIPAddressInformation, TInner, TKey, TResult)
  - name: (
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - name: TInner
    fullName: TInner
  - name: )
    fullName: )
  - name: ', '
    fullName: ', '
  - uid: System.Func`2
    name: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - uid: System.Net.NetworkInformation.GatewayIPAddressInformation
    name: GatewayIPAddressInformation
    fullName: System.Net.NetworkInformation.GatewayIPAddressInformation
  - name: ', '
    fullName: ', '
  - name: TKey
    fullName: TKey
  - name: )
    fullName: )
  - name: ', '
    fullName: ', '
  - uid: System.Func`2
    name: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - name: TInner
    fullName: TInner
  - name: ', '
    fullName: ', '
  - name: TKey
    fullName: TKey
  - name: )
    fullName: )
  - name: ', '
    fullName: ', '
  - uid: System.Func`3
    name: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - uid: System.Net.NetworkInformation.GatewayIPAddressInformation
    name: GatewayIPAddressInformation
    fullName: System.Net.NetworkInformation.GatewayIPAddressInformation
  - name: ', '
    fullName: ', '
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - name: TInner
    fullName: TInner
  - name: )
    fullName: )
  - name: ', '
    fullName: ', '
  - name: TResult
    fullName: TResult
  - name: )
    fullName: )
  - name: )
    fullName: )
  nameWithType: Enumerable.GroupJoin<GatewayIPAddressInformation, TInner, TKey, TResult>(IEnumerable<TInner>, Func<GatewayIPAddressInformation, TKey>, Func<TInner, TKey>, Func<GatewayIPAddressInformation, IEnumerable<TInner>, TResult>)
  nameWithType.vb: Enumerable.GroupJoin(Of GatewayIPAddressInformation, TInner, TKey, TResult)(IEnumerable(Of TInner), Func(Of GatewayIPAddressInformation, TKey), Func(Of TInner, TKey), Func(Of GatewayIPAddressInformation, IEnumerable(Of TInner), TResult))
  commentId: M:System.Linq.Enumerable.GroupJoin``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3})
- uid: System.Collections.Generic.IEnumerable{System.Net.NetworkInformation.GatewayIPAddressInformation}.System.Linq.Enumerable.GroupJoin``4(System.Collections.Generic.IEnumerable{{TInner}},System.Func{System.Net.NetworkInformation.GatewayIPAddressInformation,{TKey}},System.Func{{TInner},{TKey}},System.Func{System.Net.NetworkInformation.GatewayIPAddressInformation,System.Collections.Generic.IEnumerable{{TInner}},{TResult}},System.Collections.Generic.IEqualityComparer{{TKey}})
  parent: System.Linq.Enumerable
  definition: System.Linq.Enumerable.GroupJoin``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3},System.Collections.Generic.IEqualityComparer{``2})
  name: GroupJoin<GatewayIPAddressInformation, TInner, TKey, TResult>(IEnumerable<TInner>, Func<GatewayIPAddressInformation, TKey>, Func<TInner, TKey>, Func<GatewayIPAddressInformation, IEnumerable<TInner>, TResult>, IEqualityComparer<TKey>)
  fullName: System.Linq.Enumerable.GroupJoin<System.Net.NetworkInformation.GatewayIPAddressInformation, TInner, TKey, TResult>(System.Collections.Generic.IEnumerable<TInner>, System.Func<System.Net.NetworkInformation.GatewayIPAddressInformation, TKey>, System.Func<TInner, TKey>, System.Func<System.Net.NetworkInformation.GatewayIPAddressInformation, System.Collections.Generic.IEnumerable<TInner>, TResult>, System.Collections.Generic.IEqualityComparer<TKey>)
  fullname.vb: System.Linq.Enumerable.GroupJoin(Of System.Net.NetworkInformation.GatewayIPAddressInformation, TInner, TKey, TResult)(System.Collections.Generic.IEnumerable(Of TInner), System.Func(Of System.Net.NetworkInformation.GatewayIPAddressInformation, TKey), System.Func(Of TInner, TKey), System.Func(Of System.Net.NetworkInformation.GatewayIPAddressInformation, System.Collections.Generic.IEnumerable(Of TInner), TResult), System.Collections.Generic.IEqualityComparer(Of TKey))
  name.vb: GroupJoin(Of GatewayIPAddressInformation, TInner, TKey, TResult)(IEnumerable(Of TInner), Func(Of GatewayIPAddressInformation, TKey), Func(Of TInner, TKey), Func(Of GatewayIPAddressInformation, IEnumerable(Of TInner), TResult), IEqualityComparer(Of TKey))
  spec.csharp:
  - uid: System.Linq.Enumerable.GroupJoin``4(System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3},System.Collections.Generic.IEqualityComparer{``2})
    name: GroupJoin<GatewayIPAddressInformation, TInner, TKey, TResult>
    fullName: System.Linq.Enumerable.GroupJoin<System.Net.NetworkInformation.GatewayIPAddressInformation, TInner, TKey, TResult>
  - name: (
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    fullName: <
  - name: TInner
    fullName: TInner
  - name: '>'
    fullName: '>'
  - name: ', '
    fullName: ', '
  - uid: System.Func`2
    name: Func
    fullName: System.Func
    isExternal: true
  - name: <
    fullName: <
  - uid: System.Net.NetworkInformation.GatewayIPAddressInformation
    name: GatewayIPAddressInformation
    fullName: System.Net.NetworkInformation.GatewayIPAddressInformation
  - name: ', '
    fullName: ', '
  - name: TKey
    fullName: TKey
  - name: '>'
    fullName: '>'
  - name: ', '
    fullName: ', '
  - uid: System.Func`2
    name: Func
    fullName: System.Func
    isExternal: true
  - name: <
    fullName: <
  - name: TInner
    fullName: TInner
  - name: ', '
    fullName: ', '
  - name: TKey
    fullName: TKey
  - name: '>'
    fullName: '>'
  - name: ', '
    fullName: ', '
  - uid: System.Func`3
    name: Func
    fullName: System.Func
    isExternal: true
  - name: <
    fullName: <
  - uid: System.Net.NetworkInformation.GatewayIPAddressInformation
    name: GatewayIPAddressInformation
    fullName: System.Net.NetworkInformation.GatewayIPAddressInformation
  - name: ', '
    fullName: ', '
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    fullName: <
  - name: TInner
    fullName: TInner
  - name: '>'
    fullName: '>'
  - name: ', '
    fullName: ', '
  - name: TResult
    fullName: TResult
  - name: '>'
    fullName: '>'
  - name: ', '
    fullName: ', '
  - uid: System.Collections.Generic.IEqualityComparer`1
    name: IEqualityComparer
    fullName: System.Collections.Generic.IEqualityComparer
    isExternal: true
  - name: <
    fullName: <
  - name: TKey
    fullName: TKey
  - name: '>'
    fullName: '>'
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Linq.Enumerable.GroupJoin``4(System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3},System.Collections.Generic.IEqualityComparer{``2})
    name: GroupJoin(Of GatewayIPAddressInformation, TInner, TKey, TResult)
    fullName: System.Linq.Enumerable.GroupJoin(Of System.Net.NetworkInformation.GatewayIPAddressInformation, TInner, TKey, TResult)
  - name: (
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - name: TInner
    fullName: TInner
  - name: )
    fullName: )
  - name: ', '
    fullName: ', '
  - uid: System.Func`2
    name: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - uid: System.Net.NetworkInformation.GatewayIPAddressInformation
    name: GatewayIPAddressInformation
    fullName: System.Net.NetworkInformation.GatewayIPAddressInformation
  - name: ', '
    fullName: ', '
  - name: TKey
    fullName: TKey
  - name: )
    fullName: )
  - name: ', '
    fullName: ', '
  - uid: System.Func`2
    name: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - name: TInner
    fullName: TInner
  - name: ', '
    fullName: ', '
  - name: TKey
    fullName: TKey
  - name: )
    fullName: )
  - name: ', '
    fullName: ', '
  - uid: System.Func`3
    name: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - uid: System.Net.NetworkInformation.GatewayIPAddressInformation
    name: GatewayIPAddressInformation
    fullName: System.Net.NetworkInformation.GatewayIPAddressInformation
  - name: ', '
    fullName: ', '
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - name: TInner
    fullName: TInner
  - name: )
    fullName: )
  - name: ', '
    fullName: ', '
  - name: TResult
    fullName: TResult
  - name: )
    fullName: )
  - name: ', '
    fullName: ', '
  - uid: System.Collections.Generic.IEqualityComparer`1
    name: IEqualityComparer
    fullName: System.Collections.Generic.IEqualityComparer
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - name: TKey
    fullName: TKey
  - name: )
    fullName: )
  - name: )
    fullName: )
  nameWithType: Enumerable.GroupJoin<GatewayIPAddressInformation, TInner, TKey, TResult>(IEnumerable<TInner>, Func<GatewayIPAddressInformation, TKey>, Func<TInner, TKey>, Func<GatewayIPAddressInformation, IEnumerable<TInner>, TResult>, IEqualityComparer<TKey>)
  nameWithType.vb: Enumerable.GroupJoin(Of GatewayIPAddressInformation, TInner, TKey, TResult)(IEnumerable(Of TInner), Func(Of GatewayIPAddressInformation, TKey), Func(Of TInner, TKey), Func(Of GatewayIPAddressInformation, IEnumerable(Of TInner), TResult), IEqualityComparer(Of TKey))
  commentId: M:System.Linq.Enumerable.GroupJoin``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3},System.Collections.Generic.IEqualityComparer{``2})
- uid: System.Collections.Generic.IEnumerable{System.Net.NetworkInformation.GatewayIPAddressInformation}.System.Linq.Enumerable.Intersect``1(System.Collections.Generic.IEnumerable{System.Net.NetworkInformation.GatewayIPAddressInformation})
  parent: System.Linq.Enumerable
  definition: System.Linq.Enumerable.Intersect``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0})
  name: Intersect<GatewayIPAddressInformation>(IEnumerable<GatewayIPAddressInformation>)
  fullName: System.Linq.Enumerable.Intersect<System.Net.NetworkInformation.GatewayIPAddressInformation>(System.Collections.Generic.IEnumerable<System.Net.NetworkInformation.GatewayIPAddressInformation>)
  fullname.vb: System.Linq.Enumerable.Intersect(Of System.Net.NetworkInformation.GatewayIPAddressInformation)(System.Collections.Generic.IEnumerable(Of System.Net.NetworkInformation.GatewayIPAddressInformation))
  name.vb: Intersect(Of GatewayIPAddressInformation)(IEnumerable(Of GatewayIPAddressInformation))
  spec.csharp:
  - uid: System.Linq.Enumerable.Intersect``1(System.Collections.Generic.IEnumerable{``0})
    name: Intersect<GatewayIPAddressInformation>
    fullName: System.Linq.Enumerable.Intersect<System.Net.NetworkInformation.GatewayIPAddressInformation>
  - name: (
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    fullName: <
  - uid: System.Net.NetworkInformation.GatewayIPAddressInformation
    name: GatewayIPAddressInformation
    fullName: System.Net.NetworkInformation.GatewayIPAddressInformation
  - name: '>'
    fullName: '>'
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Linq.Enumerable.Intersect``1(System.Collections.Generic.IEnumerable{``0})
    name: Intersect(Of GatewayIPAddressInformation)
    fullName: System.Linq.Enumerable.Intersect(Of System.Net.NetworkInformation.GatewayIPAddressInformation)
  - name: (
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - uid: System.Net.NetworkInformation.GatewayIPAddressInformation
    name: GatewayIPAddressInformation
    fullName: System.Net.NetworkInformation.GatewayIPAddressInformation
  - name: )
    fullName: )
  - name: )
    fullName: )
  nameWithType: Enumerable.Intersect<GatewayIPAddressInformation>(IEnumerable<GatewayIPAddressInformation>)
  nameWithType.vb: Enumerable.Intersect(Of GatewayIPAddressInformation)(IEnumerable(Of GatewayIPAddressInformation))
  commentId: M:System.Linq.Enumerable.Intersect``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0})
- uid: System.Collections.Generic.IEnumerable{System.Net.NetworkInformation.GatewayIPAddressInformation}.System.Linq.Enumerable.Intersect``1(System.Collections.Generic.IEnumerable{System.Net.NetworkInformation.GatewayIPAddressInformation},System.Collections.Generic.IEqualityComparer{System.Net.NetworkInformation.GatewayIPAddressInformation})
  parent: System.Linq.Enumerable
  definition: System.Linq.Enumerable.Intersect``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEqualityComparer{``0})
  name: Intersect<GatewayIPAddressInformation>(IEnumerable<GatewayIPAddressInformation>, IEqualityComparer<GatewayIPAddressInformation>)
  fullName: System.Linq.Enumerable.Intersect<System.Net.NetworkInformation.GatewayIPAddressInformation>(System.Collections.Generic.IEnumerable<System.Net.NetworkInformation.GatewayIPAddressInformation>, System.Collections.Generic.IEqualityComparer<System.Net.NetworkInformation.GatewayIPAddressInformation>)
  fullname.vb: System.Linq.Enumerable.Intersect(Of System.Net.NetworkInformation.GatewayIPAddressInformation)(System.Collections.Generic.IEnumerable(Of System.Net.NetworkInformation.GatewayIPAddressInformation), System.Collections.Generic.IEqualityComparer(Of System.Net.NetworkInformation.GatewayIPAddressInformation))
  name.vb: Intersect(Of GatewayIPAddressInformation)(IEnumerable(Of GatewayIPAddressInformation), IEqualityComparer(Of GatewayIPAddressInformation))
  spec.csharp:
  - uid: System.Linq.Enumerable.Intersect``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEqualityComparer{``0})
    name: Intersect<GatewayIPAddressInformation>
    fullName: System.Linq.Enumerable.Intersect<System.Net.NetworkInformation.GatewayIPAddressInformation>
  - name: (
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    fullName: <
  - uid: System.Net.NetworkInformation.GatewayIPAddressInformation
    name: GatewayIPAddressInformation
    fullName: System.Net.NetworkInformation.GatewayIPAddressInformation
  - name: '>'
    fullName: '>'
  - name: ', '
    fullName: ', '
  - uid: System.Collections.Generic.IEqualityComparer`1
    name: IEqualityComparer
    fullName: System.Collections.Generic.IEqualityComparer
    isExternal: true
  - name: <
    fullName: <
  - uid: System.Net.NetworkInformation.GatewayIPAddressInformation
    name: GatewayIPAddressInformation
    fullName: System.Net.NetworkInformation.GatewayIPAddressInformation
  - name: '>'
    fullName: '>'
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Linq.Enumerable.Intersect``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEqualityComparer{``0})
    name: Intersect(Of GatewayIPAddressInformation)
    fullName: System.Linq.Enumerable.Intersect(Of System.Net.NetworkInformation.GatewayIPAddressInformation)
  - name: (
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - uid: System.Net.NetworkInformation.GatewayIPAddressInformation
    name: GatewayIPAddressInformation
    fullName: System.Net.NetworkInformation.GatewayIPAddressInformation
  - name: )
    fullName: )
  - name: ', '
    fullName: ', '
  - uid: System.Collections.Generic.IEqualityComparer`1
    name: IEqualityComparer
    fullName: System.Collections.Generic.IEqualityComparer
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - uid: System.Net.NetworkInformation.GatewayIPAddressInformation
    name: GatewayIPAddressInformation
    fullName: System.Net.NetworkInformation.GatewayIPAddressInformation
  - name: )
    fullName: )
  - name: )
    fullName: )
  nameWithType: Enumerable.Intersect<GatewayIPAddressInformation>(IEnumerable<GatewayIPAddressInformation>, IEqualityComparer<GatewayIPAddressInformation>)
  nameWithType.vb: Enumerable.Intersect(Of GatewayIPAddressInformation)(IEnumerable(Of GatewayIPAddressInformation), IEqualityComparer(Of GatewayIPAddressInformation))
  commentId: M:System.Linq.Enumerable.Intersect``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEqualityComparer{``0})
- uid: System.Collections.Generic.IEnumerable{System.Net.NetworkInformation.GatewayIPAddressInformation}.System.Linq.Enumerable.Join``4(System.Collections.Generic.IEnumerable{{TInner}},System.Func{System.Net.NetworkInformation.GatewayIPAddressInformation,{TKey}},System.Func{{TInner},{TKey}},System.Func{System.Net.NetworkInformation.GatewayIPAddressInformation,{TInner},{TResult}})
  parent: System.Linq.Enumerable
  definition: System.Linq.Enumerable.Join``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3})
  name: Join<GatewayIPAddressInformation, TInner, TKey, TResult>(IEnumerable<TInner>, Func<GatewayIPAddressInformation, TKey>, Func<TInner, TKey>, Func<GatewayIPAddressInformation, TInner, TResult>)
  fullName: System.Linq.Enumerable.Join<System.Net.NetworkInformation.GatewayIPAddressInformation, TInner, TKey, TResult>(System.Collections.Generic.IEnumerable<TInner>, System.Func<System.Net.NetworkInformation.GatewayIPAddressInformation, TKey>, System.Func<TInner, TKey>, System.Func<System.Net.NetworkInformation.GatewayIPAddressInformation, TInner, TResult>)
  fullname.vb: System.Linq.Enumerable.Join(Of System.Net.NetworkInformation.GatewayIPAddressInformation, TInner, TKey, TResult)(System.Collections.Generic.IEnumerable(Of TInner), System.Func(Of System.Net.NetworkInformation.GatewayIPAddressInformation, TKey), System.Func(Of TInner, TKey), System.Func(Of System.Net.NetworkInformation.GatewayIPAddressInformation, TInner, TResult))
  name.vb: Join(Of GatewayIPAddressInformation, TInner, TKey, TResult)(IEnumerable(Of TInner), Func(Of GatewayIPAddressInformation, TKey), Func(Of TInner, TKey), Func(Of GatewayIPAddressInformation, TInner, TResult))
  spec.csharp:
  - uid: System.Linq.Enumerable.Join``4(System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3})
    name: Join<GatewayIPAddressInformation, TInner, TKey, TResult>
    fullName: System.Linq.Enumerable.Join<System.Net.NetworkInformation.GatewayIPAddressInformation, TInner, TKey, TResult>
  - name: (
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    fullName: <
  - name: TInner
    fullName: TInner
  - name: '>'
    fullName: '>'
  - name: ', '
    fullName: ', '
  - uid: System.Func`2
    name: Func
    fullName: System.Func
    isExternal: true
  - name: <
    fullName: <
  - uid: System.Net.NetworkInformation.GatewayIPAddressInformation
    name: GatewayIPAddressInformation
    fullName: System.Net.NetworkInformation.GatewayIPAddressInformation
  - name: ', '
    fullName: ', '
  - name: TKey
    fullName: TKey
  - name: '>'
    fullName: '>'
  - name: ', '
    fullName: ', '
  - uid: System.Func`2
    name: Func
    fullName: System.Func
    isExternal: true
  - name: <
    fullName: <
  - name: TInner
    fullName: TInner
  - name: ', '
    fullName: ', '
  - name: TKey
    fullName: TKey
  - name: '>'
    fullName: '>'
  - name: ', '
    fullName: ', '
  - uid: System.Func`3
    name: Func
    fullName: System.Func
    isExternal: true
  - name: <
    fullName: <
  - uid: System.Net.NetworkInformation.GatewayIPAddressInformation
    name: GatewayIPAddressInformation
    fullName: System.Net.NetworkInformation.GatewayIPAddressInformation
  - name: ', '
    fullName: ', '
  - name: TInner
    fullName: TInner
  - name: ', '
    fullName: ', '
  - name: TResult
    fullName: TResult
  - name: '>'
    fullName: '>'
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Linq.Enumerable.Join``4(System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3})
    name: Join(Of GatewayIPAddressInformation, TInner, TKey, TResult)
    fullName: System.Linq.Enumerable.Join(Of System.Net.NetworkInformation.GatewayIPAddressInformation, TInner, TKey, TResult)
  - name: (
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - name: TInner
    fullName: TInner
  - name: )
    fullName: )
  - name: ', '
    fullName: ', '
  - uid: System.Func`2
    name: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - uid: System.Net.NetworkInformation.GatewayIPAddressInformation
    name: GatewayIPAddressInformation
    fullName: System.Net.NetworkInformation.GatewayIPAddressInformation
  - name: ', '
    fullName: ', '
  - name: TKey
    fullName: TKey
  - name: )
    fullName: )
  - name: ', '
    fullName: ', '
  - uid: System.Func`2
    name: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - name: TInner
    fullName: TInner
  - name: ', '
    fullName: ', '
  - name: TKey
    fullName: TKey
  - name: )
    fullName: )
  - name: ', '
    fullName: ', '
  - uid: System.Func`3
    name: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - uid: System.Net.NetworkInformation.GatewayIPAddressInformation
    name: GatewayIPAddressInformation
    fullName: System.Net.NetworkInformation.GatewayIPAddressInformation
  - name: ', '
    fullName: ', '
  - name: TInner
    fullName: TInner
  - name: ', '
    fullName: ', '
  - name: TResult
    fullName: TResult
  - name: )
    fullName: )
  - name: )
    fullName: )
  nameWithType: Enumerable.Join<GatewayIPAddressInformation, TInner, TKey, TResult>(IEnumerable<TInner>, Func<GatewayIPAddressInformation, TKey>, Func<TInner, TKey>, Func<GatewayIPAddressInformation, TInner, TResult>)
  nameWithType.vb: Enumerable.Join(Of GatewayIPAddressInformation, TInner, TKey, TResult)(IEnumerable(Of TInner), Func(Of GatewayIPAddressInformation, TKey), Func(Of TInner, TKey), Func(Of GatewayIPAddressInformation, TInner, TResult))
  commentId: M:System.Linq.Enumerable.Join``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3})
- uid: System.Collections.Generic.IEnumerable{System.Net.NetworkInformation.GatewayIPAddressInformation}.System.Linq.Enumerable.Join``4(System.Collections.Generic.IEnumerable{{TInner}},System.Func{System.Net.NetworkInformation.GatewayIPAddressInformation,{TKey}},System.Func{{TInner},{TKey}},System.Func{System.Net.NetworkInformation.GatewayIPAddressInformation,{TInner},{TResult}},System.Collections.Generic.IEqualityComparer{{TKey}})
  parent: System.Linq.Enumerable
  definition: System.Linq.Enumerable.Join``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3},System.Collections.Generic.IEqualityComparer{``2})
  name: Join<GatewayIPAddressInformation, TInner, TKey, TResult>(IEnumerable<TInner>, Func<GatewayIPAddressInformation, TKey>, Func<TInner, TKey>, Func<GatewayIPAddressInformation, TInner, TResult>, IEqualityComparer<TKey>)
  fullName: System.Linq.Enumerable.Join<System.Net.NetworkInformation.GatewayIPAddressInformation, TInner, TKey, TResult>(System.Collections.Generic.IEnumerable<TInner>, System.Func<System.Net.NetworkInformation.GatewayIPAddressInformation, TKey>, System.Func<TInner, TKey>, System.Func<System.Net.NetworkInformation.GatewayIPAddressInformation, TInner, TResult>, System.Collections.Generic.IEqualityComparer<TKey>)
  fullname.vb: System.Linq.Enumerable.Join(Of System.Net.NetworkInformation.GatewayIPAddressInformation, TInner, TKey, TResult)(System.Collections.Generic.IEnumerable(Of TInner), System.Func(Of System.Net.NetworkInformation.GatewayIPAddressInformation, TKey), System.Func(Of TInner, TKey), System.Func(Of System.Net.NetworkInformation.GatewayIPAddressInformation, TInner, TResult), System.Collections.Generic.IEqualityComparer(Of TKey))
  name.vb: Join(Of GatewayIPAddressInformation, TInner, TKey, TResult)(IEnumerable(Of TInner), Func(Of GatewayIPAddressInformation, TKey), Func(Of TInner, TKey), Func(Of GatewayIPAddressInformation, TInner, TResult), IEqualityComparer(Of TKey))
  spec.csharp:
  - uid: System.Linq.Enumerable.Join``4(System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3},System.Collections.Generic.IEqualityComparer{``2})
    name: Join<GatewayIPAddressInformation, TInner, TKey, TResult>
    fullName: System.Linq.Enumerable.Join<System.Net.NetworkInformation.GatewayIPAddressInformation, TInner, TKey, TResult>
  - name: (
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    fullName: <
  - name: TInner
    fullName: TInner
  - name: '>'
    fullName: '>'
  - name: ', '
    fullName: ', '
  - uid: System.Func`2
    name: Func
    fullName: System.Func
    isExternal: true
  - name: <
    fullName: <
  - uid: System.Net.NetworkInformation.GatewayIPAddressInformation
    name: GatewayIPAddressInformation
    fullName: System.Net.NetworkInformation.GatewayIPAddressInformation
  - name: ', '
    fullName: ', '
  - name: TKey
    fullName: TKey
  - name: '>'
    fullName: '>'
  - name: ', '
    fullName: ', '
  - uid: System.Func`2
    name: Func
    fullName: System.Func
    isExternal: true
  - name: <
    fullName: <
  - name: TInner
    fullName: TInner
  - name: ', '
    fullName: ', '
  - name: TKey
    fullName: TKey
  - name: '>'
    fullName: '>'
  - name: ', '
    fullName: ', '
  - uid: System.Func`3
    name: Func
    fullName: System.Func
    isExternal: true
  - name: <
    fullName: <
  - uid: System.Net.NetworkInformation.GatewayIPAddressInformation
    name: GatewayIPAddressInformation
    fullName: System.Net.NetworkInformation.GatewayIPAddressInformation
  - name: ', '
    fullName: ', '
  - name: TInner
    fullName: TInner
  - name: ', '
    fullName: ', '
  - name: TResult
    fullName: TResult
  - name: '>'
    fullName: '>'
  - name: ', '
    fullName: ', '
  - uid: System.Collections.Generic.IEqualityComparer`1
    name: IEqualityComparer
    fullName: System.Collections.Generic.IEqualityComparer
    isExternal: true
  - name: <
    fullName: <
  - name: TKey
    fullName: TKey
  - name: '>'
    fullName: '>'
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Linq.Enumerable.Join``4(System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3},System.Collections.Generic.IEqualityComparer{``2})
    name: Join(Of GatewayIPAddressInformation, TInner, TKey, TResult)
    fullName: System.Linq.Enumerable.Join(Of System.Net.NetworkInformation.GatewayIPAddressInformation, TInner, TKey, TResult)
  - name: (
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - name: TInner
    fullName: TInner
  - name: )
    fullName: )
  - name: ', '
    fullName: ', '
  - uid: System.Func`2
    name: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - uid: System.Net.NetworkInformation.GatewayIPAddressInformation
    name: GatewayIPAddressInformation
    fullName: System.Net.NetworkInformation.GatewayIPAddressInformation
  - name: ', '
    fullName: ', '
  - name: TKey
    fullName: TKey
  - name: )
    fullName: )
  - name: ', '
    fullName: ', '
  - uid: System.Func`2
    name: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - name: TInner
    fullName: TInner
  - name: ', '
    fullName: ', '
  - name: TKey
    fullName: TKey
  - name: )
    fullName: )
  - name: ', '
    fullName: ', '
  - uid: System.Func`3
    name: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - uid: System.Net.NetworkInformation.GatewayIPAddressInformation
    name: GatewayIPAddressInformation
    fullName: System.Net.NetworkInformation.GatewayIPAddressInformation
  - name: ', '
    fullName: ', '
  - name: TInner
    fullName: TInner
  - name: ', '
    fullName: ', '
  - name: TResult
    fullName: TResult
  - name: )
    fullName: )
  - name: ', '
    fullName: ', '
  - uid: System.Collections.Generic.IEqualityComparer`1
    name: IEqualityComparer
    fullName: System.Collections.Generic.IEqualityComparer
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - name: TKey
    fullName: TKey
  - name: )
    fullName: )
  - name: )
    fullName: )
  nameWithType: Enumerable.Join<GatewayIPAddressInformation, TInner, TKey, TResult>(IEnumerable<TInner>, Func<GatewayIPAddressInformation, TKey>, Func<TInner, TKey>, Func<GatewayIPAddressInformation, TInner, TResult>, IEqualityComparer<TKey>)
  nameWithType.vb: Enumerable.Join(Of GatewayIPAddressInformation, TInner, TKey, TResult)(IEnumerable(Of TInner), Func(Of GatewayIPAddressInformation, TKey), Func(Of TInner, TKey), Func(Of GatewayIPAddressInformation, TInner, TResult), IEqualityComparer(Of TKey))
  commentId: M:System.Linq.Enumerable.Join``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3},System.Collections.Generic.IEqualityComparer{``2})
- uid: System.Collections.Generic.IEnumerable{System.Net.NetworkInformation.GatewayIPAddressInformation}.System.Linq.Enumerable.Last``1
  parent: System.Linq.Enumerable
  definition: System.Linq.Enumerable.Last``1(System.Collections.Generic.IEnumerable{``0})
  name: Last<GatewayIPAddressInformation>()
  fullName: System.Linq.Enumerable.Last<System.Net.NetworkInformation.GatewayIPAddressInformation>()
  fullname.vb: System.Linq.Enumerable.Last(Of System.Net.NetworkInformation.GatewayIPAddressInformation)()
  name.vb: Last(Of GatewayIPAddressInformation)()
  spec.csharp:
  - uid: System.Linq.Enumerable.Last``1
    name: Last<GatewayIPAddressInformation>
    fullName: System.Linq.Enumerable.Last<System.Net.NetworkInformation.GatewayIPAddressInformation>
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Linq.Enumerable.Last``1
    name: Last(Of GatewayIPAddressInformation)
    fullName: System.Linq.Enumerable.Last(Of System.Net.NetworkInformation.GatewayIPAddressInformation)
  - name: (
    fullName: (
  - name: )
    fullName: )
  nameWithType: Enumerable.Last<GatewayIPAddressInformation>()
  nameWithType.vb: Enumerable.Last(Of GatewayIPAddressInformation)()
  commentId: M:System.Linq.Enumerable.Last``1(System.Collections.Generic.IEnumerable{``0})
- uid: System.Collections.Generic.IEnumerable{System.Net.NetworkInformation.GatewayIPAddressInformation}.System.Linq.Enumerable.Last``1(System.Func{System.Net.NetworkInformation.GatewayIPAddressInformation,System.Boolean})
  parent: System.Linq.Enumerable
  definition: System.Linq.Enumerable.Last``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})
  name: Last<GatewayIPAddressInformation>(Func<GatewayIPAddressInformation, Boolean>)
  fullName: System.Linq.Enumerable.Last<System.Net.NetworkInformation.GatewayIPAddressInformation>(System.Func<System.Net.NetworkInformation.GatewayIPAddressInformation, System.Boolean>)
  fullname.vb: System.Linq.Enumerable.Last(Of System.Net.NetworkInformation.GatewayIPAddressInformation)(System.Func(Of System.Net.NetworkInformation.GatewayIPAddressInformation, System.Boolean))
  name.vb: Last(Of GatewayIPAddressInformation)(Func(Of GatewayIPAddressInformation, Boolean))
  spec.csharp:
  - uid: System.Linq.Enumerable.Last``1(System.Func{``0,System.Boolean})
    name: Last<GatewayIPAddressInformation>
    fullName: System.Linq.Enumerable.Last<System.Net.NetworkInformation.GatewayIPAddressInformation>
  - name: (
    fullName: (
  - uid: System.Func`2
    name: Func
    fullName: System.Func
    isExternal: true
  - name: <
    fullName: <
  - uid: System.Net.NetworkInformation.GatewayIPAddressInformation
    name: GatewayIPAddressInformation
    fullName: System.Net.NetworkInformation.GatewayIPAddressInformation
  - name: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: '>'
    fullName: '>'
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Linq.Enumerable.Last``1(System.Func{``0,System.Boolean})
    name: Last(Of GatewayIPAddressInformation)
    fullName: System.Linq.Enumerable.Last(Of System.Net.NetworkInformation.GatewayIPAddressInformation)
  - name: (
    fullName: (
  - uid: System.Func`2
    name: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - uid: System.Net.NetworkInformation.GatewayIPAddressInformation
    name: GatewayIPAddressInformation
    fullName: System.Net.NetworkInformation.GatewayIPAddressInformation
  - name: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    fullName: )
  - name: )
    fullName: )
  nameWithType: Enumerable.Last<GatewayIPAddressInformation>(Func<GatewayIPAddressInformation, Boolean>)
  nameWithType.vb: Enumerable.Last(Of GatewayIPAddressInformation)(Func(Of GatewayIPAddressInformation, Boolean))
  commentId: M:System.Linq.Enumerable.Last``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})
- uid: System.Collections.Generic.IEnumerable{System.Net.NetworkInformation.GatewayIPAddressInformation}.System.Linq.Enumerable.LastOrDefault``1
  parent: System.Linq.Enumerable
  definition: System.Linq.Enumerable.LastOrDefault``1(System.Collections.Generic.IEnumerable{``0})
  name: LastOrDefault<GatewayIPAddressInformation>()
  fullName: System.Linq.Enumerable.LastOrDefault<System.Net.NetworkInformation.GatewayIPAddressInformation>()
  fullname.vb: System.Linq.Enumerable.LastOrDefault(Of System.Net.NetworkInformation.GatewayIPAddressInformation)()
  name.vb: LastOrDefault(Of GatewayIPAddressInformation)()
  spec.csharp:
  - uid: System.Linq.Enumerable.LastOrDefault``1
    name: LastOrDefault<GatewayIPAddressInformation>
    fullName: System.Linq.Enumerable.LastOrDefault<System.Net.NetworkInformation.GatewayIPAddressInformation>
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Linq.Enumerable.LastOrDefault``1
    name: LastOrDefault(Of GatewayIPAddressInformation)
    fullName: System.Linq.Enumerable.LastOrDefault(Of System.Net.NetworkInformation.GatewayIPAddressInformation)
  - name: (
    fullName: (
  - name: )
    fullName: )
  nameWithType: Enumerable.LastOrDefault<GatewayIPAddressInformation>()
  nameWithType.vb: Enumerable.LastOrDefault(Of GatewayIPAddressInformation)()
  commentId: M:System.Linq.Enumerable.LastOrDefault``1(System.Collections.Generic.IEnumerable{``0})
- uid: System.Collections.Generic.IEnumerable{System.Net.NetworkInformation.GatewayIPAddressInformation}.System.Linq.Enumerable.LastOrDefault``1(System.Func{System.Net.NetworkInformation.GatewayIPAddressInformation,System.Boolean})
  parent: System.Linq.Enumerable
  definition: System.Linq.Enumerable.LastOrDefault``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})
  name: LastOrDefault<GatewayIPAddressInformation>(Func<GatewayIPAddressInformation, Boolean>)
  fullName: System.Linq.Enumerable.LastOrDefault<System.Net.NetworkInformation.GatewayIPAddressInformation>(System.Func<System.Net.NetworkInformation.GatewayIPAddressInformation, System.Boolean>)
  fullname.vb: System.Linq.Enumerable.LastOrDefault(Of System.Net.NetworkInformation.GatewayIPAddressInformation)(System.Func(Of System.Net.NetworkInformation.GatewayIPAddressInformation, System.Boolean))
  name.vb: LastOrDefault(Of GatewayIPAddressInformation)(Func(Of GatewayIPAddressInformation, Boolean))
  spec.csharp:
  - uid: System.Linq.Enumerable.LastOrDefault``1(System.Func{``0,System.Boolean})
    name: LastOrDefault<GatewayIPAddressInformation>
    fullName: System.Linq.Enumerable.LastOrDefault<System.Net.NetworkInformation.GatewayIPAddressInformation>
  - name: (
    fullName: (
  - uid: System.Func`2
    name: Func
    fullName: System.Func
    isExternal: true
  - name: <
    fullName: <
  - uid: System.Net.NetworkInformation.GatewayIPAddressInformation
    name: GatewayIPAddressInformation
    fullName: System.Net.NetworkInformation.GatewayIPAddressInformation
  - name: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: '>'
    fullName: '>'
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Linq.Enumerable.LastOrDefault``1(System.Func{``0,System.Boolean})
    name: LastOrDefault(Of GatewayIPAddressInformation)
    fullName: System.Linq.Enumerable.LastOrDefault(Of System.Net.NetworkInformation.GatewayIPAddressInformation)
  - name: (
    fullName: (
  - uid: System.Func`2
    name: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - uid: System.Net.NetworkInformation.GatewayIPAddressInformation
    name: GatewayIPAddressInformation
    fullName: System.Net.NetworkInformation.GatewayIPAddressInformation
  - name: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    fullName: )
  - name: )
    fullName: )
  nameWithType: Enumerable.LastOrDefault<GatewayIPAddressInformation>(Func<GatewayIPAddressInformation, Boolean>)
  nameWithType.vb: Enumerable.LastOrDefault(Of GatewayIPAddressInformation)(Func(Of GatewayIPAddressInformation, Boolean))
  commentId: M:System.Linq.Enumerable.LastOrDefault``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})
- uid: System.Collections.Generic.IEnumerable{System.Net.NetworkInformation.GatewayIPAddressInformation}.System.Linq.Enumerable.LongCount``1
  parent: System.Linq.Enumerable
  definition: System.Linq.Enumerable.LongCount``1(System.Collections.Generic.IEnumerable{``0})
  name: LongCount<GatewayIPAddressInformation>()
  fullName: System.Linq.Enumerable.LongCount<System.Net.NetworkInformation.GatewayIPAddressInformation>()
  fullname.vb: System.Linq.Enumerable.LongCount(Of System.Net.NetworkInformation.GatewayIPAddressInformation)()
  name.vb: LongCount(Of GatewayIPAddressInformation)()
  spec.csharp:
  - uid: System.Linq.Enumerable.LongCount``1
    name: LongCount<GatewayIPAddressInformation>
    fullName: System.Linq.Enumerable.LongCount<System.Net.NetworkInformation.GatewayIPAddressInformation>
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Linq.Enumerable.LongCount``1
    name: LongCount(Of GatewayIPAddressInformation)
    fullName: System.Linq.Enumerable.LongCount(Of System.Net.NetworkInformation.GatewayIPAddressInformation)
  - name: (
    fullName: (
  - name: )
    fullName: )
  nameWithType: Enumerable.LongCount<GatewayIPAddressInformation>()
  nameWithType.vb: Enumerable.LongCount(Of GatewayIPAddressInformation)()
  commentId: M:System.Linq.Enumerable.LongCount``1(System.Collections.Generic.IEnumerable{``0})
- uid: System.Collections.Generic.IEnumerable{System.Net.NetworkInformation.GatewayIPAddressInformation}.System.Linq.Enumerable.LongCount``1(System.Func{System.Net.NetworkInformation.GatewayIPAddressInformation,System.Boolean})
  parent: System.Linq.Enumerable
  definition: System.Linq.Enumerable.LongCount``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})
  name: LongCount<GatewayIPAddressInformation>(Func<GatewayIPAddressInformation, Boolean>)
  fullName: System.Linq.Enumerable.LongCount<System.Net.NetworkInformation.GatewayIPAddressInformation>(System.Func<System.Net.NetworkInformation.GatewayIPAddressInformation, System.Boolean>)
  fullname.vb: System.Linq.Enumerable.LongCount(Of System.Net.NetworkInformation.GatewayIPAddressInformation)(System.Func(Of System.Net.NetworkInformation.GatewayIPAddressInformation, System.Boolean))
  name.vb: LongCount(Of GatewayIPAddressInformation)(Func(Of GatewayIPAddressInformation, Boolean))
  spec.csharp:
  - uid: System.Linq.Enumerable.LongCount``1(System.Func{``0,System.Boolean})
    name: LongCount<GatewayIPAddressInformation>
    fullName: System.Linq.Enumerable.LongCount<System.Net.NetworkInformation.GatewayIPAddressInformation>
  - name: (
    fullName: (
  - uid: System.Func`2
    name: Func
    fullName: System.Func
    isExternal: true
  - name: <
    fullName: <
  - uid: System.Net.NetworkInformation.GatewayIPAddressInformation
    name: GatewayIPAddressInformation
    fullName: System.Net.NetworkInformation.GatewayIPAddressInformation
  - name: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: '>'
    fullName: '>'
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Linq.Enumerable.LongCount``1(System.Func{``0,System.Boolean})
    name: LongCount(Of GatewayIPAddressInformation)
    fullName: System.Linq.Enumerable.LongCount(Of System.Net.NetworkInformation.GatewayIPAddressInformation)
  - name: (
    fullName: (
  - uid: System.Func`2
    name: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - uid: System.Net.NetworkInformation.GatewayIPAddressInformation
    name: GatewayIPAddressInformation
    fullName: System.Net.NetworkInformation.GatewayIPAddressInformation
  - name: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    fullName: )
  - name: )
    fullName: )
  nameWithType: Enumerable.LongCount<GatewayIPAddressInformation>(Func<GatewayIPAddressInformation, Boolean>)
  nameWithType.vb: Enumerable.LongCount(Of GatewayIPAddressInformation)(Func(Of GatewayIPAddressInformation, Boolean))
  commentId: M:System.Linq.Enumerable.LongCount``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})
- uid: System.Collections.Generic.IEnumerable{System.Net.NetworkInformation.GatewayIPAddressInformation}.System.Linq.Enumerable.Max``1
  parent: System.Linq.Enumerable
  definition: System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0})
  name: Max<GatewayIPAddressInformation>()
  fullName: System.Linq.Enumerable.Max<System.Net.NetworkInformation.GatewayIPAddressInformation>()
  fullname.vb: System.Linq.Enumerable.Max(Of System.Net.NetworkInformation.GatewayIPAddressInformation)()
  name.vb: Max(Of GatewayIPAddressInformation)()
  spec.csharp:
  - uid: System.Linq.Enumerable.Max``1
    name: Max<GatewayIPAddressInformation>
    fullName: System.Linq.Enumerable.Max<System.Net.NetworkInformation.GatewayIPAddressInformation>
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Linq.Enumerable.Max``1
    name: Max(Of GatewayIPAddressInformation)
    fullName: System.Linq.Enumerable.Max(Of System.Net.NetworkInformation.GatewayIPAddressInformation)
  - name: (
    fullName: (
  - name: )
    fullName: )
  nameWithType: Enumerable.Max<GatewayIPAddressInformation>()
  nameWithType.vb: Enumerable.Max(Of GatewayIPAddressInformation)()
  commentId: M:System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0})
- uid: System.Collections.Generic.IEnumerable{System.Net.NetworkInformation.GatewayIPAddressInformation}.System.Linq.Enumerable.Max``1(System.Func{System.Net.NetworkInformation.GatewayIPAddressInformation,System.Decimal})
  parent: System.Linq.Enumerable
  definition: System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Decimal})
  name: Max<GatewayIPAddressInformation>(Func<GatewayIPAddressInformation, Decimal>)
  fullName: System.Linq.Enumerable.Max<System.Net.NetworkInformation.GatewayIPAddressInformation>(System.Func<System.Net.NetworkInformation.GatewayIPAddressInformation, System.Decimal>)
  fullname.vb: System.Linq.Enumerable.Max(Of System.Net.NetworkInformation.GatewayIPAddressInformation)(System.Func(Of System.Net.NetworkInformation.GatewayIPAddressInformation, System.Decimal))
  name.vb: Max(Of GatewayIPAddressInformation)(Func(Of GatewayIPAddressInformation, Decimal))
  spec.csharp:
  - uid: System.Linq.Enumerable.Max``1(System.Func{``0,System.Decimal})
    name: Max<GatewayIPAddressInformation>
    fullName: System.Linq.Enumerable.Max<System.Net.NetworkInformation.GatewayIPAddressInformation>
  - name: (
    fullName: (
  - uid: System.Func`2
    name: Func
    fullName: System.Func
    isExternal: true
  - name: <
    fullName: <
  - uid: System.Net.NetworkInformation.GatewayIPAddressInformation
    name: GatewayIPAddressInformation
    fullName: System.Net.NetworkInformation.GatewayIPAddressInformation
  - name: ', '
    fullName: ', '
  - uid: System.Decimal
    name: Decimal
    fullName: System.Decimal
    isExternal: true
  - name: '>'
    fullName: '>'
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Linq.Enumerable.Max``1(System.Func{``0,System.Decimal})
    name: Max(Of GatewayIPAddressInformation)
    fullName: System.Linq.Enumerable.Max(Of System.Net.NetworkInformation.GatewayIPAddressInformation)
  - name: (
    fullName: (
  - uid: System.Func`2
    name: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - uid: System.Net.NetworkInformation.GatewayIPAddressInformation
    name: GatewayIPAddressInformation
    fullName: System.Net.NetworkInformation.GatewayIPAddressInformation
  - name: ', '
    fullName: ', '
  - uid: System.Decimal
    name: Decimal
    fullName: System.Decimal
    isExternal: true
  - name: )
    fullName: )
  - name: )
    fullName: )
  nameWithType: Enumerable.Max<GatewayIPAddressInformation>(Func<GatewayIPAddressInformation, Decimal>)
  nameWithType.vb: Enumerable.Max(Of GatewayIPAddressInformation)(Func(Of GatewayIPAddressInformation, Decimal))
  commentId: M:System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Decimal})
- uid: System.Collections.Generic.IEnumerable{System.Net.NetworkInformation.GatewayIPAddressInformation}.System.Linq.Enumerable.Max``1(System.Func{System.Net.NetworkInformation.GatewayIPAddressInformation,System.Double})
  parent: System.Linq.Enumerable
  definition: System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Double})
  name: Max<GatewayIPAddressInformation>(Func<GatewayIPAddressInformation, Double>)
  fullName: System.Linq.Enumerable.Max<System.Net.NetworkInformation.GatewayIPAddressInformation>(System.Func<System.Net.NetworkInformation.GatewayIPAddressInformation, System.Double>)
  fullname.vb: System.Linq.Enumerable.Max(Of System.Net.NetworkInformation.GatewayIPAddressInformation)(System.Func(Of System.Net.NetworkInformation.GatewayIPAddressInformation, System.Double))
  name.vb: Max(Of GatewayIPAddressInformation)(Func(Of GatewayIPAddressInformation, Double))
  spec.csharp:
  - uid: System.Linq.Enumerable.Max``1(System.Func{``0,System.Double})
    name: Max<GatewayIPAddressInformation>
    fullName: System.Linq.Enumerable.Max<System.Net.NetworkInformation.GatewayIPAddressInformation>
  - name: (
    fullName: (
  - uid: System.Func`2
    name: Func
    fullName: System.Func
    isExternal: true
  - name: <
    fullName: <
  - uid: System.Net.NetworkInformation.GatewayIPAddressInformation
    name: GatewayIPAddressInformation
    fullName: System.Net.NetworkInformation.GatewayIPAddressInformation
  - name: ', '
    fullName: ', '
  - uid: System.Double
    name: Double
    fullName: System.Double
    isExternal: true
  - name: '>'
    fullName: '>'
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Linq.Enumerable.Max``1(System.Func{``0,System.Double})
    name: Max(Of GatewayIPAddressInformation)
    fullName: System.Linq.Enumerable.Max(Of System.Net.NetworkInformation.GatewayIPAddressInformation)
  - name: (
    fullName: (
  - uid: System.Func`2
    name: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - uid: System.Net.NetworkInformation.GatewayIPAddressInformation
    name: GatewayIPAddressInformation
    fullName: System.Net.NetworkInformation.GatewayIPAddressInformation
  - name: ', '
    fullName: ', '
  - uid: System.Double
    name: Double
    fullName: System.Double
    isExternal: true
  - name: )
    fullName: )
  - name: )
    fullName: )
  nameWithType: Enumerable.Max<GatewayIPAddressInformation>(Func<GatewayIPAddressInformation, Double>)
  nameWithType.vb: Enumerable.Max(Of GatewayIPAddressInformation)(Func(Of GatewayIPAddressInformation, Double))
  commentId: M:System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Double})
- uid: System.Collections.Generic.IEnumerable{System.Net.NetworkInformation.GatewayIPAddressInformation}.System.Linq.Enumerable.Max``1(System.Func{System.Net.NetworkInformation.GatewayIPAddressInformation,System.Int32})
  parent: System.Linq.Enumerable
  definition: System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32})
  name: Max<GatewayIPAddressInformation>(Func<GatewayIPAddressInformation, Int32>)
  fullName: System.Linq.Enumerable.Max<System.Net.NetworkInformation.GatewayIPAddressInformation>(System.Func<System.Net.NetworkInformation.GatewayIPAddressInformation, System.Int32>)
  fullname.vb: System.Linq.Enumerable.Max(Of System.Net.NetworkInformation.GatewayIPAddressInformation)(System.Func(Of System.Net.NetworkInformation.GatewayIPAddressInformation, System.Int32))
  name.vb: Max(Of GatewayIPAddressInformation)(Func(Of GatewayIPAddressInformation, Int32))
  spec.csharp:
  - uid: System.Linq.Enumerable.Max``1(System.Func{``0,System.Int32})
    name: Max<GatewayIPAddressInformation>
    fullName: System.Linq.Enumerable.Max<System.Net.NetworkInformation.GatewayIPAddressInformation>
  - name: (
    fullName: (
  - uid: System.Func`2
    name: Func
    fullName: System.Func
    isExternal: true
  - name: <
    fullName: <
  - uid: System.Net.NetworkInformation.GatewayIPAddressInformation
    name: GatewayIPAddressInformation
    fullName: System.Net.NetworkInformation.GatewayIPAddressInformation
  - name: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    fullName: System.Int32
    isExternal: true
  - name: '>'
    fullName: '>'
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Linq.Enumerable.Max``1(System.Func{``0,System.Int32})
    name: Max(Of GatewayIPAddressInformation)
    fullName: System.Linq.Enumerable.Max(Of System.Net.NetworkInformation.GatewayIPAddressInformation)
  - name: (
    fullName: (
  - uid: System.Func`2
    name: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - uid: System.Net.NetworkInformation.GatewayIPAddressInformation
    name: GatewayIPAddressInformation
    fullName: System.Net.NetworkInformation.GatewayIPAddressInformation
  - name: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    fullName: )
  - name: )
    fullName: )
  nameWithType: Enumerable.Max<GatewayIPAddressInformation>(Func<GatewayIPAddressInformation, Int32>)
  nameWithType.vb: Enumerable.Max(Of GatewayIPAddressInformation)(Func(Of GatewayIPAddressInformation, Int32))
  commentId: M:System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32})
- uid: System.Collections.Generic.IEnumerable{System.Net.NetworkInformation.GatewayIPAddressInformation}.System.Linq.Enumerable.Max``1(System.Func{System.Net.NetworkInformation.GatewayIPAddressInformation,System.Int64})
  parent: System.Linq.Enumerable
  definition: System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int64})
  name: Max<GatewayIPAddressInformation>(Func<GatewayIPAddressInformation, Int64>)
  fullName: System.Linq.Enumerable.Max<System.Net.NetworkInformation.GatewayIPAddressInformation>(System.Func<System.Net.NetworkInformation.GatewayIPAddressInformation, System.Int64>)
  fullname.vb: System.Linq.Enumerable.Max(Of System.Net.NetworkInformation.GatewayIPAddressInformation)(System.Func(Of System.Net.NetworkInformation.GatewayIPAddressInformation, System.Int64))
  name.vb: Max(Of GatewayIPAddressInformation)(Func(Of GatewayIPAddressInformation, Int64))
  spec.csharp:
  - uid: System.Linq.Enumerable.Max``1(System.Func{``0,System.Int64})
    name: Max<GatewayIPAddressInformation>
    fullName: System.Linq.Enumerable.Max<System.Net.NetworkInformation.GatewayIPAddressInformation>
  - name: (
    fullName: (
  - uid: System.Func`2
    name: Func
    fullName: System.Func
    isExternal: true
  - name: <
    fullName: <
  - uid: System.Net.NetworkInformation.GatewayIPAddressInformation
    name: GatewayIPAddressInformation
    fullName: System.Net.NetworkInformation.GatewayIPAddressInformation
  - name: ', '
    fullName: ', '
  - uid: System.Int64
    name: Int64
    fullName: System.Int64
    isExternal: true
  - name: '>'
    fullName: '>'
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Linq.Enumerable.Max``1(System.Func{``0,System.Int64})
    name: Max(Of GatewayIPAddressInformation)
    fullName: System.Linq.Enumerable.Max(Of System.Net.NetworkInformation.GatewayIPAddressInformation)
  - name: (
    fullName: (
  - uid: System.Func`2
    name: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - uid: System.Net.NetworkInformation.GatewayIPAddressInformation
    name: GatewayIPAddressInformation
    fullName: System.Net.NetworkInformation.GatewayIPAddressInformation
  - name: ', '
    fullName: ', '
  - uid: System.Int64
    name: Int64
    fullName: System.Int64
    isExternal: true
  - name: )
    fullName: )
  - name: )
    fullName: )
  nameWithType: Enumerable.Max<GatewayIPAddressInformation>(Func<GatewayIPAddressInformation, Int64>)
  nameWithType.vb: Enumerable.Max(Of GatewayIPAddressInformation)(Func(Of GatewayIPAddressInformation, Int64))
  commentId: M:System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int64})
- uid: System.Collections.Generic.IEnumerable{System.Net.NetworkInformation.GatewayIPAddressInformation}.System.Linq.Enumerable.Max``1(System.Func{System.Net.NetworkInformation.GatewayIPAddressInformation,System.Nullable{System.Decimal}})
  parent: System.Linq.Enumerable
  definition: System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Decimal}})
  name: Max<GatewayIPAddressInformation>(Func<GatewayIPAddressInformation, Nullable<Decimal>>)
  fullName: System.Linq.Enumerable.Max<System.Net.NetworkInformation.GatewayIPAddressInformation>(System.Func<System.Net.NetworkInformation.GatewayIPAddressInformation, System.Nullable<System.Decimal>>)
  fullname.vb: System.Linq.Enumerable.Max(Of System.Net.NetworkInformation.GatewayIPAddressInformation)(System.Func(Of System.Net.NetworkInformation.GatewayIPAddressInformation, System.Nullable(Of System.Decimal)))
  name.vb: Max(Of GatewayIPAddressInformation)(Func(Of GatewayIPAddressInformation, Nullable(Of Decimal)))
  spec.csharp:
  - uid: System.Linq.Enumerable.Max``1(System.Func{``0,System.Nullable{System.Decimal}})
    name: Max<GatewayIPAddressInformation>
    fullName: System.Linq.Enumerable.Max<System.Net.NetworkInformation.GatewayIPAddressInformation>
  - name: (
    fullName: (
  - uid: System.Func`2
    name: Func
    fullName: System.Func
    isExternal: true
  - name: <
    fullName: <
  - uid: System.Net.NetworkInformation.GatewayIPAddressInformation
    name: GatewayIPAddressInformation
    fullName: System.Net.NetworkInformation.GatewayIPAddressInformation
  - name: ', '
    fullName: ', '
  - uid: System.Nullable`1
    name: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    fullName: <
  - uid: System.Decimal
    name: Decimal
    fullName: System.Decimal
    isExternal: true
  - name: '>'
    fullName: '>'
  - name: '>'
    fullName: '>'
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Linq.Enumerable.Max``1(System.Func{``0,System.Nullable{System.Decimal}})
    name: Max(Of GatewayIPAddressInformation)
    fullName: System.Linq.Enumerable.Max(Of System.Net.NetworkInformation.GatewayIPAddressInformation)
  - name: (
    fullName: (
  - uid: System.Func`2
    name: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - uid: System.Net.NetworkInformation.GatewayIPAddressInformation
    name: GatewayIPAddressInformation
    fullName: System.Net.NetworkInformation.GatewayIPAddressInformation
  - name: ', '
    fullName: ', '
  - uid: System.Nullable`1
    name: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - uid: System.Decimal
    name: Decimal
    fullName: System.Decimal
    isExternal: true
  - name: )
    fullName: )
  - name: )
    fullName: )
  - name: )
    fullName: )
  nameWithType: Enumerable.Max<GatewayIPAddressInformation>(Func<GatewayIPAddressInformation, Nullable<Decimal>>)
  nameWithType.vb: Enumerable.Max(Of GatewayIPAddressInformation)(Func(Of GatewayIPAddressInformation, Nullable(Of Decimal)))
  commentId: M:System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Decimal}})
- uid: System.Collections.Generic.IEnumerable{System.Net.NetworkInformation.GatewayIPAddressInformation}.System.Linq.Enumerable.Max``1(System.Func{System.Net.NetworkInformation.GatewayIPAddressInformation,System.Nullable{System.Double}})
  parent: System.Linq.Enumerable
  definition: System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Double}})
  name: Max<GatewayIPAddressInformation>(Func<GatewayIPAddressInformation, Nullable<Double>>)
  fullName: System.Linq.Enumerable.Max<System.Net.NetworkInformation.GatewayIPAddressInformation>(System.Func<System.Net.NetworkInformation.GatewayIPAddressInformation, System.Nullable<System.Double>>)
  fullname.vb: System.Linq.Enumerable.Max(Of System.Net.NetworkInformation.GatewayIPAddressInformation)(System.Func(Of System.Net.NetworkInformation.GatewayIPAddressInformation, System.Nullable(Of System.Double)))
  name.vb: Max(Of GatewayIPAddressInformation)(Func(Of GatewayIPAddressInformation, Nullable(Of Double)))
  spec.csharp:
  - uid: System.Linq.Enumerable.Max``1(System.Func{``0,System.Nullable{System.Double}})
    name: Max<GatewayIPAddressInformation>
    fullName: System.Linq.Enumerable.Max<System.Net.NetworkInformation.GatewayIPAddressInformation>
  - name: (
    fullName: (
  - uid: System.Func`2
    name: Func
    fullName: System.Func
    isExternal: true
  - name: <
    fullName: <
  - uid: System.Net.NetworkInformation.GatewayIPAddressInformation
    name: GatewayIPAddressInformation
    fullName: System.Net.NetworkInformation.GatewayIPAddressInformation
  - name: ', '
    fullName: ', '
  - uid: System.Nullable`1
    name: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    fullName: <
  - uid: System.Double
    name: Double
    fullName: System.Double
    isExternal: true
  - name: '>'
    fullName: '>'
  - name: '>'
    fullName: '>'
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Linq.Enumerable.Max``1(System.Func{``0,System.Nullable{System.Double}})
    name: Max(Of GatewayIPAddressInformation)
    fullName: System.Linq.Enumerable.Max(Of System.Net.NetworkInformation.GatewayIPAddressInformation)
  - name: (
    fullName: (
  - uid: System.Func`2
    name: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - uid: System.Net.NetworkInformation.GatewayIPAddressInformation
    name: GatewayIPAddressInformation
    fullName: System.Net.NetworkInformation.GatewayIPAddressInformation
  - name: ', '
    fullName: ', '
  - uid: System.Nullable`1
    name: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - uid: System.Double
    name: Double
    fullName: System.Double
    isExternal: true
  - name: )
    fullName: )
  - name: )
    fullName: )
  - name: )
    fullName: )
  nameWithType: Enumerable.Max<GatewayIPAddressInformation>(Func<GatewayIPAddressInformation, Nullable<Double>>)
  nameWithType.vb: Enumerable.Max(Of GatewayIPAddressInformation)(Func(Of GatewayIPAddressInformation, Nullable(Of Double)))
  commentId: M:System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Double}})
- uid: System.Collections.Generic.IEnumerable{System.Net.NetworkInformation.GatewayIPAddressInformation}.System.Linq.Enumerable.Max``1(System.Func{System.Net.NetworkInformation.GatewayIPAddressInformation,System.Nullable{System.Int32}})
  parent: System.Linq.Enumerable
  definition: System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Int32}})
  name: Max<GatewayIPAddressInformation>(Func<GatewayIPAddressInformation, Nullable<Int32>>)
  fullName: System.Linq.Enumerable.Max<System.Net.NetworkInformation.GatewayIPAddressInformation>(System.Func<System.Net.NetworkInformation.GatewayIPAddressInformation, System.Nullable<System.Int32>>)
  fullname.vb: System.Linq.Enumerable.Max(Of System.Net.NetworkInformation.GatewayIPAddressInformation)(System.Func(Of System.Net.NetworkInformation.GatewayIPAddressInformation, System.Nullable(Of System.Int32)))
  name.vb: Max(Of GatewayIPAddressInformation)(Func(Of GatewayIPAddressInformation, Nullable(Of Int32)))
  spec.csharp:
  - uid: System.Linq.Enumerable.Max``1(System.Func{``0,System.Nullable{System.Int32}})
    name: Max<GatewayIPAddressInformation>
    fullName: System.Linq.Enumerable.Max<System.Net.NetworkInformation.GatewayIPAddressInformation>
  - name: (
    fullName: (
  - uid: System.Func`2
    name: Func
    fullName: System.Func
    isExternal: true
  - name: <
    fullName: <
  - uid: System.Net.NetworkInformation.GatewayIPAddressInformation
    name: GatewayIPAddressInformation
    fullName: System.Net.NetworkInformation.GatewayIPAddressInformation
  - name: ', '
    fullName: ', '
  - uid: System.Nullable`1
    name: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    fullName: <
  - uid: System.Int32
    name: Int32
    fullName: System.Int32
    isExternal: true
  - name: '>'
    fullName: '>'
  - name: '>'
    fullName: '>'
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Linq.Enumerable.Max``1(System.Func{``0,System.Nullable{System.Int32}})
    name: Max(Of GatewayIPAddressInformation)
    fullName: System.Linq.Enumerable.Max(Of System.Net.NetworkInformation.GatewayIPAddressInformation)
  - name: (
    fullName: (
  - uid: System.Func`2
    name: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - uid: System.Net.NetworkInformation.GatewayIPAddressInformation
    name: GatewayIPAddressInformation
    fullName: System.Net.NetworkInformation.GatewayIPAddressInformation
  - name: ', '
    fullName: ', '
  - uid: System.Nullable`1
    name: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - uid: System.Int32
    name: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    fullName: )
  - name: )
    fullName: )
  - name: )
    fullName: )
  nameWithType: Enumerable.Max<GatewayIPAddressInformation>(Func<GatewayIPAddressInformation, Nullable<Int32>>)
  nameWithType.vb: Enumerable.Max(Of GatewayIPAddressInformation)(Func(Of GatewayIPAddressInformation, Nullable(Of Int32)))
  commentId: M:System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Int32}})
- uid: System.Collections.Generic.IEnumerable{System.Net.NetworkInformation.GatewayIPAddressInformation}.System.Linq.Enumerable.Max``1(System.Func{System.Net.NetworkInformation.GatewayIPAddressInformation,System.Nullable{System.Int64}})
  parent: System.Linq.Enumerable
  definition: System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Int64}})
  name: Max<GatewayIPAddressInformation>(Func<GatewayIPAddressInformation, Nullable<Int64>>)
  fullName: System.Linq.Enumerable.Max<System.Net.NetworkInformation.GatewayIPAddressInformation>(System.Func<System.Net.NetworkInformation.GatewayIPAddressInformation, System.Nullable<System.Int64>>)
  fullname.vb: System.Linq.Enumerable.Max(Of System.Net.NetworkInformation.GatewayIPAddressInformation)(System.Func(Of System.Net.NetworkInformation.GatewayIPAddressInformation, System.Nullable(Of System.Int64)))
  name.vb: Max(Of GatewayIPAddressInformation)(Func(Of GatewayIPAddressInformation, Nullable(Of Int64)))
  spec.csharp:
  - uid: System.Linq.Enumerable.Max``1(System.Func{``0,System.Nullable{System.Int64}})
    name: Max<GatewayIPAddressInformation>
    fullName: System.Linq.Enumerable.Max<System.Net.NetworkInformation.GatewayIPAddressInformation>
  - name: (
    fullName: (
  - uid: System.Func`2
    name: Func
    fullName: System.Func
    isExternal: true
  - name: <
    fullName: <
  - uid: System.Net.NetworkInformation.GatewayIPAddressInformation
    name: GatewayIPAddressInformation
    fullName: System.Net.NetworkInformation.GatewayIPAddressInformation
  - name: ', '
    fullName: ', '
  - uid: System.Nullable`1
    name: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    fullName: <
  - uid: System.Int64
    name: Int64
    fullName: System.Int64
    isExternal: true
  - name: '>'
    fullName: '>'
  - name: '>'
    fullName: '>'
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Linq.Enumerable.Max``1(System.Func{``0,System.Nullable{System.Int64}})
    name: Max(Of GatewayIPAddressInformation)
    fullName: System.Linq.Enumerable.Max(Of System.Net.NetworkInformation.GatewayIPAddressInformation)
  - name: (
    fullName: (
  - uid: System.Func`2
    name: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - uid: System.Net.NetworkInformation.GatewayIPAddressInformation
    name: GatewayIPAddressInformation
    fullName: System.Net.NetworkInformation.GatewayIPAddressInformation
  - name: ', '
    fullName: ', '
  - uid: System.Nullable`1
    name: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - uid: System.Int64
    name: Int64
    fullName: System.Int64
    isExternal: true
  - name: )
    fullName: )
  - name: )
    fullName: )
  - name: )
    fullName: )
  nameWithType: Enumerable.Max<GatewayIPAddressInformation>(Func<GatewayIPAddressInformation, Nullable<Int64>>)
  nameWithType.vb: Enumerable.Max(Of GatewayIPAddressInformation)(Func(Of GatewayIPAddressInformation, Nullable(Of Int64)))
  commentId: M:System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Int64}})
- uid: System.Collections.Generic.IEnumerable{System.Net.NetworkInformation.GatewayIPAddressInformation}.System.Linq.Enumerable.Max``1(System.Func{System.Net.NetworkInformation.GatewayIPAddressInformation,System.Nullable{System.Single}})
  parent: System.Linq.Enumerable
  definition: System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Single}})
  name: Max<GatewayIPAddressInformation>(Func<GatewayIPAddressInformation, Nullable<Single>>)
  fullName: System.Linq.Enumerable.Max<System.Net.NetworkInformation.GatewayIPAddressInformation>(System.Func<System.Net.NetworkInformation.GatewayIPAddressInformation, System.Nullable<System.Single>>)
  fullname.vb: System.Linq.Enumerable.Max(Of System.Net.NetworkInformation.GatewayIPAddressInformation)(System.Func(Of System.Net.NetworkInformation.GatewayIPAddressInformation, System.Nullable(Of System.Single)))
  name.vb: Max(Of GatewayIPAddressInformation)(Func(Of GatewayIPAddressInformation, Nullable(Of Single)))
  spec.csharp:
  - uid: System.Linq.Enumerable.Max``1(System.Func{``0,System.Nullable{System.Single}})
    name: Max<GatewayIPAddressInformation>
    fullName: System.Linq.Enumerable.Max<System.Net.NetworkInformation.GatewayIPAddressInformation>
  - name: (
    fullName: (
  - uid: System.Func`2
    name: Func
    fullName: System.Func
    isExternal: true
  - name: <
    fullName: <
  - uid: System.Net.NetworkInformation.GatewayIPAddressInformation
    name: GatewayIPAddressInformation
    fullName: System.Net.NetworkInformation.GatewayIPAddressInformation
  - name: ', '
    fullName: ', '
  - uid: System.Nullable`1
    name: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    fullName: <
  - uid: System.Single
    name: Single
    fullName: System.Single
    isExternal: true
  - name: '>'
    fullName: '>'
  - name: '>'
    fullName: '>'
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Linq.Enumerable.Max``1(System.Func{``0,System.Nullable{System.Single}})
    name: Max(Of GatewayIPAddressInformation)
    fullName: System.Linq.Enumerable.Max(Of System.Net.NetworkInformation.GatewayIPAddressInformation)
  - name: (
    fullName: (
  - uid: System.Func`2
    name: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - uid: System.Net.NetworkInformation.GatewayIPAddressInformation
    name: GatewayIPAddressInformation
    fullName: System.Net.NetworkInformation.GatewayIPAddressInformation
  - name: ', '
    fullName: ', '
  - uid: System.Nullable`1
    name: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - uid: System.Single
    name: Single
    fullName: System.Single
    isExternal: true
  - name: )
    fullName: )
  - name: )
    fullName: )
  - name: )
    fullName: )
  nameWithType: Enumerable.Max<GatewayIPAddressInformation>(Func<GatewayIPAddressInformation, Nullable<Single>>)
  nameWithType.vb: Enumerable.Max(Of GatewayIPAddressInformation)(Func(Of GatewayIPAddressInformation, Nullable(Of Single)))
  commentId: M:System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Single}})
- uid: System.Collections.Generic.IEnumerable{System.Net.NetworkInformation.GatewayIPAddressInformation}.System.Linq.Enumerable.Max``1(System.Func{System.Net.NetworkInformation.GatewayIPAddressInformation,System.Single})
  parent: System.Linq.Enumerable
  definition: System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Single})
  name: Max<GatewayIPAddressInformation>(Func<GatewayIPAddressInformation, Single>)
  fullName: System.Linq.Enumerable.Max<System.Net.NetworkInformation.GatewayIPAddressInformation>(System.Func<System.Net.NetworkInformation.GatewayIPAddressInformation, System.Single>)
  fullname.vb: System.Linq.Enumerable.Max(Of System.Net.NetworkInformation.GatewayIPAddressInformation)(System.Func(Of System.Net.NetworkInformation.GatewayIPAddressInformation, System.Single))
  name.vb: Max(Of GatewayIPAddressInformation)(Func(Of GatewayIPAddressInformation, Single))
  spec.csharp:
  - uid: System.Linq.Enumerable.Max``1(System.Func{``0,System.Single})
    name: Max<GatewayIPAddressInformation>
    fullName: System.Linq.Enumerable.Max<System.Net.NetworkInformation.GatewayIPAddressInformation>
  - name: (
    fullName: (
  - uid: System.Func`2
    name: Func
    fullName: System.Func
    isExternal: true
  - name: <
    fullName: <
  - uid: System.Net.NetworkInformation.GatewayIPAddressInformation
    name: GatewayIPAddressInformation
    fullName: System.Net.NetworkInformation.GatewayIPAddressInformation
  - name: ', '
    fullName: ', '
  - uid: System.Single
    name: Single
    fullName: System.Single
    isExternal: true
  - name: '>'
    fullName: '>'
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Linq.Enumerable.Max``1(System.Func{``0,System.Single})
    name: Max(Of GatewayIPAddressInformation)
    fullName: System.Linq.Enumerable.Max(Of System.Net.NetworkInformation.GatewayIPAddressInformation)
  - name: (
    fullName: (
  - uid: System.Func`2
    name: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - uid: System.Net.NetworkInformation.GatewayIPAddressInformation
    name: GatewayIPAddressInformation
    fullName: System.Net.NetworkInformation.GatewayIPAddressInformation
  - name: ', '
    fullName: ', '
  - uid: System.Single
    name: Single
    fullName: System.Single
    isExternal: true
  - name: )
    fullName: )
  - name: )
    fullName: )
  nameWithType: Enumerable.Max<GatewayIPAddressInformation>(Func<GatewayIPAddressInformation, Single>)
  nameWithType.vb: Enumerable.Max(Of GatewayIPAddressInformation)(Func(Of GatewayIPAddressInformation, Single))
  commentId: M:System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Single})
- uid: System.Collections.Generic.IEnumerable{System.Net.NetworkInformation.GatewayIPAddressInformation}.System.Linq.Enumerable.Max``2(System.Func{System.Net.NetworkInformation.GatewayIPAddressInformation,{TResult}})
  parent: System.Linq.Enumerable
  definition: System.Linq.Enumerable.Max``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})
  name: Max<GatewayIPAddressInformation, TResult>(Func<GatewayIPAddressInformation, TResult>)
  fullName: System.Linq.Enumerable.Max<System.Net.NetworkInformation.GatewayIPAddressInformation, TResult>(System.Func<System.Net.NetworkInformation.GatewayIPAddressInformation, TResult>)
  fullname.vb: System.Linq.Enumerable.Max(Of System.Net.NetworkInformation.GatewayIPAddressInformation, TResult)(System.Func(Of System.Net.NetworkInformation.GatewayIPAddressInformation, TResult))
  name.vb: Max(Of GatewayIPAddressInformation, TResult)(Func(Of GatewayIPAddressInformation, TResult))
  spec.csharp:
  - uid: System.Linq.Enumerable.Max``2(System.Func{``0,``1})
    name: Max<GatewayIPAddressInformation, TResult>
    fullName: System.Linq.Enumerable.Max<System.Net.NetworkInformation.GatewayIPAddressInformation, TResult>
  - name: (
    fullName: (
  - uid: System.Func`2
    name: Func
    fullName: System.Func
    isExternal: true
  - name: <
    fullName: <
  - uid: System.Net.NetworkInformation.GatewayIPAddressInformation
    name: GatewayIPAddressInformation
    fullName: System.Net.NetworkInformation.GatewayIPAddressInformation
  - name: ', '
    fullName: ', '
  - name: TResult
    fullName: TResult
  - name: '>'
    fullName: '>'
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Linq.Enumerable.Max``2(System.Func{``0,``1})
    name: Max(Of GatewayIPAddressInformation, TResult)
    fullName: System.Linq.Enumerable.Max(Of System.Net.NetworkInformation.GatewayIPAddressInformation, TResult)
  - name: (
    fullName: (
  - uid: System.Func`2
    name: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - uid: System.Net.NetworkInformation.GatewayIPAddressInformation
    name: GatewayIPAddressInformation
    fullName: System.Net.NetworkInformation.GatewayIPAddressInformation
  - name: ', '
    fullName: ', '
  - name: TResult
    fullName: TResult
  - name: )
    fullName: )
  - name: )
    fullName: )
  nameWithType: Enumerable.Max<GatewayIPAddressInformation, TResult>(Func<GatewayIPAddressInformation, TResult>)
  nameWithType.vb: Enumerable.Max(Of GatewayIPAddressInformation, TResult)(Func(Of GatewayIPAddressInformation, TResult))
  commentId: M:System.Linq.Enumerable.Max``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})
- uid: System.Collections.Generic.IEnumerable{System.Net.NetworkInformation.GatewayIPAddressInformation}.System.Linq.Enumerable.Min``1
  parent: System.Linq.Enumerable
  definition: System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0})
  name: Min<GatewayIPAddressInformation>()
  fullName: System.Linq.Enumerable.Min<System.Net.NetworkInformation.GatewayIPAddressInformation>()
  fullname.vb: System.Linq.Enumerable.Min(Of System.Net.NetworkInformation.GatewayIPAddressInformation)()
  name.vb: Min(Of GatewayIPAddressInformation)()
  spec.csharp:
  - uid: System.Linq.Enumerable.Min``1
    name: Min<GatewayIPAddressInformation>
    fullName: System.Linq.Enumerable.Min<System.Net.NetworkInformation.GatewayIPAddressInformation>
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Linq.Enumerable.Min``1
    name: Min(Of GatewayIPAddressInformation)
    fullName: System.Linq.Enumerable.Min(Of System.Net.NetworkInformation.GatewayIPAddressInformation)
  - name: (
    fullName: (
  - name: )
    fullName: )
  nameWithType: Enumerable.Min<GatewayIPAddressInformation>()
  nameWithType.vb: Enumerable.Min(Of GatewayIPAddressInformation)()
  commentId: M:System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0})
- uid: System.Collections.Generic.IEnumerable{System.Net.NetworkInformation.GatewayIPAddressInformation}.System.Linq.Enumerable.Min``1(System.Func{System.Net.NetworkInformation.GatewayIPAddressInformation,System.Decimal})
  parent: System.Linq.Enumerable
  definition: System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Decimal})
  name: Min<GatewayIPAddressInformation>(Func<GatewayIPAddressInformation, Decimal>)
  fullName: System.Linq.Enumerable.Min<System.Net.NetworkInformation.GatewayIPAddressInformation>(System.Func<System.Net.NetworkInformation.GatewayIPAddressInformation, System.Decimal>)
  fullname.vb: System.Linq.Enumerable.Min(Of System.Net.NetworkInformation.GatewayIPAddressInformation)(System.Func(Of System.Net.NetworkInformation.GatewayIPAddressInformation, System.Decimal))
  name.vb: Min(Of GatewayIPAddressInformation)(Func(Of GatewayIPAddressInformation, Decimal))
  spec.csharp:
  - uid: System.Linq.Enumerable.Min``1(System.Func{``0,System.Decimal})
    name: Min<GatewayIPAddressInformation>
    fullName: System.Linq.Enumerable.Min<System.Net.NetworkInformation.GatewayIPAddressInformation>
  - name: (
    fullName: (
  - uid: System.Func`2
    name: Func
    fullName: System.Func
    isExternal: true
  - name: <
    fullName: <
  - uid: System.Net.NetworkInformation.GatewayIPAddressInformation
    name: GatewayIPAddressInformation
    fullName: System.Net.NetworkInformation.GatewayIPAddressInformation
  - name: ', '
    fullName: ', '
  - uid: System.Decimal
    name: Decimal
    fullName: System.Decimal
    isExternal: true
  - name: '>'
    fullName: '>'
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Linq.Enumerable.Min``1(System.Func{``0,System.Decimal})
    name: Min(Of GatewayIPAddressInformation)
    fullName: System.Linq.Enumerable.Min(Of System.Net.NetworkInformation.GatewayIPAddressInformation)
  - name: (
    fullName: (
  - uid: System.Func`2
    name: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - uid: System.Net.NetworkInformation.GatewayIPAddressInformation
    name: GatewayIPAddressInformation
    fullName: System.Net.NetworkInformation.GatewayIPAddressInformation
  - name: ', '
    fullName: ', '
  - uid: System.Decimal
    name: Decimal
    fullName: System.Decimal
    isExternal: true
  - name: )
    fullName: )
  - name: )
    fullName: )
  nameWithType: Enumerable.Min<GatewayIPAddressInformation>(Func<GatewayIPAddressInformation, Decimal>)
  nameWithType.vb: Enumerable.Min(Of GatewayIPAddressInformation)(Func(Of GatewayIPAddressInformation, Decimal))
  commentId: M:System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Decimal})
- uid: System.Collections.Generic.IEnumerable{System.Net.NetworkInformation.GatewayIPAddressInformation}.System.Linq.Enumerable.Min``1(System.Func{System.Net.NetworkInformation.GatewayIPAddressInformation,System.Double})
  parent: System.Linq.Enumerable
  definition: System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Double})
  name: Min<GatewayIPAddressInformation>(Func<GatewayIPAddressInformation, Double>)
  fullName: System.Linq.Enumerable.Min<System.Net.NetworkInformation.GatewayIPAddressInformation>(System.Func<System.Net.NetworkInformation.GatewayIPAddressInformation, System.Double>)
  fullname.vb: System.Linq.Enumerable.Min(Of System.Net.NetworkInformation.GatewayIPAddressInformation)(System.Func(Of System.Net.NetworkInformation.GatewayIPAddressInformation, System.Double))
  name.vb: Min(Of GatewayIPAddressInformation)(Func(Of GatewayIPAddressInformation, Double))
  spec.csharp:
  - uid: System.Linq.Enumerable.Min``1(System.Func{``0,System.Double})
    name: Min<GatewayIPAddressInformation>
    fullName: System.Linq.Enumerable.Min<System.Net.NetworkInformation.GatewayIPAddressInformation>
  - name: (
    fullName: (
  - uid: System.Func`2
    name: Func
    fullName: System.Func
    isExternal: true
  - name: <
    fullName: <
  - uid: System.Net.NetworkInformation.GatewayIPAddressInformation
    name: GatewayIPAddressInformation
    fullName: System.Net.NetworkInformation.GatewayIPAddressInformation
  - name: ', '
    fullName: ', '
  - uid: System.Double
    name: Double
    fullName: System.Double
    isExternal: true
  - name: '>'
    fullName: '>'
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Linq.Enumerable.Min``1(System.Func{``0,System.Double})
    name: Min(Of GatewayIPAddressInformation)
    fullName: System.Linq.Enumerable.Min(Of System.Net.NetworkInformation.GatewayIPAddressInformation)
  - name: (
    fullName: (
  - uid: System.Func`2
    name: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - uid: System.Net.NetworkInformation.GatewayIPAddressInformation
    name: GatewayIPAddressInformation
    fullName: System.Net.NetworkInformation.GatewayIPAddressInformation
  - name: ', '
    fullName: ', '
  - uid: System.Double
    name: Double
    fullName: System.Double
    isExternal: true
  - name: )
    fullName: )
  - name: )
    fullName: )
  nameWithType: Enumerable.Min<GatewayIPAddressInformation>(Func<GatewayIPAddressInformation, Double>)
  nameWithType.vb: Enumerable.Min(Of GatewayIPAddressInformation)(Func(Of GatewayIPAddressInformation, Double))
  commentId: M:System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Double})
- uid: System.Collections.Generic.IEnumerable{System.Net.NetworkInformation.GatewayIPAddressInformation}.System.Linq.Enumerable.Min``1(System.Func{System.Net.NetworkInformation.GatewayIPAddressInformation,System.Int32})
  parent: System.Linq.Enumerable
  definition: System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32})
  name: Min<GatewayIPAddressInformation>(Func<GatewayIPAddressInformation, Int32>)
  fullName: System.Linq.Enumerable.Min<System.Net.NetworkInformation.GatewayIPAddressInformation>(System.Func<System.Net.NetworkInformation.GatewayIPAddressInformation, System.Int32>)
  fullname.vb: System.Linq.Enumerable.Min(Of System.Net.NetworkInformation.GatewayIPAddressInformation)(System.Func(Of System.Net.NetworkInformation.GatewayIPAddressInformation, System.Int32))
  name.vb: Min(Of GatewayIPAddressInformation)(Func(Of GatewayIPAddressInformation, Int32))
  spec.csharp:
  - uid: System.Linq.Enumerable.Min``1(System.Func{``0,System.Int32})
    name: Min<GatewayIPAddressInformation>
    fullName: System.Linq.Enumerable.Min<System.Net.NetworkInformation.GatewayIPAddressInformation>
  - name: (
    fullName: (
  - uid: System.Func`2
    name: Func
    fullName: System.Func
    isExternal: true
  - name: <
    fullName: <
  - uid: System.Net.NetworkInformation.GatewayIPAddressInformation
    name: GatewayIPAddressInformation
    fullName: System.Net.NetworkInformation.GatewayIPAddressInformation
  - name: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    fullName: System.Int32
    isExternal: true
  - name: '>'
    fullName: '>'
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Linq.Enumerable.Min``1(System.Func{``0,System.Int32})
    name: Min(Of GatewayIPAddressInformation)
    fullName: System.Linq.Enumerable.Min(Of System.Net.NetworkInformation.GatewayIPAddressInformation)
  - name: (
    fullName: (
  - uid: System.Func`2
    name: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - uid: System.Net.NetworkInformation.GatewayIPAddressInformation
    name: GatewayIPAddressInformation
    fullName: System.Net.NetworkInformation.GatewayIPAddressInformation
  - name: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    fullName: )
  - name: )
    fullName: )
  nameWithType: Enumerable.Min<GatewayIPAddressInformation>(Func<GatewayIPAddressInformation, Int32>)
  nameWithType.vb: Enumerable.Min(Of GatewayIPAddressInformation)(Func(Of GatewayIPAddressInformation, Int32))
  commentId: M:System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32})
- uid: System.Collections.Generic.IEnumerable{System.Net.NetworkInformation.GatewayIPAddressInformation}.System.Linq.Enumerable.Min``1(System.Func{System.Net.NetworkInformation.GatewayIPAddressInformation,System.Int64})
  parent: System.Linq.Enumerable
  definition: System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int64})
  name: Min<GatewayIPAddressInformation>(Func<GatewayIPAddressInformation, Int64>)
  fullName: System.Linq.Enumerable.Min<System.Net.NetworkInformation.GatewayIPAddressInformation>(System.Func<System.Net.NetworkInformation.GatewayIPAddressInformation, System.Int64>)
  fullname.vb: System.Linq.Enumerable.Min(Of System.Net.NetworkInformation.GatewayIPAddressInformation)(System.Func(Of System.Net.NetworkInformation.GatewayIPAddressInformation, System.Int64))
  name.vb: Min(Of GatewayIPAddressInformation)(Func(Of GatewayIPAddressInformation, Int64))
  spec.csharp:
  - uid: System.Linq.Enumerable.Min``1(System.Func{``0,System.Int64})
    name: Min<GatewayIPAddressInformation>
    fullName: System.Linq.Enumerable.Min<System.Net.NetworkInformation.GatewayIPAddressInformation>
  - name: (
    fullName: (
  - uid: System.Func`2
    name: Func
    fullName: System.Func
    isExternal: true
  - name: <
    fullName: <
  - uid: System.Net.NetworkInformation.GatewayIPAddressInformation
    name: GatewayIPAddressInformation
    fullName: System.Net.NetworkInformation.GatewayIPAddressInformation
  - name: ', '
    fullName: ', '
  - uid: System.Int64
    name: Int64
    fullName: System.Int64
    isExternal: true
  - name: '>'
    fullName: '>'
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Linq.Enumerable.Min``1(System.Func{``0,System.Int64})
    name: Min(Of GatewayIPAddressInformation)
    fullName: System.Linq.Enumerable.Min(Of System.Net.NetworkInformation.GatewayIPAddressInformation)
  - name: (
    fullName: (
  - uid: System.Func`2
    name: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - uid: System.Net.NetworkInformation.GatewayIPAddressInformation
    name: GatewayIPAddressInformation
    fullName: System.Net.NetworkInformation.GatewayIPAddressInformation
  - name: ', '
    fullName: ', '
  - uid: System.Int64
    name: Int64
    fullName: System.Int64
    isExternal: true
  - name: )
    fullName: )
  - name: )
    fullName: )
  nameWithType: Enumerable.Min<GatewayIPAddressInformation>(Func<GatewayIPAddressInformation, Int64>)
  nameWithType.vb: Enumerable.Min(Of GatewayIPAddressInformation)(Func(Of GatewayIPAddressInformation, Int64))
  commentId: M:System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int64})
- uid: System.Collections.Generic.IEnumerable{System.Net.NetworkInformation.GatewayIPAddressInformation}.System.Linq.Enumerable.Min``1(System.Func{System.Net.NetworkInformation.GatewayIPAddressInformation,System.Nullable{System.Decimal}})
  parent: System.Linq.Enumerable
  definition: System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Decimal}})
  name: Min<GatewayIPAddressInformation>(Func<GatewayIPAddressInformation, Nullable<Decimal>>)
  fullName: System.Linq.Enumerable.Min<System.Net.NetworkInformation.GatewayIPAddressInformation>(System.Func<System.Net.NetworkInformation.GatewayIPAddressInformation, System.Nullable<System.Decimal>>)
  fullname.vb: System.Linq.Enumerable.Min(Of System.Net.NetworkInformation.GatewayIPAddressInformation)(System.Func(Of System.Net.NetworkInformation.GatewayIPAddressInformation, System.Nullable(Of System.Decimal)))
  name.vb: Min(Of GatewayIPAddressInformation)(Func(Of GatewayIPAddressInformation, Nullable(Of Decimal)))
  spec.csharp:
  - uid: System.Linq.Enumerable.Min``1(System.Func{``0,System.Nullable{System.Decimal}})
    name: Min<GatewayIPAddressInformation>
    fullName: System.Linq.Enumerable.Min<System.Net.NetworkInformation.GatewayIPAddressInformation>
  - name: (
    fullName: (
  - uid: System.Func`2
    name: Func
    fullName: System.Func
    isExternal: true
  - name: <
    fullName: <
  - uid: System.Net.NetworkInformation.GatewayIPAddressInformation
    name: GatewayIPAddressInformation
    fullName: System.Net.NetworkInformation.GatewayIPAddressInformation
  - name: ', '
    fullName: ', '
  - uid: System.Nullable`1
    name: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    fullName: <
  - uid: System.Decimal
    name: Decimal
    fullName: System.Decimal
    isExternal: true
  - name: '>'
    fullName: '>'
  - name: '>'
    fullName: '>'
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Linq.Enumerable.Min``1(System.Func{``0,System.Nullable{System.Decimal}})
    name: Min(Of GatewayIPAddressInformation)
    fullName: System.Linq.Enumerable.Min(Of System.Net.NetworkInformation.GatewayIPAddressInformation)
  - name: (
    fullName: (
  - uid: System.Func`2
    name: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - uid: System.Net.NetworkInformation.GatewayIPAddressInformation
    name: GatewayIPAddressInformation
    fullName: System.Net.NetworkInformation.GatewayIPAddressInformation
  - name: ', '
    fullName: ', '
  - uid: System.Nullable`1
    name: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - uid: System.Decimal
    name: Decimal
    fullName: System.Decimal
    isExternal: true
  - name: )
    fullName: )
  - name: )
    fullName: )
  - name: )
    fullName: )
  nameWithType: Enumerable.Min<GatewayIPAddressInformation>(Func<GatewayIPAddressInformation, Nullable<Decimal>>)
  nameWithType.vb: Enumerable.Min(Of GatewayIPAddressInformation)(Func(Of GatewayIPAddressInformation, Nullable(Of Decimal)))
  commentId: M:System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Decimal}})
- uid: System.Collections.Generic.IEnumerable{System.Net.NetworkInformation.GatewayIPAddressInformation}.System.Linq.Enumerable.Min``1(System.Func{System.Net.NetworkInformation.GatewayIPAddressInformation,System.Nullable{System.Double}})
  parent: System.Linq.Enumerable
  definition: System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Double}})
  name: Min<GatewayIPAddressInformation>(Func<GatewayIPAddressInformation, Nullable<Double>>)
  fullName: System.Linq.Enumerable.Min<System.Net.NetworkInformation.GatewayIPAddressInformation>(System.Func<System.Net.NetworkInformation.GatewayIPAddressInformation, System.Nullable<System.Double>>)
  fullname.vb: System.Linq.Enumerable.Min(Of System.Net.NetworkInformation.GatewayIPAddressInformation)(System.Func(Of System.Net.NetworkInformation.GatewayIPAddressInformation, System.Nullable(Of System.Double)))
  name.vb: Min(Of GatewayIPAddressInformation)(Func(Of GatewayIPAddressInformation, Nullable(Of Double)))
  spec.csharp:
  - uid: System.Linq.Enumerable.Min``1(System.Func{``0,System.Nullable{System.Double}})
    name: Min<GatewayIPAddressInformation>
    fullName: System.Linq.Enumerable.Min<System.Net.NetworkInformation.GatewayIPAddressInformation>
  - name: (
    fullName: (
  - uid: System.Func`2
    name: Func
    fullName: System.Func
    isExternal: true
  - name: <
    fullName: <
  - uid: System.Net.NetworkInformation.GatewayIPAddressInformation
    name: GatewayIPAddressInformation
    fullName: System.Net.NetworkInformation.GatewayIPAddressInformation
  - name: ', '
    fullName: ', '
  - uid: System.Nullable`1
    name: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    fullName: <
  - uid: System.Double
    name: Double
    fullName: System.Double
    isExternal: true
  - name: '>'
    fullName: '>'
  - name: '>'
    fullName: '>'
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Linq.Enumerable.Min``1(System.Func{``0,System.Nullable{System.Double}})
    name: Min(Of GatewayIPAddressInformation)
    fullName: System.Linq.Enumerable.Min(Of System.Net.NetworkInformation.GatewayIPAddressInformation)
  - name: (
    fullName: (
  - uid: System.Func`2
    name: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - uid: System.Net.NetworkInformation.GatewayIPAddressInformation
    name: GatewayIPAddressInformation
    fullName: System.Net.NetworkInformation.GatewayIPAddressInformation
  - name: ', '
    fullName: ', '
  - uid: System.Nullable`1
    name: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - uid: System.Double
    name: Double
    fullName: System.Double
    isExternal: true
  - name: )
    fullName: )
  - name: )
    fullName: )
  - name: )
    fullName: )
  nameWithType: Enumerable.Min<GatewayIPAddressInformation>(Func<GatewayIPAddressInformation, Nullable<Double>>)
  nameWithType.vb: Enumerable.Min(Of GatewayIPAddressInformation)(Func(Of GatewayIPAddressInformation, Nullable(Of Double)))
  commentId: M:System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Double}})
- uid: System.Collections.Generic.IEnumerable{System.Net.NetworkInformation.GatewayIPAddressInformation}.System.Linq.Enumerable.Min``1(System.Func{System.Net.NetworkInformation.GatewayIPAddressInformation,System.Nullable{System.Int32}})
  parent: System.Linq.Enumerable
  definition: System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Int32}})
  name: Min<GatewayIPAddressInformation>(Func<GatewayIPAddressInformation, Nullable<Int32>>)
  fullName: System.Linq.Enumerable.Min<System.Net.NetworkInformation.GatewayIPAddressInformation>(System.Func<System.Net.NetworkInformation.GatewayIPAddressInformation, System.Nullable<System.Int32>>)
  fullname.vb: System.Linq.Enumerable.Min(Of System.Net.NetworkInformation.GatewayIPAddressInformation)(System.Func(Of System.Net.NetworkInformation.GatewayIPAddressInformation, System.Nullable(Of System.Int32)))
  name.vb: Min(Of GatewayIPAddressInformation)(Func(Of GatewayIPAddressInformation, Nullable(Of Int32)))
  spec.csharp:
  - uid: System.Linq.Enumerable.Min``1(System.Func{``0,System.Nullable{System.Int32}})
    name: Min<GatewayIPAddressInformation>
    fullName: System.Linq.Enumerable.Min<System.Net.NetworkInformation.GatewayIPAddressInformation>
  - name: (
    fullName: (
  - uid: System.Func`2
    name: Func
    fullName: System.Func
    isExternal: true
  - name: <
    fullName: <
  - uid: System.Net.NetworkInformation.GatewayIPAddressInformation
    name: GatewayIPAddressInformation
    fullName: System.Net.NetworkInformation.GatewayIPAddressInformation
  - name: ', '
    fullName: ', '
  - uid: System.Nullable`1
    name: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    fullName: <
  - uid: System.Int32
    name: Int32
    fullName: System.Int32
    isExternal: true
  - name: '>'
    fullName: '>'
  - name: '>'
    fullName: '>'
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Linq.Enumerable.Min``1(System.Func{``0,System.Nullable{System.Int32}})
    name: Min(Of GatewayIPAddressInformation)
    fullName: System.Linq.Enumerable.Min(Of System.Net.NetworkInformation.GatewayIPAddressInformation)
  - name: (
    fullName: (
  - uid: System.Func`2
    name: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - uid: System.Net.NetworkInformation.GatewayIPAddressInformation
    name: GatewayIPAddressInformation
    fullName: System.Net.NetworkInformation.GatewayIPAddressInformation
  - name: ', '
    fullName: ', '
  - uid: System.Nullable`1
    name: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - uid: System.Int32
    name: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    fullName: )
  - name: )
    fullName: )
  - name: )
    fullName: )
  nameWithType: Enumerable.Min<GatewayIPAddressInformation>(Func<GatewayIPAddressInformation, Nullable<Int32>>)
  nameWithType.vb: Enumerable.Min(Of GatewayIPAddressInformation)(Func(Of GatewayIPAddressInformation, Nullable(Of Int32)))
  commentId: M:System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Int32}})
- uid: System.Collections.Generic.IEnumerable{System.Net.NetworkInformation.GatewayIPAddressInformation}.System.Linq.Enumerable.Min``1(System.Func{System.Net.NetworkInformation.GatewayIPAddressInformation,System.Nullable{System.Int64}})
  parent: System.Linq.Enumerable
  definition: System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Int64}})
  name: Min<GatewayIPAddressInformation>(Func<GatewayIPAddressInformation, Nullable<Int64>>)
  fullName: System.Linq.Enumerable.Min<System.Net.NetworkInformation.GatewayIPAddressInformation>(System.Func<System.Net.NetworkInformation.GatewayIPAddressInformation, System.Nullable<System.Int64>>)
  fullname.vb: System.Linq.Enumerable.Min(Of System.Net.NetworkInformation.GatewayIPAddressInformation)(System.Func(Of System.Net.NetworkInformation.GatewayIPAddressInformation, System.Nullable(Of System.Int64)))
  name.vb: Min(Of GatewayIPAddressInformation)(Func(Of GatewayIPAddressInformation, Nullable(Of Int64)))
  spec.csharp:
  - uid: System.Linq.Enumerable.Min``1(System.Func{``0,System.Nullable{System.Int64}})
    name: Min<GatewayIPAddressInformation>
    fullName: System.Linq.Enumerable.Min<System.Net.NetworkInformation.GatewayIPAddressInformation>
  - name: (
    fullName: (
  - uid: System.Func`2
    name: Func
    fullName: System.Func
    isExternal: true
  - name: <
    fullName: <
  - uid: System.Net.NetworkInformation.GatewayIPAddressInformation
    name: GatewayIPAddressInformation
    fullName: System.Net.NetworkInformation.GatewayIPAddressInformation
  - name: ', '
    fullName: ', '
  - uid: System.Nullable`1
    name: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    fullName: <
  - uid: System.Int64
    name: Int64
    fullName: System.Int64
    isExternal: true
  - name: '>'
    fullName: '>'
  - name: '>'
    fullName: '>'
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Linq.Enumerable.Min``1(System.Func{``0,System.Nullable{System.Int64}})
    name: Min(Of GatewayIPAddressInformation)
    fullName: System.Linq.Enumerable.Min(Of System.Net.NetworkInformation.GatewayIPAddressInformation)
  - name: (
    fullName: (
  - uid: System.Func`2
    name: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - uid: System.Net.NetworkInformation.GatewayIPAddressInformation
    name: GatewayIPAddressInformation
    fullName: System.Net.NetworkInformation.GatewayIPAddressInformation
  - name: ', '
    fullName: ', '
  - uid: System.Nullable`1
    name: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - uid: System.Int64
    name: Int64
    fullName: System.Int64
    isExternal: true
  - name: )
    fullName: )
  - name: )
    fullName: )
  - name: )
    fullName: )
  nameWithType: Enumerable.Min<GatewayIPAddressInformation>(Func<GatewayIPAddressInformation, Nullable<Int64>>)
  nameWithType.vb: Enumerable.Min(Of GatewayIPAddressInformation)(Func(Of GatewayIPAddressInformation, Nullable(Of Int64)))
  commentId: M:System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Int64}})
- uid: System.Collections.Generic.IEnumerable{System.Net.NetworkInformation.GatewayIPAddressInformation}.System.Linq.Enumerable.Min``1(System.Func{System.Net.NetworkInformation.GatewayIPAddressInformation,System.Nullable{System.Single}})
  parent: System.Linq.Enumerable
  definition: System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Single}})
  name: Min<GatewayIPAddressInformation>(Func<GatewayIPAddressInformation, Nullable<Single>>)
  fullName: System.Linq.Enumerable.Min<System.Net.NetworkInformation.GatewayIPAddressInformation>(System.Func<System.Net.NetworkInformation.GatewayIPAddressInformation, System.Nullable<System.Single>>)
  fullname.vb: System.Linq.Enumerable.Min(Of System.Net.NetworkInformation.GatewayIPAddressInformation)(System.Func(Of System.Net.NetworkInformation.GatewayIPAddressInformation, System.Nullable(Of System.Single)))
  name.vb: Min(Of GatewayIPAddressInformation)(Func(Of GatewayIPAddressInformation, Nullable(Of Single)))
  spec.csharp:
  - uid: System.Linq.Enumerable.Min``1(System.Func{``0,System.Nullable{System.Single}})
    name: Min<GatewayIPAddressInformation>
    fullName: System.Linq.Enumerable.Min<System.Net.NetworkInformation.GatewayIPAddressInformation>
  - name: (
    fullName: (
  - uid: System.Func`2
    name: Func
    fullName: System.Func
    isExternal: true
  - name: <
    fullName: <
  - uid: System.Net.NetworkInformation.GatewayIPAddressInformation
    name: GatewayIPAddressInformation
    fullName: System.Net.NetworkInformation.GatewayIPAddressInformation
  - name: ', '
    fullName: ', '
  - uid: System.Nullable`1
    name: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    fullName: <
  - uid: System.Single
    name: Single
    fullName: System.Single
    isExternal: true
  - name: '>'
    fullName: '>'
  - name: '>'
    fullName: '>'
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Linq.Enumerable.Min``1(System.Func{``0,System.Nullable{System.Single}})
    name: Min(Of GatewayIPAddressInformation)
    fullName: System.Linq.Enumerable.Min(Of System.Net.NetworkInformation.GatewayIPAddressInformation)
  - name: (
    fullName: (
  - uid: System.Func`2
    name: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - uid: System.Net.NetworkInformation.GatewayIPAddressInformation
    name: GatewayIPAddressInformation
    fullName: System.Net.NetworkInformation.GatewayIPAddressInformation
  - name: ', '
    fullName: ', '
  - uid: System.Nullable`1
    name: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - uid: System.Single
    name: Single
    fullName: System.Single
    isExternal: true
  - name: )
    fullName: )
  - name: )
    fullName: )
  - name: )
    fullName: )
  nameWithType: Enumerable.Min<GatewayIPAddressInformation>(Func<GatewayIPAddressInformation, Nullable<Single>>)
  nameWithType.vb: Enumerable.Min(Of GatewayIPAddressInformation)(Func(Of GatewayIPAddressInformation, Nullable(Of Single)))
  commentId: M:System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Single}})
- uid: System.Collections.Generic.IEnumerable{System.Net.NetworkInformation.GatewayIPAddressInformation}.System.Linq.Enumerable.Min``1(System.Func{System.Net.NetworkInformation.GatewayIPAddressInformation,System.Single})
  parent: System.Linq.Enumerable
  definition: System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Single})
  name: Min<GatewayIPAddressInformation>(Func<GatewayIPAddressInformation, Single>)
  fullName: System.Linq.Enumerable.Min<System.Net.NetworkInformation.GatewayIPAddressInformation>(System.Func<System.Net.NetworkInformation.GatewayIPAddressInformation, System.Single>)
  fullname.vb: System.Linq.Enumerable.Min(Of System.Net.NetworkInformation.GatewayIPAddressInformation)(System.Func(Of System.Net.NetworkInformation.GatewayIPAddressInformation, System.Single))
  name.vb: Min(Of GatewayIPAddressInformation)(Func(Of GatewayIPAddressInformation, Single))
  spec.csharp:
  - uid: System.Linq.Enumerable.Min``1(System.Func{``0,System.Single})
    name: Min<GatewayIPAddressInformation>
    fullName: System.Linq.Enumerable.Min<System.Net.NetworkInformation.GatewayIPAddressInformation>
  - name: (
    fullName: (
  - uid: System.Func`2
    name: Func
    fullName: System.Func
    isExternal: true
  - name: <
    fullName: <
  - uid: System.Net.NetworkInformation.GatewayIPAddressInformation
    name: GatewayIPAddressInformation
    fullName: System.Net.NetworkInformation.GatewayIPAddressInformation
  - name: ', '
    fullName: ', '
  - uid: System.Single
    name: Single
    fullName: System.Single
    isExternal: true
  - name: '>'
    fullName: '>'
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Linq.Enumerable.Min``1(System.Func{``0,System.Single})
    name: Min(Of GatewayIPAddressInformation)
    fullName: System.Linq.Enumerable.Min(Of System.Net.NetworkInformation.GatewayIPAddressInformation)
  - name: (
    fullName: (
  - uid: System.Func`2
    name: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - uid: System.Net.NetworkInformation.GatewayIPAddressInformation
    name: GatewayIPAddressInformation
    fullName: System.Net.NetworkInformation.GatewayIPAddressInformation
  - name: ', '
    fullName: ', '
  - uid: System.Single
    name: Single
    fullName: System.Single
    isExternal: true
  - name: )
    fullName: )
  - name: )
    fullName: )
  nameWithType: Enumerable.Min<GatewayIPAddressInformation>(Func<GatewayIPAddressInformation, Single>)
  nameWithType.vb: Enumerable.Min(Of GatewayIPAddressInformation)(Func(Of GatewayIPAddressInformation, Single))
  commentId: M:System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Single})
- uid: System.Collections.Generic.IEnumerable{System.Net.NetworkInformation.GatewayIPAddressInformation}.System.Linq.Enumerable.Min``2(System.Func{System.Net.NetworkInformation.GatewayIPAddressInformation,{TResult}})
  parent: System.Linq.Enumerable
  definition: System.Linq.Enumerable.Min``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})
  name: Min<GatewayIPAddressInformation, TResult>(Func<GatewayIPAddressInformation, TResult>)
  fullName: System.Linq.Enumerable.Min<System.Net.NetworkInformation.GatewayIPAddressInformation, TResult>(System.Func<System.Net.NetworkInformation.GatewayIPAddressInformation, TResult>)
  fullname.vb: System.Linq.Enumerable.Min(Of System.Net.NetworkInformation.GatewayIPAddressInformation, TResult)(System.Func(Of System.Net.NetworkInformation.GatewayIPAddressInformation, TResult))
  name.vb: Min(Of GatewayIPAddressInformation, TResult)(Func(Of GatewayIPAddressInformation, TResult))
  spec.csharp:
  - uid: System.Linq.Enumerable.Min``2(System.Func{``0,``1})
    name: Min<GatewayIPAddressInformation, TResult>
    fullName: System.Linq.Enumerable.Min<System.Net.NetworkInformation.GatewayIPAddressInformation, TResult>
  - name: (
    fullName: (
  - uid: System.Func`2
    name: Func
    fullName: System.Func
    isExternal: true
  - name: <
    fullName: <
  - uid: System.Net.NetworkInformation.GatewayIPAddressInformation
    name: GatewayIPAddressInformation
    fullName: System.Net.NetworkInformation.GatewayIPAddressInformation
  - name: ', '
    fullName: ', '
  - name: TResult
    fullName: TResult
  - name: '>'
    fullName: '>'
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Linq.Enumerable.Min``2(System.Func{``0,``1})
    name: Min(Of GatewayIPAddressInformation, TResult)
    fullName: System.Linq.Enumerable.Min(Of System.Net.NetworkInformation.GatewayIPAddressInformation, TResult)
  - name: (
    fullName: (
  - uid: System.Func`2
    name: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - uid: System.Net.NetworkInformation.GatewayIPAddressInformation
    name: GatewayIPAddressInformation
    fullName: System.Net.NetworkInformation.GatewayIPAddressInformation
  - name: ', '
    fullName: ', '
  - name: TResult
    fullName: TResult
  - name: )
    fullName: )
  - name: )
    fullName: )
  nameWithType: Enumerable.Min<GatewayIPAddressInformation, TResult>(Func<GatewayIPAddressInformation, TResult>)
  nameWithType.vb: Enumerable.Min(Of GatewayIPAddressInformation, TResult)(Func(Of GatewayIPAddressInformation, TResult))
  commentId: M:System.Linq.Enumerable.Min``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})
- uid: System.Collections.IEnumerable.System.Linq.Enumerable.OfType``1
  parent: System.Linq.Enumerable
  definition: System.Linq.Enumerable.OfType``1(System.Collections.IEnumerable)
  name: OfType<TResult>()
  fullName: System.Linq.Enumerable.OfType<TResult>()
  fullname.vb: System.Linq.Enumerable.OfType(Of TResult)()
  name.vb: OfType(Of TResult)()
  spec.csharp:
  - uid: System.Linq.Enumerable.OfType``1
    name: OfType<TResult>
    fullName: System.Linq.Enumerable.OfType<TResult>
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Linq.Enumerable.OfType``1
    name: OfType(Of TResult)
    fullName: System.Linq.Enumerable.OfType(Of TResult)
  - name: (
    fullName: (
  - name: )
    fullName: )
  nameWithType: Enumerable.OfType<TResult>()
  nameWithType.vb: Enumerable.OfType(Of TResult)()
  commentId: M:System.Linq.Enumerable.OfType``1(System.Collections.IEnumerable)
- uid: System.Collections.Generic.IEnumerable{System.Net.NetworkInformation.GatewayIPAddressInformation}.System.Linq.Enumerable.OrderBy``2(System.Func{System.Net.NetworkInformation.GatewayIPAddressInformation,{TKey}})
  parent: System.Linq.Enumerable
  definition: System.Linq.Enumerable.OrderBy``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})
  name: OrderBy<GatewayIPAddressInformation, TKey>(Func<GatewayIPAddressInformation, TKey>)
  fullName: System.Linq.Enumerable.OrderBy<System.Net.NetworkInformation.GatewayIPAddressInformation, TKey>(System.Func<System.Net.NetworkInformation.GatewayIPAddressInformation, TKey>)
  fullname.vb: System.Linq.Enumerable.OrderBy(Of System.Net.NetworkInformation.GatewayIPAddressInformation, TKey)(System.Func(Of System.Net.NetworkInformation.GatewayIPAddressInformation, TKey))
  name.vb: OrderBy(Of GatewayIPAddressInformation, TKey)(Func(Of GatewayIPAddressInformation, TKey))
  spec.csharp:
  - uid: System.Linq.Enumerable.OrderBy``2(System.Func{``0,``1})
    name: OrderBy<GatewayIPAddressInformation, TKey>
    fullName: System.Linq.Enumerable.OrderBy<System.Net.NetworkInformation.GatewayIPAddressInformation, TKey>
  - name: (
    fullName: (
  - uid: System.Func`2
    name: Func
    fullName: System.Func
    isExternal: true
  - name: <
    fullName: <
  - uid: System.Net.NetworkInformation.GatewayIPAddressInformation
    name: GatewayIPAddressInformation
    fullName: System.Net.NetworkInformation.GatewayIPAddressInformation
  - name: ', '
    fullName: ', '
  - name: TKey
    fullName: TKey
  - name: '>'
    fullName: '>'
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Linq.Enumerable.OrderBy``2(System.Func{``0,``1})
    name: OrderBy(Of GatewayIPAddressInformation, TKey)
    fullName: System.Linq.Enumerable.OrderBy(Of System.Net.NetworkInformation.GatewayIPAddressInformation, TKey)
  - name: (
    fullName: (
  - uid: System.Func`2
    name: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - uid: System.Net.NetworkInformation.GatewayIPAddressInformation
    name: GatewayIPAddressInformation
    fullName: System.Net.NetworkInformation.GatewayIPAddressInformation
  - name: ', '
    fullName: ', '
  - name: TKey
    fullName: TKey
  - name: )
    fullName: )
  - name: )
    fullName: )
  nameWithType: Enumerable.OrderBy<GatewayIPAddressInformation, TKey>(Func<GatewayIPAddressInformation, TKey>)
  nameWithType.vb: Enumerable.OrderBy(Of GatewayIPAddressInformation, TKey)(Func(Of GatewayIPAddressInformation, TKey))
  commentId: M:System.Linq.Enumerable.OrderBy``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})
- uid: System.Collections.Generic.IEnumerable{System.Net.NetworkInformation.GatewayIPAddressInformation}.System.Linq.Enumerable.OrderBy``2(System.Func{System.Net.NetworkInformation.GatewayIPAddressInformation,{TKey}},System.Collections.Generic.IComparer{{TKey}})
  parent: System.Linq.Enumerable
  definition: System.Linq.Enumerable.OrderBy``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IComparer{``1})
  name: OrderBy<GatewayIPAddressInformation, TKey>(Func<GatewayIPAddressInformation, TKey>, IComparer<TKey>)
  fullName: System.Linq.Enumerable.OrderBy<System.Net.NetworkInformation.GatewayIPAddressInformation, TKey>(System.Func<System.Net.NetworkInformation.GatewayIPAddressInformation, TKey>, System.Collections.Generic.IComparer<TKey>)
  fullname.vb: System.Linq.Enumerable.OrderBy(Of System.Net.NetworkInformation.GatewayIPAddressInformation, TKey)(System.Func(Of System.Net.NetworkInformation.GatewayIPAddressInformation, TKey), System.Collections.Generic.IComparer(Of TKey))
  name.vb: OrderBy(Of GatewayIPAddressInformation, TKey)(Func(Of GatewayIPAddressInformation, TKey), IComparer(Of TKey))
  spec.csharp:
  - uid: System.Linq.Enumerable.OrderBy``2(System.Func{``0,``1},System.Collections.Generic.IComparer{``1})
    name: OrderBy<GatewayIPAddressInformation, TKey>
    fullName: System.Linq.Enumerable.OrderBy<System.Net.NetworkInformation.GatewayIPAddressInformation, TKey>
  - name: (
    fullName: (
  - uid: System.Func`2
    name: Func
    fullName: System.Func
    isExternal: true
  - name: <
    fullName: <
  - uid: System.Net.NetworkInformation.GatewayIPAddressInformation
    name: GatewayIPAddressInformation
    fullName: System.Net.NetworkInformation.GatewayIPAddressInformation
  - name: ', '
    fullName: ', '
  - name: TKey
    fullName: TKey
  - name: '>'
    fullName: '>'
  - name: ', '
    fullName: ', '
  - uid: System.Collections.Generic.IComparer`1
    name: IComparer
    fullName: System.Collections.Generic.IComparer
    isExternal: true
  - name: <
    fullName: <
  - name: TKey
    fullName: TKey
  - name: '>'
    fullName: '>'
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Linq.Enumerable.OrderBy``2(System.Func{``0,``1},System.Collections.Generic.IComparer{``1})
    name: OrderBy(Of GatewayIPAddressInformation, TKey)
    fullName: System.Linq.Enumerable.OrderBy(Of System.Net.NetworkInformation.GatewayIPAddressInformation, TKey)
  - name: (
    fullName: (
  - uid: System.Func`2
    name: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - uid: System.Net.NetworkInformation.GatewayIPAddressInformation
    name: GatewayIPAddressInformation
    fullName: System.Net.NetworkInformation.GatewayIPAddressInformation
  - name: ', '
    fullName: ', '
  - name: TKey
    fullName: TKey
  - name: )
    fullName: )
  - name: ', '
    fullName: ', '
  - uid: System.Collections.Generic.IComparer`1
    name: IComparer
    fullName: System.Collections.Generic.IComparer
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - name: TKey
    fullName: TKey
  - name: )
    fullName: )
  - name: )
    fullName: )
  nameWithType: Enumerable.OrderBy<GatewayIPAddressInformation, TKey>(Func<GatewayIPAddressInformation, TKey>, IComparer<TKey>)
  nameWithType.vb: Enumerable.OrderBy(Of GatewayIPAddressInformation, TKey)(Func(Of GatewayIPAddressInformation, TKey), IComparer(Of TKey))
  commentId: M:System.Linq.Enumerable.OrderBy``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IComparer{``1})
- uid: System.Collections.Generic.IEnumerable{System.Net.NetworkInformation.GatewayIPAddressInformation}.System.Linq.Enumerable.OrderByDescending``2(System.Func{System.Net.NetworkInformation.GatewayIPAddressInformation,{TKey}})
  parent: System.Linq.Enumerable
  definition: System.Linq.Enumerable.OrderByDescending``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})
  name: OrderByDescending<GatewayIPAddressInformation, TKey>(Func<GatewayIPAddressInformation, TKey>)
  fullName: System.Linq.Enumerable.OrderByDescending<System.Net.NetworkInformation.GatewayIPAddressInformation, TKey>(System.Func<System.Net.NetworkInformation.GatewayIPAddressInformation, TKey>)
  fullname.vb: System.Linq.Enumerable.OrderByDescending(Of System.Net.NetworkInformation.GatewayIPAddressInformation, TKey)(System.Func(Of System.Net.NetworkInformation.GatewayIPAddressInformation, TKey))
  name.vb: OrderByDescending(Of GatewayIPAddressInformation, TKey)(Func(Of GatewayIPAddressInformation, TKey))
  spec.csharp:
  - uid: System.Linq.Enumerable.OrderByDescending``2(System.Func{``0,``1})
    name: OrderByDescending<GatewayIPAddressInformation, TKey>
    fullName: System.Linq.Enumerable.OrderByDescending<System.Net.NetworkInformation.GatewayIPAddressInformation, TKey>
  - name: (
    fullName: (
  - uid: System.Func`2
    name: Func
    fullName: System.Func
    isExternal: true
  - name: <
    fullName: <
  - uid: System.Net.NetworkInformation.GatewayIPAddressInformation
    name: GatewayIPAddressInformation
    fullName: System.Net.NetworkInformation.GatewayIPAddressInformation
  - name: ', '
    fullName: ', '
  - name: TKey
    fullName: TKey
  - name: '>'
    fullName: '>'
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Linq.Enumerable.OrderByDescending``2(System.Func{``0,``1})
    name: OrderByDescending(Of GatewayIPAddressInformation, TKey)
    fullName: System.Linq.Enumerable.OrderByDescending(Of System.Net.NetworkInformation.GatewayIPAddressInformation, TKey)
  - name: (
    fullName: (
  - uid: System.Func`2
    name: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - uid: System.Net.NetworkInformation.GatewayIPAddressInformation
    name: GatewayIPAddressInformation
    fullName: System.Net.NetworkInformation.GatewayIPAddressInformation
  - name: ', '
    fullName: ', '
  - name: TKey
    fullName: TKey
  - name: )
    fullName: )
  - name: )
    fullName: )
  nameWithType: Enumerable.OrderByDescending<GatewayIPAddressInformation, TKey>(Func<GatewayIPAddressInformation, TKey>)
  nameWithType.vb: Enumerable.OrderByDescending(Of GatewayIPAddressInformation, TKey)(Func(Of GatewayIPAddressInformation, TKey))
  commentId: M:System.Linq.Enumerable.OrderByDescending``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})
- uid: System.Collections.Generic.IEnumerable{System.Net.NetworkInformation.GatewayIPAddressInformation}.System.Linq.Enumerable.OrderByDescending``2(System.Func{System.Net.NetworkInformation.GatewayIPAddressInformation,{TKey}},System.Collections.Generic.IComparer{{TKey}})
  parent: System.Linq.Enumerable
  definition: System.Linq.Enumerable.OrderByDescending``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IComparer{``1})
  name: OrderByDescending<GatewayIPAddressInformation, TKey>(Func<GatewayIPAddressInformation, TKey>, IComparer<TKey>)
  fullName: System.Linq.Enumerable.OrderByDescending<System.Net.NetworkInformation.GatewayIPAddressInformation, TKey>(System.Func<System.Net.NetworkInformation.GatewayIPAddressInformation, TKey>, System.Collections.Generic.IComparer<TKey>)
  fullname.vb: System.Linq.Enumerable.OrderByDescending(Of System.Net.NetworkInformation.GatewayIPAddressInformation, TKey)(System.Func(Of System.Net.NetworkInformation.GatewayIPAddressInformation, TKey), System.Collections.Generic.IComparer(Of TKey))
  name.vb: OrderByDescending(Of GatewayIPAddressInformation, TKey)(Func(Of GatewayIPAddressInformation, TKey), IComparer(Of TKey))
  spec.csharp:
  - uid: System.Linq.Enumerable.OrderByDescending``2(System.Func{``0,``1},System.Collections.Generic.IComparer{``1})
    name: OrderByDescending<GatewayIPAddressInformation, TKey>
    fullName: System.Linq.Enumerable.OrderByDescending<System.Net.NetworkInformation.GatewayIPAddressInformation, TKey>
  - name: (
    fullName: (
  - uid: System.Func`2
    name: Func
    fullName: System.Func
    isExternal: true
  - name: <
    fullName: <
  - uid: System.Net.NetworkInformation.GatewayIPAddressInformation
    name: GatewayIPAddressInformation
    fullName: System.Net.NetworkInformation.GatewayIPAddressInformation
  - name: ', '
    fullName: ', '
  - name: TKey
    fullName: TKey
  - name: '>'
    fullName: '>'
  - name: ', '
    fullName: ', '
  - uid: System.Collections.Generic.IComparer`1
    name: IComparer
    fullName: System.Collections.Generic.IComparer
    isExternal: true
  - name: <
    fullName: <
  - name: TKey
    fullName: TKey
  - name: '>'
    fullName: '>'
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Linq.Enumerable.OrderByDescending``2(System.Func{``0,``1},System.Collections.Generic.IComparer{``1})
    name: OrderByDescending(Of GatewayIPAddressInformation, TKey)
    fullName: System.Linq.Enumerable.OrderByDescending(Of System.Net.NetworkInformation.GatewayIPAddressInformation, TKey)
  - name: (
    fullName: (
  - uid: System.Func`2
    name: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - uid: System.Net.NetworkInformation.GatewayIPAddressInformation
    name: GatewayIPAddressInformation
    fullName: System.Net.NetworkInformation.GatewayIPAddressInformation
  - name: ', '
    fullName: ', '
  - name: TKey
    fullName: TKey
  - name: )
    fullName: )
  - name: ', '
    fullName: ', '
  - uid: System.Collections.Generic.IComparer`1
    name: IComparer
    fullName: System.Collections.Generic.IComparer
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - name: TKey
    fullName: TKey
  - name: )
    fullName: )
  - name: )
    fullName: )
  nameWithType: Enumerable.OrderByDescending<GatewayIPAddressInformation, TKey>(Func<GatewayIPAddressInformation, TKey>, IComparer<TKey>)
  nameWithType.vb: Enumerable.OrderByDescending(Of GatewayIPAddressInformation, TKey)(Func(Of GatewayIPAddressInformation, TKey), IComparer(Of TKey))
  commentId: M:System.Linq.Enumerable.OrderByDescending``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IComparer{``1})
- uid: System.Collections.Generic.IEnumerable{System.Net.NetworkInformation.GatewayIPAddressInformation}.System.Linq.Enumerable.Reverse``1
  parent: System.Linq.Enumerable
  definition: System.Linq.Enumerable.Reverse``1(System.Collections.Generic.IEnumerable{``0})
  name: Reverse<GatewayIPAddressInformation>()
  fullName: System.Linq.Enumerable.Reverse<System.Net.NetworkInformation.GatewayIPAddressInformation>()
  fullname.vb: System.Linq.Enumerable.Reverse(Of System.Net.NetworkInformation.GatewayIPAddressInformation)()
  name.vb: Reverse(Of GatewayIPAddressInformation)()
  spec.csharp:
  - uid: System.Linq.Enumerable.Reverse``1
    name: Reverse<GatewayIPAddressInformation>
    fullName: System.Linq.Enumerable.Reverse<System.Net.NetworkInformation.GatewayIPAddressInformation>
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Linq.Enumerable.Reverse``1
    name: Reverse(Of GatewayIPAddressInformation)
    fullName: System.Linq.Enumerable.Reverse(Of System.Net.NetworkInformation.GatewayIPAddressInformation)
  - name: (
    fullName: (
  - name: )
    fullName: )
  nameWithType: Enumerable.Reverse<GatewayIPAddressInformation>()
  nameWithType.vb: Enumerable.Reverse(Of GatewayIPAddressInformation)()
  commentId: M:System.Linq.Enumerable.Reverse``1(System.Collections.Generic.IEnumerable{``0})
- uid: System.Collections.Generic.IEnumerable{System.Net.NetworkInformation.GatewayIPAddressInformation}.System.Linq.Enumerable.Select``2(System.Func{System.Net.NetworkInformation.GatewayIPAddressInformation,{TResult}})
  parent: System.Linq.Enumerable
  definition: System.Linq.Enumerable.Select``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})
  name: Select<GatewayIPAddressInformation, TResult>(Func<GatewayIPAddressInformation, TResult>)
  fullName: System.Linq.Enumerable.Select<System.Net.NetworkInformation.GatewayIPAddressInformation, TResult>(System.Func<System.Net.NetworkInformation.GatewayIPAddressInformation, TResult>)
  fullname.vb: System.Linq.Enumerable.Select(Of System.Net.NetworkInformation.GatewayIPAddressInformation, TResult)(System.Func(Of System.Net.NetworkInformation.GatewayIPAddressInformation, TResult))
  name.vb: Select(Of GatewayIPAddressInformation, TResult)(Func(Of GatewayIPAddressInformation, TResult))
  spec.csharp:
  - uid: System.Linq.Enumerable.Select``2(System.Func{``0,``1})
    name: Select<GatewayIPAddressInformation, TResult>
    fullName: System.Linq.Enumerable.Select<System.Net.NetworkInformation.GatewayIPAddressInformation, TResult>
  - name: (
    fullName: (
  - uid: System.Func`2
    name: Func
    fullName: System.Func
    isExternal: true
  - name: <
    fullName: <
  - uid: System.Net.NetworkInformation.GatewayIPAddressInformation
    name: GatewayIPAddressInformation
    fullName: System.Net.NetworkInformation.GatewayIPAddressInformation
  - name: ', '
    fullName: ', '
  - name: TResult
    fullName: TResult
  - name: '>'
    fullName: '>'
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Linq.Enumerable.Select``2(System.Func{``0,``1})
    name: Select(Of GatewayIPAddressInformation, TResult)
    fullName: System.Linq.Enumerable.Select(Of System.Net.NetworkInformation.GatewayIPAddressInformation, TResult)
  - name: (
    fullName: (
  - uid: System.Func`2
    name: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - uid: System.Net.NetworkInformation.GatewayIPAddressInformation
    name: GatewayIPAddressInformation
    fullName: System.Net.NetworkInformation.GatewayIPAddressInformation
  - name: ', '
    fullName: ', '
  - name: TResult
    fullName: TResult
  - name: )
    fullName: )
  - name: )
    fullName: )
  nameWithType: Enumerable.Select<GatewayIPAddressInformation, TResult>(Func<GatewayIPAddressInformation, TResult>)
  nameWithType.vb: Enumerable.Select(Of GatewayIPAddressInformation, TResult)(Func(Of GatewayIPAddressInformation, TResult))
  commentId: M:System.Linq.Enumerable.Select``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})
- uid: System.Collections.Generic.IEnumerable{System.Net.NetworkInformation.GatewayIPAddressInformation}.System.Linq.Enumerable.Select``2(System.Func{System.Net.NetworkInformation.GatewayIPAddressInformation,System.Int32,{TResult}})
  parent: System.Linq.Enumerable
  definition: System.Linq.Enumerable.Select``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32,``1})
  name: Select<GatewayIPAddressInformation, TResult>(Func<GatewayIPAddressInformation, Int32, TResult>)
  fullName: System.Linq.Enumerable.Select<System.Net.NetworkInformation.GatewayIPAddressInformation, TResult>(System.Func<System.Net.NetworkInformation.GatewayIPAddressInformation, System.Int32, TResult>)
  fullname.vb: System.Linq.Enumerable.Select(Of System.Net.NetworkInformation.GatewayIPAddressInformation, TResult)(System.Func(Of System.Net.NetworkInformation.GatewayIPAddressInformation, System.Int32, TResult))
  name.vb: Select(Of GatewayIPAddressInformation, TResult)(Func(Of GatewayIPAddressInformation, Int32, TResult))
  spec.csharp:
  - uid: System.Linq.Enumerable.Select``2(System.Func{``0,System.Int32,``1})
    name: Select<GatewayIPAddressInformation, TResult>
    fullName: System.Linq.Enumerable.Select<System.Net.NetworkInformation.GatewayIPAddressInformation, TResult>
  - name: (
    fullName: (
  - uid: System.Func`3
    name: Func
    fullName: System.Func
    isExternal: true
  - name: <
    fullName: <
  - uid: System.Net.NetworkInformation.GatewayIPAddressInformation
    name: GatewayIPAddressInformation
    fullName: System.Net.NetworkInformation.GatewayIPAddressInformation
  - name: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    fullName: ', '
  - name: TResult
    fullName: TResult
  - name: '>'
    fullName: '>'
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Linq.Enumerable.Select``2(System.Func{``0,System.Int32,``1})
    name: Select(Of GatewayIPAddressInformation, TResult)
    fullName: System.Linq.Enumerable.Select(Of System.Net.NetworkInformation.GatewayIPAddressInformation, TResult)
  - name: (
    fullName: (
  - uid: System.Func`3
    name: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - uid: System.Net.NetworkInformation.GatewayIPAddressInformation
    name: GatewayIPAddressInformation
    fullName: System.Net.NetworkInformation.GatewayIPAddressInformation
  - name: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    fullName: ', '
  - name: TResult
    fullName: TResult
  - name: )
    fullName: )
  - name: )
    fullName: )
  nameWithType: Enumerable.Select<GatewayIPAddressInformation, TResult>(Func<GatewayIPAddressInformation, Int32, TResult>)
  nameWithType.vb: Enumerable.Select(Of GatewayIPAddressInformation, TResult)(Func(Of GatewayIPAddressInformation, Int32, TResult))
  commentId: M:System.Linq.Enumerable.Select``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32,``1})
- uid: System.Collections.Generic.IEnumerable{System.Net.NetworkInformation.GatewayIPAddressInformation}.System.Linq.Enumerable.SelectMany``2(System.Func{System.Net.NetworkInformation.GatewayIPAddressInformation,System.Collections.Generic.IEnumerable{{TResult}}})
  parent: System.Linq.Enumerable
  definition: System.Linq.Enumerable.SelectMany``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Collections.Generic.IEnumerable{``1}})
  name: SelectMany<GatewayIPAddressInformation, TResult>(Func<GatewayIPAddressInformation, IEnumerable<TResult>>)
  fullName: System.Linq.Enumerable.SelectMany<System.Net.NetworkInformation.GatewayIPAddressInformation, TResult>(System.Func<System.Net.NetworkInformation.GatewayIPAddressInformation, System.Collections.Generic.IEnumerable<TResult>>)
  fullname.vb: System.Linq.Enumerable.SelectMany(Of System.Net.NetworkInformation.GatewayIPAddressInformation, TResult)(System.Func(Of System.Net.NetworkInformation.GatewayIPAddressInformation, System.Collections.Generic.IEnumerable(Of TResult)))
  name.vb: SelectMany(Of GatewayIPAddressInformation, TResult)(Func(Of GatewayIPAddressInformation, IEnumerable(Of TResult)))
  spec.csharp:
  - uid: System.Linq.Enumerable.SelectMany``2(System.Func{``0,System.Collections.Generic.IEnumerable{``1}})
    name: SelectMany<GatewayIPAddressInformation, TResult>
    fullName: System.Linq.Enumerable.SelectMany<System.Net.NetworkInformation.GatewayIPAddressInformation, TResult>
  - name: (
    fullName: (
  - uid: System.Func`2
    name: Func
    fullName: System.Func
    isExternal: true
  - name: <
    fullName: <
  - uid: System.Net.NetworkInformation.GatewayIPAddressInformation
    name: GatewayIPAddressInformation
    fullName: System.Net.NetworkInformation.GatewayIPAddressInformation
  - name: ', '
    fullName: ', '
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    fullName: <
  - name: TResult
    fullName: TResult
  - name: '>'
    fullName: '>'
  - name: '>'
    fullName: '>'
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Linq.Enumerable.SelectMany``2(System.Func{``0,System.Collections.Generic.IEnumerable{``1}})
    name: SelectMany(Of GatewayIPAddressInformation, TResult)
    fullName: System.Linq.Enumerable.SelectMany(Of System.Net.NetworkInformation.GatewayIPAddressInformation, TResult)
  - name: (
    fullName: (
  - uid: System.Func`2
    name: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - uid: System.Net.NetworkInformation.GatewayIPAddressInformation
    name: GatewayIPAddressInformation
    fullName: System.Net.NetworkInformation.GatewayIPAddressInformation
  - name: ', '
    fullName: ', '
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - name: TResult
    fullName: TResult
  - name: )
    fullName: )
  - name: )
    fullName: )
  - name: )
    fullName: )
  nameWithType: Enumerable.SelectMany<GatewayIPAddressInformation, TResult>(Func<GatewayIPAddressInformation, IEnumerable<TResult>>)
  nameWithType.vb: Enumerable.SelectMany(Of GatewayIPAddressInformation, TResult)(Func(Of GatewayIPAddressInformation, IEnumerable(Of TResult)))
  commentId: M:System.Linq.Enumerable.SelectMany``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Collections.Generic.IEnumerable{``1}})
- uid: System.Collections.Generic.IEnumerable{System.Net.NetworkInformation.GatewayIPAddressInformation}.System.Linq.Enumerable.SelectMany``2(System.Func{System.Net.NetworkInformation.GatewayIPAddressInformation,System.Int32,System.Collections.Generic.IEnumerable{{TResult}}})
  parent: System.Linq.Enumerable
  definition: System.Linq.Enumerable.SelectMany``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32,System.Collections.Generic.IEnumerable{``1}})
  name: SelectMany<GatewayIPAddressInformation, TResult>(Func<GatewayIPAddressInformation, Int32, IEnumerable<TResult>>)
  fullName: System.Linq.Enumerable.SelectMany<System.Net.NetworkInformation.GatewayIPAddressInformation, TResult>(System.Func<System.Net.NetworkInformation.GatewayIPAddressInformation, System.Int32, System.Collections.Generic.IEnumerable<TResult>>)
  fullname.vb: System.Linq.Enumerable.SelectMany(Of System.Net.NetworkInformation.GatewayIPAddressInformation, TResult)(System.Func(Of System.Net.NetworkInformation.GatewayIPAddressInformation, System.Int32, System.Collections.Generic.IEnumerable(Of TResult)))
  name.vb: SelectMany(Of GatewayIPAddressInformation, TResult)(Func(Of GatewayIPAddressInformation, Int32, IEnumerable(Of TResult)))
  spec.csharp:
  - uid: System.Linq.Enumerable.SelectMany``2(System.Func{``0,System.Int32,System.Collections.Generic.IEnumerable{``1}})
    name: SelectMany<GatewayIPAddressInformation, TResult>
    fullName: System.Linq.Enumerable.SelectMany<System.Net.NetworkInformation.GatewayIPAddressInformation, TResult>
  - name: (
    fullName: (
  - uid: System.Func`3
    name: Func
    fullName: System.Func
    isExternal: true
  - name: <
    fullName: <
  - uid: System.Net.NetworkInformation.GatewayIPAddressInformation
    name: GatewayIPAddressInformation
    fullName: System.Net.NetworkInformation.GatewayIPAddressInformation
  - name: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    fullName: <
  - name: TResult
    fullName: TResult
  - name: '>'
    fullName: '>'
  - name: '>'
    fullName: '>'
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Linq.Enumerable.SelectMany``2(System.Func{``0,System.Int32,System.Collections.Generic.IEnumerable{``1}})
    name: SelectMany(Of GatewayIPAddressInformation, TResult)
    fullName: System.Linq.Enumerable.SelectMany(Of System.Net.NetworkInformation.GatewayIPAddressInformation, TResult)
  - name: (
    fullName: (
  - uid: System.Func`3
    name: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - uid: System.Net.NetworkInformation.GatewayIPAddressInformation
    name: GatewayIPAddressInformation
    fullName: System.Net.NetworkInformation.GatewayIPAddressInformation
  - name: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - name: TResult
    fullName: TResult
  - name: )
    fullName: )
  - name: )
    fullName: )
  - name: )
    fullName: )
  nameWithType: Enumerable.SelectMany<GatewayIPAddressInformation, TResult>(Func<GatewayIPAddressInformation, Int32, IEnumerable<TResult>>)
  nameWithType.vb: Enumerable.SelectMany(Of GatewayIPAddressInformation, TResult)(Func(Of GatewayIPAddressInformation, Int32, IEnumerable(Of TResult)))
  commentId: M:System.Linq.Enumerable.SelectMany``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32,System.Collections.Generic.IEnumerable{``1}})
- uid: System.Collections.Generic.IEnumerable{System.Net.NetworkInformation.GatewayIPAddressInformation}.System.Linq.Enumerable.SelectMany``3(System.Func{System.Net.NetworkInformation.GatewayIPAddressInformation,System.Collections.Generic.IEnumerable{{TCollection}}},System.Func{System.Net.NetworkInformation.GatewayIPAddressInformation,{TCollection},{TResult}})
  parent: System.Linq.Enumerable
  definition: System.Linq.Enumerable.SelectMany``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Collections.Generic.IEnumerable{``1}},System.Func{``0,``1,``2})
  name: SelectMany<GatewayIPAddressInformation, TCollection, TResult>(Func<GatewayIPAddressInformation, IEnumerable<TCollection>>, Func<GatewayIPAddressInformation, TCollection, TResult>)
  fullName: System.Linq.Enumerable.SelectMany<System.Net.NetworkInformation.GatewayIPAddressInformation, TCollection, TResult>(System.Func<System.Net.NetworkInformation.GatewayIPAddressInformation, System.Collections.Generic.IEnumerable<TCollection>>, System.Func<System.Net.NetworkInformation.GatewayIPAddressInformation, TCollection, TResult>)
  fullname.vb: System.Linq.Enumerable.SelectMany(Of System.Net.NetworkInformation.GatewayIPAddressInformation, TCollection, TResult)(System.Func(Of System.Net.NetworkInformation.GatewayIPAddressInformation, System.Collections.Generic.IEnumerable(Of TCollection)), System.Func(Of System.Net.NetworkInformation.GatewayIPAddressInformation, TCollection, TResult))
  name.vb: SelectMany(Of GatewayIPAddressInformation, TCollection, TResult)(Func(Of GatewayIPAddressInformation, IEnumerable(Of TCollection)), Func(Of GatewayIPAddressInformation, TCollection, TResult))
  spec.csharp:
  - uid: System.Linq.Enumerable.SelectMany``3(System.Func{``0,System.Collections.Generic.IEnumerable{``1}},System.Func{``0,``1,``2})
    name: SelectMany<GatewayIPAddressInformation, TCollection, TResult>
    fullName: System.Linq.Enumerable.SelectMany<System.Net.NetworkInformation.GatewayIPAddressInformation, TCollection, TResult>
  - name: (
    fullName: (
  - uid: System.Func`2
    name: Func
    fullName: System.Func
    isExternal: true
  - name: <
    fullName: <
  - uid: System.Net.NetworkInformation.GatewayIPAddressInformation
    name: GatewayIPAddressInformation
    fullName: System.Net.NetworkInformation.GatewayIPAddressInformation
  - name: ', '
    fullName: ', '
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    fullName: <
  - name: TCollection
    fullName: TCollection
  - name: '>'
    fullName: '>'
  - name: '>'
    fullName: '>'
  - name: ', '
    fullName: ', '
  - uid: System.Func`3
    name: Func
    fullName: System.Func
    isExternal: true
  - name: <
    fullName: <
  - uid: System.Net.NetworkInformation.GatewayIPAddressInformation
    name: GatewayIPAddressInformation
    fullName: System.Net.NetworkInformation.GatewayIPAddressInformation
  - name: ', '
    fullName: ', '
  - name: TCollection
    fullName: TCollection
  - name: ', '
    fullName: ', '
  - name: TResult
    fullName: TResult
  - name: '>'
    fullName: '>'
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Linq.Enumerable.SelectMany``3(System.Func{``0,System.Collections.Generic.IEnumerable{``1}},System.Func{``0,``1,``2})
    name: SelectMany(Of GatewayIPAddressInformation, TCollection, TResult)
    fullName: System.Linq.Enumerable.SelectMany(Of System.Net.NetworkInformation.GatewayIPAddressInformation, TCollection, TResult)
  - name: (
    fullName: (
  - uid: System.Func`2
    name: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - uid: System.Net.NetworkInformation.GatewayIPAddressInformation
    name: GatewayIPAddressInformation
    fullName: System.Net.NetworkInformation.GatewayIPAddressInformation
  - name: ', '
    fullName: ', '
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - name: TCollection
    fullName: TCollection
  - name: )
    fullName: )
  - name: )
    fullName: )
  - name: ', '
    fullName: ', '
  - uid: System.Func`3
    name: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - uid: System.Net.NetworkInformation.GatewayIPAddressInformation
    name: GatewayIPAddressInformation
    fullName: System.Net.NetworkInformation.GatewayIPAddressInformation
  - name: ', '
    fullName: ', '
  - name: TCollection
    fullName: TCollection
  - name: ', '
    fullName: ', '
  - name: TResult
    fullName: TResult
  - name: )
    fullName: )
  - name: )
    fullName: )
  nameWithType: Enumerable.SelectMany<GatewayIPAddressInformation, TCollection, TResult>(Func<GatewayIPAddressInformation, IEnumerable<TCollection>>, Func<GatewayIPAddressInformation, TCollection, TResult>)
  nameWithType.vb: Enumerable.SelectMany(Of GatewayIPAddressInformation, TCollection, TResult)(Func(Of GatewayIPAddressInformation, IEnumerable(Of TCollection)), Func(Of GatewayIPAddressInformation, TCollection, TResult))
  commentId: M:System.Linq.Enumerable.SelectMany``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Collections.Generic.IEnumerable{``1}},System.Func{``0,``1,``2})
- uid: System.Collections.Generic.IEnumerable{System.Net.NetworkInformation.GatewayIPAddressInformation}.System.Linq.Enumerable.SelectMany``3(System.Func{System.Net.NetworkInformation.GatewayIPAddressInformation,System.Int32,System.Collections.Generic.IEnumerable{{TCollection}}},System.Func{System.Net.NetworkInformation.GatewayIPAddressInformation,{TCollection},{TResult}})
  parent: System.Linq.Enumerable
  definition: System.Linq.Enumerable.SelectMany``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32,System.Collections.Generic.IEnumerable{``1}},System.Func{``0,``1,``2})
  name: SelectMany<GatewayIPAddressInformation, TCollection, TResult>(Func<GatewayIPAddressInformation, Int32, IEnumerable<TCollection>>, Func<GatewayIPAddressInformation, TCollection, TResult>)
  fullName: System.Linq.Enumerable.SelectMany<System.Net.NetworkInformation.GatewayIPAddressInformation, TCollection, TResult>(System.Func<System.Net.NetworkInformation.GatewayIPAddressInformation, System.Int32, System.Collections.Generic.IEnumerable<TCollection>>, System.Func<System.Net.NetworkInformation.GatewayIPAddressInformation, TCollection, TResult>)
  fullname.vb: System.Linq.Enumerable.SelectMany(Of System.Net.NetworkInformation.GatewayIPAddressInformation, TCollection, TResult)(System.Func(Of System.Net.NetworkInformation.GatewayIPAddressInformation, System.Int32, System.Collections.Generic.IEnumerable(Of TCollection)), System.Func(Of System.Net.NetworkInformation.GatewayIPAddressInformation, TCollection, TResult))
  name.vb: SelectMany(Of GatewayIPAddressInformation, TCollection, TResult)(Func(Of GatewayIPAddressInformation, Int32, IEnumerable(Of TCollection)), Func(Of GatewayIPAddressInformation, TCollection, TResult))
  spec.csharp:
  - uid: System.Linq.Enumerable.SelectMany``3(System.Func{``0,System.Int32,System.Collections.Generic.IEnumerable{``1}},System.Func{``0,``1,``2})
    name: SelectMany<GatewayIPAddressInformation, TCollection, TResult>
    fullName: System.Linq.Enumerable.SelectMany<System.Net.NetworkInformation.GatewayIPAddressInformation, TCollection, TResult>
  - name: (
    fullName: (
  - uid: System.Func`3
    name: Func
    fullName: System.Func
    isExternal: true
  - name: <
    fullName: <
  - uid: System.Net.NetworkInformation.GatewayIPAddressInformation
    name: GatewayIPAddressInformation
    fullName: System.Net.NetworkInformation.GatewayIPAddressInformation
  - name: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    fullName: <
  - name: TCollection
    fullName: TCollection
  - name: '>'
    fullName: '>'
  - name: '>'
    fullName: '>'
  - name: ', '
    fullName: ', '
  - uid: System.Func`3
    name: Func
    fullName: System.Func
    isExternal: true
  - name: <
    fullName: <
  - uid: System.Net.NetworkInformation.GatewayIPAddressInformation
    name: GatewayIPAddressInformation
    fullName: System.Net.NetworkInformation.GatewayIPAddressInformation
  - name: ', '
    fullName: ', '
  - name: TCollection
    fullName: TCollection
  - name: ', '
    fullName: ', '
  - name: TResult
    fullName: TResult
  - name: '>'
    fullName: '>'
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Linq.Enumerable.SelectMany``3(System.Func{``0,System.Int32,System.Collections.Generic.IEnumerable{``1}},System.Func{``0,``1,``2})
    name: SelectMany(Of GatewayIPAddressInformation, TCollection, TResult)
    fullName: System.Linq.Enumerable.SelectMany(Of System.Net.NetworkInformation.GatewayIPAddressInformation, TCollection, TResult)
  - name: (
    fullName: (
  - uid: System.Func`3
    name: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - uid: System.Net.NetworkInformation.GatewayIPAddressInformation
    name: GatewayIPAddressInformation
    fullName: System.Net.NetworkInformation.GatewayIPAddressInformation
  - name: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - name: TCollection
    fullName: TCollection
  - name: )
    fullName: )
  - name: )
    fullName: )
  - name: ', '
    fullName: ', '
  - uid: System.Func`3
    name: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - uid: System.Net.NetworkInformation.GatewayIPAddressInformation
    name: GatewayIPAddressInformation
    fullName: System.Net.NetworkInformation.GatewayIPAddressInformation
  - name: ', '
    fullName: ', '
  - name: TCollection
    fullName: TCollection
  - name: ', '
    fullName: ', '
  - name: TResult
    fullName: TResult
  - name: )
    fullName: )
  - name: )
    fullName: )
  nameWithType: Enumerable.SelectMany<GatewayIPAddressInformation, TCollection, TResult>(Func<GatewayIPAddressInformation, Int32, IEnumerable<TCollection>>, Func<GatewayIPAddressInformation, TCollection, TResult>)
  nameWithType.vb: Enumerable.SelectMany(Of GatewayIPAddressInformation, TCollection, TResult)(Func(Of GatewayIPAddressInformation, Int32, IEnumerable(Of TCollection)), Func(Of GatewayIPAddressInformation, TCollection, TResult))
  commentId: M:System.Linq.Enumerable.SelectMany``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32,System.Collections.Generic.IEnumerable{``1}},System.Func{``0,``1,``2})
- uid: System.Collections.Generic.IEnumerable{System.Net.NetworkInformation.GatewayIPAddressInformation}.System.Linq.Enumerable.SequenceEqual``1(System.Collections.Generic.IEnumerable{System.Net.NetworkInformation.GatewayIPAddressInformation})
  parent: System.Linq.Enumerable
  definition: System.Linq.Enumerable.SequenceEqual``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0})
  name: SequenceEqual<GatewayIPAddressInformation>(IEnumerable<GatewayIPAddressInformation>)
  fullName: System.Linq.Enumerable.SequenceEqual<System.Net.NetworkInformation.GatewayIPAddressInformation>(System.Collections.Generic.IEnumerable<System.Net.NetworkInformation.GatewayIPAddressInformation>)
  fullname.vb: System.Linq.Enumerable.SequenceEqual(Of System.Net.NetworkInformation.GatewayIPAddressInformation)(System.Collections.Generic.IEnumerable(Of System.Net.NetworkInformation.GatewayIPAddressInformation))
  name.vb: SequenceEqual(Of GatewayIPAddressInformation)(IEnumerable(Of GatewayIPAddressInformation))
  spec.csharp:
  - uid: System.Linq.Enumerable.SequenceEqual``1(System.Collections.Generic.IEnumerable{``0})
    name: SequenceEqual<GatewayIPAddressInformation>
    fullName: System.Linq.Enumerable.SequenceEqual<System.Net.NetworkInformation.GatewayIPAddressInformation>
  - name: (
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    fullName: <
  - uid: System.Net.NetworkInformation.GatewayIPAddressInformation
    name: GatewayIPAddressInformation
    fullName: System.Net.NetworkInformation.GatewayIPAddressInformation
  - name: '>'
    fullName: '>'
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Linq.Enumerable.SequenceEqual``1(System.Collections.Generic.IEnumerable{``0})
    name: SequenceEqual(Of GatewayIPAddressInformation)
    fullName: System.Linq.Enumerable.SequenceEqual(Of System.Net.NetworkInformation.GatewayIPAddressInformation)
  - name: (
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - uid: System.Net.NetworkInformation.GatewayIPAddressInformation
    name: GatewayIPAddressInformation
    fullName: System.Net.NetworkInformation.GatewayIPAddressInformation
  - name: )
    fullName: )
  - name: )
    fullName: )
  nameWithType: Enumerable.SequenceEqual<GatewayIPAddressInformation>(IEnumerable<GatewayIPAddressInformation>)
  nameWithType.vb: Enumerable.SequenceEqual(Of GatewayIPAddressInformation)(IEnumerable(Of GatewayIPAddressInformation))
  commentId: M:System.Linq.Enumerable.SequenceEqual``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0})
- uid: System.Collections.Generic.IEnumerable{System.Net.NetworkInformation.GatewayIPAddressInformation}.System.Linq.Enumerable.SequenceEqual``1(System.Collections.Generic.IEnumerable{System.Net.NetworkInformation.GatewayIPAddressInformation},System.Collections.Generic.IEqualityComparer{System.Net.NetworkInformation.GatewayIPAddressInformation})
  parent: System.Linq.Enumerable
  definition: System.Linq.Enumerable.SequenceEqual``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEqualityComparer{``0})
  name: SequenceEqual<GatewayIPAddressInformation>(IEnumerable<GatewayIPAddressInformation>, IEqualityComparer<GatewayIPAddressInformation>)
  fullName: System.Linq.Enumerable.SequenceEqual<System.Net.NetworkInformation.GatewayIPAddressInformation>(System.Collections.Generic.IEnumerable<System.Net.NetworkInformation.GatewayIPAddressInformation>, System.Collections.Generic.IEqualityComparer<System.Net.NetworkInformation.GatewayIPAddressInformation>)
  fullname.vb: System.Linq.Enumerable.SequenceEqual(Of System.Net.NetworkInformation.GatewayIPAddressInformation)(System.Collections.Generic.IEnumerable(Of System.Net.NetworkInformation.GatewayIPAddressInformation), System.Collections.Generic.IEqualityComparer(Of System.Net.NetworkInformation.GatewayIPAddressInformation))
  name.vb: SequenceEqual(Of GatewayIPAddressInformation)(IEnumerable(Of GatewayIPAddressInformation), IEqualityComparer(Of GatewayIPAddressInformation))
  spec.csharp:
  - uid: System.Linq.Enumerable.SequenceEqual``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEqualityComparer{``0})
    name: SequenceEqual<GatewayIPAddressInformation>
    fullName: System.Linq.Enumerable.SequenceEqual<System.Net.NetworkInformation.GatewayIPAddressInformation>
  - name: (
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    fullName: <
  - uid: System.Net.NetworkInformation.GatewayIPAddressInformation
    name: GatewayIPAddressInformation
    fullName: System.Net.NetworkInformation.GatewayIPAddressInformation
  - name: '>'
    fullName: '>'
  - name: ', '
    fullName: ', '
  - uid: System.Collections.Generic.IEqualityComparer`1
    name: IEqualityComparer
    fullName: System.Collections.Generic.IEqualityComparer
    isExternal: true
  - name: <
    fullName: <
  - uid: System.Net.NetworkInformation.GatewayIPAddressInformation
    name: GatewayIPAddressInformation
    fullName: System.Net.NetworkInformation.GatewayIPAddressInformation
  - name: '>'
    fullName: '>'
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Linq.Enumerable.SequenceEqual``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEqualityComparer{``0})
    name: SequenceEqual(Of GatewayIPAddressInformation)
    fullName: System.Linq.Enumerable.SequenceEqual(Of System.Net.NetworkInformation.GatewayIPAddressInformation)
  - name: (
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - uid: System.Net.NetworkInformation.GatewayIPAddressInformation
    name: GatewayIPAddressInformation
    fullName: System.Net.NetworkInformation.GatewayIPAddressInformation
  - name: )
    fullName: )
  - name: ', '
    fullName: ', '
  - uid: System.Collections.Generic.IEqualityComparer`1
    name: IEqualityComparer
    fullName: System.Collections.Generic.IEqualityComparer
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - uid: System.Net.NetworkInformation.GatewayIPAddressInformation
    name: GatewayIPAddressInformation
    fullName: System.Net.NetworkInformation.GatewayIPAddressInformation
  - name: )
    fullName: )
  - name: )
    fullName: )
  nameWithType: Enumerable.SequenceEqual<GatewayIPAddressInformation>(IEnumerable<GatewayIPAddressInformation>, IEqualityComparer<GatewayIPAddressInformation>)
  nameWithType.vb: Enumerable.SequenceEqual(Of GatewayIPAddressInformation)(IEnumerable(Of GatewayIPAddressInformation), IEqualityComparer(Of GatewayIPAddressInformation))
  commentId: M:System.Linq.Enumerable.SequenceEqual``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEqualityComparer{``0})
- uid: System.Collections.Generic.IEnumerable{System.Net.NetworkInformation.GatewayIPAddressInformation}.System.Linq.Enumerable.Single``1
  parent: System.Linq.Enumerable
  definition: System.Linq.Enumerable.Single``1(System.Collections.Generic.IEnumerable{``0})
  name: Single<GatewayIPAddressInformation>()
  fullName: System.Linq.Enumerable.Single<System.Net.NetworkInformation.GatewayIPAddressInformation>()
  fullname.vb: System.Linq.Enumerable.Single(Of System.Net.NetworkInformation.GatewayIPAddressInformation)()
  name.vb: Single(Of GatewayIPAddressInformation)()
  spec.csharp:
  - uid: System.Linq.Enumerable.Single``1
    name: Single<GatewayIPAddressInformation>
    fullName: System.Linq.Enumerable.Single<System.Net.NetworkInformation.GatewayIPAddressInformation>
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Linq.Enumerable.Single``1
    name: Single(Of GatewayIPAddressInformation)
    fullName: System.Linq.Enumerable.Single(Of System.Net.NetworkInformation.GatewayIPAddressInformation)
  - name: (
    fullName: (
  - name: )
    fullName: )
  nameWithType: Enumerable.Single<GatewayIPAddressInformation>()
  nameWithType.vb: Enumerable.Single(Of GatewayIPAddressInformation)()
  commentId: M:System.Linq.Enumerable.Single``1(System.Collections.Generic.IEnumerable{``0})
- uid: System.Collections.Generic.IEnumerable{System.Net.NetworkInformation.GatewayIPAddressInformation}.System.Linq.Enumerable.Single``1(System.Func{System.Net.NetworkInformation.GatewayIPAddressInformation,System.Boolean})
  parent: System.Linq.Enumerable
  definition: System.Linq.Enumerable.Single``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})
  name: Single<GatewayIPAddressInformation>(Func<GatewayIPAddressInformation, Boolean>)
  fullName: System.Linq.Enumerable.Single<System.Net.NetworkInformation.GatewayIPAddressInformation>(System.Func<System.Net.NetworkInformation.GatewayIPAddressInformation, System.Boolean>)
  fullname.vb: System.Linq.Enumerable.Single(Of System.Net.NetworkInformation.GatewayIPAddressInformation)(System.Func(Of System.Net.NetworkInformation.GatewayIPAddressInformation, System.Boolean))
  name.vb: Single(Of GatewayIPAddressInformation)(Func(Of GatewayIPAddressInformation, Boolean))
  spec.csharp:
  - uid: System.Linq.Enumerable.Single``1(System.Func{``0,System.Boolean})
    name: Single<GatewayIPAddressInformation>
    fullName: System.Linq.Enumerable.Single<System.Net.NetworkInformation.GatewayIPAddressInformation>
  - name: (
    fullName: (
  - uid: System.Func`2
    name: Func
    fullName: System.Func
    isExternal: true
  - name: <
    fullName: <
  - uid: System.Net.NetworkInformation.GatewayIPAddressInformation
    name: GatewayIPAddressInformation
    fullName: System.Net.NetworkInformation.GatewayIPAddressInformation
  - name: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: '>'
    fullName: '>'
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Linq.Enumerable.Single``1(System.Func{``0,System.Boolean})
    name: Single(Of GatewayIPAddressInformation)
    fullName: System.Linq.Enumerable.Single(Of System.Net.NetworkInformation.GatewayIPAddressInformation)
  - name: (
    fullName: (
  - uid: System.Func`2
    name: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - uid: System.Net.NetworkInformation.GatewayIPAddressInformation
    name: GatewayIPAddressInformation
    fullName: System.Net.NetworkInformation.GatewayIPAddressInformation
  - name: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    fullName: )
  - name: )
    fullName: )
  nameWithType: Enumerable.Single<GatewayIPAddressInformation>(Func<GatewayIPAddressInformation, Boolean>)
  nameWithType.vb: Enumerable.Single(Of GatewayIPAddressInformation)(Func(Of GatewayIPAddressInformation, Boolean))
  commentId: M:System.Linq.Enumerable.Single``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})
- uid: System.Collections.Generic.IEnumerable{System.Net.NetworkInformation.GatewayIPAddressInformation}.System.Linq.Enumerable.SingleOrDefault``1
  parent: System.Linq.Enumerable
  definition: System.Linq.Enumerable.SingleOrDefault``1(System.Collections.Generic.IEnumerable{``0})
  name: SingleOrDefault<GatewayIPAddressInformation>()
  fullName: System.Linq.Enumerable.SingleOrDefault<System.Net.NetworkInformation.GatewayIPAddressInformation>()
  fullname.vb: System.Linq.Enumerable.SingleOrDefault(Of System.Net.NetworkInformation.GatewayIPAddressInformation)()
  name.vb: SingleOrDefault(Of GatewayIPAddressInformation)()
  spec.csharp:
  - uid: System.Linq.Enumerable.SingleOrDefault``1
    name: SingleOrDefault<GatewayIPAddressInformation>
    fullName: System.Linq.Enumerable.SingleOrDefault<System.Net.NetworkInformation.GatewayIPAddressInformation>
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Linq.Enumerable.SingleOrDefault``1
    name: SingleOrDefault(Of GatewayIPAddressInformation)
    fullName: System.Linq.Enumerable.SingleOrDefault(Of System.Net.NetworkInformation.GatewayIPAddressInformation)
  - name: (
    fullName: (
  - name: )
    fullName: )
  nameWithType: Enumerable.SingleOrDefault<GatewayIPAddressInformation>()
  nameWithType.vb: Enumerable.SingleOrDefault(Of GatewayIPAddressInformation)()
  commentId: M:System.Linq.Enumerable.SingleOrDefault``1(System.Collections.Generic.IEnumerable{``0})
- uid: System.Collections.Generic.IEnumerable{System.Net.NetworkInformation.GatewayIPAddressInformation}.System.Linq.Enumerable.SingleOrDefault``1(System.Func{System.Net.NetworkInformation.GatewayIPAddressInformation,System.Boolean})
  parent: System.Linq.Enumerable
  definition: System.Linq.Enumerable.SingleOrDefault``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})
  name: SingleOrDefault<GatewayIPAddressInformation>(Func<GatewayIPAddressInformation, Boolean>)
  fullName: System.Linq.Enumerable.SingleOrDefault<System.Net.NetworkInformation.GatewayIPAddressInformation>(System.Func<System.Net.NetworkInformation.GatewayIPAddressInformation, System.Boolean>)
  fullname.vb: System.Linq.Enumerable.SingleOrDefault(Of System.Net.NetworkInformation.GatewayIPAddressInformation)(System.Func(Of System.Net.NetworkInformation.GatewayIPAddressInformation, System.Boolean))
  name.vb: SingleOrDefault(Of GatewayIPAddressInformation)(Func(Of GatewayIPAddressInformation, Boolean))
  spec.csharp:
  - uid: System.Linq.Enumerable.SingleOrDefault``1(System.Func{``0,System.Boolean})
    name: SingleOrDefault<GatewayIPAddressInformation>
    fullName: System.Linq.Enumerable.SingleOrDefault<System.Net.NetworkInformation.GatewayIPAddressInformation>
  - name: (
    fullName: (
  - uid: System.Func`2
    name: Func
    fullName: System.Func
    isExternal: true
  - name: <
    fullName: <
  - uid: System.Net.NetworkInformation.GatewayIPAddressInformation
    name: GatewayIPAddressInformation
    fullName: System.Net.NetworkInformation.GatewayIPAddressInformation
  - name: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: '>'
    fullName: '>'
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Linq.Enumerable.SingleOrDefault``1(System.Func{``0,System.Boolean})
    name: SingleOrDefault(Of GatewayIPAddressInformation)
    fullName: System.Linq.Enumerable.SingleOrDefault(Of System.Net.NetworkInformation.GatewayIPAddressInformation)
  - name: (
    fullName: (
  - uid: System.Func`2
    name: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - uid: System.Net.NetworkInformation.GatewayIPAddressInformation
    name: GatewayIPAddressInformation
    fullName: System.Net.NetworkInformation.GatewayIPAddressInformation
  - name: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    fullName: )
  - name: )
    fullName: )
  nameWithType: Enumerable.SingleOrDefault<GatewayIPAddressInformation>(Func<GatewayIPAddressInformation, Boolean>)
  nameWithType.vb: Enumerable.SingleOrDefault(Of GatewayIPAddressInformation)(Func(Of GatewayIPAddressInformation, Boolean))
  commentId: M:System.Linq.Enumerable.SingleOrDefault``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})
- uid: System.Collections.Generic.IEnumerable{System.Net.NetworkInformation.GatewayIPAddressInformation}.System.Linq.Enumerable.Skip``1(System.Int32)
  parent: System.Linq.Enumerable
  definition: System.Linq.Enumerable.Skip``1(System.Collections.Generic.IEnumerable{``0},System.Int32)
  name: Skip<GatewayIPAddressInformation>(Int32)
  fullName: System.Linq.Enumerable.Skip<System.Net.NetworkInformation.GatewayIPAddressInformation>(System.Int32)
  fullname.vb: System.Linq.Enumerable.Skip(Of System.Net.NetworkInformation.GatewayIPAddressInformation)(System.Int32)
  name.vb: Skip(Of GatewayIPAddressInformation)(Int32)
  spec.csharp:
  - uid: System.Linq.Enumerable.Skip``1(System.Int32)
    name: Skip<GatewayIPAddressInformation>
    fullName: System.Linq.Enumerable.Skip<System.Net.NetworkInformation.GatewayIPAddressInformation>
  - name: (
    fullName: (
  - uid: System.Int32
    name: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Linq.Enumerable.Skip``1(System.Int32)
    name: Skip(Of GatewayIPAddressInformation)
    fullName: System.Linq.Enumerable.Skip(Of System.Net.NetworkInformation.GatewayIPAddressInformation)
  - name: (
    fullName: (
  - uid: System.Int32
    name: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    fullName: )
  nameWithType: Enumerable.Skip<GatewayIPAddressInformation>(Int32)
  nameWithType.vb: Enumerable.Skip(Of GatewayIPAddressInformation)(Int32)
  commentId: M:System.Linq.Enumerable.Skip``1(System.Collections.Generic.IEnumerable{``0},System.Int32)
- uid: System.Collections.Generic.IEnumerable{System.Net.NetworkInformation.GatewayIPAddressInformation}.System.Linq.Enumerable.SkipWhile``1(System.Func{System.Net.NetworkInformation.GatewayIPAddressInformation,System.Boolean})
  parent: System.Linq.Enumerable
  definition: System.Linq.Enumerable.SkipWhile``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})
  name: SkipWhile<GatewayIPAddressInformation>(Func<GatewayIPAddressInformation, Boolean>)
  fullName: System.Linq.Enumerable.SkipWhile<System.Net.NetworkInformation.GatewayIPAddressInformation>(System.Func<System.Net.NetworkInformation.GatewayIPAddressInformation, System.Boolean>)
  fullname.vb: System.Linq.Enumerable.SkipWhile(Of System.Net.NetworkInformation.GatewayIPAddressInformation)(System.Func(Of System.Net.NetworkInformation.GatewayIPAddressInformation, System.Boolean))
  name.vb: SkipWhile(Of GatewayIPAddressInformation)(Func(Of GatewayIPAddressInformation, Boolean))
  spec.csharp:
  - uid: System.Linq.Enumerable.SkipWhile``1(System.Func{``0,System.Boolean})
    name: SkipWhile<GatewayIPAddressInformation>
    fullName: System.Linq.Enumerable.SkipWhile<System.Net.NetworkInformation.GatewayIPAddressInformation>
  - name: (
    fullName: (
  - uid: System.Func`2
    name: Func
    fullName: System.Func
    isExternal: true
  - name: <
    fullName: <
  - uid: System.Net.NetworkInformation.GatewayIPAddressInformation
    name: GatewayIPAddressInformation
    fullName: System.Net.NetworkInformation.GatewayIPAddressInformation
  - name: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: '>'
    fullName: '>'
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Linq.Enumerable.SkipWhile``1(System.Func{``0,System.Boolean})
    name: SkipWhile(Of GatewayIPAddressInformation)
    fullName: System.Linq.Enumerable.SkipWhile(Of System.Net.NetworkInformation.GatewayIPAddressInformation)
  - name: (
    fullName: (
  - uid: System.Func`2
    name: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - uid: System.Net.NetworkInformation.GatewayIPAddressInformation
    name: GatewayIPAddressInformation
    fullName: System.Net.NetworkInformation.GatewayIPAddressInformation
  - name: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    fullName: )
  - name: )
    fullName: )
  nameWithType: Enumerable.SkipWhile<GatewayIPAddressInformation>(Func<GatewayIPAddressInformation, Boolean>)
  nameWithType.vb: Enumerable.SkipWhile(Of GatewayIPAddressInformation)(Func(Of GatewayIPAddressInformation, Boolean))
  commentId: M:System.Linq.Enumerable.SkipWhile``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})
- uid: System.Collections.Generic.IEnumerable{System.Net.NetworkInformation.GatewayIPAddressInformation}.System.Linq.Enumerable.SkipWhile``1(System.Func{System.Net.NetworkInformation.GatewayIPAddressInformation,System.Int32,System.Boolean})
  parent: System.Linq.Enumerable
  definition: System.Linq.Enumerable.SkipWhile``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32,System.Boolean})
  name: SkipWhile<GatewayIPAddressInformation>(Func<GatewayIPAddressInformation, Int32, Boolean>)
  fullName: System.Linq.Enumerable.SkipWhile<System.Net.NetworkInformation.GatewayIPAddressInformation>(System.Func<System.Net.NetworkInformation.GatewayIPAddressInformation, System.Int32, System.Boolean>)
  fullname.vb: System.Linq.Enumerable.SkipWhile(Of System.Net.NetworkInformation.GatewayIPAddressInformation)(System.Func(Of System.Net.NetworkInformation.GatewayIPAddressInformation, System.Int32, System.Boolean))
  name.vb: SkipWhile(Of GatewayIPAddressInformation)(Func(Of GatewayIPAddressInformation, Int32, Boolean))
  spec.csharp:
  - uid: System.Linq.Enumerable.SkipWhile``1(System.Func{``0,System.Int32,System.Boolean})
    name: SkipWhile<GatewayIPAddressInformation>
    fullName: System.Linq.Enumerable.SkipWhile<System.Net.NetworkInformation.GatewayIPAddressInformation>
  - name: (
    fullName: (
  - uid: System.Func`3
    name: Func
    fullName: System.Func
    isExternal: true
  - name: <
    fullName: <
  - uid: System.Net.NetworkInformation.GatewayIPAddressInformation
    name: GatewayIPAddressInformation
    fullName: System.Net.NetworkInformation.GatewayIPAddressInformation
  - name: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: '>'
    fullName: '>'
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Linq.Enumerable.SkipWhile``1(System.Func{``0,System.Int32,System.Boolean})
    name: SkipWhile(Of GatewayIPAddressInformation)
    fullName: System.Linq.Enumerable.SkipWhile(Of System.Net.NetworkInformation.GatewayIPAddressInformation)
  - name: (
    fullName: (
  - uid: System.Func`3
    name: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - uid: System.Net.NetworkInformation.GatewayIPAddressInformation
    name: GatewayIPAddressInformation
    fullName: System.Net.NetworkInformation.GatewayIPAddressInformation
  - name: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    fullName: )
  - name: )
    fullName: )
  nameWithType: Enumerable.SkipWhile<GatewayIPAddressInformation>(Func<GatewayIPAddressInformation, Int32, Boolean>)
  nameWithType.vb: Enumerable.SkipWhile(Of GatewayIPAddressInformation)(Func(Of GatewayIPAddressInformation, Int32, Boolean))
  commentId: M:System.Linq.Enumerable.SkipWhile``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32,System.Boolean})
- uid: System.Collections.Generic.IEnumerable{System.Net.NetworkInformation.GatewayIPAddressInformation}.System.Linq.Enumerable.Sum``1(System.Func{System.Net.NetworkInformation.GatewayIPAddressInformation,System.Decimal})
  parent: System.Linq.Enumerable
  definition: System.Linq.Enumerable.Sum``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Decimal})
  name: Sum<GatewayIPAddressInformation>(Func<GatewayIPAddressInformation, Decimal>)
  fullName: System.Linq.Enumerable.Sum<System.Net.NetworkInformation.GatewayIPAddressInformation>(System.Func<System.Net.NetworkInformation.GatewayIPAddressInformation, System.Decimal>)
  fullname.vb: System.Linq.Enumerable.Sum(Of System.Net.NetworkInformation.GatewayIPAddressInformation)(System.Func(Of System.Net.NetworkInformation.GatewayIPAddressInformation, System.Decimal))
  name.vb: Sum(Of GatewayIPAddressInformation)(Func(Of GatewayIPAddressInformation, Decimal))
  spec.csharp:
  - uid: System.Linq.Enumerable.Sum``1(System.Func{``0,System.Decimal})
    name: Sum<GatewayIPAddressInformation>
    fullName: System.Linq.Enumerable.Sum<System.Net.NetworkInformation.GatewayIPAddressInformation>
  - name: (
    fullName: (
  - uid: System.Func`2
    name: Func
    fullName: System.Func
    isExternal: true
  - name: <
    fullName: <
  - uid: System.Net.NetworkInformation.GatewayIPAddressInformation
    name: GatewayIPAddressInformation
    fullName: System.Net.NetworkInformation.GatewayIPAddressInformation
  - name: ', '
    fullName: ', '
  - uid: System.Decimal
    name: Decimal
    fullName: System.Decimal
    isExternal: true
  - name: '>'
    fullName: '>'
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Linq.Enumerable.Sum``1(System.Func{``0,System.Decimal})
    name: Sum(Of GatewayIPAddressInformation)
    fullName: System.Linq.Enumerable.Sum(Of System.Net.NetworkInformation.GatewayIPAddressInformation)
  - name: (
    fullName: (
  - uid: System.Func`2
    name: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - uid: System.Net.NetworkInformation.GatewayIPAddressInformation
    name: GatewayIPAddressInformation
    fullName: System.Net.NetworkInformation.GatewayIPAddressInformation
  - name: ', '
    fullName: ', '
  - uid: System.Decimal
    name: Decimal
    fullName: System.Decimal
    isExternal: true
  - name: )
    fullName: )
  - name: )
    fullName: )
  nameWithType: Enumerable.Sum<GatewayIPAddressInformation>(Func<GatewayIPAddressInformation, Decimal>)
  nameWithType.vb: Enumerable.Sum(Of GatewayIPAddressInformation)(Func(Of GatewayIPAddressInformation, Decimal))
  commentId: M:System.Linq.Enumerable.Sum``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Decimal})
- uid: System.Collections.Generic.IEnumerable{System.Net.NetworkInformation.GatewayIPAddressInformation}.System.Linq.Enumerable.Sum``1(System.Func{System.Net.NetworkInformation.GatewayIPAddressInformation,System.Double})
  parent: System.Linq.Enumerable
  definition: System.Linq.Enumerable.Sum``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Double})
  name: Sum<GatewayIPAddressInformation>(Func<GatewayIPAddressInformation, Double>)
  fullName: System.Linq.Enumerable.Sum<System.Net.NetworkInformation.GatewayIPAddressInformation>(System.Func<System.Net.NetworkInformation.GatewayIPAddressInformation, System.Double>)
  fullname.vb: System.Linq.Enumerable.Sum(Of System.Net.NetworkInformation.GatewayIPAddressInformation)(System.Func(Of System.Net.NetworkInformation.GatewayIPAddressInformation, System.Double))
  name.vb: Sum(Of GatewayIPAddressInformation)(Func(Of GatewayIPAddressInformation, Double))
  spec.csharp:
  - uid: System.Linq.Enumerable.Sum``1(System.Func{``0,System.Double})
    name: Sum<GatewayIPAddressInformation>
    fullName: System.Linq.Enumerable.Sum<System.Net.NetworkInformation.GatewayIPAddressInformation>
  - name: (
    fullName: (
  - uid: System.Func`2
    name: Func
    fullName: System.Func
    isExternal: true
  - name: <
    fullName: <
  - uid: System.Net.NetworkInformation.GatewayIPAddressInformation
    name: GatewayIPAddressInformation
    fullName: System.Net.NetworkInformation.GatewayIPAddressInformation
  - name: ', '
    fullName: ', '
  - uid: System.Double
    name: Double
    fullName: System.Double
    isExternal: true
  - name: '>'
    fullName: '>'
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Linq.Enumerable.Sum``1(System.Func{``0,System.Double})
    name: Sum(Of GatewayIPAddressInformation)
    fullName: System.Linq.Enumerable.Sum(Of System.Net.NetworkInformation.GatewayIPAddressInformation)
  - name: (
    fullName: (
  - uid: System.Func`2
    name: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - uid: System.Net.NetworkInformation.GatewayIPAddressInformation
    name: GatewayIPAddressInformation
    fullName: System.Net.NetworkInformation.GatewayIPAddressInformation
  - name: ', '
    fullName: ', '
  - uid: System.Double
    name: Double
    fullName: System.Double
    isExternal: true
  - name: )
    fullName: )
  - name: )
    fullName: )
  nameWithType: Enumerable.Sum<GatewayIPAddressInformation>(Func<GatewayIPAddressInformation, Double>)
  nameWithType.vb: Enumerable.Sum(Of GatewayIPAddressInformation)(Func(Of GatewayIPAddressInformation, Double))
  commentId: M:System.Linq.Enumerable.Sum``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Double})
- uid: System.Collections.Generic.IEnumerable{System.Net.NetworkInformation.GatewayIPAddressInformation}.System.Linq.Enumerable.Sum``1(System.Func{System.Net.NetworkInformation.GatewayIPAddressInformation,System.Int32})
  parent: System.Linq.Enumerable
  definition: System.Linq.Enumerable.Sum``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32})
  name: Sum<GatewayIPAddressInformation>(Func<GatewayIPAddressInformation, Int32>)
  fullName: System.Linq.Enumerable.Sum<System.Net.NetworkInformation.GatewayIPAddressInformation>(System.Func<System.Net.NetworkInformation.GatewayIPAddressInformation, System.Int32>)
  fullname.vb: System.Linq.Enumerable.Sum(Of System.Net.NetworkInformation.GatewayIPAddressInformation)(System.Func(Of System.Net.NetworkInformation.GatewayIPAddressInformation, System.Int32))
  name.vb: Sum(Of GatewayIPAddressInformation)(Func(Of GatewayIPAddressInformation, Int32))
  spec.csharp:
  - uid: System.Linq.Enumerable.Sum``1(System.Func{``0,System.Int32})
    name: Sum<GatewayIPAddressInformation>
    fullName: System.Linq.Enumerable.Sum<System.Net.NetworkInformation.GatewayIPAddressInformation>
  - name: (
    fullName: (
  - uid: System.Func`2
    name: Func
    fullName: System.Func
    isExternal: true
  - name: <
    fullName: <
  - uid: System.Net.NetworkInformation.GatewayIPAddressInformation
    name: GatewayIPAddressInformation
    fullName: System.Net.NetworkInformation.GatewayIPAddressInformation
  - name: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    fullName: System.Int32
    isExternal: true
  - name: '>'
    fullName: '>'
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Linq.Enumerable.Sum``1(System.Func{``0,System.Int32})
    name: Sum(Of GatewayIPAddressInformation)
    fullName: System.Linq.Enumerable.Sum(Of System.Net.NetworkInformation.GatewayIPAddressInformation)
  - name: (
    fullName: (
  - uid: System.Func`2
    name: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - uid: System.Net.NetworkInformation.GatewayIPAddressInformation
    name: GatewayIPAddressInformation
    fullName: System.Net.NetworkInformation.GatewayIPAddressInformation
  - name: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    fullName: )
  - name: )
    fullName: )
  nameWithType: Enumerable.Sum<GatewayIPAddressInformation>(Func<GatewayIPAddressInformation, Int32>)
  nameWithType.vb: Enumerable.Sum(Of GatewayIPAddressInformation)(Func(Of GatewayIPAddressInformation, Int32))
  commentId: M:System.Linq.Enumerable.Sum``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32})
- uid: System.Collections.Generic.IEnumerable{System.Net.NetworkInformation.GatewayIPAddressInformation}.System.Linq.Enumerable.Sum``1(System.Func{System.Net.NetworkInformation.GatewayIPAddressInformation,System.Int64})
  parent: System.Linq.Enumerable
  definition: System.Linq.Enumerable.Sum``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int64})
  name: Sum<GatewayIPAddressInformation>(Func<GatewayIPAddressInformation, Int64>)
  fullName: System.Linq.Enumerable.Sum<System.Net.NetworkInformation.GatewayIPAddressInformation>(System.Func<System.Net.NetworkInformation.GatewayIPAddressInformation, System.Int64>)
  fullname.vb: System.Linq.Enumerable.Sum(Of System.Net.NetworkInformation.GatewayIPAddressInformation)(System.Func(Of System.Net.NetworkInformation.GatewayIPAddressInformation, System.Int64))
  name.vb: Sum(Of GatewayIPAddressInformation)(Func(Of GatewayIPAddressInformation, Int64))
  spec.csharp:
  - uid: System.Linq.Enumerable.Sum``1(System.Func{``0,System.Int64})
    name: Sum<GatewayIPAddressInformation>
    fullName: System.Linq.Enumerable.Sum<System.Net.NetworkInformation.GatewayIPAddressInformation>
  - name: (
    fullName: (
  - uid: System.Func`2
    name: Func
    fullName: System.Func
    isExternal: true
  - name: <
    fullName: <
  - uid: System.Net.NetworkInformation.GatewayIPAddressInformation
    name: GatewayIPAddressInformation
    fullName: System.Net.NetworkInformation.GatewayIPAddressInformation
  - name: ', '
    fullName: ', '
  - uid: System.Int64
    name: Int64
    fullName: System.Int64
    isExternal: true
  - name: '>'
    fullName: '>'
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Linq.Enumerable.Sum``1(System.Func{``0,System.Int64})
    name: Sum(Of GatewayIPAddressInformation)
    fullName: System.Linq.Enumerable.Sum(Of System.Net.NetworkInformation.GatewayIPAddressInformation)
  - name: (
    fullName: (
  - uid: System.Func`2
    name: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - uid: System.Net.NetworkInformation.GatewayIPAddressInformation
    name: GatewayIPAddressInformation
    fullName: System.Net.NetworkInformation.GatewayIPAddressInformation
  - name: ', '
    fullName: ', '
  - uid: System.Int64
    name: Int64
    fullName: System.Int64
    isExternal: true
  - name: )
    fullName: )
  - name: )
    fullName: )
  nameWithType: Enumerable.Sum<GatewayIPAddressInformation>(Func<GatewayIPAddressInformation, Int64>)
  nameWithType.vb: Enumerable.Sum(Of GatewayIPAddressInformation)(Func(Of GatewayIPAddressInformation, Int64))
  commentId: M:System.Linq.Enumerable.Sum``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int64})
- uid: System.Collections.Generic.IEnumerable{System.Net.NetworkInformation.GatewayIPAddressInformation}.System.Linq.Enumerable.Sum``1(System.Func{System.Net.NetworkInformation.GatewayIPAddressInformation,System.Nullable{System.Decimal}})
  parent: System.Linq.Enumerable
  definition: System.Linq.Enumerable.Sum``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Decimal}})
  name: Sum<GatewayIPAddressInformation>(Func<GatewayIPAddressInformation, Nullable<Decimal>>)
  fullName: System.Linq.Enumerable.Sum<System.Net.NetworkInformation.GatewayIPAddressInformation>(System.Func<System.Net.NetworkInformation.GatewayIPAddressInformation, System.Nullable<System.Decimal>>)
  fullname.vb: System.Linq.Enumerable.Sum(Of System.Net.NetworkInformation.GatewayIPAddressInformation)(System.Func(Of System.Net.NetworkInformation.GatewayIPAddressInformation, System.Nullable(Of System.Decimal)))
  name.vb: Sum(Of GatewayIPAddressInformation)(Func(Of GatewayIPAddressInformation, Nullable(Of Decimal)))
  spec.csharp:
  - uid: System.Linq.Enumerable.Sum``1(System.Func{``0,System.Nullable{System.Decimal}})
    name: Sum<GatewayIPAddressInformation>
    fullName: System.Linq.Enumerable.Sum<System.Net.NetworkInformation.GatewayIPAddressInformation>
  - name: (
    fullName: (
  - uid: System.Func`2
    name: Func
    fullName: System.Func
    isExternal: true
  - name: <
    fullName: <
  - uid: System.Net.NetworkInformation.GatewayIPAddressInformation
    name: GatewayIPAddressInformation
    fullName: System.Net.NetworkInformation.GatewayIPAddressInformation
  - name: ', '
    fullName: ', '
  - uid: System.Nullable`1
    name: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    fullName: <
  - uid: System.Decimal
    name: Decimal
    fullName: System.Decimal
    isExternal: true
  - name: '>'
    fullName: '>'
  - name: '>'
    fullName: '>'
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Linq.Enumerable.Sum``1(System.Func{``0,System.Nullable{System.Decimal}})
    name: Sum(Of GatewayIPAddressInformation)
    fullName: System.Linq.Enumerable.Sum(Of System.Net.NetworkInformation.GatewayIPAddressInformation)
  - name: (
    fullName: (
  - uid: System.Func`2
    name: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - uid: System.Net.NetworkInformation.GatewayIPAddressInformation
    name: GatewayIPAddressInformation
    fullName: System.Net.NetworkInformation.GatewayIPAddressInformation
  - name: ', '
    fullName: ', '
  - uid: System.Nullable`1
    name: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - uid: System.Decimal
    name: Decimal
    fullName: System.Decimal
    isExternal: true
  - name: )
    fullName: )
  - name: )
    fullName: )
  - name: )
    fullName: )
  nameWithType: Enumerable.Sum<GatewayIPAddressInformation>(Func<GatewayIPAddressInformation, Nullable<Decimal>>)
  nameWithType.vb: Enumerable.Sum(Of GatewayIPAddressInformation)(Func(Of GatewayIPAddressInformation, Nullable(Of Decimal)))
  commentId: M:System.Linq.Enumerable.Sum``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Decimal}})
- uid: System.Collections.Generic.IEnumerable{System.Net.NetworkInformation.GatewayIPAddressInformation}.System.Linq.Enumerable.Sum``1(System.Func{System.Net.NetworkInformation.GatewayIPAddressInformation,System.Nullable{System.Double}})
  parent: System.Linq.Enumerable
  definition: System.Linq.Enumerable.Sum``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Double}})
  name: Sum<GatewayIPAddressInformation>(Func<GatewayIPAddressInformation, Nullable<Double>>)
  fullName: System.Linq.Enumerable.Sum<System.Net.NetworkInformation.GatewayIPAddressInformation>(System.Func<System.Net.NetworkInformation.GatewayIPAddressInformation, System.Nullable<System.Double>>)
  fullname.vb: System.Linq.Enumerable.Sum(Of System.Net.NetworkInformation.GatewayIPAddressInformation)(System.Func(Of System.Net.NetworkInformation.GatewayIPAddressInformation, System.Nullable(Of System.Double)))
  name.vb: Sum(Of GatewayIPAddressInformation)(Func(Of GatewayIPAddressInformation, Nullable(Of Double)))
  spec.csharp:
  - uid: System.Linq.Enumerable.Sum``1(System.Func{``0,System.Nullable{System.Double}})
    name: Sum<GatewayIPAddressInformation>
    fullName: System.Linq.Enumerable.Sum<System.Net.NetworkInformation.GatewayIPAddressInformation>
  - name: (
    fullName: (
  - uid: System.Func`2
    name: Func
    fullName: System.Func
    isExternal: true
  - name: <
    fullName: <
  - uid: System.Net.NetworkInformation.GatewayIPAddressInformation
    name: GatewayIPAddressInformation
    fullName: System.Net.NetworkInformation.GatewayIPAddressInformation
  - name: ', '
    fullName: ', '
  - uid: System.Nullable`1
    name: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    fullName: <
  - uid: System.Double
    name: Double
    fullName: System.Double
    isExternal: true
  - name: '>'
    fullName: '>'
  - name: '>'
    fullName: '>'
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Linq.Enumerable.Sum``1(System.Func{``0,System.Nullable{System.Double}})
    name: Sum(Of GatewayIPAddressInformation)
    fullName: System.Linq.Enumerable.Sum(Of System.Net.NetworkInformation.GatewayIPAddressInformation)
  - name: (
    fullName: (
  - uid: System.Func`2
    name: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - uid: System.Net.NetworkInformation.GatewayIPAddressInformation
    name: GatewayIPAddressInformation
    fullName: System.Net.NetworkInformation.GatewayIPAddressInformation
  - name: ', '
    fullName: ', '
  - uid: System.Nullable`1
    name: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - uid: System.Double
    name: Double
    fullName: System.Double
    isExternal: true
  - name: )
    fullName: )
  - name: )
    fullName: )
  - name: )
    fullName: )
  nameWithType: Enumerable.Sum<GatewayIPAddressInformation>(Func<GatewayIPAddressInformation, Nullable<Double>>)
  nameWithType.vb: Enumerable.Sum(Of GatewayIPAddressInformation)(Func(Of GatewayIPAddressInformation, Nullable(Of Double)))
  commentId: M:System.Linq.Enumerable.Sum``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Double}})
- uid: System.Collections.Generic.IEnumerable{System.Net.NetworkInformation.GatewayIPAddressInformation}.System.Linq.Enumerable.Sum``1(System.Func{System.Net.NetworkInformation.GatewayIPAddressInformation,System.Nullable{System.Int32}})
  parent: System.Linq.Enumerable
  definition: System.Linq.Enumerable.Sum``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Int32}})
  name: Sum<GatewayIPAddressInformation>(Func<GatewayIPAddressInformation, Nullable<Int32>>)
  fullName: System.Linq.Enumerable.Sum<System.Net.NetworkInformation.GatewayIPAddressInformation>(System.Func<System.Net.NetworkInformation.GatewayIPAddressInformation, System.Nullable<System.Int32>>)
  fullname.vb: System.Linq.Enumerable.Sum(Of System.Net.NetworkInformation.GatewayIPAddressInformation)(System.Func(Of System.Net.NetworkInformation.GatewayIPAddressInformation, System.Nullable(Of System.Int32)))
  name.vb: Sum(Of GatewayIPAddressInformation)(Func(Of GatewayIPAddressInformation, Nullable(Of Int32)))
  spec.csharp:
  - uid: System.Linq.Enumerable.Sum``1(System.Func{``0,System.Nullable{System.Int32}})
    name: Sum<GatewayIPAddressInformation>
    fullName: System.Linq.Enumerable.Sum<System.Net.NetworkInformation.GatewayIPAddressInformation>
  - name: (
    fullName: (
  - uid: System.Func`2
    name: Func
    fullName: System.Func
    isExternal: true
  - name: <
    fullName: <
  - uid: System.Net.NetworkInformation.GatewayIPAddressInformation
    name: GatewayIPAddressInformation
    fullName: System.Net.NetworkInformation.GatewayIPAddressInformation
  - name: ', '
    fullName: ', '
  - uid: System.Nullable`1
    name: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    fullName: <
  - uid: System.Int32
    name: Int32
    fullName: System.Int32
    isExternal: true
  - name: '>'
    fullName: '>'
  - name: '>'
    fullName: '>'
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Linq.Enumerable.Sum``1(System.Func{``0,System.Nullable{System.Int32}})
    name: Sum(Of GatewayIPAddressInformation)
    fullName: System.Linq.Enumerable.Sum(Of System.Net.NetworkInformation.GatewayIPAddressInformation)
  - name: (
    fullName: (
  - uid: System.Func`2
    name: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - uid: System.Net.NetworkInformation.GatewayIPAddressInformation
    name: GatewayIPAddressInformation
    fullName: System.Net.NetworkInformation.GatewayIPAddressInformation
  - name: ', '
    fullName: ', '
  - uid: System.Nullable`1
    name: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - uid: System.Int32
    name: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    fullName: )
  - name: )
    fullName: )
  - name: )
    fullName: )
  nameWithType: Enumerable.Sum<GatewayIPAddressInformation>(Func<GatewayIPAddressInformation, Nullable<Int32>>)
  nameWithType.vb: Enumerable.Sum(Of GatewayIPAddressInformation)(Func(Of GatewayIPAddressInformation, Nullable(Of Int32)))
  commentId: M:System.Linq.Enumerable.Sum``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Int32}})
- uid: System.Collections.Generic.IEnumerable{System.Net.NetworkInformation.GatewayIPAddressInformation}.System.Linq.Enumerable.Sum``1(System.Func{System.Net.NetworkInformation.GatewayIPAddressInformation,System.Nullable{System.Int64}})
  parent: System.Linq.Enumerable
  definition: System.Linq.Enumerable.Sum``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Int64}})
  name: Sum<GatewayIPAddressInformation>(Func<GatewayIPAddressInformation, Nullable<Int64>>)
  fullName: System.Linq.Enumerable.Sum<System.Net.NetworkInformation.GatewayIPAddressInformation>(System.Func<System.Net.NetworkInformation.GatewayIPAddressInformation, System.Nullable<System.Int64>>)
  fullname.vb: System.Linq.Enumerable.Sum(Of System.Net.NetworkInformation.GatewayIPAddressInformation)(System.Func(Of System.Net.NetworkInformation.GatewayIPAddressInformation, System.Nullable(Of System.Int64)))
  name.vb: Sum(Of GatewayIPAddressInformation)(Func(Of GatewayIPAddressInformation, Nullable(Of Int64)))
  spec.csharp:
  - uid: System.Linq.Enumerable.Sum``1(System.Func{``0,System.Nullable{System.Int64}})
    name: Sum<GatewayIPAddressInformation>
    fullName: System.Linq.Enumerable.Sum<System.Net.NetworkInformation.GatewayIPAddressInformation>
  - name: (
    fullName: (
  - uid: System.Func`2
    name: Func
    fullName: System.Func
    isExternal: true
  - name: <
    fullName: <
  - uid: System.Net.NetworkInformation.GatewayIPAddressInformation
    name: GatewayIPAddressInformation
    fullName: System.Net.NetworkInformation.GatewayIPAddressInformation
  - name: ', '
    fullName: ', '
  - uid: System.Nullable`1
    name: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    fullName: <
  - uid: System.Int64
    name: Int64
    fullName: System.Int64
    isExternal: true
  - name: '>'
    fullName: '>'
  - name: '>'
    fullName: '>'
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Linq.Enumerable.Sum``1(System.Func{``0,System.Nullable{System.Int64}})
    name: Sum(Of GatewayIPAddressInformation)
    fullName: System.Linq.Enumerable.Sum(Of System.Net.NetworkInformation.GatewayIPAddressInformation)
  - name: (
    fullName: (
  - uid: System.Func`2
    name: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - uid: System.Net.NetworkInformation.GatewayIPAddressInformation
    name: GatewayIPAddressInformation
    fullName: System.Net.NetworkInformation.GatewayIPAddressInformation
  - name: ', '
    fullName: ', '
  - uid: System.Nullable`1
    name: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - uid: System.Int64
    name: Int64
    fullName: System.Int64
    isExternal: true
  - name: )
    fullName: )
  - name: )
    fullName: )
  - name: )
    fullName: )
  nameWithType: Enumerable.Sum<GatewayIPAddressInformation>(Func<GatewayIPAddressInformation, Nullable<Int64>>)
  nameWithType.vb: Enumerable.Sum(Of GatewayIPAddressInformation)(Func(Of GatewayIPAddressInformation, Nullable(Of Int64)))
  commentId: M:System.Linq.Enumerable.Sum``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Int64}})
- uid: System.Collections.Generic.IEnumerable{System.Net.NetworkInformation.GatewayIPAddressInformation}.System.Linq.Enumerable.Sum``1(System.Func{System.Net.NetworkInformation.GatewayIPAddressInformation,System.Nullable{System.Single}})
  parent: System.Linq.Enumerable
  definition: System.Linq.Enumerable.Sum``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Single}})
  name: Sum<GatewayIPAddressInformation>(Func<GatewayIPAddressInformation, Nullable<Single>>)
  fullName: System.Linq.Enumerable.Sum<System.Net.NetworkInformation.GatewayIPAddressInformation>(System.Func<System.Net.NetworkInformation.GatewayIPAddressInformation, System.Nullable<System.Single>>)
  fullname.vb: System.Linq.Enumerable.Sum(Of System.Net.NetworkInformation.GatewayIPAddressInformation)(System.Func(Of System.Net.NetworkInformation.GatewayIPAddressInformation, System.Nullable(Of System.Single)))
  name.vb: Sum(Of GatewayIPAddressInformation)(Func(Of GatewayIPAddressInformation, Nullable(Of Single)))
  spec.csharp:
  - uid: System.Linq.Enumerable.Sum``1(System.Func{``0,System.Nullable{System.Single}})
    name: Sum<GatewayIPAddressInformation>
    fullName: System.Linq.Enumerable.Sum<System.Net.NetworkInformation.GatewayIPAddressInformation>
  - name: (
    fullName: (
  - uid: System.Func`2
    name: Func
    fullName: System.Func
    isExternal: true
  - name: <
    fullName: <
  - uid: System.Net.NetworkInformation.GatewayIPAddressInformation
    name: GatewayIPAddressInformation
    fullName: System.Net.NetworkInformation.GatewayIPAddressInformation
  - name: ', '
    fullName: ', '
  - uid: System.Nullable`1
    name: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    fullName: <
  - uid: System.Single
    name: Single
    fullName: System.Single
    isExternal: true
  - name: '>'
    fullName: '>'
  - name: '>'
    fullName: '>'
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Linq.Enumerable.Sum``1(System.Func{``0,System.Nullable{System.Single}})
    name: Sum(Of GatewayIPAddressInformation)
    fullName: System.Linq.Enumerable.Sum(Of System.Net.NetworkInformation.GatewayIPAddressInformation)
  - name: (
    fullName: (
  - uid: System.Func`2
    name: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - uid: System.Net.NetworkInformation.GatewayIPAddressInformation
    name: GatewayIPAddressInformation
    fullName: System.Net.NetworkInformation.GatewayIPAddressInformation
  - name: ', '
    fullName: ', '
  - uid: System.Nullable`1
    name: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - uid: System.Single
    name: Single
    fullName: System.Single
    isExternal: true
  - name: )
    fullName: )
  - name: )
    fullName: )
  - name: )
    fullName: )
  nameWithType: Enumerable.Sum<GatewayIPAddressInformation>(Func<GatewayIPAddressInformation, Nullable<Single>>)
  nameWithType.vb: Enumerable.Sum(Of GatewayIPAddressInformation)(Func(Of GatewayIPAddressInformation, Nullable(Of Single)))
  commentId: M:System.Linq.Enumerable.Sum``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Single}})
- uid: System.Collections.Generic.IEnumerable{System.Net.NetworkInformation.GatewayIPAddressInformation}.System.Linq.Enumerable.Sum``1(System.Func{System.Net.NetworkInformation.GatewayIPAddressInformation,System.Single})
  parent: System.Linq.Enumerable
  definition: System.Linq.Enumerable.Sum``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Single})
  name: Sum<GatewayIPAddressInformation>(Func<GatewayIPAddressInformation, Single>)
  fullName: System.Linq.Enumerable.Sum<System.Net.NetworkInformation.GatewayIPAddressInformation>(System.Func<System.Net.NetworkInformation.GatewayIPAddressInformation, System.Single>)
  fullname.vb: System.Linq.Enumerable.Sum(Of System.Net.NetworkInformation.GatewayIPAddressInformation)(System.Func(Of System.Net.NetworkInformation.GatewayIPAddressInformation, System.Single))
  name.vb: Sum(Of GatewayIPAddressInformation)(Func(Of GatewayIPAddressInformation, Single))
  spec.csharp:
  - uid: System.Linq.Enumerable.Sum``1(System.Func{``0,System.Single})
    name: Sum<GatewayIPAddressInformation>
    fullName: System.Linq.Enumerable.Sum<System.Net.NetworkInformation.GatewayIPAddressInformation>
  - name: (
    fullName: (
  - uid: System.Func`2
    name: Func
    fullName: System.Func
    isExternal: true
  - name: <
    fullName: <
  - uid: System.Net.NetworkInformation.GatewayIPAddressInformation
    name: GatewayIPAddressInformation
    fullName: System.Net.NetworkInformation.GatewayIPAddressInformation
  - name: ', '
    fullName: ', '
  - uid: System.Single
    name: Single
    fullName: System.Single
    isExternal: true
  - name: '>'
    fullName: '>'
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Linq.Enumerable.Sum``1(System.Func{``0,System.Single})
    name: Sum(Of GatewayIPAddressInformation)
    fullName: System.Linq.Enumerable.Sum(Of System.Net.NetworkInformation.GatewayIPAddressInformation)
  - name: (
    fullName: (
  - uid: System.Func`2
    name: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - uid: System.Net.NetworkInformation.GatewayIPAddressInformation
    name: GatewayIPAddressInformation
    fullName: System.Net.NetworkInformation.GatewayIPAddressInformation
  - name: ', '
    fullName: ', '
  - uid: System.Single
    name: Single
    fullName: System.Single
    isExternal: true
  - name: )
    fullName: )
  - name: )
    fullName: )
  nameWithType: Enumerable.Sum<GatewayIPAddressInformation>(Func<GatewayIPAddressInformation, Single>)
  nameWithType.vb: Enumerable.Sum(Of GatewayIPAddressInformation)(Func(Of GatewayIPAddressInformation, Single))
  commentId: M:System.Linq.Enumerable.Sum``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Single})
- uid: System.Collections.Generic.IEnumerable{System.Net.NetworkInformation.GatewayIPAddressInformation}.System.Linq.Enumerable.Take``1(System.Int32)
  parent: System.Linq.Enumerable
  definition: System.Linq.Enumerable.Take``1(System.Collections.Generic.IEnumerable{``0},System.Int32)
  name: Take<GatewayIPAddressInformation>(Int32)
  fullName: System.Linq.Enumerable.Take<System.Net.NetworkInformation.GatewayIPAddressInformation>(System.Int32)
  fullname.vb: System.Linq.Enumerable.Take(Of System.Net.NetworkInformation.GatewayIPAddressInformation)(System.Int32)
  name.vb: Take(Of GatewayIPAddressInformation)(Int32)
  spec.csharp:
  - uid: System.Linq.Enumerable.Take``1(System.Int32)
    name: Take<GatewayIPAddressInformation>
    fullName: System.Linq.Enumerable.Take<System.Net.NetworkInformation.GatewayIPAddressInformation>
  - name: (
    fullName: (
  - uid: System.Int32
    name: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Linq.Enumerable.Take``1(System.Int32)
    name: Take(Of GatewayIPAddressInformation)
    fullName: System.Linq.Enumerable.Take(Of System.Net.NetworkInformation.GatewayIPAddressInformation)
  - name: (
    fullName: (
  - uid: System.Int32
    name: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    fullName: )
  nameWithType: Enumerable.Take<GatewayIPAddressInformation>(Int32)
  nameWithType.vb: Enumerable.Take(Of GatewayIPAddressInformation)(Int32)
  commentId: M:System.Linq.Enumerable.Take``1(System.Collections.Generic.IEnumerable{``0},System.Int32)
- uid: System.Collections.Generic.IEnumerable{System.Net.NetworkInformation.GatewayIPAddressInformation}.System.Linq.Enumerable.TakeWhile``1(System.Func{System.Net.NetworkInformation.GatewayIPAddressInformation,System.Boolean})
  parent: System.Linq.Enumerable
  definition: System.Linq.Enumerable.TakeWhile``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})
  name: TakeWhile<GatewayIPAddressInformation>(Func<GatewayIPAddressInformation, Boolean>)
  fullName: System.Linq.Enumerable.TakeWhile<System.Net.NetworkInformation.GatewayIPAddressInformation>(System.Func<System.Net.NetworkInformation.GatewayIPAddressInformation, System.Boolean>)
  fullname.vb: System.Linq.Enumerable.TakeWhile(Of System.Net.NetworkInformation.GatewayIPAddressInformation)(System.Func(Of System.Net.NetworkInformation.GatewayIPAddressInformation, System.Boolean))
  name.vb: TakeWhile(Of GatewayIPAddressInformation)(Func(Of GatewayIPAddressInformation, Boolean))
  spec.csharp:
  - uid: System.Linq.Enumerable.TakeWhile``1(System.Func{``0,System.Boolean})
    name: TakeWhile<GatewayIPAddressInformation>
    fullName: System.Linq.Enumerable.TakeWhile<System.Net.NetworkInformation.GatewayIPAddressInformation>
  - name: (
    fullName: (
  - uid: System.Func`2
    name: Func
    fullName: System.Func
    isExternal: true
  - name: <
    fullName: <
  - uid: System.Net.NetworkInformation.GatewayIPAddressInformation
    name: GatewayIPAddressInformation
    fullName: System.Net.NetworkInformation.GatewayIPAddressInformation
  - name: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: '>'
    fullName: '>'
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Linq.Enumerable.TakeWhile``1(System.Func{``0,System.Boolean})
    name: TakeWhile(Of GatewayIPAddressInformation)
    fullName: System.Linq.Enumerable.TakeWhile(Of System.Net.NetworkInformation.GatewayIPAddressInformation)
  - name: (
    fullName: (
  - uid: System.Func`2
    name: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - uid: System.Net.NetworkInformation.GatewayIPAddressInformation
    name: GatewayIPAddressInformation
    fullName: System.Net.NetworkInformation.GatewayIPAddressInformation
  - name: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    fullName: )
  - name: )
    fullName: )
  nameWithType: Enumerable.TakeWhile<GatewayIPAddressInformation>(Func<GatewayIPAddressInformation, Boolean>)
  nameWithType.vb: Enumerable.TakeWhile(Of GatewayIPAddressInformation)(Func(Of GatewayIPAddressInformation, Boolean))
  commentId: M:System.Linq.Enumerable.TakeWhile``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})
- uid: System.Collections.Generic.IEnumerable{System.Net.NetworkInformation.GatewayIPAddressInformation}.System.Linq.Enumerable.TakeWhile``1(System.Func{System.Net.NetworkInformation.GatewayIPAddressInformation,System.Int32,System.Boolean})
  parent: System.Linq.Enumerable
  definition: System.Linq.Enumerable.TakeWhile``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32,System.Boolean})
  name: TakeWhile<GatewayIPAddressInformation>(Func<GatewayIPAddressInformation, Int32, Boolean>)
  fullName: System.Linq.Enumerable.TakeWhile<System.Net.NetworkInformation.GatewayIPAddressInformation>(System.Func<System.Net.NetworkInformation.GatewayIPAddressInformation, System.Int32, System.Boolean>)
  fullname.vb: System.Linq.Enumerable.TakeWhile(Of System.Net.NetworkInformation.GatewayIPAddressInformation)(System.Func(Of System.Net.NetworkInformation.GatewayIPAddressInformation, System.Int32, System.Boolean))
  name.vb: TakeWhile(Of GatewayIPAddressInformation)(Func(Of GatewayIPAddressInformation, Int32, Boolean))
  spec.csharp:
  - uid: System.Linq.Enumerable.TakeWhile``1(System.Func{``0,System.Int32,System.Boolean})
    name: TakeWhile<GatewayIPAddressInformation>
    fullName: System.Linq.Enumerable.TakeWhile<System.Net.NetworkInformation.GatewayIPAddressInformation>
  - name: (
    fullName: (
  - uid: System.Func`3
    name: Func
    fullName: System.Func
    isExternal: true
  - name: <
    fullName: <
  - uid: System.Net.NetworkInformation.GatewayIPAddressInformation
    name: GatewayIPAddressInformation
    fullName: System.Net.NetworkInformation.GatewayIPAddressInformation
  - name: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: '>'
    fullName: '>'
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Linq.Enumerable.TakeWhile``1(System.Func{``0,System.Int32,System.Boolean})
    name: TakeWhile(Of GatewayIPAddressInformation)
    fullName: System.Linq.Enumerable.TakeWhile(Of System.Net.NetworkInformation.GatewayIPAddressInformation)
  - name: (
    fullName: (
  - uid: System.Func`3
    name: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - uid: System.Net.NetworkInformation.GatewayIPAddressInformation
    name: GatewayIPAddressInformation
    fullName: System.Net.NetworkInformation.GatewayIPAddressInformation
  - name: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    fullName: )
  - name: )
    fullName: )
  nameWithType: Enumerable.TakeWhile<GatewayIPAddressInformation>(Func<GatewayIPAddressInformation, Int32, Boolean>)
  nameWithType.vb: Enumerable.TakeWhile(Of GatewayIPAddressInformation)(Func(Of GatewayIPAddressInformation, Int32, Boolean))
  commentId: M:System.Linq.Enumerable.TakeWhile``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32,System.Boolean})
- uid: System.Collections.Generic.IEnumerable{System.Net.NetworkInformation.GatewayIPAddressInformation}.System.Linq.Enumerable.ToArray``1
  parent: System.Linq.Enumerable
  definition: System.Linq.Enumerable.ToArray``1(System.Collections.Generic.IEnumerable{``0})
  name: ToArray<GatewayIPAddressInformation>()
  fullName: System.Linq.Enumerable.ToArray<System.Net.NetworkInformation.GatewayIPAddressInformation>()
  fullname.vb: System.Linq.Enumerable.ToArray(Of System.Net.NetworkInformation.GatewayIPAddressInformation)()
  name.vb: ToArray(Of GatewayIPAddressInformation)()
  spec.csharp:
  - uid: System.Linq.Enumerable.ToArray``1
    name: ToArray<GatewayIPAddressInformation>
    fullName: System.Linq.Enumerable.ToArray<System.Net.NetworkInformation.GatewayIPAddressInformation>
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Linq.Enumerable.ToArray``1
    name: ToArray(Of GatewayIPAddressInformation)
    fullName: System.Linq.Enumerable.ToArray(Of System.Net.NetworkInformation.GatewayIPAddressInformation)
  - name: (
    fullName: (
  - name: )
    fullName: )
  nameWithType: Enumerable.ToArray<GatewayIPAddressInformation>()
  nameWithType.vb: Enumerable.ToArray(Of GatewayIPAddressInformation)()
  commentId: M:System.Linq.Enumerable.ToArray``1(System.Collections.Generic.IEnumerable{``0})
- uid: System.Collections.Generic.IEnumerable{System.Net.NetworkInformation.GatewayIPAddressInformation}.System.Linq.Enumerable.ToDictionary``2(System.Func{System.Net.NetworkInformation.GatewayIPAddressInformation,{TKey}})
  parent: System.Linq.Enumerable
  definition: System.Linq.Enumerable.ToDictionary``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})
  name: ToDictionary<GatewayIPAddressInformation, TKey>(Func<GatewayIPAddressInformation, TKey>)
  fullName: System.Linq.Enumerable.ToDictionary<System.Net.NetworkInformation.GatewayIPAddressInformation, TKey>(System.Func<System.Net.NetworkInformation.GatewayIPAddressInformation, TKey>)
  fullname.vb: System.Linq.Enumerable.ToDictionary(Of System.Net.NetworkInformation.GatewayIPAddressInformation, TKey)(System.Func(Of System.Net.NetworkInformation.GatewayIPAddressInformation, TKey))
  name.vb: ToDictionary(Of GatewayIPAddressInformation, TKey)(Func(Of GatewayIPAddressInformation, TKey))
  spec.csharp:
  - uid: System.Linq.Enumerable.ToDictionary``2(System.Func{``0,``1})
    name: ToDictionary<GatewayIPAddressInformation, TKey>
    fullName: System.Linq.Enumerable.ToDictionary<System.Net.NetworkInformation.GatewayIPAddressInformation, TKey>
  - name: (
    fullName: (
  - uid: System.Func`2
    name: Func
    fullName: System.Func
    isExternal: true
  - name: <
    fullName: <
  - uid: System.Net.NetworkInformation.GatewayIPAddressInformation
    name: GatewayIPAddressInformation
    fullName: System.Net.NetworkInformation.GatewayIPAddressInformation
  - name: ', '
    fullName: ', '
  - name: TKey
    fullName: TKey
  - name: '>'
    fullName: '>'
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Linq.Enumerable.ToDictionary``2(System.Func{``0,``1})
    name: ToDictionary(Of GatewayIPAddressInformation, TKey)
    fullName: System.Linq.Enumerable.ToDictionary(Of System.Net.NetworkInformation.GatewayIPAddressInformation, TKey)
  - name: (
    fullName: (
  - uid: System.Func`2
    name: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - uid: System.Net.NetworkInformation.GatewayIPAddressInformation
    name: GatewayIPAddressInformation
    fullName: System.Net.NetworkInformation.GatewayIPAddressInformation
  - name: ', '
    fullName: ', '
  - name: TKey
    fullName: TKey
  - name: )
    fullName: )
  - name: )
    fullName: )
  nameWithType: Enumerable.ToDictionary<GatewayIPAddressInformation, TKey>(Func<GatewayIPAddressInformation, TKey>)
  nameWithType.vb: Enumerable.ToDictionary(Of GatewayIPAddressInformation, TKey)(Func(Of GatewayIPAddressInformation, TKey))
  commentId: M:System.Linq.Enumerable.ToDictionary``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})
- uid: System.Collections.Generic.IEnumerable{System.Net.NetworkInformation.GatewayIPAddressInformation}.System.Linq.Enumerable.ToDictionary``2(System.Func{System.Net.NetworkInformation.GatewayIPAddressInformation,{TKey}},System.Collections.Generic.IEqualityComparer{{TKey}})
  parent: System.Linq.Enumerable
  definition: System.Linq.Enumerable.ToDictionary``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IEqualityComparer{``1})
  name: ToDictionary<GatewayIPAddressInformation, TKey>(Func<GatewayIPAddressInformation, TKey>, IEqualityComparer<TKey>)
  fullName: System.Linq.Enumerable.ToDictionary<System.Net.NetworkInformation.GatewayIPAddressInformation, TKey>(System.Func<System.Net.NetworkInformation.GatewayIPAddressInformation, TKey>, System.Collections.Generic.IEqualityComparer<TKey>)
  fullname.vb: System.Linq.Enumerable.ToDictionary(Of System.Net.NetworkInformation.GatewayIPAddressInformation, TKey)(System.Func(Of System.Net.NetworkInformation.GatewayIPAddressInformation, TKey), System.Collections.Generic.IEqualityComparer(Of TKey))
  name.vb: ToDictionary(Of GatewayIPAddressInformation, TKey)(Func(Of GatewayIPAddressInformation, TKey), IEqualityComparer(Of TKey))
  spec.csharp:
  - uid: System.Linq.Enumerable.ToDictionary``2(System.Func{``0,``1},System.Collections.Generic.IEqualityComparer{``1})
    name: ToDictionary<GatewayIPAddressInformation, TKey>
    fullName: System.Linq.Enumerable.ToDictionary<System.Net.NetworkInformation.GatewayIPAddressInformation, TKey>
  - name: (
    fullName: (
  - uid: System.Func`2
    name: Func
    fullName: System.Func
    isExternal: true
  - name: <
    fullName: <
  - uid: System.Net.NetworkInformation.GatewayIPAddressInformation
    name: GatewayIPAddressInformation
    fullName: System.Net.NetworkInformation.GatewayIPAddressInformation
  - name: ', '
    fullName: ', '
  - name: TKey
    fullName: TKey
  - name: '>'
    fullName: '>'
  - name: ', '
    fullName: ', '
  - uid: System.Collections.Generic.IEqualityComparer`1
    name: IEqualityComparer
    fullName: System.Collections.Generic.IEqualityComparer
    isExternal: true
  - name: <
    fullName: <
  - name: TKey
    fullName: TKey
  - name: '>'
    fullName: '>'
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Linq.Enumerable.ToDictionary``2(System.Func{``0,``1},System.Collections.Generic.IEqualityComparer{``1})
    name: ToDictionary(Of GatewayIPAddressInformation, TKey)
    fullName: System.Linq.Enumerable.ToDictionary(Of System.Net.NetworkInformation.GatewayIPAddressInformation, TKey)
  - name: (
    fullName: (
  - uid: System.Func`2
    name: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - uid: System.Net.NetworkInformation.GatewayIPAddressInformation
    name: GatewayIPAddressInformation
    fullName: System.Net.NetworkInformation.GatewayIPAddressInformation
  - name: ', '
    fullName: ', '
  - name: TKey
    fullName: TKey
  - name: )
    fullName: )
  - name: ', '
    fullName: ', '
  - uid: System.Collections.Generic.IEqualityComparer`1
    name: IEqualityComparer
    fullName: System.Collections.Generic.IEqualityComparer
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - name: TKey
    fullName: TKey
  - name: )
    fullName: )
  - name: )
    fullName: )
  nameWithType: Enumerable.ToDictionary<GatewayIPAddressInformation, TKey>(Func<GatewayIPAddressInformation, TKey>, IEqualityComparer<TKey>)
  nameWithType.vb: Enumerable.ToDictionary(Of GatewayIPAddressInformation, TKey)(Func(Of GatewayIPAddressInformation, TKey), IEqualityComparer(Of TKey))
  commentId: M:System.Linq.Enumerable.ToDictionary``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IEqualityComparer{``1})
- uid: System.Collections.Generic.IEnumerable{System.Net.NetworkInformation.GatewayIPAddressInformation}.System.Linq.Enumerable.ToDictionary``3(System.Func{System.Net.NetworkInformation.GatewayIPAddressInformation,{TKey}},System.Func{System.Net.NetworkInformation.GatewayIPAddressInformation,{TElement}})
  parent: System.Linq.Enumerable
  definition: System.Linq.Enumerable.ToDictionary``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2})
  name: ToDictionary<GatewayIPAddressInformation, TKey, TElement>(Func<GatewayIPAddressInformation, TKey>, Func<GatewayIPAddressInformation, TElement>)
  fullName: System.Linq.Enumerable.ToDictionary<System.Net.NetworkInformation.GatewayIPAddressInformation, TKey, TElement>(System.Func<System.Net.NetworkInformation.GatewayIPAddressInformation, TKey>, System.Func<System.Net.NetworkInformation.GatewayIPAddressInformation, TElement>)
  fullname.vb: System.Linq.Enumerable.ToDictionary(Of System.Net.NetworkInformation.GatewayIPAddressInformation, TKey, TElement)(System.Func(Of System.Net.NetworkInformation.GatewayIPAddressInformation, TKey), System.Func(Of System.Net.NetworkInformation.GatewayIPAddressInformation, TElement))
  name.vb: ToDictionary(Of GatewayIPAddressInformation, TKey, TElement)(Func(Of GatewayIPAddressInformation, TKey), Func(Of GatewayIPAddressInformation, TElement))
  spec.csharp:
  - uid: System.Linq.Enumerable.ToDictionary``3(System.Func{``0,``1},System.Func{``0,``2})
    name: ToDictionary<GatewayIPAddressInformation, TKey, TElement>
    fullName: System.Linq.Enumerable.ToDictionary<System.Net.NetworkInformation.GatewayIPAddressInformation, TKey, TElement>
  - name: (
    fullName: (
  - uid: System.Func`2
    name: Func
    fullName: System.Func
    isExternal: true
  - name: <
    fullName: <
  - uid: System.Net.NetworkInformation.GatewayIPAddressInformation
    name: GatewayIPAddressInformation
    fullName: System.Net.NetworkInformation.GatewayIPAddressInformation
  - name: ', '
    fullName: ', '
  - name: TKey
    fullName: TKey
  - name: '>'
    fullName: '>'
  - name: ', '
    fullName: ', '
  - uid: System.Func`2
    name: Func
    fullName: System.Func
    isExternal: true
  - name: <
    fullName: <
  - uid: System.Net.NetworkInformation.GatewayIPAddressInformation
    name: GatewayIPAddressInformation
    fullName: System.Net.NetworkInformation.GatewayIPAddressInformation
  - name: ', '
    fullName: ', '
  - name: TElement
    fullName: TElement
  - name: '>'
    fullName: '>'
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Linq.Enumerable.ToDictionary``3(System.Func{``0,``1},System.Func{``0,``2})
    name: ToDictionary(Of GatewayIPAddressInformation, TKey, TElement)
    fullName: System.Linq.Enumerable.ToDictionary(Of System.Net.NetworkInformation.GatewayIPAddressInformation, TKey, TElement)
  - name: (
    fullName: (
  - uid: System.Func`2
    name: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - uid: System.Net.NetworkInformation.GatewayIPAddressInformation
    name: GatewayIPAddressInformation
    fullName: System.Net.NetworkInformation.GatewayIPAddressInformation
  - name: ', '
    fullName: ', '
  - name: TKey
    fullName: TKey
  - name: )
    fullName: )
  - name: ', '
    fullName: ', '
  - uid: System.Func`2
    name: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - uid: System.Net.NetworkInformation.GatewayIPAddressInformation
    name: GatewayIPAddressInformation
    fullName: System.Net.NetworkInformation.GatewayIPAddressInformation
  - name: ', '
    fullName: ', '
  - name: TElement
    fullName: TElement
  - name: )
    fullName: )
  - name: )
    fullName: )
  nameWithType: Enumerable.ToDictionary<GatewayIPAddressInformation, TKey, TElement>(Func<GatewayIPAddressInformation, TKey>, Func<GatewayIPAddressInformation, TElement>)
  nameWithType.vb: Enumerable.ToDictionary(Of GatewayIPAddressInformation, TKey, TElement)(Func(Of GatewayIPAddressInformation, TKey), Func(Of GatewayIPAddressInformation, TElement))
  commentId: M:System.Linq.Enumerable.ToDictionary``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2})
- uid: System.Collections.Generic.IEnumerable{System.Net.NetworkInformation.GatewayIPAddressInformation}.System.Linq.Enumerable.ToDictionary``3(System.Func{System.Net.NetworkInformation.GatewayIPAddressInformation,{TKey}},System.Func{System.Net.NetworkInformation.GatewayIPAddressInformation,{TElement}},System.Collections.Generic.IEqualityComparer{{TKey}})
  parent: System.Linq.Enumerable
  definition: System.Linq.Enumerable.ToDictionary``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})
  name: ToDictionary<GatewayIPAddressInformation, TKey, TElement>(Func<GatewayIPAddressInformation, TKey>, Func<GatewayIPAddressInformation, TElement>, IEqualityComparer<TKey>)
  fullName: System.Linq.Enumerable.ToDictionary<System.Net.NetworkInformation.GatewayIPAddressInformation, TKey, TElement>(System.Func<System.Net.NetworkInformation.GatewayIPAddressInformation, TKey>, System.Func<System.Net.NetworkInformation.GatewayIPAddressInformation, TElement>, System.Collections.Generic.IEqualityComparer<TKey>)
  fullname.vb: System.Linq.Enumerable.ToDictionary(Of System.Net.NetworkInformation.GatewayIPAddressInformation, TKey, TElement)(System.Func(Of System.Net.NetworkInformation.GatewayIPAddressInformation, TKey), System.Func(Of System.Net.NetworkInformation.GatewayIPAddressInformation, TElement), System.Collections.Generic.IEqualityComparer(Of TKey))
  name.vb: ToDictionary(Of GatewayIPAddressInformation, TKey, TElement)(Func(Of GatewayIPAddressInformation, TKey), Func(Of GatewayIPAddressInformation, TElement), IEqualityComparer(Of TKey))
  spec.csharp:
  - uid: System.Linq.Enumerable.ToDictionary``3(System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})
    name: ToDictionary<GatewayIPAddressInformation, TKey, TElement>
    fullName: System.Linq.Enumerable.ToDictionary<System.Net.NetworkInformation.GatewayIPAddressInformation, TKey, TElement>
  - name: (
    fullName: (
  - uid: System.Func`2
    name: Func
    fullName: System.Func
    isExternal: true
  - name: <
    fullName: <
  - uid: System.Net.NetworkInformation.GatewayIPAddressInformation
    name: GatewayIPAddressInformation
    fullName: System.Net.NetworkInformation.GatewayIPAddressInformation
  - name: ', '
    fullName: ', '
  - name: TKey
    fullName: TKey
  - name: '>'
    fullName: '>'
  - name: ', '
    fullName: ', '
  - uid: System.Func`2
    name: Func
    fullName: System.Func
    isExternal: true
  - name: <
    fullName: <
  - uid: System.Net.NetworkInformation.GatewayIPAddressInformation
    name: GatewayIPAddressInformation
    fullName: System.Net.NetworkInformation.GatewayIPAddressInformation
  - name: ', '
    fullName: ', '
  - name: TElement
    fullName: TElement
  - name: '>'
    fullName: '>'
  - name: ', '
    fullName: ', '
  - uid: System.Collections.Generic.IEqualityComparer`1
    name: IEqualityComparer
    fullName: System.Collections.Generic.IEqualityComparer
    isExternal: true
  - name: <
    fullName: <
  - name: TKey
    fullName: TKey
  - name: '>'
    fullName: '>'
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Linq.Enumerable.ToDictionary``3(System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})
    name: ToDictionary(Of GatewayIPAddressInformation, TKey, TElement)
    fullName: System.Linq.Enumerable.ToDictionary(Of System.Net.NetworkInformation.GatewayIPAddressInformation, TKey, TElement)
  - name: (
    fullName: (
  - uid: System.Func`2
    name: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - uid: System.Net.NetworkInformation.GatewayIPAddressInformation
    name: GatewayIPAddressInformation
    fullName: System.Net.NetworkInformation.GatewayIPAddressInformation
  - name: ', '
    fullName: ', '
  - name: TKey
    fullName: TKey
  - name: )
    fullName: )
  - name: ', '
    fullName: ', '
  - uid: System.Func`2
    name: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - uid: System.Net.NetworkInformation.GatewayIPAddressInformation
    name: GatewayIPAddressInformation
    fullName: System.Net.NetworkInformation.GatewayIPAddressInformation
  - name: ', '
    fullName: ', '
  - name: TElement
    fullName: TElement
  - name: )
    fullName: )
  - name: ', '
    fullName: ', '
  - uid: System.Collections.Generic.IEqualityComparer`1
    name: IEqualityComparer
    fullName: System.Collections.Generic.IEqualityComparer
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - name: TKey
    fullName: TKey
  - name: )
    fullName: )
  - name: )
    fullName: )
  nameWithType: Enumerable.ToDictionary<GatewayIPAddressInformation, TKey, TElement>(Func<GatewayIPAddressInformation, TKey>, Func<GatewayIPAddressInformation, TElement>, IEqualityComparer<TKey>)
  nameWithType.vb: Enumerable.ToDictionary(Of GatewayIPAddressInformation, TKey, TElement)(Func(Of GatewayIPAddressInformation, TKey), Func(Of GatewayIPAddressInformation, TElement), IEqualityComparer(Of TKey))
  commentId: M:System.Linq.Enumerable.ToDictionary``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})
- uid: System.Collections.Generic.IEnumerable{System.Net.NetworkInformation.GatewayIPAddressInformation}.System.Linq.Enumerable.ToList``1
  parent: System.Linq.Enumerable
  definition: System.Linq.Enumerable.ToList``1(System.Collections.Generic.IEnumerable{``0})
  name: ToList<GatewayIPAddressInformation>()
  fullName: System.Linq.Enumerable.ToList<System.Net.NetworkInformation.GatewayIPAddressInformation>()
  fullname.vb: System.Linq.Enumerable.ToList(Of System.Net.NetworkInformation.GatewayIPAddressInformation)()
  name.vb: ToList(Of GatewayIPAddressInformation)()
  spec.csharp:
  - uid: System.Linq.Enumerable.ToList``1
    name: ToList<GatewayIPAddressInformation>
    fullName: System.Linq.Enumerable.ToList<System.Net.NetworkInformation.GatewayIPAddressInformation>
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Linq.Enumerable.ToList``1
    name: ToList(Of GatewayIPAddressInformation)
    fullName: System.Linq.Enumerable.ToList(Of System.Net.NetworkInformation.GatewayIPAddressInformation)
  - name: (
    fullName: (
  - name: )
    fullName: )
  nameWithType: Enumerable.ToList<GatewayIPAddressInformation>()
  nameWithType.vb: Enumerable.ToList(Of GatewayIPAddressInformation)()
  commentId: M:System.Linq.Enumerable.ToList``1(System.Collections.Generic.IEnumerable{``0})
- uid: System.Collections.Generic.IEnumerable{System.Net.NetworkInformation.GatewayIPAddressInformation}.System.Linq.Enumerable.ToLookup``2(System.Func{System.Net.NetworkInformation.GatewayIPAddressInformation,{TKey}})
  parent: System.Linq.Enumerable
  definition: System.Linq.Enumerable.ToLookup``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})
  name: ToLookup<GatewayIPAddressInformation, TKey>(Func<GatewayIPAddressInformation, TKey>)
  fullName: System.Linq.Enumerable.ToLookup<System.Net.NetworkInformation.GatewayIPAddressInformation, TKey>(System.Func<System.Net.NetworkInformation.GatewayIPAddressInformation, TKey>)
  fullname.vb: System.Linq.Enumerable.ToLookup(Of System.Net.NetworkInformation.GatewayIPAddressInformation, TKey)(System.Func(Of System.Net.NetworkInformation.GatewayIPAddressInformation, TKey))
  name.vb: ToLookup(Of GatewayIPAddressInformation, TKey)(Func(Of GatewayIPAddressInformation, TKey))
  spec.csharp:
  - uid: System.Linq.Enumerable.ToLookup``2(System.Func{``0,``1})
    name: ToLookup<GatewayIPAddressInformation, TKey>
    fullName: System.Linq.Enumerable.ToLookup<System.Net.NetworkInformation.GatewayIPAddressInformation, TKey>
  - name: (
    fullName: (
  - uid: System.Func`2
    name: Func
    fullName: System.Func
    isExternal: true
  - name: <
    fullName: <
  - uid: System.Net.NetworkInformation.GatewayIPAddressInformation
    name: GatewayIPAddressInformation
    fullName: System.Net.NetworkInformation.GatewayIPAddressInformation
  - name: ', '
    fullName: ', '
  - name: TKey
    fullName: TKey
  - name: '>'
    fullName: '>'
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Linq.Enumerable.ToLookup``2(System.Func{``0,``1})
    name: ToLookup(Of GatewayIPAddressInformation, TKey)
    fullName: System.Linq.Enumerable.ToLookup(Of System.Net.NetworkInformation.GatewayIPAddressInformation, TKey)
  - name: (
    fullName: (
  - uid: System.Func`2
    name: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - uid: System.Net.NetworkInformation.GatewayIPAddressInformation
    name: GatewayIPAddressInformation
    fullName: System.Net.NetworkInformation.GatewayIPAddressInformation
  - name: ', '
    fullName: ', '
  - name: TKey
    fullName: TKey
  - name: )
    fullName: )
  - name: )
    fullName: )
  nameWithType: Enumerable.ToLookup<GatewayIPAddressInformation, TKey>(Func<GatewayIPAddressInformation, TKey>)
  nameWithType.vb: Enumerable.ToLookup(Of GatewayIPAddressInformation, TKey)(Func(Of GatewayIPAddressInformation, TKey))
  commentId: M:System.Linq.Enumerable.ToLookup``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})
- uid: System.Collections.Generic.IEnumerable{System.Net.NetworkInformation.GatewayIPAddressInformation}.System.Linq.Enumerable.ToLookup``2(System.Func{System.Net.NetworkInformation.GatewayIPAddressInformation,{TKey}},System.Collections.Generic.IEqualityComparer{{TKey}})
  parent: System.Linq.Enumerable
  definition: System.Linq.Enumerable.ToLookup``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IEqualityComparer{``1})
  name: ToLookup<GatewayIPAddressInformation, TKey>(Func<GatewayIPAddressInformation, TKey>, IEqualityComparer<TKey>)
  fullName: System.Linq.Enumerable.ToLookup<System.Net.NetworkInformation.GatewayIPAddressInformation, TKey>(System.Func<System.Net.NetworkInformation.GatewayIPAddressInformation, TKey>, System.Collections.Generic.IEqualityComparer<TKey>)
  fullname.vb: System.Linq.Enumerable.ToLookup(Of System.Net.NetworkInformation.GatewayIPAddressInformation, TKey)(System.Func(Of System.Net.NetworkInformation.GatewayIPAddressInformation, TKey), System.Collections.Generic.IEqualityComparer(Of TKey))
  name.vb: ToLookup(Of GatewayIPAddressInformation, TKey)(Func(Of GatewayIPAddressInformation, TKey), IEqualityComparer(Of TKey))
  spec.csharp:
  - uid: System.Linq.Enumerable.ToLookup``2(System.Func{``0,``1},System.Collections.Generic.IEqualityComparer{``1})
    name: ToLookup<GatewayIPAddressInformation, TKey>
    fullName: System.Linq.Enumerable.ToLookup<System.Net.NetworkInformation.GatewayIPAddressInformation, TKey>
  - name: (
    fullName: (
  - uid: System.Func`2
    name: Func
    fullName: System.Func
    isExternal: true
  - name: <
    fullName: <
  - uid: System.Net.NetworkInformation.GatewayIPAddressInformation
    name: GatewayIPAddressInformation
    fullName: System.Net.NetworkInformation.GatewayIPAddressInformation
  - name: ', '
    fullName: ', '
  - name: TKey
    fullName: TKey
  - name: '>'
    fullName: '>'
  - name: ', '
    fullName: ', '
  - uid: System.Collections.Generic.IEqualityComparer`1
    name: IEqualityComparer
    fullName: System.Collections.Generic.IEqualityComparer
    isExternal: true
  - name: <
    fullName: <
  - name: TKey
    fullName: TKey
  - name: '>'
    fullName: '>'
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Linq.Enumerable.ToLookup``2(System.Func{``0,``1},System.Collections.Generic.IEqualityComparer{``1})
    name: ToLookup(Of GatewayIPAddressInformation, TKey)
    fullName: System.Linq.Enumerable.ToLookup(Of System.Net.NetworkInformation.GatewayIPAddressInformation, TKey)
  - name: (
    fullName: (
  - uid: System.Func`2
    name: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - uid: System.Net.NetworkInformation.GatewayIPAddressInformation
    name: GatewayIPAddressInformation
    fullName: System.Net.NetworkInformation.GatewayIPAddressInformation
  - name: ', '
    fullName: ', '
  - name: TKey
    fullName: TKey
  - name: )
    fullName: )
  - name: ', '
    fullName: ', '
  - uid: System.Collections.Generic.IEqualityComparer`1
    name: IEqualityComparer
    fullName: System.Collections.Generic.IEqualityComparer
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - name: TKey
    fullName: TKey
  - name: )
    fullName: )
  - name: )
    fullName: )
  nameWithType: Enumerable.ToLookup<GatewayIPAddressInformation, TKey>(Func<GatewayIPAddressInformation, TKey>, IEqualityComparer<TKey>)
  nameWithType.vb: Enumerable.ToLookup(Of GatewayIPAddressInformation, TKey)(Func(Of GatewayIPAddressInformation, TKey), IEqualityComparer(Of TKey))
  commentId: M:System.Linq.Enumerable.ToLookup``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IEqualityComparer{``1})
- uid: System.Collections.Generic.IEnumerable{System.Net.NetworkInformation.GatewayIPAddressInformation}.System.Linq.Enumerable.ToLookup``3(System.Func{System.Net.NetworkInformation.GatewayIPAddressInformation,{TKey}},System.Func{System.Net.NetworkInformation.GatewayIPAddressInformation,{TElement}})
  parent: System.Linq.Enumerable
  definition: System.Linq.Enumerable.ToLookup``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2})
  name: ToLookup<GatewayIPAddressInformation, TKey, TElement>(Func<GatewayIPAddressInformation, TKey>, Func<GatewayIPAddressInformation, TElement>)
  fullName: System.Linq.Enumerable.ToLookup<System.Net.NetworkInformation.GatewayIPAddressInformation, TKey, TElement>(System.Func<System.Net.NetworkInformation.GatewayIPAddressInformation, TKey>, System.Func<System.Net.NetworkInformation.GatewayIPAddressInformation, TElement>)
  fullname.vb: System.Linq.Enumerable.ToLookup(Of System.Net.NetworkInformation.GatewayIPAddressInformation, TKey, TElement)(System.Func(Of System.Net.NetworkInformation.GatewayIPAddressInformation, TKey), System.Func(Of System.Net.NetworkInformation.GatewayIPAddressInformation, TElement))
  name.vb: ToLookup(Of GatewayIPAddressInformation, TKey, TElement)(Func(Of GatewayIPAddressInformation, TKey), Func(Of GatewayIPAddressInformation, TElement))
  spec.csharp:
  - uid: System.Linq.Enumerable.ToLookup``3(System.Func{``0,``1},System.Func{``0,``2})
    name: ToLookup<GatewayIPAddressInformation, TKey, TElement>
    fullName: System.Linq.Enumerable.ToLookup<System.Net.NetworkInformation.GatewayIPAddressInformation, TKey, TElement>
  - name: (
    fullName: (
  - uid: System.Func`2
    name: Func
    fullName: System.Func
    isExternal: true
  - name: <
    fullName: <
  - uid: System.Net.NetworkInformation.GatewayIPAddressInformation
    name: GatewayIPAddressInformation
    fullName: System.Net.NetworkInformation.GatewayIPAddressInformation
  - name: ', '
    fullName: ', '
  - name: TKey
    fullName: TKey
  - name: '>'
    fullName: '>'
  - name: ', '
    fullName: ', '
  - uid: System.Func`2
    name: Func
    fullName: System.Func
    isExternal: true
  - name: <
    fullName: <
  - uid: System.Net.NetworkInformation.GatewayIPAddressInformation
    name: GatewayIPAddressInformation
    fullName: System.Net.NetworkInformation.GatewayIPAddressInformation
  - name: ', '
    fullName: ', '
  - name: TElement
    fullName: TElement
  - name: '>'
    fullName: '>'
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Linq.Enumerable.ToLookup``3(System.Func{``0,``1},System.Func{``0,``2})
    name: ToLookup(Of GatewayIPAddressInformation, TKey, TElement)
    fullName: System.Linq.Enumerable.ToLookup(Of System.Net.NetworkInformation.GatewayIPAddressInformation, TKey, TElement)
  - name: (
    fullName: (
  - uid: System.Func`2
    name: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - uid: System.Net.NetworkInformation.GatewayIPAddressInformation
    name: GatewayIPAddressInformation
    fullName: System.Net.NetworkInformation.GatewayIPAddressInformation
  - name: ', '
    fullName: ', '
  - name: TKey
    fullName: TKey
  - name: )
    fullName: )
  - name: ', '
    fullName: ', '
  - uid: System.Func`2
    name: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - uid: System.Net.NetworkInformation.GatewayIPAddressInformation
    name: GatewayIPAddressInformation
    fullName: System.Net.NetworkInformation.GatewayIPAddressInformation
  - name: ', '
    fullName: ', '
  - name: TElement
    fullName: TElement
  - name: )
    fullName: )
  - name: )
    fullName: )
  nameWithType: Enumerable.ToLookup<GatewayIPAddressInformation, TKey, TElement>(Func<GatewayIPAddressInformation, TKey>, Func<GatewayIPAddressInformation, TElement>)
  nameWithType.vb: Enumerable.ToLookup(Of GatewayIPAddressInformation, TKey, TElement)(Func(Of GatewayIPAddressInformation, TKey), Func(Of GatewayIPAddressInformation, TElement))
  commentId: M:System.Linq.Enumerable.ToLookup``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2})
- uid: System.Collections.Generic.IEnumerable{System.Net.NetworkInformation.GatewayIPAddressInformation}.System.Linq.Enumerable.ToLookup``3(System.Func{System.Net.NetworkInformation.GatewayIPAddressInformation,{TKey}},System.Func{System.Net.NetworkInformation.GatewayIPAddressInformation,{TElement}},System.Collections.Generic.IEqualityComparer{{TKey}})
  parent: System.Linq.Enumerable
  definition: System.Linq.Enumerable.ToLookup``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})
  name: ToLookup<GatewayIPAddressInformation, TKey, TElement>(Func<GatewayIPAddressInformation, TKey>, Func<GatewayIPAddressInformation, TElement>, IEqualityComparer<TKey>)
  fullName: System.Linq.Enumerable.ToLookup<System.Net.NetworkInformation.GatewayIPAddressInformation, TKey, TElement>(System.Func<System.Net.NetworkInformation.GatewayIPAddressInformation, TKey>, System.Func<System.Net.NetworkInformation.GatewayIPAddressInformation, TElement>, System.Collections.Generic.IEqualityComparer<TKey>)
  fullname.vb: System.Linq.Enumerable.ToLookup(Of System.Net.NetworkInformation.GatewayIPAddressInformation, TKey, TElement)(System.Func(Of System.Net.NetworkInformation.GatewayIPAddressInformation, TKey), System.Func(Of System.Net.NetworkInformation.GatewayIPAddressInformation, TElement), System.Collections.Generic.IEqualityComparer(Of TKey))
  name.vb: ToLookup(Of GatewayIPAddressInformation, TKey, TElement)(Func(Of GatewayIPAddressInformation, TKey), Func(Of GatewayIPAddressInformation, TElement), IEqualityComparer(Of TKey))
  spec.csharp:
  - uid: System.Linq.Enumerable.ToLookup``3(System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})
    name: ToLookup<GatewayIPAddressInformation, TKey, TElement>
    fullName: System.Linq.Enumerable.ToLookup<System.Net.NetworkInformation.GatewayIPAddressInformation, TKey, TElement>
  - name: (
    fullName: (
  - uid: System.Func`2
    name: Func
    fullName: System.Func
    isExternal: true
  - name: <
    fullName: <
  - uid: System.Net.NetworkInformation.GatewayIPAddressInformation
    name: GatewayIPAddressInformation
    fullName: System.Net.NetworkInformation.GatewayIPAddressInformation
  - name: ', '
    fullName: ', '
  - name: TKey
    fullName: TKey
  - name: '>'
    fullName: '>'
  - name: ', '
    fullName: ', '
  - uid: System.Func`2
    name: Func
    fullName: System.Func
    isExternal: true
  - name: <
    fullName: <
  - uid: System.Net.NetworkInformation.GatewayIPAddressInformation
    name: GatewayIPAddressInformation
    fullName: System.Net.NetworkInformation.GatewayIPAddressInformation
  - name: ', '
    fullName: ', '
  - name: TElement
    fullName: TElement
  - name: '>'
    fullName: '>'
  - name: ', '
    fullName: ', '
  - uid: System.Collections.Generic.IEqualityComparer`1
    name: IEqualityComparer
    fullName: System.Collections.Generic.IEqualityComparer
    isExternal: true
  - name: <
    fullName: <
  - name: TKey
    fullName: TKey
  - name: '>'
    fullName: '>'
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Linq.Enumerable.ToLookup``3(System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})
    name: ToLookup(Of GatewayIPAddressInformation, TKey, TElement)
    fullName: System.Linq.Enumerable.ToLookup(Of System.Net.NetworkInformation.GatewayIPAddressInformation, TKey, TElement)
  - name: (
    fullName: (
  - uid: System.Func`2
    name: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - uid: System.Net.NetworkInformation.GatewayIPAddressInformation
    name: GatewayIPAddressInformation
    fullName: System.Net.NetworkInformation.GatewayIPAddressInformation
  - name: ', '
    fullName: ', '
  - name: TKey
    fullName: TKey
  - name: )
    fullName: )
  - name: ', '
    fullName: ', '
  - uid: System.Func`2
    name: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - uid: System.Net.NetworkInformation.GatewayIPAddressInformation
    name: GatewayIPAddressInformation
    fullName: System.Net.NetworkInformation.GatewayIPAddressInformation
  - name: ', '
    fullName: ', '
  - name: TElement
    fullName: TElement
  - name: )
    fullName: )
  - name: ', '
    fullName: ', '
  - uid: System.Collections.Generic.IEqualityComparer`1
    name: IEqualityComparer
    fullName: System.Collections.Generic.IEqualityComparer
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - name: TKey
    fullName: TKey
  - name: )
    fullName: )
  - name: )
    fullName: )
  nameWithType: Enumerable.ToLookup<GatewayIPAddressInformation, TKey, TElement>(Func<GatewayIPAddressInformation, TKey>, Func<GatewayIPAddressInformation, TElement>, IEqualityComparer<TKey>)
  nameWithType.vb: Enumerable.ToLookup(Of GatewayIPAddressInformation, TKey, TElement)(Func(Of GatewayIPAddressInformation, TKey), Func(Of GatewayIPAddressInformation, TElement), IEqualityComparer(Of TKey))
  commentId: M:System.Linq.Enumerable.ToLookup``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})
- uid: System.Collections.Generic.IEnumerable{System.Net.NetworkInformation.GatewayIPAddressInformation}.System.Linq.Enumerable.Union``1(System.Collections.Generic.IEnumerable{System.Net.NetworkInformation.GatewayIPAddressInformation})
  parent: System.Linq.Enumerable
  definition: System.Linq.Enumerable.Union``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0})
  name: Union<GatewayIPAddressInformation>(IEnumerable<GatewayIPAddressInformation>)
  fullName: System.Linq.Enumerable.Union<System.Net.NetworkInformation.GatewayIPAddressInformation>(System.Collections.Generic.IEnumerable<System.Net.NetworkInformation.GatewayIPAddressInformation>)
  fullname.vb: System.Linq.Enumerable.Union(Of System.Net.NetworkInformation.GatewayIPAddressInformation)(System.Collections.Generic.IEnumerable(Of System.Net.NetworkInformation.GatewayIPAddressInformation))
  name.vb: Union(Of GatewayIPAddressInformation)(IEnumerable(Of GatewayIPAddressInformation))
  spec.csharp:
  - uid: System.Linq.Enumerable.Union``1(System.Collections.Generic.IEnumerable{``0})
    name: Union<GatewayIPAddressInformation>
    fullName: System.Linq.Enumerable.Union<System.Net.NetworkInformation.GatewayIPAddressInformation>
  - name: (
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    fullName: <
  - uid: System.Net.NetworkInformation.GatewayIPAddressInformation
    name: GatewayIPAddressInformation
    fullName: System.Net.NetworkInformation.GatewayIPAddressInformation
  - name: '>'
    fullName: '>'
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Linq.Enumerable.Union``1(System.Collections.Generic.IEnumerable{``0})
    name: Union(Of GatewayIPAddressInformation)
    fullName: System.Linq.Enumerable.Union(Of System.Net.NetworkInformation.GatewayIPAddressInformation)
  - name: (
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - uid: System.Net.NetworkInformation.GatewayIPAddressInformation
    name: GatewayIPAddressInformation
    fullName: System.Net.NetworkInformation.GatewayIPAddressInformation
  - name: )
    fullName: )
  - name: )
    fullName: )
  nameWithType: Enumerable.Union<GatewayIPAddressInformation>(IEnumerable<GatewayIPAddressInformation>)
  nameWithType.vb: Enumerable.Union(Of GatewayIPAddressInformation)(IEnumerable(Of GatewayIPAddressInformation))
  commentId: M:System.Linq.Enumerable.Union``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0})
- uid: System.Collections.Generic.IEnumerable{System.Net.NetworkInformation.GatewayIPAddressInformation}.System.Linq.Enumerable.Union``1(System.Collections.Generic.IEnumerable{System.Net.NetworkInformation.GatewayIPAddressInformation},System.Collections.Generic.IEqualityComparer{System.Net.NetworkInformation.GatewayIPAddressInformation})
  parent: System.Linq.Enumerable
  definition: System.Linq.Enumerable.Union``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEqualityComparer{``0})
  name: Union<GatewayIPAddressInformation>(IEnumerable<GatewayIPAddressInformation>, IEqualityComparer<GatewayIPAddressInformation>)
  fullName: System.Linq.Enumerable.Union<System.Net.NetworkInformation.GatewayIPAddressInformation>(System.Collections.Generic.IEnumerable<System.Net.NetworkInformation.GatewayIPAddressInformation>, System.Collections.Generic.IEqualityComparer<System.Net.NetworkInformation.GatewayIPAddressInformation>)
  fullname.vb: System.Linq.Enumerable.Union(Of System.Net.NetworkInformation.GatewayIPAddressInformation)(System.Collections.Generic.IEnumerable(Of System.Net.NetworkInformation.GatewayIPAddressInformation), System.Collections.Generic.IEqualityComparer(Of System.Net.NetworkInformation.GatewayIPAddressInformation))
  name.vb: Union(Of GatewayIPAddressInformation)(IEnumerable(Of GatewayIPAddressInformation), IEqualityComparer(Of GatewayIPAddressInformation))
  spec.csharp:
  - uid: System.Linq.Enumerable.Union``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEqualityComparer{``0})
    name: Union<GatewayIPAddressInformation>
    fullName: System.Linq.Enumerable.Union<System.Net.NetworkInformation.GatewayIPAddressInformation>
  - name: (
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    fullName: <
  - uid: System.Net.NetworkInformation.GatewayIPAddressInformation
    name: GatewayIPAddressInformation
    fullName: System.Net.NetworkInformation.GatewayIPAddressInformation
  - name: '>'
    fullName: '>'
  - name: ', '
    fullName: ', '
  - uid: System.Collections.Generic.IEqualityComparer`1
    name: IEqualityComparer
    fullName: System.Collections.Generic.IEqualityComparer
    isExternal: true
  - name: <
    fullName: <
  - uid: System.Net.NetworkInformation.GatewayIPAddressInformation
    name: GatewayIPAddressInformation
    fullName: System.Net.NetworkInformation.GatewayIPAddressInformation
  - name: '>'
    fullName: '>'
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Linq.Enumerable.Union``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEqualityComparer{``0})
    name: Union(Of GatewayIPAddressInformation)
    fullName: System.Linq.Enumerable.Union(Of System.Net.NetworkInformation.GatewayIPAddressInformation)
  - name: (
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - uid: System.Net.NetworkInformation.GatewayIPAddressInformation
    name: GatewayIPAddressInformation
    fullName: System.Net.NetworkInformation.GatewayIPAddressInformation
  - name: )
    fullName: )
  - name: ', '
    fullName: ', '
  - uid: System.Collections.Generic.IEqualityComparer`1
    name: IEqualityComparer
    fullName: System.Collections.Generic.IEqualityComparer
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - uid: System.Net.NetworkInformation.GatewayIPAddressInformation
    name: GatewayIPAddressInformation
    fullName: System.Net.NetworkInformation.GatewayIPAddressInformation
  - name: )
    fullName: )
  - name: )
    fullName: )
  nameWithType: Enumerable.Union<GatewayIPAddressInformation>(IEnumerable<GatewayIPAddressInformation>, IEqualityComparer<GatewayIPAddressInformation>)
  nameWithType.vb: Enumerable.Union(Of GatewayIPAddressInformation)(IEnumerable(Of GatewayIPAddressInformation), IEqualityComparer(Of GatewayIPAddressInformation))
  commentId: M:System.Linq.Enumerable.Union``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEqualityComparer{``0})
- uid: System.Collections.Generic.IEnumerable{System.Net.NetworkInformation.GatewayIPAddressInformation}.System.Linq.Enumerable.Where``1(System.Func{System.Net.NetworkInformation.GatewayIPAddressInformation,System.Boolean})
  parent: System.Linq.Enumerable
  definition: System.Linq.Enumerable.Where``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})
  name: Where<GatewayIPAddressInformation>(Func<GatewayIPAddressInformation, Boolean>)
  fullName: System.Linq.Enumerable.Where<System.Net.NetworkInformation.GatewayIPAddressInformation>(System.Func<System.Net.NetworkInformation.GatewayIPAddressInformation, System.Boolean>)
  fullname.vb: System.Linq.Enumerable.Where(Of System.Net.NetworkInformation.GatewayIPAddressInformation)(System.Func(Of System.Net.NetworkInformation.GatewayIPAddressInformation, System.Boolean))
  name.vb: Where(Of GatewayIPAddressInformation)(Func(Of GatewayIPAddressInformation, Boolean))
  spec.csharp:
  - uid: System.Linq.Enumerable.Where``1(System.Func{``0,System.Boolean})
    name: Where<GatewayIPAddressInformation>
    fullName: System.Linq.Enumerable.Where<System.Net.NetworkInformation.GatewayIPAddressInformation>
  - name: (
    fullName: (
  - uid: System.Func`2
    name: Func
    fullName: System.Func
    isExternal: true
  - name: <
    fullName: <
  - uid: System.Net.NetworkInformation.GatewayIPAddressInformation
    name: GatewayIPAddressInformation
    fullName: System.Net.NetworkInformation.GatewayIPAddressInformation
  - name: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: '>'
    fullName: '>'
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Linq.Enumerable.Where``1(System.Func{``0,System.Boolean})
    name: Where(Of GatewayIPAddressInformation)
    fullName: System.Linq.Enumerable.Where(Of System.Net.NetworkInformation.GatewayIPAddressInformation)
  - name: (
    fullName: (
  - uid: System.Func`2
    name: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - uid: System.Net.NetworkInformation.GatewayIPAddressInformation
    name: GatewayIPAddressInformation
    fullName: System.Net.NetworkInformation.GatewayIPAddressInformation
  - name: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    fullName: )
  - name: )
    fullName: )
  nameWithType: Enumerable.Where<GatewayIPAddressInformation>(Func<GatewayIPAddressInformation, Boolean>)
  nameWithType.vb: Enumerable.Where(Of GatewayIPAddressInformation)(Func(Of GatewayIPAddressInformation, Boolean))
  commentId: M:System.Linq.Enumerable.Where``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})
- uid: System.Collections.Generic.IEnumerable{System.Net.NetworkInformation.GatewayIPAddressInformation}.System.Linq.Enumerable.Where``1(System.Func{System.Net.NetworkInformation.GatewayIPAddressInformation,System.Int32,System.Boolean})
  parent: System.Linq.Enumerable
  definition: System.Linq.Enumerable.Where``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32,System.Boolean})
  name: Where<GatewayIPAddressInformation>(Func<GatewayIPAddressInformation, Int32, Boolean>)
  fullName: System.Linq.Enumerable.Where<System.Net.NetworkInformation.GatewayIPAddressInformation>(System.Func<System.Net.NetworkInformation.GatewayIPAddressInformation, System.Int32, System.Boolean>)
  fullname.vb: System.Linq.Enumerable.Where(Of System.Net.NetworkInformation.GatewayIPAddressInformation)(System.Func(Of System.Net.NetworkInformation.GatewayIPAddressInformation, System.Int32, System.Boolean))
  name.vb: Where(Of GatewayIPAddressInformation)(Func(Of GatewayIPAddressInformation, Int32, Boolean))
  spec.csharp:
  - uid: System.Linq.Enumerable.Where``1(System.Func{``0,System.Int32,System.Boolean})
    name: Where<GatewayIPAddressInformation>
    fullName: System.Linq.Enumerable.Where<System.Net.NetworkInformation.GatewayIPAddressInformation>
  - name: (
    fullName: (
  - uid: System.Func`3
    name: Func
    fullName: System.Func
    isExternal: true
  - name: <
    fullName: <
  - uid: System.Net.NetworkInformation.GatewayIPAddressInformation
    name: GatewayIPAddressInformation
    fullName: System.Net.NetworkInformation.GatewayIPAddressInformation
  - name: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: '>'
    fullName: '>'
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Linq.Enumerable.Where``1(System.Func{``0,System.Int32,System.Boolean})
    name: Where(Of GatewayIPAddressInformation)
    fullName: System.Linq.Enumerable.Where(Of System.Net.NetworkInformation.GatewayIPAddressInformation)
  - name: (
    fullName: (
  - uid: System.Func`3
    name: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - uid: System.Net.NetworkInformation.GatewayIPAddressInformation
    name: GatewayIPAddressInformation
    fullName: System.Net.NetworkInformation.GatewayIPAddressInformation
  - name: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    fullName: )
  - name: )
    fullName: )
  nameWithType: Enumerable.Where<GatewayIPAddressInformation>(Func<GatewayIPAddressInformation, Int32, Boolean>)
  nameWithType.vb: Enumerable.Where(Of GatewayIPAddressInformation)(Func(Of GatewayIPAddressInformation, Int32, Boolean))
  commentId: M:System.Linq.Enumerable.Where``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32,System.Boolean})
- uid: System.Collections.Generic.IEnumerable{System.Net.NetworkInformation.GatewayIPAddressInformation}.System.Linq.Enumerable.Zip``3(System.Collections.Generic.IEnumerable{{TSecond}},System.Func{System.Net.NetworkInformation.GatewayIPAddressInformation,{TSecond},{TResult}})
  parent: System.Linq.Enumerable
  definition: System.Linq.Enumerable.Zip``3(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``1,``2})
  name: Zip<GatewayIPAddressInformation, TSecond, TResult>(IEnumerable<TSecond>, Func<GatewayIPAddressInformation, TSecond, TResult>)
  fullName: System.Linq.Enumerable.Zip<System.Net.NetworkInformation.GatewayIPAddressInformation, TSecond, TResult>(System.Collections.Generic.IEnumerable<TSecond>, System.Func<System.Net.NetworkInformation.GatewayIPAddressInformation, TSecond, TResult>)
  fullname.vb: System.Linq.Enumerable.Zip(Of System.Net.NetworkInformation.GatewayIPAddressInformation, TSecond, TResult)(System.Collections.Generic.IEnumerable(Of TSecond), System.Func(Of System.Net.NetworkInformation.GatewayIPAddressInformation, TSecond, TResult))
  name.vb: Zip(Of GatewayIPAddressInformation, TSecond, TResult)(IEnumerable(Of TSecond), Func(Of GatewayIPAddressInformation, TSecond, TResult))
  spec.csharp:
  - uid: System.Linq.Enumerable.Zip``3(System.Collections.Generic.IEnumerable{``1},System.Func{``0,``1,``2})
    name: Zip<GatewayIPAddressInformation, TSecond, TResult>
    fullName: System.Linq.Enumerable.Zip<System.Net.NetworkInformation.GatewayIPAddressInformation, TSecond, TResult>
  - name: (
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    fullName: <
  - name: TSecond
    fullName: TSecond
  - name: '>'
    fullName: '>'
  - name: ', '
    fullName: ', '
  - uid: System.Func`3
    name: Func
    fullName: System.Func
    isExternal: true
  - name: <
    fullName: <
  - uid: System.Net.NetworkInformation.GatewayIPAddressInformation
    name: GatewayIPAddressInformation
    fullName: System.Net.NetworkInformation.GatewayIPAddressInformation
  - name: ', '
    fullName: ', '
  - name: TSecond
    fullName: TSecond
  - name: ', '
    fullName: ', '
  - name: TResult
    fullName: TResult
  - name: '>'
    fullName: '>'
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Linq.Enumerable.Zip``3(System.Collections.Generic.IEnumerable{``1},System.Func{``0,``1,``2})
    name: Zip(Of GatewayIPAddressInformation, TSecond, TResult)
    fullName: System.Linq.Enumerable.Zip(Of System.Net.NetworkInformation.GatewayIPAddressInformation, TSecond, TResult)
  - name: (
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - name: TSecond
    fullName: TSecond
  - name: )
    fullName: )
  - name: ', '
    fullName: ', '
  - uid: System.Func`3
    name: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - uid: System.Net.NetworkInformation.GatewayIPAddressInformation
    name: GatewayIPAddressInformation
    fullName: System.Net.NetworkInformation.GatewayIPAddressInformation
  - name: ', '
    fullName: ', '
  - name: TSecond
    fullName: TSecond
  - name: ', '
    fullName: ', '
  - name: TResult
    fullName: TResult
  - name: )
    fullName: )
  - name: )
    fullName: )
  nameWithType: Enumerable.Zip<GatewayIPAddressInformation, TSecond, TResult>(IEnumerable<TSecond>, Func<GatewayIPAddressInformation, TSecond, TResult>)
  nameWithType.vb: Enumerable.Zip(Of GatewayIPAddressInformation, TSecond, TResult)(IEnumerable(Of TSecond), Func(Of GatewayIPAddressInformation, TSecond, TResult))
  commentId: M:System.Linq.Enumerable.Zip``3(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``1,``2})
- uid: System
  isExternal: false
  name: System
  fullName: System
  nameWithType: System
  commentId: N:System
- uid: System.Collections.Generic.ICollection`1
  isExternal: false
  name: ICollection<T>
  fullName: System.Collections.Generic.ICollection<T>
  fullname.vb: System.Collections.Generic.ICollection(Of T)
  name.vb: ICollection(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.ICollection`1
    name: ICollection
    fullName: System.Collections.Generic.ICollection
  - name: <
    fullName: <
  - name: T
    fullName: T
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.ICollection`1
    name: ICollection
    fullName: System.Collections.Generic.ICollection
  - name: '(Of '
    fullName: '(Of '
  - name: T
    fullName: T
  - name: )
    fullName: )
  nameWithType: ICollection<T>
  nameWithType.vb: ICollection(Of T)
  commentId: T:System.Collections.Generic.ICollection`1
- uid: System.Collections.Generic
  isExternal: false
  name: System.Collections.Generic
  fullName: System.Collections.Generic
  nameWithType: System.Collections.Generic
  commentId: N:System.Collections.Generic
- uid: System.Collections.Generic.IEnumerable`1
  isExternal: false
  name: IEnumerable<T>
  fullName: System.Collections.Generic.IEnumerable<T>
  fullname.vb: System.Collections.Generic.IEnumerable(Of T)
  name.vb: IEnumerable(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
  - name: <
    fullName: <
  - name: T
    fullName: T
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
  - name: '(Of '
    fullName: '(Of '
  - name: T
    fullName: T
  - name: )
    fullName: )
  nameWithType: IEnumerable<T>
  nameWithType.vb: IEnumerable(Of T)
  commentId: T:System.Collections.Generic.IEnumerable`1
- uid: System.Collections
  isExternal: false
  name: System.Collections
  fullName: System.Collections
  nameWithType: System.Collections
  commentId: N:System.Collections
- uid: System.Linq.Queryable.AsQueryable(System.Collections.IEnumerable)
  isExternal: true
  name: AsQueryable(IEnumerable)
  fullName: System.Linq.Queryable.AsQueryable(System.Collections.IEnumerable)
  spec.csharp:
  - uid: System.Linq.Queryable.AsQueryable(System.Collections.IEnumerable)
    name: AsQueryable
    fullName: System.Linq.Queryable.AsQueryable
  - name: (
    fullName: (
  - uid: System.Collections.IEnumerable
    name: IEnumerable
    fullName: System.Collections.IEnumerable
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Linq.Queryable.AsQueryable(System.Collections.IEnumerable)
    name: AsQueryable
    fullName: System.Linq.Queryable.AsQueryable
  - name: (
    fullName: (
  - uid: System.Collections.IEnumerable
    name: IEnumerable
    fullName: System.Collections.IEnumerable
    isExternal: true
  - name: )
    fullName: )
  nameWithType: Queryable.AsQueryable(IEnumerable)
  commentId: M:System.Linq.Queryable.AsQueryable(System.Collections.IEnumerable)
- uid: System.Linq.Queryable
  parent: System.Linq
  isExternal: false
  name: Queryable
  fullName: System.Linq.Queryable
  nameWithType: Queryable
  commentId: T:System.Linq.Queryable
- uid: System.Linq.Queryable.AsQueryable``1(System.Collections.Generic.IEnumerable{``0})
  isExternal: true
  name: AsQueryable<TElement>(IEnumerable<TElement>)
  fullName: System.Linq.Queryable.AsQueryable<TElement>(System.Collections.Generic.IEnumerable<TElement>)
  fullname.vb: System.Linq.Queryable.AsQueryable(Of TElement)(System.Collections.Generic.IEnumerable(Of TElement))
  name.vb: AsQueryable(Of TElement)(IEnumerable(Of TElement))
  spec.csharp:
  - uid: System.Linq.Queryable.AsQueryable``1(System.Collections.Generic.IEnumerable{``0})
    name: AsQueryable<TElement>
    fullName: System.Linq.Queryable.AsQueryable<TElement>
  - name: (
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    fullName: <
  - name: TElement
    fullName: TElement
  - name: '>'
    fullName: '>'
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Linq.Queryable.AsQueryable``1(System.Collections.Generic.IEnumerable{``0})
    name: AsQueryable(Of TElement)
    fullName: System.Linq.Queryable.AsQueryable(Of TElement)
  - name: (
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - name: TElement
    fullName: TElement
  - name: )
    fullName: )
  - name: )
    fullName: )
  nameWithType: Queryable.AsQueryable<TElement>(IEnumerable<TElement>)
  nameWithType.vb: Queryable.AsQueryable(Of TElement)(IEnumerable(Of TElement))
  commentId: M:System.Linq.Queryable.AsQueryable``1(System.Collections.Generic.IEnumerable{``0})
- uid: System.Linq.ParallelEnumerable.AsParallel(System.Collections.IEnumerable)
  isExternal: true
  name: AsParallel(IEnumerable)
  fullName: System.Linq.ParallelEnumerable.AsParallel(System.Collections.IEnumerable)
  spec.csharp:
  - uid: System.Linq.ParallelEnumerable.AsParallel(System.Collections.IEnumerable)
    name: AsParallel
    fullName: System.Linq.ParallelEnumerable.AsParallel
  - name: (
    fullName: (
  - uid: System.Collections.IEnumerable
    name: IEnumerable
    fullName: System.Collections.IEnumerable
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Linq.ParallelEnumerable.AsParallel(System.Collections.IEnumerable)
    name: AsParallel
    fullName: System.Linq.ParallelEnumerable.AsParallel
  - name: (
    fullName: (
  - uid: System.Collections.IEnumerable
    name: IEnumerable
    fullName: System.Collections.IEnumerable
    isExternal: true
  - name: )
    fullName: )
  nameWithType: ParallelEnumerable.AsParallel(IEnumerable)
  commentId: M:System.Linq.ParallelEnumerable.AsParallel(System.Collections.IEnumerable)
- uid: System.Linq.ParallelEnumerable
  parent: System.Linq
  isExternal: false
  name: ParallelEnumerable
  fullName: System.Linq.ParallelEnumerable
  nameWithType: ParallelEnumerable
  commentId: T:System.Linq.ParallelEnumerable
- uid: System.Linq.ParallelEnumerable.AsParallel``1(System.Collections.Generic.IEnumerable{``0})
  isExternal: true
  name: AsParallel<TSource>(IEnumerable<TSource>)
  fullName: System.Linq.ParallelEnumerable.AsParallel<TSource>(System.Collections.Generic.IEnumerable<TSource>)
  fullname.vb: System.Linq.ParallelEnumerable.AsParallel(Of TSource)(System.Collections.Generic.IEnumerable(Of TSource))
  name.vb: AsParallel(Of TSource)(IEnumerable(Of TSource))
  spec.csharp:
  - uid: System.Linq.ParallelEnumerable.AsParallel``1(System.Collections.Generic.IEnumerable{``0})
    name: AsParallel<TSource>
    fullName: System.Linq.ParallelEnumerable.AsParallel<TSource>
  - name: (
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    fullName: <
  - name: TSource
    fullName: TSource
  - name: '>'
    fullName: '>'
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Linq.ParallelEnumerable.AsParallel``1(System.Collections.Generic.IEnumerable{``0})
    name: AsParallel(Of TSource)
    fullName: System.Linq.ParallelEnumerable.AsParallel(Of TSource)
  - name: (
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - name: TSource
    fullName: TSource
  - name: )
    fullName: )
  - name: )
    fullName: )
  nameWithType: ParallelEnumerable.AsParallel<TSource>(IEnumerable<TSource>)
  nameWithType.vb: ParallelEnumerable.AsParallel(Of TSource)(IEnumerable(Of TSource))
  commentId: M:System.Linq.ParallelEnumerable.AsParallel``1(System.Collections.Generic.IEnumerable{``0})
- uid: System.Linq.Enumerable.Aggregate``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``0,``0})
  isExternal: true
  name: Aggregate<TSource>(IEnumerable<TSource>, Func<TSource, TSource, TSource>)
  fullName: System.Linq.Enumerable.Aggregate<TSource>(System.Collections.Generic.IEnumerable<TSource>, System.Func<TSource, TSource, TSource>)
  fullname.vb: System.Linq.Enumerable.Aggregate(Of TSource)(System.Collections.Generic.IEnumerable(Of TSource), System.Func(Of TSource, TSource, TSource))
  name.vb: Aggregate(Of TSource)(IEnumerable(Of TSource), Func(Of TSource, TSource, TSource))
  spec.csharp:
  - uid: System.Linq.Enumerable.Aggregate``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``0,``0})
    name: Aggregate<TSource>
    fullName: System.Linq.Enumerable.Aggregate<TSource>
  - name: (
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    fullName: <
  - name: TSource
    fullName: TSource
  - name: '>'
    fullName: '>'
  - name: ', '
    fullName: ', '
  - uid: System.Func`3
    name: Func
    fullName: System.Func
    isExternal: true
  - name: <
    fullName: <
  - name: TSource
    fullName: TSource
  - name: ', '
    fullName: ', '
  - name: TSource
    fullName: TSource
  - name: ', '
    fullName: ', '
  - name: TSource
    fullName: TSource
  - name: '>'
    fullName: '>'
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Linq.Enumerable.Aggregate``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``0,``0})
    name: Aggregate(Of TSource)
    fullName: System.Linq.Enumerable.Aggregate(Of TSource)
  - name: (
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - name: TSource
    fullName: TSource
  - name: )
    fullName: )
  - name: ', '
    fullName: ', '
  - uid: System.Func`3
    name: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - name: TSource
    fullName: TSource
  - name: ', '
    fullName: ', '
  - name: TSource
    fullName: TSource
  - name: ', '
    fullName: ', '
  - name: TSource
    fullName: TSource
  - name: )
    fullName: )
  - name: )
    fullName: )
  nameWithType: Enumerable.Aggregate<TSource>(IEnumerable<TSource>, Func<TSource, TSource, TSource>)
  nameWithType.vb: Enumerable.Aggregate(Of TSource)(IEnumerable(Of TSource), Func(Of TSource, TSource, TSource))
  commentId: M:System.Linq.Enumerable.Aggregate``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``0,``0})
- uid: System.Linq.Enumerable
  parent: System.Linq
  isExternal: false
  name: Enumerable
  fullName: System.Linq.Enumerable
  nameWithType: Enumerable
  commentId: T:System.Linq.Enumerable
- uid: System.Linq.Enumerable.Aggregate``2(System.Collections.Generic.IEnumerable{``0},``1,System.Func{``1,``0,``1})
  isExternal: true
  name: Aggregate<TSource, TAccumulate>(IEnumerable<TSource>, TAccumulate, Func<TAccumulate, TSource, TAccumulate>)
  fullName: System.Linq.Enumerable.Aggregate<TSource, TAccumulate>(System.Collections.Generic.IEnumerable<TSource>, TAccumulate, System.Func<TAccumulate, TSource, TAccumulate>)
  fullname.vb: System.Linq.Enumerable.Aggregate(Of TSource, TAccumulate)(System.Collections.Generic.IEnumerable(Of TSource), TAccumulate, System.Func(Of TAccumulate, TSource, TAccumulate))
  name.vb: Aggregate(Of TSource, TAccumulate)(IEnumerable(Of TSource), TAccumulate, Func(Of TAccumulate, TSource, TAccumulate))
  spec.csharp:
  - uid: System.Linq.Enumerable.Aggregate``2(System.Collections.Generic.IEnumerable{``0},``1,System.Func{``1,``0,``1})
    name: Aggregate<TSource, TAccumulate>
    fullName: System.Linq.Enumerable.Aggregate<TSource, TAccumulate>
  - name: (
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    fullName: <
  - name: TSource
    fullName: TSource
  - name: '>'
    fullName: '>'
  - name: ', '
    fullName: ', '
  - name: TAccumulate
    fullName: TAccumulate
  - name: ', '
    fullName: ', '
  - uid: System.Func`3
    name: Func
    fullName: System.Func
    isExternal: true
  - name: <
    fullName: <
  - name: TAccumulate
    fullName: TAccumulate
  - name: ', '
    fullName: ', '
  - name: TSource
    fullName: TSource
  - name: ', '
    fullName: ', '
  - name: TAccumulate
    fullName: TAccumulate
  - name: '>'
    fullName: '>'
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Linq.Enumerable.Aggregate``2(System.Collections.Generic.IEnumerable{``0},``1,System.Func{``1,``0,``1})
    name: Aggregate(Of TSource, TAccumulate)
    fullName: System.Linq.Enumerable.Aggregate(Of TSource, TAccumulate)
  - name: (
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - name: TSource
    fullName: TSource
  - name: )
    fullName: )
  - name: ', '
    fullName: ', '
  - name: TAccumulate
    fullName: TAccumulate
  - name: ', '
    fullName: ', '
  - uid: System.Func`3
    name: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - name: TAccumulate
    fullName: TAccumulate
  - name: ', '
    fullName: ', '
  - name: TSource
    fullName: TSource
  - name: ', '
    fullName: ', '
  - name: TAccumulate
    fullName: TAccumulate
  - name: )
    fullName: )
  - name: )
    fullName: )
  nameWithType: Enumerable.Aggregate<TSource, TAccumulate>(IEnumerable<TSource>, TAccumulate, Func<TAccumulate, TSource, TAccumulate>)
  nameWithType.vb: Enumerable.Aggregate(Of TSource, TAccumulate)(IEnumerable(Of TSource), TAccumulate, Func(Of TAccumulate, TSource, TAccumulate))
  commentId: M:System.Linq.Enumerable.Aggregate``2(System.Collections.Generic.IEnumerable{``0},``1,System.Func{``1,``0,``1})
- uid: System.Linq.Enumerable.Aggregate``3(System.Collections.Generic.IEnumerable{``0},``1,System.Func{``1,``0,``1},System.Func{``1,``2})
  isExternal: true
  name: Aggregate<TSource, TAccumulate, TResult>(IEnumerable<TSource>, TAccumulate, Func<TAccumulate, TSource, TAccumulate>, Func<TAccumulate, TResult>)
  fullName: System.Linq.Enumerable.Aggregate<TSource, TAccumulate, TResult>(System.Collections.Generic.IEnumerable<TSource>, TAccumulate, System.Func<TAccumulate, TSource, TAccumulate>, System.Func<TAccumulate, TResult>)
  fullname.vb: System.Linq.Enumerable.Aggregate(Of TSource, TAccumulate, TResult)(System.Collections.Generic.IEnumerable(Of TSource), TAccumulate, System.Func(Of TAccumulate, TSource, TAccumulate), System.Func(Of TAccumulate, TResult))
  name.vb: Aggregate(Of TSource, TAccumulate, TResult)(IEnumerable(Of TSource), TAccumulate, Func(Of TAccumulate, TSource, TAccumulate), Func(Of TAccumulate, TResult))
  spec.csharp:
  - uid: System.Linq.Enumerable.Aggregate``3(System.Collections.Generic.IEnumerable{``0},``1,System.Func{``1,``0,``1},System.Func{``1,``2})
    name: Aggregate<TSource, TAccumulate, TResult>
    fullName: System.Linq.Enumerable.Aggregate<TSource, TAccumulate, TResult>
  - name: (
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    fullName: <
  - name: TSource
    fullName: TSource
  - name: '>'
    fullName: '>'
  - name: ', '
    fullName: ', '
  - name: TAccumulate
    fullName: TAccumulate
  - name: ', '
    fullName: ', '
  - uid: System.Func`3
    name: Func
    fullName: System.Func
    isExternal: true
  - name: <
    fullName: <
  - name: TAccumulate
    fullName: TAccumulate
  - name: ', '
    fullName: ', '
  - name: TSource
    fullName: TSource
  - name: ', '
    fullName: ', '
  - name: TAccumulate
    fullName: TAccumulate
  - name: '>'
    fullName: '>'
  - name: ', '
    fullName: ', '
  - uid: System.Func`2
    name: Func
    fullName: System.Func
    isExternal: true
  - name: <
    fullName: <
  - name: TAccumulate
    fullName: TAccumulate
  - name: ', '
    fullName: ', '
  - name: TResult
    fullName: TResult
  - name: '>'
    fullName: '>'
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Linq.Enumerable.Aggregate``3(System.Collections.Generic.IEnumerable{``0},``1,System.Func{``1,``0,``1},System.Func{``1,``2})
    name: Aggregate(Of TSource, TAccumulate, TResult)
    fullName: System.Linq.Enumerable.Aggregate(Of TSource, TAccumulate, TResult)
  - name: (
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - name: TSource
    fullName: TSource
  - name: )
    fullName: )
  - name: ', '
    fullName: ', '
  - name: TAccumulate
    fullName: TAccumulate
  - name: ', '
    fullName: ', '
  - uid: System.Func`3
    name: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - name: TAccumulate
    fullName: TAccumulate
  - name: ', '
    fullName: ', '
  - name: TSource
    fullName: TSource
  - name: ', '
    fullName: ', '
  - name: TAccumulate
    fullName: TAccumulate
  - name: )
    fullName: )
  - name: ', '
    fullName: ', '
  - uid: System.Func`2
    name: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - name: TAccumulate
    fullName: TAccumulate
  - name: ', '
    fullName: ', '
  - name: TResult
    fullName: TResult
  - name: )
    fullName: )
  - name: )
    fullName: )
  nameWithType: Enumerable.Aggregate<TSource, TAccumulate, TResult>(IEnumerable<TSource>, TAccumulate, Func<TAccumulate, TSource, TAccumulate>, Func<TAccumulate, TResult>)
  nameWithType.vb: Enumerable.Aggregate(Of TSource, TAccumulate, TResult)(IEnumerable(Of TSource), TAccumulate, Func(Of TAccumulate, TSource, TAccumulate), Func(Of TAccumulate, TResult))
  commentId: M:System.Linq.Enumerable.Aggregate``3(System.Collections.Generic.IEnumerable{``0},``1,System.Func{``1,``0,``1},System.Func{``1,``2})
- uid: System.Linq.Enumerable.All``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})
  isExternal: true
  name: All<TSource>(IEnumerable<TSource>, Func<TSource, Boolean>)
  fullName: System.Linq.Enumerable.All<TSource>(System.Collections.Generic.IEnumerable<TSource>, System.Func<TSource, System.Boolean>)
  fullname.vb: System.Linq.Enumerable.All(Of TSource)(System.Collections.Generic.IEnumerable(Of TSource), System.Func(Of TSource, System.Boolean))
  name.vb: All(Of TSource)(IEnumerable(Of TSource), Func(Of TSource, Boolean))
  spec.csharp:
  - uid: System.Linq.Enumerable.All``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})
    name: All<TSource>
    fullName: System.Linq.Enumerable.All<TSource>
  - name: (
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    fullName: <
  - name: TSource
    fullName: TSource
  - name: '>'
    fullName: '>'
  - name: ', '
    fullName: ', '
  - uid: System.Func`2
    name: Func
    fullName: System.Func
    isExternal: true
  - name: <
    fullName: <
  - name: TSource
    fullName: TSource
  - name: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: '>'
    fullName: '>'
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Linq.Enumerable.All``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})
    name: All(Of TSource)
    fullName: System.Linq.Enumerable.All(Of TSource)
  - name: (
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - name: TSource
    fullName: TSource
  - name: )
    fullName: )
  - name: ', '
    fullName: ', '
  - uid: System.Func`2
    name: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - name: TSource
    fullName: TSource
  - name: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    fullName: )
  - name: )
    fullName: )
  nameWithType: Enumerable.All<TSource>(IEnumerable<TSource>, Func<TSource, Boolean>)
  nameWithType.vb: Enumerable.All(Of TSource)(IEnumerable(Of TSource), Func(Of TSource, Boolean))
  commentId: M:System.Linq.Enumerable.All``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})
- uid: System.Linq.Enumerable.Any``1(System.Collections.Generic.IEnumerable{``0})
  isExternal: true
  name: Any<TSource>(IEnumerable<TSource>)
  fullName: System.Linq.Enumerable.Any<TSource>(System.Collections.Generic.IEnumerable<TSource>)
  fullname.vb: System.Linq.Enumerable.Any(Of TSource)(System.Collections.Generic.IEnumerable(Of TSource))
  name.vb: Any(Of TSource)(IEnumerable(Of TSource))
  spec.csharp:
  - uid: System.Linq.Enumerable.Any``1(System.Collections.Generic.IEnumerable{``0})
    name: Any<TSource>
    fullName: System.Linq.Enumerable.Any<TSource>
  - name: (
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    fullName: <
  - name: TSource
    fullName: TSource
  - name: '>'
    fullName: '>'
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Linq.Enumerable.Any``1(System.Collections.Generic.IEnumerable{``0})
    name: Any(Of TSource)
    fullName: System.Linq.Enumerable.Any(Of TSource)
  - name: (
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - name: TSource
    fullName: TSource
  - name: )
    fullName: )
  - name: )
    fullName: )
  nameWithType: Enumerable.Any<TSource>(IEnumerable<TSource>)
  nameWithType.vb: Enumerable.Any(Of TSource)(IEnumerable(Of TSource))
  commentId: M:System.Linq.Enumerable.Any``1(System.Collections.Generic.IEnumerable{``0})
- uid: System.Linq.Enumerable.Any``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})
  isExternal: true
  name: Any<TSource>(IEnumerable<TSource>, Func<TSource, Boolean>)
  fullName: System.Linq.Enumerable.Any<TSource>(System.Collections.Generic.IEnumerable<TSource>, System.Func<TSource, System.Boolean>)
  fullname.vb: System.Linq.Enumerable.Any(Of TSource)(System.Collections.Generic.IEnumerable(Of TSource), System.Func(Of TSource, System.Boolean))
  name.vb: Any(Of TSource)(IEnumerable(Of TSource), Func(Of TSource, Boolean))
  spec.csharp:
  - uid: System.Linq.Enumerable.Any``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})
    name: Any<TSource>
    fullName: System.Linq.Enumerable.Any<TSource>
  - name: (
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    fullName: <
  - name: TSource
    fullName: TSource
  - name: '>'
    fullName: '>'
  - name: ', '
    fullName: ', '
  - uid: System.Func`2
    name: Func
    fullName: System.Func
    isExternal: true
  - name: <
    fullName: <
  - name: TSource
    fullName: TSource
  - name: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: '>'
    fullName: '>'
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Linq.Enumerable.Any``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})
    name: Any(Of TSource)
    fullName: System.Linq.Enumerable.Any(Of TSource)
  - name: (
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - name: TSource
    fullName: TSource
  - name: )
    fullName: )
  - name: ', '
    fullName: ', '
  - uid: System.Func`2
    name: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - name: TSource
    fullName: TSource
  - name: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    fullName: )
  - name: )
    fullName: )
  nameWithType: Enumerable.Any<TSource>(IEnumerable<TSource>, Func<TSource, Boolean>)
  nameWithType.vb: Enumerable.Any(Of TSource)(IEnumerable(Of TSource), Func(Of TSource, Boolean))
  commentId: M:System.Linq.Enumerable.Any``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})
- uid: System.Linq.Enumerable.AsEnumerable``1(System.Collections.Generic.IEnumerable{``0})
  isExternal: true
  name: AsEnumerable<TSource>(IEnumerable<TSource>)
  fullName: System.Linq.Enumerable.AsEnumerable<TSource>(System.Collections.Generic.IEnumerable<TSource>)
  fullname.vb: System.Linq.Enumerable.AsEnumerable(Of TSource)(System.Collections.Generic.IEnumerable(Of TSource))
  name.vb: AsEnumerable(Of TSource)(IEnumerable(Of TSource))
  spec.csharp:
  - uid: System.Linq.Enumerable.AsEnumerable``1(System.Collections.Generic.IEnumerable{``0})
    name: AsEnumerable<TSource>
    fullName: System.Linq.Enumerable.AsEnumerable<TSource>
  - name: (
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    fullName: <
  - name: TSource
    fullName: TSource
  - name: '>'
    fullName: '>'
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Linq.Enumerable.AsEnumerable``1(System.Collections.Generic.IEnumerable{``0})
    name: AsEnumerable(Of TSource)
    fullName: System.Linq.Enumerable.AsEnumerable(Of TSource)
  - name: (
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - name: TSource
    fullName: TSource
  - name: )
    fullName: )
  - name: )
    fullName: )
  nameWithType: Enumerable.AsEnumerable<TSource>(IEnumerable<TSource>)
  nameWithType.vb: Enumerable.AsEnumerable(Of TSource)(IEnumerable(Of TSource))
  commentId: M:System.Linq.Enumerable.AsEnumerable``1(System.Collections.Generic.IEnumerable{``0})
- uid: System.Linq.Enumerable.Average``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Decimal})
  isExternal: true
  name: Average<TSource>(IEnumerable<TSource>, Func<TSource, Decimal>)
  fullName: System.Linq.Enumerable.Average<TSource>(System.Collections.Generic.IEnumerable<TSource>, System.Func<TSource, System.Decimal>)
  fullname.vb: System.Linq.Enumerable.Average(Of TSource)(System.Collections.Generic.IEnumerable(Of TSource), System.Func(Of TSource, System.Decimal))
  name.vb: Average(Of TSource)(IEnumerable(Of TSource), Func(Of TSource, Decimal))
  spec.csharp:
  - uid: System.Linq.Enumerable.Average``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Decimal})
    name: Average<TSource>
    fullName: System.Linq.Enumerable.Average<TSource>
  - name: (
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    fullName: <
  - name: TSource
    fullName: TSource
  - name: '>'
    fullName: '>'
  - name: ', '
    fullName: ', '
  - uid: System.Func`2
    name: Func
    fullName: System.Func
    isExternal: true
  - name: <
    fullName: <
  - name: TSource
    fullName: TSource
  - name: ', '
    fullName: ', '
  - uid: System.Decimal
    name: Decimal
    fullName: System.Decimal
    isExternal: true
  - name: '>'
    fullName: '>'
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Linq.Enumerable.Average``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Decimal})
    name: Average(Of TSource)
    fullName: System.Linq.Enumerable.Average(Of TSource)
  - name: (
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - name: TSource
    fullName: TSource
  - name: )
    fullName: )
  - name: ', '
    fullName: ', '
  - uid: System.Func`2
    name: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - name: TSource
    fullName: TSource
  - name: ', '
    fullName: ', '
  - uid: System.Decimal
    name: Decimal
    fullName: System.Decimal
    isExternal: true
  - name: )
    fullName: )
  - name: )
    fullName: )
  nameWithType: Enumerable.Average<TSource>(IEnumerable<TSource>, Func<TSource, Decimal>)
  nameWithType.vb: Enumerable.Average(Of TSource)(IEnumerable(Of TSource), Func(Of TSource, Decimal))
  commentId: M:System.Linq.Enumerable.Average``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Decimal})
- uid: System.Linq.Enumerable.Average``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Double})
  isExternal: true
  name: Average<TSource>(IEnumerable<TSource>, Func<TSource, Double>)
  fullName: System.Linq.Enumerable.Average<TSource>(System.Collections.Generic.IEnumerable<TSource>, System.Func<TSource, System.Double>)
  fullname.vb: System.Linq.Enumerable.Average(Of TSource)(System.Collections.Generic.IEnumerable(Of TSource), System.Func(Of TSource, System.Double))
  name.vb: Average(Of TSource)(IEnumerable(Of TSource), Func(Of TSource, Double))
  spec.csharp:
  - uid: System.Linq.Enumerable.Average``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Double})
    name: Average<TSource>
    fullName: System.Linq.Enumerable.Average<TSource>
  - name: (
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    fullName: <
  - name: TSource
    fullName: TSource
  - name: '>'
    fullName: '>'
  - name: ', '
    fullName: ', '
  - uid: System.Func`2
    name: Func
    fullName: System.Func
    isExternal: true
  - name: <
    fullName: <
  - name: TSource
    fullName: TSource
  - name: ', '
    fullName: ', '
  - uid: System.Double
    name: Double
    fullName: System.Double
    isExternal: true
  - name: '>'
    fullName: '>'
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Linq.Enumerable.Average``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Double})
    name: Average(Of TSource)
    fullName: System.Linq.Enumerable.Average(Of TSource)
  - name: (
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - name: TSource
    fullName: TSource
  - name: )
    fullName: )
  - name: ', '
    fullName: ', '
  - uid: System.Func`2
    name: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - name: TSource
    fullName: TSource
  - name: ', '
    fullName: ', '
  - uid: System.Double
    name: Double
    fullName: System.Double
    isExternal: true
  - name: )
    fullName: )
  - name: )
    fullName: )
  nameWithType: Enumerable.Average<TSource>(IEnumerable<TSource>, Func<TSource, Double>)
  nameWithType.vb: Enumerable.Average(Of TSource)(IEnumerable(Of TSource), Func(Of TSource, Double))
  commentId: M:System.Linq.Enumerable.Average``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Double})
- uid: System.Linq.Enumerable.Average``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32})
  isExternal: true
  name: Average<TSource>(IEnumerable<TSource>, Func<TSource, Int32>)
  fullName: System.Linq.Enumerable.Average<TSource>(System.Collections.Generic.IEnumerable<TSource>, System.Func<TSource, System.Int32>)
  fullname.vb: System.Linq.Enumerable.Average(Of TSource)(System.Collections.Generic.IEnumerable(Of TSource), System.Func(Of TSource, System.Int32))
  name.vb: Average(Of TSource)(IEnumerable(Of TSource), Func(Of TSource, Int32))
  spec.csharp:
  - uid: System.Linq.Enumerable.Average``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32})
    name: Average<TSource>
    fullName: System.Linq.Enumerable.Average<TSource>
  - name: (
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    fullName: <
  - name: TSource
    fullName: TSource
  - name: '>'
    fullName: '>'
  - name: ', '
    fullName: ', '
  - uid: System.Func`2
    name: Func
    fullName: System.Func
    isExternal: true
  - name: <
    fullName: <
  - name: TSource
    fullName: TSource
  - name: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    fullName: System.Int32
    isExternal: true
  - name: '>'
    fullName: '>'
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Linq.Enumerable.Average``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32})
    name: Average(Of TSource)
    fullName: System.Linq.Enumerable.Average(Of TSource)
  - name: (
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - name: TSource
    fullName: TSource
  - name: )
    fullName: )
  - name: ', '
    fullName: ', '
  - uid: System.Func`2
    name: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - name: TSource
    fullName: TSource
  - name: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    fullName: )
  - name: )
    fullName: )
  nameWithType: Enumerable.Average<TSource>(IEnumerable<TSource>, Func<TSource, Int32>)
  nameWithType.vb: Enumerable.Average(Of TSource)(IEnumerable(Of TSource), Func(Of TSource, Int32))
  commentId: M:System.Linq.Enumerable.Average``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32})
- uid: System.Linq.Enumerable.Average``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int64})
  isExternal: true
  name: Average<TSource>(IEnumerable<TSource>, Func<TSource, Int64>)
  fullName: System.Linq.Enumerable.Average<TSource>(System.Collections.Generic.IEnumerable<TSource>, System.Func<TSource, System.Int64>)
  fullname.vb: System.Linq.Enumerable.Average(Of TSource)(System.Collections.Generic.IEnumerable(Of TSource), System.Func(Of TSource, System.Int64))
  name.vb: Average(Of TSource)(IEnumerable(Of TSource), Func(Of TSource, Int64))
  spec.csharp:
  - uid: System.Linq.Enumerable.Average``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int64})
    name: Average<TSource>
    fullName: System.Linq.Enumerable.Average<TSource>
  - name: (
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    fullName: <
  - name: TSource
    fullName: TSource
  - name: '>'
    fullName: '>'
  - name: ', '
    fullName: ', '
  - uid: System.Func`2
    name: Func
    fullName: System.Func
    isExternal: true
  - name: <
    fullName: <
  - name: TSource
    fullName: TSource
  - name: ', '
    fullName: ', '
  - uid: System.Int64
    name: Int64
    fullName: System.Int64
    isExternal: true
  - name: '>'
    fullName: '>'
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Linq.Enumerable.Average``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int64})
    name: Average(Of TSource)
    fullName: System.Linq.Enumerable.Average(Of TSource)
  - name: (
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - name: TSource
    fullName: TSource
  - name: )
    fullName: )
  - name: ', '
    fullName: ', '
  - uid: System.Func`2
    name: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - name: TSource
    fullName: TSource
  - name: ', '
    fullName: ', '
  - uid: System.Int64
    name: Int64
    fullName: System.Int64
    isExternal: true
  - name: )
    fullName: )
  - name: )
    fullName: )
  nameWithType: Enumerable.Average<TSource>(IEnumerable<TSource>, Func<TSource, Int64>)
  nameWithType.vb: Enumerable.Average(Of TSource)(IEnumerable(Of TSource), Func(Of TSource, Int64))
  commentId: M:System.Linq.Enumerable.Average``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int64})
- uid: System.Linq.Enumerable.Average``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Decimal}})
  isExternal: true
  name: Average<TSource>(IEnumerable<TSource>, Func<TSource, Nullable<Decimal>>)
  fullName: System.Linq.Enumerable.Average<TSource>(System.Collections.Generic.IEnumerable<TSource>, System.Func<TSource, System.Nullable<System.Decimal>>)
  fullname.vb: System.Linq.Enumerable.Average(Of TSource)(System.Collections.Generic.IEnumerable(Of TSource), System.Func(Of TSource, System.Nullable(Of System.Decimal)))
  name.vb: Average(Of TSource)(IEnumerable(Of TSource), Func(Of TSource, Nullable(Of Decimal)))
  spec.csharp:
  - uid: System.Linq.Enumerable.Average``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Decimal}})
    name: Average<TSource>
    fullName: System.Linq.Enumerable.Average<TSource>
  - name: (
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    fullName: <
  - name: TSource
    fullName: TSource
  - name: '>'
    fullName: '>'
  - name: ', '
    fullName: ', '
  - uid: System.Func`2
    name: Func
    fullName: System.Func
    isExternal: true
  - name: <
    fullName: <
  - name: TSource
    fullName: TSource
  - name: ', '
    fullName: ', '
  - uid: System.Nullable`1
    name: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    fullName: <
  - uid: System.Decimal
    name: Decimal
    fullName: System.Decimal
    isExternal: true
  - name: '>'
    fullName: '>'
  - name: '>'
    fullName: '>'
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Linq.Enumerable.Average``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Decimal}})
    name: Average(Of TSource)
    fullName: System.Linq.Enumerable.Average(Of TSource)
  - name: (
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - name: TSource
    fullName: TSource
  - name: )
    fullName: )
  - name: ', '
    fullName: ', '
  - uid: System.Func`2
    name: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - name: TSource
    fullName: TSource
  - name: ', '
    fullName: ', '
  - uid: System.Nullable`1
    name: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - uid: System.Decimal
    name: Decimal
    fullName: System.Decimal
    isExternal: true
  - name: )
    fullName: )
  - name: )
    fullName: )
  - name: )
    fullName: )
  nameWithType: Enumerable.Average<TSource>(IEnumerable<TSource>, Func<TSource, Nullable<Decimal>>)
  nameWithType.vb: Enumerable.Average(Of TSource)(IEnumerable(Of TSource), Func(Of TSource, Nullable(Of Decimal)))
  commentId: M:System.Linq.Enumerable.Average``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Decimal}})
- uid: System.Linq.Enumerable.Average``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Double}})
  isExternal: true
  name: Average<TSource>(IEnumerable<TSource>, Func<TSource, Nullable<Double>>)
  fullName: System.Linq.Enumerable.Average<TSource>(System.Collections.Generic.IEnumerable<TSource>, System.Func<TSource, System.Nullable<System.Double>>)
  fullname.vb: System.Linq.Enumerable.Average(Of TSource)(System.Collections.Generic.IEnumerable(Of TSource), System.Func(Of TSource, System.Nullable(Of System.Double)))
  name.vb: Average(Of TSource)(IEnumerable(Of TSource), Func(Of TSource, Nullable(Of Double)))
  spec.csharp:
  - uid: System.Linq.Enumerable.Average``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Double}})
    name: Average<TSource>
    fullName: System.Linq.Enumerable.Average<TSource>
  - name: (
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    fullName: <
  - name: TSource
    fullName: TSource
  - name: '>'
    fullName: '>'
  - name: ', '
    fullName: ', '
  - uid: System.Func`2
    name: Func
    fullName: System.Func
    isExternal: true
  - name: <
    fullName: <
  - name: TSource
    fullName: TSource
  - name: ', '
    fullName: ', '
  - uid: System.Nullable`1
    name: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    fullName: <
  - uid: System.Double
    name: Double
    fullName: System.Double
    isExternal: true
  - name: '>'
    fullName: '>'
  - name: '>'
    fullName: '>'
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Linq.Enumerable.Average``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Double}})
    name: Average(Of TSource)
    fullName: System.Linq.Enumerable.Average(Of TSource)
  - name: (
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - name: TSource
    fullName: TSource
  - name: )
    fullName: )
  - name: ', '
    fullName: ', '
  - uid: System.Func`2
    name: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - name: TSource
    fullName: TSource
  - name: ', '
    fullName: ', '
  - uid: System.Nullable`1
    name: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - uid: System.Double
    name: Double
    fullName: System.Double
    isExternal: true
  - name: )
    fullName: )
  - name: )
    fullName: )
  - name: )
    fullName: )
  nameWithType: Enumerable.Average<TSource>(IEnumerable<TSource>, Func<TSource, Nullable<Double>>)
  nameWithType.vb: Enumerable.Average(Of TSource)(IEnumerable(Of TSource), Func(Of TSource, Nullable(Of Double)))
  commentId: M:System.Linq.Enumerable.Average``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Double}})
- uid: System.Linq.Enumerable.Average``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Int32}})
  isExternal: true
  name: Average<TSource>(IEnumerable<TSource>, Func<TSource, Nullable<Int32>>)
  fullName: System.Linq.Enumerable.Average<TSource>(System.Collections.Generic.IEnumerable<TSource>, System.Func<TSource, System.Nullable<System.Int32>>)
  fullname.vb: System.Linq.Enumerable.Average(Of TSource)(System.Collections.Generic.IEnumerable(Of TSource), System.Func(Of TSource, System.Nullable(Of System.Int32)))
  name.vb: Average(Of TSource)(IEnumerable(Of TSource), Func(Of TSource, Nullable(Of Int32)))
  spec.csharp:
  - uid: System.Linq.Enumerable.Average``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Int32}})
    name: Average<TSource>
    fullName: System.Linq.Enumerable.Average<TSource>
  - name: (
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    fullName: <
  - name: TSource
    fullName: TSource
  - name: '>'
    fullName: '>'
  - name: ', '
    fullName: ', '
  - uid: System.Func`2
    name: Func
    fullName: System.Func
    isExternal: true
  - name: <
    fullName: <
  - name: TSource
    fullName: TSource
  - name: ', '
    fullName: ', '
  - uid: System.Nullable`1
    name: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    fullName: <
  - uid: System.Int32
    name: Int32
    fullName: System.Int32
    isExternal: true
  - name: '>'
    fullName: '>'
  - name: '>'
    fullName: '>'
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Linq.Enumerable.Average``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Int32}})
    name: Average(Of TSource)
    fullName: System.Linq.Enumerable.Average(Of TSource)
  - name: (
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - name: TSource
    fullName: TSource
  - name: )
    fullName: )
  - name: ', '
    fullName: ', '
  - uid: System.Func`2
    name: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - name: TSource
    fullName: TSource
  - name: ', '
    fullName: ', '
  - uid: System.Nullable`1
    name: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - uid: System.Int32
    name: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    fullName: )
  - name: )
    fullName: )
  - name: )
    fullName: )
  nameWithType: Enumerable.Average<TSource>(IEnumerable<TSource>, Func<TSource, Nullable<Int32>>)
  nameWithType.vb: Enumerable.Average(Of TSource)(IEnumerable(Of TSource), Func(Of TSource, Nullable(Of Int32)))
  commentId: M:System.Linq.Enumerable.Average``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Int32}})
- uid: System.Linq.Enumerable.Average``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Int64}})
  isExternal: true
  name: Average<TSource>(IEnumerable<TSource>, Func<TSource, Nullable<Int64>>)
  fullName: System.Linq.Enumerable.Average<TSource>(System.Collections.Generic.IEnumerable<TSource>, System.Func<TSource, System.Nullable<System.Int64>>)
  fullname.vb: System.Linq.Enumerable.Average(Of TSource)(System.Collections.Generic.IEnumerable(Of TSource), System.Func(Of TSource, System.Nullable(Of System.Int64)))
  name.vb: Average(Of TSource)(IEnumerable(Of TSource), Func(Of TSource, Nullable(Of Int64)))
  spec.csharp:
  - uid: System.Linq.Enumerable.Average``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Int64}})
    name: Average<TSource>
    fullName: System.Linq.Enumerable.Average<TSource>
  - name: (
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    fullName: <
  - name: TSource
    fullName: TSource
  - name: '>'
    fullName: '>'
  - name: ', '
    fullName: ', '
  - uid: System.Func`2
    name: Func
    fullName: System.Func
    isExternal: true
  - name: <
    fullName: <
  - name: TSource
    fullName: TSource
  - name: ', '
    fullName: ', '
  - uid: System.Nullable`1
    name: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    fullName: <
  - uid: System.Int64
    name: Int64
    fullName: System.Int64
    isExternal: true
  - name: '>'
    fullName: '>'
  - name: '>'
    fullName: '>'
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Linq.Enumerable.Average``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Int64}})
    name: Average(Of TSource)
    fullName: System.Linq.Enumerable.Average(Of TSource)
  - name: (
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - name: TSource
    fullName: TSource
  - name: )
    fullName: )
  - name: ', '
    fullName: ', '
  - uid: System.Func`2
    name: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - name: TSource
    fullName: TSource
  - name: ', '
    fullName: ', '
  - uid: System.Nullable`1
    name: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - uid: System.Int64
    name: Int64
    fullName: System.Int64
    isExternal: true
  - name: )
    fullName: )
  - name: )
    fullName: )
  - name: )
    fullName: )
  nameWithType: Enumerable.Average<TSource>(IEnumerable<TSource>, Func<TSource, Nullable<Int64>>)
  nameWithType.vb: Enumerable.Average(Of TSource)(IEnumerable(Of TSource), Func(Of TSource, Nullable(Of Int64)))
  commentId: M:System.Linq.Enumerable.Average``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Int64}})
- uid: System.Linq.Enumerable.Average``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Single}})
  isExternal: true
  name: Average<TSource>(IEnumerable<TSource>, Func<TSource, Nullable<Single>>)
  fullName: System.Linq.Enumerable.Average<TSource>(System.Collections.Generic.IEnumerable<TSource>, System.Func<TSource, System.Nullable<System.Single>>)
  fullname.vb: System.Linq.Enumerable.Average(Of TSource)(System.Collections.Generic.IEnumerable(Of TSource), System.Func(Of TSource, System.Nullable(Of System.Single)))
  name.vb: Average(Of TSource)(IEnumerable(Of TSource), Func(Of TSource, Nullable(Of Single)))
  spec.csharp:
  - uid: System.Linq.Enumerable.Average``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Single}})
    name: Average<TSource>
    fullName: System.Linq.Enumerable.Average<TSource>
  - name: (
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    fullName: <
  - name: TSource
    fullName: TSource
  - name: '>'
    fullName: '>'
  - name: ', '
    fullName: ', '
  - uid: System.Func`2
    name: Func
    fullName: System.Func
    isExternal: true
  - name: <
    fullName: <
  - name: TSource
    fullName: TSource
  - name: ', '
    fullName: ', '
  - uid: System.Nullable`1
    name: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    fullName: <
  - uid: System.Single
    name: Single
    fullName: System.Single
    isExternal: true
  - name: '>'
    fullName: '>'
  - name: '>'
    fullName: '>'
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Linq.Enumerable.Average``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Single}})
    name: Average(Of TSource)
    fullName: System.Linq.Enumerable.Average(Of TSource)
  - name: (
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - name: TSource
    fullName: TSource
  - name: )
    fullName: )
  - name: ', '
    fullName: ', '
  - uid: System.Func`2
    name: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - name: TSource
    fullName: TSource
  - name: ', '
    fullName: ', '
  - uid: System.Nullable`1
    name: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - uid: System.Single
    name: Single
    fullName: System.Single
    isExternal: true
  - name: )
    fullName: )
  - name: )
    fullName: )
  - name: )
    fullName: )
  nameWithType: Enumerable.Average<TSource>(IEnumerable<TSource>, Func<TSource, Nullable<Single>>)
  nameWithType.vb: Enumerable.Average(Of TSource)(IEnumerable(Of TSource), Func(Of TSource, Nullable(Of Single)))
  commentId: M:System.Linq.Enumerable.Average``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Single}})
- uid: System.Linq.Enumerable.Average``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Single})
  isExternal: true
  name: Average<TSource>(IEnumerable<TSource>, Func<TSource, Single>)
  fullName: System.Linq.Enumerable.Average<TSource>(System.Collections.Generic.IEnumerable<TSource>, System.Func<TSource, System.Single>)
  fullname.vb: System.Linq.Enumerable.Average(Of TSource)(System.Collections.Generic.IEnumerable(Of TSource), System.Func(Of TSource, System.Single))
  name.vb: Average(Of TSource)(IEnumerable(Of TSource), Func(Of TSource, Single))
  spec.csharp:
  - uid: System.Linq.Enumerable.Average``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Single})
    name: Average<TSource>
    fullName: System.Linq.Enumerable.Average<TSource>
  - name: (
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    fullName: <
  - name: TSource
    fullName: TSource
  - name: '>'
    fullName: '>'
  - name: ', '
    fullName: ', '
  - uid: System.Func`2
    name: Func
    fullName: System.Func
    isExternal: true
  - name: <
    fullName: <
  - name: TSource
    fullName: TSource
  - name: ', '
    fullName: ', '
  - uid: System.Single
    name: Single
    fullName: System.Single
    isExternal: true
  - name: '>'
    fullName: '>'
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Linq.Enumerable.Average``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Single})
    name: Average(Of TSource)
    fullName: System.Linq.Enumerable.Average(Of TSource)
  - name: (
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - name: TSource
    fullName: TSource
  - name: )
    fullName: )
  - name: ', '
    fullName: ', '
  - uid: System.Func`2
    name: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - name: TSource
    fullName: TSource
  - name: ', '
    fullName: ', '
  - uid: System.Single
    name: Single
    fullName: System.Single
    isExternal: true
  - name: )
    fullName: )
  - name: )
    fullName: )
  nameWithType: Enumerable.Average<TSource>(IEnumerable<TSource>, Func<TSource, Single>)
  nameWithType.vb: Enumerable.Average(Of TSource)(IEnumerable(Of TSource), Func(Of TSource, Single))
  commentId: M:System.Linq.Enumerable.Average``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Single})
- uid: System.Linq.Enumerable.Cast``1(System.Collections.IEnumerable)
  isExternal: true
  name: Cast<TResult>(IEnumerable)
  fullName: System.Linq.Enumerable.Cast<TResult>(System.Collections.IEnumerable)
  fullname.vb: System.Linq.Enumerable.Cast(Of TResult)(System.Collections.IEnumerable)
  name.vb: Cast(Of TResult)(IEnumerable)
  spec.csharp:
  - uid: System.Linq.Enumerable.Cast``1(System.Collections.IEnumerable)
    name: Cast<TResult>
    fullName: System.Linq.Enumerable.Cast<TResult>
  - name: (
    fullName: (
  - uid: System.Collections.IEnumerable
    name: IEnumerable
    fullName: System.Collections.IEnumerable
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Linq.Enumerable.Cast``1(System.Collections.IEnumerable)
    name: Cast(Of TResult)
    fullName: System.Linq.Enumerable.Cast(Of TResult)
  - name: (
    fullName: (
  - uid: System.Collections.IEnumerable
    name: IEnumerable
    fullName: System.Collections.IEnumerable
    isExternal: true
  - name: )
    fullName: )
  nameWithType: Enumerable.Cast<TResult>(IEnumerable)
  nameWithType.vb: Enumerable.Cast(Of TResult)(IEnumerable)
  commentId: M:System.Linq.Enumerable.Cast``1(System.Collections.IEnumerable)
- uid: System.Linq.Enumerable.Concat``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0})
  isExternal: true
  name: Concat<TSource>(IEnumerable<TSource>, IEnumerable<TSource>)
  fullName: System.Linq.Enumerable.Concat<TSource>(System.Collections.Generic.IEnumerable<TSource>, System.Collections.Generic.IEnumerable<TSource>)
  fullname.vb: System.Linq.Enumerable.Concat(Of TSource)(System.Collections.Generic.IEnumerable(Of TSource), System.Collections.Generic.IEnumerable(Of TSource))
  name.vb: Concat(Of TSource)(IEnumerable(Of TSource), IEnumerable(Of TSource))
  spec.csharp:
  - uid: System.Linq.Enumerable.Concat``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0})
    name: Concat<TSource>
    fullName: System.Linq.Enumerable.Concat<TSource>
  - name: (
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    fullName: <
  - name: TSource
    fullName: TSource
  - name: '>'
    fullName: '>'
  - name: ', '
    fullName: ', '
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    fullName: <
  - name: TSource
    fullName: TSource
  - name: '>'
    fullName: '>'
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Linq.Enumerable.Concat``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0})
    name: Concat(Of TSource)
    fullName: System.Linq.Enumerable.Concat(Of TSource)
  - name: (
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - name: TSource
    fullName: TSource
  - name: )
    fullName: )
  - name: ', '
    fullName: ', '
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - name: TSource
    fullName: TSource
  - name: )
    fullName: )
  - name: )
    fullName: )
  nameWithType: Enumerable.Concat<TSource>(IEnumerable<TSource>, IEnumerable<TSource>)
  nameWithType.vb: Enumerable.Concat(Of TSource)(IEnumerable(Of TSource), IEnumerable(Of TSource))
  commentId: M:System.Linq.Enumerable.Concat``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0})
- uid: System.Linq.Enumerable.Append``1(System.Collections.Generic.IEnumerable{``0},``0)
  isExternal: true
  name: Append<TSource>(IEnumerable<TSource>, TSource)
  fullName: System.Linq.Enumerable.Append<TSource>(System.Collections.Generic.IEnumerable<TSource>, TSource)
  fullname.vb: System.Linq.Enumerable.Append(Of TSource)(System.Collections.Generic.IEnumerable(Of TSource), TSource)
  name.vb: Append(Of TSource)(IEnumerable(Of TSource), TSource)
  spec.csharp:
  - uid: System.Linq.Enumerable.Append``1(System.Collections.Generic.IEnumerable{``0},``0)
    name: Append<TSource>
    fullName: System.Linq.Enumerable.Append<TSource>
  - name: (
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    fullName: <
  - name: TSource
    fullName: TSource
  - name: '>'
    fullName: '>'
  - name: ', '
    fullName: ', '
  - name: TSource
    fullName: TSource
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Linq.Enumerable.Append``1(System.Collections.Generic.IEnumerable{``0},``0)
    name: Append(Of TSource)
    fullName: System.Linq.Enumerable.Append(Of TSource)
  - name: (
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - name: TSource
    fullName: TSource
  - name: )
    fullName: )
  - name: ', '
    fullName: ', '
  - name: TSource
    fullName: TSource
  - name: )
    fullName: )
  nameWithType: Enumerable.Append<TSource>(IEnumerable<TSource>, TSource)
  nameWithType.vb: Enumerable.Append(Of TSource)(IEnumerable(Of TSource), TSource)
  commentId: M:System.Linq.Enumerable.Append``1(System.Collections.Generic.IEnumerable{``0},``0)
- uid: System.Linq.Enumerable.Prepend``1(System.Collections.Generic.IEnumerable{``0},``0)
  isExternal: true
  name: Prepend<TSource>(IEnumerable<TSource>, TSource)
  fullName: System.Linq.Enumerable.Prepend<TSource>(System.Collections.Generic.IEnumerable<TSource>, TSource)
  fullname.vb: System.Linq.Enumerable.Prepend(Of TSource)(System.Collections.Generic.IEnumerable(Of TSource), TSource)
  name.vb: Prepend(Of TSource)(IEnumerable(Of TSource), TSource)
  spec.csharp:
  - uid: System.Linq.Enumerable.Prepend``1(System.Collections.Generic.IEnumerable{``0},``0)
    name: Prepend<TSource>
    fullName: System.Linq.Enumerable.Prepend<TSource>
  - name: (
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    fullName: <
  - name: TSource
    fullName: TSource
  - name: '>'
    fullName: '>'
  - name: ', '
    fullName: ', '
  - name: TSource
    fullName: TSource
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Linq.Enumerable.Prepend``1(System.Collections.Generic.IEnumerable{``0},``0)
    name: Prepend(Of TSource)
    fullName: System.Linq.Enumerable.Prepend(Of TSource)
  - name: (
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - name: TSource
    fullName: TSource
  - name: )
    fullName: )
  - name: ', '
    fullName: ', '
  - name: TSource
    fullName: TSource
  - name: )
    fullName: )
  nameWithType: Enumerable.Prepend<TSource>(IEnumerable<TSource>, TSource)
  nameWithType.vb: Enumerable.Prepend(Of TSource)(IEnumerable(Of TSource), TSource)
  commentId: M:System.Linq.Enumerable.Prepend``1(System.Collections.Generic.IEnumerable{``0},``0)
- uid: System.Linq.Enumerable.Contains``1(System.Collections.Generic.IEnumerable{``0},``0)
  isExternal: true
  name: Contains<TSource>(IEnumerable<TSource>, TSource)
  fullName: System.Linq.Enumerable.Contains<TSource>(System.Collections.Generic.IEnumerable<TSource>, TSource)
  fullname.vb: System.Linq.Enumerable.Contains(Of TSource)(System.Collections.Generic.IEnumerable(Of TSource), TSource)
  name.vb: Contains(Of TSource)(IEnumerable(Of TSource), TSource)
  spec.csharp:
  - uid: System.Linq.Enumerable.Contains``1(System.Collections.Generic.IEnumerable{``0},``0)
    name: Contains<TSource>
    fullName: System.Linq.Enumerable.Contains<TSource>
  - name: (
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    fullName: <
  - name: TSource
    fullName: TSource
  - name: '>'
    fullName: '>'
  - name: ', '
    fullName: ', '
  - name: TSource
    fullName: TSource
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Linq.Enumerable.Contains``1(System.Collections.Generic.IEnumerable{``0},``0)
    name: Contains(Of TSource)
    fullName: System.Linq.Enumerable.Contains(Of TSource)
  - name: (
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - name: TSource
    fullName: TSource
  - name: )
    fullName: )
  - name: ', '
    fullName: ', '
  - name: TSource
    fullName: TSource
  - name: )
    fullName: )
  nameWithType: Enumerable.Contains<TSource>(IEnumerable<TSource>, TSource)
  nameWithType.vb: Enumerable.Contains(Of TSource)(IEnumerable(Of TSource), TSource)
  commentId: M:System.Linq.Enumerable.Contains``1(System.Collections.Generic.IEnumerable{``0},``0)
- uid: System.Linq.Enumerable.Contains``1(System.Collections.Generic.IEnumerable{``0},``0,System.Collections.Generic.IEqualityComparer{``0})
  isExternal: true
  name: Contains<TSource>(IEnumerable<TSource>, TSource, IEqualityComparer<TSource>)
  fullName: System.Linq.Enumerable.Contains<TSource>(System.Collections.Generic.IEnumerable<TSource>, TSource, System.Collections.Generic.IEqualityComparer<TSource>)
  fullname.vb: System.Linq.Enumerable.Contains(Of TSource)(System.Collections.Generic.IEnumerable(Of TSource), TSource, System.Collections.Generic.IEqualityComparer(Of TSource))
  name.vb: Contains(Of TSource)(IEnumerable(Of TSource), TSource, IEqualityComparer(Of TSource))
  spec.csharp:
  - uid: System.Linq.Enumerable.Contains``1(System.Collections.Generic.IEnumerable{``0},``0,System.Collections.Generic.IEqualityComparer{``0})
    name: Contains<TSource>
    fullName: System.Linq.Enumerable.Contains<TSource>
  - name: (
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    fullName: <
  - name: TSource
    fullName: TSource
  - name: '>'
    fullName: '>'
  - name: ', '
    fullName: ', '
  - name: TSource
    fullName: TSource
  - name: ', '
    fullName: ', '
  - uid: System.Collections.Generic.IEqualityComparer`1
    name: IEqualityComparer
    fullName: System.Collections.Generic.IEqualityComparer
    isExternal: true
  - name: <
    fullName: <
  - name: TSource
    fullName: TSource
  - name: '>'
    fullName: '>'
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Linq.Enumerable.Contains``1(System.Collections.Generic.IEnumerable{``0},``0,System.Collections.Generic.IEqualityComparer{``0})
    name: Contains(Of TSource)
    fullName: System.Linq.Enumerable.Contains(Of TSource)
  - name: (
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - name: TSource
    fullName: TSource
  - name: )
    fullName: )
  - name: ', '
    fullName: ', '
  - name: TSource
    fullName: TSource
  - name: ', '
    fullName: ', '
  - uid: System.Collections.Generic.IEqualityComparer`1
    name: IEqualityComparer
    fullName: System.Collections.Generic.IEqualityComparer
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - name: TSource
    fullName: TSource
  - name: )
    fullName: )
  - name: )
    fullName: )
  nameWithType: Enumerable.Contains<TSource>(IEnumerable<TSource>, TSource, IEqualityComparer<TSource>)
  nameWithType.vb: Enumerable.Contains(Of TSource)(IEnumerable(Of TSource), TSource, IEqualityComparer(Of TSource))
  commentId: M:System.Linq.Enumerable.Contains``1(System.Collections.Generic.IEnumerable{``0},``0,System.Collections.Generic.IEqualityComparer{``0})
- uid: System.Linq.Enumerable.Count``1(System.Collections.Generic.IEnumerable{``0})
  isExternal: true
  name: Count<TSource>(IEnumerable<TSource>)
  fullName: System.Linq.Enumerable.Count<TSource>(System.Collections.Generic.IEnumerable<TSource>)
  fullname.vb: System.Linq.Enumerable.Count(Of TSource)(System.Collections.Generic.IEnumerable(Of TSource))
  name.vb: Count(Of TSource)(IEnumerable(Of TSource))
  spec.csharp:
  - uid: System.Linq.Enumerable.Count``1(System.Collections.Generic.IEnumerable{``0})
    name: Count<TSource>
    fullName: System.Linq.Enumerable.Count<TSource>
  - name: (
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    fullName: <
  - name: TSource
    fullName: TSource
  - name: '>'
    fullName: '>'
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Linq.Enumerable.Count``1(System.Collections.Generic.IEnumerable{``0})
    name: Count(Of TSource)
    fullName: System.Linq.Enumerable.Count(Of TSource)
  - name: (
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - name: TSource
    fullName: TSource
  - name: )
    fullName: )
  - name: )
    fullName: )
  nameWithType: Enumerable.Count<TSource>(IEnumerable<TSource>)
  nameWithType.vb: Enumerable.Count(Of TSource)(IEnumerable(Of TSource))
  commentId: M:System.Linq.Enumerable.Count``1(System.Collections.Generic.IEnumerable{``0})
- uid: System.Linq.Enumerable.Count``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})
  isExternal: true
  name: Count<TSource>(IEnumerable<TSource>, Func<TSource, Boolean>)
  fullName: System.Linq.Enumerable.Count<TSource>(System.Collections.Generic.IEnumerable<TSource>, System.Func<TSource, System.Boolean>)
  fullname.vb: System.Linq.Enumerable.Count(Of TSource)(System.Collections.Generic.IEnumerable(Of TSource), System.Func(Of TSource, System.Boolean))
  name.vb: Count(Of TSource)(IEnumerable(Of TSource), Func(Of TSource, Boolean))
  spec.csharp:
  - uid: System.Linq.Enumerable.Count``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})
    name: Count<TSource>
    fullName: System.Linq.Enumerable.Count<TSource>
  - name: (
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    fullName: <
  - name: TSource
    fullName: TSource
  - name: '>'
    fullName: '>'
  - name: ', '
    fullName: ', '
  - uid: System.Func`2
    name: Func
    fullName: System.Func
    isExternal: true
  - name: <
    fullName: <
  - name: TSource
    fullName: TSource
  - name: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: '>'
    fullName: '>'
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Linq.Enumerable.Count``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})
    name: Count(Of TSource)
    fullName: System.Linq.Enumerable.Count(Of TSource)
  - name: (
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - name: TSource
    fullName: TSource
  - name: )
    fullName: )
  - name: ', '
    fullName: ', '
  - uid: System.Func`2
    name: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - name: TSource
    fullName: TSource
  - name: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    fullName: )
  - name: )
    fullName: )
  nameWithType: Enumerable.Count<TSource>(IEnumerable<TSource>, Func<TSource, Boolean>)
  nameWithType.vb: Enumerable.Count(Of TSource)(IEnumerable(Of TSource), Func(Of TSource, Boolean))
  commentId: M:System.Linq.Enumerable.Count``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})
- uid: System.Linq.Enumerable.DefaultIfEmpty``1(System.Collections.Generic.IEnumerable{``0})
  isExternal: true
  name: DefaultIfEmpty<TSource>(IEnumerable<TSource>)
  fullName: System.Linq.Enumerable.DefaultIfEmpty<TSource>(System.Collections.Generic.IEnumerable<TSource>)
  fullname.vb: System.Linq.Enumerable.DefaultIfEmpty(Of TSource)(System.Collections.Generic.IEnumerable(Of TSource))
  name.vb: DefaultIfEmpty(Of TSource)(IEnumerable(Of TSource))
  spec.csharp:
  - uid: System.Linq.Enumerable.DefaultIfEmpty``1(System.Collections.Generic.IEnumerable{``0})
    name: DefaultIfEmpty<TSource>
    fullName: System.Linq.Enumerable.DefaultIfEmpty<TSource>
  - name: (
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    fullName: <
  - name: TSource
    fullName: TSource
  - name: '>'
    fullName: '>'
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Linq.Enumerable.DefaultIfEmpty``1(System.Collections.Generic.IEnumerable{``0})
    name: DefaultIfEmpty(Of TSource)
    fullName: System.Linq.Enumerable.DefaultIfEmpty(Of TSource)
  - name: (
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - name: TSource
    fullName: TSource
  - name: )
    fullName: )
  - name: )
    fullName: )
  nameWithType: Enumerable.DefaultIfEmpty<TSource>(IEnumerable<TSource>)
  nameWithType.vb: Enumerable.DefaultIfEmpty(Of TSource)(IEnumerable(Of TSource))
  commentId: M:System.Linq.Enumerable.DefaultIfEmpty``1(System.Collections.Generic.IEnumerable{``0})
- uid: System.Linq.Enumerable.DefaultIfEmpty``1(System.Collections.Generic.IEnumerable{``0},``0)
  isExternal: true
  name: DefaultIfEmpty<TSource>(IEnumerable<TSource>, TSource)
  fullName: System.Linq.Enumerable.DefaultIfEmpty<TSource>(System.Collections.Generic.IEnumerable<TSource>, TSource)
  fullname.vb: System.Linq.Enumerable.DefaultIfEmpty(Of TSource)(System.Collections.Generic.IEnumerable(Of TSource), TSource)
  name.vb: DefaultIfEmpty(Of TSource)(IEnumerable(Of TSource), TSource)
  spec.csharp:
  - uid: System.Linq.Enumerable.DefaultIfEmpty``1(System.Collections.Generic.IEnumerable{``0},``0)
    name: DefaultIfEmpty<TSource>
    fullName: System.Linq.Enumerable.DefaultIfEmpty<TSource>
  - name: (
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    fullName: <
  - name: TSource
    fullName: TSource
  - name: '>'
    fullName: '>'
  - name: ', '
    fullName: ', '
  - name: TSource
    fullName: TSource
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Linq.Enumerable.DefaultIfEmpty``1(System.Collections.Generic.IEnumerable{``0},``0)
    name: DefaultIfEmpty(Of TSource)
    fullName: System.Linq.Enumerable.DefaultIfEmpty(Of TSource)
  - name: (
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - name: TSource
    fullName: TSource
  - name: )
    fullName: )
  - name: ', '
    fullName: ', '
  - name: TSource
    fullName: TSource
  - name: )
    fullName: )
  nameWithType: Enumerable.DefaultIfEmpty<TSource>(IEnumerable<TSource>, TSource)
  nameWithType.vb: Enumerable.DefaultIfEmpty(Of TSource)(IEnumerable(Of TSource), TSource)
  commentId: M:System.Linq.Enumerable.DefaultIfEmpty``1(System.Collections.Generic.IEnumerable{``0},``0)
- uid: System.Linq.Enumerable.Distinct``1(System.Collections.Generic.IEnumerable{``0})
  isExternal: true
  name: Distinct<TSource>(IEnumerable<TSource>)
  fullName: System.Linq.Enumerable.Distinct<TSource>(System.Collections.Generic.IEnumerable<TSource>)
  fullname.vb: System.Linq.Enumerable.Distinct(Of TSource)(System.Collections.Generic.IEnumerable(Of TSource))
  name.vb: Distinct(Of TSource)(IEnumerable(Of TSource))
  spec.csharp:
  - uid: System.Linq.Enumerable.Distinct``1(System.Collections.Generic.IEnumerable{``0})
    name: Distinct<TSource>
    fullName: System.Linq.Enumerable.Distinct<TSource>
  - name: (
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    fullName: <
  - name: TSource
    fullName: TSource
  - name: '>'
    fullName: '>'
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Linq.Enumerable.Distinct``1(System.Collections.Generic.IEnumerable{``0})
    name: Distinct(Of TSource)
    fullName: System.Linq.Enumerable.Distinct(Of TSource)
  - name: (
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - name: TSource
    fullName: TSource
  - name: )
    fullName: )
  - name: )
    fullName: )
  nameWithType: Enumerable.Distinct<TSource>(IEnumerable<TSource>)
  nameWithType.vb: Enumerable.Distinct(Of TSource)(IEnumerable(Of TSource))
  commentId: M:System.Linq.Enumerable.Distinct``1(System.Collections.Generic.IEnumerable{``0})
- uid: System.Linq.Enumerable.Distinct``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEqualityComparer{``0})
  isExternal: true
  name: Distinct<TSource>(IEnumerable<TSource>, IEqualityComparer<TSource>)
  fullName: System.Linq.Enumerable.Distinct<TSource>(System.Collections.Generic.IEnumerable<TSource>, System.Collections.Generic.IEqualityComparer<TSource>)
  fullname.vb: System.Linq.Enumerable.Distinct(Of TSource)(System.Collections.Generic.IEnumerable(Of TSource), System.Collections.Generic.IEqualityComparer(Of TSource))
  name.vb: Distinct(Of TSource)(IEnumerable(Of TSource), IEqualityComparer(Of TSource))
  spec.csharp:
  - uid: System.Linq.Enumerable.Distinct``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEqualityComparer{``0})
    name: Distinct<TSource>
    fullName: System.Linq.Enumerable.Distinct<TSource>
  - name: (
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    fullName: <
  - name: TSource
    fullName: TSource
  - name: '>'
    fullName: '>'
  - name: ', '
    fullName: ', '
  - uid: System.Collections.Generic.IEqualityComparer`1
    name: IEqualityComparer
    fullName: System.Collections.Generic.IEqualityComparer
    isExternal: true
  - name: <
    fullName: <
  - name: TSource
    fullName: TSource
  - name: '>'
    fullName: '>'
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Linq.Enumerable.Distinct``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEqualityComparer{``0})
    name: Distinct(Of TSource)
    fullName: System.Linq.Enumerable.Distinct(Of TSource)
  - name: (
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - name: TSource
    fullName: TSource
  - name: )
    fullName: )
  - name: ', '
    fullName: ', '
  - uid: System.Collections.Generic.IEqualityComparer`1
    name: IEqualityComparer
    fullName: System.Collections.Generic.IEqualityComparer
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - name: TSource
    fullName: TSource
  - name: )
    fullName: )
  - name: )
    fullName: )
  nameWithType: Enumerable.Distinct<TSource>(IEnumerable<TSource>, IEqualityComparer<TSource>)
  nameWithType.vb: Enumerable.Distinct(Of TSource)(IEnumerable(Of TSource), IEqualityComparer(Of TSource))
  commentId: M:System.Linq.Enumerable.Distinct``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEqualityComparer{``0})
- uid: System.Linq.Enumerable.ElementAt``1(System.Collections.Generic.IEnumerable{``0},System.Int32)
  isExternal: true
  name: ElementAt<TSource>(IEnumerable<TSource>, Int32)
  fullName: System.Linq.Enumerable.ElementAt<TSource>(System.Collections.Generic.IEnumerable<TSource>, System.Int32)
  fullname.vb: System.Linq.Enumerable.ElementAt(Of TSource)(System.Collections.Generic.IEnumerable(Of TSource), System.Int32)
  name.vb: ElementAt(Of TSource)(IEnumerable(Of TSource), Int32)
  spec.csharp:
  - uid: System.Linq.Enumerable.ElementAt``1(System.Collections.Generic.IEnumerable{``0},System.Int32)
    name: ElementAt<TSource>
    fullName: System.Linq.Enumerable.ElementAt<TSource>
  - name: (
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    fullName: <
  - name: TSource
    fullName: TSource
  - name: '>'
    fullName: '>'
  - name: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Linq.Enumerable.ElementAt``1(System.Collections.Generic.IEnumerable{``0},System.Int32)
    name: ElementAt(Of TSource)
    fullName: System.Linq.Enumerable.ElementAt(Of TSource)
  - name: (
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - name: TSource
    fullName: TSource
  - name: )
    fullName: )
  - name: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    fullName: )
  nameWithType: Enumerable.ElementAt<TSource>(IEnumerable<TSource>, Int32)
  nameWithType.vb: Enumerable.ElementAt(Of TSource)(IEnumerable(Of TSource), Int32)
  commentId: M:System.Linq.Enumerable.ElementAt``1(System.Collections.Generic.IEnumerable{``0},System.Int32)
- uid: System.Linq.Enumerable.ElementAtOrDefault``1(System.Collections.Generic.IEnumerable{``0},System.Int32)
  isExternal: true
  name: ElementAtOrDefault<TSource>(IEnumerable<TSource>, Int32)
  fullName: System.Linq.Enumerable.ElementAtOrDefault<TSource>(System.Collections.Generic.IEnumerable<TSource>, System.Int32)
  fullname.vb: System.Linq.Enumerable.ElementAtOrDefault(Of TSource)(System.Collections.Generic.IEnumerable(Of TSource), System.Int32)
  name.vb: ElementAtOrDefault(Of TSource)(IEnumerable(Of TSource), Int32)
  spec.csharp:
  - uid: System.Linq.Enumerable.ElementAtOrDefault``1(System.Collections.Generic.IEnumerable{``0},System.Int32)
    name: ElementAtOrDefault<TSource>
    fullName: System.Linq.Enumerable.ElementAtOrDefault<TSource>
  - name: (
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    fullName: <
  - name: TSource
    fullName: TSource
  - name: '>'
    fullName: '>'
  - name: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Linq.Enumerable.ElementAtOrDefault``1(System.Collections.Generic.IEnumerable{``0},System.Int32)
    name: ElementAtOrDefault(Of TSource)
    fullName: System.Linq.Enumerable.ElementAtOrDefault(Of TSource)
  - name: (
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - name: TSource
    fullName: TSource
  - name: )
    fullName: )
  - name: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    fullName: )
  nameWithType: Enumerable.ElementAtOrDefault<TSource>(IEnumerable<TSource>, Int32)
  nameWithType.vb: Enumerable.ElementAtOrDefault(Of TSource)(IEnumerable(Of TSource), Int32)
  commentId: M:System.Linq.Enumerable.ElementAtOrDefault``1(System.Collections.Generic.IEnumerable{``0},System.Int32)
- uid: System.Linq.Enumerable.Except``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0})
  isExternal: true
  name: Except<TSource>(IEnumerable<TSource>, IEnumerable<TSource>)
  fullName: System.Linq.Enumerable.Except<TSource>(System.Collections.Generic.IEnumerable<TSource>, System.Collections.Generic.IEnumerable<TSource>)
  fullname.vb: System.Linq.Enumerable.Except(Of TSource)(System.Collections.Generic.IEnumerable(Of TSource), System.Collections.Generic.IEnumerable(Of TSource))
  name.vb: Except(Of TSource)(IEnumerable(Of TSource), IEnumerable(Of TSource))
  spec.csharp:
  - uid: System.Linq.Enumerable.Except``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0})
    name: Except<TSource>
    fullName: System.Linq.Enumerable.Except<TSource>
  - name: (
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    fullName: <
  - name: TSource
    fullName: TSource
  - name: '>'
    fullName: '>'
  - name: ', '
    fullName: ', '
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    fullName: <
  - name: TSource
    fullName: TSource
  - name: '>'
    fullName: '>'
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Linq.Enumerable.Except``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0})
    name: Except(Of TSource)
    fullName: System.Linq.Enumerable.Except(Of TSource)
  - name: (
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - name: TSource
    fullName: TSource
  - name: )
    fullName: )
  - name: ', '
    fullName: ', '
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - name: TSource
    fullName: TSource
  - name: )
    fullName: )
  - name: )
    fullName: )
  nameWithType: Enumerable.Except<TSource>(IEnumerable<TSource>, IEnumerable<TSource>)
  nameWithType.vb: Enumerable.Except(Of TSource)(IEnumerable(Of TSource), IEnumerable(Of TSource))
  commentId: M:System.Linq.Enumerable.Except``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0})
- uid: System.Linq.Enumerable.Except``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEqualityComparer{``0})
  isExternal: true
  name: Except<TSource>(IEnumerable<TSource>, IEnumerable<TSource>, IEqualityComparer<TSource>)
  fullName: System.Linq.Enumerable.Except<TSource>(System.Collections.Generic.IEnumerable<TSource>, System.Collections.Generic.IEnumerable<TSource>, System.Collections.Generic.IEqualityComparer<TSource>)
  fullname.vb: System.Linq.Enumerable.Except(Of TSource)(System.Collections.Generic.IEnumerable(Of TSource), System.Collections.Generic.IEnumerable(Of TSource), System.Collections.Generic.IEqualityComparer(Of TSource))
  name.vb: Except(Of TSource)(IEnumerable(Of TSource), IEnumerable(Of TSource), IEqualityComparer(Of TSource))
  spec.csharp:
  - uid: System.Linq.Enumerable.Except``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEqualityComparer{``0})
    name: Except<TSource>
    fullName: System.Linq.Enumerable.Except<TSource>
  - name: (
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    fullName: <
  - name: TSource
    fullName: TSource
  - name: '>'
    fullName: '>'
  - name: ', '
    fullName: ', '
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    fullName: <
  - name: TSource
    fullName: TSource
  - name: '>'
    fullName: '>'
  - name: ', '
    fullName: ', '
  - uid: System.Collections.Generic.IEqualityComparer`1
    name: IEqualityComparer
    fullName: System.Collections.Generic.IEqualityComparer
    isExternal: true
  - name: <
    fullName: <
  - name: TSource
    fullName: TSource
  - name: '>'
    fullName: '>'
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Linq.Enumerable.Except``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEqualityComparer{``0})
    name: Except(Of TSource)
    fullName: System.Linq.Enumerable.Except(Of TSource)
  - name: (
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - name: TSource
    fullName: TSource
  - name: )
    fullName: )
  - name: ', '
    fullName: ', '
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - name: TSource
    fullName: TSource
  - name: )
    fullName: )
  - name: ', '
    fullName: ', '
  - uid: System.Collections.Generic.IEqualityComparer`1
    name: IEqualityComparer
    fullName: System.Collections.Generic.IEqualityComparer
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - name: TSource
    fullName: TSource
  - name: )
    fullName: )
  - name: )
    fullName: )
  nameWithType: Enumerable.Except<TSource>(IEnumerable<TSource>, IEnumerable<TSource>, IEqualityComparer<TSource>)
  nameWithType.vb: Enumerable.Except(Of TSource)(IEnumerable(Of TSource), IEnumerable(Of TSource), IEqualityComparer(Of TSource))
  commentId: M:System.Linq.Enumerable.Except``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEqualityComparer{``0})
- uid: System.Linq.Enumerable.First``1(System.Collections.Generic.IEnumerable{``0})
  isExternal: true
  name: First<TSource>(IEnumerable<TSource>)
  fullName: System.Linq.Enumerable.First<TSource>(System.Collections.Generic.IEnumerable<TSource>)
  fullname.vb: System.Linq.Enumerable.First(Of TSource)(System.Collections.Generic.IEnumerable(Of TSource))
  name.vb: First(Of TSource)(IEnumerable(Of TSource))
  spec.csharp:
  - uid: System.Linq.Enumerable.First``1(System.Collections.Generic.IEnumerable{``0})
    name: First<TSource>
    fullName: System.Linq.Enumerable.First<TSource>
  - name: (
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    fullName: <
  - name: TSource
    fullName: TSource
  - name: '>'
    fullName: '>'
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Linq.Enumerable.First``1(System.Collections.Generic.IEnumerable{``0})
    name: First(Of TSource)
    fullName: System.Linq.Enumerable.First(Of TSource)
  - name: (
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - name: TSource
    fullName: TSource
  - name: )
    fullName: )
  - name: )
    fullName: )
  nameWithType: Enumerable.First<TSource>(IEnumerable<TSource>)
  nameWithType.vb: Enumerable.First(Of TSource)(IEnumerable(Of TSource))
  commentId: M:System.Linq.Enumerable.First``1(System.Collections.Generic.IEnumerable{``0})
- uid: System.Linq.Enumerable.First``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})
  isExternal: true
  name: First<TSource>(IEnumerable<TSource>, Func<TSource, Boolean>)
  fullName: System.Linq.Enumerable.First<TSource>(System.Collections.Generic.IEnumerable<TSource>, System.Func<TSource, System.Boolean>)
  fullname.vb: System.Linq.Enumerable.First(Of TSource)(System.Collections.Generic.IEnumerable(Of TSource), System.Func(Of TSource, System.Boolean))
  name.vb: First(Of TSource)(IEnumerable(Of TSource), Func(Of TSource, Boolean))
  spec.csharp:
  - uid: System.Linq.Enumerable.First``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})
    name: First<TSource>
    fullName: System.Linq.Enumerable.First<TSource>
  - name: (
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    fullName: <
  - name: TSource
    fullName: TSource
  - name: '>'
    fullName: '>'
  - name: ', '
    fullName: ', '
  - uid: System.Func`2
    name: Func
    fullName: System.Func
    isExternal: true
  - name: <
    fullName: <
  - name: TSource
    fullName: TSource
  - name: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: '>'
    fullName: '>'
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Linq.Enumerable.First``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})
    name: First(Of TSource)
    fullName: System.Linq.Enumerable.First(Of TSource)
  - name: (
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - name: TSource
    fullName: TSource
  - name: )
    fullName: )
  - name: ', '
    fullName: ', '
  - uid: System.Func`2
    name: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - name: TSource
    fullName: TSource
  - name: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    fullName: )
  - name: )
    fullName: )
  nameWithType: Enumerable.First<TSource>(IEnumerable<TSource>, Func<TSource, Boolean>)
  nameWithType.vb: Enumerable.First(Of TSource)(IEnumerable(Of TSource), Func(Of TSource, Boolean))
  commentId: M:System.Linq.Enumerable.First``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})
- uid: System.Linq.Enumerable.FirstOrDefault``1(System.Collections.Generic.IEnumerable{``0})
  isExternal: true
  name: FirstOrDefault<TSource>(IEnumerable<TSource>)
  fullName: System.Linq.Enumerable.FirstOrDefault<TSource>(System.Collections.Generic.IEnumerable<TSource>)
  fullname.vb: System.Linq.Enumerable.FirstOrDefault(Of TSource)(System.Collections.Generic.IEnumerable(Of TSource))
  name.vb: FirstOrDefault(Of TSource)(IEnumerable(Of TSource))
  spec.csharp:
  - uid: System.Linq.Enumerable.FirstOrDefault``1(System.Collections.Generic.IEnumerable{``0})
    name: FirstOrDefault<TSource>
    fullName: System.Linq.Enumerable.FirstOrDefault<TSource>
  - name: (
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    fullName: <
  - name: TSource
    fullName: TSource
  - name: '>'
    fullName: '>'
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Linq.Enumerable.FirstOrDefault``1(System.Collections.Generic.IEnumerable{``0})
    name: FirstOrDefault(Of TSource)
    fullName: System.Linq.Enumerable.FirstOrDefault(Of TSource)
  - name: (
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - name: TSource
    fullName: TSource
  - name: )
    fullName: )
  - name: )
    fullName: )
  nameWithType: Enumerable.FirstOrDefault<TSource>(IEnumerable<TSource>)
  nameWithType.vb: Enumerable.FirstOrDefault(Of TSource)(IEnumerable(Of TSource))
  commentId: M:System.Linq.Enumerable.FirstOrDefault``1(System.Collections.Generic.IEnumerable{``0})
- uid: System.Linq.Enumerable.FirstOrDefault``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})
  isExternal: true
  name: FirstOrDefault<TSource>(IEnumerable<TSource>, Func<TSource, Boolean>)
  fullName: System.Linq.Enumerable.FirstOrDefault<TSource>(System.Collections.Generic.IEnumerable<TSource>, System.Func<TSource, System.Boolean>)
  fullname.vb: System.Linq.Enumerable.FirstOrDefault(Of TSource)(System.Collections.Generic.IEnumerable(Of TSource), System.Func(Of TSource, System.Boolean))
  name.vb: FirstOrDefault(Of TSource)(IEnumerable(Of TSource), Func(Of TSource, Boolean))
  spec.csharp:
  - uid: System.Linq.Enumerable.FirstOrDefault``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})
    name: FirstOrDefault<TSource>
    fullName: System.Linq.Enumerable.FirstOrDefault<TSource>
  - name: (
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    fullName: <
  - name: TSource
    fullName: TSource
  - name: '>'
    fullName: '>'
  - name: ', '
    fullName: ', '
  - uid: System.Func`2
    name: Func
    fullName: System.Func
    isExternal: true
  - name: <
    fullName: <
  - name: TSource
    fullName: TSource
  - name: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: '>'
    fullName: '>'
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Linq.Enumerable.FirstOrDefault``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})
    name: FirstOrDefault(Of TSource)
    fullName: System.Linq.Enumerable.FirstOrDefault(Of TSource)
  - name: (
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - name: TSource
    fullName: TSource
  - name: )
    fullName: )
  - name: ', '
    fullName: ', '
  - uid: System.Func`2
    name: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - name: TSource
    fullName: TSource
  - name: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    fullName: )
  - name: )
    fullName: )
  nameWithType: Enumerable.FirstOrDefault<TSource>(IEnumerable<TSource>, Func<TSource, Boolean>)
  nameWithType.vb: Enumerable.FirstOrDefault(Of TSource)(IEnumerable(Of TSource), Func(Of TSource, Boolean))
  commentId: M:System.Linq.Enumerable.FirstOrDefault``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})
- uid: System.Linq.Enumerable.GroupBy``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})
  isExternal: true
  name: GroupBy<TSource, TKey>(IEnumerable<TSource>, Func<TSource, TKey>)
  fullName: System.Linq.Enumerable.GroupBy<TSource, TKey>(System.Collections.Generic.IEnumerable<TSource>, System.Func<TSource, TKey>)
  fullname.vb: System.Linq.Enumerable.GroupBy(Of TSource, TKey)(System.Collections.Generic.IEnumerable(Of TSource), System.Func(Of TSource, TKey))
  name.vb: GroupBy(Of TSource, TKey)(IEnumerable(Of TSource), Func(Of TSource, TKey))
  spec.csharp:
  - uid: System.Linq.Enumerable.GroupBy``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})
    name: GroupBy<TSource, TKey>
    fullName: System.Linq.Enumerable.GroupBy<TSource, TKey>
  - name: (
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    fullName: <
  - name: TSource
    fullName: TSource
  - name: '>'
    fullName: '>'
  - name: ', '
    fullName: ', '
  - uid: System.Func`2
    name: Func
    fullName: System.Func
    isExternal: true
  - name: <
    fullName: <
  - name: TSource
    fullName: TSource
  - name: ', '
    fullName: ', '
  - name: TKey
    fullName: TKey
  - name: '>'
    fullName: '>'
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Linq.Enumerable.GroupBy``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})
    name: GroupBy(Of TSource, TKey)
    fullName: System.Linq.Enumerable.GroupBy(Of TSource, TKey)
  - name: (
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - name: TSource
    fullName: TSource
  - name: )
    fullName: )
  - name: ', '
    fullName: ', '
  - uid: System.Func`2
    name: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - name: TSource
    fullName: TSource
  - name: ', '
    fullName: ', '
  - name: TKey
    fullName: TKey
  - name: )
    fullName: )
  - name: )
    fullName: )
  nameWithType: Enumerable.GroupBy<TSource, TKey>(IEnumerable<TSource>, Func<TSource, TKey>)
  nameWithType.vb: Enumerable.GroupBy(Of TSource, TKey)(IEnumerable(Of TSource), Func(Of TSource, TKey))
  commentId: M:System.Linq.Enumerable.GroupBy``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})
- uid: System.Linq.Enumerable.GroupBy``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IEqualityComparer{``1})
  isExternal: true
  name: GroupBy<TSource, TKey>(IEnumerable<TSource>, Func<TSource, TKey>, IEqualityComparer<TKey>)
  fullName: System.Linq.Enumerable.GroupBy<TSource, TKey>(System.Collections.Generic.IEnumerable<TSource>, System.Func<TSource, TKey>, System.Collections.Generic.IEqualityComparer<TKey>)
  fullname.vb: System.Linq.Enumerable.GroupBy(Of TSource, TKey)(System.Collections.Generic.IEnumerable(Of TSource), System.Func(Of TSource, TKey), System.Collections.Generic.IEqualityComparer(Of TKey))
  name.vb: GroupBy(Of TSource, TKey)(IEnumerable(Of TSource), Func(Of TSource, TKey), IEqualityComparer(Of TKey))
  spec.csharp:
  - uid: System.Linq.Enumerable.GroupBy``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IEqualityComparer{``1})
    name: GroupBy<TSource, TKey>
    fullName: System.Linq.Enumerable.GroupBy<TSource, TKey>
  - name: (
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    fullName: <
  - name: TSource
    fullName: TSource
  - name: '>'
    fullName: '>'
  - name: ', '
    fullName: ', '
  - uid: System.Func`2
    name: Func
    fullName: System.Func
    isExternal: true
  - name: <
    fullName: <
  - name: TSource
    fullName: TSource
  - name: ', '
    fullName: ', '
  - name: TKey
    fullName: TKey
  - name: '>'
    fullName: '>'
  - name: ', '
    fullName: ', '
  - uid: System.Collections.Generic.IEqualityComparer`1
    name: IEqualityComparer
    fullName: System.Collections.Generic.IEqualityComparer
    isExternal: true
  - name: <
    fullName: <
  - name: TKey
    fullName: TKey
  - name: '>'
    fullName: '>'
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Linq.Enumerable.GroupBy``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IEqualityComparer{``1})
    name: GroupBy(Of TSource, TKey)
    fullName: System.Linq.Enumerable.GroupBy(Of TSource, TKey)
  - name: (
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - name: TSource
    fullName: TSource
  - name: )
    fullName: )
  - name: ', '
    fullName: ', '
  - uid: System.Func`2
    name: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - name: TSource
    fullName: TSource
  - name: ', '
    fullName: ', '
  - name: TKey
    fullName: TKey
  - name: )
    fullName: )
  - name: ', '
    fullName: ', '
  - uid: System.Collections.Generic.IEqualityComparer`1
    name: IEqualityComparer
    fullName: System.Collections.Generic.IEqualityComparer
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - name: TKey
    fullName: TKey
  - name: )
    fullName: )
  - name: )
    fullName: )
  nameWithType: Enumerable.GroupBy<TSource, TKey>(IEnumerable<TSource>, Func<TSource, TKey>, IEqualityComparer<TKey>)
  nameWithType.vb: Enumerable.GroupBy(Of TSource, TKey)(IEnumerable(Of TSource), Func(Of TSource, TKey), IEqualityComparer(Of TKey))
  commentId: M:System.Linq.Enumerable.GroupBy``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IEqualityComparer{``1})
- uid: System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2})
  isExternal: true
  name: GroupBy<TSource, TKey, TElement>(IEnumerable<TSource>, Func<TSource, TKey>, Func<TSource, TElement>)
  fullName: System.Linq.Enumerable.GroupBy<TSource, TKey, TElement>(System.Collections.Generic.IEnumerable<TSource>, System.Func<TSource, TKey>, System.Func<TSource, TElement>)
  fullname.vb: System.Linq.Enumerable.GroupBy(Of TSource, TKey, TElement)(System.Collections.Generic.IEnumerable(Of TSource), System.Func(Of TSource, TKey), System.Func(Of TSource, TElement))
  name.vb: GroupBy(Of TSource, TKey, TElement)(IEnumerable(Of TSource), Func(Of TSource, TKey), Func(Of TSource, TElement))
  spec.csharp:
  - uid: System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2})
    name: GroupBy<TSource, TKey, TElement>
    fullName: System.Linq.Enumerable.GroupBy<TSource, TKey, TElement>
  - name: (
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    fullName: <
  - name: TSource
    fullName: TSource
  - name: '>'
    fullName: '>'
  - name: ', '
    fullName: ', '
  - uid: System.Func`2
    name: Func
    fullName: System.Func
    isExternal: true
  - name: <
    fullName: <
  - name: TSource
    fullName: TSource
  - name: ', '
    fullName: ', '
  - name: TKey
    fullName: TKey
  - name: '>'
    fullName: '>'
  - name: ', '
    fullName: ', '
  - uid: System.Func`2
    name: Func
    fullName: System.Func
    isExternal: true
  - name: <
    fullName: <
  - name: TSource
    fullName: TSource
  - name: ', '
    fullName: ', '
  - name: TElement
    fullName: TElement
  - name: '>'
    fullName: '>'
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2})
    name: GroupBy(Of TSource, TKey, TElement)
    fullName: System.Linq.Enumerable.GroupBy(Of TSource, TKey, TElement)
  - name: (
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - name: TSource
    fullName: TSource
  - name: )
    fullName: )
  - name: ', '
    fullName: ', '
  - uid: System.Func`2
    name: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - name: TSource
    fullName: TSource
  - name: ', '
    fullName: ', '
  - name: TKey
    fullName: TKey
  - name: )
    fullName: )
  - name: ', '
    fullName: ', '
  - uid: System.Func`2
    name: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - name: TSource
    fullName: TSource
  - name: ', '
    fullName: ', '
  - name: TElement
    fullName: TElement
  - name: )
    fullName: )
  - name: )
    fullName: )
  nameWithType: Enumerable.GroupBy<TSource, TKey, TElement>(IEnumerable<TSource>, Func<TSource, TKey>, Func<TSource, TElement>)
  nameWithType.vb: Enumerable.GroupBy(Of TSource, TKey, TElement)(IEnumerable(Of TSource), Func(Of TSource, TKey), Func(Of TSource, TElement))
  commentId: M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2})
- uid: System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})
  isExternal: true
  name: GroupBy<TSource, TKey, TElement>(IEnumerable<TSource>, Func<TSource, TKey>, Func<TSource, TElement>, IEqualityComparer<TKey>)
  fullName: System.Linq.Enumerable.GroupBy<TSource, TKey, TElement>(System.Collections.Generic.IEnumerable<TSource>, System.Func<TSource, TKey>, System.Func<TSource, TElement>, System.Collections.Generic.IEqualityComparer<TKey>)
  fullname.vb: System.Linq.Enumerable.GroupBy(Of TSource, TKey, TElement)(System.Collections.Generic.IEnumerable(Of TSource), System.Func(Of TSource, TKey), System.Func(Of TSource, TElement), System.Collections.Generic.IEqualityComparer(Of TKey))
  name.vb: GroupBy(Of TSource, TKey, TElement)(IEnumerable(Of TSource), Func(Of TSource, TKey), Func(Of TSource, TElement), IEqualityComparer(Of TKey))
  spec.csharp:
  - uid: System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})
    name: GroupBy<TSource, TKey, TElement>
    fullName: System.Linq.Enumerable.GroupBy<TSource, TKey, TElement>
  - name: (
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    fullName: <
  - name: TSource
    fullName: TSource
  - name: '>'
    fullName: '>'
  - name: ', '
    fullName: ', '
  - uid: System.Func`2
    name: Func
    fullName: System.Func
    isExternal: true
  - name: <
    fullName: <
  - name: TSource
    fullName: TSource
  - name: ', '
    fullName: ', '
  - name: TKey
    fullName: TKey
  - name: '>'
    fullName: '>'
  - name: ', '
    fullName: ', '
  - uid: System.Func`2
    name: Func
    fullName: System.Func
    isExternal: true
  - name: <
    fullName: <
  - name: TSource
    fullName: TSource
  - name: ', '
    fullName: ', '
  - name: TElement
    fullName: TElement
  - name: '>'
    fullName: '>'
  - name: ', '
    fullName: ', '
  - uid: System.Collections.Generic.IEqualityComparer`1
    name: IEqualityComparer
    fullName: System.Collections.Generic.IEqualityComparer
    isExternal: true
  - name: <
    fullName: <
  - name: TKey
    fullName: TKey
  - name: '>'
    fullName: '>'
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})
    name: GroupBy(Of TSource, TKey, TElement)
    fullName: System.Linq.Enumerable.GroupBy(Of TSource, TKey, TElement)
  - name: (
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - name: TSource
    fullName: TSource
  - name: )
    fullName: )
  - name: ', '
    fullName: ', '
  - uid: System.Func`2
    name: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - name: TSource
    fullName: TSource
  - name: ', '
    fullName: ', '
  - name: TKey
    fullName: TKey
  - name: )
    fullName: )
  - name: ', '
    fullName: ', '
  - uid: System.Func`2
    name: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - name: TSource
    fullName: TSource
  - name: ', '
    fullName: ', '
  - name: TElement
    fullName: TElement
  - name: )
    fullName: )
  - name: ', '
    fullName: ', '
  - uid: System.Collections.Generic.IEqualityComparer`1
    name: IEqualityComparer
    fullName: System.Collections.Generic.IEqualityComparer
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - name: TKey
    fullName: TKey
  - name: )
    fullName: )
  - name: )
    fullName: )
  nameWithType: Enumerable.GroupBy<TSource, TKey, TElement>(IEnumerable<TSource>, Func<TSource, TKey>, Func<TSource, TElement>, IEqualityComparer<TKey>)
  nameWithType.vb: Enumerable.GroupBy(Of TSource, TKey, TElement)(IEnumerable(Of TSource), Func(Of TSource, TKey), Func(Of TSource, TElement), IEqualityComparer(Of TKey))
  commentId: M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})
- uid: System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``1,System.Collections.Generic.IEnumerable{``0},``2})
  isExternal: true
  name: GroupBy<TSource, TKey, TResult>(IEnumerable<TSource>, Func<TSource, TKey>, Func<TKey, IEnumerable<TSource>, TResult>)
  fullName: System.Linq.Enumerable.GroupBy<TSource, TKey, TResult>(System.Collections.Generic.IEnumerable<TSource>, System.Func<TSource, TKey>, System.Func<TKey, System.Collections.Generic.IEnumerable<TSource>, TResult>)
  fullname.vb: System.Linq.Enumerable.GroupBy(Of TSource, TKey, TResult)(System.Collections.Generic.IEnumerable(Of TSource), System.Func(Of TSource, TKey), System.Func(Of TKey, System.Collections.Generic.IEnumerable(Of TSource), TResult))
  name.vb: GroupBy(Of TSource, TKey, TResult)(IEnumerable(Of TSource), Func(Of TSource, TKey), Func(Of TKey, IEnumerable(Of TSource), TResult))
  spec.csharp:
  - uid: System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``1,System.Collections.Generic.IEnumerable{``0},``2})
    name: GroupBy<TSource, TKey, TResult>
    fullName: System.Linq.Enumerable.GroupBy<TSource, TKey, TResult>
  - name: (
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    fullName: <
  - name: TSource
    fullName: TSource
  - name: '>'
    fullName: '>'
  - name: ', '
    fullName: ', '
  - uid: System.Func`2
    name: Func
    fullName: System.Func
    isExternal: true
  - name: <
    fullName: <
  - name: TSource
    fullName: TSource
  - name: ', '
    fullName: ', '
  - name: TKey
    fullName: TKey
  - name: '>'
    fullName: '>'
  - name: ', '
    fullName: ', '
  - uid: System.Func`3
    name: Func
    fullName: System.Func
    isExternal: true
  - name: <
    fullName: <
  - name: TKey
    fullName: TKey
  - name: ', '
    fullName: ', '
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    fullName: <
  - name: TSource
    fullName: TSource
  - name: '>'
    fullName: '>'
  - name: ', '
    fullName: ', '
  - name: TResult
    fullName: TResult
  - name: '>'
    fullName: '>'
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``1,System.Collections.Generic.IEnumerable{``0},``2})
    name: GroupBy(Of TSource, TKey, TResult)
    fullName: System.Linq.Enumerable.GroupBy(Of TSource, TKey, TResult)
  - name: (
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - name: TSource
    fullName: TSource
  - name: )
    fullName: )
  - name: ', '
    fullName: ', '
  - uid: System.Func`2
    name: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - name: TSource
    fullName: TSource
  - name: ', '
    fullName: ', '
  - name: TKey
    fullName: TKey
  - name: )
    fullName: )
  - name: ', '
    fullName: ', '
  - uid: System.Func`3
    name: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - name: TKey
    fullName: TKey
  - name: ', '
    fullName: ', '
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - name: TSource
    fullName: TSource
  - name: )
    fullName: )
  - name: ', '
    fullName: ', '
  - name: TResult
    fullName: TResult
  - name: )
    fullName: )
  - name: )
    fullName: )
  nameWithType: Enumerable.GroupBy<TSource, TKey, TResult>(IEnumerable<TSource>, Func<TSource, TKey>, Func<TKey, IEnumerable<TSource>, TResult>)
  nameWithType.vb: Enumerable.GroupBy(Of TSource, TKey, TResult)(IEnumerable(Of TSource), Func(Of TSource, TKey), Func(Of TKey, IEnumerable(Of TSource), TResult))
  commentId: M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``1,System.Collections.Generic.IEnumerable{``0},``2})
- uid: System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``1,System.Collections.Generic.IEnumerable{``0},``2},System.Collections.Generic.IEqualityComparer{``1})
  isExternal: true
  name: GroupBy<TSource, TKey, TResult>(IEnumerable<TSource>, Func<TSource, TKey>, Func<TKey, IEnumerable<TSource>, TResult>, IEqualityComparer<TKey>)
  fullName: System.Linq.Enumerable.GroupBy<TSource, TKey, TResult>(System.Collections.Generic.IEnumerable<TSource>, System.Func<TSource, TKey>, System.Func<TKey, System.Collections.Generic.IEnumerable<TSource>, TResult>, System.Collections.Generic.IEqualityComparer<TKey>)
  fullname.vb: System.Linq.Enumerable.GroupBy(Of TSource, TKey, TResult)(System.Collections.Generic.IEnumerable(Of TSource), System.Func(Of TSource, TKey), System.Func(Of TKey, System.Collections.Generic.IEnumerable(Of TSource), TResult), System.Collections.Generic.IEqualityComparer(Of TKey))
  name.vb: GroupBy(Of TSource, TKey, TResult)(IEnumerable(Of TSource), Func(Of TSource, TKey), Func(Of TKey, IEnumerable(Of TSource), TResult), IEqualityComparer(Of TKey))
  spec.csharp:
  - uid: System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``1,System.Collections.Generic.IEnumerable{``0},``2},System.Collections.Generic.IEqualityComparer{``1})
    name: GroupBy<TSource, TKey, TResult>
    fullName: System.Linq.Enumerable.GroupBy<TSource, TKey, TResult>
  - name: (
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    fullName: <
  - name: TSource
    fullName: TSource
  - name: '>'
    fullName: '>'
  - name: ', '
    fullName: ', '
  - uid: System.Func`2
    name: Func
    fullName: System.Func
    isExternal: true
  - name: <
    fullName: <
  - name: TSource
    fullName: TSource
  - name: ', '
    fullName: ', '
  - name: TKey
    fullName: TKey
  - name: '>'
    fullName: '>'
  - name: ', '
    fullName: ', '
  - uid: System.Func`3
    name: Func
    fullName: System.Func
    isExternal: true
  - name: <
    fullName: <
  - name: TKey
    fullName: TKey
  - name: ', '
    fullName: ', '
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    fullName: <
  - name: TSource
    fullName: TSource
  - name: '>'
    fullName: '>'
  - name: ', '
    fullName: ', '
  - name: TResult
    fullName: TResult
  - name: '>'
    fullName: '>'
  - name: ', '
    fullName: ', '
  - uid: System.Collections.Generic.IEqualityComparer`1
    name: IEqualityComparer
    fullName: System.Collections.Generic.IEqualityComparer
    isExternal: true
  - name: <
    fullName: <
  - name: TKey
    fullName: TKey
  - name: '>'
    fullName: '>'
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``1,System.Collections.Generic.IEnumerable{``0},``2},System.Collections.Generic.IEqualityComparer{``1})
    name: GroupBy(Of TSource, TKey, TResult)
    fullName: System.Linq.Enumerable.GroupBy(Of TSource, TKey, TResult)
  - name: (
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - name: TSource
    fullName: TSource
  - name: )
    fullName: )
  - name: ', '
    fullName: ', '
  - uid: System.Func`2
    name: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - name: TSource
    fullName: TSource
  - name: ', '
    fullName: ', '
  - name: TKey
    fullName: TKey
  - name: )
    fullName: )
  - name: ', '
    fullName: ', '
  - uid: System.Func`3
    name: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - name: TKey
    fullName: TKey
  - name: ', '
    fullName: ', '
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - name: TSource
    fullName: TSource
  - name: )
    fullName: )
  - name: ', '
    fullName: ', '
  - name: TResult
    fullName: TResult
  - name: )
    fullName: )
  - name: ', '
    fullName: ', '
  - uid: System.Collections.Generic.IEqualityComparer`1
    name: IEqualityComparer
    fullName: System.Collections.Generic.IEqualityComparer
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - name: TKey
    fullName: TKey
  - name: )
    fullName: )
  - name: )
    fullName: )
  nameWithType: Enumerable.GroupBy<TSource, TKey, TResult>(IEnumerable<TSource>, Func<TSource, TKey>, Func<TKey, IEnumerable<TSource>, TResult>, IEqualityComparer<TKey>)
  nameWithType.vb: Enumerable.GroupBy(Of TSource, TKey, TResult)(IEnumerable(Of TSource), Func(Of TSource, TKey), Func(Of TKey, IEnumerable(Of TSource), TResult), IEqualityComparer(Of TKey))
  commentId: M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``1,System.Collections.Generic.IEnumerable{``0},``2},System.Collections.Generic.IEqualityComparer{``1})
- uid: System.Linq.Enumerable.GroupBy``4(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Func{``1,System.Collections.Generic.IEnumerable{``2},``3})
  isExternal: true
  name: GroupBy<TSource, TKey, TElement, TResult>(IEnumerable<TSource>, Func<TSource, TKey>, Func<TSource, TElement>, Func<TKey, IEnumerable<TElement>, TResult>)
  fullName: System.Linq.Enumerable.GroupBy<TSource, TKey, TElement, TResult>(System.Collections.Generic.IEnumerable<TSource>, System.Func<TSource, TKey>, System.Func<TSource, TElement>, System.Func<TKey, System.Collections.Generic.IEnumerable<TElement>, TResult>)
  fullname.vb: System.Linq.Enumerable.GroupBy(Of TSource, TKey, TElement, TResult)(System.Collections.Generic.IEnumerable(Of TSource), System.Func(Of TSource, TKey), System.Func(Of TSource, TElement), System.Func(Of TKey, System.Collections.Generic.IEnumerable(Of TElement), TResult))
  name.vb: GroupBy(Of TSource, TKey, TElement, TResult)(IEnumerable(Of TSource), Func(Of TSource, TKey), Func(Of TSource, TElement), Func(Of TKey, IEnumerable(Of TElement), TResult))
  spec.csharp:
  - uid: System.Linq.Enumerable.GroupBy``4(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Func{``1,System.Collections.Generic.IEnumerable{``2},``3})
    name: GroupBy<TSource, TKey, TElement, TResult>
    fullName: System.Linq.Enumerable.GroupBy<TSource, TKey, TElement, TResult>
  - name: (
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    fullName: <
  - name: TSource
    fullName: TSource
  - name: '>'
    fullName: '>'
  - name: ', '
    fullName: ', '
  - uid: System.Func`2
    name: Func
    fullName: System.Func
    isExternal: true
  - name: <
    fullName: <
  - name: TSource
    fullName: TSource
  - name: ', '
    fullName: ', '
  - name: TKey
    fullName: TKey
  - name: '>'
    fullName: '>'
  - name: ', '
    fullName: ', '
  - uid: System.Func`2
    name: Func
    fullName: System.Func
    isExternal: true
  - name: <
    fullName: <
  - name: TSource
    fullName: TSource
  - name: ', '
    fullName: ', '
  - name: TElement
    fullName: TElement
  - name: '>'
    fullName: '>'
  - name: ', '
    fullName: ', '
  - uid: System.Func`3
    name: Func
    fullName: System.Func
    isExternal: true
  - name: <
    fullName: <
  - name: TKey
    fullName: TKey
  - name: ', '
    fullName: ', '
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    fullName: <
  - name: TElement
    fullName: TElement
  - name: '>'
    fullName: '>'
  - name: ', '
    fullName: ', '
  - name: TResult
    fullName: TResult
  - name: '>'
    fullName: '>'
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Linq.Enumerable.GroupBy``4(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Func{``1,System.Collections.Generic.IEnumerable{``2},``3})
    name: GroupBy(Of TSource, TKey, TElement, TResult)
    fullName: System.Linq.Enumerable.GroupBy(Of TSource, TKey, TElement, TResult)
  - name: (
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - name: TSource
    fullName: TSource
  - name: )
    fullName: )
  - name: ', '
    fullName: ', '
  - uid: System.Func`2
    name: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - name: TSource
    fullName: TSource
  - name: ', '
    fullName: ', '
  - name: TKey
    fullName: TKey
  - name: )
    fullName: )
  - name: ', '
    fullName: ', '
  - uid: System.Func`2
    name: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - name: TSource
    fullName: TSource
  - name: ', '
    fullName: ', '
  - name: TElement
    fullName: TElement
  - name: )
    fullName: )
  - name: ', '
    fullName: ', '
  - uid: System.Func`3
    name: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - name: TKey
    fullName: TKey
  - name: ', '
    fullName: ', '
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - name: TElement
    fullName: TElement
  - name: )
    fullName: )
  - name: ', '
    fullName: ', '
  - name: TResult
    fullName: TResult
  - name: )
    fullName: )
  - name: )
    fullName: )
  nameWithType: Enumerable.GroupBy<TSource, TKey, TElement, TResult>(IEnumerable<TSource>, Func<TSource, TKey>, Func<TSource, TElement>, Func<TKey, IEnumerable<TElement>, TResult>)
  nameWithType.vb: Enumerable.GroupBy(Of TSource, TKey, TElement, TResult)(IEnumerable(Of TSource), Func(Of TSource, TKey), Func(Of TSource, TElement), Func(Of TKey, IEnumerable(Of TElement), TResult))
  commentId: M:System.Linq.Enumerable.GroupBy``4(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Func{``1,System.Collections.Generic.IEnumerable{``2},``3})
- uid: System.Linq.Enumerable.GroupBy``4(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Func{``1,System.Collections.Generic.IEnumerable{``2},``3},System.Collections.Generic.IEqualityComparer{``1})
  isExternal: true
  name: GroupBy<TSource, TKey, TElement, TResult>(IEnumerable<TSource>, Func<TSource, TKey>, Func<TSource, TElement>, Func<TKey, IEnumerable<TElement>, TResult>, IEqualityComparer<TKey>)
  fullName: System.Linq.Enumerable.GroupBy<TSource, TKey, TElement, TResult>(System.Collections.Generic.IEnumerable<TSource>, System.Func<TSource, TKey>, System.Func<TSource, TElement>, System.Func<TKey, System.Collections.Generic.IEnumerable<TElement>, TResult>, System.Collections.Generic.IEqualityComparer<TKey>)
  fullname.vb: System.Linq.Enumerable.GroupBy(Of TSource, TKey, TElement, TResult)(System.Collections.Generic.IEnumerable(Of TSource), System.Func(Of TSource, TKey), System.Func(Of TSource, TElement), System.Func(Of TKey, System.Collections.Generic.IEnumerable(Of TElement), TResult), System.Collections.Generic.IEqualityComparer(Of TKey))
  name.vb: GroupBy(Of TSource, TKey, TElement, TResult)(IEnumerable(Of TSource), Func(Of TSource, TKey), Func(Of TSource, TElement), Func(Of TKey, IEnumerable(Of TElement), TResult), IEqualityComparer(Of TKey))
  spec.csharp:
  - uid: System.Linq.Enumerable.GroupBy``4(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Func{``1,System.Collections.Generic.IEnumerable{``2},``3},System.Collections.Generic.IEqualityComparer{``1})
    name: GroupBy<TSource, TKey, TElement, TResult>
    fullName: System.Linq.Enumerable.GroupBy<TSource, TKey, TElement, TResult>
  - name: (
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    fullName: <
  - name: TSource
    fullName: TSource
  - name: '>'
    fullName: '>'
  - name: ', '
    fullName: ', '
  - uid: System.Func`2
    name: Func
    fullName: System.Func
    isExternal: true
  - name: <
    fullName: <
  - name: TSource
    fullName: TSource
  - name: ', '
    fullName: ', '
  - name: TKey
    fullName: TKey
  - name: '>'
    fullName: '>'
  - name: ', '
    fullName: ', '
  - uid: System.Func`2
    name: Func
    fullName: System.Func
    isExternal: true
  - name: <
    fullName: <
  - name: TSource
    fullName: TSource
  - name: ', '
    fullName: ', '
  - name: TElement
    fullName: TElement
  - name: '>'
    fullName: '>'
  - name: ', '
    fullName: ', '
  - uid: System.Func`3
    name: Func
    fullName: System.Func
    isExternal: true
  - name: <
    fullName: <
  - name: TKey
    fullName: TKey
  - name: ', '
    fullName: ', '
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    fullName: <
  - name: TElement
    fullName: TElement
  - name: '>'
    fullName: '>'
  - name: ', '
    fullName: ', '
  - name: TResult
    fullName: TResult
  - name: '>'
    fullName: '>'
  - name: ', '
    fullName: ', '
  - uid: System.Collections.Generic.IEqualityComparer`1
    name: IEqualityComparer
    fullName: System.Collections.Generic.IEqualityComparer
    isExternal: true
  - name: <
    fullName: <
  - name: TKey
    fullName: TKey
  - name: '>'
    fullName: '>'
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Linq.Enumerable.GroupBy``4(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Func{``1,System.Collections.Generic.IEnumerable{``2},``3},System.Collections.Generic.IEqualityComparer{``1})
    name: GroupBy(Of TSource, TKey, TElement, TResult)
    fullName: System.Linq.Enumerable.GroupBy(Of TSource, TKey, TElement, TResult)
  - name: (
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - name: TSource
    fullName: TSource
  - name: )
    fullName: )
  - name: ', '
    fullName: ', '
  - uid: System.Func`2
    name: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - name: TSource
    fullName: TSource
  - name: ', '
    fullName: ', '
  - name: TKey
    fullName: TKey
  - name: )
    fullName: )
  - name: ', '
    fullName: ', '
  - uid: System.Func`2
    name: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - name: TSource
    fullName: TSource
  - name: ', '
    fullName: ', '
  - name: TElement
    fullName: TElement
  - name: )
    fullName: )
  - name: ', '
    fullName: ', '
  - uid: System.Func`3
    name: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - name: TKey
    fullName: TKey
  - name: ', '
    fullName: ', '
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - name: TElement
    fullName: TElement
  - name: )
    fullName: )
  - name: ', '
    fullName: ', '
  - name: TResult
    fullName: TResult
  - name: )
    fullName: )
  - name: ', '
    fullName: ', '
  - uid: System.Collections.Generic.IEqualityComparer`1
    name: IEqualityComparer
    fullName: System.Collections.Generic.IEqualityComparer
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - name: TKey
    fullName: TKey
  - name: )
    fullName: )
  - name: )
    fullName: )
  nameWithType: Enumerable.GroupBy<TSource, TKey, TElement, TResult>(IEnumerable<TSource>, Func<TSource, TKey>, Func<TSource, TElement>, Func<TKey, IEnumerable<TElement>, TResult>, IEqualityComparer<TKey>)
  nameWithType.vb: Enumerable.GroupBy(Of TSource, TKey, TElement, TResult)(IEnumerable(Of TSource), Func(Of TSource, TKey), Func(Of TSource, TElement), Func(Of TKey, IEnumerable(Of TElement), TResult), IEqualityComparer(Of TKey))
  commentId: M:System.Linq.Enumerable.GroupBy``4(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Func{``1,System.Collections.Generic.IEnumerable{``2},``3},System.Collections.Generic.IEqualityComparer{``1})
- uid: System.Linq.Enumerable.GroupJoin``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3})
  isExternal: true
  name: GroupJoin<TOuter, TInner, TKey, TResult>(IEnumerable<TOuter>, IEnumerable<TInner>, Func<TOuter, TKey>, Func<TInner, TKey>, Func<TOuter, IEnumerable<TInner>, TResult>)
  fullName: System.Linq.Enumerable.GroupJoin<TOuter, TInner, TKey, TResult>(System.Collections.Generic.IEnumerable<TOuter>, System.Collections.Generic.IEnumerable<TInner>, System.Func<TOuter, TKey>, System.Func<TInner, TKey>, System.Func<TOuter, System.Collections.Generic.IEnumerable<TInner>, TResult>)
  fullname.vb: System.Linq.Enumerable.GroupJoin(Of TOuter, TInner, TKey, TResult)(System.Collections.Generic.IEnumerable(Of TOuter), System.Collections.Generic.IEnumerable(Of TInner), System.Func(Of TOuter, TKey), System.Func(Of TInner, TKey), System.Func(Of TOuter, System.Collections.Generic.IEnumerable(Of TInner), TResult))
  name.vb: GroupJoin(Of TOuter, TInner, TKey, TResult)(IEnumerable(Of TOuter), IEnumerable(Of TInner), Func(Of TOuter, TKey), Func(Of TInner, TKey), Func(Of TOuter, IEnumerable(Of TInner), TResult))
  spec.csharp:
  - uid: System.Linq.Enumerable.GroupJoin``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3})
    name: GroupJoin<TOuter, TInner, TKey, TResult>
    fullName: System.Linq.Enumerable.GroupJoin<TOuter, TInner, TKey, TResult>
  - name: (
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    fullName: <
  - name: TOuter
    fullName: TOuter
  - name: '>'
    fullName: '>'
  - name: ', '
    fullName: ', '
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    fullName: <
  - name: TInner
    fullName: TInner
  - name: '>'
    fullName: '>'
  - name: ', '
    fullName: ', '
  - uid: System.Func`2
    name: Func
    fullName: System.Func
    isExternal: true
  - name: <
    fullName: <
  - name: TOuter
    fullName: TOuter
  - name: ', '
    fullName: ', '
  - name: TKey
    fullName: TKey
  - name: '>'
    fullName: '>'
  - name: ', '
    fullName: ', '
  - uid: System.Func`2
    name: Func
    fullName: System.Func
    isExternal: true
  - name: <
    fullName: <
  - name: TInner
    fullName: TInner
  - name: ', '
    fullName: ', '
  - name: TKey
    fullName: TKey
  - name: '>'
    fullName: '>'
  - name: ', '
    fullName: ', '
  - uid: System.Func`3
    name: Func
    fullName: System.Func
    isExternal: true
  - name: <
    fullName: <
  - name: TOuter
    fullName: TOuter
  - name: ', '
    fullName: ', '
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    fullName: <
  - name: TInner
    fullName: TInner
  - name: '>'
    fullName: '>'
  - name: ', '
    fullName: ', '
  - name: TResult
    fullName: TResult
  - name: '>'
    fullName: '>'
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Linq.Enumerable.GroupJoin``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3})
    name: GroupJoin(Of TOuter, TInner, TKey, TResult)
    fullName: System.Linq.Enumerable.GroupJoin(Of TOuter, TInner, TKey, TResult)
  - name: (
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - name: TOuter
    fullName: TOuter
  - name: )
    fullName: )
  - name: ', '
    fullName: ', '
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - name: TInner
    fullName: TInner
  - name: )
    fullName: )
  - name: ', '
    fullName: ', '
  - uid: System.Func`2
    name: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - name: TOuter
    fullName: TOuter
  - name: ', '
    fullName: ', '
  - name: TKey
    fullName: TKey
  - name: )
    fullName: )
  - name: ', '
    fullName: ', '
  - uid: System.Func`2
    name: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - name: TInner
    fullName: TInner
  - name: ', '
    fullName: ', '
  - name: TKey
    fullName: TKey
  - name: )
    fullName: )
  - name: ', '
    fullName: ', '
  - uid: System.Func`3
    name: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - name: TOuter
    fullName: TOuter
  - name: ', '
    fullName: ', '
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - name: TInner
    fullName: TInner
  - name: )
    fullName: )
  - name: ', '
    fullName: ', '
  - name: TResult
    fullName: TResult
  - name: )
    fullName: )
  - name: )
    fullName: )
  nameWithType: Enumerable.GroupJoin<TOuter, TInner, TKey, TResult>(IEnumerable<TOuter>, IEnumerable<TInner>, Func<TOuter, TKey>, Func<TInner, TKey>, Func<TOuter, IEnumerable<TInner>, TResult>)
  nameWithType.vb: Enumerable.GroupJoin(Of TOuter, TInner, TKey, TResult)(IEnumerable(Of TOuter), IEnumerable(Of TInner), Func(Of TOuter, TKey), Func(Of TInner, TKey), Func(Of TOuter, IEnumerable(Of TInner), TResult))
  commentId: M:System.Linq.Enumerable.GroupJoin``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3})
- uid: System.Linq.Enumerable.GroupJoin``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3},System.Collections.Generic.IEqualityComparer{``2})
  isExternal: true
  name: GroupJoin<TOuter, TInner, TKey, TResult>(IEnumerable<TOuter>, IEnumerable<TInner>, Func<TOuter, TKey>, Func<TInner, TKey>, Func<TOuter, IEnumerable<TInner>, TResult>, IEqualityComparer<TKey>)
  fullName: System.Linq.Enumerable.GroupJoin<TOuter, TInner, TKey, TResult>(System.Collections.Generic.IEnumerable<TOuter>, System.Collections.Generic.IEnumerable<TInner>, System.Func<TOuter, TKey>, System.Func<TInner, TKey>, System.Func<TOuter, System.Collections.Generic.IEnumerable<TInner>, TResult>, System.Collections.Generic.IEqualityComparer<TKey>)
  fullname.vb: System.Linq.Enumerable.GroupJoin(Of TOuter, TInner, TKey, TResult)(System.Collections.Generic.IEnumerable(Of TOuter), System.Collections.Generic.IEnumerable(Of TInner), System.Func(Of TOuter, TKey), System.Func(Of TInner, TKey), System.Func(Of TOuter, System.Collections.Generic.IEnumerable(Of TInner), TResult), System.Collections.Generic.IEqualityComparer(Of TKey))
  name.vb: GroupJoin(Of TOuter, TInner, TKey, TResult)(IEnumerable(Of TOuter), IEnumerable(Of TInner), Func(Of TOuter, TKey), Func(Of TInner, TKey), Func(Of TOuter, IEnumerable(Of TInner), TResult), IEqualityComparer(Of TKey))
  spec.csharp:
  - uid: System.Linq.Enumerable.GroupJoin``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3},System.Collections.Generic.IEqualityComparer{``2})
    name: GroupJoin<TOuter, TInner, TKey, TResult>
    fullName: System.Linq.Enumerable.GroupJoin<TOuter, TInner, TKey, TResult>
  - name: (
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    fullName: <
  - name: TOuter
    fullName: TOuter
  - name: '>'
    fullName: '>'
  - name: ', '
    fullName: ', '
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    fullName: <
  - name: TInner
    fullName: TInner
  - name: '>'
    fullName: '>'
  - name: ', '
    fullName: ', '
  - uid: System.Func`2
    name: Func
    fullName: System.Func
    isExternal: true
  - name: <
    fullName: <
  - name: TOuter
    fullName: TOuter
  - name: ', '
    fullName: ', '
  - name: TKey
    fullName: TKey
  - name: '>'
    fullName: '>'
  - name: ', '
    fullName: ', '
  - uid: System.Func`2
    name: Func
    fullName: System.Func
    isExternal: true
  - name: <
    fullName: <
  - name: TInner
    fullName: TInner
  - name: ', '
    fullName: ', '
  - name: TKey
    fullName: TKey
  - name: '>'
    fullName: '>'
  - name: ', '
    fullName: ', '
  - uid: System.Func`3
    name: Func
    fullName: System.Func
    isExternal: true
  - name: <
    fullName: <
  - name: TOuter
    fullName: TOuter
  - name: ', '
    fullName: ', '
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    fullName: <
  - name: TInner
    fullName: TInner
  - name: '>'
    fullName: '>'
  - name: ', '
    fullName: ', '
  - name: TResult
    fullName: TResult
  - name: '>'
    fullName: '>'
  - name: ', '
    fullName: ', '
  - uid: System.Collections.Generic.IEqualityComparer`1
    name: IEqualityComparer
    fullName: System.Collections.Generic.IEqualityComparer
    isExternal: true
  - name: <
    fullName: <
  - name: TKey
    fullName: TKey
  - name: '>'
    fullName: '>'
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Linq.Enumerable.GroupJoin``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3},System.Collections.Generic.IEqualityComparer{``2})
    name: GroupJoin(Of TOuter, TInner, TKey, TResult)
    fullName: System.Linq.Enumerable.GroupJoin(Of TOuter, TInner, TKey, TResult)
  - name: (
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - name: TOuter
    fullName: TOuter
  - name: )
    fullName: )
  - name: ', '
    fullName: ', '
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - name: TInner
    fullName: TInner
  - name: )
    fullName: )
  - name: ', '
    fullName: ', '
  - uid: System.Func`2
    name: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - name: TOuter
    fullName: TOuter
  - name: ', '
    fullName: ', '
  - name: TKey
    fullName: TKey
  - name: )
    fullName: )
  - name: ', '
    fullName: ', '
  - uid: System.Func`2
    name: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - name: TInner
    fullName: TInner
  - name: ', '
    fullName: ', '
  - name: TKey
    fullName: TKey
  - name: )
    fullName: )
  - name: ', '
    fullName: ', '
  - uid: System.Func`3
    name: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - name: TOuter
    fullName: TOuter
  - name: ', '
    fullName: ', '
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - name: TInner
    fullName: TInner
  - name: )
    fullName: )
  - name: ', '
    fullName: ', '
  - name: TResult
    fullName: TResult
  - name: )
    fullName: )
  - name: ', '
    fullName: ', '
  - uid: System.Collections.Generic.IEqualityComparer`1
    name: IEqualityComparer
    fullName: System.Collections.Generic.IEqualityComparer
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - name: TKey
    fullName: TKey
  - name: )
    fullName: )
  - name: )
    fullName: )
  nameWithType: Enumerable.GroupJoin<TOuter, TInner, TKey, TResult>(IEnumerable<TOuter>, IEnumerable<TInner>, Func<TOuter, TKey>, Func<TInner, TKey>, Func<TOuter, IEnumerable<TInner>, TResult>, IEqualityComparer<TKey>)
  nameWithType.vb: Enumerable.GroupJoin(Of TOuter, TInner, TKey, TResult)(IEnumerable(Of TOuter), IEnumerable(Of TInner), Func(Of TOuter, TKey), Func(Of TInner, TKey), Func(Of TOuter, IEnumerable(Of TInner), TResult), IEqualityComparer(Of TKey))
  commentId: M:System.Linq.Enumerable.GroupJoin``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3},System.Collections.Generic.IEqualityComparer{``2})
- uid: System.Linq.Enumerable.Intersect``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0})
  isExternal: true
  name: Intersect<TSource>(IEnumerable<TSource>, IEnumerable<TSource>)
  fullName: System.Linq.Enumerable.Intersect<TSource>(System.Collections.Generic.IEnumerable<TSource>, System.Collections.Generic.IEnumerable<TSource>)
  fullname.vb: System.Linq.Enumerable.Intersect(Of TSource)(System.Collections.Generic.IEnumerable(Of TSource), System.Collections.Generic.IEnumerable(Of TSource))
  name.vb: Intersect(Of TSource)(IEnumerable(Of TSource), IEnumerable(Of TSource))
  spec.csharp:
  - uid: System.Linq.Enumerable.Intersect``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0})
    name: Intersect<TSource>
    fullName: System.Linq.Enumerable.Intersect<TSource>
  - name: (
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    fullName: <
  - name: TSource
    fullName: TSource
  - name: '>'
    fullName: '>'
  - name: ', '
    fullName: ', '
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    fullName: <
  - name: TSource
    fullName: TSource
  - name: '>'
    fullName: '>'
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Linq.Enumerable.Intersect``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0})
    name: Intersect(Of TSource)
    fullName: System.Linq.Enumerable.Intersect(Of TSource)
  - name: (
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - name: TSource
    fullName: TSource
  - name: )
    fullName: )
  - name: ', '
    fullName: ', '
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - name: TSource
    fullName: TSource
  - name: )
    fullName: )
  - name: )
    fullName: )
  nameWithType: Enumerable.Intersect<TSource>(IEnumerable<TSource>, IEnumerable<TSource>)
  nameWithType.vb: Enumerable.Intersect(Of TSource)(IEnumerable(Of TSource), IEnumerable(Of TSource))
  commentId: M:System.Linq.Enumerable.Intersect``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0})
- uid: System.Linq.Enumerable.Intersect``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEqualityComparer{``0})
  isExternal: true
  name: Intersect<TSource>(IEnumerable<TSource>, IEnumerable<TSource>, IEqualityComparer<TSource>)
  fullName: System.Linq.Enumerable.Intersect<TSource>(System.Collections.Generic.IEnumerable<TSource>, System.Collections.Generic.IEnumerable<TSource>, System.Collections.Generic.IEqualityComparer<TSource>)
  fullname.vb: System.Linq.Enumerable.Intersect(Of TSource)(System.Collections.Generic.IEnumerable(Of TSource), System.Collections.Generic.IEnumerable(Of TSource), System.Collections.Generic.IEqualityComparer(Of TSource))
  name.vb: Intersect(Of TSource)(IEnumerable(Of TSource), IEnumerable(Of TSource), IEqualityComparer(Of TSource))
  spec.csharp:
  - uid: System.Linq.Enumerable.Intersect``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEqualityComparer{``0})
    name: Intersect<TSource>
    fullName: System.Linq.Enumerable.Intersect<TSource>
  - name: (
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    fullName: <
  - name: TSource
    fullName: TSource
  - name: '>'
    fullName: '>'
  - name: ', '
    fullName: ', '
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    fullName: <
  - name: TSource
    fullName: TSource
  - name: '>'
    fullName: '>'
  - name: ', '
    fullName: ', '
  - uid: System.Collections.Generic.IEqualityComparer`1
    name: IEqualityComparer
    fullName: System.Collections.Generic.IEqualityComparer
    isExternal: true
  - name: <
    fullName: <
  - name: TSource
    fullName: TSource
  - name: '>'
    fullName: '>'
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Linq.Enumerable.Intersect``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEqualityComparer{``0})
    name: Intersect(Of TSource)
    fullName: System.Linq.Enumerable.Intersect(Of TSource)
  - name: (
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - name: TSource
    fullName: TSource
  - name: )
    fullName: )
  - name: ', '
    fullName: ', '
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - name: TSource
    fullName: TSource
  - name: )
    fullName: )
  - name: ', '
    fullName: ', '
  - uid: System.Collections.Generic.IEqualityComparer`1
    name: IEqualityComparer
    fullName: System.Collections.Generic.IEqualityComparer
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - name: TSource
    fullName: TSource
  - name: )
    fullName: )
  - name: )
    fullName: )
  nameWithType: Enumerable.Intersect<TSource>(IEnumerable<TSource>, IEnumerable<TSource>, IEqualityComparer<TSource>)
  nameWithType.vb: Enumerable.Intersect(Of TSource)(IEnumerable(Of TSource), IEnumerable(Of TSource), IEqualityComparer(Of TSource))
  commentId: M:System.Linq.Enumerable.Intersect``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEqualityComparer{``0})
- uid: System.Linq.Enumerable.Join``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3})
  isExternal: true
  name: Join<TOuter, TInner, TKey, TResult>(IEnumerable<TOuter>, IEnumerable<TInner>, Func<TOuter, TKey>, Func<TInner, TKey>, Func<TOuter, TInner, TResult>)
  fullName: System.Linq.Enumerable.Join<TOuter, TInner, TKey, TResult>(System.Collections.Generic.IEnumerable<TOuter>, System.Collections.Generic.IEnumerable<TInner>, System.Func<TOuter, TKey>, System.Func<TInner, TKey>, System.Func<TOuter, TInner, TResult>)
  fullname.vb: System.Linq.Enumerable.Join(Of TOuter, TInner, TKey, TResult)(System.Collections.Generic.IEnumerable(Of TOuter), System.Collections.Generic.IEnumerable(Of TInner), System.Func(Of TOuter, TKey), System.Func(Of TInner, TKey), System.Func(Of TOuter, TInner, TResult))
  name.vb: Join(Of TOuter, TInner, TKey, TResult)(IEnumerable(Of TOuter), IEnumerable(Of TInner), Func(Of TOuter, TKey), Func(Of TInner, TKey), Func(Of TOuter, TInner, TResult))
  spec.csharp:
  - uid: System.Linq.Enumerable.Join``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3})
    name: Join<TOuter, TInner, TKey, TResult>
    fullName: System.Linq.Enumerable.Join<TOuter, TInner, TKey, TResult>
  - name: (
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    fullName: <
  - name: TOuter
    fullName: TOuter
  - name: '>'
    fullName: '>'
  - name: ', '
    fullName: ', '
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    fullName: <
  - name: TInner
    fullName: TInner
  - name: '>'
    fullName: '>'
  - name: ', '
    fullName: ', '
  - uid: System.Func`2
    name: Func
    fullName: System.Func
    isExternal: true
  - name: <
    fullName: <
  - name: TOuter
    fullName: TOuter
  - name: ', '
    fullName: ', '
  - name: TKey
    fullName: TKey
  - name: '>'
    fullName: '>'
  - name: ', '
    fullName: ', '
  - uid: System.Func`2
    name: Func
    fullName: System.Func
    isExternal: true
  - name: <
    fullName: <
  - name: TInner
    fullName: TInner
  - name: ', '
    fullName: ', '
  - name: TKey
    fullName: TKey
  - name: '>'
    fullName: '>'
  - name: ', '
    fullName: ', '
  - uid: System.Func`3
    name: Func
    fullName: System.Func
    isExternal: true
  - name: <
    fullName: <
  - name: TOuter
    fullName: TOuter
  - name: ', '
    fullName: ', '
  - name: TInner
    fullName: TInner
  - name: ', '
    fullName: ', '
  - name: TResult
    fullName: TResult
  - name: '>'
    fullName: '>'
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Linq.Enumerable.Join``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3})
    name: Join(Of TOuter, TInner, TKey, TResult)
    fullName: System.Linq.Enumerable.Join(Of TOuter, TInner, TKey, TResult)
  - name: (
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - name: TOuter
    fullName: TOuter
  - name: )
    fullName: )
  - name: ', '
    fullName: ', '
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - name: TInner
    fullName: TInner
  - name: )
    fullName: )
  - name: ', '
    fullName: ', '
  - uid: System.Func`2
    name: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - name: TOuter
    fullName: TOuter
  - name: ', '
    fullName: ', '
  - name: TKey
    fullName: TKey
  - name: )
    fullName: )
  - name: ', '
    fullName: ', '
  - uid: System.Func`2
    name: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - name: TInner
    fullName: TInner
  - name: ', '
    fullName: ', '
  - name: TKey
    fullName: TKey
  - name: )
    fullName: )
  - name: ', '
    fullName: ', '
  - uid: System.Func`3
    name: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - name: TOuter
    fullName: TOuter
  - name: ', '
    fullName: ', '
  - name: TInner
    fullName: TInner
  - name: ', '
    fullName: ', '
  - name: TResult
    fullName: TResult
  - name: )
    fullName: )
  - name: )
    fullName: )
  nameWithType: Enumerable.Join<TOuter, TInner, TKey, TResult>(IEnumerable<TOuter>, IEnumerable<TInner>, Func<TOuter, TKey>, Func<TInner, TKey>, Func<TOuter, TInner, TResult>)
  nameWithType.vb: Enumerable.Join(Of TOuter, TInner, TKey, TResult)(IEnumerable(Of TOuter), IEnumerable(Of TInner), Func(Of TOuter, TKey), Func(Of TInner, TKey), Func(Of TOuter, TInner, TResult))
  commentId: M:System.Linq.Enumerable.Join``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3})
- uid: System.Linq.Enumerable.Join``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3},System.Collections.Generic.IEqualityComparer{``2})
  isExternal: true
  name: Join<TOuter, TInner, TKey, TResult>(IEnumerable<TOuter>, IEnumerable<TInner>, Func<TOuter, TKey>, Func<TInner, TKey>, Func<TOuter, TInner, TResult>, IEqualityComparer<TKey>)
  fullName: System.Linq.Enumerable.Join<TOuter, TInner, TKey, TResult>(System.Collections.Generic.IEnumerable<TOuter>, System.Collections.Generic.IEnumerable<TInner>, System.Func<TOuter, TKey>, System.Func<TInner, TKey>, System.Func<TOuter, TInner, TResult>, System.Collections.Generic.IEqualityComparer<TKey>)
  fullname.vb: System.Linq.Enumerable.Join(Of TOuter, TInner, TKey, TResult)(System.Collections.Generic.IEnumerable(Of TOuter), System.Collections.Generic.IEnumerable(Of TInner), System.Func(Of TOuter, TKey), System.Func(Of TInner, TKey), System.Func(Of TOuter, TInner, TResult), System.Collections.Generic.IEqualityComparer(Of TKey))
  name.vb: Join(Of TOuter, TInner, TKey, TResult)(IEnumerable(Of TOuter), IEnumerable(Of TInner), Func(Of TOuter, TKey), Func(Of TInner, TKey), Func(Of TOuter, TInner, TResult), IEqualityComparer(Of TKey))
  spec.csharp:
  - uid: System.Linq.Enumerable.Join``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3},System.Collections.Generic.IEqualityComparer{``2})
    name: Join<TOuter, TInner, TKey, TResult>
    fullName: System.Linq.Enumerable.Join<TOuter, TInner, TKey, TResult>
  - name: (
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    fullName: <
  - name: TOuter
    fullName: TOuter
  - name: '>'
    fullName: '>'
  - name: ', '
    fullName: ', '
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    fullName: <
  - name: TInner
    fullName: TInner
  - name: '>'
    fullName: '>'
  - name: ', '
    fullName: ', '
  - uid: System.Func`2
    name: Func
    fullName: System.Func
    isExternal: true
  - name: <
    fullName: <
  - name: TOuter
    fullName: TOuter
  - name: ', '
    fullName: ', '
  - name: TKey
    fullName: TKey
  - name: '>'
    fullName: '>'
  - name: ', '
    fullName: ', '
  - uid: System.Func`2
    name: Func
    fullName: System.Func
    isExternal: true
  - name: <
    fullName: <
  - name: TInner
    fullName: TInner
  - name: ', '
    fullName: ', '
  - name: TKey
    fullName: TKey
  - name: '>'
    fullName: '>'
  - name: ', '
    fullName: ', '
  - uid: System.Func`3
    name: Func
    fullName: System.Func
    isExternal: true
  - name: <
    fullName: <
  - name: TOuter
    fullName: TOuter
  - name: ', '
    fullName: ', '
  - name: TInner
    fullName: TInner
  - name: ', '
    fullName: ', '
  - name: TResult
    fullName: TResult
  - name: '>'
    fullName: '>'
  - name: ', '
    fullName: ', '
  - uid: System.Collections.Generic.IEqualityComparer`1
    name: IEqualityComparer
    fullName: System.Collections.Generic.IEqualityComparer
    isExternal: true
  - name: <
    fullName: <
  - name: TKey
    fullName: TKey
  - name: '>'
    fullName: '>'
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Linq.Enumerable.Join``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3},System.Collections.Generic.IEqualityComparer{``2})
    name: Join(Of TOuter, TInner, TKey, TResult)
    fullName: System.Linq.Enumerable.Join(Of TOuter, TInner, TKey, TResult)
  - name: (
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - name: TOuter
    fullName: TOuter
  - name: )
    fullName: )
  - name: ', '
    fullName: ', '
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - name: TInner
    fullName: TInner
  - name: )
    fullName: )
  - name: ', '
    fullName: ', '
  - uid: System.Func`2
    name: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - name: TOuter
    fullName: TOuter
  - name: ', '
    fullName: ', '
  - name: TKey
    fullName: TKey
  - name: )
    fullName: )
  - name: ', '
    fullName: ', '
  - uid: System.Func`2
    name: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - name: TInner
    fullName: TInner
  - name: ', '
    fullName: ', '
  - name: TKey
    fullName: TKey
  - name: )
    fullName: )
  - name: ', '
    fullName: ', '
  - uid: System.Func`3
    name: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - name: TOuter
    fullName: TOuter
  - name: ', '
    fullName: ', '
  - name: TInner
    fullName: TInner
  - name: ', '
    fullName: ', '
  - name: TResult
    fullName: TResult
  - name: )
    fullName: )
  - name: ', '
    fullName: ', '
  - uid: System.Collections.Generic.IEqualityComparer`1
    name: IEqualityComparer
    fullName: System.Collections.Generic.IEqualityComparer
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - name: TKey
    fullName: TKey
  - name: )
    fullName: )
  - name: )
    fullName: )
  nameWithType: Enumerable.Join<TOuter, TInner, TKey, TResult>(IEnumerable<TOuter>, IEnumerable<TInner>, Func<TOuter, TKey>, Func<TInner, TKey>, Func<TOuter, TInner, TResult>, IEqualityComparer<TKey>)
  nameWithType.vb: Enumerable.Join(Of TOuter, TInner, TKey, TResult)(IEnumerable(Of TOuter), IEnumerable(Of TInner), Func(Of TOuter, TKey), Func(Of TInner, TKey), Func(Of TOuter, TInner, TResult), IEqualityComparer(Of TKey))
  commentId: M:System.Linq.Enumerable.Join``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3},System.Collections.Generic.IEqualityComparer{``2})
- uid: System.Linq.Enumerable.Last``1(System.Collections.Generic.IEnumerable{``0})
  isExternal: true
  name: Last<TSource>(IEnumerable<TSource>)
  fullName: System.Linq.Enumerable.Last<TSource>(System.Collections.Generic.IEnumerable<TSource>)
  fullname.vb: System.Linq.Enumerable.Last(Of TSource)(System.Collections.Generic.IEnumerable(Of TSource))
  name.vb: Last(Of TSource)(IEnumerable(Of TSource))
  spec.csharp:
  - uid: System.Linq.Enumerable.Last``1(System.Collections.Generic.IEnumerable{``0})
    name: Last<TSource>
    fullName: System.Linq.Enumerable.Last<TSource>
  - name: (
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    fullName: <
  - name: TSource
    fullName: TSource
  - name: '>'
    fullName: '>'
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Linq.Enumerable.Last``1(System.Collections.Generic.IEnumerable{``0})
    name: Last(Of TSource)
    fullName: System.Linq.Enumerable.Last(Of TSource)
  - name: (
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - name: TSource
    fullName: TSource
  - name: )
    fullName: )
  - name: )
    fullName: )
  nameWithType: Enumerable.Last<TSource>(IEnumerable<TSource>)
  nameWithType.vb: Enumerable.Last(Of TSource)(IEnumerable(Of TSource))
  commentId: M:System.Linq.Enumerable.Last``1(System.Collections.Generic.IEnumerable{``0})
- uid: System.Linq.Enumerable.Last``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})
  isExternal: true
  name: Last<TSource>(IEnumerable<TSource>, Func<TSource, Boolean>)
  fullName: System.Linq.Enumerable.Last<TSource>(System.Collections.Generic.IEnumerable<TSource>, System.Func<TSource, System.Boolean>)
  fullname.vb: System.Linq.Enumerable.Last(Of TSource)(System.Collections.Generic.IEnumerable(Of TSource), System.Func(Of TSource, System.Boolean))
  name.vb: Last(Of TSource)(IEnumerable(Of TSource), Func(Of TSource, Boolean))
  spec.csharp:
  - uid: System.Linq.Enumerable.Last``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})
    name: Last<TSource>
    fullName: System.Linq.Enumerable.Last<TSource>
  - name: (
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    fullName: <
  - name: TSource
    fullName: TSource
  - name: '>'
    fullName: '>'
  - name: ', '
    fullName: ', '
  - uid: System.Func`2
    name: Func
    fullName: System.Func
    isExternal: true
  - name: <
    fullName: <
  - name: TSource
    fullName: TSource
  - name: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: '>'
    fullName: '>'
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Linq.Enumerable.Last``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})
    name: Last(Of TSource)
    fullName: System.Linq.Enumerable.Last(Of TSource)
  - name: (
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - name: TSource
    fullName: TSource
  - name: )
    fullName: )
  - name: ', '
    fullName: ', '
  - uid: System.Func`2
    name: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - name: TSource
    fullName: TSource
  - name: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    fullName: )
  - name: )
    fullName: )
  nameWithType: Enumerable.Last<TSource>(IEnumerable<TSource>, Func<TSource, Boolean>)
  nameWithType.vb: Enumerable.Last(Of TSource)(IEnumerable(Of TSource), Func(Of TSource, Boolean))
  commentId: M:System.Linq.Enumerable.Last``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})
- uid: System.Linq.Enumerable.LastOrDefault``1(System.Collections.Generic.IEnumerable{``0})
  isExternal: true
  name: LastOrDefault<TSource>(IEnumerable<TSource>)
  fullName: System.Linq.Enumerable.LastOrDefault<TSource>(System.Collections.Generic.IEnumerable<TSource>)
  fullname.vb: System.Linq.Enumerable.LastOrDefault(Of TSource)(System.Collections.Generic.IEnumerable(Of TSource))
  name.vb: LastOrDefault(Of TSource)(IEnumerable(Of TSource))
  spec.csharp:
  - uid: System.Linq.Enumerable.LastOrDefault``1(System.Collections.Generic.IEnumerable{``0})
    name: LastOrDefault<TSource>
    fullName: System.Linq.Enumerable.LastOrDefault<TSource>
  - name: (
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    fullName: <
  - name: TSource
    fullName: TSource
  - name: '>'
    fullName: '>'
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Linq.Enumerable.LastOrDefault``1(System.Collections.Generic.IEnumerable{``0})
    name: LastOrDefault(Of TSource)
    fullName: System.Linq.Enumerable.LastOrDefault(Of TSource)
  - name: (
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - name: TSource
    fullName: TSource
  - name: )
    fullName: )
  - name: )
    fullName: )
  nameWithType: Enumerable.LastOrDefault<TSource>(IEnumerable<TSource>)
  nameWithType.vb: Enumerable.LastOrDefault(Of TSource)(IEnumerable(Of TSource))
  commentId: M:System.Linq.Enumerable.LastOrDefault``1(System.Collections.Generic.IEnumerable{``0})
- uid: System.Linq.Enumerable.LastOrDefault``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})
  isExternal: true
  name: LastOrDefault<TSource>(IEnumerable<TSource>, Func<TSource, Boolean>)
  fullName: System.Linq.Enumerable.LastOrDefault<TSource>(System.Collections.Generic.IEnumerable<TSource>, System.Func<TSource, System.Boolean>)
  fullname.vb: System.Linq.Enumerable.LastOrDefault(Of TSource)(System.Collections.Generic.IEnumerable(Of TSource), System.Func(Of TSource, System.Boolean))
  name.vb: LastOrDefault(Of TSource)(IEnumerable(Of TSource), Func(Of TSource, Boolean))
  spec.csharp:
  - uid: System.Linq.Enumerable.LastOrDefault``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})
    name: LastOrDefault<TSource>
    fullName: System.Linq.Enumerable.LastOrDefault<TSource>
  - name: (
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    fullName: <
  - name: TSource
    fullName: TSource
  - name: '>'
    fullName: '>'
  - name: ', '
    fullName: ', '
  - uid: System.Func`2
    name: Func
    fullName: System.Func
    isExternal: true
  - name: <
    fullName: <
  - name: TSource
    fullName: TSource
  - name: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: '>'
    fullName: '>'
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Linq.Enumerable.LastOrDefault``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})
    name: LastOrDefault(Of TSource)
    fullName: System.Linq.Enumerable.LastOrDefault(Of TSource)
  - name: (
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - name: TSource
    fullName: TSource
  - name: )
    fullName: )
  - name: ', '
    fullName: ', '
  - uid: System.Func`2
    name: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - name: TSource
    fullName: TSource
  - name: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    fullName: )
  - name: )
    fullName: )
  nameWithType: Enumerable.LastOrDefault<TSource>(IEnumerable<TSource>, Func<TSource, Boolean>)
  nameWithType.vb: Enumerable.LastOrDefault(Of TSource)(IEnumerable(Of TSource), Func(Of TSource, Boolean))
  commentId: M:System.Linq.Enumerable.LastOrDefault``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})
- uid: System.Linq.Enumerable.LongCount``1(System.Collections.Generic.IEnumerable{``0})
  isExternal: true
  name: LongCount<TSource>(IEnumerable<TSource>)
  fullName: System.Linq.Enumerable.LongCount<TSource>(System.Collections.Generic.IEnumerable<TSource>)
  fullname.vb: System.Linq.Enumerable.LongCount(Of TSource)(System.Collections.Generic.IEnumerable(Of TSource))
  name.vb: LongCount(Of TSource)(IEnumerable(Of TSource))
  spec.csharp:
  - uid: System.Linq.Enumerable.LongCount``1(System.Collections.Generic.IEnumerable{``0})
    name: LongCount<TSource>
    fullName: System.Linq.Enumerable.LongCount<TSource>
  - name: (
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    fullName: <
  - name: TSource
    fullName: TSource
  - name: '>'
    fullName: '>'
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Linq.Enumerable.LongCount``1(System.Collections.Generic.IEnumerable{``0})
    name: LongCount(Of TSource)
    fullName: System.Linq.Enumerable.LongCount(Of TSource)
  - name: (
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - name: TSource
    fullName: TSource
  - name: )
    fullName: )
  - name: )
    fullName: )
  nameWithType: Enumerable.LongCount<TSource>(IEnumerable<TSource>)
  nameWithType.vb: Enumerable.LongCount(Of TSource)(IEnumerable(Of TSource))
  commentId: M:System.Linq.Enumerable.LongCount``1(System.Collections.Generic.IEnumerable{``0})
- uid: System.Linq.Enumerable.LongCount``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})
  isExternal: true
  name: LongCount<TSource>(IEnumerable<TSource>, Func<TSource, Boolean>)
  fullName: System.Linq.Enumerable.LongCount<TSource>(System.Collections.Generic.IEnumerable<TSource>, System.Func<TSource, System.Boolean>)
  fullname.vb: System.Linq.Enumerable.LongCount(Of TSource)(System.Collections.Generic.IEnumerable(Of TSource), System.Func(Of TSource, System.Boolean))
  name.vb: LongCount(Of TSource)(IEnumerable(Of TSource), Func(Of TSource, Boolean))
  spec.csharp:
  - uid: System.Linq.Enumerable.LongCount``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})
    name: LongCount<TSource>
    fullName: System.Linq.Enumerable.LongCount<TSource>
  - name: (
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    fullName: <
  - name: TSource
    fullName: TSource
  - name: '>'
    fullName: '>'
  - name: ', '
    fullName: ', '
  - uid: System.Func`2
    name: Func
    fullName: System.Func
    isExternal: true
  - name: <
    fullName: <
  - name: TSource
    fullName: TSource
  - name: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: '>'
    fullName: '>'
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Linq.Enumerable.LongCount``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})
    name: LongCount(Of TSource)
    fullName: System.Linq.Enumerable.LongCount(Of TSource)
  - name: (
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - name: TSource
    fullName: TSource
  - name: )
    fullName: )
  - name: ', '
    fullName: ', '
  - uid: System.Func`2
    name: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - name: TSource
    fullName: TSource
  - name: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    fullName: )
  - name: )
    fullName: )
  nameWithType: Enumerable.LongCount<TSource>(IEnumerable<TSource>, Func<TSource, Boolean>)
  nameWithType.vb: Enumerable.LongCount(Of TSource)(IEnumerable(Of TSource), Func(Of TSource, Boolean))
  commentId: M:System.Linq.Enumerable.LongCount``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})
- uid: System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0})
  isExternal: true
  name: Max<TSource>(IEnumerable<TSource>)
  fullName: System.Linq.Enumerable.Max<TSource>(System.Collections.Generic.IEnumerable<TSource>)
  fullname.vb: System.Linq.Enumerable.Max(Of TSource)(System.Collections.Generic.IEnumerable(Of TSource))
  name.vb: Max(Of TSource)(IEnumerable(Of TSource))
  spec.csharp:
  - uid: System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0})
    name: Max<TSource>
    fullName: System.Linq.Enumerable.Max<TSource>
  - name: (
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    fullName: <
  - name: TSource
    fullName: TSource
  - name: '>'
    fullName: '>'
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0})
    name: Max(Of TSource)
    fullName: System.Linq.Enumerable.Max(Of TSource)
  - name: (
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - name: TSource
    fullName: TSource
  - name: )
    fullName: )
  - name: )
    fullName: )
  nameWithType: Enumerable.Max<TSource>(IEnumerable<TSource>)
  nameWithType.vb: Enumerable.Max(Of TSource)(IEnumerable(Of TSource))
  commentId: M:System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0})
- uid: System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Decimal})
  isExternal: true
  name: Max<TSource>(IEnumerable<TSource>, Func<TSource, Decimal>)
  fullName: System.Linq.Enumerable.Max<TSource>(System.Collections.Generic.IEnumerable<TSource>, System.Func<TSource, System.Decimal>)
  fullname.vb: System.Linq.Enumerable.Max(Of TSource)(System.Collections.Generic.IEnumerable(Of TSource), System.Func(Of TSource, System.Decimal))
  name.vb: Max(Of TSource)(IEnumerable(Of TSource), Func(Of TSource, Decimal))
  spec.csharp:
  - uid: System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Decimal})
    name: Max<TSource>
    fullName: System.Linq.Enumerable.Max<TSource>
  - name: (
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    fullName: <
  - name: TSource
    fullName: TSource
  - name: '>'
    fullName: '>'
  - name: ', '
    fullName: ', '
  - uid: System.Func`2
    name: Func
    fullName: System.Func
    isExternal: true
  - name: <
    fullName: <
  - name: TSource
    fullName: TSource
  - name: ', '
    fullName: ', '
  - uid: System.Decimal
    name: Decimal
    fullName: System.Decimal
    isExternal: true
  - name: '>'
    fullName: '>'
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Decimal})
    name: Max(Of TSource)
    fullName: System.Linq.Enumerable.Max(Of TSource)
  - name: (
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - name: TSource
    fullName: TSource
  - name: )
    fullName: )
  - name: ', '
    fullName: ', '
  - uid: System.Func`2
    name: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - name: TSource
    fullName: TSource
  - name: ', '
    fullName: ', '
  - uid: System.Decimal
    name: Decimal
    fullName: System.Decimal
    isExternal: true
  - name: )
    fullName: )
  - name: )
    fullName: )
  nameWithType: Enumerable.Max<TSource>(IEnumerable<TSource>, Func<TSource, Decimal>)
  nameWithType.vb: Enumerable.Max(Of TSource)(IEnumerable(Of TSource), Func(Of TSource, Decimal))
  commentId: M:System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Decimal})
- uid: System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Double})
  isExternal: true
  name: Max<TSource>(IEnumerable<TSource>, Func<TSource, Double>)
  fullName: System.Linq.Enumerable.Max<TSource>(System.Collections.Generic.IEnumerable<TSource>, System.Func<TSource, System.Double>)
  fullname.vb: System.Linq.Enumerable.Max(Of TSource)(System.Collections.Generic.IEnumerable(Of TSource), System.Func(Of TSource, System.Double))
  name.vb: Max(Of TSource)(IEnumerable(Of TSource), Func(Of TSource, Double))
  spec.csharp:
  - uid: System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Double})
    name: Max<TSource>
    fullName: System.Linq.Enumerable.Max<TSource>
  - name: (
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    fullName: <
  - name: TSource
    fullName: TSource
  - name: '>'
    fullName: '>'
  - name: ', '
    fullName: ', '
  - uid: System.Func`2
    name: Func
    fullName: System.Func
    isExternal: true
  - name: <
    fullName: <
  - name: TSource
    fullName: TSource
  - name: ', '
    fullName: ', '
  - uid: System.Double
    name: Double
    fullName: System.Double
    isExternal: true
  - name: '>'
    fullName: '>'
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Double})
    name: Max(Of TSource)
    fullName: System.Linq.Enumerable.Max(Of TSource)
  - name: (
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - name: TSource
    fullName: TSource
  - name: )
    fullName: )
  - name: ', '
    fullName: ', '
  - uid: System.Func`2
    name: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - name: TSource
    fullName: TSource
  - name: ', '
    fullName: ', '
  - uid: System.Double
    name: Double
    fullName: System.Double
    isExternal: true
  - name: )
    fullName: )
  - name: )
    fullName: )
  nameWithType: Enumerable.Max<TSource>(IEnumerable<TSource>, Func<TSource, Double>)
  nameWithType.vb: Enumerable.Max(Of TSource)(IEnumerable(Of TSource), Func(Of TSource, Double))
  commentId: M:System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Double})
- uid: System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32})
  isExternal: true
  name: Max<TSource>(IEnumerable<TSource>, Func<TSource, Int32>)
  fullName: System.Linq.Enumerable.Max<TSource>(System.Collections.Generic.IEnumerable<TSource>, System.Func<TSource, System.Int32>)
  fullname.vb: System.Linq.Enumerable.Max(Of TSource)(System.Collections.Generic.IEnumerable(Of TSource), System.Func(Of TSource, System.Int32))
  name.vb: Max(Of TSource)(IEnumerable(Of TSource), Func(Of TSource, Int32))
  spec.csharp:
  - uid: System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32})
    name: Max<TSource>
    fullName: System.Linq.Enumerable.Max<TSource>
  - name: (
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    fullName: <
  - name: TSource
    fullName: TSource
  - name: '>'
    fullName: '>'
  - name: ', '
    fullName: ', '
  - uid: System.Func`2
    name: Func
    fullName: System.Func
    isExternal: true
  - name: <
    fullName: <
  - name: TSource
    fullName: TSource
  - name: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    fullName: System.Int32
    isExternal: true
  - name: '>'
    fullName: '>'
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32})
    name: Max(Of TSource)
    fullName: System.Linq.Enumerable.Max(Of TSource)
  - name: (
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - name: TSource
    fullName: TSource
  - name: )
    fullName: )
  - name: ', '
    fullName: ', '
  - uid: System.Func`2
    name: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - name: TSource
    fullName: TSource
  - name: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    fullName: )
  - name: )
    fullName: )
  nameWithType: Enumerable.Max<TSource>(IEnumerable<TSource>, Func<TSource, Int32>)
  nameWithType.vb: Enumerable.Max(Of TSource)(IEnumerable(Of TSource), Func(Of TSource, Int32))
  commentId: M:System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32})
- uid: System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int64})
  isExternal: true
  name: Max<TSource>(IEnumerable<TSource>, Func<TSource, Int64>)
  fullName: System.Linq.Enumerable.Max<TSource>(System.Collections.Generic.IEnumerable<TSource>, System.Func<TSource, System.Int64>)
  fullname.vb: System.Linq.Enumerable.Max(Of TSource)(System.Collections.Generic.IEnumerable(Of TSource), System.Func(Of TSource, System.Int64))
  name.vb: Max(Of TSource)(IEnumerable(Of TSource), Func(Of TSource, Int64))
  spec.csharp:
  - uid: System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int64})
    name: Max<TSource>
    fullName: System.Linq.Enumerable.Max<TSource>
  - name: (
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    fullName: <
  - name: TSource
    fullName: TSource
  - name: '>'
    fullName: '>'
  - name: ', '
    fullName: ', '
  - uid: System.Func`2
    name: Func
    fullName: System.Func
    isExternal: true
  - name: <
    fullName: <
  - name: TSource
    fullName: TSource
  - name: ', '
    fullName: ', '
  - uid: System.Int64
    name: Int64
    fullName: System.Int64
    isExternal: true
  - name: '>'
    fullName: '>'
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int64})
    name: Max(Of TSource)
    fullName: System.Linq.Enumerable.Max(Of TSource)
  - name: (
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - name: TSource
    fullName: TSource
  - name: )
    fullName: )
  - name: ', '
    fullName: ', '
  - uid: System.Func`2
    name: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - name: TSource
    fullName: TSource
  - name: ', '
    fullName: ', '
  - uid: System.Int64
    name: Int64
    fullName: System.Int64
    isExternal: true
  - name: )
    fullName: )
  - name: )
    fullName: )
  nameWithType: Enumerable.Max<TSource>(IEnumerable<TSource>, Func<TSource, Int64>)
  nameWithType.vb: Enumerable.Max(Of TSource)(IEnumerable(Of TSource), Func(Of TSource, Int64))
  commentId: M:System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int64})
- uid: System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Decimal}})
  isExternal: true
  name: Max<TSource>(IEnumerable<TSource>, Func<TSource, Nullable<Decimal>>)
  fullName: System.Linq.Enumerable.Max<TSource>(System.Collections.Generic.IEnumerable<TSource>, System.Func<TSource, System.Nullable<System.Decimal>>)
  fullname.vb: System.Linq.Enumerable.Max(Of TSource)(System.Collections.Generic.IEnumerable(Of TSource), System.Func(Of TSource, System.Nullable(Of System.Decimal)))
  name.vb: Max(Of TSource)(IEnumerable(Of TSource), Func(Of TSource, Nullable(Of Decimal)))
  spec.csharp:
  - uid: System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Decimal}})
    name: Max<TSource>
    fullName: System.Linq.Enumerable.Max<TSource>
  - name: (
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    fullName: <
  - name: TSource
    fullName: TSource
  - name: '>'
    fullName: '>'
  - name: ', '
    fullName: ', '
  - uid: System.Func`2
    name: Func
    fullName: System.Func
    isExternal: true
  - name: <
    fullName: <
  - name: TSource
    fullName: TSource
  - name: ', '
    fullName: ', '
  - uid: System.Nullable`1
    name: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    fullName: <
  - uid: System.Decimal
    name: Decimal
    fullName: System.Decimal
    isExternal: true
  - name: '>'
    fullName: '>'
  - name: '>'
    fullName: '>'
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Decimal}})
    name: Max(Of TSource)
    fullName: System.Linq.Enumerable.Max(Of TSource)
  - name: (
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - name: TSource
    fullName: TSource
  - name: )
    fullName: )
  - name: ', '
    fullName: ', '
  - uid: System.Func`2
    name: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - name: TSource
    fullName: TSource
  - name: ', '
    fullName: ', '
  - uid: System.Nullable`1
    name: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - uid: System.Decimal
    name: Decimal
    fullName: System.Decimal
    isExternal: true
  - name: )
    fullName: )
  - name: )
    fullName: )
  - name: )
    fullName: )
  nameWithType: Enumerable.Max<TSource>(IEnumerable<TSource>, Func<TSource, Nullable<Decimal>>)
  nameWithType.vb: Enumerable.Max(Of TSource)(IEnumerable(Of TSource), Func(Of TSource, Nullable(Of Decimal)))
  commentId: M:System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Decimal}})
- uid: System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Double}})
  isExternal: true
  name: Max<TSource>(IEnumerable<TSource>, Func<TSource, Nullable<Double>>)
  fullName: System.Linq.Enumerable.Max<TSource>(System.Collections.Generic.IEnumerable<TSource>, System.Func<TSource, System.Nullable<System.Double>>)
  fullname.vb: System.Linq.Enumerable.Max(Of TSource)(System.Collections.Generic.IEnumerable(Of TSource), System.Func(Of TSource, System.Nullable(Of System.Double)))
  name.vb: Max(Of TSource)(IEnumerable(Of TSource), Func(Of TSource, Nullable(Of Double)))
  spec.csharp:
  - uid: System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Double}})
    name: Max<TSource>
    fullName: System.Linq.Enumerable.Max<TSource>
  - name: (
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    fullName: <
  - name: TSource
    fullName: TSource
  - name: '>'
    fullName: '>'
  - name: ', '
    fullName: ', '
  - uid: System.Func`2
    name: Func
    fullName: System.Func
    isExternal: true
  - name: <
    fullName: <
  - name: TSource
    fullName: TSource
  - name: ', '
    fullName: ', '
  - uid: System.Nullable`1
    name: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    fullName: <
  - uid: System.Double
    name: Double
    fullName: System.Double
    isExternal: true
  - name: '>'
    fullName: '>'
  - name: '>'
    fullName: '>'
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Double}})
    name: Max(Of TSource)
    fullName: System.Linq.Enumerable.Max(Of TSource)
  - name: (
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - name: TSource
    fullName: TSource
  - name: )
    fullName: )
  - name: ', '
    fullName: ', '
  - uid: System.Func`2
    name: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - name: TSource
    fullName: TSource
  - name: ', '
    fullName: ', '
  - uid: System.Nullable`1
    name: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - uid: System.Double
    name: Double
    fullName: System.Double
    isExternal: true
  - name: )
    fullName: )
  - name: )
    fullName: )
  - name: )
    fullName: )
  nameWithType: Enumerable.Max<TSource>(IEnumerable<TSource>, Func<TSource, Nullable<Double>>)
  nameWithType.vb: Enumerable.Max(Of TSource)(IEnumerable(Of TSource), Func(Of TSource, Nullable(Of Double)))
  commentId: M:System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Double}})
- uid: System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Int32}})
  isExternal: true
  name: Max<TSource>(IEnumerable<TSource>, Func<TSource, Nullable<Int32>>)
  fullName: System.Linq.Enumerable.Max<TSource>(System.Collections.Generic.IEnumerable<TSource>, System.Func<TSource, System.Nullable<System.Int32>>)
  fullname.vb: System.Linq.Enumerable.Max(Of TSource)(System.Collections.Generic.IEnumerable(Of TSource), System.Func(Of TSource, System.Nullable(Of System.Int32)))
  name.vb: Max(Of TSource)(IEnumerable(Of TSource), Func(Of TSource, Nullable(Of Int32)))
  spec.csharp:
  - uid: System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Int32}})
    name: Max<TSource>
    fullName: System.Linq.Enumerable.Max<TSource>
  - name: (
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    fullName: <
  - name: TSource
    fullName: TSource
  - name: '>'
    fullName: '>'
  - name: ', '
    fullName: ', '
  - uid: System.Func`2
    name: Func
    fullName: System.Func
    isExternal: true
  - name: <
    fullName: <
  - name: TSource
    fullName: TSource
  - name: ', '
    fullName: ', '
  - uid: System.Nullable`1
    name: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    fullName: <
  - uid: System.Int32
    name: Int32
    fullName: System.Int32
    isExternal: true
  - name: '>'
    fullName: '>'
  - name: '>'
    fullName: '>'
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Int32}})
    name: Max(Of TSource)
    fullName: System.Linq.Enumerable.Max(Of TSource)
  - name: (
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - name: TSource
    fullName: TSource
  - name: )
    fullName: )
  - name: ', '
    fullName: ', '
  - uid: System.Func`2
    name: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - name: TSource
    fullName: TSource
  - name: ', '
    fullName: ', '
  - uid: System.Nullable`1
    name: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - uid: System.Int32
    name: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    fullName: )
  - name: )
    fullName: )
  - name: )
    fullName: )
  nameWithType: Enumerable.Max<TSource>(IEnumerable<TSource>, Func<TSource, Nullable<Int32>>)
  nameWithType.vb: Enumerable.Max(Of TSource)(IEnumerable(Of TSource), Func(Of TSource, Nullable(Of Int32)))
  commentId: M:System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Int32}})
- uid: System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Int64}})
  isExternal: true
  name: Max<TSource>(IEnumerable<TSource>, Func<TSource, Nullable<Int64>>)
  fullName: System.Linq.Enumerable.Max<TSource>(System.Collections.Generic.IEnumerable<TSource>, System.Func<TSource, System.Nullable<System.Int64>>)
  fullname.vb: System.Linq.Enumerable.Max(Of TSource)(System.Collections.Generic.IEnumerable(Of TSource), System.Func(Of TSource, System.Nullable(Of System.Int64)))
  name.vb: Max(Of TSource)(IEnumerable(Of TSource), Func(Of TSource, Nullable(Of Int64)))
  spec.csharp:
  - uid: System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Int64}})
    name: Max<TSource>
    fullName: System.Linq.Enumerable.Max<TSource>
  - name: (
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    fullName: <
  - name: TSource
    fullName: TSource
  - name: '>'
    fullName: '>'
  - name: ', '
    fullName: ', '
  - uid: System.Func`2
    name: Func
    fullName: System.Func
    isExternal: true
  - name: <
    fullName: <
  - name: TSource
    fullName: TSource
  - name: ', '
    fullName: ', '
  - uid: System.Nullable`1
    name: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    fullName: <
  - uid: System.Int64
    name: Int64
    fullName: System.Int64
    isExternal: true
  - name: '>'
    fullName: '>'
  - name: '>'
    fullName: '>'
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Int64}})
    name: Max(Of TSource)
    fullName: System.Linq.Enumerable.Max(Of TSource)
  - name: (
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - name: TSource
    fullName: TSource
  - name: )
    fullName: )
  - name: ', '
    fullName: ', '
  - uid: System.Func`2
    name: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - name: TSource
    fullName: TSource
  - name: ', '
    fullName: ', '
  - uid: System.Nullable`1
    name: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - uid: System.Int64
    name: Int64
    fullName: System.Int64
    isExternal: true
  - name: )
    fullName: )
  - name: )
    fullName: )
  - name: )
    fullName: )
  nameWithType: Enumerable.Max<TSource>(IEnumerable<TSource>, Func<TSource, Nullable<Int64>>)
  nameWithType.vb: Enumerable.Max(Of TSource)(IEnumerable(Of TSource), Func(Of TSource, Nullable(Of Int64)))
  commentId: M:System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Int64}})
- uid: System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Single}})
  isExternal: true
  name: Max<TSource>(IEnumerable<TSource>, Func<TSource, Nullable<Single>>)
  fullName: System.Linq.Enumerable.Max<TSource>(System.Collections.Generic.IEnumerable<TSource>, System.Func<TSource, System.Nullable<System.Single>>)
  fullname.vb: System.Linq.Enumerable.Max(Of TSource)(System.Collections.Generic.IEnumerable(Of TSource), System.Func(Of TSource, System.Nullable(Of System.Single)))
  name.vb: Max(Of TSource)(IEnumerable(Of TSource), Func(Of TSource, Nullable(Of Single)))
  spec.csharp:
  - uid: System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Single}})
    name: Max<TSource>
    fullName: System.Linq.Enumerable.Max<TSource>
  - name: (
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    fullName: <
  - name: TSource
    fullName: TSource
  - name: '>'
    fullName: '>'
  - name: ', '
    fullName: ', '
  - uid: System.Func`2
    name: Func
    fullName: System.Func
    isExternal: true
  - name: <
    fullName: <
  - name: TSource
    fullName: TSource
  - name: ', '
    fullName: ', '
  - uid: System.Nullable`1
    name: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    fullName: <
  - uid: System.Single
    name: Single
    fullName: System.Single
    isExternal: true
  - name: '>'
    fullName: '>'
  - name: '>'
    fullName: '>'
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Single}})
    name: Max(Of TSource)
    fullName: System.Linq.Enumerable.Max(Of TSource)
  - name: (
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - name: TSource
    fullName: TSource
  - name: )
    fullName: )
  - name: ', '
    fullName: ', '
  - uid: System.Func`2
    name: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - name: TSource
    fullName: TSource
  - name: ', '
    fullName: ', '
  - uid: System.Nullable`1
    name: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - uid: System.Single
    name: Single
    fullName: System.Single
    isExternal: true
  - name: )
    fullName: )
  - name: )
    fullName: )
  - name: )
    fullName: )
  nameWithType: Enumerable.Max<TSource>(IEnumerable<TSource>, Func<TSource, Nullable<Single>>)
  nameWithType.vb: Enumerable.Max(Of TSource)(IEnumerable(Of TSource), Func(Of TSource, Nullable(Of Single)))
  commentId: M:System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Single}})
- uid: System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Single})
  isExternal: true
  name: Max<TSource>(IEnumerable<TSource>, Func<TSource, Single>)
  fullName: System.Linq.Enumerable.Max<TSource>(System.Collections.Generic.IEnumerable<TSource>, System.Func<TSource, System.Single>)
  fullname.vb: System.Linq.Enumerable.Max(Of TSource)(System.Collections.Generic.IEnumerable(Of TSource), System.Func(Of TSource, System.Single))
  name.vb: Max(Of TSource)(IEnumerable(Of TSource), Func(Of TSource, Single))
  spec.csharp:
  - uid: System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Single})
    name: Max<TSource>
    fullName: System.Linq.Enumerable.Max<TSource>
  - name: (
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    fullName: <
  - name: TSource
    fullName: TSource
  - name: '>'
    fullName: '>'
  - name: ', '
    fullName: ', '
  - uid: System.Func`2
    name: Func
    fullName: System.Func
    isExternal: true
  - name: <
    fullName: <
  - name: TSource
    fullName: TSource
  - name: ', '
    fullName: ', '
  - uid: System.Single
    name: Single
    fullName: System.Single
    isExternal: true
  - name: '>'
    fullName: '>'
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Single})
    name: Max(Of TSource)
    fullName: System.Linq.Enumerable.Max(Of TSource)
  - name: (
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - name: TSource
    fullName: TSource
  - name: )
    fullName: )
  - name: ', '
    fullName: ', '
  - uid: System.Func`2
    name: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - name: TSource
    fullName: TSource
  - name: ', '
    fullName: ', '
  - uid: System.Single
    name: Single
    fullName: System.Single
    isExternal: true
  - name: )
    fullName: )
  - name: )
    fullName: )
  nameWithType: Enumerable.Max<TSource>(IEnumerable<TSource>, Func<TSource, Single>)
  nameWithType.vb: Enumerable.Max(Of TSource)(IEnumerable(Of TSource), Func(Of TSource, Single))
  commentId: M:System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Single})
- uid: System.Linq.Enumerable.Max``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})
  isExternal: true
  name: Max<TSource, TResult>(IEnumerable<TSource>, Func<TSource, TResult>)
  fullName: System.Linq.Enumerable.Max<TSource, TResult>(System.Collections.Generic.IEnumerable<TSource>, System.Func<TSource, TResult>)
  fullname.vb: System.Linq.Enumerable.Max(Of TSource, TResult)(System.Collections.Generic.IEnumerable(Of TSource), System.Func(Of TSource, TResult))
  name.vb: Max(Of TSource, TResult)(IEnumerable(Of TSource), Func(Of TSource, TResult))
  spec.csharp:
  - uid: System.Linq.Enumerable.Max``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})
    name: Max<TSource, TResult>
    fullName: System.Linq.Enumerable.Max<TSource, TResult>
  - name: (
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    fullName: <
  - name: TSource
    fullName: TSource
  - name: '>'
    fullName: '>'
  - name: ', '
    fullName: ', '
  - uid: System.Func`2
    name: Func
    fullName: System.Func
    isExternal: true
  - name: <
    fullName: <
  - name: TSource
    fullName: TSource
  - name: ', '
    fullName: ', '
  - name: TResult
    fullName: TResult
  - name: '>'
    fullName: '>'
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Linq.Enumerable.Max``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})
    name: Max(Of TSource, TResult)
    fullName: System.Linq.Enumerable.Max(Of TSource, TResult)
  - name: (
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - name: TSource
    fullName: TSource
  - name: )
    fullName: )
  - name: ', '
    fullName: ', '
  - uid: System.Func`2
    name: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - name: TSource
    fullName: TSource
  - name: ', '
    fullName: ', '
  - name: TResult
    fullName: TResult
  - name: )
    fullName: )
  - name: )
    fullName: )
  nameWithType: Enumerable.Max<TSource, TResult>(IEnumerable<TSource>, Func<TSource, TResult>)
  nameWithType.vb: Enumerable.Max(Of TSource, TResult)(IEnumerable(Of TSource), Func(Of TSource, TResult))
  commentId: M:System.Linq.Enumerable.Max``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})
- uid: System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0})
  isExternal: true
  name: Min<TSource>(IEnumerable<TSource>)
  fullName: System.Linq.Enumerable.Min<TSource>(System.Collections.Generic.IEnumerable<TSource>)
  fullname.vb: System.Linq.Enumerable.Min(Of TSource)(System.Collections.Generic.IEnumerable(Of TSource))
  name.vb: Min(Of TSource)(IEnumerable(Of TSource))
  spec.csharp:
  - uid: System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0})
    name: Min<TSource>
    fullName: System.Linq.Enumerable.Min<TSource>
  - name: (
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    fullName: <
  - name: TSource
    fullName: TSource
  - name: '>'
    fullName: '>'
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0})
    name: Min(Of TSource)
    fullName: System.Linq.Enumerable.Min(Of TSource)
  - name: (
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - name: TSource
    fullName: TSource
  - name: )
    fullName: )
  - name: )
    fullName: )
  nameWithType: Enumerable.Min<TSource>(IEnumerable<TSource>)
  nameWithType.vb: Enumerable.Min(Of TSource)(IEnumerable(Of TSource))
  commentId: M:System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0})
- uid: System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Decimal})
  isExternal: true
  name: Min<TSource>(IEnumerable<TSource>, Func<TSource, Decimal>)
  fullName: System.Linq.Enumerable.Min<TSource>(System.Collections.Generic.IEnumerable<TSource>, System.Func<TSource, System.Decimal>)
  fullname.vb: System.Linq.Enumerable.Min(Of TSource)(System.Collections.Generic.IEnumerable(Of TSource), System.Func(Of TSource, System.Decimal))
  name.vb: Min(Of TSource)(IEnumerable(Of TSource), Func(Of TSource, Decimal))
  spec.csharp:
  - uid: System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Decimal})
    name: Min<TSource>
    fullName: System.Linq.Enumerable.Min<TSource>
  - name: (
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    fullName: <
  - name: TSource
    fullName: TSource
  - name: '>'
    fullName: '>'
  - name: ', '
    fullName: ', '
  - uid: System.Func`2
    name: Func
    fullName: System.Func
    isExternal: true
  - name: <
    fullName: <
  - name: TSource
    fullName: TSource
  - name: ', '
    fullName: ', '
  - uid: System.Decimal
    name: Decimal
    fullName: System.Decimal
    isExternal: true
  - name: '>'
    fullName: '>'
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Decimal})
    name: Min(Of TSource)
    fullName: System.Linq.Enumerable.Min(Of TSource)
  - name: (
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - name: TSource
    fullName: TSource
  - name: )
    fullName: )
  - name: ', '
    fullName: ', '
  - uid: System.Func`2
    name: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - name: TSource
    fullName: TSource
  - name: ', '
    fullName: ', '
  - uid: System.Decimal
    name: Decimal
    fullName: System.Decimal
    isExternal: true
  - name: )
    fullName: )
  - name: )
    fullName: )
  nameWithType: Enumerable.Min<TSource>(IEnumerable<TSource>, Func<TSource, Decimal>)
  nameWithType.vb: Enumerable.Min(Of TSource)(IEnumerable(Of TSource), Func(Of TSource, Decimal))
  commentId: M:System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Decimal})
- uid: System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Double})
  isExternal: true
  name: Min<TSource>(IEnumerable<TSource>, Func<TSource, Double>)
  fullName: System.Linq.Enumerable.Min<TSource>(System.Collections.Generic.IEnumerable<TSource>, System.Func<TSource, System.Double>)
  fullname.vb: System.Linq.Enumerable.Min(Of TSource)(System.Collections.Generic.IEnumerable(Of TSource), System.Func(Of TSource, System.Double))
  name.vb: Min(Of TSource)(IEnumerable(Of TSource), Func(Of TSource, Double))
  spec.csharp:
  - uid: System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Double})
    name: Min<TSource>
    fullName: System.Linq.Enumerable.Min<TSource>
  - name: (
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    fullName: <
  - name: TSource
    fullName: TSource
  - name: '>'
    fullName: '>'
  - name: ', '
    fullName: ', '
  - uid: System.Func`2
    name: Func
    fullName: System.Func
    isExternal: true
  - name: <
    fullName: <
  - name: TSource
    fullName: TSource
  - name: ', '
    fullName: ', '
  - uid: System.Double
    name: Double
    fullName: System.Double
    isExternal: true
  - name: '>'
    fullName: '>'
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Double})
    name: Min(Of TSource)
    fullName: System.Linq.Enumerable.Min(Of TSource)
  - name: (
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - name: TSource
    fullName: TSource
  - name: )
    fullName: )
  - name: ', '
    fullName: ', '
  - uid: System.Func`2
    name: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - name: TSource
    fullName: TSource
  - name: ', '
    fullName: ', '
  - uid: System.Double
    name: Double
    fullName: System.Double
    isExternal: true
  - name: )
    fullName: )
  - name: )
    fullName: )
  nameWithType: Enumerable.Min<TSource>(IEnumerable<TSource>, Func<TSource, Double>)
  nameWithType.vb: Enumerable.Min(Of TSource)(IEnumerable(Of TSource), Func(Of TSource, Double))
  commentId: M:System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Double})
- uid: System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32})
  isExternal: true
  name: Min<TSource>(IEnumerable<TSource>, Func<TSource, Int32>)
  fullName: System.Linq.Enumerable.Min<TSource>(System.Collections.Generic.IEnumerable<TSource>, System.Func<TSource, System.Int32>)
  fullname.vb: System.Linq.Enumerable.Min(Of TSource)(System.Collections.Generic.IEnumerable(Of TSource), System.Func(Of TSource, System.Int32))
  name.vb: Min(Of TSource)(IEnumerable(Of TSource), Func(Of TSource, Int32))
  spec.csharp:
  - uid: System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32})
    name: Min<TSource>
    fullName: System.Linq.Enumerable.Min<TSource>
  - name: (
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    fullName: <
  - name: TSource
    fullName: TSource
  - name: '>'
    fullName: '>'
  - name: ', '
    fullName: ', '
  - uid: System.Func`2
    name: Func
    fullName: System.Func
    isExternal: true
  - name: <
    fullName: <
  - name: TSource
    fullName: TSource
  - name: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    fullName: System.Int32
    isExternal: true
  - name: '>'
    fullName: '>'
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32})
    name: Min(Of TSource)
    fullName: System.Linq.Enumerable.Min(Of TSource)
  - name: (
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - name: TSource
    fullName: TSource
  - name: )
    fullName: )
  - name: ', '
    fullName: ', '
  - uid: System.Func`2
    name: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - name: TSource
    fullName: TSource
  - name: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    fullName: )
  - name: )
    fullName: )
  nameWithType: Enumerable.Min<TSource>(IEnumerable<TSource>, Func<TSource, Int32>)
  nameWithType.vb: Enumerable.Min(Of TSource)(IEnumerable(Of TSource), Func(Of TSource, Int32))
  commentId: M:System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32})
- uid: System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int64})
  isExternal: true
  name: Min<TSource>(IEnumerable<TSource>, Func<TSource, Int64>)
  fullName: System.Linq.Enumerable.Min<TSource>(System.Collections.Generic.IEnumerable<TSource>, System.Func<TSource, System.Int64>)
  fullname.vb: System.Linq.Enumerable.Min(Of TSource)(System.Collections.Generic.IEnumerable(Of TSource), System.Func(Of TSource, System.Int64))
  name.vb: Min(Of TSource)(IEnumerable(Of TSource), Func(Of TSource, Int64))
  spec.csharp:
  - uid: System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int64})
    name: Min<TSource>
    fullName: System.Linq.Enumerable.Min<TSource>
  - name: (
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    fullName: <
  - name: TSource
    fullName: TSource
  - name: '>'
    fullName: '>'
  - name: ', '
    fullName: ', '
  - uid: System.Func`2
    name: Func
    fullName: System.Func
    isExternal: true
  - name: <
    fullName: <
  - name: TSource
    fullName: TSource
  - name: ', '
    fullName: ', '
  - uid: System.Int64
    name: Int64
    fullName: System.Int64
    isExternal: true
  - name: '>'
    fullName: '>'
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int64})
    name: Min(Of TSource)
    fullName: System.Linq.Enumerable.Min(Of TSource)
  - name: (
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - name: TSource
    fullName: TSource
  - name: )
    fullName: )
  - name: ', '
    fullName: ', '
  - uid: System.Func`2
    name: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - name: TSource
    fullName: TSource
  - name: ', '
    fullName: ', '
  - uid: System.Int64
    name: Int64
    fullName: System.Int64
    isExternal: true
  - name: )
    fullName: )
  - name: )
    fullName: )
  nameWithType: Enumerable.Min<TSource>(IEnumerable<TSource>, Func<TSource, Int64>)
  nameWithType.vb: Enumerable.Min(Of TSource)(IEnumerable(Of TSource), Func(Of TSource, Int64))
  commentId: M:System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int64})
- uid: System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Decimal}})
  isExternal: true
  name: Min<TSource>(IEnumerable<TSource>, Func<TSource, Nullable<Decimal>>)
  fullName: System.Linq.Enumerable.Min<TSource>(System.Collections.Generic.IEnumerable<TSource>, System.Func<TSource, System.Nullable<System.Decimal>>)
  fullname.vb: System.Linq.Enumerable.Min(Of TSource)(System.Collections.Generic.IEnumerable(Of TSource), System.Func(Of TSource, System.Nullable(Of System.Decimal)))
  name.vb: Min(Of TSource)(IEnumerable(Of TSource), Func(Of TSource, Nullable(Of Decimal)))
  spec.csharp:
  - uid: System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Decimal}})
    name: Min<TSource>
    fullName: System.Linq.Enumerable.Min<TSource>
  - name: (
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    fullName: <
  - name: TSource
    fullName: TSource
  - name: '>'
    fullName: '>'
  - name: ', '
    fullName: ', '
  - uid: System.Func`2
    name: Func
    fullName: System.Func
    isExternal: true
  - name: <
    fullName: <
  - name: TSource
    fullName: TSource
  - name: ', '
    fullName: ', '
  - uid: System.Nullable`1
    name: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    fullName: <
  - uid: System.Decimal
    name: Decimal
    fullName: System.Decimal
    isExternal: true
  - name: '>'
    fullName: '>'
  - name: '>'
    fullName: '>'
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Decimal}})
    name: Min(Of TSource)
    fullName: System.Linq.Enumerable.Min(Of TSource)
  - name: (
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - name: TSource
    fullName: TSource
  - name: )
    fullName: )
  - name: ', '
    fullName: ', '
  - uid: System.Func`2
    name: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - name: TSource
    fullName: TSource
  - name: ', '
    fullName: ', '
  - uid: System.Nullable`1
    name: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - uid: System.Decimal
    name: Decimal
    fullName: System.Decimal
    isExternal: true
  - name: )
    fullName: )
  - name: )
    fullName: )
  - name: )
    fullName: )
  nameWithType: Enumerable.Min<TSource>(IEnumerable<TSource>, Func<TSource, Nullable<Decimal>>)
  nameWithType.vb: Enumerable.Min(Of TSource)(IEnumerable(Of TSource), Func(Of TSource, Nullable(Of Decimal)))
  commentId: M:System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Decimal}})
- uid: System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Double}})
  isExternal: true
  name: Min<TSource>(IEnumerable<TSource>, Func<TSource, Nullable<Double>>)
  fullName: System.Linq.Enumerable.Min<TSource>(System.Collections.Generic.IEnumerable<TSource>, System.Func<TSource, System.Nullable<System.Double>>)
  fullname.vb: System.Linq.Enumerable.Min(Of TSource)(System.Collections.Generic.IEnumerable(Of TSource), System.Func(Of TSource, System.Nullable(Of System.Double)))
  name.vb: Min(Of TSource)(IEnumerable(Of TSource), Func(Of TSource, Nullable(Of Double)))
  spec.csharp:
  - uid: System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Double}})
    name: Min<TSource>
    fullName: System.Linq.Enumerable.Min<TSource>
  - name: (
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    fullName: <
  - name: TSource
    fullName: TSource
  - name: '>'
    fullName: '>'
  - name: ', '
    fullName: ', '
  - uid: System.Func`2
    name: Func
    fullName: System.Func
    isExternal: true
  - name: <
    fullName: <
  - name: TSource
    fullName: TSource
  - name: ', '
    fullName: ', '
  - uid: System.Nullable`1
    name: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    fullName: <
  - uid: System.Double
    name: Double
    fullName: System.Double
    isExternal: true
  - name: '>'
    fullName: '>'
  - name: '>'
    fullName: '>'
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Double}})
    name: Min(Of TSource)
    fullName: System.Linq.Enumerable.Min(Of TSource)
  - name: (
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - name: TSource
    fullName: TSource
  - name: )
    fullName: )
  - name: ', '
    fullName: ', '
  - uid: System.Func`2
    name: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - name: TSource
    fullName: TSource
  - name: ', '
    fullName: ', '
  - uid: System.Nullable`1
    name: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - uid: System.Double
    name: Double
    fullName: System.Double
    isExternal: true
  - name: )
    fullName: )
  - name: )
    fullName: )
  - name: )
    fullName: )
  nameWithType: Enumerable.Min<TSource>(IEnumerable<TSource>, Func<TSource, Nullable<Double>>)
  nameWithType.vb: Enumerable.Min(Of TSource)(IEnumerable(Of TSource), Func(Of TSource, Nullable(Of Double)))
  commentId: M:System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Double}})
- uid: System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Int32}})
  isExternal: true
  name: Min<TSource>(IEnumerable<TSource>, Func<TSource, Nullable<Int32>>)
  fullName: System.Linq.Enumerable.Min<TSource>(System.Collections.Generic.IEnumerable<TSource>, System.Func<TSource, System.Nullable<System.Int32>>)
  fullname.vb: System.Linq.Enumerable.Min(Of TSource)(System.Collections.Generic.IEnumerable(Of TSource), System.Func(Of TSource, System.Nullable(Of System.Int32)))
  name.vb: Min(Of TSource)(IEnumerable(Of TSource), Func(Of TSource, Nullable(Of Int32)))
  spec.csharp:
  - uid: System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Int32}})
    name: Min<TSource>
    fullName: System.Linq.Enumerable.Min<TSource>
  - name: (
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    fullName: <
  - name: TSource
    fullName: TSource
  - name: '>'
    fullName: '>'
  - name: ', '
    fullName: ', '
  - uid: System.Func`2
    name: Func
    fullName: System.Func
    isExternal: true
  - name: <
    fullName: <
  - name: TSource
    fullName: TSource
  - name: ', '
    fullName: ', '
  - uid: System.Nullable`1
    name: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    fullName: <
  - uid: System.Int32
    name: Int32
    fullName: System.Int32
    isExternal: true
  - name: '>'
    fullName: '>'
  - name: '>'
    fullName: '>'
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Int32}})
    name: Min(Of TSource)
    fullName: System.Linq.Enumerable.Min(Of TSource)
  - name: (
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - name: TSource
    fullName: TSource
  - name: )
    fullName: )
  - name: ', '
    fullName: ', '
  - uid: System.Func`2
    name: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - name: TSource
    fullName: TSource
  - name: ', '
    fullName: ', '
  - uid: System.Nullable`1
    name: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - uid: System.Int32
    name: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    fullName: )
  - name: )
    fullName: )
  - name: )
    fullName: )
  nameWithType: Enumerable.Min<TSource>(IEnumerable<TSource>, Func<TSource, Nullable<Int32>>)
  nameWithType.vb: Enumerable.Min(Of TSource)(IEnumerable(Of TSource), Func(Of TSource, Nullable(Of Int32)))
  commentId: M:System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Int32}})
- uid: System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Int64}})
  isExternal: true
  name: Min<TSource>(IEnumerable<TSource>, Func<TSource, Nullable<Int64>>)
  fullName: System.Linq.Enumerable.Min<TSource>(System.Collections.Generic.IEnumerable<TSource>, System.Func<TSource, System.Nullable<System.Int64>>)
  fullname.vb: System.Linq.Enumerable.Min(Of TSource)(System.Collections.Generic.IEnumerable(Of TSource), System.Func(Of TSource, System.Nullable(Of System.Int64)))
  name.vb: Min(Of TSource)(IEnumerable(Of TSource), Func(Of TSource, Nullable(Of Int64)))
  spec.csharp:
  - uid: System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Int64}})
    name: Min<TSource>
    fullName: System.Linq.Enumerable.Min<TSource>
  - name: (
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    fullName: <
  - name: TSource
    fullName: TSource
  - name: '>'
    fullName: '>'
  - name: ', '
    fullName: ', '
  - uid: System.Func`2
    name: Func
    fullName: System.Func
    isExternal: true
  - name: <
    fullName: <
  - name: TSource
    fullName: TSource
  - name: ', '
    fullName: ', '
  - uid: System.Nullable`1
    name: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    fullName: <
  - uid: System.Int64
    name: Int64
    fullName: System.Int64
    isExternal: true
  - name: '>'
    fullName: '>'
  - name: '>'
    fullName: '>'
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Int64}})
    name: Min(Of TSource)
    fullName: System.Linq.Enumerable.Min(Of TSource)
  - name: (
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - name: TSource
    fullName: TSource
  - name: )
    fullName: )
  - name: ', '
    fullName: ', '
  - uid: System.Func`2
    name: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - name: TSource
    fullName: TSource
  - name: ', '
    fullName: ', '
  - uid: System.Nullable`1
    name: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - uid: System.Int64
    name: Int64
    fullName: System.Int64
    isExternal: true
  - name: )
    fullName: )
  - name: )
    fullName: )
  - name: )
    fullName: )
  nameWithType: Enumerable.Min<TSource>(IEnumerable<TSource>, Func<TSource, Nullable<Int64>>)
  nameWithType.vb: Enumerable.Min(Of TSource)(IEnumerable(Of TSource), Func(Of TSource, Nullable(Of Int64)))
  commentId: M:System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Int64}})
- uid: System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Single}})
  isExternal: true
  name: Min<TSource>(IEnumerable<TSource>, Func<TSource, Nullable<Single>>)
  fullName: System.Linq.Enumerable.Min<TSource>(System.Collections.Generic.IEnumerable<TSource>, System.Func<TSource, System.Nullable<System.Single>>)
  fullname.vb: System.Linq.Enumerable.Min(Of TSource)(System.Collections.Generic.IEnumerable(Of TSource), System.Func(Of TSource, System.Nullable(Of System.Single)))
  name.vb: Min(Of TSource)(IEnumerable(Of TSource), Func(Of TSource, Nullable(Of Single)))
  spec.csharp:
  - uid: System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Single}})
    name: Min<TSource>
    fullName: System.Linq.Enumerable.Min<TSource>
  - name: (
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    fullName: <
  - name: TSource
    fullName: TSource
  - name: '>'
    fullName: '>'
  - name: ', '
    fullName: ', '
  - uid: System.Func`2
    name: Func
    fullName: System.Func
    isExternal: true
  - name: <
    fullName: <
  - name: TSource
    fullName: TSource
  - name: ', '
    fullName: ', '
  - uid: System.Nullable`1
    name: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    fullName: <
  - uid: System.Single
    name: Single
    fullName: System.Single
    isExternal: true
  - name: '>'
    fullName: '>'
  - name: '>'
    fullName: '>'
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Single}})
    name: Min(Of TSource)
    fullName: System.Linq.Enumerable.Min(Of TSource)
  - name: (
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - name: TSource
    fullName: TSource
  - name: )
    fullName: )
  - name: ', '
    fullName: ', '
  - uid: System.Func`2
    name: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - name: TSource
    fullName: TSource
  - name: ', '
    fullName: ', '
  - uid: System.Nullable`1
    name: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - uid: System.Single
    name: Single
    fullName: System.Single
    isExternal: true
  - name: )
    fullName: )
  - name: )
    fullName: )
  - name: )
    fullName: )
  nameWithType: Enumerable.Min<TSource>(IEnumerable<TSource>, Func<TSource, Nullable<Single>>)
  nameWithType.vb: Enumerable.Min(Of TSource)(IEnumerable(Of TSource), Func(Of TSource, Nullable(Of Single)))
  commentId: M:System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Single}})
- uid: System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Single})
  isExternal: true
  name: Min<TSource>(IEnumerable<TSource>, Func<TSource, Single>)
  fullName: System.Linq.Enumerable.Min<TSource>(System.Collections.Generic.IEnumerable<TSource>, System.Func<TSource, System.Single>)
  fullname.vb: System.Linq.Enumerable.Min(Of TSource)(System.Collections.Generic.IEnumerable(Of TSource), System.Func(Of TSource, System.Single))
  name.vb: Min(Of TSource)(IEnumerable(Of TSource), Func(Of TSource, Single))
  spec.csharp:
  - uid: System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Single})
    name: Min<TSource>
    fullName: System.Linq.Enumerable.Min<TSource>
  - name: (
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    fullName: <
  - name: TSource
    fullName: TSource
  - name: '>'
    fullName: '>'
  - name: ', '
    fullName: ', '
  - uid: System.Func`2
    name: Func
    fullName: System.Func
    isExternal: true
  - name: <
    fullName: <
  - name: TSource
    fullName: TSource
  - name: ', '
    fullName: ', '
  - uid: System.Single
    name: Single
    fullName: System.Single
    isExternal: true
  - name: '>'
    fullName: '>'
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Single})
    name: Min(Of TSource)
    fullName: System.Linq.Enumerable.Min(Of TSource)
  - name: (
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - name: TSource
    fullName: TSource
  - name: )
    fullName: )
  - name: ', '
    fullName: ', '
  - uid: System.Func`2
    name: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - name: TSource
    fullName: TSource
  - name: ', '
    fullName: ', '
  - uid: System.Single
    name: Single
    fullName: System.Single
    isExternal: true
  - name: )
    fullName: )
  - name: )
    fullName: )
  nameWithType: Enumerable.Min<TSource>(IEnumerable<TSource>, Func<TSource, Single>)
  nameWithType.vb: Enumerable.Min(Of TSource)(IEnumerable(Of TSource), Func(Of TSource, Single))
  commentId: M:System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Single})
- uid: System.Linq.Enumerable.Min``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})
  isExternal: true
  name: Min<TSource, TResult>(IEnumerable<TSource>, Func<TSource, TResult>)
  fullName: System.Linq.Enumerable.Min<TSource, TResult>(System.Collections.Generic.IEnumerable<TSource>, System.Func<TSource, TResult>)
  fullname.vb: System.Linq.Enumerable.Min(Of TSource, TResult)(System.Collections.Generic.IEnumerable(Of TSource), System.Func(Of TSource, TResult))
  name.vb: Min(Of TSource, TResult)(IEnumerable(Of TSource), Func(Of TSource, TResult))
  spec.csharp:
  - uid: System.Linq.Enumerable.Min``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})
    name: Min<TSource, TResult>
    fullName: System.Linq.Enumerable.Min<TSource, TResult>
  - name: (
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    fullName: <
  - name: TSource
    fullName: TSource
  - name: '>'
    fullName: '>'
  - name: ', '
    fullName: ', '
  - uid: System.Func`2
    name: Func
    fullName: System.Func
    isExternal: true
  - name: <
    fullName: <
  - name: TSource
    fullName: TSource
  - name: ', '
    fullName: ', '
  - name: TResult
    fullName: TResult
  - name: '>'
    fullName: '>'
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Linq.Enumerable.Min``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})
    name: Min(Of TSource, TResult)
    fullName: System.Linq.Enumerable.Min(Of TSource, TResult)
  - name: (
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - name: TSource
    fullName: TSource
  - name: )
    fullName: )
  - name: ', '
    fullName: ', '
  - uid: System.Func`2
    name: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - name: TSource
    fullName: TSource
  - name: ', '
    fullName: ', '
  - name: TResult
    fullName: TResult
  - name: )
    fullName: )
  - name: )
    fullName: )
  nameWithType: Enumerable.Min<TSource, TResult>(IEnumerable<TSource>, Func<TSource, TResult>)
  nameWithType.vb: Enumerable.Min(Of TSource, TResult)(IEnumerable(Of TSource), Func(Of TSource, TResult))
  commentId: M:System.Linq.Enumerable.Min``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})
- uid: System.Linq.Enumerable.OfType``1(System.Collections.IEnumerable)
  isExternal: true
  name: OfType<TResult>(IEnumerable)
  fullName: System.Linq.Enumerable.OfType<TResult>(System.Collections.IEnumerable)
  fullname.vb: System.Linq.Enumerable.OfType(Of TResult)(System.Collections.IEnumerable)
  name.vb: OfType(Of TResult)(IEnumerable)
  spec.csharp:
  - uid: System.Linq.Enumerable.OfType``1(System.Collections.IEnumerable)
    name: OfType<TResult>
    fullName: System.Linq.Enumerable.OfType<TResult>
  - name: (
    fullName: (
  - uid: System.Collections.IEnumerable
    name: IEnumerable
    fullName: System.Collections.IEnumerable
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Linq.Enumerable.OfType``1(System.Collections.IEnumerable)
    name: OfType(Of TResult)
    fullName: System.Linq.Enumerable.OfType(Of TResult)
  - name: (
    fullName: (
  - uid: System.Collections.IEnumerable
    name: IEnumerable
    fullName: System.Collections.IEnumerable
    isExternal: true
  - name: )
    fullName: )
  nameWithType: Enumerable.OfType<TResult>(IEnumerable)
  nameWithType.vb: Enumerable.OfType(Of TResult)(IEnumerable)
  commentId: M:System.Linq.Enumerable.OfType``1(System.Collections.IEnumerable)
- uid: System.Linq.Enumerable.OrderBy``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})
  isExternal: true
  name: OrderBy<TSource, TKey>(IEnumerable<TSource>, Func<TSource, TKey>)
  fullName: System.Linq.Enumerable.OrderBy<TSource, TKey>(System.Collections.Generic.IEnumerable<TSource>, System.Func<TSource, TKey>)
  fullname.vb: System.Linq.Enumerable.OrderBy(Of TSource, TKey)(System.Collections.Generic.IEnumerable(Of TSource), System.Func(Of TSource, TKey))
  name.vb: OrderBy(Of TSource, TKey)(IEnumerable(Of TSource), Func(Of TSource, TKey))
  spec.csharp:
  - uid: System.Linq.Enumerable.OrderBy``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})
    name: OrderBy<TSource, TKey>
    fullName: System.Linq.Enumerable.OrderBy<TSource, TKey>
  - name: (
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    fullName: <
  - name: TSource
    fullName: TSource
  - name: '>'
    fullName: '>'
  - name: ', '
    fullName: ', '
  - uid: System.Func`2
    name: Func
    fullName: System.Func
    isExternal: true
  - name: <
    fullName: <
  - name: TSource
    fullName: TSource
  - name: ', '
    fullName: ', '
  - name: TKey
    fullName: TKey
  - name: '>'
    fullName: '>'
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Linq.Enumerable.OrderBy``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})
    name: OrderBy(Of TSource, TKey)
    fullName: System.Linq.Enumerable.OrderBy(Of TSource, TKey)
  - name: (
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - name: TSource
    fullName: TSource
  - name: )
    fullName: )
  - name: ', '
    fullName: ', '
  - uid: System.Func`2
    name: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - name: TSource
    fullName: TSource
  - name: ', '
    fullName: ', '
  - name: TKey
    fullName: TKey
  - name: )
    fullName: )
  - name: )
    fullName: )
  nameWithType: Enumerable.OrderBy<TSource, TKey>(IEnumerable<TSource>, Func<TSource, TKey>)
  nameWithType.vb: Enumerable.OrderBy(Of TSource, TKey)(IEnumerable(Of TSource), Func(Of TSource, TKey))
  commentId: M:System.Linq.Enumerable.OrderBy``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})
- uid: System.Linq.Enumerable.OrderBy``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IComparer{``1})
  isExternal: true
  name: OrderBy<TSource, TKey>(IEnumerable<TSource>, Func<TSource, TKey>, IComparer<TKey>)
  fullName: System.Linq.Enumerable.OrderBy<TSource, TKey>(System.Collections.Generic.IEnumerable<TSource>, System.Func<TSource, TKey>, System.Collections.Generic.IComparer<TKey>)
  fullname.vb: System.Linq.Enumerable.OrderBy(Of TSource, TKey)(System.Collections.Generic.IEnumerable(Of TSource), System.Func(Of TSource, TKey), System.Collections.Generic.IComparer(Of TKey))
  name.vb: OrderBy(Of TSource, TKey)(IEnumerable(Of TSource), Func(Of TSource, TKey), IComparer(Of TKey))
  spec.csharp:
  - uid: System.Linq.Enumerable.OrderBy``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IComparer{``1})
    name: OrderBy<TSource, TKey>
    fullName: System.Linq.Enumerable.OrderBy<TSource, TKey>
  - name: (
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    fullName: <
  - name: TSource
    fullName: TSource
  - name: '>'
    fullName: '>'
  - name: ', '
    fullName: ', '
  - uid: System.Func`2
    name: Func
    fullName: System.Func
    isExternal: true
  - name: <
    fullName: <
  - name: TSource
    fullName: TSource
  - name: ', '
    fullName: ', '
  - name: TKey
    fullName: TKey
  - name: '>'
    fullName: '>'
  - name: ', '
    fullName: ', '
  - uid: System.Collections.Generic.IComparer`1
    name: IComparer
    fullName: System.Collections.Generic.IComparer
    isExternal: true
  - name: <
    fullName: <
  - name: TKey
    fullName: TKey
  - name: '>'
    fullName: '>'
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Linq.Enumerable.OrderBy``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IComparer{``1})
    name: OrderBy(Of TSource, TKey)
    fullName: System.Linq.Enumerable.OrderBy(Of TSource, TKey)
  - name: (
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - name: TSource
    fullName: TSource
  - name: )
    fullName: )
  - name: ', '
    fullName: ', '
  - uid: System.Func`2
    name: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - name: TSource
    fullName: TSource
  - name: ', '
    fullName: ', '
  - name: TKey
    fullName: TKey
  - name: )
    fullName: )
  - name: ', '
    fullName: ', '
  - uid: System.Collections.Generic.IComparer`1
    name: IComparer
    fullName: System.Collections.Generic.IComparer
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - name: TKey
    fullName: TKey
  - name: )
    fullName: )
  - name: )
    fullName: )
  nameWithType: Enumerable.OrderBy<TSource, TKey>(IEnumerable<TSource>, Func<TSource, TKey>, IComparer<TKey>)
  nameWithType.vb: Enumerable.OrderBy(Of TSource, TKey)(IEnumerable(Of TSource), Func(Of TSource, TKey), IComparer(Of TKey))
  commentId: M:System.Linq.Enumerable.OrderBy``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IComparer{``1})
- uid: System.Linq.Enumerable.OrderByDescending``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})
  isExternal: true
  name: OrderByDescending<TSource, TKey>(IEnumerable<TSource>, Func<TSource, TKey>)
  fullName: System.Linq.Enumerable.OrderByDescending<TSource, TKey>(System.Collections.Generic.IEnumerable<TSource>, System.Func<TSource, TKey>)
  fullname.vb: System.Linq.Enumerable.OrderByDescending(Of TSource, TKey)(System.Collections.Generic.IEnumerable(Of TSource), System.Func(Of TSource, TKey))
  name.vb: OrderByDescending(Of TSource, TKey)(IEnumerable(Of TSource), Func(Of TSource, TKey))
  spec.csharp:
  - uid: System.Linq.Enumerable.OrderByDescending``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})
    name: OrderByDescending<TSource, TKey>
    fullName: System.Linq.Enumerable.OrderByDescending<TSource, TKey>
  - name: (
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    fullName: <
  - name: TSource
    fullName: TSource
  - name: '>'
    fullName: '>'
  - name: ', '
    fullName: ', '
  - uid: System.Func`2
    name: Func
    fullName: System.Func
    isExternal: true
  - name: <
    fullName: <
  - name: TSource
    fullName: TSource
  - name: ', '
    fullName: ', '
  - name: TKey
    fullName: TKey
  - name: '>'
    fullName: '>'
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Linq.Enumerable.OrderByDescending``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})
    name: OrderByDescending(Of TSource, TKey)
    fullName: System.Linq.Enumerable.OrderByDescending(Of TSource, TKey)
  - name: (
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - name: TSource
    fullName: TSource
  - name: )
    fullName: )
  - name: ', '
    fullName: ', '
  - uid: System.Func`2
    name: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - name: TSource
    fullName: TSource
  - name: ', '
    fullName: ', '
  - name: TKey
    fullName: TKey
  - name: )
    fullName: )
  - name: )
    fullName: )
  nameWithType: Enumerable.OrderByDescending<TSource, TKey>(IEnumerable<TSource>, Func<TSource, TKey>)
  nameWithType.vb: Enumerable.OrderByDescending(Of TSource, TKey)(IEnumerable(Of TSource), Func(Of TSource, TKey))
  commentId: M:System.Linq.Enumerable.OrderByDescending``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})
- uid: System.Linq.Enumerable.OrderByDescending``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IComparer{``1})
  isExternal: true
  name: OrderByDescending<TSource, TKey>(IEnumerable<TSource>, Func<TSource, TKey>, IComparer<TKey>)
  fullName: System.Linq.Enumerable.OrderByDescending<TSource, TKey>(System.Collections.Generic.IEnumerable<TSource>, System.Func<TSource, TKey>, System.Collections.Generic.IComparer<TKey>)
  fullname.vb: System.Linq.Enumerable.OrderByDescending(Of TSource, TKey)(System.Collections.Generic.IEnumerable(Of TSource), System.Func(Of TSource, TKey), System.Collections.Generic.IComparer(Of TKey))
  name.vb: OrderByDescending(Of TSource, TKey)(IEnumerable(Of TSource), Func(Of TSource, TKey), IComparer(Of TKey))
  spec.csharp:
  - uid: System.Linq.Enumerable.OrderByDescending``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IComparer{``1})
    name: OrderByDescending<TSource, TKey>
    fullName: System.Linq.Enumerable.OrderByDescending<TSource, TKey>
  - name: (
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    fullName: <
  - name: TSource
    fullName: TSource
  - name: '>'
    fullName: '>'
  - name: ', '
    fullName: ', '
  - uid: System.Func`2
    name: Func
    fullName: System.Func
    isExternal: true
  - name: <
    fullName: <
  - name: TSource
    fullName: TSource
  - name: ', '
    fullName: ', '
  - name: TKey
    fullName: TKey
  - name: '>'
    fullName: '>'
  - name: ', '
    fullName: ', '
  - uid: System.Collections.Generic.IComparer`1
    name: IComparer
    fullName: System.Collections.Generic.IComparer
    isExternal: true
  - name: <
    fullName: <
  - name: TKey
    fullName: TKey
  - name: '>'
    fullName: '>'
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Linq.Enumerable.OrderByDescending``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IComparer{``1})
    name: OrderByDescending(Of TSource, TKey)
    fullName: System.Linq.Enumerable.OrderByDescending(Of TSource, TKey)
  - name: (
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - name: TSource
    fullName: TSource
  - name: )
    fullName: )
  - name: ', '
    fullName: ', '
  - uid: System.Func`2
    name: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - name: TSource
    fullName: TSource
  - name: ', '
    fullName: ', '
  - name: TKey
    fullName: TKey
  - name: )
    fullName: )
  - name: ', '
    fullName: ', '
  - uid: System.Collections.Generic.IComparer`1
    name: IComparer
    fullName: System.Collections.Generic.IComparer
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - name: TKey
    fullName: TKey
  - name: )
    fullName: )
  - name: )
    fullName: )
  nameWithType: Enumerable.OrderByDescending<TSource, TKey>(IEnumerable<TSource>, Func<TSource, TKey>, IComparer<TKey>)
  nameWithType.vb: Enumerable.OrderByDescending(Of TSource, TKey)(IEnumerable(Of TSource), Func(Of TSource, TKey), IComparer(Of TKey))
  commentId: M:System.Linq.Enumerable.OrderByDescending``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IComparer{``1})
- uid: System.Linq.Enumerable.Reverse``1(System.Collections.Generic.IEnumerable{``0})
  isExternal: true
  name: Reverse<TSource>(IEnumerable<TSource>)
  fullName: System.Linq.Enumerable.Reverse<TSource>(System.Collections.Generic.IEnumerable<TSource>)
  fullname.vb: System.Linq.Enumerable.Reverse(Of TSource)(System.Collections.Generic.IEnumerable(Of TSource))
  name.vb: Reverse(Of TSource)(IEnumerable(Of TSource))
  spec.csharp:
  - uid: System.Linq.Enumerable.Reverse``1(System.Collections.Generic.IEnumerable{``0})
    name: Reverse<TSource>
    fullName: System.Linq.Enumerable.Reverse<TSource>
  - name: (
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    fullName: <
  - name: TSource
    fullName: TSource
  - name: '>'
    fullName: '>'
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Linq.Enumerable.Reverse``1(System.Collections.Generic.IEnumerable{``0})
    name: Reverse(Of TSource)
    fullName: System.Linq.Enumerable.Reverse(Of TSource)
  - name: (
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - name: TSource
    fullName: TSource
  - name: )
    fullName: )
  - name: )
    fullName: )
  nameWithType: Enumerable.Reverse<TSource>(IEnumerable<TSource>)
  nameWithType.vb: Enumerable.Reverse(Of TSource)(IEnumerable(Of TSource))
  commentId: M:System.Linq.Enumerable.Reverse``1(System.Collections.Generic.IEnumerable{``0})
- uid: System.Linq.Enumerable.Select``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})
  isExternal: true
  name: Select<TSource, TResult>(IEnumerable<TSource>, Func<TSource, TResult>)
  fullName: System.Linq.Enumerable.Select<TSource, TResult>(System.Collections.Generic.IEnumerable<TSource>, System.Func<TSource, TResult>)
  fullname.vb: System.Linq.Enumerable.Select(Of TSource, TResult)(System.Collections.Generic.IEnumerable(Of TSource), System.Func(Of TSource, TResult))
  name.vb: Select(Of TSource, TResult)(IEnumerable(Of TSource), Func(Of TSource, TResult))
  spec.csharp:
  - uid: System.Linq.Enumerable.Select``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})
    name: Select<TSource, TResult>
    fullName: System.Linq.Enumerable.Select<TSource, TResult>
  - name: (
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    fullName: <
  - name: TSource
    fullName: TSource
  - name: '>'
    fullName: '>'
  - name: ', '
    fullName: ', '
  - uid: System.Func`2
    name: Func
    fullName: System.Func
    isExternal: true
  - name: <
    fullName: <
  - name: TSource
    fullName: TSource
  - name: ', '
    fullName: ', '
  - name: TResult
    fullName: TResult
  - name: '>'
    fullName: '>'
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Linq.Enumerable.Select``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})
    name: Select(Of TSource, TResult)
    fullName: System.Linq.Enumerable.Select(Of TSource, TResult)
  - name: (
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - name: TSource
    fullName: TSource
  - name: )
    fullName: )
  - name: ', '
    fullName: ', '
  - uid: System.Func`2
    name: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - name: TSource
    fullName: TSource
  - name: ', '
    fullName: ', '
  - name: TResult
    fullName: TResult
  - name: )
    fullName: )
  - name: )
    fullName: )
  nameWithType: Enumerable.Select<TSource, TResult>(IEnumerable<TSource>, Func<TSource, TResult>)
  nameWithType.vb: Enumerable.Select(Of TSource, TResult)(IEnumerable(Of TSource), Func(Of TSource, TResult))
  commentId: M:System.Linq.Enumerable.Select``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})
- uid: System.Linq.Enumerable.Select``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32,``1})
  isExternal: true
  name: Select<TSource, TResult>(IEnumerable<TSource>, Func<TSource, Int32, TResult>)
  fullName: System.Linq.Enumerable.Select<TSource, TResult>(System.Collections.Generic.IEnumerable<TSource>, System.Func<TSource, System.Int32, TResult>)
  fullname.vb: System.Linq.Enumerable.Select(Of TSource, TResult)(System.Collections.Generic.IEnumerable(Of TSource), System.Func(Of TSource, System.Int32, TResult))
  name.vb: Select(Of TSource, TResult)(IEnumerable(Of TSource), Func(Of TSource, Int32, TResult))
  spec.csharp:
  - uid: System.Linq.Enumerable.Select``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32,``1})
    name: Select<TSource, TResult>
    fullName: System.Linq.Enumerable.Select<TSource, TResult>
  - name: (
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    fullName: <
  - name: TSource
    fullName: TSource
  - name: '>'
    fullName: '>'
  - name: ', '
    fullName: ', '
  - uid: System.Func`3
    name: Func
    fullName: System.Func
    isExternal: true
  - name: <
    fullName: <
  - name: TSource
    fullName: TSource
  - name: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    fullName: ', '
  - name: TResult
    fullName: TResult
  - name: '>'
    fullName: '>'
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Linq.Enumerable.Select``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32,``1})
    name: Select(Of TSource, TResult)
    fullName: System.Linq.Enumerable.Select(Of TSource, TResult)
  - name: (
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - name: TSource
    fullName: TSource
  - name: )
    fullName: )
  - name: ', '
    fullName: ', '
  - uid: System.Func`3
    name: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - name: TSource
    fullName: TSource
  - name: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    fullName: ', '
  - name: TResult
    fullName: TResult
  - name: )
    fullName: )
  - name: )
    fullName: )
  nameWithType: Enumerable.Select<TSource, TResult>(IEnumerable<TSource>, Func<TSource, Int32, TResult>)
  nameWithType.vb: Enumerable.Select(Of TSource, TResult)(IEnumerable(Of TSource), Func(Of TSource, Int32, TResult))
  commentId: M:System.Linq.Enumerable.Select``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32,``1})
- uid: System.Linq.Enumerable.SelectMany``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Collections.Generic.IEnumerable{``1}})
  isExternal: true
  name: SelectMany<TSource, TResult>(IEnumerable<TSource>, Func<TSource, IEnumerable<TResult>>)
  fullName: System.Linq.Enumerable.SelectMany<TSource, TResult>(System.Collections.Generic.IEnumerable<TSource>, System.Func<TSource, System.Collections.Generic.IEnumerable<TResult>>)
  fullname.vb: System.Linq.Enumerable.SelectMany(Of TSource, TResult)(System.Collections.Generic.IEnumerable(Of TSource), System.Func(Of TSource, System.Collections.Generic.IEnumerable(Of TResult)))
  name.vb: SelectMany(Of TSource, TResult)(IEnumerable(Of TSource), Func(Of TSource, IEnumerable(Of TResult)))
  spec.csharp:
  - uid: System.Linq.Enumerable.SelectMany``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Collections.Generic.IEnumerable{``1}})
    name: SelectMany<TSource, TResult>
    fullName: System.Linq.Enumerable.SelectMany<TSource, TResult>
  - name: (
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    fullName: <
  - name: TSource
    fullName: TSource
  - name: '>'
    fullName: '>'
  - name: ', '
    fullName: ', '
  - uid: System.Func`2
    name: Func
    fullName: System.Func
    isExternal: true
  - name: <
    fullName: <
  - name: TSource
    fullName: TSource
  - name: ', '
    fullName: ', '
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    fullName: <
  - name: TResult
    fullName: TResult
  - name: '>'
    fullName: '>'
  - name: '>'
    fullName: '>'
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Linq.Enumerable.SelectMany``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Collections.Generic.IEnumerable{``1}})
    name: SelectMany(Of TSource, TResult)
    fullName: System.Linq.Enumerable.SelectMany(Of TSource, TResult)
  - name: (
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - name: TSource
    fullName: TSource
  - name: )
    fullName: )
  - name: ', '
    fullName: ', '
  - uid: System.Func`2
    name: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - name: TSource
    fullName: TSource
  - name: ', '
    fullName: ', '
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - name: TResult
    fullName: TResult
  - name: )
    fullName: )
  - name: )
    fullName: )
  - name: )
    fullName: )
  nameWithType: Enumerable.SelectMany<TSource, TResult>(IEnumerable<TSource>, Func<TSource, IEnumerable<TResult>>)
  nameWithType.vb: Enumerable.SelectMany(Of TSource, TResult)(IEnumerable(Of TSource), Func(Of TSource, IEnumerable(Of TResult)))
  commentId: M:System.Linq.Enumerable.SelectMany``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Collections.Generic.IEnumerable{``1}})
- uid: System.Linq.Enumerable.SelectMany``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32,System.Collections.Generic.IEnumerable{``1}})
  isExternal: true
  name: SelectMany<TSource, TResult>(IEnumerable<TSource>, Func<TSource, Int32, IEnumerable<TResult>>)
  fullName: System.Linq.Enumerable.SelectMany<TSource, TResult>(System.Collections.Generic.IEnumerable<TSource>, System.Func<TSource, System.Int32, System.Collections.Generic.IEnumerable<TResult>>)
  fullname.vb: System.Linq.Enumerable.SelectMany(Of TSource, TResult)(System.Collections.Generic.IEnumerable(Of TSource), System.Func(Of TSource, System.Int32, System.Collections.Generic.IEnumerable(Of TResult)))
  name.vb: SelectMany(Of TSource, TResult)(IEnumerable(Of TSource), Func(Of TSource, Int32, IEnumerable(Of TResult)))
  spec.csharp:
  - uid: System.Linq.Enumerable.SelectMany``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32,System.Collections.Generic.IEnumerable{``1}})
    name: SelectMany<TSource, TResult>
    fullName: System.Linq.Enumerable.SelectMany<TSource, TResult>
  - name: (
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    fullName: <
  - name: TSource
    fullName: TSource
  - name: '>'
    fullName: '>'
  - name: ', '
    fullName: ', '
  - uid: System.Func`3
    name: Func
    fullName: System.Func
    isExternal: true
  - name: <
    fullName: <
  - name: TSource
    fullName: TSource
  - name: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    fullName: <
  - name: TResult
    fullName: TResult
  - name: '>'
    fullName: '>'
  - name: '>'
    fullName: '>'
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Linq.Enumerable.SelectMany``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32,System.Collections.Generic.IEnumerable{``1}})
    name: SelectMany(Of TSource, TResult)
    fullName: System.Linq.Enumerable.SelectMany(Of TSource, TResult)
  - name: (
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - name: TSource
    fullName: TSource
  - name: )
    fullName: )
  - name: ', '
    fullName: ', '
  - uid: System.Func`3
    name: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - name: TSource
    fullName: TSource
  - name: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - name: TResult
    fullName: TResult
  - name: )
    fullName: )
  - name: )
    fullName: )
  - name: )
    fullName: )
  nameWithType: Enumerable.SelectMany<TSource, TResult>(IEnumerable<TSource>, Func<TSource, Int32, IEnumerable<TResult>>)
  nameWithType.vb: Enumerable.SelectMany(Of TSource, TResult)(IEnumerable(Of TSource), Func(Of TSource, Int32, IEnumerable(Of TResult)))
  commentId: M:System.Linq.Enumerable.SelectMany``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32,System.Collections.Generic.IEnumerable{``1}})
- uid: System.Linq.Enumerable.SelectMany``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Collections.Generic.IEnumerable{``1}},System.Func{``0,``1,``2})
  isExternal: true
  name: SelectMany<TSource, TCollection, TResult>(IEnumerable<TSource>, Func<TSource, IEnumerable<TCollection>>, Func<TSource, TCollection, TResult>)
  fullName: System.Linq.Enumerable.SelectMany<TSource, TCollection, TResult>(System.Collections.Generic.IEnumerable<TSource>, System.Func<TSource, System.Collections.Generic.IEnumerable<TCollection>>, System.Func<TSource, TCollection, TResult>)
  fullname.vb: System.Linq.Enumerable.SelectMany(Of TSource, TCollection, TResult)(System.Collections.Generic.IEnumerable(Of TSource), System.Func(Of TSource, System.Collections.Generic.IEnumerable(Of TCollection)), System.Func(Of TSource, TCollection, TResult))
  name.vb: SelectMany(Of TSource, TCollection, TResult)(IEnumerable(Of TSource), Func(Of TSource, IEnumerable(Of TCollection)), Func(Of TSource, TCollection, TResult))
  spec.csharp:
  - uid: System.Linq.Enumerable.SelectMany``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Collections.Generic.IEnumerable{``1}},System.Func{``0,``1,``2})
    name: SelectMany<TSource, TCollection, TResult>
    fullName: System.Linq.Enumerable.SelectMany<TSource, TCollection, TResult>
  - name: (
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    fullName: <
  - name: TSource
    fullName: TSource
  - name: '>'
    fullName: '>'
  - name: ', '
    fullName: ', '
  - uid: System.Func`2
    name: Func
    fullName: System.Func
    isExternal: true
  - name: <
    fullName: <
  - name: TSource
    fullName: TSource
  - name: ', '
    fullName: ', '
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    fullName: <
  - name: TCollection
    fullName: TCollection
  - name: '>'
    fullName: '>'
  - name: '>'
    fullName: '>'
  - name: ', '
    fullName: ', '
  - uid: System.Func`3
    name: Func
    fullName: System.Func
    isExternal: true
  - name: <
    fullName: <
  - name: TSource
    fullName: TSource
  - name: ', '
    fullName: ', '
  - name: TCollection
    fullName: TCollection
  - name: ', '
    fullName: ', '
  - name: TResult
    fullName: TResult
  - name: '>'
    fullName: '>'
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Linq.Enumerable.SelectMany``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Collections.Generic.IEnumerable{``1}},System.Func{``0,``1,``2})
    name: SelectMany(Of TSource, TCollection, TResult)
    fullName: System.Linq.Enumerable.SelectMany(Of TSource, TCollection, TResult)
  - name: (
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - name: TSource
    fullName: TSource
  - name: )
    fullName: )
  - name: ', '
    fullName: ', '
  - uid: System.Func`2
    name: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - name: TSource
    fullName: TSource
  - name: ', '
    fullName: ', '
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - name: TCollection
    fullName: TCollection
  - name: )
    fullName: )
  - name: )
    fullName: )
  - name: ', '
    fullName: ', '
  - uid: System.Func`3
    name: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - name: TSource
    fullName: TSource
  - name: ', '
    fullName: ', '
  - name: TCollection
    fullName: TCollection
  - name: ', '
    fullName: ', '
  - name: TResult
    fullName: TResult
  - name: )
    fullName: )
  - name: )
    fullName: )
  nameWithType: Enumerable.SelectMany<TSource, TCollection, TResult>(IEnumerable<TSource>, Func<TSource, IEnumerable<TCollection>>, Func<TSource, TCollection, TResult>)
  nameWithType.vb: Enumerable.SelectMany(Of TSource, TCollection, TResult)(IEnumerable(Of TSource), Func(Of TSource, IEnumerable(Of TCollection)), Func(Of TSource, TCollection, TResult))
  commentId: M:System.Linq.Enumerable.SelectMany``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Collections.Generic.IEnumerable{``1}},System.Func{``0,``1,``2})
- uid: System.Linq.Enumerable.SelectMany``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32,System.Collections.Generic.IEnumerable{``1}},System.Func{``0,``1,``2})
  isExternal: true
  name: SelectMany<TSource, TCollection, TResult>(IEnumerable<TSource>, Func<TSource, Int32, IEnumerable<TCollection>>, Func<TSource, TCollection, TResult>)
  fullName: System.Linq.Enumerable.SelectMany<TSource, TCollection, TResult>(System.Collections.Generic.IEnumerable<TSource>, System.Func<TSource, System.Int32, System.Collections.Generic.IEnumerable<TCollection>>, System.Func<TSource, TCollection, TResult>)
  fullname.vb: System.Linq.Enumerable.SelectMany(Of TSource, TCollection, TResult)(System.Collections.Generic.IEnumerable(Of TSource), System.Func(Of TSource, System.Int32, System.Collections.Generic.IEnumerable(Of TCollection)), System.Func(Of TSource, TCollection, TResult))
  name.vb: SelectMany(Of TSource, TCollection, TResult)(IEnumerable(Of TSource), Func(Of TSource, Int32, IEnumerable(Of TCollection)), Func(Of TSource, TCollection, TResult))
  spec.csharp:
  - uid: System.Linq.Enumerable.SelectMany``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32,System.Collections.Generic.IEnumerable{``1}},System.Func{``0,``1,``2})
    name: SelectMany<TSource, TCollection, TResult>
    fullName: System.Linq.Enumerable.SelectMany<TSource, TCollection, TResult>
  - name: (
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    fullName: <
  - name: TSource
    fullName: TSource
  - name: '>'
    fullName: '>'
  - name: ', '
    fullName: ', '
  - uid: System.Func`3
    name: Func
    fullName: System.Func
    isExternal: true
  - name: <
    fullName: <
  - name: TSource
    fullName: TSource
  - name: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    fullName: <
  - name: TCollection
    fullName: TCollection
  - name: '>'
    fullName: '>'
  - name: '>'
    fullName: '>'
  - name: ', '
    fullName: ', '
  - uid: System.Func`3
    name: Func
    fullName: System.Func
    isExternal: true
  - name: <
    fullName: <
  - name: TSource
    fullName: TSource
  - name: ', '
    fullName: ', '
  - name: TCollection
    fullName: TCollection
  - name: ', '
    fullName: ', '
  - name: TResult
    fullName: TResult
  - name: '>'
    fullName: '>'
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Linq.Enumerable.SelectMany``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32,System.Collections.Generic.IEnumerable{``1}},System.Func{``0,``1,``2})
    name: SelectMany(Of TSource, TCollection, TResult)
    fullName: System.Linq.Enumerable.SelectMany(Of TSource, TCollection, TResult)
  - name: (
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - name: TSource
    fullName: TSource
  - name: )
    fullName: )
  - name: ', '
    fullName: ', '
  - uid: System.Func`3
    name: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - name: TSource
    fullName: TSource
  - name: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - name: TCollection
    fullName: TCollection
  - name: )
    fullName: )
  - name: )
    fullName: )
  - name: ', '
    fullName: ', '
  - uid: System.Func`3
    name: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - name: TSource
    fullName: TSource
  - name: ', '
    fullName: ', '
  - name: TCollection
    fullName: TCollection
  - name: ', '
    fullName: ', '
  - name: TResult
    fullName: TResult
  - name: )
    fullName: )
  - name: )
    fullName: )
  nameWithType: Enumerable.SelectMany<TSource, TCollection, TResult>(IEnumerable<TSource>, Func<TSource, Int32, IEnumerable<TCollection>>, Func<TSource, TCollection, TResult>)
  nameWithType.vb: Enumerable.SelectMany(Of TSource, TCollection, TResult)(IEnumerable(Of TSource), Func(Of TSource, Int32, IEnumerable(Of TCollection)), Func(Of TSource, TCollection, TResult))
  commentId: M:System.Linq.Enumerable.SelectMany``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32,System.Collections.Generic.IEnumerable{``1}},System.Func{``0,``1,``2})
- uid: System.Linq.Enumerable.SequenceEqual``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0})
  isExternal: true
  name: SequenceEqual<TSource>(IEnumerable<TSource>, IEnumerable<TSource>)
  fullName: System.Linq.Enumerable.SequenceEqual<TSource>(System.Collections.Generic.IEnumerable<TSource>, System.Collections.Generic.IEnumerable<TSource>)
  fullname.vb: System.Linq.Enumerable.SequenceEqual(Of TSource)(System.Collections.Generic.IEnumerable(Of TSource), System.Collections.Generic.IEnumerable(Of TSource))
  name.vb: SequenceEqual(Of TSource)(IEnumerable(Of TSource), IEnumerable(Of TSource))
  spec.csharp:
  - uid: System.Linq.Enumerable.SequenceEqual``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0})
    name: SequenceEqual<TSource>
    fullName: System.Linq.Enumerable.SequenceEqual<TSource>
  - name: (
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    fullName: <
  - name: TSource
    fullName: TSource
  - name: '>'
    fullName: '>'
  - name: ', '
    fullName: ', '
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    fullName: <
  - name: TSource
    fullName: TSource
  - name: '>'
    fullName: '>'
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Linq.Enumerable.SequenceEqual``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0})
    name: SequenceEqual(Of TSource)
    fullName: System.Linq.Enumerable.SequenceEqual(Of TSource)
  - name: (
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - name: TSource
    fullName: TSource
  - name: )
    fullName: )
  - name: ', '
    fullName: ', '
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - name: TSource
    fullName: TSource
  - name: )
    fullName: )
  - name: )
    fullName: )
  nameWithType: Enumerable.SequenceEqual<TSource>(IEnumerable<TSource>, IEnumerable<TSource>)
  nameWithType.vb: Enumerable.SequenceEqual(Of TSource)(IEnumerable(Of TSource), IEnumerable(Of TSource))
  commentId: M:System.Linq.Enumerable.SequenceEqual``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0})
- uid: System.Linq.Enumerable.SequenceEqual``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEqualityComparer{``0})
  isExternal: true
  name: SequenceEqual<TSource>(IEnumerable<TSource>, IEnumerable<TSource>, IEqualityComparer<TSource>)
  fullName: System.Linq.Enumerable.SequenceEqual<TSource>(System.Collections.Generic.IEnumerable<TSource>, System.Collections.Generic.IEnumerable<TSource>, System.Collections.Generic.IEqualityComparer<TSource>)
  fullname.vb: System.Linq.Enumerable.SequenceEqual(Of TSource)(System.Collections.Generic.IEnumerable(Of TSource), System.Collections.Generic.IEnumerable(Of TSource), System.Collections.Generic.IEqualityComparer(Of TSource))
  name.vb: SequenceEqual(Of TSource)(IEnumerable(Of TSource), IEnumerable(Of TSource), IEqualityComparer(Of TSource))
  spec.csharp:
  - uid: System.Linq.Enumerable.SequenceEqual``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEqualityComparer{``0})
    name: SequenceEqual<TSource>
    fullName: System.Linq.Enumerable.SequenceEqual<TSource>
  - name: (
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    fullName: <
  - name: TSource
    fullName: TSource
  - name: '>'
    fullName: '>'
  - name: ', '
    fullName: ', '
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    fullName: <
  - name: TSource
    fullName: TSource
  - name: '>'
    fullName: '>'
  - name: ', '
    fullName: ', '
  - uid: System.Collections.Generic.IEqualityComparer`1
    name: IEqualityComparer
    fullName: System.Collections.Generic.IEqualityComparer
    isExternal: true
  - name: <
    fullName: <
  - name: TSource
    fullName: TSource
  - name: '>'
    fullName: '>'
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Linq.Enumerable.SequenceEqual``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEqualityComparer{``0})
    name: SequenceEqual(Of TSource)
    fullName: System.Linq.Enumerable.SequenceEqual(Of TSource)
  - name: (
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - name: TSource
    fullName: TSource
  - name: )
    fullName: )
  - name: ', '
    fullName: ', '
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - name: TSource
    fullName: TSource
  - name: )
    fullName: )
  - name: ', '
    fullName: ', '
  - uid: System.Collections.Generic.IEqualityComparer`1
    name: IEqualityComparer
    fullName: System.Collections.Generic.IEqualityComparer
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - name: TSource
    fullName: TSource
  - name: )
    fullName: )
  - name: )
    fullName: )
  nameWithType: Enumerable.SequenceEqual<TSource>(IEnumerable<TSource>, IEnumerable<TSource>, IEqualityComparer<TSource>)
  nameWithType.vb: Enumerable.SequenceEqual(Of TSource)(IEnumerable(Of TSource), IEnumerable(Of TSource), IEqualityComparer(Of TSource))
  commentId: M:System.Linq.Enumerable.SequenceEqual``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEqualityComparer{``0})
- uid: System.Linq.Enumerable.Single``1(System.Collections.Generic.IEnumerable{``0})
  isExternal: true
  name: Single<TSource>(IEnumerable<TSource>)
  fullName: System.Linq.Enumerable.Single<TSource>(System.Collections.Generic.IEnumerable<TSource>)
  fullname.vb: System.Linq.Enumerable.Single(Of TSource)(System.Collections.Generic.IEnumerable(Of TSource))
  name.vb: Single(Of TSource)(IEnumerable(Of TSource))
  spec.csharp:
  - uid: System.Linq.Enumerable.Single``1(System.Collections.Generic.IEnumerable{``0})
    name: Single<TSource>
    fullName: System.Linq.Enumerable.Single<TSource>
  - name: (
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    fullName: <
  - name: TSource
    fullName: TSource
  - name: '>'
    fullName: '>'
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Linq.Enumerable.Single``1(System.Collections.Generic.IEnumerable{``0})
    name: Single(Of TSource)
    fullName: System.Linq.Enumerable.Single(Of TSource)
  - name: (
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - name: TSource
    fullName: TSource
  - name: )
    fullName: )
  - name: )
    fullName: )
  nameWithType: Enumerable.Single<TSource>(IEnumerable<TSource>)
  nameWithType.vb: Enumerable.Single(Of TSource)(IEnumerable(Of TSource))
  commentId: M:System.Linq.Enumerable.Single``1(System.Collections.Generic.IEnumerable{``0})
- uid: System.Linq.Enumerable.Single``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})
  isExternal: true
  name: Single<TSource>(IEnumerable<TSource>, Func<TSource, Boolean>)
  fullName: System.Linq.Enumerable.Single<TSource>(System.Collections.Generic.IEnumerable<TSource>, System.Func<TSource, System.Boolean>)
  fullname.vb: System.Linq.Enumerable.Single(Of TSource)(System.Collections.Generic.IEnumerable(Of TSource), System.Func(Of TSource, System.Boolean))
  name.vb: Single(Of TSource)(IEnumerable(Of TSource), Func(Of TSource, Boolean))
  spec.csharp:
  - uid: System.Linq.Enumerable.Single``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})
    name: Single<TSource>
    fullName: System.Linq.Enumerable.Single<TSource>
  - name: (
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    fullName: <
  - name: TSource
    fullName: TSource
  - name: '>'
    fullName: '>'
  - name: ', '
    fullName: ', '
  - uid: System.Func`2
    name: Func
    fullName: System.Func
    isExternal: true
  - name: <
    fullName: <
  - name: TSource
    fullName: TSource
  - name: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: '>'
    fullName: '>'
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Linq.Enumerable.Single``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})
    name: Single(Of TSource)
    fullName: System.Linq.Enumerable.Single(Of TSource)
  - name: (
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - name: TSource
    fullName: TSource
  - name: )
    fullName: )
  - name: ', '
    fullName: ', '
  - uid: System.Func`2
    name: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - name: TSource
    fullName: TSource
  - name: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    fullName: )
  - name: )
    fullName: )
  nameWithType: Enumerable.Single<TSource>(IEnumerable<TSource>, Func<TSource, Boolean>)
  nameWithType.vb: Enumerable.Single(Of TSource)(IEnumerable(Of TSource), Func(Of TSource, Boolean))
  commentId: M:System.Linq.Enumerable.Single``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})
- uid: System.Linq.Enumerable.SingleOrDefault``1(System.Collections.Generic.IEnumerable{``0})
  isExternal: true
  name: SingleOrDefault<TSource>(IEnumerable<TSource>)
  fullName: System.Linq.Enumerable.SingleOrDefault<TSource>(System.Collections.Generic.IEnumerable<TSource>)
  fullname.vb: System.Linq.Enumerable.SingleOrDefault(Of TSource)(System.Collections.Generic.IEnumerable(Of TSource))
  name.vb: SingleOrDefault(Of TSource)(IEnumerable(Of TSource))
  spec.csharp:
  - uid: System.Linq.Enumerable.SingleOrDefault``1(System.Collections.Generic.IEnumerable{``0})
    name: SingleOrDefault<TSource>
    fullName: System.Linq.Enumerable.SingleOrDefault<TSource>
  - name: (
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    fullName: <
  - name: TSource
    fullName: TSource
  - name: '>'
    fullName: '>'
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Linq.Enumerable.SingleOrDefault``1(System.Collections.Generic.IEnumerable{``0})
    name: SingleOrDefault(Of TSource)
    fullName: System.Linq.Enumerable.SingleOrDefault(Of TSource)
  - name: (
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - name: TSource
    fullName: TSource
  - name: )
    fullName: )
  - name: )
    fullName: )
  nameWithType: Enumerable.SingleOrDefault<TSource>(IEnumerable<TSource>)
  nameWithType.vb: Enumerable.SingleOrDefault(Of TSource)(IEnumerable(Of TSource))
  commentId: M:System.Linq.Enumerable.SingleOrDefault``1(System.Collections.Generic.IEnumerable{``0})
- uid: System.Linq.Enumerable.SingleOrDefault``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})
  isExternal: true
  name: SingleOrDefault<TSource>(IEnumerable<TSource>, Func<TSource, Boolean>)
  fullName: System.Linq.Enumerable.SingleOrDefault<TSource>(System.Collections.Generic.IEnumerable<TSource>, System.Func<TSource, System.Boolean>)
  fullname.vb: System.Linq.Enumerable.SingleOrDefault(Of TSource)(System.Collections.Generic.IEnumerable(Of TSource), System.Func(Of TSource, System.Boolean))
  name.vb: SingleOrDefault(Of TSource)(IEnumerable(Of TSource), Func(Of TSource, Boolean))
  spec.csharp:
  - uid: System.Linq.Enumerable.SingleOrDefault``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})
    name: SingleOrDefault<TSource>
    fullName: System.Linq.Enumerable.SingleOrDefault<TSource>
  - name: (
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    fullName: <
  - name: TSource
    fullName: TSource
  - name: '>'
    fullName: '>'
  - name: ', '
    fullName: ', '
  - uid: System.Func`2
    name: Func
    fullName: System.Func
    isExternal: true
  - name: <
    fullName: <
  - name: TSource
    fullName: TSource
  - name: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: '>'
    fullName: '>'
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Linq.Enumerable.SingleOrDefault``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})
    name: SingleOrDefault(Of TSource)
    fullName: System.Linq.Enumerable.SingleOrDefault(Of TSource)
  - name: (
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - name: TSource
    fullName: TSource
  - name: )
    fullName: )
  - name: ', '
    fullName: ', '
  - uid: System.Func`2
    name: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - name: TSource
    fullName: TSource
  - name: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    fullName: )
  - name: )
    fullName: )
  nameWithType: Enumerable.SingleOrDefault<TSource>(IEnumerable<TSource>, Func<TSource, Boolean>)
  nameWithType.vb: Enumerable.SingleOrDefault(Of TSource)(IEnumerable(Of TSource), Func(Of TSource, Boolean))
  commentId: M:System.Linq.Enumerable.SingleOrDefault``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})
- uid: System.Linq.Enumerable.Skip``1(System.Collections.Generic.IEnumerable{``0},System.Int32)
  isExternal: true
  name: Skip<TSource>(IEnumerable<TSource>, Int32)
  fullName: System.Linq.Enumerable.Skip<TSource>(System.Collections.Generic.IEnumerable<TSource>, System.Int32)
  fullname.vb: System.Linq.Enumerable.Skip(Of TSource)(System.Collections.Generic.IEnumerable(Of TSource), System.Int32)
  name.vb: Skip(Of TSource)(IEnumerable(Of TSource), Int32)
  spec.csharp:
  - uid: System.Linq.Enumerable.Skip``1(System.Collections.Generic.IEnumerable{``0},System.Int32)
    name: Skip<TSource>
    fullName: System.Linq.Enumerable.Skip<TSource>
  - name: (
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    fullName: <
  - name: TSource
    fullName: TSource
  - name: '>'
    fullName: '>'
  - name: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Linq.Enumerable.Skip``1(System.Collections.Generic.IEnumerable{``0},System.Int32)
    name: Skip(Of TSource)
    fullName: System.Linq.Enumerable.Skip(Of TSource)
  - name: (
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - name: TSource
    fullName: TSource
  - name: )
    fullName: )
  - name: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    fullName: )
  nameWithType: Enumerable.Skip<TSource>(IEnumerable<TSource>, Int32)
  nameWithType.vb: Enumerable.Skip(Of TSource)(IEnumerable(Of TSource), Int32)
  commentId: M:System.Linq.Enumerable.Skip``1(System.Collections.Generic.IEnumerable{``0},System.Int32)
- uid: System.Linq.Enumerable.SkipWhile``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})
  isExternal: true
  name: SkipWhile<TSource>(IEnumerable<TSource>, Func<TSource, Boolean>)
  fullName: System.Linq.Enumerable.SkipWhile<TSource>(System.Collections.Generic.IEnumerable<TSource>, System.Func<TSource, System.Boolean>)
  fullname.vb: System.Linq.Enumerable.SkipWhile(Of TSource)(System.Collections.Generic.IEnumerable(Of TSource), System.Func(Of TSource, System.Boolean))
  name.vb: SkipWhile(Of TSource)(IEnumerable(Of TSource), Func(Of TSource, Boolean))
  spec.csharp:
  - uid: System.Linq.Enumerable.SkipWhile``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})
    name: SkipWhile<TSource>
    fullName: System.Linq.Enumerable.SkipWhile<TSource>
  - name: (
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    fullName: <
  - name: TSource
    fullName: TSource
  - name: '>'
    fullName: '>'
  - name: ', '
    fullName: ', '
  - uid: System.Func`2
    name: Func
    fullName: System.Func
    isExternal: true
  - name: <
    fullName: <
  - name: TSource
    fullName: TSource
  - name: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: '>'
    fullName: '>'
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Linq.Enumerable.SkipWhile``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})
    name: SkipWhile(Of TSource)
    fullName: System.Linq.Enumerable.SkipWhile(Of TSource)
  - name: (
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - name: TSource
    fullName: TSource
  - name: )
    fullName: )
  - name: ', '
    fullName: ', '
  - uid: System.Func`2
    name: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - name: TSource
    fullName: TSource
  - name: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    fullName: )
  - name: )
    fullName: )
  nameWithType: Enumerable.SkipWhile<TSource>(IEnumerable<TSource>, Func<TSource, Boolean>)
  nameWithType.vb: Enumerable.SkipWhile(Of TSource)(IEnumerable(Of TSource), Func(Of TSource, Boolean))
  commentId: M:System.Linq.Enumerable.SkipWhile``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})
- uid: System.Linq.Enumerable.SkipWhile``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32,System.Boolean})
  isExternal: true
  name: SkipWhile<TSource>(IEnumerable<TSource>, Func<TSource, Int32, Boolean>)
  fullName: System.Linq.Enumerable.SkipWhile<TSource>(System.Collections.Generic.IEnumerable<TSource>, System.Func<TSource, System.Int32, System.Boolean>)
  fullname.vb: System.Linq.Enumerable.SkipWhile(Of TSource)(System.Collections.Generic.IEnumerable(Of TSource), System.Func(Of TSource, System.Int32, System.Boolean))
  name.vb: SkipWhile(Of TSource)(IEnumerable(Of TSource), Func(Of TSource, Int32, Boolean))
  spec.csharp:
  - uid: System.Linq.Enumerable.SkipWhile``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32,System.Boolean})
    name: SkipWhile<TSource>
    fullName: System.Linq.Enumerable.SkipWhile<TSource>
  - name: (
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    fullName: <
  - name: TSource
    fullName: TSource
  - name: '>'
    fullName: '>'
  - name: ', '
    fullName: ', '
  - uid: System.Func`3
    name: Func
    fullName: System.Func
    isExternal: true
  - name: <
    fullName: <
  - name: TSource
    fullName: TSource
  - name: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: '>'
    fullName: '>'
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Linq.Enumerable.SkipWhile``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32,System.Boolean})
    name: SkipWhile(Of TSource)
    fullName: System.Linq.Enumerable.SkipWhile(Of TSource)
  - name: (
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - name: TSource
    fullName: TSource
  - name: )
    fullName: )
  - name: ', '
    fullName: ', '
  - uid: System.Func`3
    name: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - name: TSource
    fullName: TSource
  - name: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    fullName: )
  - name: )
    fullName: )
  nameWithType: Enumerable.SkipWhile<TSource>(IEnumerable<TSource>, Func<TSource, Int32, Boolean>)
  nameWithType.vb: Enumerable.SkipWhile(Of TSource)(IEnumerable(Of TSource), Func(Of TSource, Int32, Boolean))
  commentId: M:System.Linq.Enumerable.SkipWhile``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32,System.Boolean})
- uid: System.Linq.Enumerable.Sum``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Decimal})
  isExternal: true
  name: Sum<TSource>(IEnumerable<TSource>, Func<TSource, Decimal>)
  fullName: System.Linq.Enumerable.Sum<TSource>(System.Collections.Generic.IEnumerable<TSource>, System.Func<TSource, System.Decimal>)
  fullname.vb: System.Linq.Enumerable.Sum(Of TSource)(System.Collections.Generic.IEnumerable(Of TSource), System.Func(Of TSource, System.Decimal))
  name.vb: Sum(Of TSource)(IEnumerable(Of TSource), Func(Of TSource, Decimal))
  spec.csharp:
  - uid: System.Linq.Enumerable.Sum``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Decimal})
    name: Sum<TSource>
    fullName: System.Linq.Enumerable.Sum<TSource>
  - name: (
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    fullName: <
  - name: TSource
    fullName: TSource
  - name: '>'
    fullName: '>'
  - name: ', '
    fullName: ', '
  - uid: System.Func`2
    name: Func
    fullName: System.Func
    isExternal: true
  - name: <
    fullName: <
  - name: TSource
    fullName: TSource
  - name: ', '
    fullName: ', '
  - uid: System.Decimal
    name: Decimal
    fullName: System.Decimal
    isExternal: true
  - name: '>'
    fullName: '>'
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Linq.Enumerable.Sum``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Decimal})
    name: Sum(Of TSource)
    fullName: System.Linq.Enumerable.Sum(Of TSource)
  - name: (
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - name: TSource
    fullName: TSource
  - name: )
    fullName: )
  - name: ', '
    fullName: ', '
  - uid: System.Func`2
    name: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - name: TSource
    fullName: TSource
  - name: ', '
    fullName: ', '
  - uid: System.Decimal
    name: Decimal
    fullName: System.Decimal
    isExternal: true
  - name: )
    fullName: )
  - name: )
    fullName: )
  nameWithType: Enumerable.Sum<TSource>(IEnumerable<TSource>, Func<TSource, Decimal>)
  nameWithType.vb: Enumerable.Sum(Of TSource)(IEnumerable(Of TSource), Func(Of TSource, Decimal))
  commentId: M:System.Linq.Enumerable.Sum``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Decimal})
- uid: System.Linq.Enumerable.Sum``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Double})
  isExternal: true
  name: Sum<TSource>(IEnumerable<TSource>, Func<TSource, Double>)
  fullName: System.Linq.Enumerable.Sum<TSource>(System.Collections.Generic.IEnumerable<TSource>, System.Func<TSource, System.Double>)
  fullname.vb: System.Linq.Enumerable.Sum(Of TSource)(System.Collections.Generic.IEnumerable(Of TSource), System.Func(Of TSource, System.Double))
  name.vb: Sum(Of TSource)(IEnumerable(Of TSource), Func(Of TSource, Double))
  spec.csharp:
  - uid: System.Linq.Enumerable.Sum``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Double})
    name: Sum<TSource>
    fullName: System.Linq.Enumerable.Sum<TSource>
  - name: (
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    fullName: <
  - name: TSource
    fullName: TSource
  - name: '>'
    fullName: '>'
  - name: ', '
    fullName: ', '
  - uid: System.Func`2
    name: Func
    fullName: System.Func
    isExternal: true
  - name: <
    fullName: <
  - name: TSource
    fullName: TSource
  - name: ', '
    fullName: ', '
  - uid: System.Double
    name: Double
    fullName: System.Double
    isExternal: true
  - name: '>'
    fullName: '>'
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Linq.Enumerable.Sum``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Double})
    name: Sum(Of TSource)
    fullName: System.Linq.Enumerable.Sum(Of TSource)
  - name: (
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - name: TSource
    fullName: TSource
  - name: )
    fullName: )
  - name: ', '
    fullName: ', '
  - uid: System.Func`2
    name: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - name: TSource
    fullName: TSource
  - name: ', '
    fullName: ', '
  - uid: System.Double
    name: Double
    fullName: System.Double
    isExternal: true
  - name: )
    fullName: )
  - name: )
    fullName: )
  nameWithType: Enumerable.Sum<TSource>(IEnumerable<TSource>, Func<TSource, Double>)
  nameWithType.vb: Enumerable.Sum(Of TSource)(IEnumerable(Of TSource), Func(Of TSource, Double))
  commentId: M:System.Linq.Enumerable.Sum``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Double})
- uid: System.Linq.Enumerable.Sum``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32})
  isExternal: true
  name: Sum<TSource>(IEnumerable<TSource>, Func<TSource, Int32>)
  fullName: System.Linq.Enumerable.Sum<TSource>(System.Collections.Generic.IEnumerable<TSource>, System.Func<TSource, System.Int32>)
  fullname.vb: System.Linq.Enumerable.Sum(Of TSource)(System.Collections.Generic.IEnumerable(Of TSource), System.Func(Of TSource, System.Int32))
  name.vb: Sum(Of TSource)(IEnumerable(Of TSource), Func(Of TSource, Int32))
  spec.csharp:
  - uid: System.Linq.Enumerable.Sum``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32})
    name: Sum<TSource>
    fullName: System.Linq.Enumerable.Sum<TSource>
  - name: (
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    fullName: <
  - name: TSource
    fullName: TSource
  - name: '>'
    fullName: '>'
  - name: ', '
    fullName: ', '
  - uid: System.Func`2
    name: Func
    fullName: System.Func
    isExternal: true
  - name: <
    fullName: <
  - name: TSource
    fullName: TSource
  - name: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    fullName: System.Int32
    isExternal: true
  - name: '>'
    fullName: '>'
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Linq.Enumerable.Sum``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32})
    name: Sum(Of TSource)
    fullName: System.Linq.Enumerable.Sum(Of TSource)
  - name: (
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - name: TSource
    fullName: TSource
  - name: )
    fullName: )
  - name: ', '
    fullName: ', '
  - uid: System.Func`2
    name: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - name: TSource
    fullName: TSource
  - name: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    fullName: )
  - name: )
    fullName: )
  nameWithType: Enumerable.Sum<TSource>(IEnumerable<TSource>, Func<TSource, Int32>)
  nameWithType.vb: Enumerable.Sum(Of TSource)(IEnumerable(Of TSource), Func(Of TSource, Int32))
  commentId: M:System.Linq.Enumerable.Sum``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32})
- uid: System.Linq.Enumerable.Sum``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int64})
  isExternal: true
  name: Sum<TSource>(IEnumerable<TSource>, Func<TSource, Int64>)
  fullName: System.Linq.Enumerable.Sum<TSource>(System.Collections.Generic.IEnumerable<TSource>, System.Func<TSource, System.Int64>)
  fullname.vb: System.Linq.Enumerable.Sum(Of TSource)(System.Collections.Generic.IEnumerable(Of TSource), System.Func(Of TSource, System.Int64))
  name.vb: Sum(Of TSource)(IEnumerable(Of TSource), Func(Of TSource, Int64))
  spec.csharp:
  - uid: System.Linq.Enumerable.Sum``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int64})
    name: Sum<TSource>
    fullName: System.Linq.Enumerable.Sum<TSource>
  - name: (
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    fullName: <
  - name: TSource
    fullName: TSource
  - name: '>'
    fullName: '>'
  - name: ', '
    fullName: ', '
  - uid: System.Func`2
    name: Func
    fullName: System.Func
    isExternal: true
  - name: <
    fullName: <
  - name: TSource
    fullName: TSource
  - name: ', '
    fullName: ', '
  - uid: System.Int64
    name: Int64
    fullName: System.Int64
    isExternal: true
  - name: '>'
    fullName: '>'
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Linq.Enumerable.Sum``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int64})
    name: Sum(Of TSource)
    fullName: System.Linq.Enumerable.Sum(Of TSource)
  - name: (
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - name: TSource
    fullName: TSource
  - name: )
    fullName: )
  - name: ', '
    fullName: ', '
  - uid: System.Func`2
    name: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - name: TSource
    fullName: TSource
  - name: ', '
    fullName: ', '
  - uid: System.Int64
    name: Int64
    fullName: System.Int64
    isExternal: true
  - name: )
    fullName: )
  - name: )
    fullName: )
  nameWithType: Enumerable.Sum<TSource>(IEnumerable<TSource>, Func<TSource, Int64>)
  nameWithType.vb: Enumerable.Sum(Of TSource)(IEnumerable(Of TSource), Func(Of TSource, Int64))
  commentId: M:System.Linq.Enumerable.Sum``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int64})
- uid: System.Linq.Enumerable.Sum``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Decimal}})
  isExternal: true
  name: Sum<TSource>(IEnumerable<TSource>, Func<TSource, Nullable<Decimal>>)
  fullName: System.Linq.Enumerable.Sum<TSource>(System.Collections.Generic.IEnumerable<TSource>, System.Func<TSource, System.Nullable<System.Decimal>>)
  fullname.vb: System.Linq.Enumerable.Sum(Of TSource)(System.Collections.Generic.IEnumerable(Of TSource), System.Func(Of TSource, System.Nullable(Of System.Decimal)))
  name.vb: Sum(Of TSource)(IEnumerable(Of TSource), Func(Of TSource, Nullable(Of Decimal)))
  spec.csharp:
  - uid: System.Linq.Enumerable.Sum``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Decimal}})
    name: Sum<TSource>
    fullName: System.Linq.Enumerable.Sum<TSource>
  - name: (
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    fullName: <
  - name: TSource
    fullName: TSource
  - name: '>'
    fullName: '>'
  - name: ', '
    fullName: ', '
  - uid: System.Func`2
    name: Func
    fullName: System.Func
    isExternal: true
  - name: <
    fullName: <
  - name: TSource
    fullName: TSource
  - name: ', '
    fullName: ', '
  - uid: System.Nullable`1
    name: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    fullName: <
  - uid: System.Decimal
    name: Decimal
    fullName: System.Decimal
    isExternal: true
  - name: '>'
    fullName: '>'
  - name: '>'
    fullName: '>'
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Linq.Enumerable.Sum``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Decimal}})
    name: Sum(Of TSource)
    fullName: System.Linq.Enumerable.Sum(Of TSource)
  - name: (
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - name: TSource
    fullName: TSource
  - name: )
    fullName: )
  - name: ', '
    fullName: ', '
  - uid: System.Func`2
    name: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - name: TSource
    fullName: TSource
  - name: ', '
    fullName: ', '
  - uid: System.Nullable`1
    name: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - uid: System.Decimal
    name: Decimal
    fullName: System.Decimal
    isExternal: true
  - name: )
    fullName: )
  - name: )
    fullName: )
  - name: )
    fullName: )
  nameWithType: Enumerable.Sum<TSource>(IEnumerable<TSource>, Func<TSource, Nullable<Decimal>>)
  nameWithType.vb: Enumerable.Sum(Of TSource)(IEnumerable(Of TSource), Func(Of TSource, Nullable(Of Decimal)))
  commentId: M:System.Linq.Enumerable.Sum``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Decimal}})
- uid: System.Linq.Enumerable.Sum``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Double}})
  isExternal: true
  name: Sum<TSource>(IEnumerable<TSource>, Func<TSource, Nullable<Double>>)
  fullName: System.Linq.Enumerable.Sum<TSource>(System.Collections.Generic.IEnumerable<TSource>, System.Func<TSource, System.Nullable<System.Double>>)
  fullname.vb: System.Linq.Enumerable.Sum(Of TSource)(System.Collections.Generic.IEnumerable(Of TSource), System.Func(Of TSource, System.Nullable(Of System.Double)))
  name.vb: Sum(Of TSource)(IEnumerable(Of TSource), Func(Of TSource, Nullable(Of Double)))
  spec.csharp:
  - uid: System.Linq.Enumerable.Sum``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Double}})
    name: Sum<TSource>
    fullName: System.Linq.Enumerable.Sum<TSource>
  - name: (
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    fullName: <
  - name: TSource
    fullName: TSource
  - name: '>'
    fullName: '>'
  - name: ', '
    fullName: ', '
  - uid: System.Func`2
    name: Func
    fullName: System.Func
    isExternal: true
  - name: <
    fullName: <
  - name: TSource
    fullName: TSource
  - name: ', '
    fullName: ', '
  - uid: System.Nullable`1
    name: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    fullName: <
  - uid: System.Double
    name: Double
    fullName: System.Double
    isExternal: true
  - name: '>'
    fullName: '>'
  - name: '>'
    fullName: '>'
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Linq.Enumerable.Sum``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Double}})
    name: Sum(Of TSource)
    fullName: System.Linq.Enumerable.Sum(Of TSource)
  - name: (
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - name: TSource
    fullName: TSource
  - name: )
    fullName: )
  - name: ', '
    fullName: ', '
  - uid: System.Func`2
    name: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - name: TSource
    fullName: TSource
  - name: ', '
    fullName: ', '
  - uid: System.Nullable`1
    name: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - uid: System.Double
    name: Double
    fullName: System.Double
    isExternal: true
  - name: )
    fullName: )
  - name: )
    fullName: )
  - name: )
    fullName: )
  nameWithType: Enumerable.Sum<TSource>(IEnumerable<TSource>, Func<TSource, Nullable<Double>>)
  nameWithType.vb: Enumerable.Sum(Of TSource)(IEnumerable(Of TSource), Func(Of TSource, Nullable(Of Double)))
  commentId: M:System.Linq.Enumerable.Sum``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Double}})
- uid: System.Linq.Enumerable.Sum``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Int32}})
  isExternal: true
  name: Sum<TSource>(IEnumerable<TSource>, Func<TSource, Nullable<Int32>>)
  fullName: System.Linq.Enumerable.Sum<TSource>(System.Collections.Generic.IEnumerable<TSource>, System.Func<TSource, System.Nullable<System.Int32>>)
  fullname.vb: System.Linq.Enumerable.Sum(Of TSource)(System.Collections.Generic.IEnumerable(Of TSource), System.Func(Of TSource, System.Nullable(Of System.Int32)))
  name.vb: Sum(Of TSource)(IEnumerable(Of TSource), Func(Of TSource, Nullable(Of Int32)))
  spec.csharp:
  - uid: System.Linq.Enumerable.Sum``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Int32}})
    name: Sum<TSource>
    fullName: System.Linq.Enumerable.Sum<TSource>
  - name: (
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    fullName: <
  - name: TSource
    fullName: TSource
  - name: '>'
    fullName: '>'
  - name: ', '
    fullName: ', '
  - uid: System.Func`2
    name: Func
    fullName: System.Func
    isExternal: true
  - name: <
    fullName: <
  - name: TSource
    fullName: TSource
  - name: ', '
    fullName: ', '
  - uid: System.Nullable`1
    name: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    fullName: <
  - uid: System.Int32
    name: Int32
    fullName: System.Int32
    isExternal: true
  - name: '>'
    fullName: '>'
  - name: '>'
    fullName: '>'
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Linq.Enumerable.Sum``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Int32}})
    name: Sum(Of TSource)
    fullName: System.Linq.Enumerable.Sum(Of TSource)
  - name: (
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - name: TSource
    fullName: TSource
  - name: )
    fullName: )
  - name: ', '
    fullName: ', '
  - uid: System.Func`2
    name: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - name: TSource
    fullName: TSource
  - name: ', '
    fullName: ', '
  - uid: System.Nullable`1
    name: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - uid: System.Int32
    name: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    fullName: )
  - name: )
    fullName: )
  - name: )
    fullName: )
  nameWithType: Enumerable.Sum<TSource>(IEnumerable<TSource>, Func<TSource, Nullable<Int32>>)
  nameWithType.vb: Enumerable.Sum(Of TSource)(IEnumerable(Of TSource), Func(Of TSource, Nullable(Of Int32)))
  commentId: M:System.Linq.Enumerable.Sum``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Int32}})
- uid: System.Linq.Enumerable.Sum``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Int64}})
  isExternal: true
  name: Sum<TSource>(IEnumerable<TSource>, Func<TSource, Nullable<Int64>>)
  fullName: System.Linq.Enumerable.Sum<TSource>(System.Collections.Generic.IEnumerable<TSource>, System.Func<TSource, System.Nullable<System.Int64>>)
  fullname.vb: System.Linq.Enumerable.Sum(Of TSource)(System.Collections.Generic.IEnumerable(Of TSource), System.Func(Of TSource, System.Nullable(Of System.Int64)))
  name.vb: Sum(Of TSource)(IEnumerable(Of TSource), Func(Of TSource, Nullable(Of Int64)))
  spec.csharp:
  - uid: System.Linq.Enumerable.Sum``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Int64}})
    name: Sum<TSource>
    fullName: System.Linq.Enumerable.Sum<TSource>
  - name: (
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    fullName: <
  - name: TSource
    fullName: TSource
  - name: '>'
    fullName: '>'
  - name: ', '
    fullName: ', '
  - uid: System.Func`2
    name: Func
    fullName: System.Func
    isExternal: true
  - name: <
    fullName: <
  - name: TSource
    fullName: TSource
  - name: ', '
    fullName: ', '
  - uid: System.Nullable`1
    name: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    fullName: <
  - uid: System.Int64
    name: Int64
    fullName: System.Int64
    isExternal: true
  - name: '>'
    fullName: '>'
  - name: '>'
    fullName: '>'
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Linq.Enumerable.Sum``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Int64}})
    name: Sum(Of TSource)
    fullName: System.Linq.Enumerable.Sum(Of TSource)
  - name: (
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - name: TSource
    fullName: TSource
  - name: )
    fullName: )
  - name: ', '
    fullName: ', '
  - uid: System.Func`2
    name: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - name: TSource
    fullName: TSource
  - name: ', '
    fullName: ', '
  - uid: System.Nullable`1
    name: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - uid: System.Int64
    name: Int64
    fullName: System.Int64
    isExternal: true
  - name: )
    fullName: )
  - name: )
    fullName: )
  - name: )
    fullName: )
  nameWithType: Enumerable.Sum<TSource>(IEnumerable<TSource>, Func<TSource, Nullable<Int64>>)
  nameWithType.vb: Enumerable.Sum(Of TSource)(IEnumerable(Of TSource), Func(Of TSource, Nullable(Of Int64)))
  commentId: M:System.Linq.Enumerable.Sum``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Int64}})
- uid: System.Linq.Enumerable.Sum``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Single}})
  isExternal: true
  name: Sum<TSource>(IEnumerable<TSource>, Func<TSource, Nullable<Single>>)
  fullName: System.Linq.Enumerable.Sum<TSource>(System.Collections.Generic.IEnumerable<TSource>, System.Func<TSource, System.Nullable<System.Single>>)
  fullname.vb: System.Linq.Enumerable.Sum(Of TSource)(System.Collections.Generic.IEnumerable(Of TSource), System.Func(Of TSource, System.Nullable(Of System.Single)))
  name.vb: Sum(Of TSource)(IEnumerable(Of TSource), Func(Of TSource, Nullable(Of Single)))
  spec.csharp:
  - uid: System.Linq.Enumerable.Sum``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Single}})
    name: Sum<TSource>
    fullName: System.Linq.Enumerable.Sum<TSource>
  - name: (
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    fullName: <
  - name: TSource
    fullName: TSource
  - name: '>'
    fullName: '>'
  - name: ', '
    fullName: ', '
  - uid: System.Func`2
    name: Func
    fullName: System.Func
    isExternal: true
  - name: <
    fullName: <
  - name: TSource
    fullName: TSource
  - name: ', '
    fullName: ', '
  - uid: System.Nullable`1
    name: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    fullName: <
  - uid: System.Single
    name: Single
    fullName: System.Single
    isExternal: true
  - name: '>'
    fullName: '>'
  - name: '>'
    fullName: '>'
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Linq.Enumerable.Sum``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Single}})
    name: Sum(Of TSource)
    fullName: System.Linq.Enumerable.Sum(Of TSource)
  - name: (
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - name: TSource
    fullName: TSource
  - name: )
    fullName: )
  - name: ', '
    fullName: ', '
  - uid: System.Func`2
    name: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - name: TSource
    fullName: TSource
  - name: ', '
    fullName: ', '
  - uid: System.Nullable`1
    name: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - uid: System.Single
    name: Single
    fullName: System.Single
    isExternal: true
  - name: )
    fullName: )
  - name: )
    fullName: )
  - name: )
    fullName: )
  nameWithType: Enumerable.Sum<TSource>(IEnumerable<TSource>, Func<TSource, Nullable<Single>>)
  nameWithType.vb: Enumerable.Sum(Of TSource)(IEnumerable(Of TSource), Func(Of TSource, Nullable(Of Single)))
  commentId: M:System.Linq.Enumerable.Sum``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Single}})
- uid: System.Linq.Enumerable.Sum``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Single})
  isExternal: true
  name: Sum<TSource>(IEnumerable<TSource>, Func<TSource, Single>)
  fullName: System.Linq.Enumerable.Sum<TSource>(System.Collections.Generic.IEnumerable<TSource>, System.Func<TSource, System.Single>)
  fullname.vb: System.Linq.Enumerable.Sum(Of TSource)(System.Collections.Generic.IEnumerable(Of TSource), System.Func(Of TSource, System.Single))
  name.vb: Sum(Of TSource)(IEnumerable(Of TSource), Func(Of TSource, Single))
  spec.csharp:
  - uid: System.Linq.Enumerable.Sum``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Single})
    name: Sum<TSource>
    fullName: System.Linq.Enumerable.Sum<TSource>
  - name: (
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    fullName: <
  - name: TSource
    fullName: TSource
  - name: '>'
    fullName: '>'
  - name: ', '
    fullName: ', '
  - uid: System.Func`2
    name: Func
    fullName: System.Func
    isExternal: true
  - name: <
    fullName: <
  - name: TSource
    fullName: TSource
  - name: ', '
    fullName: ', '
  - uid: System.Single
    name: Single
    fullName: System.Single
    isExternal: true
  - name: '>'
    fullName: '>'
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Linq.Enumerable.Sum``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Single})
    name: Sum(Of TSource)
    fullName: System.Linq.Enumerable.Sum(Of TSource)
  - name: (
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - name: TSource
    fullName: TSource
  - name: )
    fullName: )
  - name: ', '
    fullName: ', '
  - uid: System.Func`2
    name: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - name: TSource
    fullName: TSource
  - name: ', '
    fullName: ', '
  - uid: System.Single
    name: Single
    fullName: System.Single
    isExternal: true
  - name: )
    fullName: )
  - name: )
    fullName: )
  nameWithType: Enumerable.Sum<TSource>(IEnumerable<TSource>, Func<TSource, Single>)
  nameWithType.vb: Enumerable.Sum(Of TSource)(IEnumerable(Of TSource), Func(Of TSource, Single))
  commentId: M:System.Linq.Enumerable.Sum``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Single})
- uid: System.Linq.Enumerable.Take``1(System.Collections.Generic.IEnumerable{``0},System.Int32)
  isExternal: true
  name: Take<TSource>(IEnumerable<TSource>, Int32)
  fullName: System.Linq.Enumerable.Take<TSource>(System.Collections.Generic.IEnumerable<TSource>, System.Int32)
  fullname.vb: System.Linq.Enumerable.Take(Of TSource)(System.Collections.Generic.IEnumerable(Of TSource), System.Int32)
  name.vb: Take(Of TSource)(IEnumerable(Of TSource), Int32)
  spec.csharp:
  - uid: System.Linq.Enumerable.Take``1(System.Collections.Generic.IEnumerable{``0},System.Int32)
    name: Take<TSource>
    fullName: System.Linq.Enumerable.Take<TSource>
  - name: (
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    fullName: <
  - name: TSource
    fullName: TSource
  - name: '>'
    fullName: '>'
  - name: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Linq.Enumerable.Take``1(System.Collections.Generic.IEnumerable{``0},System.Int32)
    name: Take(Of TSource)
    fullName: System.Linq.Enumerable.Take(Of TSource)
  - name: (
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - name: TSource
    fullName: TSource
  - name: )
    fullName: )
  - name: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    fullName: )
  nameWithType: Enumerable.Take<TSource>(IEnumerable<TSource>, Int32)
  nameWithType.vb: Enumerable.Take(Of TSource)(IEnumerable(Of TSource), Int32)
  commentId: M:System.Linq.Enumerable.Take``1(System.Collections.Generic.IEnumerable{``0},System.Int32)
- uid: System.Linq.Enumerable.TakeWhile``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})
  isExternal: true
  name: TakeWhile<TSource>(IEnumerable<TSource>, Func<TSource, Boolean>)
  fullName: System.Linq.Enumerable.TakeWhile<TSource>(System.Collections.Generic.IEnumerable<TSource>, System.Func<TSource, System.Boolean>)
  fullname.vb: System.Linq.Enumerable.TakeWhile(Of TSource)(System.Collections.Generic.IEnumerable(Of TSource), System.Func(Of TSource, System.Boolean))
  name.vb: TakeWhile(Of TSource)(IEnumerable(Of TSource), Func(Of TSource, Boolean))
  spec.csharp:
  - uid: System.Linq.Enumerable.TakeWhile``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})
    name: TakeWhile<TSource>
    fullName: System.Linq.Enumerable.TakeWhile<TSource>
  - name: (
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    fullName: <
  - name: TSource
    fullName: TSource
  - name: '>'
    fullName: '>'
  - name: ', '
    fullName: ', '
  - uid: System.Func`2
    name: Func
    fullName: System.Func
    isExternal: true
  - name: <
    fullName: <
  - name: TSource
    fullName: TSource
  - name: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: '>'
    fullName: '>'
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Linq.Enumerable.TakeWhile``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})
    name: TakeWhile(Of TSource)
    fullName: System.Linq.Enumerable.TakeWhile(Of TSource)
  - name: (
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - name: TSource
    fullName: TSource
  - name: )
    fullName: )
  - name: ', '
    fullName: ', '
  - uid: System.Func`2
    name: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - name: TSource
    fullName: TSource
  - name: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    fullName: )
  - name: )
    fullName: )
  nameWithType: Enumerable.TakeWhile<TSource>(IEnumerable<TSource>, Func<TSource, Boolean>)
  nameWithType.vb: Enumerable.TakeWhile(Of TSource)(IEnumerable(Of TSource), Func(Of TSource, Boolean))
  commentId: M:System.Linq.Enumerable.TakeWhile``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})
- uid: System.Linq.Enumerable.TakeWhile``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32,System.Boolean})
  isExternal: true
  name: TakeWhile<TSource>(IEnumerable<TSource>, Func<TSource, Int32, Boolean>)
  fullName: System.Linq.Enumerable.TakeWhile<TSource>(System.Collections.Generic.IEnumerable<TSource>, System.Func<TSource, System.Int32, System.Boolean>)
  fullname.vb: System.Linq.Enumerable.TakeWhile(Of TSource)(System.Collections.Generic.IEnumerable(Of TSource), System.Func(Of TSource, System.Int32, System.Boolean))
  name.vb: TakeWhile(Of TSource)(IEnumerable(Of TSource), Func(Of TSource, Int32, Boolean))
  spec.csharp:
  - uid: System.Linq.Enumerable.TakeWhile``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32,System.Boolean})
    name: TakeWhile<TSource>
    fullName: System.Linq.Enumerable.TakeWhile<TSource>
  - name: (
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    fullName: <
  - name: TSource
    fullName: TSource
  - name: '>'
    fullName: '>'
  - name: ', '
    fullName: ', '
  - uid: System.Func`3
    name: Func
    fullName: System.Func
    isExternal: true
  - name: <
    fullName: <
  - name: TSource
    fullName: TSource
  - name: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: '>'
    fullName: '>'
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Linq.Enumerable.TakeWhile``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32,System.Boolean})
    name: TakeWhile(Of TSource)
    fullName: System.Linq.Enumerable.TakeWhile(Of TSource)
  - name: (
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - name: TSource
    fullName: TSource
  - name: )
    fullName: )
  - name: ', '
    fullName: ', '
  - uid: System.Func`3
    name: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - name: TSource
    fullName: TSource
  - name: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    fullName: )
  - name: )
    fullName: )
  nameWithType: Enumerable.TakeWhile<TSource>(IEnumerable<TSource>, Func<TSource, Int32, Boolean>)
  nameWithType.vb: Enumerable.TakeWhile(Of TSource)(IEnumerable(Of TSource), Func(Of TSource, Int32, Boolean))
  commentId: M:System.Linq.Enumerable.TakeWhile``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32,System.Boolean})
- uid: System.Linq.Enumerable.ToArray``1(System.Collections.Generic.IEnumerable{``0})
  isExternal: true
  name: ToArray<TSource>(IEnumerable<TSource>)
  fullName: System.Linq.Enumerable.ToArray<TSource>(System.Collections.Generic.IEnumerable<TSource>)
  fullname.vb: System.Linq.Enumerable.ToArray(Of TSource)(System.Collections.Generic.IEnumerable(Of TSource))
  name.vb: ToArray(Of TSource)(IEnumerable(Of TSource))
  spec.csharp:
  - uid: System.Linq.Enumerable.ToArray``1(System.Collections.Generic.IEnumerable{``0})
    name: ToArray<TSource>
    fullName: System.Linq.Enumerable.ToArray<TSource>
  - name: (
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    fullName: <
  - name: TSource
    fullName: TSource
  - name: '>'
    fullName: '>'
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Linq.Enumerable.ToArray``1(System.Collections.Generic.IEnumerable{``0})
    name: ToArray(Of TSource)
    fullName: System.Linq.Enumerable.ToArray(Of TSource)
  - name: (
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - name: TSource
    fullName: TSource
  - name: )
    fullName: )
  - name: )
    fullName: )
  nameWithType: Enumerable.ToArray<TSource>(IEnumerable<TSource>)
  nameWithType.vb: Enumerable.ToArray(Of TSource)(IEnumerable(Of TSource))
  commentId: M:System.Linq.Enumerable.ToArray``1(System.Collections.Generic.IEnumerable{``0})
- uid: System.Linq.Enumerable.ToDictionary``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})
  isExternal: true
  name: ToDictionary<TSource, TKey>(IEnumerable<TSource>, Func<TSource, TKey>)
  fullName: System.Linq.Enumerable.ToDictionary<TSource, TKey>(System.Collections.Generic.IEnumerable<TSource>, System.Func<TSource, TKey>)
  fullname.vb: System.Linq.Enumerable.ToDictionary(Of TSource, TKey)(System.Collections.Generic.IEnumerable(Of TSource), System.Func(Of TSource, TKey))
  name.vb: ToDictionary(Of TSource, TKey)(IEnumerable(Of TSource), Func(Of TSource, TKey))
  spec.csharp:
  - uid: System.Linq.Enumerable.ToDictionary``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})
    name: ToDictionary<TSource, TKey>
    fullName: System.Linq.Enumerable.ToDictionary<TSource, TKey>
  - name: (
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    fullName: <
  - name: TSource
    fullName: TSource
  - name: '>'
    fullName: '>'
  - name: ', '
    fullName: ', '
  - uid: System.Func`2
    name: Func
    fullName: System.Func
    isExternal: true
  - name: <
    fullName: <
  - name: TSource
    fullName: TSource
  - name: ', '
    fullName: ', '
  - name: TKey
    fullName: TKey
  - name: '>'
    fullName: '>'
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Linq.Enumerable.ToDictionary``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})
    name: ToDictionary(Of TSource, TKey)
    fullName: System.Linq.Enumerable.ToDictionary(Of TSource, TKey)
  - name: (
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - name: TSource
    fullName: TSource
  - name: )
    fullName: )
  - name: ', '
    fullName: ', '
  - uid: System.Func`2
    name: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - name: TSource
    fullName: TSource
  - name: ', '
    fullName: ', '
  - name: TKey
    fullName: TKey
  - name: )
    fullName: )
  - name: )
    fullName: )
  nameWithType: Enumerable.ToDictionary<TSource, TKey>(IEnumerable<TSource>, Func<TSource, TKey>)
  nameWithType.vb: Enumerable.ToDictionary(Of TSource, TKey)(IEnumerable(Of TSource), Func(Of TSource, TKey))
  commentId: M:System.Linq.Enumerable.ToDictionary``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})
- uid: System.Linq.Enumerable.ToDictionary``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IEqualityComparer{``1})
  isExternal: true
  name: ToDictionary<TSource, TKey>(IEnumerable<TSource>, Func<TSource, TKey>, IEqualityComparer<TKey>)
  fullName: System.Linq.Enumerable.ToDictionary<TSource, TKey>(System.Collections.Generic.IEnumerable<TSource>, System.Func<TSource, TKey>, System.Collections.Generic.IEqualityComparer<TKey>)
  fullname.vb: System.Linq.Enumerable.ToDictionary(Of TSource, TKey)(System.Collections.Generic.IEnumerable(Of TSource), System.Func(Of TSource, TKey), System.Collections.Generic.IEqualityComparer(Of TKey))
  name.vb: ToDictionary(Of TSource, TKey)(IEnumerable(Of TSource), Func(Of TSource, TKey), IEqualityComparer(Of TKey))
  spec.csharp:
  - uid: System.Linq.Enumerable.ToDictionary``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IEqualityComparer{``1})
    name: ToDictionary<TSource, TKey>
    fullName: System.Linq.Enumerable.ToDictionary<TSource, TKey>
  - name: (
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    fullName: <
  - name: TSource
    fullName: TSource
  - name: '>'
    fullName: '>'
  - name: ', '
    fullName: ', '
  - uid: System.Func`2
    name: Func
    fullName: System.Func
    isExternal: true
  - name: <
    fullName: <
  - name: TSource
    fullName: TSource
  - name: ', '
    fullName: ', '
  - name: TKey
    fullName: TKey
  - name: '>'
    fullName: '>'
  - name: ', '
    fullName: ', '
  - uid: System.Collections.Generic.IEqualityComparer`1
    name: IEqualityComparer
    fullName: System.Collections.Generic.IEqualityComparer
    isExternal: true
  - name: <
    fullName: <
  - name: TKey
    fullName: TKey
  - name: '>'
    fullName: '>'
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Linq.Enumerable.ToDictionary``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IEqualityComparer{``1})
    name: ToDictionary(Of TSource, TKey)
    fullName: System.Linq.Enumerable.ToDictionary(Of TSource, TKey)
  - name: (
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - name: TSource
    fullName: TSource
  - name: )
    fullName: )
  - name: ', '
    fullName: ', '
  - uid: System.Func`2
    name: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - name: TSource
    fullName: TSource
  - name: ', '
    fullName: ', '
  - name: TKey
    fullName: TKey
  - name: )
    fullName: )
  - name: ', '
    fullName: ', '
  - uid: System.Collections.Generic.IEqualityComparer`1
    name: IEqualityComparer
    fullName: System.Collections.Generic.IEqualityComparer
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - name: TKey
    fullName: TKey
  - name: )
    fullName: )
  - name: )
    fullName: )
  nameWithType: Enumerable.ToDictionary<TSource, TKey>(IEnumerable<TSource>, Func<TSource, TKey>, IEqualityComparer<TKey>)
  nameWithType.vb: Enumerable.ToDictionary(Of TSource, TKey)(IEnumerable(Of TSource), Func(Of TSource, TKey), IEqualityComparer(Of TKey))
  commentId: M:System.Linq.Enumerable.ToDictionary``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IEqualityComparer{``1})
- uid: System.Linq.Enumerable.ToDictionary``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2})
  isExternal: true
  name: ToDictionary<TSource, TKey, TElement>(IEnumerable<TSource>, Func<TSource, TKey>, Func<TSource, TElement>)
  fullName: System.Linq.Enumerable.ToDictionary<TSource, TKey, TElement>(System.Collections.Generic.IEnumerable<TSource>, System.Func<TSource, TKey>, System.Func<TSource, TElement>)
  fullname.vb: System.Linq.Enumerable.ToDictionary(Of TSource, TKey, TElement)(System.Collections.Generic.IEnumerable(Of TSource), System.Func(Of TSource, TKey), System.Func(Of TSource, TElement))
  name.vb: ToDictionary(Of TSource, TKey, TElement)(IEnumerable(Of TSource), Func(Of TSource, TKey), Func(Of TSource, TElement))
  spec.csharp:
  - uid: System.Linq.Enumerable.ToDictionary``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2})
    name: ToDictionary<TSource, TKey, TElement>
    fullName: System.Linq.Enumerable.ToDictionary<TSource, TKey, TElement>
  - name: (
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    fullName: <
  - name: TSource
    fullName: TSource
  - name: '>'
    fullName: '>'
  - name: ', '
    fullName: ', '
  - uid: System.Func`2
    name: Func
    fullName: System.Func
    isExternal: true
  - name: <
    fullName: <
  - name: TSource
    fullName: TSource
  - name: ', '
    fullName: ', '
  - name: TKey
    fullName: TKey
  - name: '>'
    fullName: '>'
  - name: ', '
    fullName: ', '
  - uid: System.Func`2
    name: Func
    fullName: System.Func
    isExternal: true
  - name: <
    fullName: <
  - name: TSource
    fullName: TSource
  - name: ', '
    fullName: ', '
  - name: TElement
    fullName: TElement
  - name: '>'
    fullName: '>'
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Linq.Enumerable.ToDictionary``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2})
    name: ToDictionary(Of TSource, TKey, TElement)
    fullName: System.Linq.Enumerable.ToDictionary(Of TSource, TKey, TElement)
  - name: (
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - name: TSource
    fullName: TSource
  - name: )
    fullName: )
  - name: ', '
    fullName: ', '
  - uid: System.Func`2
    name: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - name: TSource
    fullName: TSource
  - name: ', '
    fullName: ', '
  - name: TKey
    fullName: TKey
  - name: )
    fullName: )
  - name: ', '
    fullName: ', '
  - uid: System.Func`2
    name: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - name: TSource
    fullName: TSource
  - name: ', '
    fullName: ', '
  - name: TElement
    fullName: TElement
  - name: )
    fullName: )
  - name: )
    fullName: )
  nameWithType: Enumerable.ToDictionary<TSource, TKey, TElement>(IEnumerable<TSource>, Func<TSource, TKey>, Func<TSource, TElement>)
  nameWithType.vb: Enumerable.ToDictionary(Of TSource, TKey, TElement)(IEnumerable(Of TSource), Func(Of TSource, TKey), Func(Of TSource, TElement))
  commentId: M:System.Linq.Enumerable.ToDictionary``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2})
- uid: System.Linq.Enumerable.ToDictionary``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})
  isExternal: true
  name: ToDictionary<TSource, TKey, TElement>(IEnumerable<TSource>, Func<TSource, TKey>, Func<TSource, TElement>, IEqualityComparer<TKey>)
  fullName: System.Linq.Enumerable.ToDictionary<TSource, TKey, TElement>(System.Collections.Generic.IEnumerable<TSource>, System.Func<TSource, TKey>, System.Func<TSource, TElement>, System.Collections.Generic.IEqualityComparer<TKey>)
  fullname.vb: System.Linq.Enumerable.ToDictionary(Of TSource, TKey, TElement)(System.Collections.Generic.IEnumerable(Of TSource), System.Func(Of TSource, TKey), System.Func(Of TSource, TElement), System.Collections.Generic.IEqualityComparer(Of TKey))
  name.vb: ToDictionary(Of TSource, TKey, TElement)(IEnumerable(Of TSource), Func(Of TSource, TKey), Func(Of TSource, TElement), IEqualityComparer(Of TKey))
  spec.csharp:
  - uid: System.Linq.Enumerable.ToDictionary``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})
    name: ToDictionary<TSource, TKey, TElement>
    fullName: System.Linq.Enumerable.ToDictionary<TSource, TKey, TElement>
  - name: (
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    fullName: <
  - name: TSource
    fullName: TSource
  - name: '>'
    fullName: '>'
  - name: ', '
    fullName: ', '
  - uid: System.Func`2
    name: Func
    fullName: System.Func
    isExternal: true
  - name: <
    fullName: <
  - name: TSource
    fullName: TSource
  - name: ', '
    fullName: ', '
  - name: TKey
    fullName: TKey
  - name: '>'
    fullName: '>'
  - name: ', '
    fullName: ', '
  - uid: System.Func`2
    name: Func
    fullName: System.Func
    isExternal: true
  - name: <
    fullName: <
  - name: TSource
    fullName: TSource
  - name: ', '
    fullName: ', '
  - name: TElement
    fullName: TElement
  - name: '>'
    fullName: '>'
  - name: ', '
    fullName: ', '
  - uid: System.Collections.Generic.IEqualityComparer`1
    name: IEqualityComparer
    fullName: System.Collections.Generic.IEqualityComparer
    isExternal: true
  - name: <
    fullName: <
  - name: TKey
    fullName: TKey
  - name: '>'
    fullName: '>'
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Linq.Enumerable.ToDictionary``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})
    name: ToDictionary(Of TSource, TKey, TElement)
    fullName: System.Linq.Enumerable.ToDictionary(Of TSource, TKey, TElement)
  - name: (
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - name: TSource
    fullName: TSource
  - name: )
    fullName: )
  - name: ', '
    fullName: ', '
  - uid: System.Func`2
    name: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - name: TSource
    fullName: TSource
  - name: ', '
    fullName: ', '
  - name: TKey
    fullName: TKey
  - name: )
    fullName: )
  - name: ', '
    fullName: ', '
  - uid: System.Func`2
    name: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - name: TSource
    fullName: TSource
  - name: ', '
    fullName: ', '
  - name: TElement
    fullName: TElement
  - name: )
    fullName: )
  - name: ', '
    fullName: ', '
  - uid: System.Collections.Generic.IEqualityComparer`1
    name: IEqualityComparer
    fullName: System.Collections.Generic.IEqualityComparer
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - name: TKey
    fullName: TKey
  - name: )
    fullName: )
  - name: )
    fullName: )
  nameWithType: Enumerable.ToDictionary<TSource, TKey, TElement>(IEnumerable<TSource>, Func<TSource, TKey>, Func<TSource, TElement>, IEqualityComparer<TKey>)
  nameWithType.vb: Enumerable.ToDictionary(Of TSource, TKey, TElement)(IEnumerable(Of TSource), Func(Of TSource, TKey), Func(Of TSource, TElement), IEqualityComparer(Of TKey))
  commentId: M:System.Linq.Enumerable.ToDictionary``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})
- uid: System.Linq.Enumerable.ToList``1(System.Collections.Generic.IEnumerable{``0})
  isExternal: true
  name: ToList<TSource>(IEnumerable<TSource>)
  fullName: System.Linq.Enumerable.ToList<TSource>(System.Collections.Generic.IEnumerable<TSource>)
  fullname.vb: System.Linq.Enumerable.ToList(Of TSource)(System.Collections.Generic.IEnumerable(Of TSource))
  name.vb: ToList(Of TSource)(IEnumerable(Of TSource))
  spec.csharp:
  - uid: System.Linq.Enumerable.ToList``1(System.Collections.Generic.IEnumerable{``0})
    name: ToList<TSource>
    fullName: System.Linq.Enumerable.ToList<TSource>
  - name: (
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    fullName: <
  - name: TSource
    fullName: TSource
  - name: '>'
    fullName: '>'
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Linq.Enumerable.ToList``1(System.Collections.Generic.IEnumerable{``0})
    name: ToList(Of TSource)
    fullName: System.Linq.Enumerable.ToList(Of TSource)
  - name: (
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - name: TSource
    fullName: TSource
  - name: )
    fullName: )
  - name: )
    fullName: )
  nameWithType: Enumerable.ToList<TSource>(IEnumerable<TSource>)
  nameWithType.vb: Enumerable.ToList(Of TSource)(IEnumerable(Of TSource))
  commentId: M:System.Linq.Enumerable.ToList``1(System.Collections.Generic.IEnumerable{``0})
- uid: System.Linq.Enumerable.ToLookup``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})
  isExternal: true
  name: ToLookup<TSource, TKey>(IEnumerable<TSource>, Func<TSource, TKey>)
  fullName: System.Linq.Enumerable.ToLookup<TSource, TKey>(System.Collections.Generic.IEnumerable<TSource>, System.Func<TSource, TKey>)
  fullname.vb: System.Linq.Enumerable.ToLookup(Of TSource, TKey)(System.Collections.Generic.IEnumerable(Of TSource), System.Func(Of TSource, TKey))
  name.vb: ToLookup(Of TSource, TKey)(IEnumerable(Of TSource), Func(Of TSource, TKey))
  spec.csharp:
  - uid: System.Linq.Enumerable.ToLookup``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})
    name: ToLookup<TSource, TKey>
    fullName: System.Linq.Enumerable.ToLookup<TSource, TKey>
  - name: (
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    fullName: <
  - name: TSource
    fullName: TSource
  - name: '>'
    fullName: '>'
  - name: ', '
    fullName: ', '
  - uid: System.Func`2
    name: Func
    fullName: System.Func
    isExternal: true
  - name: <
    fullName: <
  - name: TSource
    fullName: TSource
  - name: ', '
    fullName: ', '
  - name: TKey
    fullName: TKey
  - name: '>'
    fullName: '>'
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Linq.Enumerable.ToLookup``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})
    name: ToLookup(Of TSource, TKey)
    fullName: System.Linq.Enumerable.ToLookup(Of TSource, TKey)
  - name: (
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - name: TSource
    fullName: TSource
  - name: )
    fullName: )
  - name: ', '
    fullName: ', '
  - uid: System.Func`2
    name: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - name: TSource
    fullName: TSource
  - name: ', '
    fullName: ', '
  - name: TKey
    fullName: TKey
  - name: )
    fullName: )
  - name: )
    fullName: )
  nameWithType: Enumerable.ToLookup<TSource, TKey>(IEnumerable<TSource>, Func<TSource, TKey>)
  nameWithType.vb: Enumerable.ToLookup(Of TSource, TKey)(IEnumerable(Of TSource), Func(Of TSource, TKey))
  commentId: M:System.Linq.Enumerable.ToLookup``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})
- uid: System.Linq.Enumerable.ToLookup``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IEqualityComparer{``1})
  isExternal: true
  name: ToLookup<TSource, TKey>(IEnumerable<TSource>, Func<TSource, TKey>, IEqualityComparer<TKey>)
  fullName: System.Linq.Enumerable.ToLookup<TSource, TKey>(System.Collections.Generic.IEnumerable<TSource>, System.Func<TSource, TKey>, System.Collections.Generic.IEqualityComparer<TKey>)
  fullname.vb: System.Linq.Enumerable.ToLookup(Of TSource, TKey)(System.Collections.Generic.IEnumerable(Of TSource), System.Func(Of TSource, TKey), System.Collections.Generic.IEqualityComparer(Of TKey))
  name.vb: ToLookup(Of TSource, TKey)(IEnumerable(Of TSource), Func(Of TSource, TKey), IEqualityComparer(Of TKey))
  spec.csharp:
  - uid: System.Linq.Enumerable.ToLookup``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IEqualityComparer{``1})
    name: ToLookup<TSource, TKey>
    fullName: System.Linq.Enumerable.ToLookup<TSource, TKey>
  - name: (
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    fullName: <
  - name: TSource
    fullName: TSource
  - name: '>'
    fullName: '>'
  - name: ', '
    fullName: ', '
  - uid: System.Func`2
    name: Func
    fullName: System.Func
    isExternal: true
  - name: <
    fullName: <
  - name: TSource
    fullName: TSource
  - name: ', '
    fullName: ', '
  - name: TKey
    fullName: TKey
  - name: '>'
    fullName: '>'
  - name: ', '
    fullName: ', '
  - uid: System.Collections.Generic.IEqualityComparer`1
    name: IEqualityComparer
    fullName: System.Collections.Generic.IEqualityComparer
    isExternal: true
  - name: <
    fullName: <
  - name: TKey
    fullName: TKey
  - name: '>'
    fullName: '>'
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Linq.Enumerable.ToLookup``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IEqualityComparer{``1})
    name: ToLookup(Of TSource, TKey)
    fullName: System.Linq.Enumerable.ToLookup(Of TSource, TKey)
  - name: (
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - name: TSource
    fullName: TSource
  - name: )
    fullName: )
  - name: ', '
    fullName: ', '
  - uid: System.Func`2
    name: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - name: TSource
    fullName: TSource
  - name: ', '
    fullName: ', '
  - name: TKey
    fullName: TKey
  - name: )
    fullName: )
  - name: ', '
    fullName: ', '
  - uid: System.Collections.Generic.IEqualityComparer`1
    name: IEqualityComparer
    fullName: System.Collections.Generic.IEqualityComparer
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - name: TKey
    fullName: TKey
  - name: )
    fullName: )
  - name: )
    fullName: )
  nameWithType: Enumerable.ToLookup<TSource, TKey>(IEnumerable<TSource>, Func<TSource, TKey>, IEqualityComparer<TKey>)
  nameWithType.vb: Enumerable.ToLookup(Of TSource, TKey)(IEnumerable(Of TSource), Func(Of TSource, TKey), IEqualityComparer(Of TKey))
  commentId: M:System.Linq.Enumerable.ToLookup``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IEqualityComparer{``1})
- uid: System.Linq.Enumerable.ToLookup``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2})
  isExternal: true
  name: ToLookup<TSource, TKey, TElement>(IEnumerable<TSource>, Func<TSource, TKey>, Func<TSource, TElement>)
  fullName: System.Linq.Enumerable.ToLookup<TSource, TKey, TElement>(System.Collections.Generic.IEnumerable<TSource>, System.Func<TSource, TKey>, System.Func<TSource, TElement>)
  fullname.vb: System.Linq.Enumerable.ToLookup(Of TSource, TKey, TElement)(System.Collections.Generic.IEnumerable(Of TSource), System.Func(Of TSource, TKey), System.Func(Of TSource, TElement))
  name.vb: ToLookup(Of TSource, TKey, TElement)(IEnumerable(Of TSource), Func(Of TSource, TKey), Func(Of TSource, TElement))
  spec.csharp:
  - uid: System.Linq.Enumerable.ToLookup``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2})
    name: ToLookup<TSource, TKey, TElement>
    fullName: System.Linq.Enumerable.ToLookup<TSource, TKey, TElement>
  - name: (
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    fullName: <
  - name: TSource
    fullName: TSource
  - name: '>'
    fullName: '>'
  - name: ', '
    fullName: ', '
  - uid: System.Func`2
    name: Func
    fullName: System.Func
    isExternal: true
  - name: <
    fullName: <
  - name: TSource
    fullName: TSource
  - name: ', '
    fullName: ', '
  - name: TKey
    fullName: TKey
  - name: '>'
    fullName: '>'
  - name: ', '
    fullName: ', '
  - uid: System.Func`2
    name: Func
    fullName: System.Func
    isExternal: true
  - name: <
    fullName: <
  - name: TSource
    fullName: TSource
  - name: ', '
    fullName: ', '
  - name: TElement
    fullName: TElement
  - name: '>'
    fullName: '>'
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Linq.Enumerable.ToLookup``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2})
    name: ToLookup(Of TSource, TKey, TElement)
    fullName: System.Linq.Enumerable.ToLookup(Of TSource, TKey, TElement)
  - name: (
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - name: TSource
    fullName: TSource
  - name: )
    fullName: )
  - name: ', '
    fullName: ', '
  - uid: System.Func`2
    name: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - name: TSource
    fullName: TSource
  - name: ', '
    fullName: ', '
  - name: TKey
    fullName: TKey
  - name: )
    fullName: )
  - name: ', '
    fullName: ', '
  - uid: System.Func`2
    name: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - name: TSource
    fullName: TSource
  - name: ', '
    fullName: ', '
  - name: TElement
    fullName: TElement
  - name: )
    fullName: )
  - name: )
    fullName: )
  nameWithType: Enumerable.ToLookup<TSource, TKey, TElement>(IEnumerable<TSource>, Func<TSource, TKey>, Func<TSource, TElement>)
  nameWithType.vb: Enumerable.ToLookup(Of TSource, TKey, TElement)(IEnumerable(Of TSource), Func(Of TSource, TKey), Func(Of TSource, TElement))
  commentId: M:System.Linq.Enumerable.ToLookup``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2})
- uid: System.Linq.Enumerable.ToLookup``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})
  isExternal: true
  name: ToLookup<TSource, TKey, TElement>(IEnumerable<TSource>, Func<TSource, TKey>, Func<TSource, TElement>, IEqualityComparer<TKey>)
  fullName: System.Linq.Enumerable.ToLookup<TSource, TKey, TElement>(System.Collections.Generic.IEnumerable<TSource>, System.Func<TSource, TKey>, System.Func<TSource, TElement>, System.Collections.Generic.IEqualityComparer<TKey>)
  fullname.vb: System.Linq.Enumerable.ToLookup(Of TSource, TKey, TElement)(System.Collections.Generic.IEnumerable(Of TSource), System.Func(Of TSource, TKey), System.Func(Of TSource, TElement), System.Collections.Generic.IEqualityComparer(Of TKey))
  name.vb: ToLookup(Of TSource, TKey, TElement)(IEnumerable(Of TSource), Func(Of TSource, TKey), Func(Of TSource, TElement), IEqualityComparer(Of TKey))
  spec.csharp:
  - uid: System.Linq.Enumerable.ToLookup``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})
    name: ToLookup<TSource, TKey, TElement>
    fullName: System.Linq.Enumerable.ToLookup<TSource, TKey, TElement>
  - name: (
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    fullName: <
  - name: TSource
    fullName: TSource
  - name: '>'
    fullName: '>'
  - name: ', '
    fullName: ', '
  - uid: System.Func`2
    name: Func
    fullName: System.Func
    isExternal: true
  - name: <
    fullName: <
  - name: TSource
    fullName: TSource
  - name: ', '
    fullName: ', '
  - name: TKey
    fullName: TKey
  - name: '>'
    fullName: '>'
  - name: ', '
    fullName: ', '
  - uid: System.Func`2
    name: Func
    fullName: System.Func
    isExternal: true
  - name: <
    fullName: <
  - name: TSource
    fullName: TSource
  - name: ', '
    fullName: ', '
  - name: TElement
    fullName: TElement
  - name: '>'
    fullName: '>'
  - name: ', '
    fullName: ', '
  - uid: System.Collections.Generic.IEqualityComparer`1
    name: IEqualityComparer
    fullName: System.Collections.Generic.IEqualityComparer
    isExternal: true
  - name: <
    fullName: <
  - name: TKey
    fullName: TKey
  - name: '>'
    fullName: '>'
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Linq.Enumerable.ToLookup``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})
    name: ToLookup(Of TSource, TKey, TElement)
    fullName: System.Linq.Enumerable.ToLookup(Of TSource, TKey, TElement)
  - name: (
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - name: TSource
    fullName: TSource
  - name: )
    fullName: )
  - name: ', '
    fullName: ', '
  - uid: System.Func`2
    name: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - name: TSource
    fullName: TSource
  - name: ', '
    fullName: ', '
  - name: TKey
    fullName: TKey
  - name: )
    fullName: )
  - name: ', '
    fullName: ', '
  - uid: System.Func`2
    name: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - name: TSource
    fullName: TSource
  - name: ', '
    fullName: ', '
  - name: TElement
    fullName: TElement
  - name: )
    fullName: )
  - name: ', '
    fullName: ', '
  - uid: System.Collections.Generic.IEqualityComparer`1
    name: IEqualityComparer
    fullName: System.Collections.Generic.IEqualityComparer
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - name: TKey
    fullName: TKey
  - name: )
    fullName: )
  - name: )
    fullName: )
  nameWithType: Enumerable.ToLookup<TSource, TKey, TElement>(IEnumerable<TSource>, Func<TSource, TKey>, Func<TSource, TElement>, IEqualityComparer<TKey>)
  nameWithType.vb: Enumerable.ToLookup(Of TSource, TKey, TElement)(IEnumerable(Of TSource), Func(Of TSource, TKey), Func(Of TSource, TElement), IEqualityComparer(Of TKey))
  commentId: M:System.Linq.Enumerable.ToLookup``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})
- uid: System.Linq.Enumerable.Union``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0})
  isExternal: true
  name: Union<TSource>(IEnumerable<TSource>, IEnumerable<TSource>)
  fullName: System.Linq.Enumerable.Union<TSource>(System.Collections.Generic.IEnumerable<TSource>, System.Collections.Generic.IEnumerable<TSource>)
  fullname.vb: System.Linq.Enumerable.Union(Of TSource)(System.Collections.Generic.IEnumerable(Of TSource), System.Collections.Generic.IEnumerable(Of TSource))
  name.vb: Union(Of TSource)(IEnumerable(Of TSource), IEnumerable(Of TSource))
  spec.csharp:
  - uid: System.Linq.Enumerable.Union``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0})
    name: Union<TSource>
    fullName: System.Linq.Enumerable.Union<TSource>
  - name: (
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    fullName: <
  - name: TSource
    fullName: TSource
  - name: '>'
    fullName: '>'
  - name: ', '
    fullName: ', '
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    fullName: <
  - name: TSource
    fullName: TSource
  - name: '>'
    fullName: '>'
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Linq.Enumerable.Union``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0})
    name: Union(Of TSource)
    fullName: System.Linq.Enumerable.Union(Of TSource)
  - name: (
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - name: TSource
    fullName: TSource
  - name: )
    fullName: )
  - name: ', '
    fullName: ', '
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - name: TSource
    fullName: TSource
  - name: )
    fullName: )
  - name: )
    fullName: )
  nameWithType: Enumerable.Union<TSource>(IEnumerable<TSource>, IEnumerable<TSource>)
  nameWithType.vb: Enumerable.Union(Of TSource)(IEnumerable(Of TSource), IEnumerable(Of TSource))
  commentId: M:System.Linq.Enumerable.Union``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0})
- uid: System.Linq.Enumerable.Union``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEqualityComparer{``0})
  isExternal: true
  name: Union<TSource>(IEnumerable<TSource>, IEnumerable<TSource>, IEqualityComparer<TSource>)
  fullName: System.Linq.Enumerable.Union<TSource>(System.Collections.Generic.IEnumerable<TSource>, System.Collections.Generic.IEnumerable<TSource>, System.Collections.Generic.IEqualityComparer<TSource>)
  fullname.vb: System.Linq.Enumerable.Union(Of TSource)(System.Collections.Generic.IEnumerable(Of TSource), System.Collections.Generic.IEnumerable(Of TSource), System.Collections.Generic.IEqualityComparer(Of TSource))
  name.vb: Union(Of TSource)(IEnumerable(Of TSource), IEnumerable(Of TSource), IEqualityComparer(Of TSource))
  spec.csharp:
  - uid: System.Linq.Enumerable.Union``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEqualityComparer{``0})
    name: Union<TSource>
    fullName: System.Linq.Enumerable.Union<TSource>
  - name: (
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    fullName: <
  - name: TSource
    fullName: TSource
  - name: '>'
    fullName: '>'
  - name: ', '
    fullName: ', '
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    fullName: <
  - name: TSource
    fullName: TSource
  - name: '>'
    fullName: '>'
  - name: ', '
    fullName: ', '
  - uid: System.Collections.Generic.IEqualityComparer`1
    name: IEqualityComparer
    fullName: System.Collections.Generic.IEqualityComparer
    isExternal: true
  - name: <
    fullName: <
  - name: TSource
    fullName: TSource
  - name: '>'
    fullName: '>'
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Linq.Enumerable.Union``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEqualityComparer{``0})
    name: Union(Of TSource)
    fullName: System.Linq.Enumerable.Union(Of TSource)
  - name: (
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - name: TSource
    fullName: TSource
  - name: )
    fullName: )
  - name: ', '
    fullName: ', '
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - name: TSource
    fullName: TSource
  - name: )
    fullName: )
  - name: ', '
    fullName: ', '
  - uid: System.Collections.Generic.IEqualityComparer`1
    name: IEqualityComparer
    fullName: System.Collections.Generic.IEqualityComparer
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - name: TSource
    fullName: TSource
  - name: )
    fullName: )
  - name: )
    fullName: )
  nameWithType: Enumerable.Union<TSource>(IEnumerable<TSource>, IEnumerable<TSource>, IEqualityComparer<TSource>)
  nameWithType.vb: Enumerable.Union(Of TSource)(IEnumerable(Of TSource), IEnumerable(Of TSource), IEqualityComparer(Of TSource))
  commentId: M:System.Linq.Enumerable.Union``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEqualityComparer{``0})
- uid: System.Linq.Enumerable.Where``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})
  isExternal: true
  name: Where<TSource>(IEnumerable<TSource>, Func<TSource, Boolean>)
  fullName: System.Linq.Enumerable.Where<TSource>(System.Collections.Generic.IEnumerable<TSource>, System.Func<TSource, System.Boolean>)
  fullname.vb: System.Linq.Enumerable.Where(Of TSource)(System.Collections.Generic.IEnumerable(Of TSource), System.Func(Of TSource, System.Boolean))
  name.vb: Where(Of TSource)(IEnumerable(Of TSource), Func(Of TSource, Boolean))
  spec.csharp:
  - uid: System.Linq.Enumerable.Where``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})
    name: Where<TSource>
    fullName: System.Linq.Enumerable.Where<TSource>
  - name: (
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    fullName: <
  - name: TSource
    fullName: TSource
  - name: '>'
    fullName: '>'
  - name: ', '
    fullName: ', '
  - uid: System.Func`2
    name: Func
    fullName: System.Func
    isExternal: true
  - name: <
    fullName: <
  - name: TSource
    fullName: TSource
  - name: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: '>'
    fullName: '>'
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Linq.Enumerable.Where``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})
    name: Where(Of TSource)
    fullName: System.Linq.Enumerable.Where(Of TSource)
  - name: (
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - name: TSource
    fullName: TSource
  - name: )
    fullName: )
  - name: ', '
    fullName: ', '
  - uid: System.Func`2
    name: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - name: TSource
    fullName: TSource
  - name: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    fullName: )
  - name: )
    fullName: )
  nameWithType: Enumerable.Where<TSource>(IEnumerable<TSource>, Func<TSource, Boolean>)
  nameWithType.vb: Enumerable.Where(Of TSource)(IEnumerable(Of TSource), Func(Of TSource, Boolean))
  commentId: M:System.Linq.Enumerable.Where``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})
- uid: System.Linq.Enumerable.Where``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32,System.Boolean})
  isExternal: true
  name: Where<TSource>(IEnumerable<TSource>, Func<TSource, Int32, Boolean>)
  fullName: System.Linq.Enumerable.Where<TSource>(System.Collections.Generic.IEnumerable<TSource>, System.Func<TSource, System.Int32, System.Boolean>)
  fullname.vb: System.Linq.Enumerable.Where(Of TSource)(System.Collections.Generic.IEnumerable(Of TSource), System.Func(Of TSource, System.Int32, System.Boolean))
  name.vb: Where(Of TSource)(IEnumerable(Of TSource), Func(Of TSource, Int32, Boolean))
  spec.csharp:
  - uid: System.Linq.Enumerable.Where``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32,System.Boolean})
    name: Where<TSource>
    fullName: System.Linq.Enumerable.Where<TSource>
  - name: (
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    fullName: <
  - name: TSource
    fullName: TSource
  - name: '>'
    fullName: '>'
  - name: ', '
    fullName: ', '
  - uid: System.Func`3
    name: Func
    fullName: System.Func
    isExternal: true
  - name: <
    fullName: <
  - name: TSource
    fullName: TSource
  - name: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: '>'
    fullName: '>'
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Linq.Enumerable.Where``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32,System.Boolean})
    name: Where(Of TSource)
    fullName: System.Linq.Enumerable.Where(Of TSource)
  - name: (
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - name: TSource
    fullName: TSource
  - name: )
    fullName: )
  - name: ', '
    fullName: ', '
  - uid: System.Func`3
    name: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - name: TSource
    fullName: TSource
  - name: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    fullName: )
  - name: )
    fullName: )
  nameWithType: Enumerable.Where<TSource>(IEnumerable<TSource>, Func<TSource, Int32, Boolean>)
  nameWithType.vb: Enumerable.Where(Of TSource)(IEnumerable(Of TSource), Func(Of TSource, Int32, Boolean))
  commentId: M:System.Linq.Enumerable.Where``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32,System.Boolean})
- uid: System.Linq.Enumerable.Zip``3(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``1,``2})
  isExternal: true
  name: Zip<TFirst, TSecond, TResult>(IEnumerable<TFirst>, IEnumerable<TSecond>, Func<TFirst, TSecond, TResult>)
  fullName: System.Linq.Enumerable.Zip<TFirst, TSecond, TResult>(System.Collections.Generic.IEnumerable<TFirst>, System.Collections.Generic.IEnumerable<TSecond>, System.Func<TFirst, TSecond, TResult>)
  fullname.vb: System.Linq.Enumerable.Zip(Of TFirst, TSecond, TResult)(System.Collections.Generic.IEnumerable(Of TFirst), System.Collections.Generic.IEnumerable(Of TSecond), System.Func(Of TFirst, TSecond, TResult))
  name.vb: Zip(Of TFirst, TSecond, TResult)(IEnumerable(Of TFirst), IEnumerable(Of TSecond), Func(Of TFirst, TSecond, TResult))
  spec.csharp:
  - uid: System.Linq.Enumerable.Zip``3(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``1,``2})
    name: Zip<TFirst, TSecond, TResult>
    fullName: System.Linq.Enumerable.Zip<TFirst, TSecond, TResult>
  - name: (
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    fullName: <
  - name: TFirst
    fullName: TFirst
  - name: '>'
    fullName: '>'
  - name: ', '
    fullName: ', '
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    fullName: <
  - name: TSecond
    fullName: TSecond
  - name: '>'
    fullName: '>'
  - name: ', '
    fullName: ', '
  - uid: System.Func`3
    name: Func
    fullName: System.Func
    isExternal: true
  - name: <
    fullName: <
  - name: TFirst
    fullName: TFirst
  - name: ', '
    fullName: ', '
  - name: TSecond
    fullName: TSecond
  - name: ', '
    fullName: ', '
  - name: TResult
    fullName: TResult
  - name: '>'
    fullName: '>'
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Linq.Enumerable.Zip``3(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``1,``2})
    name: Zip(Of TFirst, TSecond, TResult)
    fullName: System.Linq.Enumerable.Zip(Of TFirst, TSecond, TResult)
  - name: (
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - name: TFirst
    fullName: TFirst
  - name: )
    fullName: )
  - name: ', '
    fullName: ', '
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - name: TSecond
    fullName: TSecond
  - name: )
    fullName: )
  - name: ', '
    fullName: ', '
  - uid: System.Func`3
    name: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - name: TFirst
    fullName: TFirst
  - name: ', '
    fullName: ', '
  - name: TSecond
    fullName: TSecond
  - name: ', '
    fullName: ', '
  - name: TResult
    fullName: TResult
  - name: )
    fullName: )
  - name: )
    fullName: )
  nameWithType: Enumerable.Zip<TFirst, TSecond, TResult>(IEnumerable<TFirst>, IEnumerable<TSecond>, Func<TFirst, TSecond, TResult>)
  nameWithType.vb: Enumerable.Zip(Of TFirst, TSecond, TResult)(IEnumerable(Of TFirst), IEnumerable(Of TSecond), Func(Of TFirst, TSecond, TResult))
  commentId: M:System.Linq.Enumerable.Zip``3(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``1,``2})
- uid: System.Linq
  isExternal: false
  name: System.Linq
  fullName: System.Linq
  nameWithType: System.Linq
  commentId: N:System.Linq
- uid: System.Collections.Generic.ICollection{System.Net.NetworkInformation.GatewayIPAddressInformation}.Count
  parent: System.Collections.Generic.ICollection{System.Net.NetworkInformation.GatewayIPAddressInformation}
  definition: System.Collections.Generic.ICollection`1.Count
  name: Count
  fullName: System.Collections.Generic.ICollection<System.Net.NetworkInformation.GatewayIPAddressInformation>.Count
  fullname.vb: System.Collections.Generic.ICollection(Of System.Net.NetworkInformation.GatewayIPAddressInformation).Count
  nameWithType: ICollection<GatewayIPAddressInformation>.Count
  nameWithType.vb: ICollection(Of GatewayIPAddressInformation).Count
  commentId: P:System.Collections.Generic.ICollection{System.Net.NetworkInformation.GatewayIPAddressInformation}.Count
- uid: System.Int32
  parent: System
  isExternal: false
  name: Int32
  fullName: System.Int32
  nameWithType: Int32
  commentId: T:System.Int32
- uid: System.Collections.Generic.ICollection`1.Count
  isExternal: false
  name: Count
  fullName: System.Collections.Generic.ICollection<T>.Count
  fullname.vb: System.Collections.Generic.ICollection(Of T).Count
  nameWithType: ICollection<T>.Count
  nameWithType.vb: ICollection(Of T).Count
  commentId: P:System.Collections.Generic.ICollection`1.Count
- uid: System.Collections.Generic.ICollection{System.Net.NetworkInformation.GatewayIPAddressInformation}.IsReadOnly
  parent: System.Collections.Generic.ICollection{System.Net.NetworkInformation.GatewayIPAddressInformation}
  definition: System.Collections.Generic.ICollection`1.IsReadOnly
  name: IsReadOnly
  fullName: System.Collections.Generic.ICollection<System.Net.NetworkInformation.GatewayIPAddressInformation>.IsReadOnly
  fullname.vb: System.Collections.Generic.ICollection(Of System.Net.NetworkInformation.GatewayIPAddressInformation).IsReadOnly
  nameWithType: ICollection<GatewayIPAddressInformation>.IsReadOnly
  nameWithType.vb: ICollection(Of GatewayIPAddressInformation).IsReadOnly
  commentId: P:System.Collections.Generic.ICollection{System.Net.NetworkInformation.GatewayIPAddressInformation}.IsReadOnly
- uid: System.Boolean
  parent: System
  isExternal: false
  name: Boolean
  fullName: System.Boolean
  nameWithType: Boolean
  commentId: T:System.Boolean
- uid: System.Collections.Generic.ICollection`1.IsReadOnly
  isExternal: false
  name: IsReadOnly
  fullName: System.Collections.Generic.ICollection<T>.IsReadOnly
  fullname.vb: System.Collections.Generic.ICollection(Of T).IsReadOnly
  nameWithType: ICollection<T>.IsReadOnly
  nameWithType.vb: ICollection(Of T).IsReadOnly
  commentId: P:System.Collections.Generic.ICollection`1.IsReadOnly
- uid: System.Net.NetworkInformation.GatewayIPAddressInformation
  parent: System.Net.NetworkInformation
  isExternal: false
  name: GatewayIPAddressInformation
  fullName: System.Net.NetworkInformation.GatewayIPAddressInformation
  nameWithType: GatewayIPAddressInformation
  commentId: T:System.Net.NetworkInformation.GatewayIPAddressInformation
- uid: System.Collections.Generic.ICollection{System.Net.NetworkInformation.GatewayIPAddressInformation}.Add(System.Net.NetworkInformation.GatewayIPAddressInformation)
  parent: System.Collections.Generic.ICollection{System.Net.NetworkInformation.GatewayIPAddressInformation}
  definition: System.Collections.Generic.ICollection`1.Add(`0)
  name: Add(GatewayIPAddressInformation)
  fullName: System.Collections.Generic.ICollection<System.Net.NetworkInformation.GatewayIPAddressInformation>.Add(System.Net.NetworkInformation.GatewayIPAddressInformation)
  fullname.vb: System.Collections.Generic.ICollection(Of System.Net.NetworkInformation.GatewayIPAddressInformation).Add(System.Net.NetworkInformation.GatewayIPAddressInformation)
  spec.csharp:
  - uid: System.Collections.Generic.ICollection`1.Add(`0)
    name: Add
    fullName: System.Collections.Generic.ICollection<System.Net.NetworkInformation.GatewayIPAddressInformation>.Add
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Net.NetworkInformation.GatewayIPAddressInformation
    name: GatewayIPAddressInformation
    fullName: System.Net.NetworkInformation.GatewayIPAddressInformation
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Collections.Generic.ICollection`1.Add(`0)
    name: Add
    fullName: System.Collections.Generic.ICollection(Of System.Net.NetworkInformation.GatewayIPAddressInformation).Add
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Net.NetworkInformation.GatewayIPAddressInformation
    name: GatewayIPAddressInformation
    fullName: System.Net.NetworkInformation.GatewayIPAddressInformation
  - name: )
    fullName: )
  nameWithType: ICollection<GatewayIPAddressInformation>.Add(GatewayIPAddressInformation)
  nameWithType.vb: ICollection(Of GatewayIPAddressInformation).Add(GatewayIPAddressInformation)
  commentId: M:System.Collections.Generic.ICollection{System.Net.NetworkInformation.GatewayIPAddressInformation}.Add(System.Net.NetworkInformation.GatewayIPAddressInformation)
- uid: System.Collections.Generic.ICollection`1.Add(`0)
  isExternal: false
  name: Add(T)
  fullName: System.Collections.Generic.ICollection<T>.Add(T)
  fullname.vb: System.Collections.Generic.ICollection(Of T).Add(T)
  spec.csharp:
  - uid: System.Collections.Generic.ICollection`1.Add(`0)
    name: Add
    fullName: System.Collections.Generic.ICollection<T>.Add
  - name: (
    fullName: (
  - name: T
    fullName: T
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Collections.Generic.ICollection`1.Add(`0)
    name: Add
    fullName: System.Collections.Generic.ICollection(Of T).Add
  - name: (
    fullName: (
  - name: T
    fullName: T
  - name: )
    fullName: )
  nameWithType: ICollection<T>.Add(T)
  nameWithType.vb: ICollection(Of T).Add(T)
  commentId: M:System.Collections.Generic.ICollection`1.Add(`0)
- uid: System.Collections.Generic.ICollection{System.Net.NetworkInformation.GatewayIPAddressInformation}.Clear
  parent: System.Collections.Generic.ICollection{System.Net.NetworkInformation.GatewayIPAddressInformation}
  definition: System.Collections.Generic.ICollection`1.Clear
  name: Clear()
  fullName: System.Collections.Generic.ICollection<System.Net.NetworkInformation.GatewayIPAddressInformation>.Clear()
  fullname.vb: System.Collections.Generic.ICollection(Of System.Net.NetworkInformation.GatewayIPAddressInformation).Clear()
  spec.csharp:
  - uid: System.Collections.Generic.ICollection`1.Clear
    name: Clear
    fullName: System.Collections.Generic.ICollection<System.Net.NetworkInformation.GatewayIPAddressInformation>.Clear
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Collections.Generic.ICollection`1.Clear
    name: Clear
    fullName: System.Collections.Generic.ICollection(Of System.Net.NetworkInformation.GatewayIPAddressInformation).Clear
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  nameWithType: ICollection<GatewayIPAddressInformation>.Clear()
  nameWithType.vb: ICollection(Of GatewayIPAddressInformation).Clear()
  commentId: M:System.Collections.Generic.ICollection{System.Net.NetworkInformation.GatewayIPAddressInformation}.Clear
- uid: System.Collections.Generic.ICollection`1.Clear
  isExternal: false
  name: Clear()
  fullName: System.Collections.Generic.ICollection<T>.Clear()
  fullname.vb: System.Collections.Generic.ICollection(Of T).Clear()
  spec.csharp:
  - uid: System.Collections.Generic.ICollection`1.Clear
    name: Clear
    fullName: System.Collections.Generic.ICollection<T>.Clear
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Collections.Generic.ICollection`1.Clear
    name: Clear
    fullName: System.Collections.Generic.ICollection(Of T).Clear
  - name: (
    fullName: (
  - name: )
    fullName: )
  nameWithType: ICollection<T>.Clear()
  nameWithType.vb: ICollection(Of T).Clear()
  commentId: M:System.Collections.Generic.ICollection`1.Clear
- uid: System.Collections.Generic.ICollection{System.Net.NetworkInformation.GatewayIPAddressInformation}.Contains(System.Net.NetworkInformation.GatewayIPAddressInformation)
  parent: System.Collections.Generic.ICollection{System.Net.NetworkInformation.GatewayIPAddressInformation}
  definition: System.Collections.Generic.ICollection`1.Contains(`0)
  name: Contains(GatewayIPAddressInformation)
  fullName: System.Collections.Generic.ICollection<System.Net.NetworkInformation.GatewayIPAddressInformation>.Contains(System.Net.NetworkInformation.GatewayIPAddressInformation)
  fullname.vb: System.Collections.Generic.ICollection(Of System.Net.NetworkInformation.GatewayIPAddressInformation).Contains(System.Net.NetworkInformation.GatewayIPAddressInformation)
  spec.csharp:
  - uid: System.Collections.Generic.ICollection`1.Contains(`0)
    name: Contains
    fullName: System.Collections.Generic.ICollection<System.Net.NetworkInformation.GatewayIPAddressInformation>.Contains
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Net.NetworkInformation.GatewayIPAddressInformation
    name: GatewayIPAddressInformation
    fullName: System.Net.NetworkInformation.GatewayIPAddressInformation
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Collections.Generic.ICollection`1.Contains(`0)
    name: Contains
    fullName: System.Collections.Generic.ICollection(Of System.Net.NetworkInformation.GatewayIPAddressInformation).Contains
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Net.NetworkInformation.GatewayIPAddressInformation
    name: GatewayIPAddressInformation
    fullName: System.Net.NetworkInformation.GatewayIPAddressInformation
  - name: )
    fullName: )
  nameWithType: ICollection<GatewayIPAddressInformation>.Contains(GatewayIPAddressInformation)
  nameWithType.vb: ICollection(Of GatewayIPAddressInformation).Contains(GatewayIPAddressInformation)
  commentId: M:System.Collections.Generic.ICollection{System.Net.NetworkInformation.GatewayIPAddressInformation}.Contains(System.Net.NetworkInformation.GatewayIPAddressInformation)
- uid: System.Collections.Generic.ICollection`1.Contains(`0)
  isExternal: false
  name: Contains(T)
  fullName: System.Collections.Generic.ICollection<T>.Contains(T)
  fullname.vb: System.Collections.Generic.ICollection(Of T).Contains(T)
  spec.csharp:
  - uid: System.Collections.Generic.ICollection`1.Contains(`0)
    name: Contains
    fullName: System.Collections.Generic.ICollection<T>.Contains
  - name: (
    fullName: (
  - name: T
    fullName: T
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Collections.Generic.ICollection`1.Contains(`0)
    name: Contains
    fullName: System.Collections.Generic.ICollection(Of T).Contains
  - name: (
    fullName: (
  - name: T
    fullName: T
  - name: )
    fullName: )
  nameWithType: ICollection<T>.Contains(T)
  nameWithType.vb: ICollection(Of T).Contains(T)
  commentId: M:System.Collections.Generic.ICollection`1.Contains(`0)
- uid: System.Collections.Generic.ICollection{System.Net.NetworkInformation.GatewayIPAddressInformation}.CopyTo(System.Net.NetworkInformation.GatewayIPAddressInformation[],System.Int32)
  parent: System.Collections.Generic.ICollection{System.Net.NetworkInformation.GatewayIPAddressInformation}
  definition: System.Collections.Generic.ICollection`1.CopyTo(`0[],System.Int32)
  name: CopyTo(GatewayIPAddressInformation[], Int32)
  fullName: System.Collections.Generic.ICollection<System.Net.NetworkInformation.GatewayIPAddressInformation>.CopyTo(System.Net.NetworkInformation.GatewayIPAddressInformation[], System.Int32)
  fullname.vb: System.Collections.Generic.ICollection(Of System.Net.NetworkInformation.GatewayIPAddressInformation).CopyTo(System.Net.NetworkInformation.GatewayIPAddressInformation(), System.Int32)
  name.vb: CopyTo(GatewayIPAddressInformation(), Int32)
  spec.csharp:
  - uid: System.Collections.Generic.ICollection`1.CopyTo(`0[],System.Int32)
    name: CopyTo
    fullName: System.Collections.Generic.ICollection<System.Net.NetworkInformation.GatewayIPAddressInformation>.CopyTo
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Net.NetworkInformation.GatewayIPAddressInformation
    name: GatewayIPAddressInformation
    fullName: System.Net.NetworkInformation.GatewayIPAddressInformation
  - name: '[]'
    fullName: '[]'
  - name: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Collections.Generic.ICollection`1.CopyTo(`0[],System.Int32)
    name: CopyTo
    fullName: System.Collections.Generic.ICollection(Of System.Net.NetworkInformation.GatewayIPAddressInformation).CopyTo
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Net.NetworkInformation.GatewayIPAddressInformation
    name: GatewayIPAddressInformation
    fullName: System.Net.NetworkInformation.GatewayIPAddressInformation
  - name: ()
    fullName: ()
  - name: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    fullName: )
  nameWithType: ICollection<GatewayIPAddressInformation>.CopyTo(GatewayIPAddressInformation[], Int32)
  nameWithType.vb: ICollection(Of GatewayIPAddressInformation).CopyTo(GatewayIPAddressInformation(), Int32)
  commentId: M:System.Collections.Generic.ICollection{System.Net.NetworkInformation.GatewayIPAddressInformation}.CopyTo(System.Net.NetworkInformation.GatewayIPAddressInformation[],System.Int32)
- uid: System.Net.NetworkInformation.GatewayIPAddressInformation[]
  name: GatewayIPAddressInformation[]
  fullName: System.Net.NetworkInformation.GatewayIPAddressInformation[]
  fullname.vb: System.Net.NetworkInformation.GatewayIPAddressInformation()
  name.vb: GatewayIPAddressInformation()
  spec.csharp:
  - uid: System.Net.NetworkInformation.GatewayIPAddressInformation
    name: GatewayIPAddressInformation
    fullName: System.Net.NetworkInformation.GatewayIPAddressInformation
  - name: '[]'
    fullName: '[]'
  spec.vb:
  - uid: System.Net.NetworkInformation.GatewayIPAddressInformation
    name: GatewayIPAddressInformation
    fullName: System.Net.NetworkInformation.GatewayIPAddressInformation
  - name: ()
    fullName: ()
  nameWithType: GatewayIPAddressInformation[]
  nameWithType.vb: GatewayIPAddressInformation()
- uid: System.Collections.Generic.ICollection`1.CopyTo(`0[],System.Int32)
  isExternal: true
  name: CopyTo(T[], Int32)
  fullName: System.Collections.Generic.ICollection<T>.CopyTo(T[], System.Int32)
  fullname.vb: System.Collections.Generic.ICollection(Of T).CopyTo(T(), System.Int32)
  name.vb: CopyTo(T(), Int32)
  spec.csharp:
  - uid: System.Collections.Generic.ICollection`1.CopyTo(`0[],System.Int32)
    name: CopyTo
    fullName: System.Collections.Generic.ICollection<T>.CopyTo
  - name: (
    fullName: (
  - name: T
    fullName: T
  - name: '[]'
    fullName: '[]'
  - name: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Collections.Generic.ICollection`1.CopyTo(`0[],System.Int32)
    name: CopyTo
    fullName: System.Collections.Generic.ICollection(Of T).CopyTo
  - name: (
    fullName: (
  - name: T
    fullName: T
  - name: ()
    fullName: ()
  - name: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    fullName: )
  nameWithType: ICollection<T>.CopyTo(T[], Int32)
  nameWithType.vb: ICollection(Of T).CopyTo(T(), Int32)
  commentId: M:System.Collections.Generic.ICollection`1.CopyTo(`0[],System.Int32)
- uid: System.Collections.Generic.IEnumerable{System.Net.NetworkInformation.GatewayIPAddressInformation}.GetEnumerator
  parent: System.Collections.Generic.IEnumerable{System.Net.NetworkInformation.GatewayIPAddressInformation}
  definition: System.Collections.Generic.IEnumerable`1.GetEnumerator
  name: GetEnumerator()
  fullName: System.Collections.Generic.IEnumerable<System.Net.NetworkInformation.GatewayIPAddressInformation>.GetEnumerator()
  fullname.vb: System.Collections.Generic.IEnumerable(Of System.Net.NetworkInformation.GatewayIPAddressInformation).GetEnumerator()
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1.GetEnumerator
    name: GetEnumerator
    fullName: System.Collections.Generic.IEnumerable<System.Net.NetworkInformation.GatewayIPAddressInformation>.GetEnumerator
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1.GetEnumerator
    name: GetEnumerator
    fullName: System.Collections.Generic.IEnumerable(Of System.Net.NetworkInformation.GatewayIPAddressInformation).GetEnumerator
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  nameWithType: IEnumerable<GatewayIPAddressInformation>.GetEnumerator()
  nameWithType.vb: IEnumerable(Of GatewayIPAddressInformation).GetEnumerator()
  commentId: M:System.Collections.Generic.IEnumerable{System.Net.NetworkInformation.GatewayIPAddressInformation}.GetEnumerator
- uid: System.Collections.Generic.IEnumerator{System.Net.NetworkInformation.GatewayIPAddressInformation}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IEnumerator`1
  name: IEnumerator<GatewayIPAddressInformation>
  fullName: System.Collections.Generic.IEnumerator<System.Net.NetworkInformation.GatewayIPAddressInformation>
  fullname.vb: System.Collections.Generic.IEnumerator(Of System.Net.NetworkInformation.GatewayIPAddressInformation)
  name.vb: IEnumerator(Of GatewayIPAddressInformation)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerator`1
    name: IEnumerator
    fullName: System.Collections.Generic.IEnumerator
    isExternal: true
  - name: <
    fullName: <
  - uid: System.Net.NetworkInformation.GatewayIPAddressInformation
    name: GatewayIPAddressInformation
    fullName: System.Net.NetworkInformation.GatewayIPAddressInformation
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerator`1
    name: IEnumerator
    fullName: System.Collections.Generic.IEnumerator
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - uid: System.Net.NetworkInformation.GatewayIPAddressInformation
    name: GatewayIPAddressInformation
    fullName: System.Net.NetworkInformation.GatewayIPAddressInformation
  - name: )
    fullName: )
  nameWithType: IEnumerator<GatewayIPAddressInformation>
  nameWithType.vb: IEnumerator(Of GatewayIPAddressInformation)
  commentId: T:System.Collections.Generic.IEnumerator{System.Net.NetworkInformation.GatewayIPAddressInformation}
- uid: System.Collections.Generic.IEnumerable`1.GetEnumerator
  isExternal: false
  name: GetEnumerator()
  fullName: System.Collections.Generic.IEnumerable<T>.GetEnumerator()
  fullname.vb: System.Collections.Generic.IEnumerable(Of T).GetEnumerator()
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1.GetEnumerator
    name: GetEnumerator
    fullName: System.Collections.Generic.IEnumerable<T>.GetEnumerator
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1.GetEnumerator
    name: GetEnumerator
    fullName: System.Collections.Generic.IEnumerable(Of T).GetEnumerator
  - name: (
    fullName: (
  - name: )
    fullName: )
  nameWithType: IEnumerable<T>.GetEnumerator()
  nameWithType.vb: IEnumerable(Of T).GetEnumerator()
  commentId: M:System.Collections.Generic.IEnumerable`1.GetEnumerator
- uid: System.Collections.Generic.IEnumerator`1
  isExternal: false
  name: IEnumerator<T>
  fullName: System.Collections.Generic.IEnumerator<T>
  fullname.vb: System.Collections.Generic.IEnumerator(Of T)
  name.vb: IEnumerator(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerator`1
    name: IEnumerator
    fullName: System.Collections.Generic.IEnumerator
  - name: <
    fullName: <
  - name: T
    fullName: T
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerator`1
    name: IEnumerator
    fullName: System.Collections.Generic.IEnumerator
  - name: '(Of '
    fullName: '(Of '
  - name: T
    fullName: T
  - name: )
    fullName: )
  nameWithType: IEnumerator<T>
  nameWithType.vb: IEnumerator(Of T)
  commentId: T:System.Collections.Generic.IEnumerator`1
- uid: System.Collections.Generic.ICollection{System.Net.NetworkInformation.GatewayIPAddressInformation}.Remove(System.Net.NetworkInformation.GatewayIPAddressInformation)
  parent: System.Collections.Generic.ICollection{System.Net.NetworkInformation.GatewayIPAddressInformation}
  definition: System.Collections.Generic.ICollection`1.Remove(`0)
  name: Remove(GatewayIPAddressInformation)
  fullName: System.Collections.Generic.ICollection<System.Net.NetworkInformation.GatewayIPAddressInformation>.Remove(System.Net.NetworkInformation.GatewayIPAddressInformation)
  fullname.vb: System.Collections.Generic.ICollection(Of System.Net.NetworkInformation.GatewayIPAddressInformation).Remove(System.Net.NetworkInformation.GatewayIPAddressInformation)
  spec.csharp:
  - uid: System.Collections.Generic.ICollection`1.Remove(`0)
    name: Remove
    fullName: System.Collections.Generic.ICollection<System.Net.NetworkInformation.GatewayIPAddressInformation>.Remove
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Net.NetworkInformation.GatewayIPAddressInformation
    name: GatewayIPAddressInformation
    fullName: System.Net.NetworkInformation.GatewayIPAddressInformation
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Collections.Generic.ICollection`1.Remove(`0)
    name: Remove
    fullName: System.Collections.Generic.ICollection(Of System.Net.NetworkInformation.GatewayIPAddressInformation).Remove
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Net.NetworkInformation.GatewayIPAddressInformation
    name: GatewayIPAddressInformation
    fullName: System.Net.NetworkInformation.GatewayIPAddressInformation
  - name: )
    fullName: )
  nameWithType: ICollection<GatewayIPAddressInformation>.Remove(GatewayIPAddressInformation)
  nameWithType.vb: ICollection(Of GatewayIPAddressInformation).Remove(GatewayIPAddressInformation)
  commentId: M:System.Collections.Generic.ICollection{System.Net.NetworkInformation.GatewayIPAddressInformation}.Remove(System.Net.NetworkInformation.GatewayIPAddressInformation)
- uid: System.Collections.Generic.ICollection`1.Remove(`0)
  isExternal: false
  name: Remove(T)
  fullName: System.Collections.Generic.ICollection<T>.Remove(T)
  fullname.vb: System.Collections.Generic.ICollection(Of T).Remove(T)
  spec.csharp:
  - uid: System.Collections.Generic.ICollection`1.Remove(`0)
    name: Remove
    fullName: System.Collections.Generic.ICollection<T>.Remove
  - name: (
    fullName: (
  - name: T
    fullName: T
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Collections.Generic.ICollection`1.Remove(`0)
    name: Remove
    fullName: System.Collections.Generic.ICollection(Of T).Remove
  - name: (
    fullName: (
  - name: T
    fullName: T
  - name: )
    fullName: )
  nameWithType: ICollection<T>.Remove(T)
  nameWithType.vb: ICollection(Of T).Remove(T)
  commentId: M:System.Collections.Generic.ICollection`1.Remove(`0)
- uid: System.Collections.IEnumerable.GetEnumerator
  parent: System.Collections.IEnumerable
  isExternal: false
  name: GetEnumerator()
  fullName: System.Collections.IEnumerable.GetEnumerator()
  spec.csharp:
  - uid: System.Collections.IEnumerable.GetEnumerator
    name: GetEnumerator
    fullName: System.Collections.IEnumerable.GetEnumerator
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Collections.IEnumerable.GetEnumerator
    name: GetEnumerator
    fullName: System.Collections.IEnumerable.GetEnumerator
  - name: (
    fullName: (
  - name: )
    fullName: )
  nameWithType: IEnumerable.GetEnumerator()
  commentId: M:System.Collections.IEnumerable.GetEnumerator
- uid: System.Collections.IEnumerator
  parent: System.Collections
  isExternal: false
  name: IEnumerator
  fullName: System.Collections.IEnumerator
  nameWithType: IEnumerator
  commentId: T:System.Collections.IEnumerator
- uid: System.ArgumentNullException
  isExternal: false
  name: ArgumentNullException
  fullName: System.ArgumentNullException
  nameWithType: ArgumentNullException
  commentId: T:System.ArgumentNullException
- uid: System.ArgumentOutOfRangeException
  isExternal: false
  name: ArgumentOutOfRangeException
  fullName: System.ArgumentOutOfRangeException
  nameWithType: ArgumentOutOfRangeException
  commentId: T:System.ArgumentOutOfRangeException
- uid: System.ArgumentException
  parent: System
  isExternal: false
  name: ArgumentException
  fullName: System.ArgumentException
  nameWithType: ArgumentException
  commentId: T:System.ArgumentException
- uid: System.InvalidCastException
  isExternal: false
  name: InvalidCastException
  fullName: System.InvalidCastException
  nameWithType: InvalidCastException
  commentId: T:System.InvalidCastException
