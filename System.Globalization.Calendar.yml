### YamlMime:ManagedReference
items:
- uid: System.Globalization.Calendar
  commentId: T:System.Globalization.Calendar
  id: Calendar
  parent: System.Globalization
  children:
  - System.Globalization.Calendar.#ctor
  - System.Globalization.Calendar.AddDays(System.DateTime,System.Int32)
  - System.Globalization.Calendar.AddHours(System.DateTime,System.Int32)
  - System.Globalization.Calendar.AddMilliseconds(System.DateTime,System.Double)
  - System.Globalization.Calendar.AddMinutes(System.DateTime,System.Int32)
  - System.Globalization.Calendar.AddMonths(System.DateTime,System.Int32)
  - System.Globalization.Calendar.AddSeconds(System.DateTime,System.Int32)
  - System.Globalization.Calendar.AddWeeks(System.DateTime,System.Int32)
  - System.Globalization.Calendar.AddYears(System.DateTime,System.Int32)
  - System.Globalization.Calendar.CurrentEra
  - System.Globalization.Calendar.Eras
  - System.Globalization.Calendar.GetDayOfMonth(System.DateTime)
  - System.Globalization.Calendar.GetDayOfWeek(System.DateTime)
  - System.Globalization.Calendar.GetDayOfYear(System.DateTime)
  - System.Globalization.Calendar.GetDaysInMonth(System.Int32,System.Int32)
  - System.Globalization.Calendar.GetDaysInMonth(System.Int32,System.Int32,System.Int32)
  - System.Globalization.Calendar.GetDaysInYear(System.Int32)
  - System.Globalization.Calendar.GetDaysInYear(System.Int32,System.Int32)
  - System.Globalization.Calendar.GetEra(System.DateTime)
  - System.Globalization.Calendar.GetHour(System.DateTime)
  - System.Globalization.Calendar.GetLeapMonth(System.Int32,System.Int32)
  - System.Globalization.Calendar.GetMilliseconds(System.DateTime)
  - System.Globalization.Calendar.GetMinute(System.DateTime)
  - System.Globalization.Calendar.GetMonth(System.DateTime)
  - System.Globalization.Calendar.GetMonthsInYear(System.Int32)
  - System.Globalization.Calendar.GetMonthsInYear(System.Int32,System.Int32)
  - System.Globalization.Calendar.GetSecond(System.DateTime)
  - System.Globalization.Calendar.GetWeekOfYear(System.DateTime,System.Globalization.CalendarWeekRule,System.DayOfWeek)
  - System.Globalization.Calendar.GetYear(System.DateTime)
  - System.Globalization.Calendar.IsLeapDay(System.Int32,System.Int32,System.Int32)
  - System.Globalization.Calendar.IsLeapDay(System.Int32,System.Int32,System.Int32,System.Int32)
  - System.Globalization.Calendar.IsLeapMonth(System.Int32,System.Int32)
  - System.Globalization.Calendar.IsLeapMonth(System.Int32,System.Int32,System.Int32)
  - System.Globalization.Calendar.IsLeapYear(System.Int32)
  - System.Globalization.Calendar.IsLeapYear(System.Int32,System.Int32)
  - System.Globalization.Calendar.IsReadOnly
  - System.Globalization.Calendar.MaxSupportedDateTime
  - System.Globalization.Calendar.MinSupportedDateTime
  - System.Globalization.Calendar.ToDateTime(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)
  - System.Globalization.Calendar.ToDateTime(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)
  - System.Globalization.Calendar.ToFourDigitYear(System.Int32)
  - System.Globalization.Calendar.TwoDigitYearMax
  langs:
  - csharp
  - vb
  name: Calendar
  nameWithType: Calendar
  fullName: System.Globalization.Calendar
  type: Class
  source:
    remote:
      path: src/mscorlib/src/System/Globalization/Calendar.cs
      branch: master
      repo: https://github.com/dotnet/coreclr.git
    id: Calendar
    path: src/mscorlib/src/System/Globalization/Calendar.cs
    startLine: 31
  assemblies:
  - System.Globalization
  namespace: System.Globalization
  summary: "\n<p>Represents time in divisions, such as weeks, months, and years.</p>\n"
  syntax:
    content: >-
      [Serializable]

      [ComVisible(true)]

      public abstract class Calendar : ICloneable
    content.vb: >-
      <Serializable>

      <ComVisible(True)>

      Public MustInherit Class Calendar
          Implements ICloneable
  seealso:
  - linkId: System.DateTime
    commentId: T:System.DateTime
  - linkId: System.Globalization.DateTimeFormatInfo
    commentId: T:System.Globalization.DateTimeFormatInfo
  - linkId: System.Globalization.ChineseLunisolarCalendar
    commentId: T:System.Globalization.ChineseLunisolarCalendar
  - linkId: System.Globalization.EastAsianLunisolarCalendar
    commentId: T:System.Globalization.EastAsianLunisolarCalendar
  - linkId: System.Globalization.GregorianCalendar
    commentId: T:System.Globalization.GregorianCalendar
  - linkId: System.Globalization.HebrewCalendar
    commentId: T:System.Globalization.HebrewCalendar
  - linkId: System.Globalization.HijriCalendar
    commentId: T:System.Globalization.HijriCalendar
  - linkId: System.Globalization.JapaneseCalendar
    commentId: T:System.Globalization.JapaneseCalendar
  - linkId: System.Globalization.JapaneseLunisolarCalendar
    commentId: T:System.Globalization.JapaneseLunisolarCalendar
  - linkId: System.Globalization.JulianCalendar
    commentId: T:System.Globalization.JulianCalendar
  - linkId: System.Globalization.KoreanCalendar
    commentId: T:System.Globalization.KoreanCalendar
  - linkId: System.Globalization.KoreanLunisolarCalendar
    commentId: T:System.Globalization.KoreanLunisolarCalendar
  - linkId: System.Globalization.PersianCalendar
    commentId: T:System.Globalization.PersianCalendar
  - linkId: System.Globalization.TaiwanCalendar
    commentId: T:System.Globalization.TaiwanCalendar
  - linkId: System.Globalization.TaiwanLunisolarCalendar
    commentId: T:System.Globalization.TaiwanLunisolarCalendar
  - linkId: System.Globalization.ThaiBuddhistCalendar
    commentId: T:System.Globalization.ThaiBuddhistCalendar
  - linkId: System.Globalization.UmAlQuraCalendar
    commentId: T:System.Globalization.UmAlQuraCalendar
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  modifiers.csharp:
  - public
  - abstract
  - class
  modifiers.vb:
  - Public
  - MustInherit
  - Class
- uid: System.Globalization.Calendar.CurrentEra
  commentId: F:System.Globalization.Calendar.CurrentEra
  id: CurrentEra
  parent: System.Globalization.Calendar
  langs:
  - csharp
  - vb
  name: CurrentEra
  nameWithType: Calendar.CurrentEra
  fullName: System.Globalization.Calendar.CurrentEra
  type: Field
  source:
    remote:
      path: src/mscorlib/src/System/Globalization/Calendar.cs
      branch: master
      repo: https://github.com/dotnet/coreclr.git
    id: CurrentEra
    path: src/mscorlib/src/System/Globalization/Calendar.cs
    startLine: 240
  assemblies:
  - System.Globalization
  namespace: System.Globalization
  summary: "\n<p>Represents the current era of the current calendar. </p>\n"
  syntax:
    content: public const int CurrentEra = 0
    content.vb: Public Const CurrentEra As Integer = 0
    return:
      type: System.Int32
  seealso:
  - linkId: System.Globalization.Calendar.Eras
    commentId: P:System.Globalization.Calendar.Eras
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: System.Globalization.Calendar.#ctor
  commentId: M:System.Globalization.Calendar.#ctor
  id: '#ctor'
  parent: System.Globalization.Calendar
  langs:
  - csharp
  - vb
  name: Calendar()
  nameWithType: Calendar.Calendar()
  fullName: System.Globalization.Calendar.Calendar()
  type: Constructor
  source:
    remote:
      path: src/mscorlib/src/System/Globalization/Calendar.cs
      branch: master
      repo: https://github.com/dotnet/coreclr.git
    id: .ctor
    path: src/mscorlib/src/System/Globalization/Calendar.cs
    startLine: 122
  assemblies:
  - System.Globalization
  namespace: System.Globalization
  summary: "\n<p>Initializes a new instance of the <xref href=\"System.Globalization.Calendar\" data-throw-if-not-resolved=\"false\"></xref> class.</p>\n"
  syntax:
    content: protected Calendar()
    content.vb: Protected Sub New
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: System.Globalization.Calendar.Eras
  commentId: P:System.Globalization.Calendar.Eras
  id: Eras
  parent: System.Globalization.Calendar
  langs:
  - csharp
  - vb
  name: Eras
  nameWithType: Calendar.Eras
  fullName: System.Globalization.Calendar.Eras
  type: Property
  source:
    remote:
      path: src/mscorlib/src/System/Globalization/Calendar.cs
      branch: master
      repo: https://github.com/dotnet/coreclr.git
    id: Eras
    path: src/mscorlib/src/System/Globalization/Calendar.cs
    startLine: 433
  assemblies:
  - System.Globalization
  namespace: System.Globalization
  summary: "\n<p>When overridden in a derived class, gets the list of eras in the current calendar.</p>\n"
  syntax:
    content: public abstract int[] Eras { get; }
    content.vb: Public MustOverride ReadOnly Property Eras As Integer()
    parameters: []
    return:
      type: System.Int32[]
      description: "\n<p>An array of integers that represents the eras in the current calendar.</p>\n"
  seealso:
  - linkId: System.Globalization.Calendar.CurrentEra
    commentId: F:System.Globalization.Calendar.CurrentEra
  modifiers.csharp:
  - public
  - abstract
  - get
  modifiers.vb:
  - Public
  - MustOverride
  - ReadOnly
- uid: System.Globalization.Calendar.IsReadOnly
  commentId: P:System.Globalization.Calendar.IsReadOnly
  id: IsReadOnly
  parent: System.Globalization.Calendar
  langs:
  - csharp
  - vb
  name: IsReadOnly
  nameWithType: Calendar.IsReadOnly
  fullName: System.Globalization.Calendar.IsReadOnly
  type: Property
  source:
    remote:
      path: src/mscorlib/src/System/Globalization/Calendar.cs
      branch: master
      repo: https://github.com/dotnet/coreclr.git
    id: IsReadOnly
    path: src/mscorlib/src/System/Globalization/Calendar.cs
    startLine: 162
  assemblies:
  - System.Globalization
  namespace: System.Globalization
  summary: "\n<p>Gets a value indicating whether this <xref href=\"System.Globalization.Calendar\" data-throw-if-not-resolved=\"false\"></xref> object is read-only.</p>\n"
  syntax:
    content: >-
      [ComVisible(false)]

      public bool IsReadOnly { get; }
    content.vb: >-
      <ComVisible(False)>

      Public ReadOnly Property IsReadOnly As Boolean
    parameters: []
    return:
      type: System.Boolean
      description: "\n<p>\n<strong>true</strong> if this <xref href=\"System.Globalization.Calendar\" data-throw-if-not-resolved=\"false\"></xref> object is read-only; otherwise, <strong>false</strong>.</p>\n"
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: System.Globalization.Calendar.MaxSupportedDateTime
  commentId: P:System.Globalization.Calendar.MaxSupportedDateTime
  id: MaxSupportedDateTime
  parent: System.Globalization.Calendar
  langs:
  - csharp
  - vb
  name: MaxSupportedDateTime
  nameWithType: Calendar.MaxSupportedDateTime
  fullName: System.Globalization.Calendar.MaxSupportedDateTime
  type: Property
  source:
    remote:
      path: src/mscorlib/src/System/Globalization/Calendar.cs
      branch: master
      repo: https://github.com/dotnet/coreclr.git
    id: MaxSupportedDateTime
    path: src/mscorlib/src/System/Globalization/Calendar.cs
    startLine: 110
  assemblies:
  - System.Globalization
  namespace: System.Globalization
  summary: "\n<p>Gets the latest date and time supported by this <xref href=\"System.Globalization.Calendar\" data-throw-if-not-resolved=\"false\"></xref> object.</p>\n"
  syntax:
    content: >-
      [ComVisible(false)]

      public virtual DateTime MaxSupportedDateTime { get; }
    content.vb: >-
      <ComVisible(False)>

      Public Overridable ReadOnly Property MaxSupportedDateTime As Date
    parameters: []
    return:
      type: System.DateTime
      description: "\n<p>The latest date and time supported by this calendar. The default is <xref href=\"System.DateTime.MaxValue\" data-throw-if-not-resolved=\"false\"></xref>.</p>\n"
  seealso:
  - linkId: System.Globalization.Calendar.MinSupportedDateTime
    commentId: P:System.Globalization.Calendar.MinSupportedDateTime
  modifiers.csharp:
  - public
  - virtual
  - get
  modifiers.vb:
  - Public
  - Overridable
  - ReadOnly
- uid: System.Globalization.Calendar.MinSupportedDateTime
  commentId: P:System.Globalization.Calendar.MinSupportedDateTime
  id: MinSupportedDateTime
  parent: System.Globalization.Calendar
  langs:
  - csharp
  - vb
  name: MinSupportedDateTime
  nameWithType: Calendar.MinSupportedDateTime
  fullName: System.Globalization.Calendar.MinSupportedDateTime
  type: Property
  source:
    remote:
      path: src/mscorlib/src/System/Globalization/Calendar.cs
      branch: master
      repo: https://github.com/dotnet/coreclr.git
    id: MinSupportedDateTime
    path: src/mscorlib/src/System/Globalization/Calendar.cs
    startLine: 99
  assemblies:
  - System.Globalization
  namespace: System.Globalization
  summary: "\n<p>Gets the earliest date and time supported by this <xref href=\"System.Globalization.Calendar\" data-throw-if-not-resolved=\"false\"></xref> object.</p>\n"
  syntax:
    content: >-
      [ComVisible(false)]

      public virtual DateTime MinSupportedDateTime { get; }
    content.vb: >-
      <ComVisible(False)>

      Public Overridable ReadOnly Property MinSupportedDateTime As Date
    parameters: []
    return:
      type: System.DateTime
      description: "\n<p>The earliest date and time supported by this calendar. The default is <xref href=\"System.DateTime.MinValue\" data-throw-if-not-resolved=\"false\"></xref>.</p>\n"
  seealso:
  - linkId: System.Globalization.Calendar.MaxSupportedDateTime
    commentId: P:System.Globalization.Calendar.MaxSupportedDateTime
  modifiers.csharp:
  - public
  - virtual
  - get
  modifiers.vb:
  - Public
  - Overridable
  - ReadOnly
- uid: System.Globalization.Calendar.TwoDigitYearMax
  commentId: P:System.Globalization.Calendar.TwoDigitYearMax
  id: TwoDigitYearMax
  parent: System.Globalization.Calendar
  langs:
  - csharp
  - vb
  name: TwoDigitYearMax
  nameWithType: Calendar.TwoDigitYearMax
  fullName: System.Globalization.Calendar.TwoDigitYearMax
  type: Property
  source:
    remote:
      path: src/mscorlib/src/System/Globalization/Calendar.cs
      branch: master
      repo: https://github.com/dotnet/coreclr.git
    id: TwoDigitYearMax
    path: src/mscorlib/src/System/Globalization/Calendar.cs
    startLine: 796
  assemblies:
  - System.Globalization
  namespace: System.Globalization
  summary: "\n<p>Gets or sets the last year of a 100-year range that can be represented by a 2-digit year.</p>\n"
  syntax:
    content: public virtual int TwoDigitYearMax { get; set; }
    content.vb: Public Overridable Property TwoDigitYearMax As Integer
    parameters: []
    return:
      type: System.Int32
      description: "\n<p>The last year of a 100-year range that can be represented by a 2-digit year.</p>\n"
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "\n<p>The current <xref href=\"System.Globalization.Calendar\" data-throw-if-not-resolved=\"false\"></xref> object is read-only.</p>\n"
  seealso:
  - linkId: System.Globalization.Calendar.ToFourDigitYear(System.Int32)
    commentId: M:System.Globalization.Calendar.ToFourDigitYear(System.Int32)
  modifiers.csharp:
  - public
  - virtual
  - get
  - set
  modifiers.vb:
  - Public
  - Overridable
- uid: System.Globalization.Calendar.AddDays(System.DateTime,System.Int32)
  commentId: M:System.Globalization.Calendar.AddDays(System.DateTime,System.Int32)
  id: AddDays(System.DateTime,System.Int32)
  parent: System.Globalization.Calendar
  langs:
  - csharp
  - vb
  name: AddDays(DateTime, Int32)
  nameWithType: Calendar.AddDays(DateTime, Int32)
  fullName: System.Globalization.Calendar.AddDays(System.DateTime, System.Int32)
  type: Method
  source:
    remote:
      path: src/mscorlib/src/System/Globalization/Calendar.cs
      branch: master
      repo: https://github.com/dotnet/coreclr.git
    id: AddDays
    path: src/mscorlib/src/System/Globalization/Calendar.cs
    startLine: 292
  assemblies:
  - System.Globalization
  namespace: System.Globalization
  summary: "\n<p>Returns a <xref href=\"System.DateTime\" data-throw-if-not-resolved=\"false\"></xref> that is the specified number of days away from the specified <xref href=\"System.DateTime\" data-throw-if-not-resolved=\"false\"></xref>.</p>\n"
  syntax:
    content: public virtual DateTime AddDays(DateTime time, int days)
    content.vb: Public Overridable Function AddDays(time As Date, days As Integer) As Date
    parameters:
    - id: time
      type: System.DateTime
      description: "\n<p>The <xref href=\"System.DateTime\" data-throw-if-not-resolved=\"false\"></xref> to which to add days. </p>\n"
    - id: days
      type: System.Int32
      description: "\n<p>The number of days to add. </p>\n"
    return:
      type: System.DateTime
      description: "\n<p>The <xref href=\"System.DateTime\" data-throw-if-not-resolved=\"false\"></xref> that results from adding the specified number of days to the specified <xref href=\"System.DateTime\" data-throw-if-not-resolved=\"false\"></xref>.</p>\n"
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "\n<p>The resulting <xref href=\"System.DateTime\" data-throw-if-not-resolved=\"false\"></xref> is outside the supported range of this calendar. </p>\n"
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "\n<p>\n<em>days</em> is outside the supported range of the <xref href=\"System.DateTime\" data-throw-if-not-resolved=\"false\"></xref> return value. </p>\n"
  seealso:
  - linkId: System.DateTime
    commentId: T:System.DateTime
  - linkId: System.Globalization.Calendar.AddYears(System.DateTime,System.Int32)
    commentId: M:System.Globalization.Calendar.AddYears(System.DateTime,System.Int32)
  - linkId: System.Globalization.Calendar.AddMonths(System.DateTime,System.Int32)
    commentId: M:System.Globalization.Calendar.AddMonths(System.DateTime,System.Int32)
  - linkId: System.Globalization.Calendar.AddWeeks(System.DateTime,System.Int32)
    commentId: M:System.Globalization.Calendar.AddWeeks(System.DateTime,System.Int32)
  - linkId: System.Globalization.Calendar.AddHours(System.DateTime,System.Int32)
    commentId: M:System.Globalization.Calendar.AddHours(System.DateTime,System.Int32)
  - linkId: System.Globalization.Calendar.AddMinutes(System.DateTime,System.Int32)
    commentId: M:System.Globalization.Calendar.AddMinutes(System.DateTime,System.Int32)
  - linkId: System.Globalization.Calendar.AddSeconds(System.DateTime,System.Int32)
    commentId: M:System.Globalization.Calendar.AddSeconds(System.DateTime,System.Int32)
  - linkId: System.Globalization.Calendar.AddMilliseconds(System.DateTime,System.Double)
    commentId: M:System.Globalization.Calendar.AddMilliseconds(System.DateTime,System.Double)
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: System.Globalization.Calendar.AddHours(System.DateTime,System.Int32)
  commentId: M:System.Globalization.Calendar.AddHours(System.DateTime,System.Int32)
  id: AddHours(System.DateTime,System.Int32)
  parent: System.Globalization.Calendar
  langs:
  - csharp
  - vb
  name: AddHours(DateTime, Int32)
  nameWithType: Calendar.AddHours(DateTime, Int32)
  fullName: System.Globalization.Calendar.AddHours(System.DateTime, System.Int32)
  type: Method
  source:
    remote:
      path: src/mscorlib/src/System/Globalization/Calendar.cs
      branch: master
      repo: https://github.com/dotnet/coreclr.git
    id: AddHours
    path: src/mscorlib/src/System/Globalization/Calendar.cs
    startLine: 303
  assemblies:
  - System.Globalization
  namespace: System.Globalization
  summary: "\n<p>Returns a <xref href=\"System.DateTime\" data-throw-if-not-resolved=\"false\"></xref> that is the specified number of hours away from the specified <xref href=\"System.DateTime\" data-throw-if-not-resolved=\"false\"></xref>.</p>\n"
  syntax:
    content: public virtual DateTime AddHours(DateTime time, int hours)
    content.vb: Public Overridable Function AddHours(time As Date, hours As Integer) As Date
    parameters:
    - id: time
      type: System.DateTime
      description: "\n<p>The <xref href=\"System.DateTime\" data-throw-if-not-resolved=\"false\"></xref> to which to add hours. </p>\n"
    - id: hours
      type: System.Int32
      description: "\n<p>The number of hours to add. </p>\n"
    return:
      type: System.DateTime
      description: "\n<p>The <xref href=\"System.DateTime\" data-throw-if-not-resolved=\"false\"></xref> that results from adding the specified number of hours to the specified <xref href=\"System.DateTime\" data-throw-if-not-resolved=\"false\"></xref>.</p>\n"
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "\n<p>The resulting <xref href=\"System.DateTime\" data-throw-if-not-resolved=\"false\"></xref> is outside the supported range of this calendar. </p>\n"
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "\n<p>\n<em>hours</em> is outside the supported range of the <xref href=\"System.DateTime\" data-throw-if-not-resolved=\"false\"></xref> return value. </p>\n"
  seealso:
  - linkId: System.DateTime
    commentId: T:System.DateTime
  - linkId: System.Globalization.Calendar.AddYears(System.DateTime,System.Int32)
    commentId: M:System.Globalization.Calendar.AddYears(System.DateTime,System.Int32)
  - linkId: System.Globalization.Calendar.AddMonths(System.DateTime,System.Int32)
    commentId: M:System.Globalization.Calendar.AddMonths(System.DateTime,System.Int32)
  - linkId: System.Globalization.Calendar.AddWeeks(System.DateTime,System.Int32)
    commentId: M:System.Globalization.Calendar.AddWeeks(System.DateTime,System.Int32)
  - linkId: System.Globalization.Calendar.AddDays(System.DateTime,System.Int32)
    commentId: M:System.Globalization.Calendar.AddDays(System.DateTime,System.Int32)
  - linkId: System.Globalization.Calendar.AddMinutes(System.DateTime,System.Int32)
    commentId: M:System.Globalization.Calendar.AddMinutes(System.DateTime,System.Int32)
  - linkId: System.Globalization.Calendar.AddSeconds(System.DateTime,System.Int32)
    commentId: M:System.Globalization.Calendar.AddSeconds(System.DateTime,System.Int32)
  - linkId: System.Globalization.Calendar.AddMilliseconds(System.DateTime,System.Double)
    commentId: M:System.Globalization.Calendar.AddMilliseconds(System.DateTime,System.Double)
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: System.Globalization.Calendar.AddMilliseconds(System.DateTime,System.Double)
  commentId: M:System.Globalization.Calendar.AddMilliseconds(System.DateTime,System.Double)
  id: AddMilliseconds(System.DateTime,System.Double)
  parent: System.Globalization.Calendar
  langs:
  - csharp
  - vb
  name: AddMilliseconds(DateTime, Double)
  nameWithType: Calendar.AddMilliseconds(DateTime, Double)
  fullName: System.Globalization.Calendar.AddMilliseconds(System.DateTime, System.Double)
  type: Method
  source:
    remote:
      path: src/mscorlib/src/System/Globalization/Calendar.cs
      branch: master
      repo: https://github.com/dotnet/coreclr.git
    id: AddMilliseconds
    path: src/mscorlib/src/System/Globalization/Calendar.cs
    startLine: 280
  assemblies:
  - System.Globalization
  namespace: System.Globalization
  summary: "\n<p>Returns a <xref href=\"System.DateTime\" data-throw-if-not-resolved=\"false\"></xref> that is the specified number of milliseconds away from the specified <xref href=\"System.DateTime\" data-throw-if-not-resolved=\"false\"></xref>.</p>\n"
  syntax:
    content: public virtual DateTime AddMilliseconds(DateTime time, double milliseconds)
    content.vb: Public Overridable Function AddMilliseconds(time As Date, milliseconds As Double) As Date
    parameters:
    - id: time
      type: System.DateTime
      description: "\n<p>The <xref href=\"System.DateTime\" data-throw-if-not-resolved=\"false\"></xref> to add milliseconds to. </p>\n"
    - id: milliseconds
      type: System.Double
      description: "\n<p>The number of milliseconds to add.</p>\n"
    return:
      type: System.DateTime
      description: "\n<p>The <xref href=\"System.DateTime\" data-throw-if-not-resolved=\"false\"></xref> that results from adding the specified number of milliseconds to the specified <xref href=\"System.DateTime\" data-throw-if-not-resolved=\"false\"></xref>.</p>\n"
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "\n<p>The resulting <xref href=\"System.DateTime\" data-throw-if-not-resolved=\"false\"></xref> is outside the supported range of this calendar. </p>\n"
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "\n<p>\n<em>milliseconds</em> is outside the supported range of the <xref href=\"System.DateTime\" data-throw-if-not-resolved=\"false\"></xref> return value. </p>\n"
  seealso:
  - linkId: System.DateTime
    commentId: T:System.DateTime
  - linkId: System.Globalization.Calendar.AddYears(System.DateTime,System.Int32)
    commentId: M:System.Globalization.Calendar.AddYears(System.DateTime,System.Int32)
  - linkId: System.Globalization.Calendar.AddMonths(System.DateTime,System.Int32)
    commentId: M:System.Globalization.Calendar.AddMonths(System.DateTime,System.Int32)
  - linkId: System.Globalization.Calendar.AddWeeks(System.DateTime,System.Int32)
    commentId: M:System.Globalization.Calendar.AddWeeks(System.DateTime,System.Int32)
  - linkId: System.Globalization.Calendar.AddDays(System.DateTime,System.Int32)
    commentId: M:System.Globalization.Calendar.AddDays(System.DateTime,System.Int32)
  - linkId: System.Globalization.Calendar.AddHours(System.DateTime,System.Int32)
    commentId: M:System.Globalization.Calendar.AddHours(System.DateTime,System.Int32)
  - linkId: System.Globalization.Calendar.AddMinutes(System.DateTime,System.Int32)
    commentId: M:System.Globalization.Calendar.AddMinutes(System.DateTime,System.Int32)
  - linkId: System.Globalization.Calendar.AddSeconds(System.DateTime,System.Int32)
    commentId: M:System.Globalization.Calendar.AddSeconds(System.DateTime,System.Int32)
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: System.Globalization.Calendar.AddMinutes(System.DateTime,System.Int32)
  commentId: M:System.Globalization.Calendar.AddMinutes(System.DateTime,System.Int32)
  id: AddMinutes(System.DateTime,System.Int32)
  parent: System.Globalization.Calendar
  langs:
  - csharp
  - vb
  name: AddMinutes(DateTime, Int32)
  nameWithType: Calendar.AddMinutes(DateTime, Int32)
  fullName: System.Globalization.Calendar.AddMinutes(System.DateTime, System.Int32)
  type: Method
  source:
    remote:
      path: src/mscorlib/src/System/Globalization/Calendar.cs
      branch: master
      repo: https://github.com/dotnet/coreclr.git
    id: AddMinutes
    path: src/mscorlib/src/System/Globalization/Calendar.cs
    startLine: 315
  assemblies:
  - System.Globalization
  namespace: System.Globalization
  summary: "\n<p>Returns a <xref href=\"System.DateTime\" data-throw-if-not-resolved=\"false\"></xref> that is the specified number of minutes away from the specified <xref href=\"System.DateTime\" data-throw-if-not-resolved=\"false\"></xref>.</p>\n"
  syntax:
    content: public virtual DateTime AddMinutes(DateTime time, int minutes)
    content.vb: Public Overridable Function AddMinutes(time As Date, minutes As Integer) As Date
    parameters:
    - id: time
      type: System.DateTime
      description: "\n<p>The <xref href=\"System.DateTime\" data-throw-if-not-resolved=\"false\"></xref> to which to add minutes. </p>\n"
    - id: minutes
      type: System.Int32
      description: "\n<p>The number of minutes to add. </p>\n"
    return:
      type: System.DateTime
      description: "\n<p>The <xref href=\"System.DateTime\" data-throw-if-not-resolved=\"false\"></xref> that results from adding the specified number of minutes to the specified <xref href=\"System.DateTime\" data-throw-if-not-resolved=\"false\"></xref>.</p>\n"
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "\n<p>The resulting <xref href=\"System.DateTime\" data-throw-if-not-resolved=\"false\"></xref> is outside the supported range of this calendar. </p>\n"
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "\n<p>\n<em>minutes</em> is outside the supported range of the <xref href=\"System.DateTime\" data-throw-if-not-resolved=\"false\"></xref> return value. </p>\n"
  seealso:
  - linkId: System.DateTime
    commentId: T:System.DateTime
  - linkId: System.Globalization.Calendar.AddYears(System.DateTime,System.Int32)
    commentId: M:System.Globalization.Calendar.AddYears(System.DateTime,System.Int32)
  - linkId: System.Globalization.Calendar.AddMonths(System.DateTime,System.Int32)
    commentId: M:System.Globalization.Calendar.AddMonths(System.DateTime,System.Int32)
  - linkId: System.Globalization.Calendar.AddWeeks(System.DateTime,System.Int32)
    commentId: M:System.Globalization.Calendar.AddWeeks(System.DateTime,System.Int32)
  - linkId: System.Globalization.Calendar.AddDays(System.DateTime,System.Int32)
    commentId: M:System.Globalization.Calendar.AddDays(System.DateTime,System.Int32)
  - linkId: System.Globalization.Calendar.AddHours(System.DateTime,System.Int32)
    commentId: M:System.Globalization.Calendar.AddHours(System.DateTime,System.Int32)
  - linkId: System.Globalization.Calendar.AddSeconds(System.DateTime,System.Int32)
    commentId: M:System.Globalization.Calendar.AddSeconds(System.DateTime,System.Int32)
  - linkId: System.Globalization.Calendar.AddMilliseconds(System.DateTime,System.Double)
    commentId: M:System.Globalization.Calendar.AddMilliseconds(System.DateTime,System.Double)
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: System.Globalization.Calendar.AddMonths(System.DateTime,System.Int32)
  commentId: M:System.Globalization.Calendar.AddMonths(System.DateTime,System.Int32)
  id: AddMonths(System.DateTime,System.Int32)
  parent: System.Globalization.Calendar
  langs:
  - csharp
  - vb
  name: AddMonths(DateTime, Int32)
  nameWithType: Calendar.AddMonths(DateTime, Int32)
  fullName: System.Globalization.Calendar.AddMonths(System.DateTime, System.Int32)
  type: Method
  source:
    remote:
      path: src/mscorlib/src/System/Globalization/Calendar.cs
      branch: master
      repo: https://github.com/dotnet/coreclr.git
    id: AddMonths
    path: src/mscorlib/src/System/Globalization/Calendar.cs
    startLine: 338
  assemblies:
  - System.Globalization
  namespace: System.Globalization
  summary: "\n<p>When overridden in a derived class, returns a <xref href=\"System.DateTime\" data-throw-if-not-resolved=\"false\"></xref> that is the specified number of months away from the specified <xref href=\"System.DateTime\" data-throw-if-not-resolved=\"false\"></xref>.</p>\n"
  syntax:
    content: public abstract DateTime AddMonths(DateTime time, int months)
    content.vb: Public MustOverride Function AddMonths(time As Date, months As Integer) As Date
    parameters:
    - id: time
      type: System.DateTime
      description: "\n<p>The <xref href=\"System.DateTime\" data-throw-if-not-resolved=\"false\"></xref> to which to add months. </p>\n"
    - id: months
      type: System.Int32
      description: "\n<p>The number of months to add. </p>\n"
    return:
      type: System.DateTime
      description: "\n<p>The <xref href=\"System.DateTime\" data-throw-if-not-resolved=\"false\"></xref> that results from adding the specified number of months to the specified <xref href=\"System.DateTime\" data-throw-if-not-resolved=\"false\"></xref>.</p>\n"
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "\n<p>The resulting <xref href=\"System.DateTime\" data-throw-if-not-resolved=\"false\"></xref> is outside the supported range of this calendar. </p>\n"
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "\n<p>\n<em>months</em> is outside the supported range of the <xref href=\"System.DateTime\" data-throw-if-not-resolved=\"false\"></xref> return value. </p>\n"
  seealso:
  - linkId: System.DateTime
    commentId: T:System.DateTime
  - linkId: System.Globalization.Calendar.AddYears(System.DateTime,System.Int32)
    commentId: M:System.Globalization.Calendar.AddYears(System.DateTime,System.Int32)
  - linkId: System.Globalization.Calendar.AddWeeks(System.DateTime,System.Int32)
    commentId: M:System.Globalization.Calendar.AddWeeks(System.DateTime,System.Int32)
  - linkId: System.Globalization.Calendar.AddDays(System.DateTime,System.Int32)
    commentId: M:System.Globalization.Calendar.AddDays(System.DateTime,System.Int32)
  - linkId: System.Globalization.Calendar.AddHours(System.DateTime,System.Int32)
    commentId: M:System.Globalization.Calendar.AddHours(System.DateTime,System.Int32)
  - linkId: System.Globalization.Calendar.AddMinutes(System.DateTime,System.Int32)
    commentId: M:System.Globalization.Calendar.AddMinutes(System.DateTime,System.Int32)
  - linkId: System.Globalization.Calendar.AddSeconds(System.DateTime,System.Int32)
    commentId: M:System.Globalization.Calendar.AddSeconds(System.DateTime,System.Int32)
  - linkId: System.Globalization.Calendar.AddMilliseconds(System.DateTime,System.Double)
    commentId: M:System.Globalization.Calendar.AddMilliseconds(System.DateTime,System.Double)
  modifiers.csharp:
  - public
  - abstract
  modifiers.vb:
  - Public
  - MustOverride
- uid: System.Globalization.Calendar.AddSeconds(System.DateTime,System.Int32)
  commentId: M:System.Globalization.Calendar.AddSeconds(System.DateTime,System.Int32)
  id: AddSeconds(System.DateTime,System.Int32)
  parent: System.Globalization.Calendar
  langs:
  - csharp
  - vb
  name: AddSeconds(DateTime, Int32)
  nameWithType: Calendar.AddSeconds(DateTime, Int32)
  fullName: System.Globalization.Calendar.AddSeconds(System.DateTime, System.Int32)
  type: Method
  source:
    remote:
      path: src/mscorlib/src/System/Globalization/Calendar.cs
      branch: master
      repo: https://github.com/dotnet/coreclr.git
    id: AddSeconds
    path: src/mscorlib/src/System/Globalization/Calendar.cs
    startLine: 347
  assemblies:
  - System.Globalization
  namespace: System.Globalization
  summary: "\n<p>Returns a <xref href=\"System.DateTime\" data-throw-if-not-resolved=\"false\"></xref> that is the specified number of seconds away from the specified <xref href=\"System.DateTime\" data-throw-if-not-resolved=\"false\"></xref>.</p>\n"
  syntax:
    content: public virtual DateTime AddSeconds(DateTime time, int seconds)
    content.vb: Public Overridable Function AddSeconds(time As Date, seconds As Integer) As Date
    parameters:
    - id: time
      type: System.DateTime
      description: "\n<p>The <xref href=\"System.DateTime\" data-throw-if-not-resolved=\"false\"></xref> to which to add seconds. </p>\n"
    - id: seconds
      type: System.Int32
      description: "\n<p>The number of seconds to add. </p>\n"
    return:
      type: System.DateTime
      description: "\n<p>The <xref href=\"System.DateTime\" data-throw-if-not-resolved=\"false\"></xref> that results from adding the specified number of seconds to the specified <xref href=\"System.DateTime\" data-throw-if-not-resolved=\"false\"></xref>.</p>\n"
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "\n<p>The resulting <xref href=\"System.DateTime\" data-throw-if-not-resolved=\"false\"></xref> is outside the supported range of this calendar. </p>\n"
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "\n<p>\n<em>seconds</em> is outside the supported range of the <xref href=\"System.DateTime\" data-throw-if-not-resolved=\"false\"></xref> return value. </p>\n"
  seealso:
  - linkId: System.DateTime
    commentId: T:System.DateTime
  - linkId: System.Globalization.Calendar.AddYears(System.DateTime,System.Int32)
    commentId: M:System.Globalization.Calendar.AddYears(System.DateTime,System.Int32)
  - linkId: System.Globalization.Calendar.AddMonths(System.DateTime,System.Int32)
    commentId: M:System.Globalization.Calendar.AddMonths(System.DateTime,System.Int32)
  - linkId: System.Globalization.Calendar.AddWeeks(System.DateTime,System.Int32)
    commentId: M:System.Globalization.Calendar.AddWeeks(System.DateTime,System.Int32)
  - linkId: System.Globalization.Calendar.AddDays(System.DateTime,System.Int32)
    commentId: M:System.Globalization.Calendar.AddDays(System.DateTime,System.Int32)
  - linkId: System.Globalization.Calendar.AddHours(System.DateTime,System.Int32)
    commentId: M:System.Globalization.Calendar.AddHours(System.DateTime,System.Int32)
  - linkId: System.Globalization.Calendar.AddMinutes(System.DateTime,System.Int32)
    commentId: M:System.Globalization.Calendar.AddMinutes(System.DateTime,System.Int32)
  - linkId: System.Globalization.Calendar.AddMilliseconds(System.DateTime,System.Double)
    commentId: M:System.Globalization.Calendar.AddMilliseconds(System.DateTime,System.Double)
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: System.Globalization.Calendar.AddWeeks(System.DateTime,System.Int32)
  commentId: M:System.Globalization.Calendar.AddWeeks(System.DateTime,System.Int32)
  id: AddWeeks(System.DateTime,System.Int32)
  parent: System.Globalization.Calendar
  langs:
  - csharp
  - vb
  name: AddWeeks(DateTime, Int32)
  nameWithType: Calendar.AddWeeks(DateTime, Int32)
  fullName: System.Globalization.Calendar.AddWeeks(System.DateTime, System.Int32)
  type: Method
  source:
    remote:
      path: src/mscorlib/src/System/Globalization/Calendar.cs
      branch: master
      repo: https://github.com/dotnet/coreclr.git
    id: AddWeeks
    path: src/mscorlib/src/System/Globalization/Calendar.cs
    startLine: 356
  assemblies:
  - System.Globalization
  namespace: System.Globalization
  summary: "\n<p>Returns a <xref href=\"System.DateTime\" data-throw-if-not-resolved=\"false\"></xref> that is the specified number of weeks away from the specified <xref href=\"System.DateTime\" data-throw-if-not-resolved=\"false\"></xref>.</p>\n"
  syntax:
    content: public virtual DateTime AddWeeks(DateTime time, int weeks)
    content.vb: Public Overridable Function AddWeeks(time As Date, weeks As Integer) As Date
    parameters:
    - id: time
      type: System.DateTime
      description: "\n<p>The <xref href=\"System.DateTime\" data-throw-if-not-resolved=\"false\"></xref> to which to add weeks. </p>\n"
    - id: weeks
      type: System.Int32
      description: "\n<p>The number of weeks to add. </p>\n"
    return:
      type: System.DateTime
      description: "\n<p>The <xref href=\"System.DateTime\" data-throw-if-not-resolved=\"false\"></xref> that results from adding the specified number of weeks to the specified <xref href=\"System.DateTime\" data-throw-if-not-resolved=\"false\"></xref>.</p>\n"
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "\n<p>The resulting <xref href=\"System.DateTime\" data-throw-if-not-resolved=\"false\"></xref> is outside the supported range of this calendar. </p>\n"
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "\n<p>\n<em>weeks</em> is outside the supported range of the <xref href=\"System.DateTime\" data-throw-if-not-resolved=\"false\"></xref> return value. </p>\n"
  seealso:
  - linkId: System.DateTime
    commentId: T:System.DateTime
  - linkId: System.Globalization.Calendar.AddYears(System.DateTime,System.Int32)
    commentId: M:System.Globalization.Calendar.AddYears(System.DateTime,System.Int32)
  - linkId: System.Globalization.Calendar.AddMonths(System.DateTime,System.Int32)
    commentId: M:System.Globalization.Calendar.AddMonths(System.DateTime,System.Int32)
  - linkId: System.Globalization.Calendar.AddDays(System.DateTime,System.Int32)
    commentId: M:System.Globalization.Calendar.AddDays(System.DateTime,System.Int32)
  - linkId: System.Globalization.Calendar.AddHours(System.DateTime,System.Int32)
    commentId: M:System.Globalization.Calendar.AddHours(System.DateTime,System.Int32)
  - linkId: System.Globalization.Calendar.AddMinutes(System.DateTime,System.Int32)
    commentId: M:System.Globalization.Calendar.AddMinutes(System.DateTime,System.Int32)
  - linkId: System.Globalization.Calendar.AddSeconds(System.DateTime,System.Int32)
    commentId: M:System.Globalization.Calendar.AddSeconds(System.DateTime,System.Int32)
  - linkId: System.Globalization.Calendar.AddMilliseconds(System.DateTime,System.Double)
    commentId: M:System.Globalization.Calendar.AddMilliseconds(System.DateTime,System.Double)
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: System.Globalization.Calendar.AddYears(System.DateTime,System.Int32)
  commentId: M:System.Globalization.Calendar.AddYears(System.DateTime,System.Int32)
  id: AddYears(System.DateTime,System.Int32)
  parent: System.Globalization.Calendar
  langs:
  - csharp
  - vb
  name: AddYears(DateTime, Int32)
  nameWithType: Calendar.AddYears(DateTime, Int32)
  fullName: System.Globalization.Calendar.AddYears(System.DateTime, System.Int32)
  type: Method
  source:
    remote:
      path: src/mscorlib/src/System/Globalization/Calendar.cs
      branch: master
      repo: https://github.com/dotnet/coreclr.git
    id: AddYears
    path: src/mscorlib/src/System/Globalization/Calendar.cs
    startLine: 370
  assemblies:
  - System.Globalization
  namespace: System.Globalization
  summary: "\n<p>When overridden in a derived class, returns a <xref href=\"System.DateTime\" data-throw-if-not-resolved=\"false\"></xref> that is the specified number of years away from the specified <xref href=\"System.DateTime\" data-throw-if-not-resolved=\"false\"></xref>.</p>\n"
  syntax:
    content: public abstract DateTime AddYears(DateTime time, int years)
    content.vb: Public MustOverride Function AddYears(time As Date, years As Integer) As Date
    parameters:
    - id: time
      type: System.DateTime
      description: "\n<p>The <xref href=\"System.DateTime\" data-throw-if-not-resolved=\"false\"></xref> to which to add years. </p>\n"
    - id: years
      type: System.Int32
      description: "\n<p>The number of years to add. </p>\n"
    return:
      type: System.DateTime
      description: "\n<p>The <xref href=\"System.DateTime\" data-throw-if-not-resolved=\"false\"></xref> that results from adding the specified number of years to the specified <xref href=\"System.DateTime\" data-throw-if-not-resolved=\"false\"></xref>.</p>\n"
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "\n<p>The resulting <xref href=\"System.DateTime\" data-throw-if-not-resolved=\"false\"></xref> is outside the supported range of this calendar. </p>\n"
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "\n<p>\n<em>years</em> is outside the supported range of the <xref href=\"System.DateTime\" data-throw-if-not-resolved=\"false\"></xref> return value. </p>\n"
  seealso:
  - linkId: System.DateTime
    commentId: T:System.DateTime
  - linkId: System.Globalization.Calendar.AddMonths(System.DateTime,System.Int32)
    commentId: M:System.Globalization.Calendar.AddMonths(System.DateTime,System.Int32)
  - linkId: System.Globalization.Calendar.AddWeeks(System.DateTime,System.Int32)
    commentId: M:System.Globalization.Calendar.AddWeeks(System.DateTime,System.Int32)
  - linkId: System.Globalization.Calendar.AddDays(System.DateTime,System.Int32)
    commentId: M:System.Globalization.Calendar.AddDays(System.DateTime,System.Int32)
  - linkId: System.Globalization.Calendar.AddHours(System.DateTime,System.Int32)
    commentId: M:System.Globalization.Calendar.AddHours(System.DateTime,System.Int32)
  - linkId: System.Globalization.Calendar.AddMinutes(System.DateTime,System.Int32)
    commentId: M:System.Globalization.Calendar.AddMinutes(System.DateTime,System.Int32)
  - linkId: System.Globalization.Calendar.AddSeconds(System.DateTime,System.Int32)
    commentId: M:System.Globalization.Calendar.AddSeconds(System.DateTime,System.Int32)
  - linkId: System.Globalization.Calendar.AddMilliseconds(System.DateTime,System.Double)
    commentId: M:System.Globalization.Calendar.AddMilliseconds(System.DateTime,System.Double)
  modifiers.csharp:
  - public
  - abstract
  modifiers.vb:
  - Public
  - MustOverride
- uid: System.Globalization.Calendar.GetDayOfMonth(System.DateTime)
  commentId: M:System.Globalization.Calendar.GetDayOfMonth(System.DateTime)
  id: GetDayOfMonth(System.DateTime)
  parent: System.Globalization.Calendar
  langs:
  - csharp
  - vb
  name: GetDayOfMonth(DateTime)
  nameWithType: Calendar.GetDayOfMonth(DateTime)
  fullName: System.Globalization.Calendar.GetDayOfMonth(System.DateTime)
  type: Method
  source:
    remote:
      path: src/mscorlib/src/System/Globalization/Calendar.cs
      branch: master
      repo: https://github.com/dotnet/coreclr.git
    id: GetDayOfMonth
    path: src/mscorlib/src/System/Globalization/Calendar.cs
    startLine: 376
  assemblies:
  - System.Globalization
  namespace: System.Globalization
  summary: "\n<p>When overridden in a derived class, returns the day of the month in the specified <xref href=\"System.DateTime\" data-throw-if-not-resolved=\"false\"></xref>.</p>\n"
  syntax:
    content: public abstract int GetDayOfMonth(DateTime time)
    content.vb: Public MustOverride Function GetDayOfMonth(time As Date) As Integer
    parameters:
    - id: time
      type: System.DateTime
      description: "\n<p>The <xref href=\"System.DateTime\" data-throw-if-not-resolved=\"false\"></xref> to read. </p>\n"
    return:
      type: System.Int32
      description: "\n<p>A positive integer that represents the day of the month in the <em>time</em> parameter.</p>\n"
  seealso:
  - linkId: System.DateTime.Day
    commentId: P:System.DateTime.Day
  - linkId: System.Globalization.Calendar.GetEra(System.DateTime)
    commentId: M:System.Globalization.Calendar.GetEra(System.DateTime)
  - linkId: System.Globalization.Calendar.GetYear(System.DateTime)
    commentId: M:System.Globalization.Calendar.GetYear(System.DateTime)
  - linkId: System.Globalization.Calendar.GetMonth(System.DateTime)
    commentId: M:System.Globalization.Calendar.GetMonth(System.DateTime)
  - linkId: System.Globalization.Calendar.GetWeekOfYear(System.DateTime,System.Globalization.CalendarWeekRule,System.DayOfWeek)
    commentId: M:System.Globalization.Calendar.GetWeekOfYear(System.DateTime,System.Globalization.CalendarWeekRule,System.DayOfWeek)
  - linkId: System.Globalization.Calendar.GetDayOfYear(System.DateTime)
    commentId: M:System.Globalization.Calendar.GetDayOfYear(System.DateTime)
  - linkId: System.Globalization.Calendar.GetDayOfWeek(System.DateTime)
    commentId: M:System.Globalization.Calendar.GetDayOfWeek(System.DateTime)
  - linkId: System.Globalization.Calendar.GetHour(System.DateTime)
    commentId: M:System.Globalization.Calendar.GetHour(System.DateTime)
  - linkId: System.Globalization.Calendar.GetMinute(System.DateTime)
    commentId: M:System.Globalization.Calendar.GetMinute(System.DateTime)
  - linkId: System.Globalization.Calendar.GetSecond(System.DateTime)
    commentId: M:System.Globalization.Calendar.GetSecond(System.DateTime)
  - linkId: System.Globalization.Calendar.GetMilliseconds(System.DateTime)
    commentId: M:System.Globalization.Calendar.GetMilliseconds(System.DateTime)
  modifiers.csharp:
  - public
  - abstract
  modifiers.vb:
  - Public
  - MustOverride
- uid: System.Globalization.Calendar.GetDayOfWeek(System.DateTime)
  commentId: M:System.Globalization.Calendar.GetDayOfWeek(System.DateTime)
  id: GetDayOfWeek(System.DateTime)
  parent: System.Globalization.Calendar
  langs:
  - csharp
  - vb
  name: GetDayOfWeek(DateTime)
  nameWithType: Calendar.GetDayOfWeek(DateTime)
  fullName: System.Globalization.Calendar.GetDayOfWeek(System.DateTime)
  type: Method
  source:
    remote:
      path: src/mscorlib/src/System/Globalization/Calendar.cs
      branch: master
      repo: https://github.com/dotnet/coreclr.git
    id: GetDayOfWeek
    path: src/mscorlib/src/System/Globalization/Calendar.cs
    startLine: 384
  assemblies:
  - System.Globalization
  namespace: System.Globalization
  summary: "\n<p>When overridden in a derived class, returns the day of the week in the specified <xref href=\"System.DateTime\" data-throw-if-not-resolved=\"false\"></xref>.</p>\n"
  syntax:
    content: public abstract DayOfWeek GetDayOfWeek(DateTime time)
    content.vb: Public MustOverride Function GetDayOfWeek(time As Date) As DayOfWeek
    parameters:
    - id: time
      type: System.DateTime
      description: "\n<p>The <xref href=\"System.DateTime\" data-throw-if-not-resolved=\"false\"></xref> to read. </p>\n"
    return:
      type: System.DayOfWeek
      description: "\n<p>A <xref href=\"System.DayOfWeek\" data-throw-if-not-resolved=\"false\"></xref> value that represents the day of the week in the <em>time</em> parameter.</p>\n"
  seealso:
  - linkId: System.DateTime.DayOfWeek
    commentId: P:System.DateTime.DayOfWeek
  - linkId: System.DayOfWeek
    commentId: T:System.DayOfWeek
  - linkId: System.Globalization.Calendar.GetEra(System.DateTime)
    commentId: M:System.Globalization.Calendar.GetEra(System.DateTime)
  - linkId: System.Globalization.Calendar.GetYear(System.DateTime)
    commentId: M:System.Globalization.Calendar.GetYear(System.DateTime)
  - linkId: System.Globalization.Calendar.GetMonth(System.DateTime)
    commentId: M:System.Globalization.Calendar.GetMonth(System.DateTime)
  - linkId: System.Globalization.Calendar.GetWeekOfYear(System.DateTime,System.Globalization.CalendarWeekRule,System.DayOfWeek)
    commentId: M:System.Globalization.Calendar.GetWeekOfYear(System.DateTime,System.Globalization.CalendarWeekRule,System.DayOfWeek)
  - linkId: System.Globalization.Calendar.GetDayOfYear(System.DateTime)
    commentId: M:System.Globalization.Calendar.GetDayOfYear(System.DateTime)
  - linkId: System.Globalization.Calendar.GetDayOfMonth(System.DateTime)
    commentId: M:System.Globalization.Calendar.GetDayOfMonth(System.DateTime)
  - linkId: System.Globalization.Calendar.GetHour(System.DateTime)
    commentId: M:System.Globalization.Calendar.GetHour(System.DateTime)
  - linkId: System.Globalization.Calendar.GetMinute(System.DateTime)
    commentId: M:System.Globalization.Calendar.GetMinute(System.DateTime)
  - linkId: System.Globalization.Calendar.GetSecond(System.DateTime)
    commentId: M:System.Globalization.Calendar.GetSecond(System.DateTime)
  - linkId: System.Globalization.Calendar.GetMilliseconds(System.DateTime)
    commentId: M:System.Globalization.Calendar.GetMilliseconds(System.DateTime)
  modifiers.csharp:
  - public
  - abstract
  modifiers.vb:
  - Public
  - MustOverride
- uid: System.Globalization.Calendar.GetDayOfYear(System.DateTime)
  commentId: M:System.Globalization.Calendar.GetDayOfYear(System.DateTime)
  id: GetDayOfYear(System.DateTime)
  parent: System.Globalization.Calendar
  langs:
  - csharp
  - vb
  name: GetDayOfYear(DateTime)
  nameWithType: Calendar.GetDayOfYear(DateTime)
  fullName: System.Globalization.Calendar.GetDayOfYear(System.DateTime)
  type: Method
  source:
    remote:
      path: src/mscorlib/src/System/Globalization/Calendar.cs
      branch: master
      repo: https://github.com/dotnet/coreclr.git
    id: GetDayOfYear
    path: src/mscorlib/src/System/Globalization/Calendar.cs
    startLine: 390
  assemblies:
  - System.Globalization
  namespace: System.Globalization
  summary: "\n<p>When overridden in a derived class, returns the day of the year in the specified <xref href=\"System.DateTime\" data-throw-if-not-resolved=\"false\"></xref>.</p>\n"
  syntax:
    content: public abstract int GetDayOfYear(DateTime time)
    content.vb: Public MustOverride Function GetDayOfYear(time As Date) As Integer
    parameters:
    - id: time
      type: System.DateTime
      description: "\n<p>The <xref href=\"System.DateTime\" data-throw-if-not-resolved=\"false\"></xref> to read. </p>\n"
    return:
      type: System.Int32
      description: "\n<p>A positive integer that represents the day of the year in the <em>time</em> parameter.</p>\n"
  seealso:
  - linkId: System.DateTime.DayOfYear
    commentId: P:System.DateTime.DayOfYear
  - linkId: System.Globalization.Calendar.GetEra(System.DateTime)
    commentId: M:System.Globalization.Calendar.GetEra(System.DateTime)
  - linkId: System.Globalization.Calendar.GetYear(System.DateTime)
    commentId: M:System.Globalization.Calendar.GetYear(System.DateTime)
  - linkId: System.Globalization.Calendar.GetMonth(System.DateTime)
    commentId: M:System.Globalization.Calendar.GetMonth(System.DateTime)
  - linkId: System.Globalization.Calendar.GetWeekOfYear(System.DateTime,System.Globalization.CalendarWeekRule,System.DayOfWeek)
    commentId: M:System.Globalization.Calendar.GetWeekOfYear(System.DateTime,System.Globalization.CalendarWeekRule,System.DayOfWeek)
  - linkId: System.Globalization.Calendar.GetDayOfMonth(System.DateTime)
    commentId: M:System.Globalization.Calendar.GetDayOfMonth(System.DateTime)
  - linkId: System.Globalization.Calendar.GetDayOfWeek(System.DateTime)
    commentId: M:System.Globalization.Calendar.GetDayOfWeek(System.DateTime)
  - linkId: System.Globalization.Calendar.GetHour(System.DateTime)
    commentId: M:System.Globalization.Calendar.GetHour(System.DateTime)
  - linkId: System.Globalization.Calendar.GetMinute(System.DateTime)
    commentId: M:System.Globalization.Calendar.GetMinute(System.DateTime)
  - linkId: System.Globalization.Calendar.GetSecond(System.DateTime)
    commentId: M:System.Globalization.Calendar.GetSecond(System.DateTime)
  - linkId: System.Globalization.Calendar.GetMilliseconds(System.DateTime)
    commentId: M:System.Globalization.Calendar.GetMilliseconds(System.DateTime)
  modifiers.csharp:
  - public
  - abstract
  modifiers.vb:
  - Public
  - MustOverride
- uid: System.Globalization.Calendar.GetDaysInMonth(System.Int32,System.Int32)
  commentId: M:System.Globalization.Calendar.GetDaysInMonth(System.Int32,System.Int32)
  id: GetDaysInMonth(System.Int32,System.Int32)
  parent: System.Globalization.Calendar
  langs:
  - csharp
  - vb
  name: GetDaysInMonth(Int32, Int32)
  nameWithType: Calendar.GetDaysInMonth(Int32, Int32)
  fullName: System.Globalization.Calendar.GetDaysInMonth(System.Int32, System.Int32)
  type: Method
  source:
    remote:
      path: src/mscorlib/src/System/Globalization/Calendar.cs
      branch: master
      repo: https://github.com/dotnet/coreclr.git
    id: GetDaysInMonth
    path: src/mscorlib/src/System/Globalization/Calendar.cs
    startLine: 396
  assemblies:
  - System.Globalization
  namespace: System.Globalization
  summary: "\n<p>Returns the number of days in the specified month and year of the current era.</p>\n"
  syntax:
    content: public virtual int GetDaysInMonth(int year, int month)
    content.vb: Public Overridable Function GetDaysInMonth(year As Integer, month As Integer) As Integer
    parameters:
    - id: year
      type: System.Int32
      description: "\n<p>An integer that represents the year. </p>\n"
    - id: month
      type: System.Int32
      description: "\n<p>A positive integer that represents the month. </p>\n"
    return:
      type: System.Int32
      description: "\n<p>The number of days in the specified month in the specified year in the current era.</p>\n"
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "\n<p>\n<em>year</em> is outside the range supported by the calendar.</p>\n<p>-or- </p>\n<p>\n<em>month</em> is outside the range supported by the calendar. </p>\n"
  seealso:
  - linkId: System.Globalization.GregorianCalendar
    commentId: T:System.Globalization.GregorianCalendar
  - linkId: System.Globalization.Calendar.GetMonthsInYear(System.Int32)
    commentId: M:System.Globalization.Calendar.GetMonthsInYear(System.Int32)
  - linkId: System.Globalization.Calendar.GetDaysInYear(System.Int32)
    commentId: M:System.Globalization.Calendar.GetDaysInYear(System.Int32)
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: System.Globalization.Calendar.GetDaysInMonth(System.Int32,System.Int32,System.Int32)
  commentId: M:System.Globalization.Calendar.GetDaysInMonth(System.Int32,System.Int32,System.Int32)
  id: GetDaysInMonth(System.Int32,System.Int32,System.Int32)
  parent: System.Globalization.Calendar
  langs:
  - csharp
  - vb
  name: GetDaysInMonth(Int32, Int32, Int32)
  nameWithType: Calendar.GetDaysInMonth(Int32, Int32, Int32)
  fullName: System.Globalization.Calendar.GetDaysInMonth(System.Int32, System.Int32, System.Int32)
  type: Method
  source:
    remote:
      path: src/mscorlib/src/System/Globalization/Calendar.cs
      branch: master
      repo: https://github.com/dotnet/coreclr.git
    id: GetDaysInMonth
    path: src/mscorlib/src/System/Globalization/Calendar.cs
    startLine: 405
  assemblies:
  - System.Globalization
  namespace: System.Globalization
  summary: "\n<p>When overridden in a derived class, returns the number of days in the specified month, year, and era.</p>\n"
  syntax:
    content: public abstract int GetDaysInMonth(int year, int month, int era)
    content.vb: Public MustOverride Function GetDaysInMonth(year As Integer, month As Integer, era As Integer) As Integer
    parameters:
    - id: year
      type: System.Int32
      description: "\n<p>An integer that represents the year. </p>\n"
    - id: month
      type: System.Int32
      description: "\n<p>A positive integer that represents the month. </p>\n"
    - id: era
      type: System.Int32
      description: "\n<p>An integer that represents the era. </p>\n"
    return:
      type: System.Int32
      description: "\n<p>The number of days in the specified month in the specified year in the specified era.</p>\n"
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "\n<p>\n<em>year</em> is outside the range supported by the calendar.</p>\n<p>-or- </p>\n<p>\n<em>month</em> is outside the range supported by the calendar.</p>\n<p>-or- </p>\n<p>\n<em>era</em> is outside the range supported by the calendar. </p>\n"
  seealso:
  - linkId: System.Globalization.GregorianCalendar
    commentId: T:System.Globalization.GregorianCalendar
  - linkId: System.Globalization.Calendar.CurrentEra
    commentId: F:System.Globalization.Calendar.CurrentEra
  - linkId: System.Globalization.Calendar.Eras
    commentId: P:System.Globalization.Calendar.Eras
  - linkId: System.Globalization.Calendar.GetMonthsInYear(System.Int32)
    commentId: M:System.Globalization.Calendar.GetMonthsInYear(System.Int32)
  - linkId: System.Globalization.Calendar.GetDaysInYear(System.Int32)
    commentId: M:System.Globalization.Calendar.GetDaysInYear(System.Int32)
  modifiers.csharp:
  - public
  - abstract
  modifiers.vb:
  - Public
  - MustOverride
- uid: System.Globalization.Calendar.GetDaysInYear(System.Int32)
  commentId: M:System.Globalization.Calendar.GetDaysInYear(System.Int32)
  id: GetDaysInYear(System.Int32)
  parent: System.Globalization.Calendar
  langs:
  - csharp
  - vb
  name: GetDaysInYear(Int32)
  nameWithType: Calendar.GetDaysInYear(Int32)
  fullName: System.Globalization.Calendar.GetDaysInYear(System.Int32)
  type: Method
  source:
    remote:
      path: src/mscorlib/src/System/Globalization/Calendar.cs
      branch: master
      repo: https://github.com/dotnet/coreclr.git
    id: GetDaysInYear
    path: src/mscorlib/src/System/Globalization/Calendar.cs
    startLine: 410
  assemblies:
  - System.Globalization
  namespace: System.Globalization
  summary: "\n<p>Returns the number of days in the specified year of the current era.</p>\n"
  syntax:
    content: public virtual int GetDaysInYear(int year)
    content.vb: Public Overridable Function GetDaysInYear(year As Integer) As Integer
    parameters:
    - id: year
      type: System.Int32
      description: "\n<p>An integer that represents the year. </p>\n"
    return:
      type: System.Int32
      description: "\n<p>The number of days in the specified year in the current era.</p>\n"
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "\n<p>\n<em>year</em> is outside the range supported by the calendar. </p>\n"
  seealso:
  - linkId: System.Globalization.GregorianCalendar
    commentId: T:System.Globalization.GregorianCalendar
  - linkId: System.Globalization.Calendar.GetMonthsInYear(System.Int32)
    commentId: M:System.Globalization.Calendar.GetMonthsInYear(System.Int32)
  - linkId: System.Globalization.Calendar.GetDaysInMonth(System.Int32,System.Int32)
    commentId: M:System.Globalization.Calendar.GetDaysInMonth(System.Int32,System.Int32)
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: System.Globalization.Calendar.GetDaysInYear(System.Int32,System.Int32)
  commentId: M:System.Globalization.Calendar.GetDaysInYear(System.Int32,System.Int32)
  id: GetDaysInYear(System.Int32,System.Int32)
  parent: System.Globalization.Calendar
  langs:
  - csharp
  - vb
  name: GetDaysInYear(Int32, Int32)
  nameWithType: Calendar.GetDaysInYear(Int32, Int32)
  fullName: System.Globalization.Calendar.GetDaysInYear(System.Int32, System.Int32)
  type: Method
  source:
    remote:
      path: src/mscorlib/src/System/Globalization/Calendar.cs
      branch: master
      repo: https://github.com/dotnet/coreclr.git
    id: GetDaysInYear
    path: src/mscorlib/src/System/Globalization/Calendar.cs
    startLine: 418
  assemblies:
  - System.Globalization
  namespace: System.Globalization
  summary: "\n<p>When overridden in a derived class, returns the number of days in the specified year and era.</p>\n"
  syntax:
    content: public abstract int GetDaysInYear(int year, int era)
    content.vb: Public MustOverride Function GetDaysInYear(year As Integer, era As Integer) As Integer
    parameters:
    - id: year
      type: System.Int32
      description: "\n<p>An integer that represents the year. </p>\n"
    - id: era
      type: System.Int32
      description: "\n<p>An integer that represents the era. </p>\n"
    return:
      type: System.Int32
      description: "\n<p>The number of days in the specified year in the specified era.</p>\n"
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "\n<p>\n<em>year</em> is outside the range supported by the calendar.</p>\n<p>-or- </p>\n<p>\n<em>era</em> is outside the range supported by the calendar. </p>\n"
  seealso:
  - linkId: System.Globalization.GregorianCalendar
    commentId: T:System.Globalization.GregorianCalendar
  - linkId: System.Globalization.Calendar.CurrentEra
    commentId: F:System.Globalization.Calendar.CurrentEra
  - linkId: System.Globalization.Calendar.Eras
    commentId: P:System.Globalization.Calendar.Eras
  - linkId: System.Globalization.Calendar.GetMonthsInYear(System.Int32)
    commentId: M:System.Globalization.Calendar.GetMonthsInYear(System.Int32)
  - linkId: System.Globalization.Calendar.GetDaysInMonth(System.Int32,System.Int32)
    commentId: M:System.Globalization.Calendar.GetDaysInMonth(System.Int32,System.Int32)
  modifiers.csharp:
  - public
  - abstract
  modifiers.vb:
  - Public
  - MustOverride
- uid: System.Globalization.Calendar.GetEra(System.DateTime)
  commentId: M:System.Globalization.Calendar.GetEra(System.DateTime)
  id: GetEra(System.DateTime)
  parent: System.Globalization.Calendar
  langs:
  - csharp
  - vb
  name: GetEra(DateTime)
  nameWithType: Calendar.GetEra(DateTime)
  fullName: System.Globalization.Calendar.GetEra(System.DateTime)
  type: Method
  source:
    remote:
      path: src/mscorlib/src/System/Globalization/Calendar.cs
      branch: master
      repo: https://github.com/dotnet/coreclr.git
    id: GetEra
    path: src/mscorlib/src/System/Globalization/Calendar.cs
    startLine: 422
  assemblies:
  - System.Globalization
  namespace: System.Globalization
  summary: "\n<p>When overridden in a derived class, returns the era in the specified <xref href=\"System.DateTime\" data-throw-if-not-resolved=\"false\"></xref>.</p>\n"
  syntax:
    content: public abstract int GetEra(DateTime time)
    content.vb: Public MustOverride Function GetEra(time As Date) As Integer
    parameters:
    - id: time
      type: System.DateTime
      description: "\n<p>The <xref href=\"System.DateTime\" data-throw-if-not-resolved=\"false\"></xref> to read. </p>\n"
    return:
      type: System.Int32
      description: "\n<p>An integer that represents the era in <em>time</em>.</p>\n"
  seealso:
  - linkId: System.DateTime
    commentId: T:System.DateTime
  - linkId: System.Globalization.Calendar.CurrentEra
    commentId: F:System.Globalization.Calendar.CurrentEra
  - linkId: System.Globalization.Calendar.Eras
    commentId: P:System.Globalization.Calendar.Eras
  - linkId: System.Globalization.Calendar.GetYear(System.DateTime)
    commentId: M:System.Globalization.Calendar.GetYear(System.DateTime)
  - linkId: System.Globalization.Calendar.GetMonth(System.DateTime)
    commentId: M:System.Globalization.Calendar.GetMonth(System.DateTime)
  - linkId: System.Globalization.Calendar.GetWeekOfYear(System.DateTime,System.Globalization.CalendarWeekRule,System.DayOfWeek)
    commentId: M:System.Globalization.Calendar.GetWeekOfYear(System.DateTime,System.Globalization.CalendarWeekRule,System.DayOfWeek)
  - linkId: System.Globalization.Calendar.GetDayOfYear(System.DateTime)
    commentId: M:System.Globalization.Calendar.GetDayOfYear(System.DateTime)
  - linkId: System.Globalization.Calendar.GetDayOfMonth(System.DateTime)
    commentId: M:System.Globalization.Calendar.GetDayOfMonth(System.DateTime)
  - linkId: System.Globalization.Calendar.GetDayOfWeek(System.DateTime)
    commentId: M:System.Globalization.Calendar.GetDayOfWeek(System.DateTime)
  - linkId: System.Globalization.Calendar.GetHour(System.DateTime)
    commentId: M:System.Globalization.Calendar.GetHour(System.DateTime)
  - linkId: System.Globalization.Calendar.GetMinute(System.DateTime)
    commentId: M:System.Globalization.Calendar.GetMinute(System.DateTime)
  - linkId: System.Globalization.Calendar.GetSecond(System.DateTime)
    commentId: M:System.Globalization.Calendar.GetSecond(System.DateTime)
  - linkId: System.Globalization.Calendar.GetMilliseconds(System.DateTime)
    commentId: M:System.Globalization.Calendar.GetMilliseconds(System.DateTime)
  modifiers.csharp:
  - public
  - abstract
  modifiers.vb:
  - Public
  - MustOverride
- uid: System.Globalization.Calendar.GetHour(System.DateTime)
  commentId: M:System.Globalization.Calendar.GetHour(System.DateTime)
  id: GetHour(System.DateTime)
  parent: System.Globalization.Calendar
  langs:
  - csharp
  - vb
  name: GetHour(DateTime)
  nameWithType: Calendar.GetHour(DateTime)
  fullName: System.Globalization.Calendar.GetHour(System.DateTime)
  type: Method
  source:
    remote:
      path: src/mscorlib/src/System/Globalization/Calendar.cs
      branch: master
      repo: https://github.com/dotnet/coreclr.git
    id: GetHour
    path: src/mscorlib/src/System/Globalization/Calendar.cs
    startLine: 442
  assemblies:
  - System.Globalization
  namespace: System.Globalization
  summary: "\n<p>Returns the hours value in the specified <xref href=\"System.DateTime\" data-throw-if-not-resolved=\"false\"></xref>.</p>\n"
  syntax:
    content: public virtual int GetHour(DateTime time)
    content.vb: Public Overridable Function GetHour(time As Date) As Integer
    parameters:
    - id: time
      type: System.DateTime
      description: "\n<p>The <xref href=\"System.DateTime\" data-throw-if-not-resolved=\"false\"></xref> to read. </p>\n"
    return:
      type: System.Int32
      description: "\n<p>An integer from 0 to 23 that represents the hour in <em>time</em>.</p>\n"
  seealso:
  - linkId: System.DateTime.Hour
    commentId: P:System.DateTime.Hour
  - linkId: System.Globalization.Calendar.GetEra(System.DateTime)
    commentId: M:System.Globalization.Calendar.GetEra(System.DateTime)
  - linkId: System.Globalization.Calendar.GetYear(System.DateTime)
    commentId: M:System.Globalization.Calendar.GetYear(System.DateTime)
  - linkId: System.Globalization.Calendar.GetMonth(System.DateTime)
    commentId: M:System.Globalization.Calendar.GetMonth(System.DateTime)
  - linkId: System.Globalization.Calendar.GetWeekOfYear(System.DateTime,System.Globalization.CalendarWeekRule,System.DayOfWeek)
    commentId: M:System.Globalization.Calendar.GetWeekOfYear(System.DateTime,System.Globalization.CalendarWeekRule,System.DayOfWeek)
  - linkId: System.Globalization.Calendar.GetDayOfYear(System.DateTime)
    commentId: M:System.Globalization.Calendar.GetDayOfYear(System.DateTime)
  - linkId: System.Globalization.Calendar.GetDayOfMonth(System.DateTime)
    commentId: M:System.Globalization.Calendar.GetDayOfMonth(System.DateTime)
  - linkId: System.Globalization.Calendar.GetDayOfWeek(System.DateTime)
    commentId: M:System.Globalization.Calendar.GetDayOfWeek(System.DateTime)
  - linkId: System.Globalization.Calendar.GetMinute(System.DateTime)
    commentId: M:System.Globalization.Calendar.GetMinute(System.DateTime)
  - linkId: System.Globalization.Calendar.GetSecond(System.DateTime)
    commentId: M:System.Globalization.Calendar.GetSecond(System.DateTime)
  - linkId: System.Globalization.Calendar.GetMilliseconds(System.DateTime)
    commentId: M:System.Globalization.Calendar.GetMilliseconds(System.DateTime)
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: System.Globalization.Calendar.GetLeapMonth(System.Int32,System.Int32)
  commentId: M:System.Globalization.Calendar.GetLeapMonth(System.Int32,System.Int32)
  id: GetLeapMonth(System.Int32,System.Int32)
  parent: System.Globalization.Calendar
  langs:
  - csharp
  - vb
  name: GetLeapMonth(Int32, Int32)
  nameWithType: Calendar.GetLeapMonth(Int32, Int32)
  fullName: System.Globalization.Calendar.GetLeapMonth(System.Int32, System.Int32)
  type: Method
  source:
    remote:
      path: src/mscorlib/src/System/Globalization/Calendar.cs
      branch: master
      repo: https://github.com/dotnet/coreclr.git
    id: GetLeapMonth
    path: src/mscorlib/src/System/Globalization/Calendar.cs
    startLine: 720
  assemblies:
  - System.Globalization
  namespace: System.Globalization
  summary: "\n<p>Calculates the leap month for a specified year and era.</p>\n"
  syntax:
    content: >-
      [ComVisible(false)]

      public virtual int GetLeapMonth(int year, int era)
    content.vb: >-
      <ComVisible(False)>

      Public Overridable Function GetLeapMonth(year As Integer, era As Integer) As Integer
    parameters:
    - id: year
      type: System.Int32
      description: "\n<p>A year.</p>\n"
    - id: era
      type: System.Int32
      description: "\n<p>An era.</p>\n"
    return:
      type: System.Int32
      description: "\n<p>A positive integer that indicates the leap month in the specified year and era.</p>\n<p>-or-</p>\n<p>Zero if this calendar does not support a leap month or if the <em>year</em> and <em>era</em> parameters do not specify a leap year.</p>\n"
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: System.Globalization.Calendar.GetMilliseconds(System.DateTime)
  commentId: M:System.Globalization.Calendar.GetMilliseconds(System.DateTime)
  id: GetMilliseconds(System.DateTime)
  parent: System.Globalization.Calendar
  langs:
  - csharp
  - vb
  name: GetMilliseconds(DateTime)
  nameWithType: Calendar.GetMilliseconds(DateTime)
  fullName: System.Globalization.Calendar.GetMilliseconds(System.DateTime)
  type: Method
  source:
    remote:
      path: src/mscorlib/src/System/Globalization/Calendar.cs
      branch: master
      repo: https://github.com/dotnet/coreclr.git
    id: GetMilliseconds
    path: src/mscorlib/src/System/Globalization/Calendar.cs
    startLine: 450
  assemblies:
  - System.Globalization
  namespace: System.Globalization
  summary: "\n<p>Returns the milliseconds value in the specified <xref href=\"System.DateTime\" data-throw-if-not-resolved=\"false\"></xref>.</p>\n"
  syntax:
    content: public virtual double GetMilliseconds(DateTime time)
    content.vb: Public Overridable Function GetMilliseconds(time As Date) As Double
    parameters:
    - id: time
      type: System.DateTime
      description: "\n<p>The <xref href=\"System.DateTime\" data-throw-if-not-resolved=\"false\"></xref> to read. </p>\n"
    return:
      type: System.Double
      description: "\n<p>A double-precision floating-point number from 0 to 999 that represents the milliseconds in the <em>time</em> parameter.</p>\n"
  seealso:
  - linkId: System.DateTime.Millisecond
    commentId: P:System.DateTime.Millisecond
  - linkId: System.Globalization.Calendar.GetEra(System.DateTime)
    commentId: M:System.Globalization.Calendar.GetEra(System.DateTime)
  - linkId: System.Globalization.Calendar.GetYear(System.DateTime)
    commentId: M:System.Globalization.Calendar.GetYear(System.DateTime)
  - linkId: System.Globalization.Calendar.GetMonth(System.DateTime)
    commentId: M:System.Globalization.Calendar.GetMonth(System.DateTime)
  - linkId: System.Globalization.Calendar.GetWeekOfYear(System.DateTime,System.Globalization.CalendarWeekRule,System.DayOfWeek)
    commentId: M:System.Globalization.Calendar.GetWeekOfYear(System.DateTime,System.Globalization.CalendarWeekRule,System.DayOfWeek)
  - linkId: System.Globalization.Calendar.GetDayOfYear(System.DateTime)
    commentId: M:System.Globalization.Calendar.GetDayOfYear(System.DateTime)
  - linkId: System.Globalization.Calendar.GetDayOfMonth(System.DateTime)
    commentId: M:System.Globalization.Calendar.GetDayOfMonth(System.DateTime)
  - linkId: System.Globalization.Calendar.GetDayOfWeek(System.DateTime)
    commentId: M:System.Globalization.Calendar.GetDayOfWeek(System.DateTime)
  - linkId: System.Globalization.Calendar.GetHour(System.DateTime)
    commentId: M:System.Globalization.Calendar.GetHour(System.DateTime)
  - linkId: System.Globalization.Calendar.GetMinute(System.DateTime)
    commentId: M:System.Globalization.Calendar.GetMinute(System.DateTime)
  - linkId: System.Globalization.Calendar.GetSecond(System.DateTime)
    commentId: M:System.Globalization.Calendar.GetSecond(System.DateTime)
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: System.Globalization.Calendar.GetMinute(System.DateTime)
  commentId: M:System.Globalization.Calendar.GetMinute(System.DateTime)
  id: GetMinute(System.DateTime)
  parent: System.Globalization.Calendar
  langs:
  - csharp
  - vb
  name: GetMinute(DateTime)
  nameWithType: Calendar.GetMinute(DateTime)
  fullName: System.Globalization.Calendar.GetMinute(System.DateTime)
  type: Method
  source:
    remote:
      path: src/mscorlib/src/System/Globalization/Calendar.cs
      branch: master
      repo: https://github.com/dotnet/coreclr.git
    id: GetMinute
    path: src/mscorlib/src/System/Globalization/Calendar.cs
    startLine: 458
  assemblies:
  - System.Globalization
  namespace: System.Globalization
  summary: "\n<p>Returns the minutes value in the specified <xref href=\"System.DateTime\" data-throw-if-not-resolved=\"false\"></xref>.</p>\n"
  syntax:
    content: public virtual int GetMinute(DateTime time)
    content.vb: Public Overridable Function GetMinute(time As Date) As Integer
    parameters:
    - id: time
      type: System.DateTime
      description: "\n<p>The <xref href=\"System.DateTime\" data-throw-if-not-resolved=\"false\"></xref> to read. </p>\n"
    return:
      type: System.Int32
      description: "\n<p>An integer from 0 to 59 that represents the minutes in <em>time</em>.</p>\n"
  seealso:
  - linkId: System.DateTime.Minute
    commentId: P:System.DateTime.Minute
  - linkId: System.Globalization.Calendar.GetEra(System.DateTime)
    commentId: M:System.Globalization.Calendar.GetEra(System.DateTime)
  - linkId: System.Globalization.Calendar.GetYear(System.DateTime)
    commentId: M:System.Globalization.Calendar.GetYear(System.DateTime)
  - linkId: System.Globalization.Calendar.GetMonth(System.DateTime)
    commentId: M:System.Globalization.Calendar.GetMonth(System.DateTime)
  - linkId: System.Globalization.Calendar.GetWeekOfYear(System.DateTime,System.Globalization.CalendarWeekRule,System.DayOfWeek)
    commentId: M:System.Globalization.Calendar.GetWeekOfYear(System.DateTime,System.Globalization.CalendarWeekRule,System.DayOfWeek)
  - linkId: System.Globalization.Calendar.GetDayOfYear(System.DateTime)
    commentId: M:System.Globalization.Calendar.GetDayOfYear(System.DateTime)
  - linkId: System.Globalization.Calendar.GetDayOfMonth(System.DateTime)
    commentId: M:System.Globalization.Calendar.GetDayOfMonth(System.DateTime)
  - linkId: System.Globalization.Calendar.GetDayOfWeek(System.DateTime)
    commentId: M:System.Globalization.Calendar.GetDayOfWeek(System.DateTime)
  - linkId: System.Globalization.Calendar.GetHour(System.DateTime)
    commentId: M:System.Globalization.Calendar.GetHour(System.DateTime)
  - linkId: System.Globalization.Calendar.GetSecond(System.DateTime)
    commentId: M:System.Globalization.Calendar.GetSecond(System.DateTime)
  - linkId: System.Globalization.Calendar.GetMilliseconds(System.DateTime)
    commentId: M:System.Globalization.Calendar.GetMilliseconds(System.DateTime)
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: System.Globalization.Calendar.GetMonth(System.DateTime)
  commentId: M:System.Globalization.Calendar.GetMonth(System.DateTime)
  id: GetMonth(System.DateTime)
  parent: System.Globalization.Calendar
  langs:
  - csharp
  - vb
  name: GetMonth(DateTime)
  nameWithType: Calendar.GetMonth(DateTime)
  fullName: System.Globalization.Calendar.GetMonth(System.DateTime)
  type: Method
  source:
    remote:
      path: src/mscorlib/src/System/Globalization/Calendar.cs
      branch: master
      repo: https://github.com/dotnet/coreclr.git
    id: GetMonth
    path: src/mscorlib/src/System/Globalization/Calendar.cs
    startLine: 466
  assemblies:
  - System.Globalization
  namespace: System.Globalization
  summary: "\n<p>When overridden in a derived class, returns the month in the specified <xref href=\"System.DateTime\" data-throw-if-not-resolved=\"false\"></xref>.</p>\n"
  syntax:
    content: public abstract int GetMonth(DateTime time)
    content.vb: Public MustOverride Function GetMonth(time As Date) As Integer
    parameters:
    - id: time
      type: System.DateTime
      description: "\n<p>The <xref href=\"System.DateTime\" data-throw-if-not-resolved=\"false\"></xref> to read. </p>\n"
    return:
      type: System.Int32
      description: "\n<p>A positive integer that represents the month in <em>time</em>.</p>\n"
  seealso:
  - linkId: System.DateTime.Month
    commentId: P:System.DateTime.Month
  - linkId: System.Globalization.Calendar.GetEra(System.DateTime)
    commentId: M:System.Globalization.Calendar.GetEra(System.DateTime)
  - linkId: System.Globalization.Calendar.GetYear(System.DateTime)
    commentId: M:System.Globalization.Calendar.GetYear(System.DateTime)
  - linkId: System.Globalization.Calendar.GetWeekOfYear(System.DateTime,System.Globalization.CalendarWeekRule,System.DayOfWeek)
    commentId: M:System.Globalization.Calendar.GetWeekOfYear(System.DateTime,System.Globalization.CalendarWeekRule,System.DayOfWeek)
  - linkId: System.Globalization.Calendar.GetDayOfYear(System.DateTime)
    commentId: M:System.Globalization.Calendar.GetDayOfYear(System.DateTime)
  - linkId: System.Globalization.Calendar.GetDayOfMonth(System.DateTime)
    commentId: M:System.Globalization.Calendar.GetDayOfMonth(System.DateTime)
  - linkId: System.Globalization.Calendar.GetDayOfWeek(System.DateTime)
    commentId: M:System.Globalization.Calendar.GetDayOfWeek(System.DateTime)
  - linkId: System.Globalization.Calendar.GetHour(System.DateTime)
    commentId: M:System.Globalization.Calendar.GetHour(System.DateTime)
  - linkId: System.Globalization.Calendar.GetMinute(System.DateTime)
    commentId: M:System.Globalization.Calendar.GetMinute(System.DateTime)
  - linkId: System.Globalization.Calendar.GetSecond(System.DateTime)
    commentId: M:System.Globalization.Calendar.GetSecond(System.DateTime)
  - linkId: System.Globalization.Calendar.GetMilliseconds(System.DateTime)
    commentId: M:System.Globalization.Calendar.GetMilliseconds(System.DateTime)
  modifiers.csharp:
  - public
  - abstract
  modifiers.vb:
  - Public
  - MustOverride
- uid: System.Globalization.Calendar.GetMonthsInYear(System.Int32)
  commentId: M:System.Globalization.Calendar.GetMonthsInYear(System.Int32)
  id: GetMonthsInYear(System.Int32)
  parent: System.Globalization.Calendar
  langs:
  - csharp
  - vb
  name: GetMonthsInYear(Int32)
  nameWithType: Calendar.GetMonthsInYear(Int32)
  fullName: System.Globalization.Calendar.GetMonthsInYear(System.Int32)
  type: Method
  source:
    remote:
      path: src/mscorlib/src/System/Globalization/Calendar.cs
      branch: master
      repo: https://github.com/dotnet/coreclr.git
    id: GetMonthsInYear
    path: src/mscorlib/src/System/Globalization/Calendar.cs
    startLine: 470
  assemblies:
  - System.Globalization
  namespace: System.Globalization
  summary: "\n<p>Returns the number of months in the specified year in the current era.</p>\n"
  syntax:
    content: public virtual int GetMonthsInYear(int year)
    content.vb: Public Overridable Function GetMonthsInYear(year As Integer) As Integer
    parameters:
    - id: year
      type: System.Int32
      description: "\n<p>An integer that represents the year. </p>\n"
    return:
      type: System.Int32
      description: "\n<p>The number of months in the specified year in the current era.</p>\n"
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "\n<p>\n<em>year</em> is outside the range supported by the calendar. </p>\n"
  seealso:
  - linkId: System.Globalization.Calendar.GetDaysInYear(System.Int32)
    commentId: M:System.Globalization.Calendar.GetDaysInYear(System.Int32)
  - linkId: System.Globalization.Calendar.GetDaysInMonth(System.Int32,System.Int32)
    commentId: M:System.Globalization.Calendar.GetDaysInMonth(System.Int32,System.Int32)
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: System.Globalization.Calendar.GetMonthsInYear(System.Int32,System.Int32)
  commentId: M:System.Globalization.Calendar.GetMonthsInYear(System.Int32,System.Int32)
  id: GetMonthsInYear(System.Int32,System.Int32)
  parent: System.Globalization.Calendar
  langs:
  - csharp
  - vb
  name: GetMonthsInYear(Int32, Int32)
  nameWithType: Calendar.GetMonthsInYear(Int32, Int32)
  fullName: System.Globalization.Calendar.GetMonthsInYear(System.Int32, System.Int32)
  type: Method
  source:
    remote:
      path: src/mscorlib/src/System/Globalization/Calendar.cs
      branch: master
      repo: https://github.com/dotnet/coreclr.git
    id: GetMonthsInYear
    path: src/mscorlib/src/System/Globalization/Calendar.cs
    startLine: 477
  assemblies:
  - System.Globalization
  namespace: System.Globalization
  summary: "\n<p>When overridden in a derived class, returns the number of months in the specified year in the specified era.</p>\n"
  syntax:
    content: public abstract int GetMonthsInYear(int year, int era)
    content.vb: Public MustOverride Function GetMonthsInYear(year As Integer, era As Integer) As Integer
    parameters:
    - id: year
      type: System.Int32
      description: "\n<p>An integer that represents the year. </p>\n"
    - id: era
      type: System.Int32
      description: "\n<p>An integer that represents the era. </p>\n"
    return:
      type: System.Int32
      description: "\n<p>The number of months in the specified year in the specified era.</p>\n"
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "\n<p>\n<em>year</em> is outside the range supported by the calendar.</p>\n<p>-or- </p>\n<p>\n<em>era</em> is outside the range supported by the calendar. </p>\n"
  seealso:
  - linkId: System.Globalization.Calendar.CurrentEra
    commentId: F:System.Globalization.Calendar.CurrentEra
  - linkId: System.Globalization.Calendar.Eras
    commentId: P:System.Globalization.Calendar.Eras
  - linkId: System.Globalization.Calendar.GetDaysInYear(System.Int32)
    commentId: M:System.Globalization.Calendar.GetDaysInYear(System.Int32)
  - linkId: System.Globalization.Calendar.GetDaysInMonth(System.Int32,System.Int32)
    commentId: M:System.Globalization.Calendar.GetDaysInMonth(System.Int32,System.Int32)
  modifiers.csharp:
  - public
  - abstract
  modifiers.vb:
  - Public
  - MustOverride
- uid: System.Globalization.Calendar.GetSecond(System.DateTime)
  commentId: M:System.Globalization.Calendar.GetSecond(System.DateTime)
  id: GetSecond(System.DateTime)
  parent: System.Globalization.Calendar
  langs:
  - csharp
  - vb
  name: GetSecond(DateTime)
  nameWithType: Calendar.GetSecond(DateTime)
  fullName: System.Globalization.Calendar.GetSecond(System.DateTime)
  type: Method
  source:
    remote:
      path: src/mscorlib/src/System/Globalization/Calendar.cs
      branch: master
      repo: https://github.com/dotnet/coreclr.git
    id: GetSecond
    path: src/mscorlib/src/System/Globalization/Calendar.cs
    startLine: 483
  assemblies:
  - System.Globalization
  namespace: System.Globalization
  summary: "\n<p>Returns the seconds value in the specified <xref href=\"System.DateTime\" data-throw-if-not-resolved=\"false\"></xref>.</p>\n"
  syntax:
    content: public virtual int GetSecond(DateTime time)
    content.vb: Public Overridable Function GetSecond(time As Date) As Integer
    parameters:
    - id: time
      type: System.DateTime
      description: "\n<p>The <xref href=\"System.DateTime\" data-throw-if-not-resolved=\"false\"></xref> to read. </p>\n"
    return:
      type: System.Int32
      description: "\n<p>An integer from 0 to 59 that represents the seconds in <em>time</em>.</p>\n"
  seealso:
  - linkId: System.DateTime.Second
    commentId: P:System.DateTime.Second
  - linkId: System.Globalization.Calendar.GetEra(System.DateTime)
    commentId: M:System.Globalization.Calendar.GetEra(System.DateTime)
  - linkId: System.Globalization.Calendar.GetYear(System.DateTime)
    commentId: M:System.Globalization.Calendar.GetYear(System.DateTime)
  - linkId: System.Globalization.Calendar.GetMonth(System.DateTime)
    commentId: M:System.Globalization.Calendar.GetMonth(System.DateTime)
  - linkId: System.Globalization.Calendar.GetWeekOfYear(System.DateTime,System.Globalization.CalendarWeekRule,System.DayOfWeek)
    commentId: M:System.Globalization.Calendar.GetWeekOfYear(System.DateTime,System.Globalization.CalendarWeekRule,System.DayOfWeek)
  - linkId: System.Globalization.Calendar.GetDayOfYear(System.DateTime)
    commentId: M:System.Globalization.Calendar.GetDayOfYear(System.DateTime)
  - linkId: System.Globalization.Calendar.GetDayOfMonth(System.DateTime)
    commentId: M:System.Globalization.Calendar.GetDayOfMonth(System.DateTime)
  - linkId: System.Globalization.Calendar.GetDayOfWeek(System.DateTime)
    commentId: M:System.Globalization.Calendar.GetDayOfWeek(System.DateTime)
  - linkId: System.Globalization.Calendar.GetHour(System.DateTime)
    commentId: M:System.Globalization.Calendar.GetHour(System.DateTime)
  - linkId: System.Globalization.Calendar.GetMinute(System.DateTime)
    commentId: M:System.Globalization.Calendar.GetMinute(System.DateTime)
  - linkId: System.Globalization.Calendar.GetMilliseconds(System.DateTime)
    commentId: M:System.Globalization.Calendar.GetMilliseconds(System.DateTime)
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: System.Globalization.Calendar.GetWeekOfYear(System.DateTime,System.Globalization.CalendarWeekRule,System.DayOfWeek)
  commentId: M:System.Globalization.Calendar.GetWeekOfYear(System.DateTime,System.Globalization.CalendarWeekRule,System.DayOfWeek)
  id: GetWeekOfYear(System.DateTime,System.Globalization.CalendarWeekRule,System.DayOfWeek)
  parent: System.Globalization.Calendar
  langs:
  - csharp
  - vb
  name: GetWeekOfYear(DateTime, CalendarWeekRule, DayOfWeek)
  nameWithType: Calendar.GetWeekOfYear(DateTime, CalendarWeekRule, DayOfWeek)
  fullName: System.Globalization.Calendar.GetWeekOfYear(System.DateTime, System.Globalization.CalendarWeekRule, System.DayOfWeek)
  type: Method
  source:
    remote:
      path: src/mscorlib/src/System/Globalization/Calendar.cs
      branch: master
      repo: https://github.com/dotnet/coreclr.git
    id: GetWeekOfYear
    path: src/mscorlib/src/System/Globalization/Calendar.cs
    startLine: 649
  assemblies:
  - System.Globalization
  namespace: System.Globalization
  summary: "\n<p>Returns the week of the year that includes the date in the specified <xref href=\"System.DateTime\" data-throw-if-not-resolved=\"false\"></xref> value.</p>\n"
  syntax:
    content: public virtual int GetWeekOfYear(DateTime time, CalendarWeekRule rule, DayOfWeek firstDayOfWeek)
    content.vb: Public Overridable Function GetWeekOfYear(time As Date, rule As CalendarWeekRule, firstDayOfWeek As DayOfWeek) As Integer
    parameters:
    - id: time
      type: System.DateTime
      description: "\n<p>A date and time value. </p>\n"
    - id: rule
      type: System.Globalization.CalendarWeekRule
      description: "\n<p>An enumeration value that defines a calendar week. </p>\n"
    - id: firstDayOfWeek
      type: System.DayOfWeek
      description: "\n<p>An enumeration value that represents the first day of the week. </p>\n"
    return:
      type: System.Int32
      description: "\n<p>A positive integer that represents the week of the year that includes the date in the <em>time</em> parameter.</p>\n"
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "\n<p>\n<em>time</em> is earlier than <xref href=\"System.Globalization.Calendar.MinSupportedDateTime\" data-throw-if-not-resolved=\"false\"></xref> or later than <xref href=\"System.Globalization.Calendar.MaxSupportedDateTime\" data-throw-if-not-resolved=\"false\"></xref>.</p>\n<p>-or-</p>\n<p>\n<em>firstDayOfWeek</em> is not a valid <xref href=\"System.DayOfWeek\" data-throw-if-not-resolved=\"false\"></xref> value.</p>\n<p>-or- </p>\n<p>\n<em>rule</em> is not a valid <xref href=\"System.Globalization.CalendarWeekRule\" data-throw-if-not-resolved=\"false\"></xref> value. </p>\n"
  seealso:
  - linkId: System.DateTime
    commentId: T:System.DateTime
  - linkId: System.Globalization.CalendarWeekRule
    commentId: T:System.Globalization.CalendarWeekRule
  - linkId: System.DayOfWeek
    commentId: T:System.DayOfWeek
  - linkId: System.Globalization.Calendar.GetEra(System.DateTime)
    commentId: M:System.Globalization.Calendar.GetEra(System.DateTime)
  - linkId: System.Globalization.Calendar.GetYear(System.DateTime)
    commentId: M:System.Globalization.Calendar.GetYear(System.DateTime)
  - linkId: System.Globalization.Calendar.GetMonth(System.DateTime)
    commentId: M:System.Globalization.Calendar.GetMonth(System.DateTime)
  - linkId: System.Globalization.Calendar.GetDayOfYear(System.DateTime)
    commentId: M:System.Globalization.Calendar.GetDayOfYear(System.DateTime)
  - linkId: System.Globalization.Calendar.GetDayOfMonth(System.DateTime)
    commentId: M:System.Globalization.Calendar.GetDayOfMonth(System.DateTime)
  - linkId: System.Globalization.Calendar.GetDayOfWeek(System.DateTime)
    commentId: M:System.Globalization.Calendar.GetDayOfWeek(System.DateTime)
  - linkId: System.Globalization.Calendar.GetHour(System.DateTime)
    commentId: M:System.Globalization.Calendar.GetHour(System.DateTime)
  - linkId: System.Globalization.Calendar.GetMinute(System.DateTime)
    commentId: M:System.Globalization.Calendar.GetMinute(System.DateTime)
  - linkId: System.Globalization.Calendar.GetSecond(System.DateTime)
    commentId: M:System.Globalization.Calendar.GetSecond(System.DateTime)
  - linkId: System.Globalization.Calendar.GetMilliseconds(System.DateTime)
    commentId: M:System.Globalization.Calendar.GetMilliseconds(System.DateTime)
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: System.Globalization.Calendar.GetYear(System.DateTime)
  commentId: M:System.Globalization.Calendar.GetYear(System.DateTime)
  id: GetYear(System.DateTime)
  parent: System.Globalization.Calendar
  langs:
  - csharp
  - vb
  name: GetYear(DateTime)
  nameWithType: Calendar.GetYear(DateTime)
  fullName: System.Globalization.Calendar.GetYear(System.DateTime)
  type: Method
  source:
    remote:
      path: src/mscorlib/src/System/Globalization/Calendar.cs
      branch: master
      repo: https://github.com/dotnet/coreclr.git
    id: GetYear
    path: src/mscorlib/src/System/Globalization/Calendar.cs
    startLine: 675
  assemblies:
  - System.Globalization
  namespace: System.Globalization
  summary: "\n<p>When overridden in a derived class, returns the year in the specified <xref href=\"System.DateTime\" data-throw-if-not-resolved=\"false\"></xref>.</p>\n"
  syntax:
    content: public abstract int GetYear(DateTime time)
    content.vb: Public MustOverride Function GetYear(time As Date) As Integer
    parameters:
    - id: time
      type: System.DateTime
      description: "\n<p>The <xref href=\"System.DateTime\" data-throw-if-not-resolved=\"false\"></xref> to read. </p>\n"
    return:
      type: System.Int32
      description: "\n<p>An integer that represents the year in <em>time</em>.</p>\n"
  seealso:
  - linkId: System.DateTime.Year
    commentId: P:System.DateTime.Year
  - linkId: System.Globalization.Calendar.GetEra(System.DateTime)
    commentId: M:System.Globalization.Calendar.GetEra(System.DateTime)
  - linkId: System.Globalization.Calendar.GetMonth(System.DateTime)
    commentId: M:System.Globalization.Calendar.GetMonth(System.DateTime)
  - linkId: System.Globalization.Calendar.GetWeekOfYear(System.DateTime,System.Globalization.CalendarWeekRule,System.DayOfWeek)
    commentId: M:System.Globalization.Calendar.GetWeekOfYear(System.DateTime,System.Globalization.CalendarWeekRule,System.DayOfWeek)
  - linkId: System.Globalization.Calendar.GetDayOfYear(System.DateTime)
    commentId: M:System.Globalization.Calendar.GetDayOfYear(System.DateTime)
  - linkId: System.Globalization.Calendar.GetDayOfMonth(System.DateTime)
    commentId: M:System.Globalization.Calendar.GetDayOfMonth(System.DateTime)
  - linkId: System.Globalization.Calendar.GetDayOfWeek(System.DateTime)
    commentId: M:System.Globalization.Calendar.GetDayOfWeek(System.DateTime)
  - linkId: System.Globalization.Calendar.GetHour(System.DateTime)
    commentId: M:System.Globalization.Calendar.GetHour(System.DateTime)
  - linkId: System.Globalization.Calendar.GetMinute(System.DateTime)
    commentId: M:System.Globalization.Calendar.GetMinute(System.DateTime)
  - linkId: System.Globalization.Calendar.GetSecond(System.DateTime)
    commentId: M:System.Globalization.Calendar.GetSecond(System.DateTime)
  - linkId: System.Globalization.Calendar.GetMilliseconds(System.DateTime)
    commentId: M:System.Globalization.Calendar.GetMilliseconds(System.DateTime)
  modifiers.csharp:
  - public
  - abstract
  modifiers.vb:
  - Public
  - MustOverride
- uid: System.Globalization.Calendar.IsLeapDay(System.Int32,System.Int32,System.Int32)
  commentId: M:System.Globalization.Calendar.IsLeapDay(System.Int32,System.Int32,System.Int32)
  id: IsLeapDay(System.Int32,System.Int32,System.Int32)
  parent: System.Globalization.Calendar
  langs:
  - csharp
  - vb
  name: IsLeapDay(Int32, Int32, Int32)
  nameWithType: Calendar.IsLeapDay(Int32, Int32, Int32)
  fullName: System.Globalization.Calendar.IsLeapDay(System.Int32, System.Int32, System.Int32)
  type: Method
  source:
    remote:
      path: src/mscorlib/src/System/Globalization/Calendar.cs
      branch: master
      repo: https://github.com/dotnet/coreclr.git
    id: IsLeapDay
    path: src/mscorlib/src/System/Globalization/Calendar.cs
    startLine: 681
  assemblies:
  - System.Globalization
  namespace: System.Globalization
  summary: "\n<p>Determines whether the specified date in the current era is a leap day.</p>\n"
  syntax:
    content: public virtual bool IsLeapDay(int year, int month, int day)
    content.vb: Public Overridable Function IsLeapDay(year As Integer, month As Integer, day As Integer) As Boolean
    parameters:
    - id: year
      type: System.Int32
      description: "\n<p>An integer that represents the year. </p>\n"
    - id: month
      type: System.Int32
      description: "\n<p>A positive integer that represents the month. </p>\n"
    - id: day
      type: System.Int32
      description: "\n<p>A positive integer that represents the day. </p>\n"
    return:
      type: System.Boolean
      description: "\n<p>\n<strong>true</strong> if the specified day is a leap day; otherwise, <strong>false</strong>.</p>\n"
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "\n<p>\n<em>year</em> is outside the range supported by the calendar.</p>\n<p>-or- </p>\n<p>\n<em>month</em> is outside the range supported by the calendar.</p>\n<p>-or- </p>\n<p>\n<em>day</em> is outside the range supported by the calendar. </p>\n"
  seealso:
  - linkId: System.Globalization.Calendar.GetMonthsInYear(System.Int32)
    commentId: M:System.Globalization.Calendar.GetMonthsInYear(System.Int32)
  - linkId: System.Globalization.Calendar.GetDaysInMonth(System.Int32,System.Int32)
    commentId: M:System.Globalization.Calendar.GetDaysInMonth(System.Int32,System.Int32)
  - linkId: System.Globalization.Calendar.IsLeapYear(System.Int32)
    commentId: M:System.Globalization.Calendar.IsLeapYear(System.Int32)
  - linkId: System.Globalization.Calendar.IsLeapMonth(System.Int32,System.Int32)
    commentId: M:System.Globalization.Calendar.IsLeapMonth(System.Int32,System.Int32)
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: System.Globalization.Calendar.IsLeapDay(System.Int32,System.Int32,System.Int32,System.Int32)
  commentId: M:System.Globalization.Calendar.IsLeapDay(System.Int32,System.Int32,System.Int32,System.Int32)
  id: IsLeapDay(System.Int32,System.Int32,System.Int32,System.Int32)
  parent: System.Globalization.Calendar
  langs:
  - csharp
  - vb
  name: IsLeapDay(Int32, Int32, Int32, Int32)
  nameWithType: Calendar.IsLeapDay(Int32, Int32, Int32, Int32)
  fullName: System.Globalization.Calendar.IsLeapDay(System.Int32, System.Int32, System.Int32, System.Int32)
  type: Method
  source:
    remote:
      path: src/mscorlib/src/System/Globalization/Calendar.cs
      branch: master
      repo: https://github.com/dotnet/coreclr.git
    id: IsLeapDay
    path: src/mscorlib/src/System/Globalization/Calendar.cs
    startLine: 690
  assemblies:
  - System.Globalization
  namespace: System.Globalization
  summary: "\n<p>When overridden in a derived class, determines whether the specified date in the specified era is a leap day.</p>\n"
  syntax:
    content: public abstract bool IsLeapDay(int year, int month, int day, int era)
    content.vb: Public MustOverride Function IsLeapDay(year As Integer, month As Integer, day As Integer, era As Integer) As Boolean
    parameters:
    - id: year
      type: System.Int32
      description: "\n<p>An integer that represents the year. </p>\n"
    - id: month
      type: System.Int32
      description: "\n<p>A positive integer that represents the month. </p>\n"
    - id: day
      type: System.Int32
      description: "\n<p>A positive integer that represents the day. </p>\n"
    - id: era
      type: System.Int32
      description: "\n<p>An integer that represents the era. </p>\n"
    return:
      type: System.Boolean
      description: "\n<p>\n<strong>true</strong> if the specified day is a leap day; otherwise, <strong>false</strong>.</p>\n"
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "\n<p>\n<em>year</em> is outside the range supported by the calendar.</p>\n<p>-or- </p>\n<p>\n<em>month</em> is outside the range supported by the calendar.</p>\n<p>-or- </p>\n<p>\n<em>day</em> is outside the range supported by the calendar.</p>\n<p>-or- </p>\n<p>\n<em>era</em> is outside the range supported by the calendar. </p>\n"
  seealso:
  - linkId: System.Globalization.Calendar.CurrentEra
    commentId: F:System.Globalization.Calendar.CurrentEra
  - linkId: System.Globalization.Calendar.Eras
    commentId: P:System.Globalization.Calendar.Eras
  - linkId: System.Globalization.Calendar.GetMonthsInYear(System.Int32)
    commentId: M:System.Globalization.Calendar.GetMonthsInYear(System.Int32)
  - linkId: System.Globalization.Calendar.GetDaysInMonth(System.Int32,System.Int32)
    commentId: M:System.Globalization.Calendar.GetDaysInMonth(System.Int32,System.Int32)
  - linkId: System.Globalization.Calendar.IsLeapYear(System.Int32)
    commentId: M:System.Globalization.Calendar.IsLeapYear(System.Int32)
  - linkId: System.Globalization.Calendar.IsLeapMonth(System.Int32,System.Int32)
    commentId: M:System.Globalization.Calendar.IsLeapMonth(System.Int32,System.Int32)
  modifiers.csharp:
  - public
  - abstract
  modifiers.vb:
  - Public
  - MustOverride
- uid: System.Globalization.Calendar.IsLeapMonth(System.Int32,System.Int32)
  commentId: M:System.Globalization.Calendar.IsLeapMonth(System.Int32,System.Int32)
  id: IsLeapMonth(System.Int32,System.Int32)
  parent: System.Globalization.Calendar
  langs:
  - csharp
  - vb
  name: IsLeapMonth(Int32, Int32)
  nameWithType: Calendar.IsLeapMonth(Int32, Int32)
  fullName: System.Globalization.Calendar.IsLeapMonth(System.Int32, System.Int32)
  type: Method
  source:
    remote:
      path: src/mscorlib/src/System/Globalization/Calendar.cs
      branch: master
      repo: https://github.com/dotnet/coreclr.git
    id: IsLeapMonth
    path: src/mscorlib/src/System/Globalization/Calendar.cs
    startLine: 696
  assemblies:
  - System.Globalization
  namespace: System.Globalization
  summary: "\n<p>Determines whether the specified month in the specified year in the current era is a leap month.</p>\n"
  syntax:
    content: public virtual bool IsLeapMonth(int year, int month)
    content.vb: Public Overridable Function IsLeapMonth(year As Integer, month As Integer) As Boolean
    parameters:
    - id: year
      type: System.Int32
      description: "\n<p>An integer that represents the year. </p>\n"
    - id: month
      type: System.Int32
      description: "\n<p>A positive integer that represents the month. </p>\n"
    return:
      type: System.Boolean
      description: "\n<p>\n<strong>true</strong> if the specified month is a leap month; otherwise, <strong>false</strong>.</p>\n"
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "\n<p>\n<em>year</em> is outside the range supported by the calendar.</p>\n<p>-or- </p>\n<p>\n<em>month</em> is outside the range supported by the calendar. </p>\n"
  seealso:
  - linkId: System.Globalization.Calendar.GetMonthsInYear(System.Int32)
    commentId: M:System.Globalization.Calendar.GetMonthsInYear(System.Int32)
  - linkId: System.Globalization.Calendar.IsLeapYear(System.Int32)
    commentId: M:System.Globalization.Calendar.IsLeapYear(System.Int32)
  - linkId: System.Globalization.Calendar.IsLeapDay(System.Int32,System.Int32,System.Int32)
    commentId: M:System.Globalization.Calendar.IsLeapDay(System.Int32,System.Int32,System.Int32)
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: System.Globalization.Calendar.IsLeapMonth(System.Int32,System.Int32,System.Int32)
  commentId: M:System.Globalization.Calendar.IsLeapMonth(System.Int32,System.Int32,System.Int32)
  id: IsLeapMonth(System.Int32,System.Int32,System.Int32)
  parent: System.Globalization.Calendar
  langs:
  - csharp
  - vb
  name: IsLeapMonth(Int32, Int32, Int32)
  nameWithType: Calendar.IsLeapMonth(Int32, Int32, Int32)
  fullName: System.Globalization.Calendar.IsLeapMonth(System.Int32, System.Int32, System.Int32)
  type: Method
  source:
    remote:
      path: src/mscorlib/src/System/Globalization/Calendar.cs
      branch: master
      repo: https://github.com/dotnet/coreclr.git
    id: IsLeapMonth
    path: src/mscorlib/src/System/Globalization/Calendar.cs
    startLine: 704
  assemblies:
  - System.Globalization
  namespace: System.Globalization
  summary: "\n<p>When overridden in a derived class, determines whether the specified month in the specified year in the specified era is a leap month.</p>\n"
  syntax:
    content: public abstract bool IsLeapMonth(int year, int month, int era)
    content.vb: Public MustOverride Function IsLeapMonth(year As Integer, month As Integer, era As Integer) As Boolean
    parameters:
    - id: year
      type: System.Int32
      description: "\n<p>An integer that represents the year. </p>\n"
    - id: month
      type: System.Int32
      description: "\n<p>A positive integer that represents the month. </p>\n"
    - id: era
      type: System.Int32
      description: "\n<p>An integer that represents the era. </p>\n"
    return:
      type: System.Boolean
      description: "\n<p>\n<strong>true</strong> if the specified month is a leap month; otherwise, <strong>false</strong>.</p>\n"
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "\n<p>\n<em>year</em> is outside the range supported by the calendar.</p>\n<p>-or- </p>\n<p>\n<em>month</em> is outside the range supported by the calendar.</p>\n<p>-or- </p>\n<p>\n<em>era</em> is outside the range supported by the calendar. </p>\n"
  seealso:
  - linkId: System.Globalization.Calendar.CurrentEra
    commentId: F:System.Globalization.Calendar.CurrentEra
  - linkId: System.Globalization.Calendar.Eras
    commentId: P:System.Globalization.Calendar.Eras
  - linkId: System.Globalization.Calendar.GetMonthsInYear(System.Int32)
    commentId: M:System.Globalization.Calendar.GetMonthsInYear(System.Int32)
  - linkId: System.Globalization.Calendar.IsLeapYear(System.Int32)
    commentId: M:System.Globalization.Calendar.IsLeapYear(System.Int32)
  - linkId: System.Globalization.Calendar.IsLeapDay(System.Int32,System.Int32,System.Int32)
    commentId: M:System.Globalization.Calendar.IsLeapDay(System.Int32,System.Int32,System.Int32)
  modifiers.csharp:
  - public
  - abstract
  modifiers.vb:
  - Public
  - MustOverride
- uid: System.Globalization.Calendar.IsLeapYear(System.Int32)
  commentId: M:System.Globalization.Calendar.IsLeapYear(System.Int32)
  id: IsLeapYear(System.Int32)
  parent: System.Globalization.Calendar
  langs:
  - csharp
  - vb
  name: IsLeapYear(Int32)
  nameWithType: Calendar.IsLeapYear(Int32)
  fullName: System.Globalization.Calendar.IsLeapYear(System.Int32)
  type: Method
  source:
    remote:
      path: src/mscorlib/src/System/Globalization/Calendar.cs
      branch: master
      repo: https://github.com/dotnet/coreclr.git
    id: IsLeapYear
    path: src/mscorlib/src/System/Globalization/Calendar.cs
    startLine: 740
  assemblies:
  - System.Globalization
  namespace: System.Globalization
  summary: "\n<p>Determines whether the specified year in the current era is a leap year.</p>\n"
  syntax:
    content: public virtual bool IsLeapYear(int year)
    content.vb: Public Overridable Function IsLeapYear(year As Integer) As Boolean
    parameters:
    - id: year
      type: System.Int32
      description: "\n<p>An integer that represents the year. </p>\n"
    return:
      type: System.Boolean
      description: "\n<p>\n<strong>true</strong> if the specified year is a leap year; otherwise, <strong>false</strong>.</p>\n"
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "\n<p>\n<em>year</em> is outside the range supported by the calendar. </p>\n"
  seealso:
  - linkId: System.Globalization.Calendar.IsLeapMonth(System.Int32,System.Int32)
    commentId: M:System.Globalization.Calendar.IsLeapMonth(System.Int32,System.Int32)
  - linkId: System.Globalization.Calendar.IsLeapDay(System.Int32,System.Int32,System.Int32)
    commentId: M:System.Globalization.Calendar.IsLeapDay(System.Int32,System.Int32,System.Int32)
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: System.Globalization.Calendar.IsLeapYear(System.Int32,System.Int32)
  commentId: M:System.Globalization.Calendar.IsLeapYear(System.Int32,System.Int32)
  id: IsLeapYear(System.Int32,System.Int32)
  parent: System.Globalization.Calendar
  langs:
  - csharp
  - vb
  name: IsLeapYear(Int32, Int32)
  nameWithType: Calendar.IsLeapYear(Int32, Int32)
  fullName: System.Globalization.Calendar.IsLeapYear(System.Int32, System.Int32)
  type: Method
  source:
    remote:
      path: src/mscorlib/src/System/Globalization/Calendar.cs
      branch: master
      repo: https://github.com/dotnet/coreclr.git
    id: IsLeapYear
    path: src/mscorlib/src/System/Globalization/Calendar.cs
    startLine: 749
  assemblies:
  - System.Globalization
  namespace: System.Globalization
  summary: "\n<p>When overridden in a derived class, determines whether the specified year in the specified era is a leap year.</p>\n"
  syntax:
    content: public abstract bool IsLeapYear(int year, int era)
    content.vb: Public MustOverride Function IsLeapYear(year As Integer, era As Integer) As Boolean
    parameters:
    - id: year
      type: System.Int32
      description: "\n<p>An integer that represents the year. </p>\n"
    - id: era
      type: System.Int32
      description: "\n<p>An integer that represents the era. </p>\n"
    return:
      type: System.Boolean
      description: "\n<p>\n<strong>true</strong> if the specified year is a leap year; otherwise, <strong>false</strong>.</p>\n"
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "\n<p>\n<em>year</em> is outside the range supported by the calendar.</p>\n<p>-or- </p>\n<p>\n<em>era</em> is outside the range supported by the calendar. </p>\n"
  seealso:
  - linkId: System.Globalization.Calendar.CurrentEra
    commentId: F:System.Globalization.Calendar.CurrentEra
  - linkId: System.Globalization.Calendar.Eras
    commentId: P:System.Globalization.Calendar.Eras
  - linkId: System.Globalization.Calendar.IsLeapMonth(System.Int32,System.Int32)
    commentId: M:System.Globalization.Calendar.IsLeapMonth(System.Int32,System.Int32)
  - linkId: System.Globalization.Calendar.IsLeapDay(System.Int32,System.Int32,System.Int32)
    commentId: M:System.Globalization.Calendar.IsLeapDay(System.Int32,System.Int32,System.Int32)
  modifiers.csharp:
  - public
  - abstract
  modifiers.vb:
  - Public
  - MustOverride
- uid: System.Globalization.Calendar.ToDateTime(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)
  commentId: M:System.Globalization.Calendar.ToDateTime(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)
  id: ToDateTime(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)
  parent: System.Globalization.Calendar
  langs:
  - csharp
  - vb
  name: ToDateTime(Int32, Int32, Int32, Int32, Int32, Int32, Int32)
  nameWithType: Calendar.ToDateTime(Int32, Int32, Int32, Int32, Int32, Int32, Int32)
  fullName: System.Globalization.Calendar.ToDateTime(System.Int32, System.Int32, System.Int32, System.Int32, System.Int32, System.Int32, System.Int32)
  type: Method
  source:
    remote:
      path: src/mscorlib/src/System/Globalization/Calendar.cs
      branch: master
      repo: https://github.com/dotnet/coreclr.git
    id: ToDateTime
    path: src/mscorlib/src/System/Globalization/Calendar.cs
    startLine: 754
  assemblies:
  - System.Globalization
  namespace: System.Globalization
  summary: "\n<p>Returns a <xref href=\"System.DateTime\" data-throw-if-not-resolved=\"false\"></xref> that is set to the specified date and time in the current era.</p>\n"
  syntax:
    content: public virtual DateTime ToDateTime(int year, int month, int day, int hour, int minute, int second, int millisecond)
    content.vb: Public Overridable Function ToDateTime(year As Integer, month As Integer, day As Integer, hour As Integer, minute As Integer, second As Integer, millisecond As Integer) As Date
    parameters:
    - id: year
      type: System.Int32
      description: "\n<p>An integer that represents the year. </p>\n"
    - id: month
      type: System.Int32
      description: "\n<p>A positive integer that represents the month. </p>\n"
    - id: day
      type: System.Int32
      description: "\n<p>A positive integer that represents the day. </p>\n"
    - id: hour
      type: System.Int32
      description: "\n<p>An integer from 0 to 23 that represents the hour. </p>\n"
    - id: minute
      type: System.Int32
      description: "\n<p>An integer from 0 to 59 that represents the minute. </p>\n"
    - id: second
      type: System.Int32
      description: "\n<p>An integer from 0 to 59 that represents the second. </p>\n"
    - id: millisecond
      type: System.Int32
      description: "\n<p>An integer from 0 to 999 that represents the millisecond. </p>\n"
    return:
      type: System.DateTime
      description: "\n<p>The <xref href=\"System.DateTime\" data-throw-if-not-resolved=\"false\"></xref> that is set to the specified date and time in the current era.</p>\n"
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "\n<p>\n<em>year</em> is outside the range supported by the calendar.</p>\n<p>-or- </p>\n<p>\n<em>month</em> is outside the range supported by the calendar.</p>\n<p>-or- </p>\n<p>\n<em>day</em> is outside the range supported by the calendar.</p>\n<p>-or- </p>\n<p>\n<em>hour</em> is less than zero or greater than 23.</p>\n<p>-or- </p>\n<p>\n<em>minute</em> is less than zero or greater than 59.</p>\n<p>-or- </p>\n<p>\n<em>second</em> is less than zero or greater than 59.</p>\n<p>-or- </p>\n<p>\n<em>millisecond</em> is less than zero or greater than 999. </p>\n"
  seealso:
  - linkId: System.DateTime
    commentId: T:System.DateTime
  - linkId: System.Globalization.Calendar.GetMonthsInYear(System.Int32)
    commentId: M:System.Globalization.Calendar.GetMonthsInYear(System.Int32)
  - linkId: System.Globalization.Calendar.GetDaysInMonth(System.Int32,System.Int32)
    commentId: M:System.Globalization.Calendar.GetDaysInMonth(System.Int32,System.Int32)
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: System.Globalization.Calendar.ToDateTime(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)
  commentId: M:System.Globalization.Calendar.ToDateTime(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)
  id: ToDateTime(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)
  parent: System.Globalization.Calendar
  langs:
  - csharp
  - vb
  name: ToDateTime(Int32, Int32, Int32, Int32, Int32, Int32, Int32, Int32)
  nameWithType: Calendar.ToDateTime(Int32, Int32, Int32, Int32, Int32, Int32, Int32, Int32)
  fullName: System.Globalization.Calendar.ToDateTime(System.Int32, System.Int32, System.Int32, System.Int32, System.Int32, System.Int32, System.Int32, System.Int32)
  type: Method
  source:
    remote:
      path: src/mscorlib/src/System/Globalization/Calendar.cs
      branch: master
      repo: https://github.com/dotnet/coreclr.git
    id: ToDateTime
    path: src/mscorlib/src/System/Globalization/Calendar.cs
    startLine: 762
  assemblies:
  - System.Globalization
  namespace: System.Globalization
  summary: "\n<p>When overridden in a derived class, returns a <xref href=\"System.DateTime\" data-throw-if-not-resolved=\"false\"></xref> that is set to the specified date and time in the specified era.</p>\n"
  syntax:
    content: public abstract DateTime ToDateTime(int year, int month, int day, int hour, int minute, int second, int millisecond, int era)
    content.vb: Public MustOverride Function ToDateTime(year As Integer, month As Integer, day As Integer, hour As Integer, minute As Integer, second As Integer, millisecond As Integer, era As Integer) As Date
    parameters:
    - id: year
      type: System.Int32
      description: "\n<p>An integer that represents the year. </p>\n"
    - id: month
      type: System.Int32
      description: "\n<p>A positive integer that represents the month. </p>\n"
    - id: day
      type: System.Int32
      description: "\n<p>A positive integer that represents the day. </p>\n"
    - id: hour
      type: System.Int32
      description: "\n<p>An integer from 0 to 23 that represents the hour. </p>\n"
    - id: minute
      type: System.Int32
      description: "\n<p>An integer from 0 to 59 that represents the minute. </p>\n"
    - id: second
      type: System.Int32
      description: "\n<p>An integer from 0 to 59 that represents the second. </p>\n"
    - id: millisecond
      type: System.Int32
      description: "\n<p>An integer from 0 to 999 that represents the millisecond. </p>\n"
    - id: era
      type: System.Int32
      description: "\n<p>An integer that represents the era. </p>\n"
    return:
      type: System.DateTime
      description: "\n<p>The <xref href=\"System.DateTime\" data-throw-if-not-resolved=\"false\"></xref> that is set to the specified date and time in the current era.</p>\n"
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "\n<p>\n<em>year</em> is outside the range supported by the calendar.</p>\n<p>-or- </p>\n<p>\n<em>month</em> is outside the range supported by the calendar.</p>\n<p>-or- </p>\n<p>\n<em>day</em> is outside the range supported by the calendar.</p>\n<p>-or- </p>\n<p>\n<em>hour</em> is less than zero or greater than 23.</p>\n<p>-or- </p>\n<p>\n<em>minute</em> is less than zero or greater than 59.</p>\n<p>-or- </p>\n<p>\n<em>second</em> is less than zero or greater than 59.</p>\n<p>-or- </p>\n<p>\n<em>millisecond</em> is less than zero or greater than 999.</p>\n<p>-or- </p>\n<p>\n<em>era</em> is outside the range supported by the calendar. </p>\n"
  seealso:
  - linkId: System.DateTime
    commentId: T:System.DateTime
  - linkId: System.Globalization.Calendar.CurrentEra
    commentId: F:System.Globalization.Calendar.CurrentEra
  - linkId: System.Globalization.Calendar.Eras
    commentId: P:System.Globalization.Calendar.Eras
  - linkId: System.Globalization.Calendar.GetMonthsInYear(System.Int32)
    commentId: M:System.Globalization.Calendar.GetMonthsInYear(System.Int32)
  - linkId: System.Globalization.Calendar.GetDaysInMonth(System.Int32,System.Int32)
    commentId: M:System.Globalization.Calendar.GetDaysInMonth(System.Int32,System.Int32)
  modifiers.csharp:
  - public
  - abstract
  modifiers.vb:
  - Public
  - MustOverride
- uid: System.Globalization.Calendar.ToFourDigitYear(System.Int32)
  commentId: M:System.Globalization.Calendar.ToFourDigitYear(System.Int32)
  id: ToFourDigitYear(System.Int32)
  parent: System.Globalization.Calendar
  langs:
  - csharp
  - vb
  name: ToFourDigitYear(Int32)
  nameWithType: Calendar.ToFourDigitYear(Int32)
  fullName: System.Globalization.Calendar.ToFourDigitYear(System.Int32)
  type: Method
  source:
    remote:
      path: src/mscorlib/src/System/Globalization/Calendar.cs
      branch: master
      repo: https://github.com/dotnet/coreclr.git
    id: ToFourDigitYear
    path: src/mscorlib/src/System/Globalization/Calendar.cs
    startLine: 815
  assemblies:
  - System.Globalization
  namespace: System.Globalization
  summary: "\n<p>Converts the specified year to a four-digit year by using the <xref href=\"System.Globalization.Calendar.TwoDigitYearMax\" data-throw-if-not-resolved=\"false\"></xref> property to determine the appropriate century.</p>\n"
  syntax:
    content: public virtual int ToFourDigitYear(int year)
    content.vb: Public Overridable Function ToFourDigitYear(year As Integer) As Integer
    parameters:
    - id: year
      type: System.Int32
      description: "\n<p>A two-digit or four-digit integer that represents the year to convert. </p>\n"
    return:
      type: System.Int32
      description: "\n<p>An integer that contains the four-digit representation of <em>year</em>.</p>\n"
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "\n<p>\n<em>year</em> is outside the range supported by the calendar. </p>\n"
  seealso:
  - linkId: System.Globalization.Calendar.TwoDigitYearMax
    commentId: P:System.Globalization.Calendar.TwoDigitYearMax
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
references:
- uid: System.Globalization
  commentId: N:System.Globalization
  isExternal: false
  name: System.Globalization
  nameWithType: System.Globalization
  fullName: System.Globalization
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: false
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: false
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Int32[]
  name: Int32[]
  nameWithType: Int32[]
  fullName: System.Int32[]
  nameWithType.vb: Int32()
  fullname.vb: System.Int32()
  name.vb: Int32()
  spec.csharp:
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  spec.vb:
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: false
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.DateTime
  commentId: T:System.DateTime
  parent: System
  isExternal: false
  name: DateTime
  nameWithType: DateTime
  fullName: System.DateTime
- uid: System.Double
  commentId: T:System.Double
  parent: System
  isExternal: false
  name: Double
  nameWithType: Double
  fullName: System.Double
- uid: System.DayOfWeek
  commentId: T:System.DayOfWeek
  parent: System
  isExternal: false
  name: DayOfWeek
  nameWithType: DayOfWeek
  fullName: System.DayOfWeek
- uid: System.Globalization.CalendarWeekRule
  commentId: T:System.Globalization.CalendarWeekRule
  parent: System.Globalization
  isExternal: false
  name: CalendarWeekRule
  nameWithType: CalendarWeekRule
  fullName: System.Globalization.CalendarWeekRule
- uid: System.InvalidOperationException
  commentId: T:System.InvalidOperationException
  parent: System
  isExternal: false
  name: InvalidOperationException
  nameWithType: InvalidOperationException
  fullName: System.InvalidOperationException
- uid: System.ArgumentException
  commentId: T:System.ArgumentException
  parent: System
  isExternal: false
  name: ArgumentException
  nameWithType: ArgumentException
  fullName: System.ArgumentException
- uid: System.ArgumentOutOfRangeException
  commentId: T:System.ArgumentOutOfRangeException
  isExternal: false
  name: ArgumentOutOfRangeException
  nameWithType: ArgumentOutOfRangeException
  fullName: System.ArgumentOutOfRangeException
