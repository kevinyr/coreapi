### YamlMime:ManagedReference
items:
- uid: System.ServiceModel.Description.MessagePartDescription
  commentId: T:System.ServiceModel.Description.MessagePartDescription
  id: MessagePartDescription
  parent: System.ServiceModel.Description
  children:
  - System.ServiceModel.Description.MessagePartDescription.#ctor(System.String,System.String)
  - System.ServiceModel.Description.MessagePartDescription.Index
  - System.ServiceModel.Description.MessagePartDescription.MemberInfo
  - System.ServiceModel.Description.MessagePartDescription.Multiple
  - System.ServiceModel.Description.MessagePartDescription.Name
  - System.ServiceModel.Description.MessagePartDescription.Namespace
  - System.ServiceModel.Description.MessagePartDescription.Type
  langs:
  - csharp
  - vb
  name: MessagePartDescription
  nameWithType: MessagePartDescription
  fullName: System.ServiceModel.Description.MessagePartDescription
  type: Class
  source:
    remote:
      path: src/System.ServiceModel.Primitives/ref/System.ServiceModel.Primitives.cs
      branch: master
      repo: https://github.com/dotnet/wcf.git
    id: MessagePartDescription
    path: src/System.ServiceModel.Primitives/ref/System.ServiceModel.Primitives.cs
    startLine: 1294
  assemblies:
  - System.ServiceModel.Primitives
  namespace: System.ServiceModel.Description
  summary: "\n<p>Represents a description of a SOAP message part.</p>\n"
  syntax:
    content: public class MessagePartDescription
    content.vb: Public Class MessagePartDescription
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: System.ServiceModel.Description.MessagePartDescription.#ctor(System.String,System.String)
  commentId: M:System.ServiceModel.Description.MessagePartDescription.#ctor(System.String,System.String)
  id: '#ctor(System.String,System.String)'
  parent: System.ServiceModel.Description.MessagePartDescription
  langs:
  - csharp
  - vb
  name: MessagePartDescription(String, String)
  nameWithType: MessagePartDescription.MessagePartDescription(String, String)
  fullName: System.ServiceModel.Description.MessagePartDescription.MessagePartDescription(System.String, System.String)
  type: Constructor
  source:
    remote:
      path: src/System.ServiceModel.Primitives/ref/System.ServiceModel.Primitives.cs
      branch: master
      repo: https://github.com/dotnet/wcf.git
    id: .ctor
    path: src/System.ServiceModel.Primitives/ref/System.ServiceModel.Primitives.cs
    startLine: 1296
  assemblies:
  - System.ServiceModel.Primitives
  namespace: System.ServiceModel.Description
  summary: "\n<p>Initializes a new instance of the <xref href=\"System.ServiceModel.Description.MessagePartDescription\" data-throw-if-not-resolved=\"false\"></xref> class.  </p>\n"
  syntax:
    content: public MessagePartDescription(string name, string ns)
    content.vb: Public Sub New(name As String, ns As String)
    parameters:
    - id: name
      type: System.String
      description: "\n<p>The XML name of the message part.</p>\n"
    - id: ns
      type: System.String
      description: "\n<p>The XML namespace of the message part.</p>\n"
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: System.ServiceModel.Description.MessagePartDescription.Index
  commentId: P:System.ServiceModel.Description.MessagePartDescription.Index
  id: Index
  parent: System.ServiceModel.Description.MessagePartDescription
  langs:
  - csharp
  - vb
  name: Index
  nameWithType: MessagePartDescription.Index
  fullName: System.ServiceModel.Description.MessagePartDescription.Index
  type: Property
  source:
    remote:
      path: src/System.ServiceModel.Primitives/ref/System.ServiceModel.Primitives.cs
      branch: master
      repo: https://github.com/dotnet/wcf.git
    id: Index
    path: src/System.ServiceModel.Primitives/ref/System.ServiceModel.Primitives.cs
    startLine: 1297
  assemblies:
  - System.ServiceModel.Primitives
  namespace: System.ServiceModel.Description
  summary: "\n<p>Gets or sets the index of the message part.</p>\n"
  syntax:
    content: public int Index { get; set; }
    content.vb: Public Property Index As Integer
    parameters: []
    return:
      type: System.Int32
      description: "\n<p>The index of the message part.</p>\n"
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: System.ServiceModel.Description.MessagePartDescription.MemberInfo
  commentId: P:System.ServiceModel.Description.MessagePartDescription.MemberInfo
  id: MemberInfo
  parent: System.ServiceModel.Description.MessagePartDescription
  langs:
  - csharp
  - vb
  name: MemberInfo
  nameWithType: MessagePartDescription.MemberInfo
  fullName: System.ServiceModel.Description.MessagePartDescription.MemberInfo
  type: Property
  source:
    remote:
      path: src/System.ServiceModel.Primitives/ref/System.ServiceModel.Primitives.cs
      branch: master
      repo: https://github.com/dotnet/wcf.git
    id: MemberInfo
    path: src/System.ServiceModel.Primitives/ref/System.ServiceModel.Primitives.cs
    startLine: 1298
  assemblies:
  - System.ServiceModel.Primitives
  namespace: System.ServiceModel.Description
  summary: "\n<p>Gets or sets the member information for the message part.</p>\n"
  syntax:
    content: public MemberInfo MemberInfo { get; set; }
    content.vb: Public Property MemberInfo As MemberInfo
    parameters: []
    return:
      type: System.Reflection.MemberInfo
      description: "\n<p>The member information for this message part.</p>\n"
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: System.ServiceModel.Description.MessagePartDescription.Multiple
  commentId: P:System.ServiceModel.Description.MessagePartDescription.Multiple
  id: Multiple
  parent: System.ServiceModel.Description.MessagePartDescription
  langs:
  - csharp
  - vb
  name: Multiple
  nameWithType: MessagePartDescription.Multiple
  fullName: System.ServiceModel.Description.MessagePartDescription.Multiple
  type: Property
  source:
    remote:
      path: src/System.ServiceModel.Primitives/ref/System.ServiceModel.Primitives.cs
      branch: master
      repo: https://github.com/dotnet/wcf.git
    id: Multiple
    path: src/System.ServiceModel.Primitives/ref/System.ServiceModel.Primitives.cs
    startLine: 1299
  assemblies:
  - System.ServiceModel.Primitives
  namespace: System.ServiceModel.Description
  summary: "\n<p>Gets or sets a value that controls whether the message part can occur more than once in the message.</p>\n"
  syntax:
    content: public bool Multiple { get; set; }
    content.vb: Public Property Multiple As Boolean
    parameters: []
    return:
      type: System.Boolean
      description: "\n<p>\n<strong>true</strong> if there can be more than one; otherwise, <strong>false</strong>.</p>\n"
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: System.ServiceModel.Description.MessagePartDescription.Name
  commentId: P:System.ServiceModel.Description.MessagePartDescription.Name
  id: Name
  parent: System.ServiceModel.Description.MessagePartDescription
  langs:
  - csharp
  - vb
  name: Name
  nameWithType: MessagePartDescription.Name
  fullName: System.ServiceModel.Description.MessagePartDescription.Name
  type: Property
  source:
    remote:
      path: src/System.ServiceModel.Primitives/ref/System.ServiceModel.Primitives.cs
      branch: master
      repo: https://github.com/dotnet/wcf.git
    id: Name
    path: src/System.ServiceModel.Primitives/ref/System.ServiceModel.Primitives.cs
    startLine: 1301
  assemblies:
  - System.ServiceModel.Primitives
  namespace: System.ServiceModel.Description
  summary: "\n<p>Gets or sets the name of the message part.</p>\n"
  syntax:
    content: public string Name { get; }
    content.vb: Public ReadOnly Property Name As String
    parameters: []
    return:
      type: System.String
      description: "\n<p>The name of the message part.</p>\n"
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: System.ServiceModel.Description.MessagePartDescription.Namespace
  commentId: P:System.ServiceModel.Description.MessagePartDescription.Namespace
  id: Namespace
  parent: System.ServiceModel.Description.MessagePartDescription
  langs:
  - csharp
  - vb
  name: Namespace
  nameWithType: MessagePartDescription.Namespace
  fullName: System.ServiceModel.Description.MessagePartDescription.Namespace
  type: Property
  source:
    remote:
      path: src/System.ServiceModel.Primitives/ref/System.ServiceModel.Primitives.cs
      branch: master
      repo: https://github.com/dotnet/wcf.git
    id: Namespace
    path: src/System.ServiceModel.Primitives/ref/System.ServiceModel.Primitives.cs
    startLine: 1302
  assemblies:
  - System.ServiceModel.Primitives
  namespace: System.ServiceModel.Description
  summary: "\n<p>Gets or sets the namespace of the message part.</p>\n"
  syntax:
    content: public string Namespace { get; }
    content.vb: Public ReadOnly Property Namespace As String
    parameters: []
    return:
      type: System.String
      description: "\n<p>The namespace of the message part.</p>\n"
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: System.ServiceModel.Description.MessagePartDescription.Type
  commentId: P:System.ServiceModel.Description.MessagePartDescription.Type
  id: Type
  parent: System.ServiceModel.Description.MessagePartDescription
  langs:
  - csharp
  - vb
  name: Type
  nameWithType: MessagePartDescription.Type
  fullName: System.ServiceModel.Description.MessagePartDescription.Type
  type: Property
  source:
    remote:
      path: src/System.ServiceModel.Primitives/ref/System.ServiceModel.Primitives.cs
      branch: master
      repo: https://github.com/dotnet/wcf.git
    id: Type
    path: src/System.ServiceModel.Primitives/ref/System.ServiceModel.Primitives.cs
    startLine: 1303
  assemblies:
  - System.ServiceModel.Primitives
  namespace: System.ServiceModel.Description
  summary: "\n<p>Gets or sets the type of the message part.</p>\n"
  syntax:
    content: public Type Type { get; set; }
    content.vb: Public Property Type As Type
    parameters: []
    return:
      type: System.Type
      description: "\n<p>The type of the message part.</p>\n"
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
references:
- uid: System.ServiceModel.Description
  commentId: N:System.ServiceModel.Description
  isExternal: false
  name: System.ServiceModel.Description
  nameWithType: System.ServiceModel.Description
  fullName: System.ServiceModel.Description
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: false
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: false
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: false
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Reflection.MemberInfo
  commentId: T:System.Reflection.MemberInfo
  parent: System.Reflection
  isExternal: false
  name: MemberInfo
  nameWithType: MemberInfo
  fullName: System.Reflection.MemberInfo
- uid: System.Reflection
  commentId: N:System.Reflection
  isExternal: false
  name: System.Reflection
  nameWithType: System.Reflection
  fullName: System.Reflection
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: false
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Type
  commentId: T:System.Type
  parent: System
  isExternal: false
  name: Type
  nameWithType: Type
  fullName: System.Type
