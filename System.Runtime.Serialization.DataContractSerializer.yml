### YamlMime:ManagedReference
items:
- uid: System.Runtime.Serialization.DataContractSerializer
  commentId: T:System.Runtime.Serialization.DataContractSerializer
  id: DataContractSerializer
  parent: System.Runtime.Serialization
  children:
  - System.Runtime.Serialization.DataContractSerializer.#ctor(System.Type)
  - System.Runtime.Serialization.DataContractSerializer.#ctor(System.Type,System.Collections.Generic.IEnumerable{System.Type})
  - System.Runtime.Serialization.DataContractSerializer.#ctor(System.Type,System.Runtime.Serialization.DataContractSerializerSettings)
  - System.Runtime.Serialization.DataContractSerializer.#ctor(System.Type,System.String,System.String)
  - System.Runtime.Serialization.DataContractSerializer.#ctor(System.Type,System.String,System.String,System.Collections.Generic.IEnumerable{System.Type})
  - System.Runtime.Serialization.DataContractSerializer.#ctor(System.Type,System.Xml.XmlDictionaryString,System.Xml.XmlDictionaryString)
  - System.Runtime.Serialization.DataContractSerializer.#ctor(System.Type,System.Xml.XmlDictionaryString,System.Xml.XmlDictionaryString,System.Collections.Generic.IEnumerable{System.Type})
  - System.Runtime.Serialization.DataContractSerializer.IgnoreExtensionDataObject
  - System.Runtime.Serialization.DataContractSerializer.IsStartObject(System.Xml.XmlDictionaryReader)
  - System.Runtime.Serialization.DataContractSerializer.IsStartObject(System.Xml.XmlReader)
  - System.Runtime.Serialization.DataContractSerializer.KnownTypes
  - System.Runtime.Serialization.DataContractSerializer.MaxItemsInObjectGraph
  - System.Runtime.Serialization.DataContractSerializer.PreserveObjectReferences
  - System.Runtime.Serialization.DataContractSerializer.ReadObject(System.Xml.XmlDictionaryReader,System.Boolean)
  - System.Runtime.Serialization.DataContractSerializer.ReadObject(System.Xml.XmlReader)
  - System.Runtime.Serialization.DataContractSerializer.ReadObject(System.Xml.XmlReader,System.Boolean)
  - System.Runtime.Serialization.DataContractSerializer.SerializeReadOnlyTypes
  - System.Runtime.Serialization.DataContractSerializer.WriteEndObject(System.Xml.XmlDictionaryWriter)
  - System.Runtime.Serialization.DataContractSerializer.WriteEndObject(System.Xml.XmlWriter)
  - System.Runtime.Serialization.DataContractSerializer.WriteObject(System.Xml.XmlWriter,System.Object)
  - System.Runtime.Serialization.DataContractSerializer.WriteObjectContent(System.Xml.XmlDictionaryWriter,System.Object)
  - System.Runtime.Serialization.DataContractSerializer.WriteObjectContent(System.Xml.XmlWriter,System.Object)
  - System.Runtime.Serialization.DataContractSerializer.WriteStartObject(System.Xml.XmlDictionaryWriter,System.Object)
  - System.Runtime.Serialization.DataContractSerializer.WriteStartObject(System.Xml.XmlWriter,System.Object)
  langs:
  - csharp
  - vb
  name: DataContractSerializer
  nameWithType: DataContractSerializer
  fullName: System.Runtime.Serialization.DataContractSerializer
  type: Class
  source:
    remote:
      path: src/System.Private.DataContractSerialization/src/System/Runtime/Serialization/DataContractSerializer.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: DataContractSerializer
    path: src/System.Private.DataContractSerialization/src/System/Runtime/Serialization/DataContractSerializer.cs
    startLine: 19
  assemblies:
  - System.Runtime.Serialization.Xml
  namespace: System.Runtime.Serialization
  summary: "\n<p>Serializes and deserializes an instance of a type into an XML stream or document using a supplied data contract. This class cannot be inherited. </p>\n"
  syntax:
    content: 'public sealed class DataContractSerializer : XmlObjectSerializer'
    content.vb: >-
      Public NotInheritable Class DataContractSerializer
          Inherits XmlObjectSerializer
  seealso:
  - linkId: System.Runtime.Serialization.DataMemberAttribute
    commentId: T:System.Runtime.Serialization.DataMemberAttribute
  - linkId: System.Runtime.Serialization.DataContractAttribute
    commentId: T:System.Runtime.Serialization.DataContractAttribute
  - linkId: System.Runtime.Serialization.IExtensibleDataObject
    commentId: T:System.Runtime.Serialization.IExtensibleDataObject
  - linkId: System.Runtime.Serialization.ExtensionDataObject
    commentId: T:System.Runtime.Serialization.ExtensionDataObject
  inheritance:
  - System.Object
  - System.Runtime.Serialization.XmlObjectSerializer
  inheritedMembers:
  - System.Runtime.Serialization.XmlObjectSerializer.ReadObject(System.IO.Stream)
  - System.Runtime.Serialization.XmlObjectSerializer.ReadObject(System.Xml.XmlDictionaryReader)
  - System.Runtime.Serialization.XmlObjectSerializer.WriteObject(System.IO.Stream,System.Object)
  - System.Runtime.Serialization.XmlObjectSerializer.WriteObject(System.Xml.XmlDictionaryWriter,System.Object)
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  extensionMethods:
  - System.Runtime.Serialization.DataContractSerializer.System.Runtime.Serialization.DataContractSerializerExtensions.GetSerializationSurrogateProvider
  - System.Runtime.Serialization.DataContractSerializer.System.Runtime.Serialization.DataContractSerializerExtensions.SetSerializationSurrogateProvider(System.Runtime.Serialization.ISerializationSurrogateProvider)
  modifiers.csharp:
  - public
  - sealed
  - class
  modifiers.vb:
  - Public
  - NotInheritable
  - Class
- uid: System.Runtime.Serialization.DataContractSerializer.#ctor(System.Type)
  commentId: M:System.Runtime.Serialization.DataContractSerializer.#ctor(System.Type)
  id: '#ctor(System.Type)'
  parent: System.Runtime.Serialization.DataContractSerializer
  langs:
  - csharp
  - vb
  name: DataContractSerializer(Type)
  nameWithType: DataContractSerializer.DataContractSerializer(Type)
  fullName: System.Runtime.Serialization.DataContractSerializer.DataContractSerializer(System.Type)
  type: Constructor
  source:
    remote:
      path: src/System.Private.DataContractSerialization/src/System/Runtime/Serialization/DataContractSerializer.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: .ctor
    path: src/System.Private.DataContractSerialization/src/System/Runtime/Serialization/DataContractSerializer.cs
    startLine: 36
  assemblies:
  - System.Runtime.Serialization.Xml
  namespace: System.Runtime.Serialization
  summary: "\n<p>Initializes a new instance of the <xref href=\"System.Runtime.Serialization.DataContractSerializer\" data-throw-if-not-resolved=\"false\"></xref> class to serialize or deserialize an object of the specified type.</p>\n"
  syntax:
    content: public DataContractSerializer(Type type)
    content.vb: Public Sub New(type As Type)
    parameters:
    - id: type
      type: System.Type
      description: "\n<p>The type of the instances that are serialized or deserialized.</p>\n"
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: System.Runtime.Serialization.DataContractSerializer.#ctor(System.Type,System.Collections.Generic.IEnumerable{System.Type})
  commentId: M:System.Runtime.Serialization.DataContractSerializer.#ctor(System.Type,System.Collections.Generic.IEnumerable{System.Type})
  id: '#ctor(System.Type,System.Collections.Generic.IEnumerable{System.Type})'
  parent: System.Runtime.Serialization.DataContractSerializer
  langs:
  - csharp
  - vb
  name: DataContractSerializer(Type, IEnumerable<Type>)
  nameWithType: DataContractSerializer.DataContractSerializer(Type, IEnumerable<Type>)
  fullName: System.Runtime.Serialization.DataContractSerializer.DataContractSerializer(System.Type, System.Collections.Generic.IEnumerable<System.Type>)
  type: Constructor
  source:
    remote:
      path: src/System.Private.DataContractSerialization/src/System/Runtime/Serialization/DataContractSerializer.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: .ctor
    path: src/System.Private.DataContractSerialization/src/System/Runtime/Serialization/DataContractSerializer.cs
    startLine: 41
  assemblies:
  - System.Runtime.Serialization.Xml
  namespace: System.Runtime.Serialization
  summary: "\n<p>Initializes a new instance of the <xref href=\"System.Runtime.Serialization.DataContractSerializer\" data-throw-if-not-resolved=\"false\"></xref> class to serialize or deserialize an object of the specified type, and a collection of known types that may be present in the object graph.</p>\n"
  syntax:
    content: public DataContractSerializer(Type type, IEnumerable<Type> knownTypes)
    content.vb: Public Sub New(type As Type, knownTypes As IEnumerable(Of Type))
    parameters:
    - id: type
      type: System.Type
      description: "\n<p>The type of the instances that are serialized or deserialized.</p>\n"
    - id: knownTypes
      type: System.Collections.Generic.IEnumerable{System.Type}
      description: "\n<p>An <xref href=\"System.Collections.Generic.IEnumerable`1\" data-throw-if-not-resolved=\"false\"></xref>  of <xref href=\"System.Type\" data-throw-if-not-resolved=\"false\"></xref> that contains the types that may be present in the object graph.</p>\n"
  seealso:
  - linkId: System.Runtime.Serialization.DataContractSerializer.KnownTypes
    commentId: P:System.Runtime.Serialization.DataContractSerializer.KnownTypes
  - linkId: System.Runtime.Serialization.KnownTypeAttribute
    commentId: T:System.Runtime.Serialization.KnownTypeAttribute
  nameWithType.vb: DataContractSerializer.DataContractSerializer(Type, IEnumerable(Of Type))
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: System.Runtime.Serialization.DataContractSerializer.DataContractSerializer(System.Type, System.Collections.Generic.IEnumerable(Of System.Type))
  name.vb: DataContractSerializer(Type, IEnumerable(Of Type))
- uid: System.Runtime.Serialization.DataContractSerializer.#ctor(System.Type,System.Runtime.Serialization.DataContractSerializerSettings)
  commentId: M:System.Runtime.Serialization.DataContractSerializer.#ctor(System.Type,System.Runtime.Serialization.DataContractSerializerSettings)
  id: '#ctor(System.Type,System.Runtime.Serialization.DataContractSerializerSettings)'
  parent: System.Runtime.Serialization.DataContractSerializer
  langs:
  - csharp
  - vb
  name: DataContractSerializer(Type, DataContractSerializerSettings)
  nameWithType: DataContractSerializer.DataContractSerializer(Type, DataContractSerializerSettings)
  fullName: System.Runtime.Serialization.DataContractSerializer.DataContractSerializer(System.Type, System.Runtime.Serialization.DataContractSerializerSettings)
  type: Constructor
  source:
    remote:
      path: src/System.Private.DataContractSerialization/src/System/Runtime/Serialization/DataContractSerializer.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: .ctor
    path: src/System.Private.DataContractSerialization/src/System/Runtime/Serialization/DataContractSerializer.cs
    startLine: 88
  assemblies:
  - System.Runtime.Serialization.Xml
  namespace: System.Runtime.Serialization
  summary: "\n<p>Initializes a new instance of the <xref href=\"System.Runtime.Serialization.DataContractSerializer\" data-throw-if-not-resolved=\"false\"></xref> class to serialize or deserialize an object of the specified type and settings.</p>\n"
  syntax:
    content: public DataContractSerializer(Type type, DataContractSerializerSettings settings)
    content.vb: Public Sub New(type As Type, settings As DataContractSerializerSettings)
    parameters:
    - id: type
      type: System.Type
      description: "\n<p>The type of the instance to serialize or deserialize.</p>\n"
    - id: settings
      type: System.Runtime.Serialization.DataContractSerializerSettings
      description: "\n<p>The serializer settings.</p>\n"
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: System.Runtime.Serialization.DataContractSerializer.#ctor(System.Type,System.String,System.String)
  commentId: M:System.Runtime.Serialization.DataContractSerializer.#ctor(System.Type,System.String,System.String)
  id: '#ctor(System.Type,System.String,System.String)'
  parent: System.Runtime.Serialization.DataContractSerializer
  langs:
  - csharp
  - vb
  name: DataContractSerializer(Type, String, String)
  nameWithType: DataContractSerializer.DataContractSerializer(Type, String, String)
  fullName: System.Runtime.Serialization.DataContractSerializer.DataContractSerializer(System.Type, System.String, System.String)
  type: Constructor
  source:
    remote:
      path: src/System.Private.DataContractSerialization/src/System/Runtime/Serialization/DataContractSerializer.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: .ctor
    path: src/System.Private.DataContractSerialization/src/System/Runtime/Serialization/DataContractSerializer.cs
    startLine: 47
  assemblies:
  - System.Runtime.Serialization.Xml
  namespace: System.Runtime.Serialization
  summary: "\n<p>Initializes a new instance of the <xref href=\"System.Runtime.Serialization.DataContractSerializer\" data-throw-if-not-resolved=\"false\"></xref> class to serialize or deserialize an object of the specified type using the supplied XML root element and namespace.</p>\n"
  syntax:
    content: public DataContractSerializer(Type type, string rootName, string rootNamespace)
    content.vb: Public Sub New(type As Type, rootName As String, rootNamespace As String)
    parameters:
    - id: type
      type: System.Type
      description: "\n<p>The type of the instances that are serialized or deserialized.</p>\n"
    - id: rootName
      type: System.String
      description: "\n<p>The name of the XML element that encloses the content to serialize or deserialize.</p>\n"
    - id: rootNamespace
      type: System.String
      description: "\n<p>The namespace of the XML element that encloses the content to serialize or deserialize.</p>\n"
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: System.Runtime.Serialization.DataContractSerializer.#ctor(System.Type,System.String,System.String,System.Collections.Generic.IEnumerable{System.Type})
  commentId: M:System.Runtime.Serialization.DataContractSerializer.#ctor(System.Type,System.String,System.String,System.Collections.Generic.IEnumerable{System.Type})
  id: '#ctor(System.Type,System.String,System.String,System.Collections.Generic.IEnumerable{System.Type})'
  parent: System.Runtime.Serialization.DataContractSerializer
  langs:
  - csharp
  - vb
  name: DataContractSerializer(Type, String, String, IEnumerable<Type>)
  nameWithType: DataContractSerializer.DataContractSerializer(Type, String, String, IEnumerable<Type>)
  fullName: System.Runtime.Serialization.DataContractSerializer.DataContractSerializer(System.Type, System.String, System.String, System.Collections.Generic.IEnumerable<System.Type>)
  type: Constructor
  source:
    remote:
      path: src/System.Private.DataContractSerialization/src/System/Runtime/Serialization/DataContractSerializer.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: .ctor
    path: src/System.Private.DataContractSerialization/src/System/Runtime/Serialization/DataContractSerializer.cs
    startLine: 52
  assemblies:
  - System.Runtime.Serialization.Xml
  namespace: System.Runtime.Serialization
  summary: "\n<p>Initializes a new instance of the <xref href=\"System.Runtime.Serialization.DataContractSerializer\" data-throw-if-not-resolved=\"false\"></xref> class to serialize or deserialize an object of the specified type. This method also specifies the root XML element and namespace in two string parameters as well as a list of known types that may be present in the object graph.</p>\n"
  syntax:
    content: public DataContractSerializer(Type type, string rootName, string rootNamespace, IEnumerable<Type> knownTypes)
    content.vb: Public Sub New(type As Type, rootName As String, rootNamespace As String, knownTypes As IEnumerable(Of Type))
    parameters:
    - id: type
      type: System.Type
      description: "\n<p>The type of the instances that are serialized or deserialized.</p>\n"
    - id: rootName
      type: System.String
      description: "\n<p>The root element name of the content.</p>\n"
    - id: rootNamespace
      type: System.String
      description: "\n<p>The namespace of the root element.</p>\n"
    - id: knownTypes
      type: System.Collections.Generic.IEnumerable{System.Type}
      description: "\n<p>An <xref href=\"System.Collections.Generic.IEnumerable`1\" data-throw-if-not-resolved=\"false\"></xref>  of <xref href=\"System.Type\" data-throw-if-not-resolved=\"false\"></xref> that contains the types that may be present in the object graph.</p>\n"
  seealso:
  - linkId: System.Runtime.Serialization.DataContractSerializer.KnownTypes
    commentId: P:System.Runtime.Serialization.DataContractSerializer.KnownTypes
  - linkId: System.Runtime.Serialization.KnownTypeAttribute
    commentId: T:System.Runtime.Serialization.KnownTypeAttribute
  nameWithType.vb: DataContractSerializer.DataContractSerializer(Type, String, String, IEnumerable(Of Type))
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: System.Runtime.Serialization.DataContractSerializer.DataContractSerializer(System.Type, System.String, System.String, System.Collections.Generic.IEnumerable(Of System.Type))
  name.vb: DataContractSerializer(Type, String, String, IEnumerable(Of Type))
- uid: System.Runtime.Serialization.DataContractSerializer.#ctor(System.Type,System.Xml.XmlDictionaryString,System.Xml.XmlDictionaryString)
  commentId: M:System.Runtime.Serialization.DataContractSerializer.#ctor(System.Type,System.Xml.XmlDictionaryString,System.Xml.XmlDictionaryString)
  id: '#ctor(System.Type,System.Xml.XmlDictionaryString,System.Xml.XmlDictionaryString)'
  parent: System.Runtime.Serialization.DataContractSerializer
  langs:
  - csharp
  - vb
  name: DataContractSerializer(Type, XmlDictionaryString, XmlDictionaryString)
  nameWithType: DataContractSerializer.DataContractSerializer(Type, XmlDictionaryString, XmlDictionaryString)
  fullName: System.Runtime.Serialization.DataContractSerializer.DataContractSerializer(System.Type, System.Xml.XmlDictionaryString, System.Xml.XmlDictionaryString)
  type: Constructor
  source:
    remote:
      path: src/System.Private.DataContractSerialization/src/System/Runtime/Serialization/DataContractSerializer.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: .ctor
    path: src/System.Private.DataContractSerialization/src/System/Runtime/Serialization/DataContractSerializer.cs
    startLine: 59
  assemblies:
  - System.Runtime.Serialization.Xml
  namespace: System.Runtime.Serialization
  summary: "\n<p>Initializes a new instance of the <xref href=\"System.Runtime.Serialization.DataContractSerializer\" data-throw-if-not-resolved=\"false\"></xref> class to serialize or deserialize an object of the specified type using the XML root element and namespace specified through the parameters of type <xref href=\"System.Xml.XmlDictionaryString\" data-throw-if-not-resolved=\"false\"></xref>.</p>\n"
  syntax:
    content: public DataContractSerializer(Type type, XmlDictionaryString rootName, XmlDictionaryString rootNamespace)
    content.vb: Public Sub New(type As Type, rootName As XmlDictionaryString, rootNamespace As XmlDictionaryString)
    parameters:
    - id: type
      type: System.Type
      description: "\n<p>The type of the instances that are serialized or deserialized.</p>\n"
    - id: rootName
      type: System.Xml.XmlDictionaryString
      description: "\n<p>An <xref href=\"System.Xml.XmlDictionaryString\" data-throw-if-not-resolved=\"false\"></xref> that contains the root element name of the content.</p>\n"
    - id: rootNamespace
      type: System.Xml.XmlDictionaryString
      description: "\n<p>An <xref href=\"System.Xml.XmlDictionaryString\" data-throw-if-not-resolved=\"false\"></xref> that contains the namespace of the root element.</p>\n"
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: System.Runtime.Serialization.DataContractSerializer.#ctor(System.Type,System.Xml.XmlDictionaryString,System.Xml.XmlDictionaryString,System.Collections.Generic.IEnumerable{System.Type})
  commentId: M:System.Runtime.Serialization.DataContractSerializer.#ctor(System.Type,System.Xml.XmlDictionaryString,System.Xml.XmlDictionaryString,System.Collections.Generic.IEnumerable{System.Type})
  id: '#ctor(System.Type,System.Xml.XmlDictionaryString,System.Xml.XmlDictionaryString,System.Collections.Generic.IEnumerable{System.Type})'
  parent: System.Runtime.Serialization.DataContractSerializer
  langs:
  - csharp
  - vb
  name: DataContractSerializer(Type, XmlDictionaryString, XmlDictionaryString, IEnumerable<Type>)
  nameWithType: DataContractSerializer.DataContractSerializer(Type, XmlDictionaryString, XmlDictionaryString, IEnumerable<Type>)
  fullName: System.Runtime.Serialization.DataContractSerializer.DataContractSerializer(System.Type, System.Xml.XmlDictionaryString, System.Xml.XmlDictionaryString, System.Collections.Generic.IEnumerable<System.Type>)
  type: Constructor
  source:
    remote:
      path: src/System.Private.DataContractSerialization/src/System/Runtime/Serialization/DataContractSerializer.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: .ctor
    path: src/System.Private.DataContractSerialization/src/System/Runtime/Serialization/DataContractSerializer.cs
    startLine: 64
  assemblies:
  - System.Runtime.Serialization.Xml
  namespace: System.Runtime.Serialization
  summary: "\n<p>Initializes a new instance of the <xref href=\"System.Runtime.Serialization.DataContractSerializer\" data-throw-if-not-resolved=\"false\"></xref> class to serialize or deserialize an object of the specified type. This method also specifies the root XML element and namespace in two <xref href=\"System.Xml.XmlDictionaryString\" data-throw-if-not-resolved=\"false\"></xref> parameters as well as a list of known types that may be present in the object graph.</p>\n"
  syntax:
    content: public DataContractSerializer(Type type, XmlDictionaryString rootName, XmlDictionaryString rootNamespace, IEnumerable<Type> knownTypes)
    content.vb: Public Sub New(type As Type, rootName As XmlDictionaryString, rootNamespace As XmlDictionaryString, knownTypes As IEnumerable(Of Type))
    parameters:
    - id: type
      type: System.Type
      description: "\n<p>The type of the instances that are serialized or deserialized.</p>\n"
    - id: rootName
      type: System.Xml.XmlDictionaryString
      description: "\n<p>An <xref href=\"System.Xml.XmlDictionaryString\" data-throw-if-not-resolved=\"false\"></xref> that contains the root element name of the content.</p>\n"
    - id: rootNamespace
      type: System.Xml.XmlDictionaryString
      description: "\n<p>An <xref href=\"System.Xml.XmlDictionaryString\" data-throw-if-not-resolved=\"false\"></xref> that contains the namespace of the root element.</p>\n"
    - id: knownTypes
      type: System.Collections.Generic.IEnumerable{System.Type}
      description: "\n<p>A <xref href=\"System.Collections.Generic.IEnumerable`1\" data-throw-if-not-resolved=\"false\"></xref> of <xref href=\"System.Type\" data-throw-if-not-resolved=\"false\"></xref> that contains the known types that may be present in the object graph.</p>\n"
  seealso:
  - linkId: System.Runtime.Serialization.DataContractSerializer.KnownTypes
    commentId: P:System.Runtime.Serialization.DataContractSerializer.KnownTypes
  - linkId: System.Runtime.Serialization.KnownTypeAttribute
    commentId: T:System.Runtime.Serialization.KnownTypeAttribute
  nameWithType.vb: DataContractSerializer.DataContractSerializer(Type, XmlDictionaryString, XmlDictionaryString, IEnumerable(Of Type))
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: System.Runtime.Serialization.DataContractSerializer.DataContractSerializer(System.Type, System.Xml.XmlDictionaryString, System.Xml.XmlDictionaryString, System.Collections.Generic.IEnumerable(Of System.Type))
  name.vb: DataContractSerializer(Type, XmlDictionaryString, XmlDictionaryString, IEnumerable(Of Type))
- uid: System.Runtime.Serialization.DataContractSerializer.IgnoreExtensionDataObject
  commentId: P:System.Runtime.Serialization.DataContractSerializer.IgnoreExtensionDataObject
  id: IgnoreExtensionDataObject
  parent: System.Runtime.Serialization.DataContractSerializer
  langs:
  - csharp
  - vb
  name: IgnoreExtensionDataObject
  nameWithType: DataContractSerializer.IgnoreExtensionDataObject
  fullName: System.Runtime.Serialization.DataContractSerializer.IgnoreExtensionDataObject
  type: Property
  source:
    remote:
      path: src/System.Private.DataContractSerialization/src/System/Runtime/Serialization/DataContractSerializer.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: IgnoreExtensionDataObject
    path: src/System.Private.DataContractSerialization/src/System/Runtime/Serialization/DataContractSerializer.cs
    startLine: 194
  assemblies:
  - System.Runtime.Serialization.Xml
  namespace: System.Runtime.Serialization
  summary: "\n<p>Gets a value that specifies whether to ignore data supplied by an extension of the class when the class is being serialized or deserialized.</p>\n"
  syntax:
    content: public bool IgnoreExtensionDataObject { get; }
    content.vb: Public ReadOnly Property IgnoreExtensionDataObject As Boolean
    parameters: []
    return:
      type: System.Boolean
      description: "\n<p>\n<strong>true</strong> to omit the extension data; otherwise, <strong>false</strong>.</p>\n"
  seealso:
  - linkId: System.Runtime.Serialization.DataContractSerializer.IgnoreExtensionDataObject
    commentId: P:System.Runtime.Serialization.DataContractSerializer.IgnoreExtensionDataObject
  - linkId: System.Runtime.Serialization.DataContractAttribute
    commentId: T:System.Runtime.Serialization.DataContractAttribute
  - linkId: System.Runtime.Serialization.IExtensibleDataObject
    commentId: T:System.Runtime.Serialization.IExtensibleDataObject
  - linkId: System.Runtime.Serialization.ExtensionDataObject
    commentId: T:System.Runtime.Serialization.ExtensionDataObject
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: System.Runtime.Serialization.DataContractSerializer.KnownTypes
  commentId: P:System.Runtime.Serialization.DataContractSerializer.KnownTypes
  id: KnownTypes
  parent: System.Runtime.Serialization.DataContractSerializer
  langs:
  - csharp
  - vb
  name: KnownTypes
  nameWithType: DataContractSerializer.KnownTypes
  fullName: System.Runtime.Serialization.DataContractSerializer.KnownTypes
  type: Property
  source:
    remote:
      path: src/System.Private.DataContractSerialization/src/System/Runtime/Serialization/DataContractSerializer.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: KnownTypes
    path: src/System.Private.DataContractSerialization/src/System/Runtime/Serialization/DataContractSerializer.cs
    startLine: 143
  assemblies:
  - System.Runtime.Serialization.Xml
  namespace: System.Runtime.Serialization
  summary: "\n<p>Gets a collection of types that may be present in the object graph serialized using this instance of the <xref href=\"System.Runtime.Serialization.DataContractSerializer\" data-throw-if-not-resolved=\"false\"></xref>.</p>\n"
  syntax:
    content: public ReadOnlyCollection<Type> KnownTypes { get; }
    content.vb: Public ReadOnly Property KnownTypes As ReadOnlyCollection(Of Type)
    parameters: []
    return:
      type: System.Collections.ObjectModel.ReadOnlyCollection{System.Type}
      description: "\n<p>A <xref href=\"System.Collections.ObjectModel.ReadOnlyCollection`1\" data-throw-if-not-resolved=\"false\"></xref> that contains the expected types passed in as known types to the <xref href=\"System.Runtime.Serialization.DataContractSerializer\" data-throw-if-not-resolved=\"false\"></xref> constructor.</p>\n"
  seealso:
  - linkId: System.Runtime.Serialization.KnownTypeAttribute
    commentId: T:System.Runtime.Serialization.KnownTypeAttribute
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: System.Runtime.Serialization.DataContractSerializer.MaxItemsInObjectGraph
  commentId: P:System.Runtime.Serialization.DataContractSerializer.MaxItemsInObjectGraph
  id: MaxItemsInObjectGraph
  parent: System.Runtime.Serialization.DataContractSerializer
  langs:
  - csharp
  - vb
  name: MaxItemsInObjectGraph
  nameWithType: DataContractSerializer.MaxItemsInObjectGraph
  fullName: System.Runtime.Serialization.DataContractSerializer.MaxItemsInObjectGraph
  type: Property
  source:
    remote:
      path: src/System.Private.DataContractSerialization/src/System/Runtime/Serialization/DataContractSerializer.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: MaxItemsInObjectGraph
    path: src/System.Private.DataContractSerialization/src/System/Runtime/Serialization/DataContractSerializer.cs
    startLine: 178
  assemblies:
  - System.Runtime.Serialization.Xml
  namespace: System.Runtime.Serialization
  summary: "\n<p>Gets the maximum number of items in an object graph to serialize or deserialize.</p>\n"
  syntax:
    content: public int MaxItemsInObjectGraph { get; }
    content.vb: Public ReadOnly Property MaxItemsInObjectGraph As Integer
    parameters: []
    return:
      type: System.Int32
      description: "\n<p>The maximum number of items to serialize or deserialize. The default is <xref href=\"System.Int32.MaxValue\" data-throw-if-not-resolved=\"false\"></xref>.</p>\n"
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "\n<p>The number of items exceeds the maximum value.</p>\n"
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: System.Runtime.Serialization.DataContractSerializer.PreserveObjectReferences
  commentId: P:System.Runtime.Serialization.DataContractSerializer.PreserveObjectReferences
  id: PreserveObjectReferences
  parent: System.Runtime.Serialization.DataContractSerializer
  langs:
  - csharp
  - vb
  name: PreserveObjectReferences
  nameWithType: DataContractSerializer.PreserveObjectReferences
  fullName: System.Runtime.Serialization.DataContractSerializer.PreserveObjectReferences
  type: Property
  source:
    remote:
      path: src/System.Private.DataContractSerialization/src/System/Runtime/Serialization/DataContractSerializer.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: PreserveObjectReferences
    path: src/System.Private.DataContractSerialization/src/System/Runtime/Serialization/DataContractSerializer.cs
    startLine: 189
  assemblies:
  - System.Runtime.Serialization.Xml
  namespace: System.Runtime.Serialization
  summary: "\n<p>Gets a value that specifies whether to use non-standard XML constructs to preserve object reference data. </p>\n"
  syntax:
    content: public bool PreserveObjectReferences { get; }
    content.vb: Public ReadOnly Property PreserveObjectReferences As Boolean
    parameters: []
    return:
      type: System.Boolean
      description: "\n<p>\n<strong>true</strong> to keep the references; otherwise, <strong>false</strong>.</p>\n"
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: System.Runtime.Serialization.DataContractSerializer.SerializeReadOnlyTypes
  commentId: P:System.Runtime.Serialization.DataContractSerializer.SerializeReadOnlyTypes
  id: SerializeReadOnlyTypes
  parent: System.Runtime.Serialization.DataContractSerializer
  langs:
  - csharp
  - vb
  name: SerializeReadOnlyTypes
  nameWithType: DataContractSerializer.SerializeReadOnlyTypes
  fullName: System.Runtime.Serialization.DataContractSerializer.SerializeReadOnlyTypes
  type: Property
  source:
    remote:
      path: src/System.Private.DataContractSerialization/src/System/Runtime/Serialization/DataContractSerializer.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: SerializeReadOnlyTypes
    path: src/System.Private.DataContractSerialization/src/System/Runtime/Serialization/DataContractSerializer.cs
    startLine: 204
  assemblies:
  - System.Runtime.Serialization.Xml
  namespace: System.Runtime.Serialization
  summary: "\n<p>Gets a value that specifies whether read-only types are serialized.</p>\n"
  syntax:
    content: public bool SerializeReadOnlyTypes { get; }
    content.vb: Public ReadOnly Property SerializeReadOnlyTypes As Boolean
    parameters: []
    return:
      type: System.Boolean
      description: "\n<p>\n<strong>true</strong> if read-only types are serialized; <strong>false</strong> if all types are serialized.</p>\n"
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: System.Runtime.Serialization.DataContractSerializer.IsStartObject(System.Xml.XmlDictionaryReader)
  commentId: M:System.Runtime.Serialization.DataContractSerializer.IsStartObject(System.Xml.XmlDictionaryReader)
  id: IsStartObject(System.Xml.XmlDictionaryReader)
  parent: System.Runtime.Serialization.DataContractSerializer
  langs:
  - csharp
  - vb
  name: IsStartObject(XmlDictionaryReader)
  nameWithType: DataContractSerializer.IsStartObject(XmlDictionaryReader)
  fullName: System.Runtime.Serialization.DataContractSerializer.IsStartObject(System.Xml.XmlDictionaryReader)
  type: Method
  source:
    remote:
      path: src/System.Private.DataContractSerialization/src/System/Runtime/Serialization/DataContractSerializer.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: IsStartObject
    path: src/System.Private.DataContractSerialization/src/System/Runtime/Serialization/DataContractSerializer.cs
    startLine: 289
  assemblies:
  - System.Runtime.Serialization.Xml
  namespace: System.Runtime.Serialization
  summary: "\n<p>Determines whether the <xref href=\"System.Xml.XmlDictionaryReader\" data-throw-if-not-resolved=\"false\"></xref> is positioned on an object that can be deserialized.</p>\n"
  syntax:
    content: public override bool IsStartObject(XmlDictionaryReader reader)
    content.vb: Public Overrides Function IsStartObject(reader As XmlDictionaryReader) As Boolean
    parameters:
    - id: reader
      type: System.Xml.XmlDictionaryReader
      description: "\n<p>An <xref href=\"System.Xml.XmlDictionaryReader\" data-throw-if-not-resolved=\"false\"></xref> used to read the XML stream.</p>\n"
    return:
      type: System.Boolean
      description: "\n<p>\n<strong>true</strong> if the reader is at the start element of the stream to read; otherwise, <strong>false</strong>.</p>\n"
  overridden: System.Runtime.Serialization.XmlObjectSerializer.IsStartObject(System.Xml.XmlDictionaryReader)
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
- uid: System.Runtime.Serialization.DataContractSerializer.IsStartObject(System.Xml.XmlReader)
  commentId: M:System.Runtime.Serialization.DataContractSerializer.IsStartObject(System.Xml.XmlReader)
  id: IsStartObject(System.Xml.XmlReader)
  parent: System.Runtime.Serialization.DataContractSerializer
  langs:
  - csharp
  - vb
  name: IsStartObject(XmlReader)
  nameWithType: DataContractSerializer.IsStartObject(XmlReader)
  fullName: System.Runtime.Serialization.DataContractSerializer.IsStartObject(System.Xml.XmlReader)
  type: Method
  source:
    remote:
      path: src/System.Runtime.Serialization.Xml/ref/System.Runtime.Serialization.Xml.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: IsStartObject
    path: src/System.Runtime.Serialization.Xml/ref/System.Runtime.Serialization.Xml.cs
    startLine: 31
  assemblies:
  - System.Runtime.Serialization.Xml
  namespace: System.Runtime.Serialization
  summary: "\n<p>Determines whether the <xref href=\"System.Xml.XmlReader\" data-throw-if-not-resolved=\"false\"></xref> is positioned on an object that can be deserialized.</p>\n"
  syntax:
    content: public override bool IsStartObject(XmlReader reader)
    content.vb: Public Overrides Function IsStartObject(reader As XmlReader) As Boolean
    parameters:
    - id: reader
      type: System.Xml.XmlReader
      description: "\n<p>The <xref href=\"System.Xml.XmlReader\" data-throw-if-not-resolved=\"false\"></xref> used to read the XML stream.</p>\n"
    return:
      type: System.Boolean
      description: "\n<p>\n<strong>true</strong> if the reader is at the start element of the stream to read; otherwise, <strong>false</strong>.</p>\n"
  overridden: System.Runtime.Serialization.XmlObjectSerializer.IsStartObject(System.Xml.XmlReader)
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
- uid: System.Runtime.Serialization.DataContractSerializer.ReadObject(System.Xml.XmlDictionaryReader,System.Boolean)
  commentId: M:System.Runtime.Serialization.DataContractSerializer.ReadObject(System.Xml.XmlDictionaryReader,System.Boolean)
  id: ReadObject(System.Xml.XmlDictionaryReader,System.Boolean)
  parent: System.Runtime.Serialization.DataContractSerializer
  langs:
  - csharp
  - vb
  name: ReadObject(XmlDictionaryReader, Boolean)
  nameWithType: DataContractSerializer.ReadObject(XmlDictionaryReader, Boolean)
  fullName: System.Runtime.Serialization.DataContractSerializer.ReadObject(System.Xml.XmlDictionaryReader, System.Boolean)
  type: Method
  source:
    remote:
      path: src/System.Private.DataContractSerialization/src/System/Runtime/Serialization/DataContractSerializer.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: ReadObject
    path: src/System.Private.DataContractSerialization/src/System/Runtime/Serialization/DataContractSerializer.cs
    startLine: 284
  assemblies:
  - System.Runtime.Serialization.Xml
  namespace: System.Runtime.Serialization
  summary: "\n<p>Reads the XML stream with an <xref href=\"System.Xml.XmlDictionaryReader\" data-throw-if-not-resolved=\"false\"></xref> and returns the deserialized object, and also specifies whether a check is made to verify the object name before reading its value. </p>\n"
  syntax:
    content: public override object ReadObject(XmlDictionaryReader reader, bool verifyObjectName)
    content.vb: Public Overrides Function ReadObject(reader As XmlDictionaryReader, verifyObjectName As Boolean) As Object
    parameters:
    - id: reader
      type: System.Xml.XmlDictionaryReader
      description: "\n<p>The <xref href=\"System.Xml.XmlDictionaryReader\" data-throw-if-not-resolved=\"false\"></xref> used to read the XML stream.</p>\n"
    - id: verifyObjectName
      type: System.Boolean
      description: "\n<p>\n<strong>true</strong> to check whether the name of the object corresponds to the root name value supplied in the constructor; otherwise, <strong>false</strong>. </p>\n"
    return:
      type: System.Object
      description: "\n<p>The deserialized object.</p>\n"
  overridden: System.Runtime.Serialization.XmlObjectSerializer.ReadObject(System.Xml.XmlDictionaryReader,System.Boolean)
  exceptions:
  - type: System.Runtime.Serialization.SerializationException
    commentId: T:System.Runtime.Serialization.SerializationException
    description: "\n<p>The <em>verifyObjectName</em> parameter is set to <strong>true</strong>, and the element name and namespace do not correspond to the values set in the constructor. </p>\n"
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
- uid: System.Runtime.Serialization.DataContractSerializer.ReadObject(System.Xml.XmlReader)
  commentId: M:System.Runtime.Serialization.DataContractSerializer.ReadObject(System.Xml.XmlReader)
  id: ReadObject(System.Xml.XmlReader)
  parent: System.Runtime.Serialization.DataContractSerializer
  langs:
  - csharp
  - vb
  name: ReadObject(XmlReader)
  nameWithType: DataContractSerializer.ReadObject(XmlReader)
  fullName: System.Runtime.Serialization.DataContractSerializer.ReadObject(System.Xml.XmlReader)
  type: Method
  source:
    remote:
      path: src/System.Runtime.Serialization.Xml/ref/System.Runtime.Serialization.Xml.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: ReadObject
    path: src/System.Runtime.Serialization.Xml/ref/System.Runtime.Serialization.Xml.cs
    startLine: 33
  assemblies:
  - System.Runtime.Serialization.Xml
  namespace: System.Runtime.Serialization
  summary: "\n<p>Reads the XML stream with an <xref href=\"System.Xml.XmlReader\" data-throw-if-not-resolved=\"false\"></xref> and returns the deserialized object.</p>\n"
  syntax:
    content: public override object ReadObject(XmlReader reader)
    content.vb: Public Overrides Function ReadObject(reader As XmlReader) As Object
    parameters:
    - id: reader
      type: System.Xml.XmlReader
      description: "\n<p>The <xref href=\"System.Xml.XmlReader\" data-throw-if-not-resolved=\"false\"></xref> used to read the XML stream.</p>\n"
    return:
      type: System.Object
      description: "\n<p>The deserialized object.</p>\n"
  overridden: System.Runtime.Serialization.XmlObjectSerializer.ReadObject(System.Xml.XmlReader)
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
- uid: System.Runtime.Serialization.DataContractSerializer.ReadObject(System.Xml.XmlReader,System.Boolean)
  commentId: M:System.Runtime.Serialization.DataContractSerializer.ReadObject(System.Xml.XmlReader,System.Boolean)
  id: ReadObject(System.Xml.XmlReader,System.Boolean)
  parent: System.Runtime.Serialization.DataContractSerializer
  langs:
  - csharp
  - vb
  name: ReadObject(XmlReader, Boolean)
  nameWithType: DataContractSerializer.ReadObject(XmlReader, Boolean)
  fullName: System.Runtime.Serialization.DataContractSerializer.ReadObject(System.Xml.XmlReader, System.Boolean)
  type: Method
  source:
    remote:
      path: src/System.Runtime.Serialization.Xml/ref/System.Runtime.Serialization.Xml.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: ReadObject
    path: src/System.Runtime.Serialization.Xml/ref/System.Runtime.Serialization.Xml.cs
    startLine: 34
  assemblies:
  - System.Runtime.Serialization.Xml
  namespace: System.Runtime.Serialization
  summary: "\n<p>Reads the XML stream with an <xref href=\"System.Xml.XmlReader\" data-throw-if-not-resolved=\"false\"></xref> and returns the deserialized object, and also specifies whether a check is made to verify the object name before reading its value.</p>\n"
  syntax:
    content: public override object ReadObject(XmlReader reader, bool verifyObjectName)
    content.vb: Public Overrides Function ReadObject(reader As XmlReader, verifyObjectName As Boolean) As Object
    parameters:
    - id: reader
      type: System.Xml.XmlReader
      description: "\n<p>The <xref href=\"System.Xml.XmlReader\" data-throw-if-not-resolved=\"false\"></xref> used to read the XML stream.</p>\n"
    - id: verifyObjectName
      type: System.Boolean
      description: "\n<p>\n<strong>true</strong> to check whether the name of the object corresponds to the root name value supplied in the constructor; otherwise, <strong>false</strong>.</p>\n"
    return:
      type: System.Object
      description: "\n<p>The deserialized object.</p>\n"
  overridden: System.Runtime.Serialization.XmlObjectSerializer.ReadObject(System.Xml.XmlReader,System.Boolean)
  exceptions:
  - type: System.Runtime.Serialization.SerializationException
    commentId: T:System.Runtime.Serialization.SerializationException
    description: "\n<p>The <em>verifyObjectName</em> parameter is set to <strong>true</strong>, and the element name and namespace do not correspond to the values set in the constructor. </p>\n"
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
- uid: System.Runtime.Serialization.DataContractSerializer.WriteEndObject(System.Xml.XmlDictionaryWriter)
  commentId: M:System.Runtime.Serialization.DataContractSerializer.WriteEndObject(System.Xml.XmlDictionaryWriter)
  id: WriteEndObject(System.Xml.XmlDictionaryWriter)
  parent: System.Runtime.Serialization.DataContractSerializer
  langs:
  - csharp
  - vb
  name: WriteEndObject(XmlDictionaryWriter)
  nameWithType: DataContractSerializer.WriteEndObject(XmlDictionaryWriter)
  fullName: System.Runtime.Serialization.DataContractSerializer.WriteEndObject(System.Xml.XmlDictionaryWriter)
  type: Method
  source:
    remote:
      path: src/System.Private.DataContractSerialization/src/System/Runtime/Serialization/DataContractSerializer.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: WriteEndObject
    path: src/System.Private.DataContractSerialization/src/System/Runtime/Serialization/DataContractSerializer.cs
    startLine: 264
  assemblies:
  - System.Runtime.Serialization.Xml
  namespace: System.Runtime.Serialization
  summary: "\n<p>Writes the closing XML element using an <xref href=\"System.Xml.XmlDictionaryWriter\" data-throw-if-not-resolved=\"false\"></xref>.</p>\n"
  syntax:
    content: public override void WriteEndObject(XmlDictionaryWriter writer)
    content.vb: Public Overrides Sub WriteEndObject(writer As XmlDictionaryWriter)
    parameters:
    - id: writer
      type: System.Xml.XmlDictionaryWriter
      description: "\n<p>The <xref href=\"System.Xml.XmlDictionaryWriter\" data-throw-if-not-resolved=\"false\"></xref> used to write the stream.</p>\n"
  overridden: System.Runtime.Serialization.XmlObjectSerializer.WriteEndObject(System.Xml.XmlDictionaryWriter)
  exceptions:
  - type: System.Runtime.Serialization.InvalidDataContractException
    commentId: T:System.Runtime.Serialization.InvalidDataContractException
    description: "\n<p>The type being serialized does not conform to data contract rules. For example, the <xref href=\"System.Runtime.Serialization.DataContractAttribute\" data-throw-if-not-resolved=\"false\"></xref> attribute has not been applied to the type.</p>\n"
  - type: System.Runtime.Serialization.SerializationException
    commentId: T:System.Runtime.Serialization.SerializationException
    description: "\n<p>There is a problem with the instance being written.</p>\n"
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
- uid: System.Runtime.Serialization.DataContractSerializer.WriteEndObject(System.Xml.XmlWriter)
  commentId: M:System.Runtime.Serialization.DataContractSerializer.WriteEndObject(System.Xml.XmlWriter)
  id: WriteEndObject(System.Xml.XmlWriter)
  parent: System.Runtime.Serialization.DataContractSerializer
  langs:
  - csharp
  - vb
  name: WriteEndObject(XmlWriter)
  nameWithType: DataContractSerializer.WriteEndObject(XmlWriter)
  fullName: System.Runtime.Serialization.DataContractSerializer.WriteEndObject(System.Xml.XmlWriter)
  type: Method
  source:
    remote:
      path: src/System.Runtime.Serialization.Xml/ref/System.Runtime.Serialization.Xml.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: WriteEndObject
    path: src/System.Runtime.Serialization.Xml/ref/System.Runtime.Serialization.Xml.cs
    startLine: 36
  assemblies:
  - System.Runtime.Serialization.Xml
  namespace: System.Runtime.Serialization
  summary: "\n<p>Writes the closing XML element using an <xref href=\"System.Xml.XmlWriter\" data-throw-if-not-resolved=\"false\"></xref>.</p>\n"
  syntax:
    content: public override void WriteEndObject(XmlWriter writer)
    content.vb: Public Overrides Sub WriteEndObject(writer As XmlWriter)
    parameters:
    - id: writer
      type: System.Xml.XmlWriter
      description: "\n<p>The <xref href=\"System.Xml.XmlWriter\" data-throw-if-not-resolved=\"false\"></xref> used to write the stream.</p>\n"
  overridden: System.Runtime.Serialization.XmlObjectSerializer.WriteEndObject(System.Xml.XmlWriter)
  exceptions:
  - type: System.Runtime.Serialization.InvalidDataContractException
    commentId: T:System.Runtime.Serialization.InvalidDataContractException
    description: "\n<p>The type being serialized does not conform to data contract rules. For example, the <xref href=\"System.Runtime.Serialization.DataContractAttribute\" data-throw-if-not-resolved=\"false\"></xref> attribute has not been applied to the type.</p>\n"
  - type: System.Runtime.Serialization.SerializationException
    commentId: T:System.Runtime.Serialization.SerializationException
    description: "\n<p>There is a problem with the instance being written.</p>\n"
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
- uid: System.Runtime.Serialization.DataContractSerializer.WriteObject(System.Xml.XmlWriter,System.Object)
  commentId: M:System.Runtime.Serialization.DataContractSerializer.WriteObject(System.Xml.XmlWriter,System.Object)
  id: WriteObject(System.Xml.XmlWriter,System.Object)
  parent: System.Runtime.Serialization.DataContractSerializer
  langs:
  - csharp
  - vb
  name: WriteObject(XmlWriter, Object)
  nameWithType: DataContractSerializer.WriteObject(XmlWriter, Object)
  fullName: System.Runtime.Serialization.DataContractSerializer.WriteObject(System.Xml.XmlWriter, System.Object)
  type: Method
  source:
    remote:
      path: src/System.Runtime.Serialization.Xml/ref/System.Runtime.Serialization.Xml.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: WriteObject
    path: src/System.Runtime.Serialization.Xml/ref/System.Runtime.Serialization.Xml.cs
    startLine: 37
  assemblies:
  - System.Runtime.Serialization.Xml
  namespace: System.Runtime.Serialization
  summary: "\n<p>Writes all the object data (starting XML element, content, and closing element) to an XML document or stream with an <xref href=\"System.Xml.XmlWriter\" data-throw-if-not-resolved=\"false\"></xref>.</p>\n"
  syntax:
    content: public override void WriteObject(XmlWriter writer, object graph)
    content.vb: Public Overrides Sub WriteObject(writer As XmlWriter, graph As Object)
    parameters:
    - id: writer
      type: System.Xml.XmlWriter
      description: "\n<p>The <xref href=\"System.Xml.XmlWriter\" data-throw-if-not-resolved=\"false\"></xref> used to write the XML document or stream.</p>\n"
    - id: graph
      type: System.Object
      description: "\n<p>The object that contains the data to write to the stream.</p>\n"
  overridden: System.Runtime.Serialization.XmlObjectSerializer.WriteObject(System.Xml.XmlWriter,System.Object)
  exceptions:
  - type: System.Runtime.Serialization.InvalidDataContractException
    commentId: T:System.Runtime.Serialization.InvalidDataContractException
    description: "\n<p>The type being serialized does not conform to data contract rules. For example, the <xref href=\"System.Runtime.Serialization.DataContractAttribute\" data-throw-if-not-resolved=\"false\"></xref> attribute has not been applied to the type.</p>\n"
  - type: System.Runtime.Serialization.SerializationException
    commentId: T:System.Runtime.Serialization.SerializationException
    description: "\n<p>There is a problem with the instance being written.</p>\n"
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
- uid: System.Runtime.Serialization.DataContractSerializer.WriteObjectContent(System.Xml.XmlDictionaryWriter,System.Object)
  commentId: M:System.Runtime.Serialization.DataContractSerializer.WriteObjectContent(System.Xml.XmlDictionaryWriter,System.Object)
  id: WriteObjectContent(System.Xml.XmlDictionaryWriter,System.Object)
  parent: System.Runtime.Serialization.DataContractSerializer
  langs:
  - csharp
  - vb
  name: WriteObjectContent(XmlDictionaryWriter, Object)
  nameWithType: DataContractSerializer.WriteObjectContent(XmlDictionaryWriter, Object)
  fullName: System.Runtime.Serialization.DataContractSerializer.WriteObjectContent(System.Xml.XmlDictionaryWriter, System.Object)
  type: Method
  source:
    remote:
      path: src/System.Private.DataContractSerialization/src/System/Runtime/Serialization/DataContractSerializer.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: WriteObjectContent
    path: src/System.Private.DataContractSerialization/src/System/Runtime/Serialization/DataContractSerializer.cs
    startLine: 259
  assemblies:
  - System.Runtime.Serialization.Xml
  namespace: System.Runtime.Serialization
  summary: "\n<p>Writes the XML content using an <xref href=\"System.Xml.XmlDictionaryWriter\" data-throw-if-not-resolved=\"false\"></xref>.</p>\n"
  syntax:
    content: public override void WriteObjectContent(XmlDictionaryWriter writer, object graph)
    content.vb: Public Overrides Sub WriteObjectContent(writer As XmlDictionaryWriter, graph As Object)
    parameters:
    - id: writer
      type: System.Xml.XmlDictionaryWriter
      description: "\n<p>The <xref href=\"System.Xml.XmlDictionaryWriter\" data-throw-if-not-resolved=\"false\"></xref> used to write the stream.</p>\n"
    - id: graph
      type: System.Object
      description: "\n<p>The object to write to the stream.</p>\n"
  overridden: System.Runtime.Serialization.XmlObjectSerializer.WriteObjectContent(System.Xml.XmlDictionaryWriter,System.Object)
  exceptions:
  - type: System.Runtime.Serialization.InvalidDataContractException
    commentId: T:System.Runtime.Serialization.InvalidDataContractException
    description: "\n<p>The type being serialized does not conform to data contract rules. For example, the <xref href=\"System.Runtime.Serialization.DataContractAttribute\" data-throw-if-not-resolved=\"false\"></xref> attribute has not been applied to the type.</p>\n"
  - type: System.Runtime.Serialization.SerializationException
    commentId: T:System.Runtime.Serialization.SerializationException
    description: "\n<p>There is a problem with the instance being written.</p>\n"
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
- uid: System.Runtime.Serialization.DataContractSerializer.WriteObjectContent(System.Xml.XmlWriter,System.Object)
  commentId: M:System.Runtime.Serialization.DataContractSerializer.WriteObjectContent(System.Xml.XmlWriter,System.Object)
  id: WriteObjectContent(System.Xml.XmlWriter,System.Object)
  parent: System.Runtime.Serialization.DataContractSerializer
  langs:
  - csharp
  - vb
  name: WriteObjectContent(XmlWriter, Object)
  nameWithType: DataContractSerializer.WriteObjectContent(XmlWriter, Object)
  fullName: System.Runtime.Serialization.DataContractSerializer.WriteObjectContent(System.Xml.XmlWriter, System.Object)
  type: Method
  source:
    remote:
      path: src/System.Runtime.Serialization.Xml/ref/System.Runtime.Serialization.Xml.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: WriteObjectContent
    path: src/System.Runtime.Serialization.Xml/ref/System.Runtime.Serialization.Xml.cs
    startLine: 39
  assemblies:
  - System.Runtime.Serialization.Xml
  namespace: System.Runtime.Serialization
  summary: "\n<p>Writes the XML content using an <xref href=\"System.Xml.XmlWriter\" data-throw-if-not-resolved=\"false\"></xref>.</p>\n"
  syntax:
    content: public override void WriteObjectContent(XmlWriter writer, object graph)
    content.vb: Public Overrides Sub WriteObjectContent(writer As XmlWriter, graph As Object)
    parameters:
    - id: writer
      type: System.Xml.XmlWriter
      description: "\n<p>The <xref href=\"System.Xml.XmlWriter\" data-throw-if-not-resolved=\"false\"></xref> used to write the stream.</p>\n"
    - id: graph
      type: System.Object
      description: "\n<p>The object to write to the stream.</p>\n"
  overridden: System.Runtime.Serialization.XmlObjectSerializer.WriteObjectContent(System.Xml.XmlWriter,System.Object)
  exceptions:
  - type: System.Runtime.Serialization.InvalidDataContractException
    commentId: T:System.Runtime.Serialization.InvalidDataContractException
    description: "\n<p>The type being serialized does not conform to data contract rules. For example, the <xref href=\"System.Runtime.Serialization.DataContractAttribute\" data-throw-if-not-resolved=\"false\"></xref> attribute has not been applied to the type.</p>\n"
  - type: System.Runtime.Serialization.SerializationException
    commentId: T:System.Runtime.Serialization.SerializationException
    description: "\n<p>There is a problem with the instance being written.</p>\n"
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
- uid: System.Runtime.Serialization.DataContractSerializer.WriteStartObject(System.Xml.XmlDictionaryWriter,System.Object)
  commentId: M:System.Runtime.Serialization.DataContractSerializer.WriteStartObject(System.Xml.XmlDictionaryWriter,System.Object)
  id: WriteStartObject(System.Xml.XmlDictionaryWriter,System.Object)
  parent: System.Runtime.Serialization.DataContractSerializer
  langs:
  - csharp
  - vb
  name: WriteStartObject(XmlDictionaryWriter, Object)
  nameWithType: DataContractSerializer.WriteStartObject(XmlDictionaryWriter, Object)
  fullName: System.Runtime.Serialization.DataContractSerializer.WriteStartObject(System.Xml.XmlDictionaryWriter, System.Object)
  type: Method
  source:
    remote:
      path: src/System.Private.DataContractSerialization/src/System/Runtime/Serialization/DataContractSerializer.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: WriteStartObject
    path: src/System.Private.DataContractSerialization/src/System/Runtime/Serialization/DataContractSerializer.cs
    startLine: 254
  assemblies:
  - System.Runtime.Serialization.Xml
  namespace: System.Runtime.Serialization
  summary: "\n<p>Writes the opening XML element using an <xref href=\"System.Xml.XmlDictionaryWriter\" data-throw-if-not-resolved=\"false\"></xref>.</p>\n"
  syntax:
    content: public override void WriteStartObject(XmlDictionaryWriter writer, object graph)
    content.vb: Public Overrides Sub WriteStartObject(writer As XmlDictionaryWriter, graph As Object)
    parameters:
    - id: writer
      type: System.Xml.XmlDictionaryWriter
      description: "\n<p>The <xref href=\"System.Xml.XmlDictionaryWriter\" data-throw-if-not-resolved=\"false\"></xref> used to write the XML start element.</p>\n"
    - id: graph
      type: System.Object
      description: "\n<p>The object to write.</p>\n"
  overridden: System.Runtime.Serialization.XmlObjectSerializer.WriteStartObject(System.Xml.XmlDictionaryWriter,System.Object)
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
- uid: System.Runtime.Serialization.DataContractSerializer.WriteStartObject(System.Xml.XmlWriter,System.Object)
  commentId: M:System.Runtime.Serialization.DataContractSerializer.WriteStartObject(System.Xml.XmlWriter,System.Object)
  id: WriteStartObject(System.Xml.XmlWriter,System.Object)
  parent: System.Runtime.Serialization.DataContractSerializer
  langs:
  - csharp
  - vb
  name: WriteStartObject(XmlWriter, Object)
  nameWithType: DataContractSerializer.WriteStartObject(XmlWriter, Object)
  fullName: System.Runtime.Serialization.DataContractSerializer.WriteStartObject(System.Xml.XmlWriter, System.Object)
  type: Method
  source:
    remote:
      path: src/System.Runtime.Serialization.Xml/ref/System.Runtime.Serialization.Xml.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: WriteStartObject
    path: src/System.Runtime.Serialization.Xml/ref/System.Runtime.Serialization.Xml.cs
    startLine: 41
  assemblies:
  - System.Runtime.Serialization.Xml
  namespace: System.Runtime.Serialization
  summary: "\n<p>Writes the opening XML element using an <xref href=\"System.Xml.XmlWriter\" data-throw-if-not-resolved=\"false\"></xref>.</p>\n"
  syntax:
    content: public override void WriteStartObject(XmlWriter writer, object graph)
    content.vb: Public Overrides Sub WriteStartObject(writer As XmlWriter, graph As Object)
    parameters:
    - id: writer
      type: System.Xml.XmlWriter
      description: "\n<p>The <xref href=\"System.Xml.XmlWriter\" data-throw-if-not-resolved=\"false\"></xref> used to write the XML start element.</p>\n"
    - id: graph
      type: System.Object
      description: "\n<p>The object to write.</p>\n"
  overridden: System.Runtime.Serialization.XmlObjectSerializer.WriteStartObject(System.Xml.XmlWriter,System.Object)
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
references:
- uid: System.Runtime.Serialization
  commentId: N:System.Runtime.Serialization
  isExternal: false
  name: System.Runtime.Serialization
  nameWithType: System.Runtime.Serialization
  fullName: System.Runtime.Serialization
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: false
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Runtime.Serialization.XmlObjectSerializer
  commentId: T:System.Runtime.Serialization.XmlObjectSerializer
  parent: System.Runtime.Serialization
  isExternal: false
  name: XmlObjectSerializer
  nameWithType: XmlObjectSerializer
  fullName: System.Runtime.Serialization.XmlObjectSerializer
- uid: System.Runtime.Serialization.XmlObjectSerializer.ReadObject(System.IO.Stream)
  commentId: M:System.Runtime.Serialization.XmlObjectSerializer.ReadObject(System.IO.Stream)
  parent: System.Runtime.Serialization.XmlObjectSerializer
  isExternal: true
  name: ReadObject(Stream)
  nameWithType: XmlObjectSerializer.ReadObject(Stream)
  fullName: System.Runtime.Serialization.XmlObjectSerializer.ReadObject(System.IO.Stream)
  spec.csharp:
  - uid: System.Runtime.Serialization.XmlObjectSerializer.ReadObject(System.IO.Stream)
    name: ReadObject
    nameWithType: XmlObjectSerializer.ReadObject
    fullName: System.Runtime.Serialization.XmlObjectSerializer.ReadObject
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.IO.Stream
    name: Stream
    nameWithType: Stream
    fullName: System.IO.Stream
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Runtime.Serialization.XmlObjectSerializer.ReadObject(System.IO.Stream)
    name: ReadObject
    nameWithType: XmlObjectSerializer.ReadObject
    fullName: System.Runtime.Serialization.XmlObjectSerializer.ReadObject
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.IO.Stream
    name: Stream
    nameWithType: Stream
    fullName: System.IO.Stream
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Runtime.Serialization.XmlObjectSerializer.ReadObject(System.Xml.XmlDictionaryReader)
  commentId: M:System.Runtime.Serialization.XmlObjectSerializer.ReadObject(System.Xml.XmlDictionaryReader)
  parent: System.Runtime.Serialization.XmlObjectSerializer
  isExternal: false
  name: ReadObject(XmlDictionaryReader)
  nameWithType: XmlObjectSerializer.ReadObject(XmlDictionaryReader)
  fullName: System.Runtime.Serialization.XmlObjectSerializer.ReadObject(System.Xml.XmlDictionaryReader)
  spec.csharp:
  - uid: System.Runtime.Serialization.XmlObjectSerializer.ReadObject(System.Xml.XmlDictionaryReader)
    name: ReadObject
    nameWithType: XmlObjectSerializer.ReadObject
    fullName: System.Runtime.Serialization.XmlObjectSerializer.ReadObject
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Xml.XmlDictionaryReader
    name: XmlDictionaryReader
    nameWithType: XmlDictionaryReader
    fullName: System.Xml.XmlDictionaryReader
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Runtime.Serialization.XmlObjectSerializer.ReadObject(System.Xml.XmlDictionaryReader)
    name: ReadObject
    nameWithType: XmlObjectSerializer.ReadObject
    fullName: System.Runtime.Serialization.XmlObjectSerializer.ReadObject
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Xml.XmlDictionaryReader
    name: XmlDictionaryReader
    nameWithType: XmlDictionaryReader
    fullName: System.Xml.XmlDictionaryReader
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Runtime.Serialization.XmlObjectSerializer.WriteObject(System.IO.Stream,System.Object)
  commentId: M:System.Runtime.Serialization.XmlObjectSerializer.WriteObject(System.IO.Stream,System.Object)
  parent: System.Runtime.Serialization.XmlObjectSerializer
  isExternal: true
  name: WriteObject(Stream, Object)
  nameWithType: XmlObjectSerializer.WriteObject(Stream, Object)
  fullName: System.Runtime.Serialization.XmlObjectSerializer.WriteObject(System.IO.Stream, System.Object)
  spec.csharp:
  - uid: System.Runtime.Serialization.XmlObjectSerializer.WriteObject(System.IO.Stream,System.Object)
    name: WriteObject
    nameWithType: XmlObjectSerializer.WriteObject
    fullName: System.Runtime.Serialization.XmlObjectSerializer.WriteObject
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.IO.Stream
    name: Stream
    nameWithType: Stream
    fullName: System.IO.Stream
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Runtime.Serialization.XmlObjectSerializer.WriteObject(System.IO.Stream,System.Object)
    name: WriteObject
    nameWithType: XmlObjectSerializer.WriteObject
    fullName: System.Runtime.Serialization.XmlObjectSerializer.WriteObject
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.IO.Stream
    name: Stream
    nameWithType: Stream
    fullName: System.IO.Stream
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Runtime.Serialization.XmlObjectSerializer.WriteObject(System.Xml.XmlDictionaryWriter,System.Object)
  commentId: M:System.Runtime.Serialization.XmlObjectSerializer.WriteObject(System.Xml.XmlDictionaryWriter,System.Object)
  parent: System.Runtime.Serialization.XmlObjectSerializer
  isExternal: true
  name: WriteObject(XmlDictionaryWriter, Object)
  nameWithType: XmlObjectSerializer.WriteObject(XmlDictionaryWriter, Object)
  fullName: System.Runtime.Serialization.XmlObjectSerializer.WriteObject(System.Xml.XmlDictionaryWriter, System.Object)
  spec.csharp:
  - uid: System.Runtime.Serialization.XmlObjectSerializer.WriteObject(System.Xml.XmlDictionaryWriter,System.Object)
    name: WriteObject
    nameWithType: XmlObjectSerializer.WriteObject
    fullName: System.Runtime.Serialization.XmlObjectSerializer.WriteObject
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Xml.XmlDictionaryWriter
    name: XmlDictionaryWriter
    nameWithType: XmlDictionaryWriter
    fullName: System.Xml.XmlDictionaryWriter
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Runtime.Serialization.XmlObjectSerializer.WriteObject(System.Xml.XmlDictionaryWriter,System.Object)
    name: WriteObject
    nameWithType: XmlObjectSerializer.WriteObject
    fullName: System.Runtime.Serialization.XmlObjectSerializer.WriteObject
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Xml.XmlDictionaryWriter
    name: XmlDictionaryWriter
    nameWithType: XmlDictionaryWriter
    fullName: System.Xml.XmlDictionaryWriter
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Runtime.Serialization.DataContractSerializer.System.Runtime.Serialization.DataContractSerializerExtensions.GetSerializationSurrogateProvider
  commentId: M:System.Runtime.Serialization.DataContractSerializerExtensions.GetSerializationSurrogateProvider(System.Runtime.Serialization.DataContractSerializer)
  parent: System.Runtime.Serialization.DataContractSerializerExtensions
  definition: System.Runtime.Serialization.DataContractSerializerExtensions.GetSerializationSurrogateProvider(System.Runtime.Serialization.DataContractSerializer)
  name: GetSerializationSurrogateProvider()
  nameWithType: DataContractSerializerExtensions.GetSerializationSurrogateProvider()
  fullName: System.Runtime.Serialization.DataContractSerializerExtensions.GetSerializationSurrogateProvider()
  spec.csharp:
  - uid: System.Runtime.Serialization.DataContractSerializerExtensions.GetSerializationSurrogateProvider
    name: GetSerializationSurrogateProvider
    nameWithType: DataContractSerializerExtensions.GetSerializationSurrogateProvider
    fullName: System.Runtime.Serialization.DataContractSerializerExtensions.GetSerializationSurrogateProvider
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Runtime.Serialization.DataContractSerializerExtensions.GetSerializationSurrogateProvider
    name: GetSerializationSurrogateProvider
    nameWithType: DataContractSerializerExtensions.GetSerializationSurrogateProvider
    fullName: System.Runtime.Serialization.DataContractSerializerExtensions.GetSerializationSurrogateProvider
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Runtime.Serialization.DataContractSerializer.System.Runtime.Serialization.DataContractSerializerExtensions.SetSerializationSurrogateProvider(System.Runtime.Serialization.ISerializationSurrogateProvider)
  commentId: M:System.Runtime.Serialization.DataContractSerializerExtensions.SetSerializationSurrogateProvider(System.Runtime.Serialization.DataContractSerializer,System.Runtime.Serialization.ISerializationSurrogateProvider)
  parent: System.Runtime.Serialization.DataContractSerializerExtensions
  definition: System.Runtime.Serialization.DataContractSerializerExtensions.SetSerializationSurrogateProvider(System.Runtime.Serialization.DataContractSerializer,System.Runtime.Serialization.ISerializationSurrogateProvider)
  name: SetSerializationSurrogateProvider(ISerializationSurrogateProvider)
  nameWithType: DataContractSerializerExtensions.SetSerializationSurrogateProvider(ISerializationSurrogateProvider)
  fullName: System.Runtime.Serialization.DataContractSerializerExtensions.SetSerializationSurrogateProvider(System.Runtime.Serialization.ISerializationSurrogateProvider)
  spec.csharp:
  - uid: System.Runtime.Serialization.DataContractSerializerExtensions.SetSerializationSurrogateProvider(System.Runtime.Serialization.ISerializationSurrogateProvider)
    name: SetSerializationSurrogateProvider
    nameWithType: DataContractSerializerExtensions.SetSerializationSurrogateProvider
    fullName: System.Runtime.Serialization.DataContractSerializerExtensions.SetSerializationSurrogateProvider
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Runtime.Serialization.ISerializationSurrogateProvider
    name: ISerializationSurrogateProvider
    nameWithType: ISerializationSurrogateProvider
    fullName: System.Runtime.Serialization.ISerializationSurrogateProvider
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Runtime.Serialization.DataContractSerializerExtensions.SetSerializationSurrogateProvider(System.Runtime.Serialization.ISerializationSurrogateProvider)
    name: SetSerializationSurrogateProvider
    nameWithType: DataContractSerializerExtensions.SetSerializationSurrogateProvider
    fullName: System.Runtime.Serialization.DataContractSerializerExtensions.SetSerializationSurrogateProvider
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Runtime.Serialization.ISerializationSurrogateProvider
    name: ISerializationSurrogateProvider
    nameWithType: ISerializationSurrogateProvider
    fullName: System.Runtime.Serialization.ISerializationSurrogateProvider
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: System.Runtime.Serialization.DataContractSerializerExtensions.GetSerializationSurrogateProvider(System.Runtime.Serialization.DataContractSerializer)
  commentId: M:System.Runtime.Serialization.DataContractSerializerExtensions.GetSerializationSurrogateProvider(System.Runtime.Serialization.DataContractSerializer)
  isExternal: false
  name: GetSerializationSurrogateProvider(DataContractSerializer)
  nameWithType: DataContractSerializerExtensions.GetSerializationSurrogateProvider(DataContractSerializer)
  fullName: System.Runtime.Serialization.DataContractSerializerExtensions.GetSerializationSurrogateProvider(System.Runtime.Serialization.DataContractSerializer)
  spec.csharp:
  - uid: System.Runtime.Serialization.DataContractSerializerExtensions.GetSerializationSurrogateProvider(System.Runtime.Serialization.DataContractSerializer)
    name: GetSerializationSurrogateProvider
    nameWithType: DataContractSerializerExtensions.GetSerializationSurrogateProvider
    fullName: System.Runtime.Serialization.DataContractSerializerExtensions.GetSerializationSurrogateProvider
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Runtime.Serialization.DataContractSerializer
    name: DataContractSerializer
    nameWithType: DataContractSerializer
    fullName: System.Runtime.Serialization.DataContractSerializer
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Runtime.Serialization.DataContractSerializerExtensions.GetSerializationSurrogateProvider(System.Runtime.Serialization.DataContractSerializer)
    name: GetSerializationSurrogateProvider
    nameWithType: DataContractSerializerExtensions.GetSerializationSurrogateProvider
    fullName: System.Runtime.Serialization.DataContractSerializerExtensions.GetSerializationSurrogateProvider
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Runtime.Serialization.DataContractSerializer
    name: DataContractSerializer
    nameWithType: DataContractSerializer
    fullName: System.Runtime.Serialization.DataContractSerializer
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Runtime.Serialization.DataContractSerializerExtensions
  commentId: T:System.Runtime.Serialization.DataContractSerializerExtensions
  parent: System.Runtime.Serialization
  isExternal: false
  name: DataContractSerializerExtensions
  nameWithType: DataContractSerializerExtensions
  fullName: System.Runtime.Serialization.DataContractSerializerExtensions
- uid: System.Runtime.Serialization.DataContractSerializerExtensions.SetSerializationSurrogateProvider(System.Runtime.Serialization.DataContractSerializer,System.Runtime.Serialization.ISerializationSurrogateProvider)
  commentId: M:System.Runtime.Serialization.DataContractSerializerExtensions.SetSerializationSurrogateProvider(System.Runtime.Serialization.DataContractSerializer,System.Runtime.Serialization.ISerializationSurrogateProvider)
  isExternal: true
  name: SetSerializationSurrogateProvider(DataContractSerializer, ISerializationSurrogateProvider)
  nameWithType: DataContractSerializerExtensions.SetSerializationSurrogateProvider(DataContractSerializer, ISerializationSurrogateProvider)
  fullName: System.Runtime.Serialization.DataContractSerializerExtensions.SetSerializationSurrogateProvider(System.Runtime.Serialization.DataContractSerializer, System.Runtime.Serialization.ISerializationSurrogateProvider)
  spec.csharp:
  - uid: System.Runtime.Serialization.DataContractSerializerExtensions.SetSerializationSurrogateProvider(System.Runtime.Serialization.DataContractSerializer,System.Runtime.Serialization.ISerializationSurrogateProvider)
    name: SetSerializationSurrogateProvider
    nameWithType: DataContractSerializerExtensions.SetSerializationSurrogateProvider
    fullName: System.Runtime.Serialization.DataContractSerializerExtensions.SetSerializationSurrogateProvider
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Runtime.Serialization.DataContractSerializer
    name: DataContractSerializer
    nameWithType: DataContractSerializer
    fullName: System.Runtime.Serialization.DataContractSerializer
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Runtime.Serialization.ISerializationSurrogateProvider
    name: ISerializationSurrogateProvider
    nameWithType: ISerializationSurrogateProvider
    fullName: System.Runtime.Serialization.ISerializationSurrogateProvider
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Runtime.Serialization.DataContractSerializerExtensions.SetSerializationSurrogateProvider(System.Runtime.Serialization.DataContractSerializer,System.Runtime.Serialization.ISerializationSurrogateProvider)
    name: SetSerializationSurrogateProvider
    nameWithType: DataContractSerializerExtensions.SetSerializationSurrogateProvider
    fullName: System.Runtime.Serialization.DataContractSerializerExtensions.SetSerializationSurrogateProvider
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Runtime.Serialization.DataContractSerializer
    name: DataContractSerializer
    nameWithType: DataContractSerializer
    fullName: System.Runtime.Serialization.DataContractSerializer
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Runtime.Serialization.ISerializationSurrogateProvider
    name: ISerializationSurrogateProvider
    nameWithType: ISerializationSurrogateProvider
    fullName: System.Runtime.Serialization.ISerializationSurrogateProvider
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Type
  commentId: T:System.Type
  parent: System
  isExternal: false
  name: Type
  nameWithType: Type
  fullName: System.Type
- uid: System.Collections.Generic.IEnumerable{System.Type}
  commentId: T:System.Collections.Generic.IEnumerable{System.Type}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IEnumerable`1
  name: IEnumerable<Type>
  nameWithType: IEnumerable<Type>
  fullName: System.Collections.Generic.IEnumerable<System.Type>
  nameWithType.vb: IEnumerable(Of Type)
  fullname.vb: System.Collections.Generic.IEnumerable(Of System.Type)
  name.vb: IEnumerable(Of Type)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Type
    name: Type
    nameWithType: Type
    fullName: System.Type
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Type
    name: Type
    nameWithType: Type
    fullName: System.Type
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.IEnumerable`1
  commentId: T:System.Collections.Generic.IEnumerable`1
  isExternal: false
  name: IEnumerable<T>
  nameWithType: IEnumerable<T>
  fullName: System.Collections.Generic.IEnumerable<T>
  nameWithType.vb: IEnumerable(Of T)
  fullname.vb: System.Collections.Generic.IEnumerable(Of T)
  name.vb: IEnumerable(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: false
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
- uid: System.Runtime.Serialization.DataContractSerializerSettings
  commentId: T:System.Runtime.Serialization.DataContractSerializerSettings
  parent: System.Runtime.Serialization
  isExternal: false
  name: DataContractSerializerSettings
  nameWithType: DataContractSerializerSettings
  fullName: System.Runtime.Serialization.DataContractSerializerSettings
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: false
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Xml.XmlDictionaryString
  commentId: T:System.Xml.XmlDictionaryString
  parent: System.Xml
  isExternal: false
  name: Xml.XmlDictionaryString
  nameWithType: Xml.XmlDictionaryString
  fullName: System.Xml.XmlDictionaryString
- uid: System.Xml
  commentId: N:System.Xml
  isExternal: false
  name: System.Xml
  nameWithType: System.Xml
  fullName: System.Xml
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: false
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Collections.ObjectModel.ReadOnlyCollection{System.Type}
  commentId: T:System.Collections.ObjectModel.ReadOnlyCollection{System.Type}
  parent: System.Collections.ObjectModel
  definition: System.Collections.ObjectModel.ReadOnlyCollection`1
  name: ReadOnlyCollection<Type>
  nameWithType: ReadOnlyCollection<Type>
  fullName: System.Collections.ObjectModel.ReadOnlyCollection<System.Type>
  nameWithType.vb: ReadOnlyCollection(Of Type)
  fullname.vb: System.Collections.ObjectModel.ReadOnlyCollection(Of System.Type)
  name.vb: ReadOnlyCollection(Of Type)
  spec.csharp:
  - uid: System.Collections.ObjectModel.ReadOnlyCollection`1
    name: ReadOnlyCollection
    nameWithType: ReadOnlyCollection
    fullName: System.Collections.ObjectModel.ReadOnlyCollection
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Type
    name: Type
    nameWithType: Type
    fullName: System.Type
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.ObjectModel.ReadOnlyCollection`1
    name: ReadOnlyCollection
    nameWithType: ReadOnlyCollection
    fullName: System.Collections.ObjectModel.ReadOnlyCollection
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Type
    name: Type
    nameWithType: Type
    fullName: System.Type
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.ObjectModel.ReadOnlyCollection`1
  commentId: T:System.Collections.ObjectModel.ReadOnlyCollection`1
  isExternal: false
  name: ReadOnlyCollection<T>
  nameWithType: ReadOnlyCollection<T>
  fullName: System.Collections.ObjectModel.ReadOnlyCollection<T>
  nameWithType.vb: ReadOnlyCollection(Of T)
  fullname.vb: System.Collections.ObjectModel.ReadOnlyCollection(Of T)
  name.vb: ReadOnlyCollection(Of T)
  spec.csharp:
  - uid: System.Collections.ObjectModel.ReadOnlyCollection`1
    name: ReadOnlyCollection
    nameWithType: ReadOnlyCollection
    fullName: System.Collections.ObjectModel.ReadOnlyCollection
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.ObjectModel.ReadOnlyCollection`1
    name: ReadOnlyCollection
    nameWithType: ReadOnlyCollection
    fullName: System.Collections.ObjectModel.ReadOnlyCollection
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.ObjectModel
  commentId: N:System.Collections.ObjectModel
  isExternal: false
  name: System.Collections.ObjectModel
  nameWithType: System.Collections.ObjectModel
  fullName: System.Collections.ObjectModel
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: false
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Runtime.Serialization.XmlObjectSerializer.IsStartObject(System.Xml.XmlDictionaryReader)
  commentId: M:System.Runtime.Serialization.XmlObjectSerializer.IsStartObject(System.Xml.XmlDictionaryReader)
  parent: System.Runtime.Serialization.XmlObjectSerializer
  isExternal: false
  name: IsStartObject(XmlDictionaryReader)
  nameWithType: XmlObjectSerializer.IsStartObject(XmlDictionaryReader)
  fullName: System.Runtime.Serialization.XmlObjectSerializer.IsStartObject(System.Xml.XmlDictionaryReader)
  spec.csharp:
  - uid: System.Runtime.Serialization.XmlObjectSerializer.IsStartObject(System.Xml.XmlDictionaryReader)
    name: IsStartObject
    nameWithType: XmlObjectSerializer.IsStartObject
    fullName: System.Runtime.Serialization.XmlObjectSerializer.IsStartObject
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Xml.XmlDictionaryReader
    name: XmlDictionaryReader
    nameWithType: XmlDictionaryReader
    fullName: System.Xml.XmlDictionaryReader
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Runtime.Serialization.XmlObjectSerializer.IsStartObject(System.Xml.XmlDictionaryReader)
    name: IsStartObject
    nameWithType: XmlObjectSerializer.IsStartObject
    fullName: System.Runtime.Serialization.XmlObjectSerializer.IsStartObject
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Xml.XmlDictionaryReader
    name: XmlDictionaryReader
    nameWithType: XmlDictionaryReader
    fullName: System.Xml.XmlDictionaryReader
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Xml.XmlDictionaryReader
  commentId: T:System.Xml.XmlDictionaryReader
  parent: System.Xml
  isExternal: false
  name: Xml.XmlDictionaryReader
  nameWithType: Xml.XmlDictionaryReader
  fullName: System.Xml.XmlDictionaryReader
- uid: System.Runtime.Serialization.XmlObjectSerializer.IsStartObject(System.Xml.XmlReader)
  commentId: M:System.Runtime.Serialization.XmlObjectSerializer.IsStartObject(System.Xml.XmlReader)
  parent: System.Runtime.Serialization.XmlObjectSerializer
  isExternal: true
  name: IsStartObject(XmlReader)
  nameWithType: XmlObjectSerializer.IsStartObject(XmlReader)
  fullName: System.Runtime.Serialization.XmlObjectSerializer.IsStartObject(System.Xml.XmlReader)
  spec.csharp:
  - uid: System.Runtime.Serialization.XmlObjectSerializer.IsStartObject(System.Xml.XmlReader)
    name: IsStartObject
    nameWithType: XmlObjectSerializer.IsStartObject
    fullName: System.Runtime.Serialization.XmlObjectSerializer.IsStartObject
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Xml.XmlReader
    name: XmlReader
    nameWithType: XmlReader
    fullName: System.Xml.XmlReader
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Runtime.Serialization.XmlObjectSerializer.IsStartObject(System.Xml.XmlReader)
    name: IsStartObject
    nameWithType: XmlObjectSerializer.IsStartObject
    fullName: System.Runtime.Serialization.XmlObjectSerializer.IsStartObject
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Xml.XmlReader
    name: XmlReader
    nameWithType: XmlReader
    fullName: System.Xml.XmlReader
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Xml.XmlReader
  commentId: T:System.Xml.XmlReader
  parent: System.Xml
  isExternal: false
  name: Xml.XmlReader
  nameWithType: Xml.XmlReader
  fullName: System.Xml.XmlReader
- uid: System.Runtime.Serialization.XmlObjectSerializer.ReadObject(System.Xml.XmlDictionaryReader,System.Boolean)
  commentId: M:System.Runtime.Serialization.XmlObjectSerializer.ReadObject(System.Xml.XmlDictionaryReader,System.Boolean)
  parent: System.Runtime.Serialization.XmlObjectSerializer
  isExternal: true
  name: ReadObject(XmlDictionaryReader, Boolean)
  nameWithType: XmlObjectSerializer.ReadObject(XmlDictionaryReader, Boolean)
  fullName: System.Runtime.Serialization.XmlObjectSerializer.ReadObject(System.Xml.XmlDictionaryReader, System.Boolean)
  spec.csharp:
  - uid: System.Runtime.Serialization.XmlObjectSerializer.ReadObject(System.Xml.XmlDictionaryReader,System.Boolean)
    name: ReadObject
    nameWithType: XmlObjectSerializer.ReadObject
    fullName: System.Runtime.Serialization.XmlObjectSerializer.ReadObject
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Xml.XmlDictionaryReader
    name: XmlDictionaryReader
    nameWithType: XmlDictionaryReader
    fullName: System.Xml.XmlDictionaryReader
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Runtime.Serialization.XmlObjectSerializer.ReadObject(System.Xml.XmlDictionaryReader,System.Boolean)
    name: ReadObject
    nameWithType: XmlObjectSerializer.ReadObject
    fullName: System.Runtime.Serialization.XmlObjectSerializer.ReadObject
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Xml.XmlDictionaryReader
    name: XmlDictionaryReader
    nameWithType: XmlDictionaryReader
    fullName: System.Xml.XmlDictionaryReader
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Runtime.Serialization.XmlObjectSerializer.ReadObject(System.Xml.XmlReader)
  commentId: M:System.Runtime.Serialization.XmlObjectSerializer.ReadObject(System.Xml.XmlReader)
  parent: System.Runtime.Serialization.XmlObjectSerializer
  isExternal: true
  name: ReadObject(XmlReader)
  nameWithType: XmlObjectSerializer.ReadObject(XmlReader)
  fullName: System.Runtime.Serialization.XmlObjectSerializer.ReadObject(System.Xml.XmlReader)
  spec.csharp:
  - uid: System.Runtime.Serialization.XmlObjectSerializer.ReadObject(System.Xml.XmlReader)
    name: ReadObject
    nameWithType: XmlObjectSerializer.ReadObject
    fullName: System.Runtime.Serialization.XmlObjectSerializer.ReadObject
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Xml.XmlReader
    name: XmlReader
    nameWithType: XmlReader
    fullName: System.Xml.XmlReader
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Runtime.Serialization.XmlObjectSerializer.ReadObject(System.Xml.XmlReader)
    name: ReadObject
    nameWithType: XmlObjectSerializer.ReadObject
    fullName: System.Runtime.Serialization.XmlObjectSerializer.ReadObject
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Xml.XmlReader
    name: XmlReader
    nameWithType: XmlReader
    fullName: System.Xml.XmlReader
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Runtime.Serialization.XmlObjectSerializer.ReadObject(System.Xml.XmlReader,System.Boolean)
  commentId: M:System.Runtime.Serialization.XmlObjectSerializer.ReadObject(System.Xml.XmlReader,System.Boolean)
  parent: System.Runtime.Serialization.XmlObjectSerializer
  isExternal: true
  name: ReadObject(XmlReader, Boolean)
  nameWithType: XmlObjectSerializer.ReadObject(XmlReader, Boolean)
  fullName: System.Runtime.Serialization.XmlObjectSerializer.ReadObject(System.Xml.XmlReader, System.Boolean)
  spec.csharp:
  - uid: System.Runtime.Serialization.XmlObjectSerializer.ReadObject(System.Xml.XmlReader,System.Boolean)
    name: ReadObject
    nameWithType: XmlObjectSerializer.ReadObject
    fullName: System.Runtime.Serialization.XmlObjectSerializer.ReadObject
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Xml.XmlReader
    name: XmlReader
    nameWithType: XmlReader
    fullName: System.Xml.XmlReader
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Runtime.Serialization.XmlObjectSerializer.ReadObject(System.Xml.XmlReader,System.Boolean)
    name: ReadObject
    nameWithType: XmlObjectSerializer.ReadObject
    fullName: System.Runtime.Serialization.XmlObjectSerializer.ReadObject
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Xml.XmlReader
    name: XmlReader
    nameWithType: XmlReader
    fullName: System.Xml.XmlReader
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Runtime.Serialization.XmlObjectSerializer.WriteEndObject(System.Xml.XmlDictionaryWriter)
  commentId: M:System.Runtime.Serialization.XmlObjectSerializer.WriteEndObject(System.Xml.XmlDictionaryWriter)
  parent: System.Runtime.Serialization.XmlObjectSerializer
  isExternal: false
  name: WriteEndObject(XmlDictionaryWriter)
  nameWithType: XmlObjectSerializer.WriteEndObject(XmlDictionaryWriter)
  fullName: System.Runtime.Serialization.XmlObjectSerializer.WriteEndObject(System.Xml.XmlDictionaryWriter)
  spec.csharp:
  - uid: System.Runtime.Serialization.XmlObjectSerializer.WriteEndObject(System.Xml.XmlDictionaryWriter)
    name: WriteEndObject
    nameWithType: XmlObjectSerializer.WriteEndObject
    fullName: System.Runtime.Serialization.XmlObjectSerializer.WriteEndObject
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Xml.XmlDictionaryWriter
    name: XmlDictionaryWriter
    nameWithType: XmlDictionaryWriter
    fullName: System.Xml.XmlDictionaryWriter
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Runtime.Serialization.XmlObjectSerializer.WriteEndObject(System.Xml.XmlDictionaryWriter)
    name: WriteEndObject
    nameWithType: XmlObjectSerializer.WriteEndObject
    fullName: System.Runtime.Serialization.XmlObjectSerializer.WriteEndObject
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Xml.XmlDictionaryWriter
    name: XmlDictionaryWriter
    nameWithType: XmlDictionaryWriter
    fullName: System.Xml.XmlDictionaryWriter
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Xml.XmlDictionaryWriter
  commentId: T:System.Xml.XmlDictionaryWriter
  parent: System.Xml
  isExternal: false
  name: Xml.XmlDictionaryWriter
  nameWithType: Xml.XmlDictionaryWriter
  fullName: System.Xml.XmlDictionaryWriter
- uid: System.Runtime.Serialization.XmlObjectSerializer.WriteEndObject(System.Xml.XmlWriter)
  commentId: M:System.Runtime.Serialization.XmlObjectSerializer.WriteEndObject(System.Xml.XmlWriter)
  parent: System.Runtime.Serialization.XmlObjectSerializer
  isExternal: true
  name: WriteEndObject(XmlWriter)
  nameWithType: XmlObjectSerializer.WriteEndObject(XmlWriter)
  fullName: System.Runtime.Serialization.XmlObjectSerializer.WriteEndObject(System.Xml.XmlWriter)
  spec.csharp:
  - uid: System.Runtime.Serialization.XmlObjectSerializer.WriteEndObject(System.Xml.XmlWriter)
    name: WriteEndObject
    nameWithType: XmlObjectSerializer.WriteEndObject
    fullName: System.Runtime.Serialization.XmlObjectSerializer.WriteEndObject
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Xml.XmlWriter
    name: XmlWriter
    nameWithType: XmlWriter
    fullName: System.Xml.XmlWriter
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Runtime.Serialization.XmlObjectSerializer.WriteEndObject(System.Xml.XmlWriter)
    name: WriteEndObject
    nameWithType: XmlObjectSerializer.WriteEndObject
    fullName: System.Runtime.Serialization.XmlObjectSerializer.WriteEndObject
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Xml.XmlWriter
    name: XmlWriter
    nameWithType: XmlWriter
    fullName: System.Xml.XmlWriter
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Xml.XmlWriter
  commentId: T:System.Xml.XmlWriter
  parent: System.Xml
  isExternal: false
  name: Xml.XmlWriter
  nameWithType: Xml.XmlWriter
  fullName: System.Xml.XmlWriter
- uid: System.Runtime.Serialization.XmlObjectSerializer.WriteObject(System.Xml.XmlWriter,System.Object)
  commentId: M:System.Runtime.Serialization.XmlObjectSerializer.WriteObject(System.Xml.XmlWriter,System.Object)
  parent: System.Runtime.Serialization.XmlObjectSerializer
  isExternal: true
  name: WriteObject(XmlWriter, Object)
  nameWithType: XmlObjectSerializer.WriteObject(XmlWriter, Object)
  fullName: System.Runtime.Serialization.XmlObjectSerializer.WriteObject(System.Xml.XmlWriter, System.Object)
  spec.csharp:
  - uid: System.Runtime.Serialization.XmlObjectSerializer.WriteObject(System.Xml.XmlWriter,System.Object)
    name: WriteObject
    nameWithType: XmlObjectSerializer.WriteObject
    fullName: System.Runtime.Serialization.XmlObjectSerializer.WriteObject
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Xml.XmlWriter
    name: XmlWriter
    nameWithType: XmlWriter
    fullName: System.Xml.XmlWriter
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Runtime.Serialization.XmlObjectSerializer.WriteObject(System.Xml.XmlWriter,System.Object)
    name: WriteObject
    nameWithType: XmlObjectSerializer.WriteObject
    fullName: System.Runtime.Serialization.XmlObjectSerializer.WriteObject
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Xml.XmlWriter
    name: XmlWriter
    nameWithType: XmlWriter
    fullName: System.Xml.XmlWriter
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Runtime.Serialization.XmlObjectSerializer.WriteObjectContent(System.Xml.XmlDictionaryWriter,System.Object)
  commentId: M:System.Runtime.Serialization.XmlObjectSerializer.WriteObjectContent(System.Xml.XmlDictionaryWriter,System.Object)
  parent: System.Runtime.Serialization.XmlObjectSerializer
  isExternal: true
  name: WriteObjectContent(XmlDictionaryWriter, Object)
  nameWithType: XmlObjectSerializer.WriteObjectContent(XmlDictionaryWriter, Object)
  fullName: System.Runtime.Serialization.XmlObjectSerializer.WriteObjectContent(System.Xml.XmlDictionaryWriter, System.Object)
  spec.csharp:
  - uid: System.Runtime.Serialization.XmlObjectSerializer.WriteObjectContent(System.Xml.XmlDictionaryWriter,System.Object)
    name: WriteObjectContent
    nameWithType: XmlObjectSerializer.WriteObjectContent
    fullName: System.Runtime.Serialization.XmlObjectSerializer.WriteObjectContent
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Xml.XmlDictionaryWriter
    name: XmlDictionaryWriter
    nameWithType: XmlDictionaryWriter
    fullName: System.Xml.XmlDictionaryWriter
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Runtime.Serialization.XmlObjectSerializer.WriteObjectContent(System.Xml.XmlDictionaryWriter,System.Object)
    name: WriteObjectContent
    nameWithType: XmlObjectSerializer.WriteObjectContent
    fullName: System.Runtime.Serialization.XmlObjectSerializer.WriteObjectContent
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Xml.XmlDictionaryWriter
    name: XmlDictionaryWriter
    nameWithType: XmlDictionaryWriter
    fullName: System.Xml.XmlDictionaryWriter
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Runtime.Serialization.XmlObjectSerializer.WriteObjectContent(System.Xml.XmlWriter,System.Object)
  commentId: M:System.Runtime.Serialization.XmlObjectSerializer.WriteObjectContent(System.Xml.XmlWriter,System.Object)
  parent: System.Runtime.Serialization.XmlObjectSerializer
  isExternal: true
  name: WriteObjectContent(XmlWriter, Object)
  nameWithType: XmlObjectSerializer.WriteObjectContent(XmlWriter, Object)
  fullName: System.Runtime.Serialization.XmlObjectSerializer.WriteObjectContent(System.Xml.XmlWriter, System.Object)
  spec.csharp:
  - uid: System.Runtime.Serialization.XmlObjectSerializer.WriteObjectContent(System.Xml.XmlWriter,System.Object)
    name: WriteObjectContent
    nameWithType: XmlObjectSerializer.WriteObjectContent
    fullName: System.Runtime.Serialization.XmlObjectSerializer.WriteObjectContent
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Xml.XmlWriter
    name: XmlWriter
    nameWithType: XmlWriter
    fullName: System.Xml.XmlWriter
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Runtime.Serialization.XmlObjectSerializer.WriteObjectContent(System.Xml.XmlWriter,System.Object)
    name: WriteObjectContent
    nameWithType: XmlObjectSerializer.WriteObjectContent
    fullName: System.Runtime.Serialization.XmlObjectSerializer.WriteObjectContent
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Xml.XmlWriter
    name: XmlWriter
    nameWithType: XmlWriter
    fullName: System.Xml.XmlWriter
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Runtime.Serialization.XmlObjectSerializer.WriteStartObject(System.Xml.XmlDictionaryWriter,System.Object)
  commentId: M:System.Runtime.Serialization.XmlObjectSerializer.WriteStartObject(System.Xml.XmlDictionaryWriter,System.Object)
  parent: System.Runtime.Serialization.XmlObjectSerializer
  isExternal: true
  name: WriteStartObject(XmlDictionaryWriter, Object)
  nameWithType: XmlObjectSerializer.WriteStartObject(XmlDictionaryWriter, Object)
  fullName: System.Runtime.Serialization.XmlObjectSerializer.WriteStartObject(System.Xml.XmlDictionaryWriter, System.Object)
  spec.csharp:
  - uid: System.Runtime.Serialization.XmlObjectSerializer.WriteStartObject(System.Xml.XmlDictionaryWriter,System.Object)
    name: WriteStartObject
    nameWithType: XmlObjectSerializer.WriteStartObject
    fullName: System.Runtime.Serialization.XmlObjectSerializer.WriteStartObject
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Xml.XmlDictionaryWriter
    name: XmlDictionaryWriter
    nameWithType: XmlDictionaryWriter
    fullName: System.Xml.XmlDictionaryWriter
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Runtime.Serialization.XmlObjectSerializer.WriteStartObject(System.Xml.XmlDictionaryWriter,System.Object)
    name: WriteStartObject
    nameWithType: XmlObjectSerializer.WriteStartObject
    fullName: System.Runtime.Serialization.XmlObjectSerializer.WriteStartObject
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Xml.XmlDictionaryWriter
    name: XmlDictionaryWriter
    nameWithType: XmlDictionaryWriter
    fullName: System.Xml.XmlDictionaryWriter
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Runtime.Serialization.XmlObjectSerializer.WriteStartObject(System.Xml.XmlWriter,System.Object)
  commentId: M:System.Runtime.Serialization.XmlObjectSerializer.WriteStartObject(System.Xml.XmlWriter,System.Object)
  parent: System.Runtime.Serialization.XmlObjectSerializer
  isExternal: true
  name: WriteStartObject(XmlWriter, Object)
  nameWithType: XmlObjectSerializer.WriteStartObject(XmlWriter, Object)
  fullName: System.Runtime.Serialization.XmlObjectSerializer.WriteStartObject(System.Xml.XmlWriter, System.Object)
  spec.csharp:
  - uid: System.Runtime.Serialization.XmlObjectSerializer.WriteStartObject(System.Xml.XmlWriter,System.Object)
    name: WriteStartObject
    nameWithType: XmlObjectSerializer.WriteStartObject
    fullName: System.Runtime.Serialization.XmlObjectSerializer.WriteStartObject
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Xml.XmlWriter
    name: XmlWriter
    nameWithType: XmlWriter
    fullName: System.Xml.XmlWriter
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Runtime.Serialization.XmlObjectSerializer.WriteStartObject(System.Xml.XmlWriter,System.Object)
    name: WriteStartObject
    nameWithType: XmlObjectSerializer.WriteStartObject
    fullName: System.Runtime.Serialization.XmlObjectSerializer.WriteStartObject
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Xml.XmlWriter
    name: XmlWriter
    nameWithType: XmlWriter
    fullName: System.Xml.XmlWriter
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.ArgumentOutOfRangeException
  commentId: T:System.ArgumentOutOfRangeException
  isExternal: false
  name: ArgumentOutOfRangeException
  nameWithType: ArgumentOutOfRangeException
  fullName: System.ArgumentOutOfRangeException
- uid: System.Runtime.Serialization.SerializationException
  commentId: T:System.Runtime.Serialization.SerializationException
  isExternal: false
  name: SerializationException
  nameWithType: SerializationException
  fullName: System.Runtime.Serialization.SerializationException
- uid: System.Runtime.Serialization.InvalidDataContractException
  commentId: T:System.Runtime.Serialization.InvalidDataContractException
  isExternal: false
  name: InvalidDataContractException
  nameWithType: InvalidDataContractException
  fullName: System.Runtime.Serialization.InvalidDataContractException
