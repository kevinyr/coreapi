### YamlMime:ManagedReference
items:
- uid: System.Decimal
  commentId: T:System.Decimal
  id: Decimal
  parent: System
  children:
  - System.Decimal.#ctor(System.Double)
  - System.Decimal.#ctor(System.Int32)
  - System.Decimal.#ctor(System.Int32,System.Int32,System.Int32,System.Boolean,System.Byte)
  - System.Decimal.#ctor(System.Int32[])
  - System.Decimal.#ctor(System.Int64)
  - System.Decimal.#ctor(System.Single)
  - System.Decimal.#ctor(System.UInt32)
  - System.Decimal.#ctor(System.UInt64)
  - System.Decimal.Add(System.Decimal,System.Decimal)
  - System.Decimal.Ceiling(System.Decimal)
  - System.Decimal.Compare(System.Decimal,System.Decimal)
  - System.Decimal.CompareTo(System.Decimal)
  - System.Decimal.Divide(System.Decimal,System.Decimal)
  - System.Decimal.Equals(System.Decimal)
  - System.Decimal.Equals(System.Decimal,System.Decimal)
  - System.Decimal.Equals(System.Object)
  - System.Decimal.Floor(System.Decimal)
  - System.Decimal.GetBits(System.Decimal)
  - System.Decimal.GetHashCode
  - System.Decimal.MaxValue
  - System.Decimal.MinusOne
  - System.Decimal.MinValue
  - System.Decimal.Multiply(System.Decimal,System.Decimal)
  - System.Decimal.Negate(System.Decimal)
  - System.Decimal.One
  - System.Decimal.op_Addition(System.Decimal,System.Decimal)
  - System.Decimal.op_Decrement(System.Decimal)
  - System.Decimal.op_Division(System.Decimal,System.Decimal)
  - System.Decimal.op_Equality(System.Decimal,System.Decimal)
  - System.Decimal.op_Explicit(System.Decimal)~System.Byte
  - System.Decimal.op_Explicit(System.Decimal)~System.Char
  - System.Decimal.op_Explicit(System.Decimal)~System.Double
  - System.Decimal.op_Explicit(System.Decimal)~System.Int16
  - System.Decimal.op_Explicit(System.Decimal)~System.Int32
  - System.Decimal.op_Explicit(System.Decimal)~System.Int64
  - System.Decimal.op_Explicit(System.Decimal)~System.SByte
  - System.Decimal.op_Explicit(System.Decimal)~System.Single
  - System.Decimal.op_Explicit(System.Decimal)~System.UInt16
  - System.Decimal.op_Explicit(System.Decimal)~System.UInt32
  - System.Decimal.op_Explicit(System.Decimal)~System.UInt64
  - System.Decimal.op_Explicit(System.Double)~System.Decimal
  - System.Decimal.op_Explicit(System.Single)~System.Decimal
  - System.Decimal.op_GreaterThan(System.Decimal,System.Decimal)
  - System.Decimal.op_GreaterThanOrEqual(System.Decimal,System.Decimal)
  - System.Decimal.op_Implicit(System.Byte)~System.Decimal
  - System.Decimal.op_Implicit(System.Char)~System.Decimal
  - System.Decimal.op_Implicit(System.Int16)~System.Decimal
  - System.Decimal.op_Implicit(System.Int32)~System.Decimal
  - System.Decimal.op_Implicit(System.Int64)~System.Decimal
  - System.Decimal.op_Implicit(System.SByte)~System.Decimal
  - System.Decimal.op_Implicit(System.UInt16)~System.Decimal
  - System.Decimal.op_Implicit(System.UInt32)~System.Decimal
  - System.Decimal.op_Implicit(System.UInt64)~System.Decimal
  - System.Decimal.op_Increment(System.Decimal)
  - System.Decimal.op_Inequality(System.Decimal,System.Decimal)
  - System.Decimal.op_LessThan(System.Decimal,System.Decimal)
  - System.Decimal.op_LessThanOrEqual(System.Decimal,System.Decimal)
  - System.Decimal.op_Modulus(System.Decimal,System.Decimal)
  - System.Decimal.op_Multiply(System.Decimal,System.Decimal)
  - System.Decimal.op_Subtraction(System.Decimal,System.Decimal)
  - System.Decimal.op_UnaryNegation(System.Decimal)
  - System.Decimal.op_UnaryPlus(System.Decimal)
  - System.Decimal.Parse(System.String)
  - System.Decimal.Parse(System.String,System.Globalization.NumberStyles)
  - System.Decimal.Parse(System.String,System.Globalization.NumberStyles,System.IFormatProvider)
  - System.Decimal.Parse(System.String,System.IFormatProvider)
  - System.Decimal.Remainder(System.Decimal,System.Decimal)
  - System.Decimal.Subtract(System.Decimal,System.Decimal)
  - System.Decimal.System#IComparable#CompareTo(System.Object)
  - System.Decimal.System#IConvertible#GetTypeCode
  - System.Decimal.System#IConvertible#ToBoolean(System.IFormatProvider)
  - System.Decimal.System#IConvertible#ToByte(System.IFormatProvider)
  - System.Decimal.System#IConvertible#ToChar(System.IFormatProvider)
  - System.Decimal.System#IConvertible#ToDateTime(System.IFormatProvider)
  - System.Decimal.System#IConvertible#ToDecimal(System.IFormatProvider)
  - System.Decimal.System#IConvertible#ToDouble(System.IFormatProvider)
  - System.Decimal.System#IConvertible#ToInt16(System.IFormatProvider)
  - System.Decimal.System#IConvertible#ToInt32(System.IFormatProvider)
  - System.Decimal.System#IConvertible#ToInt64(System.IFormatProvider)
  - System.Decimal.System#IConvertible#ToSByte(System.IFormatProvider)
  - System.Decimal.System#IConvertible#ToSingle(System.IFormatProvider)
  - System.Decimal.System#IConvertible#ToType(System.Type,System.IFormatProvider)
  - System.Decimal.System#IConvertible#ToUInt16(System.IFormatProvider)
  - System.Decimal.System#IConvertible#ToUInt32(System.IFormatProvider)
  - System.Decimal.System#IConvertible#ToUInt64(System.IFormatProvider)
  - System.Decimal.ToByte(System.Decimal)
  - System.Decimal.ToDouble(System.Decimal)
  - System.Decimal.ToInt16(System.Decimal)
  - System.Decimal.ToInt32(System.Decimal)
  - System.Decimal.ToInt64(System.Decimal)
  - System.Decimal.ToSByte(System.Decimal)
  - System.Decimal.ToSingle(System.Decimal)
  - System.Decimal.ToString
  - System.Decimal.ToString(System.IFormatProvider)
  - System.Decimal.ToString(System.String)
  - System.Decimal.ToString(System.String,System.IFormatProvider)
  - System.Decimal.ToUInt16(System.Decimal)
  - System.Decimal.ToUInt32(System.Decimal)
  - System.Decimal.ToUInt64(System.Decimal)
  - System.Decimal.Truncate(System.Decimal)
  - System.Decimal.TryParse(System.String,System.Decimal@)
  - System.Decimal.TryParse(System.String,System.Globalization.NumberStyles,System.IFormatProvider,System.Decimal@)
  - System.Decimal.Zero
  langs:
  - csharp
  - vb
  name: Decimal
  nameWithType: Decimal
  fullName: System.Decimal
  type: Struct
  source:
    remote:
      path: src/mscorlib/src/System/Decimal.cs
      branch: master
      repo: https://github.com/dotnet/coreclr.git
    id: Decimal
    path: src/mscorlib/src/System/Decimal.cs
    startLine: 57
  assemblies:
  - System.Runtime
  namespace: System
  summary: "\n<p>Represents a decimal number.</p>\n"
  syntax:
    content: >-
      [StructLayout(LayoutKind.Sequential)]

      [ComVisible(true)]

      [NonVersionable]

      public struct Decimal : IFormattable, IComparable, IConvertible, IComparable<decimal>, IEquatable<decimal>
    content.vb: >-
      <StructLayout(LayoutKind.Sequential)>

      <ComVisible(True)>

      <NonVersionable>

      Public Structure Decimal
          Implements IFormattable, IComparable, IConvertible, IComparable(Of Decimal), IEquatable(Of Decimal)
  seealso:
  - linkId: System.SByte
    commentId: T:System.SByte
  - linkId: System.Int16
    commentId: T:System.Int16
  - linkId: System.Int32
    commentId: T:System.Int32
  - linkId: System.Int64
    commentId: T:System.Int64
  - linkId: System.Byte
    commentId: T:System.Byte
  - linkId: System.UInt16
    commentId: T:System.UInt16
  - linkId: System.UInt32
    commentId: T:System.UInt32
  - linkId: System.UInt64
    commentId: T:System.UInt64
  - linkId: System.Single
    commentId: T:System.Single
  - linkId: System.Double
    commentId: T:System.Double
  - linkId: System.Char
    commentId: T:System.Char
  implements:
  - System.IComparable
  - System.IComparable{System.Decimal}
  - System.IConvertible
  - System.IEquatable{System.Decimal}
  - System.IFormattable
  inheritedMembers:
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetType
  attributes:
  - type: System.Runtime.InteropServices.StructLayoutAttribute
    ctor: System.Runtime.InteropServices.StructLayoutAttribute.#ctor(System.Runtime.InteropServices.LayoutKind)
    arguments:
    - type: System.Runtime.InteropServices.LayoutKind
      value: 0
  modifiers.csharp:
  - public
  - struct
  modifiers.vb:
  - Public
  - Structure
- uid: System.Decimal.MaxValue
  commentId: F:System.Decimal.MaxValue
  id: MaxValue
  parent: System.Decimal
  langs:
  - csharp
  - vb
  name: MaxValue
  nameWithType: Decimal.MaxValue
  fullName: System.Decimal.MaxValue
  type: Field
  source:
    remote:
      path: src/mscorlib/src/System/Decimal.cs
      branch: master
      repo: https://github.com/dotnet/coreclr.git
    id: MaxValue
    path: src/mscorlib/src/System/Decimal.cs
    startLine: 115
  assemblies:
  - System.Runtime
  namespace: System
  summary: "\n<p>Represents the largest possible value of <xref href=\"System.Decimal\" data-throw-if-not-resolved=\"false\"></xref>. This field is constant and read-only.</p>\n"
  syntax:
    content: public const decimal MaxValue = 79228162514264337593543950335M
    content.vb: Public Const MaxValue As Decimal = 79228162514264337593543950335D
    return:
      type: System.Decimal
  seealso:
  - linkId: System.Decimal.Zero
    commentId: F:System.Decimal.Zero
  - linkId: System.Decimal.One
    commentId: F:System.Decimal.One
  - linkId: System.Decimal.MinusOne
    commentId: F:System.Decimal.MinusOne
  - linkId: System.Decimal.MinValue
    commentId: F:System.Decimal.MinValue
  attributes:
  - type: System.Runtime.CompilerServices.DecimalConstantAttribute
    ctor: System.Runtime.CompilerServices.DecimalConstantAttribute.#ctor(System.Byte,System.Byte,System.UInt32,System.UInt32,System.UInt32)
    arguments:
    - type: System.Byte
      value: 0
    - type: System.Byte
      value: 0
    - type: System.UInt32
      value: "4294967295"
    - type: System.UInt32
      value: "4294967295"
    - type: System.UInt32
      value: "4294967295"
  modifiers.csharp:
  - public
  - static
  - readonly
  modifiers.vb:
  - Public
  - Shared
  - ReadOnly
- uid: System.Decimal.MinusOne
  commentId: F:System.Decimal.MinusOne
  id: MinusOne
  parent: System.Decimal
  langs:
  - csharp
  - vb
  name: MinusOne
  nameWithType: Decimal.MinusOne
  fullName: System.Decimal.MinusOne
  type: Field
  source:
    remote:
      path: src/mscorlib/src/System/Decimal.cs
      branch: master
      repo: https://github.com/dotnet/coreclr.git
    id: MinusOne
    path: src/mscorlib/src/System/Decimal.cs
    startLine: 111
  assemblies:
  - System.Runtime
  namespace: System
  summary: "\n<p>Represents the number negative one (-1).</p>\n"
  syntax:
    content: public const decimal MinusOne = -1M
    content.vb: Public Const MinusOne As Decimal = -1D
    return:
      type: System.Decimal
  seealso:
  - linkId: System.Decimal.Zero
    commentId: F:System.Decimal.Zero
  - linkId: System.Decimal.One
    commentId: F:System.Decimal.One
  - linkId: System.Decimal.MaxValue
    commentId: F:System.Decimal.MaxValue
  - linkId: System.Decimal.MinValue
    commentId: F:System.Decimal.MinValue
  attributes:
  - type: System.Runtime.CompilerServices.DecimalConstantAttribute
    ctor: System.Runtime.CompilerServices.DecimalConstantAttribute.#ctor(System.Byte,System.Byte,System.UInt32,System.UInt32,System.UInt32)
    arguments:
    - type: System.Byte
      value: 0
    - type: System.Byte
      value: 128
    - type: System.UInt32
      value: "0"
    - type: System.UInt32
      value: "0"
    - type: System.UInt32
      value: "1"
  modifiers.csharp:
  - public
  - static
  - readonly
  modifiers.vb:
  - Public
  - Shared
  - ReadOnly
- uid: System.Decimal.MinValue
  commentId: F:System.Decimal.MinValue
  id: MinValue
  parent: System.Decimal
  langs:
  - csharp
  - vb
  name: MinValue
  nameWithType: Decimal.MinValue
  fullName: System.Decimal.MinValue
  type: Field
  source:
    remote:
      path: src/mscorlib/src/System/Decimal.cs
      branch: master
      repo: https://github.com/dotnet/coreclr.git
    id: MinValue
    path: src/mscorlib/src/System/Decimal.cs
    startLine: 119
  assemblies:
  - System.Runtime
  namespace: System
  summary: "\n<p>Represents the smallest possible value of <xref href=\"System.Decimal\" data-throw-if-not-resolved=\"false\"></xref>. This field is constant and read-only.</p>\n"
  syntax:
    content: public const decimal MinValue = -79228162514264337593543950335M
    content.vb: Public Const MinValue As Decimal = -79228162514264337593543950335D
    return:
      type: System.Decimal
  seealso:
  - linkId: System.Decimal.Zero
    commentId: F:System.Decimal.Zero
  - linkId: System.Decimal.One
    commentId: F:System.Decimal.One
  - linkId: System.Decimal.MinusOne
    commentId: F:System.Decimal.MinusOne
  - linkId: System.Decimal.MaxValue
    commentId: F:System.Decimal.MaxValue
  attributes:
  - type: System.Runtime.CompilerServices.DecimalConstantAttribute
    ctor: System.Runtime.CompilerServices.DecimalConstantAttribute.#ctor(System.Byte,System.Byte,System.UInt32,System.UInt32,System.UInt32)
    arguments:
    - type: System.Byte
      value: 0
    - type: System.Byte
      value: 128
    - type: System.UInt32
      value: "4294967295"
    - type: System.UInt32
      value: "4294967295"
    - type: System.UInt32
      value: "4294967295"
  modifiers.csharp:
  - public
  - static
  - readonly
  modifiers.vb:
  - Public
  - Shared
  - ReadOnly
- uid: System.Decimal.One
  commentId: F:System.Decimal.One
  id: One
  parent: System.Decimal
  langs:
  - csharp
  - vb
  name: One
  nameWithType: Decimal.One
  fullName: System.Decimal.One
  type: Field
  source:
    remote:
      path: src/mscorlib/src/System/Decimal.cs
      branch: master
      repo: https://github.com/dotnet/coreclr.git
    id: One
    path: src/mscorlib/src/System/Decimal.cs
    startLine: 108
  assemblies:
  - System.Runtime
  namespace: System
  summary: "\n<p>Represents the number one (1).</p>\n"
  syntax:
    content: public const decimal One = 1M
    content.vb: Public Const One As Decimal = 1D
    return:
      type: System.Decimal
  seealso:
  - linkId: System.Decimal.Zero
    commentId: F:System.Decimal.Zero
  - linkId: System.Decimal.MinusOne
    commentId: F:System.Decimal.MinusOne
  - linkId: System.Decimal.MaxValue
    commentId: F:System.Decimal.MaxValue
  - linkId: System.Decimal.MinValue
    commentId: F:System.Decimal.MinValue
  attributes:
  - type: System.Runtime.CompilerServices.DecimalConstantAttribute
    ctor: System.Runtime.CompilerServices.DecimalConstantAttribute.#ctor(System.Byte,System.Byte,System.UInt32,System.UInt32,System.UInt32)
    arguments:
    - type: System.Byte
      value: 0
    - type: System.Byte
      value: 0
    - type: System.UInt32
      value: "0"
    - type: System.UInt32
      value: "0"
    - type: System.UInt32
      value: "1"
  modifiers.csharp:
  - public
  - static
  - readonly
  modifiers.vb:
  - Public
  - Shared
  - ReadOnly
- uid: System.Decimal.Zero
  commentId: F:System.Decimal.Zero
  id: Zero
  parent: System.Decimal
  langs:
  - csharp
  - vb
  name: Zero
  nameWithType: Decimal.Zero
  fullName: System.Decimal.Zero
  type: Field
  source:
    remote:
      path: src/mscorlib/src/System/Decimal.cs
      branch: master
      repo: https://github.com/dotnet/coreclr.git
    id: Zero
    path: src/mscorlib/src/System/Decimal.cs
    startLine: 105
  assemblies:
  - System.Runtime
  namespace: System
  summary: "\n<p>Represents the number zero (0).</p>\n"
  syntax:
    content: public const decimal Zero = 0M
    content.vb: Public Const Zero As Decimal = 0D
    return:
      type: System.Decimal
  seealso:
  - linkId: System.Decimal.One
    commentId: F:System.Decimal.One
  - linkId: System.Decimal.MinusOne
    commentId: F:System.Decimal.MinusOne
  - linkId: System.Decimal.MaxValue
    commentId: F:System.Decimal.MaxValue
  - linkId: System.Decimal.MinValue
    commentId: F:System.Decimal.MinValue
  attributes:
  - type: System.Runtime.CompilerServices.DecimalConstantAttribute
    ctor: System.Runtime.CompilerServices.DecimalConstantAttribute.#ctor(System.Byte,System.Byte,System.UInt32,System.UInt32,System.UInt32)
    arguments:
    - type: System.Byte
      value: 0
    - type: System.Byte
      value: 0
    - type: System.UInt32
      value: "0"
    - type: System.UInt32
      value: "0"
    - type: System.UInt32
      value: "0"
  modifiers.csharp:
  - public
  - static
  - readonly
  modifiers.vb:
  - Public
  - Shared
  - ReadOnly
- uid: System.Decimal.#ctor(System.Double)
  commentId: M:System.Decimal.#ctor(System.Double)
  id: '#ctor(System.Double)'
  parent: System.Decimal
  langs:
  - csharp
  - vb
  name: Decimal(Double)
  nameWithType: Decimal.Decimal(Double)
  fullName: System.Decimal.Decimal(System.Double)
  type: Constructor
  source:
    path: System.Private.CoreLib
    isExternal: true
  assemblies:
  - System.Runtime
  namespace: System
  summary: "\n<p>Initializes a new instance of <xref href=\"System.Decimal\" data-throw-if-not-resolved=\"false\"></xref> to the value of the specified double-precision floating-point number.</p>\n"
  syntax:
    content: >-
      [SecuritySafeCritical]

      [MethodImpl(MethodImplOptions.InternalCall)]

      public Decimal(double value)
    content.vb: >-
      <SecuritySafeCritical>

      <MethodImpl(MethodImplOptions.InternalCall)>

      Public Sub New(value As Double)
    parameters:
    - id: value
      type: System.Double
      description: "\n<p>The value to represent as a <xref href=\"System.Decimal\" data-throw-if-not-resolved=\"false\"></xref>. </p>\n"
  exceptions:
  - type: System.OverflowException
    commentId: T:System.OverflowException
    description: "\n<p>\n<em>value</em> is greater than <xref href=\"System.Decimal.MaxValue\" data-throw-if-not-resolved=\"false\"></xref> or less than <xref href=\"System.Decimal.MinValue\" data-throw-if-not-resolved=\"false\"></xref>.</p>\n<p>-or- </p>\n<p>\n<em>value</em> is <xref href=\"System.Double.NaN\" data-throw-if-not-resolved=\"false\"></xref>, <xref href=\"System.Double.PositiveInfinity\" data-throw-if-not-resolved=\"false\"></xref>, or <xref href=\"System.Double.NegativeInfinity\" data-throw-if-not-resolved=\"false\"></xref>. </p>\n"
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: System.Decimal.#ctor(System.Int32)
  commentId: M:System.Decimal.#ctor(System.Int32)
  id: '#ctor(System.Int32)'
  parent: System.Decimal
  langs:
  - csharp
  - vb
  name: Decimal(Int32)
  nameWithType: Decimal.Decimal(Int32)
  fullName: System.Decimal.Decimal(System.Int32)
  type: Constructor
  source:
    remote:
      path: src/mscorlib/src/System/Decimal.cs
      branch: master
      repo: https://github.com/dotnet/coreclr.git
    id: .ctor
    path: src/mscorlib/src/System/Decimal.cs
    startLine: 157
  assemblies:
  - System.Runtime
  namespace: System
  summary: "\n<p>Initializes a new instance of <xref href=\"System.Decimal\" data-throw-if-not-resolved=\"false\"></xref> to the value of the specified 32-bit signed integer.</p>\n"
  syntax:
    content: public Decimal(int value)
    content.vb: Public Sub New(value As Integer)
    parameters:
    - id: value
      type: System.Int32
      description: "\n<p>The value to represent as a <xref href=\"System.Decimal\" data-throw-if-not-resolved=\"false\"></xref>. </p>\n"
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: System.Decimal.#ctor(System.Int32,System.Int32,System.Int32,System.Boolean,System.Byte)
  commentId: M:System.Decimal.#ctor(System.Int32,System.Int32,System.Int32,System.Boolean,System.Byte)
  id: '#ctor(System.Int32,System.Int32,System.Int32,System.Boolean,System.Byte)'
  parent: System.Decimal
  langs:
  - csharp
  - vb
  name: Decimal(Int32, Int32, Int32, Boolean, Byte)
  nameWithType: Decimal.Decimal(Int32, Int32, Int32, Boolean, Byte)
  fullName: System.Decimal.Decimal(System.Int32, System.Int32, System.Int32, System.Boolean, System.Byte)
  type: Constructor
  source:
    remote:
      path: src/mscorlib/src/System/Decimal.cs
      branch: master
      repo: https://github.com/dotnet/coreclr.git
    id: .ctor
    path: src/mscorlib/src/System/Decimal.cs
    startLine: 288
  assemblies:
  - System.Runtime
  namespace: System
  summary: "\n<p>Initializes a new instance of <xref href=\"System.Decimal\" data-throw-if-not-resolved=\"false\"></xref> from parameters specifying the instance's constituent parts.</p>\n"
  syntax:
    content: public Decimal(int lo, int mid, int hi, bool isNegative, byte scale)
    content.vb: Public Sub New(lo As Integer, mid As Integer, hi As Integer, isNegative As Boolean, scale As Byte)
    parameters:
    - id: lo
      type: System.Int32
      description: "\n<p>The low 32 bits of a 96-bit integer. </p>\n"
    - id: mid
      type: System.Int32
      description: "\n<p>The middle 32 bits of a 96-bit integer. </p>\n"
    - id: hi
      type: System.Int32
      description: "\n<p>The high 32 bits of a 96-bit integer. </p>\n"
    - id: isNegative
      type: System.Boolean
      description: "\n<p>\n<strong>true</strong> to indicate a negative number; <strong>false</strong> to indicate a positive number. </p>\n"
    - id: scale
      type: System.Byte
      description: "\n<p>A power of 10 ranging from 0 to 28. </p>\n"
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "\n<p>\n<em>scale</em> is greater than 28. </p>\n"
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: System.Decimal.#ctor(System.Int32[])
  commentId: M:System.Decimal.#ctor(System.Int32[])
  id: '#ctor(System.Int32[])'
  parent: System.Decimal
  langs:
  - csharp
  - vb
  name: Decimal(Int32[])
  nameWithType: Decimal.Decimal(Int32[])
  fullName: System.Decimal.Decimal(System.Int32[])
  type: Constructor
  source:
    remote:
      path: src/mscorlib/src/System/Decimal.cs
      branch: master
      repo: https://github.com/dotnet/coreclr.git
    id: .ctor
    path: src/mscorlib/src/System/Decimal.cs
    startLine: 261
  assemblies:
  - System.Runtime
  namespace: System
  summary: "\n<p>Initializes a new instance of <xref href=\"System.Decimal\" data-throw-if-not-resolved=\"false\"></xref> to a decimal value represented in binary and contained in a specified array.</p>\n"
  syntax:
    content: public Decimal(int[] bits)
    content.vb: Public Sub New(bits As Integer())
    parameters:
    - id: bits
      type: System.Int32[]
      description: "\n<p>An array of 32-bit signed integers containing a representation of a decimal value. </p>\n"
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "\n<p>\n<em>bits</em> is <strong>null</strong>. </p>\n"
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "\n<p>The length of the <em>bits</em> is not 4.</p>\n<p>-or- </p>\n<p>The representation of the decimal value in <em>bits</em> is not valid. </p>\n"
  seealso:
  - linkId: System.Decimal.GetBits(System.Decimal)
    commentId: M:System.Decimal.GetBits(System.Decimal)
  nameWithType.vb: Decimal.Decimal(Int32())
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: System.Decimal.Decimal(System.Int32())
  name.vb: Decimal(Int32())
- uid: System.Decimal.#ctor(System.Int64)
  commentId: M:System.Decimal.#ctor(System.Int64)
  id: '#ctor(System.Int64)'
  parent: System.Decimal
  langs:
  - csharp
  - vb
  name: Decimal(Int64)
  nameWithType: Decimal.Decimal(Int64)
  fullName: System.Decimal.Decimal(System.Int64)
  type: Constructor
  source:
    remote:
      path: src/mscorlib/src/System/Decimal.cs
      branch: master
      repo: https://github.com/dotnet/coreclr.git
    id: .ctor
    path: src/mscorlib/src/System/Decimal.cs
    startLine: 185
  assemblies:
  - System.Runtime
  namespace: System
  summary: "\n<p>Initializes a new instance of <xref href=\"System.Decimal\" data-throw-if-not-resolved=\"false\"></xref> to the value of the specified 64-bit signed integer.</p>\n"
  syntax:
    content: public Decimal(long value)
    content.vb: Public Sub New(value As Long)
    parameters:
    - id: value
      type: System.Int64
      description: "\n<p>The value to represent as a <xref href=\"System.Decimal\" data-throw-if-not-resolved=\"false\"></xref>. </p>\n"
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: System.Decimal.#ctor(System.Single)
  commentId: M:System.Decimal.#ctor(System.Single)
  id: '#ctor(System.Single)'
  parent: System.Decimal
  langs:
  - csharp
  - vb
  name: Decimal(Single)
  nameWithType: Decimal.Decimal(Single)
  fullName: System.Decimal.Decimal(System.Single)
  type: Constructor
  source:
    path: System.Private.CoreLib
    isExternal: true
  assemblies:
  - System.Runtime
  namespace: System
  summary: "\n<p>Initializes a new instance of <xref href=\"System.Decimal\" data-throw-if-not-resolved=\"false\"></xref> to the value of the specified single-precision floating-point number.</p>\n"
  syntax:
    content: >-
      [SecuritySafeCritical]

      [MethodImpl(MethodImplOptions.InternalCall)]

      public Decimal(float value)
    content.vb: >-
      <SecuritySafeCritical>

      <MethodImpl(MethodImplOptions.InternalCall)>

      Public Sub New(value As Single)
    parameters:
    - id: value
      type: System.Single
      description: "\n<p>The value to represent as a <xref href=\"System.Decimal\" data-throw-if-not-resolved=\"false\"></xref>. </p>\n"
  exceptions:
  - type: System.OverflowException
    commentId: T:System.OverflowException
    description: "\n<p>\n<em>value</em> is greater than <xref href=\"System.Decimal.MaxValue\" data-throw-if-not-resolved=\"false\"></xref> or less than <xref href=\"System.Decimal.MinValue\" data-throw-if-not-resolved=\"false\"></xref>.</p>\n<p>-or- </p>\n<p>\n<em>value</em> is <xref href=\"System.Single.NaN\" data-throw-if-not-resolved=\"false\"></xref>, <xref href=\"System.Single.PositiveInfinity\" data-throw-if-not-resolved=\"false\"></xref>, or <xref href=\"System.Single.NegativeInfinity\" data-throw-if-not-resolved=\"false\"></xref>. </p>\n"
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: System.Decimal.#ctor(System.UInt32)
  commentId: M:System.Decimal.#ctor(System.UInt32)
  id: '#ctor(System.UInt32)'
  parent: System.Decimal
  langs:
  - csharp
  - vb
  name: Decimal(UInt32)
  nameWithType: Decimal.Decimal(UInt32)
  fullName: System.Decimal.Decimal(System.UInt32)
  type: Constructor
  source:
    remote:
      path: src/mscorlib/src/System/Decimal.cs
      branch: master
      repo: https://github.com/dotnet/coreclr.git
    id: .ctor
    path: src/mscorlib/src/System/Decimal.cs
    startLine: 175
  assemblies:
  - System.Runtime
  namespace: System
  summary: "\n<p>Initializes a new instance of <xref href=\"System.Decimal\" data-throw-if-not-resolved=\"false\"></xref> to the value of the specified 32-bit unsigned integer.</p>\n"
  syntax:
    content: >-
      [CLSCompliant(false)]

      public Decimal(uint value)
    content.vb: >-
      <CLSCompliant(False)>

      Public Sub New(value As UInteger)
    parameters:
    - id: value
      type: System.UInt32
      description: "\n<p>The value to represent as a <xref href=\"System.Decimal\" data-throw-if-not-resolved=\"false\"></xref>. </p>\n"
  attributes:
  - type: System.CLSCompliantAttribute
    ctor: System.CLSCompliantAttribute.#ctor(System.Boolean)
    arguments:
    - type: System.Boolean
      value: false
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: System.Decimal.#ctor(System.UInt64)
  commentId: M:System.Decimal.#ctor(System.UInt64)
  id: '#ctor(System.UInt64)'
  parent: System.Decimal
  langs:
  - csharp
  - vb
  name: Decimal(UInt64)
  nameWithType: Decimal.Decimal(UInt64)
  fullName: System.Decimal.Decimal(System.UInt64)
  type: Constructor
  source:
    remote:
      path: src/mscorlib/src/System/Decimal.cs
      branch: master
      repo: https://github.com/dotnet/coreclr.git
    id: .ctor
    path: src/mscorlib/src/System/Decimal.cs
    startLine: 203
  assemblies:
  - System.Runtime
  namespace: System
  summary: "\n<p>Initializes a new instance of <xref href=\"System.Decimal\" data-throw-if-not-resolved=\"false\"></xref> to the value of the specified 64-bit unsigned integer.</p>\n"
  syntax:
    content: >-
      [CLSCompliant(false)]

      public Decimal(ulong value)
    content.vb: >-
      <CLSCompliant(False)>

      Public Sub New(value As ULong)
    parameters:
    - id: value
      type: System.UInt64
      description: "\n<p>The value to represent as a <xref href=\"System.Decimal\" data-throw-if-not-resolved=\"false\"></xref>. </p>\n"
  attributes:
  - type: System.CLSCompliantAttribute
    ctor: System.CLSCompliantAttribute.#ctor(System.Boolean)
    arguments:
    - type: System.Boolean
      value: false
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: System.Decimal.Add(System.Decimal,System.Decimal)
  commentId: M:System.Decimal.Add(System.Decimal,System.Decimal)
  id: Add(System.Decimal,System.Decimal)
  parent: System.Decimal
  langs:
  - csharp
  - vb
  name: Add(Decimal, Decimal)
  nameWithType: Decimal.Add(Decimal, Decimal)
  fullName: System.Decimal.Add(System.Decimal, System.Decimal)
  type: Method
  source:
    remote:
      path: src/mscorlib/src/System/Decimal.cs
      branch: master
      repo: https://github.com/dotnet/coreclr.git
    id: Add
    path: src/mscorlib/src/System/Decimal.cs
    startLine: 344
  assemblies:
  - System.Runtime
  namespace: System
  summary: "\n<p>Adds two specified <xref href=\"System.Decimal\" data-throw-if-not-resolved=\"false\"></xref> values.</p>\n"
  syntax:
    content: >-
      [SecuritySafeCritical]

      public static decimal Add(decimal d1, decimal d2)
    content.vb: >-
      <SecuritySafeCritical>

      Public Shared Function Add(d1 As Decimal, d2 As Decimal) As Decimal
    parameters:
    - id: d1
      type: System.Decimal
      description: "\n<p>The first value to add. </p>\n"
    - id: d2
      type: System.Decimal
      description: "\n<p>The second value to add. </p>\n"
    return:
      type: System.Decimal
      description: "\n<p>The sum of <em>d1</em> and <em>d2</em>.</p>\n"
  exceptions:
  - type: System.OverflowException
    commentId: T:System.OverflowException
    description: "\n<p>The sum of <em>d1</em> and <em>d2</em> is less than <xref href=\"System.Decimal.MinValue\" data-throw-if-not-resolved=\"false\"></xref> or greater than <xref href=\"System.Decimal.MaxValue\" data-throw-if-not-resolved=\"false\"></xref>. </p>\n"
  seealso:
  - linkId: System.Decimal.Subtract(System.Decimal,System.Decimal)
    commentId: M:System.Decimal.Subtract(System.Decimal,System.Decimal)
  - linkId: System.Decimal.Multiply(System.Decimal,System.Decimal)
    commentId: M:System.Decimal.Multiply(System.Decimal,System.Decimal)
  - linkId: System.Decimal.Divide(System.Decimal,System.Decimal)
    commentId: M:System.Decimal.Divide(System.Decimal,System.Decimal)
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: System.Decimal.Ceiling(System.Decimal)
  commentId: M:System.Decimal.Ceiling(System.Decimal)
  id: Ceiling(System.Decimal)
  parent: System.Decimal
  langs:
  - csharp
  - vb
  name: Ceiling(Decimal)
  nameWithType: Decimal.Ceiling(Decimal)
  fullName: System.Decimal.Ceiling(System.Decimal)
  type: Method
  source:
    remote:
      path: src/mscorlib/src/System/Decimal.cs
      branch: master
      repo: https://github.com/dotnet/coreclr.git
    id: Ceiling
    path: src/mscorlib/src/System/Decimal.cs
    startLine: 365
  assemblies:
  - System.Runtime
  namespace: System
  summary: "\n<p>Returns the smallest integral value that is greater than or equal to the specified decimal number.</p>\n"
  syntax:
    content: public static decimal Ceiling(decimal d)
    content.vb: Public Shared Function Ceiling(d As Decimal) As Decimal
    parameters:
    - id: d
      type: System.Decimal
      description: "\n<p>A decimal number. </p>\n"
    return:
      type: System.Decimal
      description: "\n<p>The smallest integral value that is greater than or equal to the <em>d</em> parameter. Note that this method returns a <xref href=\"System.Decimal\" data-throw-if-not-resolved=\"false\"></xref> instead of an integral type.</p>\n"
  seealso:
  - linkId: System.Math.Ceiling(System.Decimal)
    commentId: M:System.Math.Ceiling(System.Decimal)
  - linkId: System.Decimal.Floor(System.Decimal)
    commentId: M:System.Decimal.Floor(System.Decimal)
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: System.Decimal.Compare(System.Decimal,System.Decimal)
  commentId: M:System.Decimal.Compare(System.Decimal,System.Decimal)
  id: Compare(System.Decimal,System.Decimal)
  parent: System.Decimal
  langs:
  - csharp
  - vb
  name: Compare(Decimal, Decimal)
  nameWithType: Decimal.Compare(Decimal, Decimal)
  fullName: System.Decimal.Compare(System.Decimal, System.Decimal)
  type: Method
  source:
    remote:
      path: src/mscorlib/src/System/Decimal.cs
      branch: master
      repo: https://github.com/dotnet/coreclr.git
    id: Compare
    path: src/mscorlib/src/System/Decimal.cs
    startLine: 372
  assemblies:
  - System.Runtime
  namespace: System
  summary: "\n<p>Compares two specified <xref href=\"System.Decimal\" data-throw-if-not-resolved=\"false\"></xref> values.</p>\n"
  syntax:
    content: >-
      [SecuritySafeCritical]

      [ReliabilityContract(Consistency.WillNotCorruptState, Cer.Success)]

      public static int Compare(decimal d1, decimal d2)
    content.vb: >-
      <SecuritySafeCritical>

      <ReliabilityContract(Consistency.WillNotCorruptState, Cer.Success)>

      Public Shared Function Compare(d1 As Decimal, d2 As Decimal) As Integer
    parameters:
    - id: d1
      type: System.Decimal
      description: "\n<p>The first value to compare. </p>\n"
    - id: d2
      type: System.Decimal
      description: "\n<p>The second value to compare. </p>\n"
    return:
      type: System.Int32
      description: "\n<p>A signed number indicating the relative values of <em>d1</em> and <em>d2</em>.</p>\n<p>Return value </p>\n<p>Meaning </p>\n<table><tbody><tr><td>\n<p>Less than zero </p>\n</td><td>\n<p>\n<em>d1</em> is less than <em>d2</em>. </p>\n</td></tr><tr><td>\n<p>Zero </p>\n</td><td>\n<p>\n<em>d1</em> and <em>d2</em> are equal. </p>\n</td></tr><tr><td>\n<p>Greater than zero </p>\n</td><td>\n<p>\n<em>d1</em> is greater than <em>d2</em>. </p>\n</td></tr></tbody></table>\n"
  seealso:
  - linkId: System.Decimal.CompareTo(System.Object)
    commentId: M:System.Decimal.CompareTo(System.Object)
  - linkId: System.Decimal.Equals(System.Object)
    commentId: M:System.Decimal.Equals(System.Object)
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: System.Decimal.CompareTo(System.Decimal)
  commentId: M:System.Decimal.CompareTo(System.Decimal)
  id: CompareTo(System.Decimal)
  parent: System.Decimal
  langs:
  - csharp
  - vb
  name: CompareTo(Decimal)
  nameWithType: Decimal.CompareTo(Decimal)
  fullName: System.Decimal.CompareTo(System.Decimal)
  type: Method
  source:
    remote:
      path: src/mscorlib/src/System/Decimal.cs
      branch: master
      repo: https://github.com/dotnet/coreclr.git
    id: CompareTo
    path: src/mscorlib/src/System/Decimal.cs
    startLine: 401
  assemblies:
  - System.Runtime
  namespace: System
  summary: "\n<p>Compares this instance to a specified <xref href=\"System.Decimal\" data-throw-if-not-resolved=\"false\"></xref> object and returns a comparison of their relative values.</p>\n"
  syntax:
    content: >-
      [SecuritySafeCritical]

      public int CompareTo(decimal value)
    content.vb: >-
      <SecuritySafeCritical>

      Public Function CompareTo(value As Decimal) As Integer
    parameters:
    - id: value
      type: System.Decimal
      description: "\n<p>The object to compare with this instance.</p>\n"
    return:
      type: System.Int32
      description: "\n<p>A signed number indicating the relative values of this instance and <em>value</em>.</p>\n<p>Return value </p>\n<p>Meaning </p>\n<table><tbody><tr><td>\n<p>Less than zero </p>\n</td><td>\n<p>This instance is less than <em>value</em>. </p>\n</td></tr><tr><td>\n<p>Zero </p>\n</td><td>\n<p>This instance is equal to <em>value</em>. </p>\n</td></tr><tr><td>\n<p>Greater than zero </p>\n</td><td>\n<p>This instance is greater than <em>value</em>. </p>\n</td></tr></tbody></table>\n"
  seealso:
  - linkId: System.Decimal.Compare(System.Decimal,System.Decimal)
    commentId: M:System.Decimal.Compare(System.Decimal,System.Decimal)
  - linkId: System.Decimal.Equals(System.Object)
    commentId: M:System.Decimal.Equals(System.Object)
  implements:
  - System.IComparable{System.Decimal}.CompareTo(System.Decimal)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: System.Decimal.Divide(System.Decimal,System.Decimal)
  commentId: M:System.Decimal.Divide(System.Decimal,System.Decimal)
  id: Divide(System.Decimal,System.Decimal)
  parent: System.Decimal
  langs:
  - csharp
  - vb
  name: Divide(Decimal, Decimal)
  nameWithType: Decimal.Divide(Decimal, Decimal)
  fullName: System.Decimal.Divide(System.Decimal, System.Decimal)
  type: Method
  source:
    remote:
      path: src/mscorlib/src/System/Decimal.cs
      branch: master
      repo: https://github.com/dotnet/coreclr.git
    id: Divide
    path: src/mscorlib/src/System/Decimal.cs
    startLine: 409
  assemblies:
  - System.Runtime
  namespace: System
  summary: "\n<p>Divides two specified <xref href=\"System.Decimal\" data-throw-if-not-resolved=\"false\"></xref> values.</p>\n"
  syntax:
    content: >-
      [SecuritySafeCritical]

      public static decimal Divide(decimal d1, decimal d2)
    content.vb: >-
      <SecuritySafeCritical>

      Public Shared Function Divide(d1 As Decimal, d2 As Decimal) As Decimal
    parameters:
    - id: d1
      type: System.Decimal
      description: "\n<p>The dividend. </p>\n"
    - id: d2
      type: System.Decimal
      description: "\n<p>The divisor. </p>\n"
    return:
      type: System.Decimal
      description: "\n<p>The result of dividing <em>d1</em> by <em>d2</em>.</p>\n"
  exceptions:
  - type: System.DivideByZeroException
    commentId: T:System.DivideByZeroException
    description: "\n<p>\n<em>d2</em> is zero. </p>\n"
  - type: System.OverflowException
    commentId: T:System.OverflowException
    description: "\n<p>The return value (that is, the quotient) is less than <xref href=\"System.Decimal.MinValue\" data-throw-if-not-resolved=\"false\"></xref> or greater than <xref href=\"System.Decimal.MaxValue\" data-throw-if-not-resolved=\"false\"></xref>. </p>\n"
  seealso:
  - linkId: System.Decimal.Add(System.Decimal,System.Decimal)
    commentId: M:System.Decimal.Add(System.Decimal,System.Decimal)
  - linkId: System.Decimal.Subtract(System.Decimal,System.Decimal)
    commentId: M:System.Decimal.Subtract(System.Decimal,System.Decimal)
  - linkId: System.Decimal.Multiply(System.Decimal,System.Decimal)
    commentId: M:System.Decimal.Multiply(System.Decimal,System.Decimal)
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: System.Decimal.Equals(System.Decimal)
  commentId: M:System.Decimal.Equals(System.Decimal)
  id: Equals(System.Decimal)
  parent: System.Decimal
  langs:
  - csharp
  - vb
  name: Equals(Decimal)
  nameWithType: Decimal.Equals(Decimal)
  fullName: System.Decimal.Equals(System.Decimal)
  type: Method
  source:
    remote:
      path: src/mscorlib/src/System/Decimal.cs
      branch: master
      repo: https://github.com/dotnet/coreclr.git
    id: Equals
    path: src/mscorlib/src/System/Decimal.cs
    startLine: 441
  assemblies:
  - System.Runtime
  namespace: System
  summary: "\n<p>Returns a value indicating whether this instance and a specified <xref href=\"System.Decimal\" data-throw-if-not-resolved=\"false\"></xref> object represent the same value.</p>\n"
  syntax:
    content: >-
      [SecuritySafeCritical]

      public bool Equals(decimal value)
    content.vb: >-
      <SecuritySafeCritical>

      Public Function Equals(value As Decimal) As Boolean
    parameters:
    - id: value
      type: System.Decimal
      description: "\n<p>An object to compare to this instance.</p>\n"
    return:
      type: System.Boolean
      description: "\n<p>\n<strong>true</strong> if <em>value</em> is equal to this instance; otherwise, <strong>false</strong>.</p>\n"
  seealso:
  - linkId: System.Decimal.Equals(System.Object)
    commentId: M:System.Decimal.Equals(System.Object)
  - linkId: System.Decimal.CompareTo(System.Decimal)
    commentId: M:System.Decimal.CompareTo(System.Decimal)
  - linkId: System.Decimal.Compare(System.Decimal,System.Decimal)
    commentId: M:System.Decimal.Compare(System.Decimal,System.Decimal)
  implements:
  - System.IEquatable{System.Decimal}.Equals(System.Decimal)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: System.Decimal.Equals(System.Decimal,System.Decimal)
  commentId: M:System.Decimal.Equals(System.Decimal,System.Decimal)
  id: Equals(System.Decimal,System.Decimal)
  parent: System.Decimal
  langs:
  - csharp
  - vb
  name: Equals(Decimal, Decimal)
  nameWithType: Decimal.Equals(Decimal, Decimal)
  fullName: System.Decimal.Equals(System.Decimal, System.Decimal)
  type: Method
  source:
    remote:
      path: src/mscorlib/src/System/Decimal.cs
      branch: master
      repo: https://github.com/dotnet/coreclr.git
    id: Equals
    path: src/mscorlib/src/System/Decimal.cs
    startLine: 456
  assemblies:
  - System.Runtime
  namespace: System
  summary: "\n<p>Returns a value indicating whether two specified instances of <xref href=\"System.Decimal\" data-throw-if-not-resolved=\"false\"></xref> represent the same value.</p>\n"
  syntax:
    content: >-
      [SecuritySafeCritical]

      public static bool Equals(decimal d1, decimal d2)
    content.vb: >-
      <SecuritySafeCritical>

      Public Shared Function Equals(d1 As Decimal, d2 As Decimal) As Boolean
    parameters:
    - id: d1
      type: System.Decimal
      description: "\n<p>The first value to compare. </p>\n"
    - id: d2
      type: System.Decimal
      description: "\n<p>The second value to compare. </p>\n"
    return:
      type: System.Boolean
      description: "\n<p>\n<strong>true</strong> if <em>d1</em> and <em>d2</em> are equal; otherwise, <strong>false</strong>.</p>\n"
  seealso:
  - linkId: System.Decimal.Compare(System.Decimal,System.Decimal)
    commentId: M:System.Decimal.Compare(System.Decimal,System.Decimal)
  - linkId: System.Decimal.CompareTo(System.Object)
    commentId: M:System.Decimal.CompareTo(System.Object)
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: System.Decimal.Equals(System.Object)
  commentId: M:System.Decimal.Equals(System.Object)
  id: Equals(System.Object)
  parent: System.Decimal
  langs:
  - csharp
  - vb
  name: Equals(Object)
  nameWithType: Decimal.Equals(Object)
  fullName: System.Decimal.Equals(System.Object)
  type: Method
  source:
    remote:
      path: src/mscorlib/src/System/Decimal.cs
      branch: master
      repo: https://github.com/dotnet/coreclr.git
    id: Equals
    path: src/mscorlib/src/System/Decimal.cs
    startLine: 432
  assemblies:
  - System.Runtime
  namespace: System
  summary: "\n<p>Returns a value indicating whether this instance and a specified <xref href=\"System.Object\" data-throw-if-not-resolved=\"false\"></xref> represent the same type and value.</p>\n"
  syntax:
    content: >-
      [SecuritySafeCritical]

      public override bool Equals(object value)
    content.vb: >-
      <SecuritySafeCritical>

      Public Overrides Function Equals(value As Object) As Boolean
    parameters:
    - id: value
      type: System.Object
      description: "\n<p>The object to compare with this instance. </p>\n"
    return:
      type: System.Boolean
      description: "\n<p>\n<strong>true</strong> if <em>value</em> is a <xref href=\"System.Decimal\" data-throw-if-not-resolved=\"false\"></xref> and equal to this instance; otherwise, <strong>false</strong>.</p>\n"
  overridden: System.ValueType.Equals(System.Object)
  seealso:
  - linkId: System.Decimal.Compare(System.Decimal,System.Decimal)
    commentId: M:System.Decimal.Compare(System.Decimal,System.Decimal)
  - linkId: System.Decimal.CompareTo(System.Object)
    commentId: M:System.Decimal.CompareTo(System.Object)
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
- uid: System.Decimal.Floor(System.Decimal)
  commentId: M:System.Decimal.Floor(System.Decimal)
  id: Floor(System.Decimal)
  parent: System.Decimal
  langs:
  - csharp
  - vb
  name: Floor(Decimal)
  nameWithType: Decimal.Floor(Decimal)
  fullName: System.Decimal.Floor(System.Decimal)
  type: Method
  source:
    remote:
      path: src/mscorlib/src/System/Decimal.cs
      branch: master
      repo: https://github.com/dotnet/coreclr.git
    id: Floor
    path: src/mscorlib/src/System/Decimal.cs
    startLine: 464
  assemblies:
  - System.Runtime
  namespace: System
  summary: "\n<p>Rounds a specified <xref href=\"System.Decimal\" data-throw-if-not-resolved=\"false\"></xref> number to the closest integer toward negative infinity.</p>\n"
  syntax:
    content: >-
      [SecuritySafeCritical]

      public static decimal Floor(decimal d)
    content.vb: >-
      <SecuritySafeCritical>

      Public Shared Function Floor(d As Decimal) As Decimal
    parameters:
    - id: d
      type: System.Decimal
      description: "\n<p>The value to round. </p>\n"
    return:
      type: System.Decimal
      description: "\n<p>If <em>d</em> has a fractional part, the next whole <xref href=\"System.Decimal\" data-throw-if-not-resolved=\"false\"></xref> number toward negative infinity that is less than <em>d</em>.</p>\n<p>-or- </p>\n<p>If <em>d</em> doesn't have a fractional part, <em>d</em> is returned unchanged. Note that the method returns an integral value of type <xref href=\"System.Decimal\" data-throw-if-not-resolved=\"false\"></xref>. </p>\n"
  seealso:
  - linkId: System.Decimal.Round(System.Decimal,System.Int32)
    commentId: M:System.Decimal.Round(System.Decimal,System.Int32)
  - linkId: System.Decimal.Truncate(System.Decimal)
    commentId: M:System.Decimal.Truncate(System.Decimal)
  - linkId: System.Decimal.Ceiling(System.Decimal)
    commentId: M:System.Decimal.Ceiling(System.Decimal)
  - linkId: System.Math.Floor(System.Decimal)
    commentId: M:System.Math.Floor(System.Decimal)
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: System.Decimal.GetBits(System.Decimal)
  commentId: M:System.Decimal.GetBits(System.Decimal)
  id: GetBits(System.Decimal)
  parent: System.Decimal
  langs:
  - csharp
  - vb
  name: GetBits(Decimal)
  nameWithType: Decimal.GetBits(Decimal)
  fullName: System.Decimal.GetBits(System.Decimal)
  type: Method
  source:
    remote:
      path: src/mscorlib/src/System/Decimal.cs
      branch: master
      repo: https://github.com/dotnet/coreclr.git
    id: GetBits
    path: src/mscorlib/src/System/Decimal.cs
    startLine: 549
  assemblies:
  - System.Runtime
  namespace: System
  summary: "\n<p>Converts the value of a specified instance of <xref href=\"System.Decimal\" data-throw-if-not-resolved=\"false\"></xref> to its equivalent binary representation.</p>\n"
  syntax:
    content: public static int[] GetBits(decimal d)
    content.vb: Public Shared Function GetBits(d As Decimal) As Integer()
    parameters:
    - id: d
      type: System.Decimal
      description: "\n<p>The value to convert. </p>\n"
    return:
      type: System.Int32[]
      description: "\n<p>A 32-bit signed integer array with four elements that contain the binary representation of <em>d</em>.</p>\n"
  seealso:
  - linkId: System.Decimal.#ctor(System.Double)
    commentId: M:System.Decimal.#ctor(System.Double)
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: System.Decimal.GetHashCode
  commentId: M:System.Decimal.GetHashCode
  id: GetHashCode
  parent: System.Decimal
  langs:
  - csharp
  - vb
  name: GetHashCode()
  nameWithType: Decimal.GetHashCode()
  fullName: System.Decimal.GetHashCode()
  type: Method
  source:
    path: System.Private.CoreLib
    isExternal: true
  assemblies:
  - System.Runtime
  namespace: System
  summary: "\n<p>Returns the hash code for this instance.</p>\n"
  syntax:
    content: >-
      [SecuritySafeCritical]

      [MethodImpl(MethodImplOptions.InternalCall)]

      public override int GetHashCode()
    content.vb: >-
      <SecuritySafeCritical>

      <MethodImpl(MethodImplOptions.InternalCall)>

      Public Overrides Function GetHashCode As Integer
    return:
      type: System.Int32
      description: "\n<p>A 32-bit signed integer hash code.</p>\n"
  overridden: System.ValueType.GetHashCode
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
- uid: System.Decimal.Multiply(System.Decimal,System.Decimal)
  commentId: M:System.Decimal.Multiply(System.Decimal,System.Decimal)
  id: Multiply(System.Decimal,System.Decimal)
  parent: System.Decimal
  langs:
  - csharp
  - vb
  name: Multiply(Decimal, Decimal)
  nameWithType: Decimal.Multiply(Decimal, Decimal)
  fullName: System.Decimal.Multiply(System.Decimal, System.Decimal)
  type: Method
  source:
    remote:
      path: src/mscorlib/src/System/Decimal.cs
      branch: master
      repo: https://github.com/dotnet/coreclr.git
    id: Multiply
    path: src/mscorlib/src/System/Decimal.cs
    startLine: 718
  assemblies:
  - System.Runtime
  namespace: System
  summary: "\n<p>Multiplies two specified <xref href=\"System.Decimal\" data-throw-if-not-resolved=\"false\"></xref> values.</p>\n"
  syntax:
    content: >-
      [SecuritySafeCritical]

      public static decimal Multiply(decimal d1, decimal d2)
    content.vb: >-
      <SecuritySafeCritical>

      Public Shared Function Multiply(d1 As Decimal, d2 As Decimal) As Decimal
    parameters:
    - id: d1
      type: System.Decimal
      description: "\n<p>The multiplicand. </p>\n"
    - id: d2
      type: System.Decimal
      description: "\n<p>The multiplier. </p>\n"
    return:
      type: System.Decimal
      description: "\n<p>The result of multiplying <em>d1</em> and <em>d2</em>.</p>\n"
  exceptions:
  - type: System.OverflowException
    commentId: T:System.OverflowException
    description: "\n<p>The return value is less than <xref href=\"System.Decimal.MinValue\" data-throw-if-not-resolved=\"false\"></xref> or greater than <xref href=\"System.Decimal.MaxValue\" data-throw-if-not-resolved=\"false\"></xref>. </p>\n"
  seealso:
  - linkId: System.Decimal.Add(System.Decimal,System.Decimal)
    commentId: M:System.Decimal.Add(System.Decimal,System.Decimal)
  - linkId: System.Decimal.Subtract(System.Decimal,System.Decimal)
    commentId: M:System.Decimal.Subtract(System.Decimal,System.Decimal)
  - linkId: System.Decimal.Divide(System.Decimal,System.Decimal)
    commentId: M:System.Decimal.Divide(System.Decimal,System.Decimal)
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: System.Decimal.Negate(System.Decimal)
  commentId: M:System.Decimal.Negate(System.Decimal)
  id: Negate(System.Decimal)
  parent: System.Decimal
  langs:
  - csharp
  - vb
  name: Negate(Decimal)
  nameWithType: Decimal.Negate(Decimal)
  fullName: System.Decimal.Negate(System.Decimal)
  type: Method
  source:
    remote:
      path: src/mscorlib/src/System/Decimal.cs
      branch: master
      repo: https://github.com/dotnet/coreclr.git
    id: Negate
    path: src/mscorlib/src/System/Decimal.cs
    startLine: 739
  assemblies:
  - System.Runtime
  namespace: System
  summary: "\n<p>Returns the result of multiplying the specified <xref href=\"System.Decimal\" data-throw-if-not-resolved=\"false\"></xref> value by negative one.</p>\n"
  syntax:
    content: public static decimal Negate(decimal d)
    content.vb: Public Shared Function Negate(d As Decimal) As Decimal
    parameters:
    - id: d
      type: System.Decimal
      description: "\n<p>The value to negate. </p>\n"
    return:
      type: System.Decimal
      description: "\n<p>A decimal number with the value of <em>d</em>, but the opposite sign.</p>\n<p>-or- </p>\n<p>Zero, if <em>d</em> is zero.</p>\n"
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: System.Decimal.op_Addition(System.Decimal,System.Decimal)
  commentId: M:System.Decimal.op_Addition(System.Decimal,System.Decimal)
  id: op_Addition(System.Decimal,System.Decimal)
  parent: System.Decimal
  langs:
  - csharp
  - vb
  name: Addition(Decimal, Decimal)
  nameWithType: Decimal.Addition(Decimal, Decimal)
  fullName: System.Decimal.Addition(System.Decimal, System.Decimal)
  type: Operator
  source:
    remote:
      path: src/mscorlib/src/System/Decimal.cs
      branch: master
      repo: https://github.com/dotnet/coreclr.git
    id: op_Addition
    path: src/mscorlib/src/System/Decimal.cs
    startLine: 1108
  assemblies:
  - System.Runtime
  namespace: System
  summary: "\n<p>Adds two specified <xref href=\"System.Decimal\" data-throw-if-not-resolved=\"false\"></xref> values.</p>\n"
  syntax:
    content: >-
      [SecuritySafeCritical]

      public static decimal operator +(decimal d1, decimal d2)
    content.vb: >-
      <SecuritySafeCritical>

      Public Shared Operator +(d1 As Decimal, d2 As Decimal) As Decimal
    parameters:
    - id: d1
      type: System.Decimal
      description: "\n<p>The first value to add. </p>\n"
    - id: d2
      type: System.Decimal
      description: "\n<p>The second value to add. </p>\n"
    return:
      type: System.Decimal
      description: "\n<p>The result of adding <em>d1</em> and <em>d2</em>.</p>\n"
  exceptions:
  - type: System.OverflowException
    commentId: T:System.OverflowException
    description: "\n<p>The return value is less than <xref href=\"System.Decimal.MinValue\" data-throw-if-not-resolved=\"false\"></xref> or greater than <xref href=\"System.Decimal.MaxValue\" data-throw-if-not-resolved=\"false\"></xref>. </p>\n"
  seealso:
  - linkId: System.Decimal.Add(System.Decimal,System.Decimal)
    commentId: M:System.Decimal.Add(System.Decimal,System.Decimal)
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: System.Decimal.op_Decrement(System.Decimal)
  commentId: M:System.Decimal.op_Decrement(System.Decimal)
  id: op_Decrement(System.Decimal)
  parent: System.Decimal
  langs:
  - csharp
  - vb
  name: Decrement(Decimal)
  nameWithType: Decimal.Decrement(Decimal)
  fullName: System.Decimal.Decrement(System.Decimal)
  type: Operator
  source:
    remote:
      path: src/mscorlib/src/System/Decimal.cs
      branch: master
      repo: https://github.com/dotnet/coreclr.git
    id: op_Decrement
    path: src/mscorlib/src/System/Decimal.cs
    startLine: 1104
  assemblies:
  - System.Runtime
  namespace: System
  summary: "\n<p>Decrements the <xref href=\"System.Decimal\" data-throw-if-not-resolved=\"false\"></xref> operand by one.</p>\n"
  syntax:
    content: public static decimal operator --(decimal d)
    content.vb: VB cannot support this operator.
    parameters:
    - id: d
      type: System.Decimal
      description: "\n<p>The value to decrement. </p>\n"
    return:
      type: System.Decimal
      description: "\n<p>The value of <em>d</em> decremented by 1.</p>\n"
  exceptions:
  - type: System.OverflowException
    commentId: T:System.OverflowException
    description: "\n<p>The return value is less than <xref href=\"System.Decimal.MinValue\" data-throw-if-not-resolved=\"false\"></xref> or greater than <xref href=\"System.Decimal.MaxValue\" data-throw-if-not-resolved=\"false\"></xref>. </p>\n"
  seealso:
  - linkId: System.Decimal.Subtract(System.Decimal,System.Decimal)
    commentId: M:System.Decimal.Subtract(System.Decimal,System.Decimal)
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: System.Decimal.op_Division(System.Decimal,System.Decimal)
  commentId: M:System.Decimal.op_Division(System.Decimal,System.Decimal)
  id: op_Division(System.Decimal,System.Decimal)
  parent: System.Decimal
  langs:
  - csharp
  - vb
  name: Division(Decimal, Decimal)
  nameWithType: Decimal.Division(Decimal, Decimal)
  fullName: System.Decimal.Division(System.Decimal, System.Decimal)
  type: Operator
  source:
    remote:
      path: src/mscorlib/src/System/Decimal.cs
      branch: master
      repo: https://github.com/dotnet/coreclr.git
    id: op_Division
    path: src/mscorlib/src/System/Decimal.cs
    startLine: 1126
  assemblies:
  - System.Runtime
  namespace: System
  summary: "\n<p>Divides two specified <xref href=\"System.Decimal\" data-throw-if-not-resolved=\"false\"></xref> values.</p>\n"
  syntax:
    content: >-
      [SecuritySafeCritical]

      public static decimal operator /(decimal d1, decimal d2)
    content.vb: >-
      <SecuritySafeCritical>

      Public Shared Operator /(d1 As Decimal, d2 As Decimal) As Decimal
    parameters:
    - id: d1
      type: System.Decimal
      description: "\n<p>The dividend. </p>\n"
    - id: d2
      type: System.Decimal
      description: "\n<p>The divisor. </p>\n"
    return:
      type: System.Decimal
      description: "\n<p>The result of dividing <em>d1</em> by <em>d2</em>.</p>\n"
  exceptions:
  - type: System.DivideByZeroException
    commentId: T:System.DivideByZeroException
    description: "\n<p>\n<em>d2</em> is zero. </p>\n"
  - type: System.OverflowException
    commentId: T:System.OverflowException
    description: "\n<p>The return value is less than <xref href=\"System.Decimal.MinValue\" data-throw-if-not-resolved=\"false\"></xref> or greater than <xref href=\"System.Decimal.MaxValue\" data-throw-if-not-resolved=\"false\"></xref>. </p>\n"
  seealso:
  - linkId: System.Decimal.Divide(System.Decimal,System.Decimal)
    commentId: M:System.Decimal.Divide(System.Decimal,System.Decimal)
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: System.Decimal.op_Equality(System.Decimal,System.Decimal)
  commentId: M:System.Decimal.op_Equality(System.Decimal,System.Decimal)
  id: op_Equality(System.Decimal,System.Decimal)
  parent: System.Decimal
  langs:
  - csharp
  - vb
  name: Equality(Decimal, Decimal)
  nameWithType: Decimal.Equality(Decimal, Decimal)
  fullName: System.Decimal.Equality(System.Decimal, System.Decimal)
  type: Operator
  source:
    remote:
      path: src/mscorlib/src/System/Decimal.cs
      branch: master
      repo: https://github.com/dotnet/coreclr.git
    id: op_Equality
    path: src/mscorlib/src/System/Decimal.cs
    startLine: 1136
  assemblies:
  - System.Runtime
  namespace: System
  summary: "\n<p>Returns a value that indicates whether two <xref href=\"System.Decimal\" data-throw-if-not-resolved=\"false\"></xref> values are equal.</p>\n"
  syntax:
    content: >-
      [SecuritySafeCritical]

      public static bool operator ==(decimal d1, decimal d2)
    content.vb: >-
      <SecuritySafeCritical>

      Public Shared Operator =(d1 As Decimal, d2 As Decimal) As Boolean
    parameters:
    - id: d1
      type: System.Decimal
      description: "\n<p>The first value to compare. </p>\n"
    - id: d2
      type: System.Decimal
      description: "\n<p>The second value to compare. </p>\n"
    return:
      type: System.Boolean
      description: "\n<p>\n<strong>true</strong> if <em>d1</em> and <em>d2</em> are equal; otherwise, <strong>false</strong>.</p>\n"
  seealso:
  - linkId: System.Decimal.Equals(System.Object)
    commentId: M:System.Decimal.Equals(System.Object)
  - linkId: System.Decimal.op_Inequality(System.Decimal,System.Decimal)
    commentId: M:System.Decimal.op_Inequality(System.Decimal,System.Decimal)
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: System.Decimal.op_Explicit(System.Decimal)~System.Byte
  commentId: M:System.Decimal.op_Explicit(System.Decimal)~System.Byte
  id: op_Explicit(System.Decimal)~System.Byte
  parent: System.Decimal
  langs:
  - csharp
  - vb
  name: Explicit(Decimal to Byte)
  nameWithType: Decimal.Explicit(Decimal to Byte)
  fullName: System.Decimal.Explicit(System.Decimal to System.Byte)
  type: Operator
  source:
    remote:
      path: src/mscorlib/src/System/Decimal.cs
      branch: master
      repo: https://github.com/dotnet/coreclr.git
    id: op_Explicit
    path: src/mscorlib/src/System/Decimal.cs
    startLine: 1037
  assemblies:
  - System.Runtime
  namespace: System
  summary: "\n<p>Defines an explicit conversion of a <xref href=\"System.Decimal\" data-throw-if-not-resolved=\"false\"></xref> to an 8-bit unsigned integer.</p>\n"
  syntax:
    content: public static explicit operator byte (decimal value)
    content.vb: Public Shared Narrowing Operator CType(value As Decimal) As Byte
    parameters:
    - id: value
      type: System.Decimal
      description: "\n<p>The value to convert. </p>\n"
    return:
      type: System.Byte
      description: "\n<p>An 8-bit unsigned integer that represents the converted <xref href=\"System.Decimal\" data-throw-if-not-resolved=\"false\"></xref>.</p>\n"
  exceptions:
  - type: System.OverflowException
    commentId: T:System.OverflowException
    description: "\n<p>\n<em>value</em> is less than <xref href=\"System.Byte.MinValue\" data-throw-if-not-resolved=\"false\"></xref> or greater than <xref href=\"System.Byte.MaxValue\" data-throw-if-not-resolved=\"false\"></xref>. </p>\n"
  seealso:
  - linkId: System.Byte
    commentId: T:System.Byte
  nameWithType.vb: Decimal.Narrowing(Decimal to Byte)
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: System.Decimal.Narrowing(System.Decimal to System.Byte)
  name.vb: Narrowing(Decimal to Byte)
- uid: System.Decimal.op_Explicit(System.Decimal)~System.Char
  commentId: M:System.Decimal.op_Explicit(System.Decimal)~System.Char
  id: op_Explicit(System.Decimal)~System.Char
  parent: System.Decimal
  langs:
  - csharp
  - vb
  name: Explicit(Decimal to Char)
  nameWithType: Decimal.Explicit(Decimal to Char)
  fullName: System.Decimal.Explicit(System.Decimal to System.Char)
  type: Operator
  source:
    remote:
      path: src/mscorlib/src/System/Decimal.cs
      branch: master
      repo: https://github.com/dotnet/coreclr.git
    id: op_Explicit
    path: src/mscorlib/src/System/Decimal.cs
    startLine: 1046
  assemblies:
  - System.Runtime
  namespace: System
  summary: "\n<p>Defines an explicit conversion of a <xref href=\"System.Decimal\" data-throw-if-not-resolved=\"false\"></xref> to a Unicode character.</p>\n"
  syntax:
    content: public static explicit operator char (decimal value)
    content.vb: Public Shared Narrowing Operator CType(value As Decimal) As Char
    parameters:
    - id: value
      type: System.Decimal
      description: "\n<p>The value to convert. </p>\n"
    return:
      type: System.Char
      description: "\n<p>A Unicode character that represents the converted <xref href=\"System.Decimal\" data-throw-if-not-resolved=\"false\"></xref>.</p>\n"
  exceptions:
  - type: System.OverflowException
    commentId: T:System.OverflowException
    description: "\n<p>\n<em>value</em> is less than <xref href=\"System.Char.MinValue\" data-throw-if-not-resolved=\"false\"></xref> or greater than <xref href=\"System.Char.MaxValue\" data-throw-if-not-resolved=\"false\"></xref>. </p>\n"
  seealso:
  - linkId: System.Char
    commentId: T:System.Char
  nameWithType.vb: Decimal.Narrowing(Decimal to Char)
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: System.Decimal.Narrowing(System.Decimal to System.Char)
  name.vb: Narrowing(Decimal to Char)
- uid: System.Decimal.op_Explicit(System.Decimal)~System.Double
  commentId: M:System.Decimal.op_Explicit(System.Decimal)~System.Double
  id: op_Explicit(System.Decimal)~System.Double
  parent: System.Decimal
  langs:
  - csharp
  - vb
  name: Explicit(Decimal to Double)
  nameWithType: Decimal.Explicit(Decimal to Double)
  fullName: System.Decimal.Explicit(System.Decimal to System.Double)
  type: Operator
  source:
    remote:
      path: src/mscorlib/src/System/Decimal.cs
      branch: master
      repo: https://github.com/dotnet/coreclr.git
    id: op_Explicit
    path: src/mscorlib/src/System/Decimal.cs
    startLine: 1088
  assemblies:
  - System.Runtime
  namespace: System
  summary: "\n<p>Defines an explicit conversion of a <xref href=\"System.Decimal\" data-throw-if-not-resolved=\"false\"></xref> to a double-precision floating-point number.</p>\n"
  syntax:
    content: public static explicit operator double (decimal value)
    content.vb: Public Shared Narrowing Operator CType(value As Decimal) As Double
    parameters:
    - id: value
      type: System.Decimal
      description: "\n<p>The value to convert. </p>\n"
    return:
      type: System.Double
      description: "\n<p>A double-precision floating-point number that represents the converted <xref href=\"System.Decimal\" data-throw-if-not-resolved=\"false\"></xref>.</p>\n"
  seealso:
  - linkId: System.Double
    commentId: T:System.Double
  nameWithType.vb: Decimal.Narrowing(Decimal to Double)
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: System.Decimal.Narrowing(System.Decimal to System.Double)
  name.vb: Narrowing(Decimal to Double)
- uid: System.Decimal.op_Explicit(System.Decimal)~System.Int16
  commentId: M:System.Decimal.op_Explicit(System.Decimal)~System.Int16
  id: op_Explicit(System.Decimal)~System.Int16
  parent: System.Decimal
  langs:
  - csharp
  - vb
  name: Explicit(Decimal to Int16)
  nameWithType: Decimal.Explicit(Decimal to Int16)
  fullName: System.Decimal.Explicit(System.Decimal to System.Int16)
  type: Operator
  source:
    remote:
      path: src/mscorlib/src/System/Decimal.cs
      branch: master
      repo: https://github.com/dotnet/coreclr.git
    id: op_Explicit
    path: src/mscorlib/src/System/Decimal.cs
    startLine: 1057
  assemblies:
  - System.Runtime
  namespace: System
  summary: "\n<p>Defines an explicit conversion of a <xref href=\"System.Decimal\" data-throw-if-not-resolved=\"false\"></xref> to a 16-bit signed integer.</p>\n"
  syntax:
    content: public static explicit operator short (decimal value)
    content.vb: Public Shared Narrowing Operator CType(value As Decimal) As Short
    parameters:
    - id: value
      type: System.Decimal
      description: "\n<p>The value to convert. </p>\n"
    return:
      type: System.Int16
      description: "\n<p>A 16-bit signed integer that represents the converted <xref href=\"System.Decimal\" data-throw-if-not-resolved=\"false\"></xref>.</p>\n"
  exceptions:
  - type: System.OverflowException
    commentId: T:System.OverflowException
    description: "\n<p>\n<em>value</em> is less than <xref href=\"System.Int16.MinValue\" data-throw-if-not-resolved=\"false\"></xref> or greater than <xref href=\"System.Int16.MaxValue\" data-throw-if-not-resolved=\"false\"></xref>. </p>\n"
  seealso:
  - linkId: System.Int16
    commentId: T:System.Int16
  nameWithType.vb: Decimal.Narrowing(Decimal to Int16)
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: System.Decimal.Narrowing(System.Decimal to System.Int16)
  name.vb: Narrowing(Decimal to Int16)
- uid: System.Decimal.op_Explicit(System.Decimal)~System.Int32
  commentId: M:System.Decimal.op_Explicit(System.Decimal)~System.Int32
  id: op_Explicit(System.Decimal)~System.Int32
  parent: System.Decimal
  langs:
  - csharp
  - vb
  name: Explicit(Decimal to Int32)
  nameWithType: Decimal.Explicit(Decimal to Int32)
  fullName: System.Decimal.Explicit(System.Decimal to System.Int32)
  type: Operator
  source:
    remote:
      path: src/mscorlib/src/System/Decimal.cs
      branch: master
      repo: https://github.com/dotnet/coreclr.git
    id: op_Explicit
    path: src/mscorlib/src/System/Decimal.cs
    startLine: 1066
  assemblies:
  - System.Runtime
  namespace: System
  summary: "\n<p>Defines an explicit conversion of a <xref href=\"System.Decimal\" data-throw-if-not-resolved=\"false\"></xref> to a 32-bit signed integer.</p>\n"
  syntax:
    content: public static explicit operator int (decimal value)
    content.vb: Public Shared Narrowing Operator CType(value As Decimal) As Integer
    parameters:
    - id: value
      type: System.Decimal
      description: "\n<p>The value to convert. </p>\n"
    return:
      type: System.Int32
      description: "\n<p>A 32-bit signed integer that represents the converted <xref href=\"System.Decimal\" data-throw-if-not-resolved=\"false\"></xref>.</p>\n"
  exceptions:
  - type: System.OverflowException
    commentId: T:System.OverflowException
    description: "\n<p>\n<em>value</em> is less than <xref href=\"System.Int32.MinValue\" data-throw-if-not-resolved=\"false\"></xref> or greater than <xref href=\"System.Int32.MaxValue\" data-throw-if-not-resolved=\"false\"></xref>. </p>\n"
  seealso:
  - linkId: System.Int32
    commentId: T:System.Int32
  nameWithType.vb: Decimal.Narrowing(Decimal to Int32)
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: System.Decimal.Narrowing(System.Decimal to System.Int32)
  name.vb: Narrowing(Decimal to Int32)
- uid: System.Decimal.op_Explicit(System.Decimal)~System.Int64
  commentId: M:System.Decimal.op_Explicit(System.Decimal)~System.Int64
  id: op_Explicit(System.Decimal)~System.Int64
  parent: System.Decimal
  langs:
  - csharp
  - vb
  name: Explicit(Decimal to Int64)
  nameWithType: Decimal.Explicit(Decimal to Int64)
  fullName: System.Decimal.Explicit(System.Decimal to System.Int64)
  type: Operator
  source:
    remote:
      path: src/mscorlib/src/System/Decimal.cs
      branch: master
      repo: https://github.com/dotnet/coreclr.git
    id: op_Explicit
    path: src/mscorlib/src/System/Decimal.cs
    startLine: 1075
  assemblies:
  - System.Runtime
  namespace: System
  summary: "\n<p>Defines an explicit conversion of a <xref href=\"System.Decimal\" data-throw-if-not-resolved=\"false\"></xref> to a 64-bit signed integer.</p>\n"
  syntax:
    content: public static explicit operator long (decimal value)
    content.vb: Public Shared Narrowing Operator CType(value As Decimal) As Long
    parameters:
    - id: value
      type: System.Decimal
      description: "\n<p>The value to convert. </p>\n"
    return:
      type: System.Int64
      description: "\n<p>A 64-bit signed integer that represents the converted <xref href=\"System.Decimal\" data-throw-if-not-resolved=\"false\"></xref>.</p>\n"
  exceptions:
  - type: System.OverflowException
    commentId: T:System.OverflowException
    description: "\n<p>\n<em>value</em> is less than <xref href=\"System.Int64.MinValue\" data-throw-if-not-resolved=\"false\"></xref> or greater than <xref href=\"System.Int64.MaxValue\" data-throw-if-not-resolved=\"false\"></xref>. </p>\n"
  seealso:
  - linkId: System.Int64
    commentId: T:System.Int64
  nameWithType.vb: Decimal.Narrowing(Decimal to Int64)
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: System.Decimal.Narrowing(System.Decimal to System.Int64)
  name.vb: Narrowing(Decimal to Int64)
- uid: System.Decimal.op_Explicit(System.Decimal)~System.SByte
  commentId: M:System.Decimal.op_Explicit(System.Decimal)~System.SByte
  id: op_Explicit(System.Decimal)~System.SByte
  parent: System.Decimal
  langs:
  - csharp
  - vb
  name: Explicit(Decimal to SByte)
  nameWithType: Decimal.Explicit(Decimal to SByte)
  fullName: System.Decimal.Explicit(System.Decimal to System.SByte)
  type: Operator
  source:
    remote:
      path: src/mscorlib/src/System/Decimal.cs
      branch: master
      repo: https://github.com/dotnet/coreclr.git
    id: op_Explicit
    path: src/mscorlib/src/System/Decimal.cs
    startLine: 1041
  assemblies:
  - System.Runtime
  namespace: System
  summary: "\n<p>Defines an explicit conversion of a <xref href=\"System.Decimal\" data-throw-if-not-resolved=\"false\"></xref> to an 8-bit signed integer.</p>\n"
  syntax:
    content: >-
      [CLSCompliant(false)]

      public static explicit operator sbyte (decimal value)
    content.vb: >-
      <CLSCompliant(False)>

      Public Shared Narrowing Operator CType(value As Decimal) As SByte
    parameters:
    - id: value
      type: System.Decimal
      description: "\n<p>The value to convert. </p>\n"
    return:
      type: System.SByte
      description: "\n<p>An 8-bit signed integer that represents the converted <xref href=\"System.Decimal\" data-throw-if-not-resolved=\"false\"></xref>.</p>\n"
  exceptions:
  - type: System.OverflowException
    commentId: T:System.OverflowException
    description: "\n<p>\n<em>value</em> is less than <xref href=\"System.SByte.MinValue\" data-throw-if-not-resolved=\"false\"></xref> or greater than <xref href=\"System.SByte.MaxValue\" data-throw-if-not-resolved=\"false\"></xref>. </p>\n"
  seealso:
  - linkId: System.SByte
    commentId: T:System.SByte
  attributes:
  - type: System.CLSCompliantAttribute
    ctor: System.CLSCompliantAttribute.#ctor(System.Boolean)
    arguments:
    - type: System.Boolean
      value: false
  nameWithType.vb: Decimal.Narrowing(Decimal to SByte)
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: System.Decimal.Narrowing(System.Decimal to System.SByte)
  name.vb: Narrowing(Decimal to SByte)
- uid: System.Decimal.op_Explicit(System.Decimal)~System.Single
  commentId: M:System.Decimal.op_Explicit(System.Decimal)~System.Single
  id: op_Explicit(System.Decimal)~System.Single
  parent: System.Decimal
  langs:
  - csharp
  - vb
  name: Explicit(Decimal to Single)
  nameWithType: Decimal.Explicit(Decimal to Single)
  fullName: System.Decimal.Explicit(System.Decimal to System.Single)
  type: Operator
  source:
    remote:
      path: src/mscorlib/src/System/Decimal.cs
      branch: master
      repo: https://github.com/dotnet/coreclr.git
    id: op_Explicit
    path: src/mscorlib/src/System/Decimal.cs
    startLine: 1084
  assemblies:
  - System.Runtime
  namespace: System
  summary: "\n<p>Defines an explicit conversion of a <xref href=\"System.Decimal\" data-throw-if-not-resolved=\"false\"></xref> to a single-precision floating-point number.</p>\n"
  syntax:
    content: public static explicit operator float (decimal value)
    content.vb: Public Shared Narrowing Operator CType(value As Decimal) As Single
    parameters:
    - id: value
      type: System.Decimal
      description: "\n<p>The value to convert. </p>\n"
    return:
      type: System.Single
      description: "\n<p>A single-precision floating-point number that represents the converted <xref href=\"System.Decimal\" data-throw-if-not-resolved=\"false\"></xref>.</p>\n"
  seealso:
  - linkId: System.Single
    commentId: T:System.Single
  nameWithType.vb: Decimal.Narrowing(Decimal to Single)
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: System.Decimal.Narrowing(System.Decimal to System.Single)
  name.vb: Narrowing(Decimal to Single)
- uid: System.Decimal.op_Explicit(System.Decimal)~System.UInt16
  commentId: M:System.Decimal.op_Explicit(System.Decimal)~System.UInt16
  id: op_Explicit(System.Decimal)~System.UInt16
  parent: System.Decimal
  langs:
  - csharp
  - vb
  name: Explicit(Decimal to UInt16)
  nameWithType: Decimal.Explicit(Decimal to UInt16)
  fullName: System.Decimal.Explicit(System.Decimal to System.UInt16)
  type: Operator
  source:
    remote:
      path: src/mscorlib/src/System/Decimal.cs
      branch: master
      repo: https://github.com/dotnet/coreclr.git
    id: op_Explicit
    path: src/mscorlib/src/System/Decimal.cs
    startLine: 1061
  assemblies:
  - System.Runtime
  namespace: System
  summary: "\n<p>Defines an explicit conversion of a <xref href=\"System.Decimal\" data-throw-if-not-resolved=\"false\"></xref> to a 16-bit unsigned integer.</p>\n"
  syntax:
    content: >-
      [CLSCompliant(false)]

      public static explicit operator ushort (decimal value)
    content.vb: >-
      <CLSCompliant(False)>

      Public Shared Narrowing Operator CType(value As Decimal) As UShort
    parameters:
    - id: value
      type: System.Decimal
      description: "\n<p>The value to convert. </p>\n"
    return:
      type: System.UInt16
      description: "\n<p>A 16-bit unsigned integer that represents the converted <xref href=\"System.Decimal\" data-throw-if-not-resolved=\"false\"></xref>.</p>\n"
  exceptions:
  - type: System.OverflowException
    commentId: T:System.OverflowException
    description: "\n<p>\n<em>value</em> is greater than <xref href=\"System.UInt16.MaxValue\" data-throw-if-not-resolved=\"false\"></xref> or less than <xref href=\"System.UInt16.MinValue\" data-throw-if-not-resolved=\"false\"></xref>. </p>\n"
  seealso:
  - linkId: System.UInt16
    commentId: T:System.UInt16
  attributes:
  - type: System.CLSCompliantAttribute
    ctor: System.CLSCompliantAttribute.#ctor(System.Boolean)
    arguments:
    - type: System.Boolean
      value: false
  nameWithType.vb: Decimal.Narrowing(Decimal to UInt16)
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: System.Decimal.Narrowing(System.Decimal to System.UInt16)
  name.vb: Narrowing(Decimal to UInt16)
- uid: System.Decimal.op_Explicit(System.Decimal)~System.UInt32
  commentId: M:System.Decimal.op_Explicit(System.Decimal)~System.UInt32
  id: op_Explicit(System.Decimal)~System.UInt32
  parent: System.Decimal
  langs:
  - csharp
  - vb
  name: Explicit(Decimal to UInt32)
  nameWithType: Decimal.Explicit(Decimal to UInt32)
  fullName: System.Decimal.Explicit(System.Decimal to System.UInt32)
  type: Operator
  source:
    remote:
      path: src/mscorlib/src/System/Decimal.cs
      branch: master
      repo: https://github.com/dotnet/coreclr.git
    id: op_Explicit
    path: src/mscorlib/src/System/Decimal.cs
    startLine: 1070
  assemblies:
  - System.Runtime
  namespace: System
  summary: "\n<p>Defines an explicit conversion of a <xref href=\"System.Decimal\" data-throw-if-not-resolved=\"false\"></xref> to a 32-bit unsigned integer.</p>\n"
  syntax:
    content: >-
      [CLSCompliant(false)]

      public static explicit operator uint (decimal value)
    content.vb: >-
      <CLSCompliant(False)>

      Public Shared Narrowing Operator CType(value As Decimal) As UInteger
    parameters:
    - id: value
      type: System.Decimal
      description: "\n<p>The value to convert. </p>\n"
    return:
      type: System.UInt32
      description: "\n<p>A 32-bit unsigned integer that represents the converted <xref href=\"System.Decimal\" data-throw-if-not-resolved=\"false\"></xref>.</p>\n"
  exceptions:
  - type: System.OverflowException
    commentId: T:System.OverflowException
    description: "\n<p>\n<em>value</em> is negative or greater than <xref href=\"System.UInt32.MaxValue\" data-throw-if-not-resolved=\"false\"></xref>. </p>\n"
  seealso:
  - linkId: System.UInt32
    commentId: T:System.UInt32
  attributes:
  - type: System.CLSCompliantAttribute
    ctor: System.CLSCompliantAttribute.#ctor(System.Boolean)
    arguments:
    - type: System.Boolean
      value: false
  nameWithType.vb: Decimal.Narrowing(Decimal to UInt32)
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: System.Decimal.Narrowing(System.Decimal to System.UInt32)
  name.vb: Narrowing(Decimal to UInt32)
- uid: System.Decimal.op_Explicit(System.Decimal)~System.UInt64
  commentId: M:System.Decimal.op_Explicit(System.Decimal)~System.UInt64
  id: op_Explicit(System.Decimal)~System.UInt64
  parent: System.Decimal
  langs:
  - csharp
  - vb
  name: Explicit(Decimal to UInt64)
  nameWithType: Decimal.Explicit(Decimal to UInt64)
  fullName: System.Decimal.Explicit(System.Decimal to System.UInt64)
  type: Operator
  source:
    remote:
      path: src/mscorlib/src/System/Decimal.cs
      branch: master
      repo: https://github.com/dotnet/coreclr.git
    id: op_Explicit
    path: src/mscorlib/src/System/Decimal.cs
    startLine: 1079
  assemblies:
  - System.Runtime
  namespace: System
  summary: "\n<p>Defines an explicit conversion of a <xref href=\"System.Decimal\" data-throw-if-not-resolved=\"false\"></xref> to a 64-bit unsigned integer.</p>\n"
  syntax:
    content: >-
      [CLSCompliant(false)]

      public static explicit operator ulong (decimal value)
    content.vb: >-
      <CLSCompliant(False)>

      Public Shared Narrowing Operator CType(value As Decimal) As ULong
    parameters:
    - id: value
      type: System.Decimal
      description: "\n<p>The value to convert. </p>\n"
    return:
      type: System.UInt64
      description: "\n<p>A 64-bit unsigned integer that represents the converted <xref href=\"System.Decimal\" data-throw-if-not-resolved=\"false\"></xref>.</p>\n"
  exceptions:
  - type: System.OverflowException
    commentId: T:System.OverflowException
    description: "\n<p>\n<em>value</em> is negative or greater than <xref href=\"System.UInt64.MaxValue\" data-throw-if-not-resolved=\"false\"></xref>. </p>\n"
  seealso:
  - linkId: System.UInt64
    commentId: T:System.UInt64
  attributes:
  - type: System.CLSCompliantAttribute
    ctor: System.CLSCompliantAttribute.#ctor(System.Boolean)
    arguments:
    - type: System.Boolean
      value: false
  nameWithType.vb: Decimal.Narrowing(Decimal to UInt64)
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: System.Decimal.Narrowing(System.Decimal to System.UInt64)
  name.vb: Narrowing(Decimal to UInt64)
- uid: System.Decimal.op_Explicit(System.Double)~System.Decimal
  commentId: M:System.Decimal.op_Explicit(System.Double)~System.Decimal
  id: op_Explicit(System.Double)~System.Decimal
  parent: System.Decimal
  langs:
  - csharp
  - vb
  name: Explicit(Double to Decimal)
  nameWithType: Decimal.Explicit(Double to Decimal)
  fullName: System.Decimal.Explicit(System.Double to System.Decimal)
  type: Operator
  source:
    remote:
      path: src/mscorlib/src/System/Decimal.cs
      branch: master
      repo: https://github.com/dotnet/coreclr.git
    id: op_Explicit
    path: src/mscorlib/src/System/Decimal.cs
    startLine: 1033
  assemblies:
  - System.Runtime
  namespace: System
  summary: "\n<p>Defines an explicit conversion of a double-precision floating-point number to a <xref href=\"System.Decimal\" data-throw-if-not-resolved=\"false\"></xref>.</p>\n"
  syntax:
    content: public static explicit operator decimal (double value)
    content.vb: Public Shared Narrowing Operator CType(value As Double) As Decimal
    parameters:
    - id: value
      type: System.Double
      description: "\n<p>The double-precision floating-point number to convert. </p>\n"
    return:
      type: System.Decimal
      description: "\n<p>The converted double-precision floating point number.</p>\n"
  exceptions:
  - type: System.OverflowException
    commentId: T:System.OverflowException
    description: "\n<p>\n<em>value</em> is less than <xref href=\"System.Decimal.MinValue\" data-throw-if-not-resolved=\"false\"></xref> or greater than <xref href=\"System.Decimal.MaxValue\" data-throw-if-not-resolved=\"false\"></xref>.</p>\n<p>-or- </p>\n<p>\n<em>value</em> is <xref href=\"System.Double.NaN\" data-throw-if-not-resolved=\"false\"></xref>, <xref href=\"System.Double.PositiveInfinity\" data-throw-if-not-resolved=\"false\"></xref>, or <xref href=\"System.Double.NegativeInfinity\" data-throw-if-not-resolved=\"false\"></xref>. </p>\n"
  seealso:
  - linkId: System.Double
    commentId: T:System.Double
  nameWithType.vb: Decimal.Narrowing(Double to Decimal)
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: System.Decimal.Narrowing(System.Double to System.Decimal)
  name.vb: Narrowing(Double to Decimal)
- uid: System.Decimal.op_Explicit(System.Single)~System.Decimal
  commentId: M:System.Decimal.op_Explicit(System.Single)~System.Decimal
  id: op_Explicit(System.Single)~System.Decimal
  parent: System.Decimal
  langs:
  - csharp
  - vb
  name: Explicit(Single to Decimal)
  nameWithType: Decimal.Explicit(Single to Decimal)
  fullName: System.Decimal.Explicit(System.Single to System.Decimal)
  type: Operator
  source:
    remote:
      path: src/mscorlib/src/System/Decimal.cs
      branch: master
      repo: https://github.com/dotnet/coreclr.git
    id: op_Explicit
    path: src/mscorlib/src/System/Decimal.cs
    startLine: 1029
  assemblies:
  - System.Runtime
  namespace: System
  summary: "\n<p>Defines an explicit conversion of a single-precision floating-point number to a <xref href=\"System.Decimal\" data-throw-if-not-resolved=\"false\"></xref>.</p>\n"
  syntax:
    content: public static explicit operator decimal (float value)
    content.vb: Public Shared Narrowing Operator CType(value As Single) As Decimal
    parameters:
    - id: value
      type: System.Single
      description: "\n<p>The single-precision floating-point number to convert. </p>\n"
    return:
      type: System.Decimal
      description: "\n<p>The converted single-precision floating point number.</p>\n"
  exceptions:
  - type: System.OverflowException
    commentId: T:System.OverflowException
    description: "\n<p>\n<em>value</em> is less than <xref href=\"System.Decimal.MinValue\" data-throw-if-not-resolved=\"false\"></xref> or greater than <xref href=\"System.Decimal.MaxValue\" data-throw-if-not-resolved=\"false\"></xref>.</p>\n<p>-or- </p>\n<p>\n<em>value</em> is <xref href=\"System.Single.NaN\" data-throw-if-not-resolved=\"false\"></xref>, <xref href=\"System.Single.PositiveInfinity\" data-throw-if-not-resolved=\"false\"></xref>, or <xref href=\"System.Single.NegativeInfinity\" data-throw-if-not-resolved=\"false\"></xref>. </p>\n"
  seealso:
  - linkId: System.Single
    commentId: T:System.Single
  nameWithType.vb: Decimal.Narrowing(Single to Decimal)
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: System.Decimal.Narrowing(System.Single to System.Decimal)
  name.vb: Narrowing(Single to Decimal)
- uid: System.Decimal.op_GreaterThan(System.Decimal,System.Decimal)
  commentId: M:System.Decimal.op_GreaterThan(System.Decimal,System.Decimal)
  id: op_GreaterThan(System.Decimal,System.Decimal)
  parent: System.Decimal
  langs:
  - csharp
  - vb
  name: GreaterThan(Decimal, Decimal)
  nameWithType: Decimal.GreaterThan(Decimal, Decimal)
  fullName: System.Decimal.GreaterThan(System.Decimal, System.Decimal)
  type: Operator
  source:
    remote:
      path: src/mscorlib/src/System/Decimal.cs
      branch: master
      repo: https://github.com/dotnet/coreclr.git
    id: op_GreaterThan
    path: src/mscorlib/src/System/Decimal.cs
    startLine: 1156
  assemblies:
  - System.Runtime
  namespace: System
  summary: "\n<p>Returns a value indicating whether a specified <xref href=\"System.Decimal\" data-throw-if-not-resolved=\"false\"></xref> is greater than another specified <xref href=\"System.Decimal\" data-throw-if-not-resolved=\"false\"></xref>.</p>\n"
  syntax:
    content: >-
      [SecuritySafeCritical]

      public static bool operator>(decimal d1, decimal d2)
    content.vb: >-
      <SecuritySafeCritical>

      Public Shared Operator>(d1 As Decimal, d2 As Decimal) As Boolean
    parameters:
    - id: d1
      type: System.Decimal
      description: "\n<p>The first value to compare. </p>\n"
    - id: d2
      type: System.Decimal
      description: "\n<p>The second value to compare. </p>\n"
    return:
      type: System.Boolean
      description: "\n<p>\n<strong>true</strong> if <em>d1</em> is greater than <em>d2</em>; otherwise, <strong>false</strong>.</p>\n"
  seealso:
  - linkId: System.Decimal.Compare(System.Decimal,System.Decimal)
    commentId: M:System.Decimal.Compare(System.Decimal,System.Decimal)
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: System.Decimal.op_GreaterThanOrEqual(System.Decimal,System.Decimal)
  commentId: M:System.Decimal.op_GreaterThanOrEqual(System.Decimal,System.Decimal)
  id: op_GreaterThanOrEqual(System.Decimal,System.Decimal)
  parent: System.Decimal
  langs:
  - csharp
  - vb
  name: GreaterThanOrEqual(Decimal, Decimal)
  nameWithType: Decimal.GreaterThanOrEqual(Decimal, Decimal)
  fullName: System.Decimal.GreaterThanOrEqual(System.Decimal, System.Decimal)
  type: Operator
  source:
    remote:
      path: src/mscorlib/src/System/Decimal.cs
      branch: master
      repo: https://github.com/dotnet/coreclr.git
    id: op_GreaterThanOrEqual
    path: src/mscorlib/src/System/Decimal.cs
    startLine: 1161
  assemblies:
  - System.Runtime
  namespace: System
  summary: "\n<p>Returns a value indicating whether a specified <xref href=\"System.Decimal\" data-throw-if-not-resolved=\"false\"></xref> is greater than or equal to another specified <xref href=\"System.Decimal\" data-throw-if-not-resolved=\"false\"></xref>.</p>\n"
  syntax:
    content: >-
      [SecuritySafeCritical]

      public static bool operator >=(decimal d1, decimal d2)
    content.vb: >-
      <SecuritySafeCritical>

      Public Shared Operator >=(d1 As Decimal, d2 As Decimal) As Boolean
    parameters:
    - id: d1
      type: System.Decimal
      description: "\n<p>The first value to compare. </p>\n"
    - id: d2
      type: System.Decimal
      description: "\n<p>The second value to compare. </p>\n"
    return:
      type: System.Boolean
      description: "\n<p>\n<strong>true</strong> if <em>d1</em> is greater than or equal to <em>d2</em>; otherwise, <strong>false</strong>.</p>\n"
  seealso:
  - linkId: System.Decimal.Compare(System.Decimal,System.Decimal)
    commentId: M:System.Decimal.Compare(System.Decimal,System.Decimal)
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: System.Decimal.op_Implicit(System.Byte)~System.Decimal
  commentId: M:System.Decimal.op_Implicit(System.Byte)~System.Decimal
  id: op_Implicit(System.Byte)~System.Decimal
  parent: System.Decimal
  langs:
  - csharp
  - vb
  name: Implicit(Byte to Decimal)
  nameWithType: Decimal.Implicit(Byte to Decimal)
  fullName: System.Decimal.Implicit(System.Byte to System.Decimal)
  type: Operator
  source:
    remote:
      path: src/mscorlib/src/System/Decimal.cs
      branch: master
      repo: https://github.com/dotnet/coreclr.git
    id: op_Implicit
    path: src/mscorlib/src/System/Decimal.cs
    startLine: 988
  assemblies:
  - System.Runtime
  namespace: System
  summary: "\n<p>Defines an implicit conversion of an 8-bit unsigned integer to a <xref href=\"System.Decimal\" data-throw-if-not-resolved=\"false\"></xref>.</p>\n"
  syntax:
    content: public static implicit operator decimal (byte value)
    content.vb: Public Shared Widening Operator CType(value As Byte) As Decimal
    parameters:
    - id: value
      type: System.Byte
      description: "\n<p>The 8-bit unsigned integer to convert. </p>\n"
    return:
      type: System.Decimal
      description: "\n<p>The converted 8-bit unsigned integer.</p>\n"
  seealso:
  - linkId: System.Byte
    commentId: T:System.Byte
  nameWithType.vb: Decimal.Widening(Byte to Decimal)
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: System.Decimal.Widening(System.Byte to System.Decimal)
  name.vb: Widening(Byte to Decimal)
- uid: System.Decimal.op_Implicit(System.Char)~System.Decimal
  commentId: M:System.Decimal.op_Implicit(System.Char)~System.Decimal
  id: op_Implicit(System.Char)~System.Decimal
  parent: System.Decimal
  langs:
  - csharp
  - vb
  name: Implicit(Char to Decimal)
  nameWithType: Decimal.Implicit(Char to Decimal)
  fullName: System.Decimal.Implicit(System.Char to System.Decimal)
  type: Operator
  source:
    remote:
      path: src/mscorlib/src/System/Decimal.cs
      branch: master
      repo: https://github.com/dotnet/coreclr.git
    id: op_Implicit
    path: src/mscorlib/src/System/Decimal.cs
    startLine: 1006
  assemblies:
  - System.Runtime
  namespace: System
  summary: "\n<p>Defines an implicit conversion of a Unicode character to a <xref href=\"System.Decimal\" data-throw-if-not-resolved=\"false\"></xref>.</p>\n"
  syntax:
    content: public static implicit operator decimal (char value)
    content.vb: Public Shared Widening Operator CType(value As Char) As Decimal
    parameters:
    - id: value
      type: System.Char
      description: "\n<p>The Unicode character to convert. </p>\n"
    return:
      type: System.Decimal
      description: "\n<p>The converted Unicode character.</p>\n"
  seealso:
  - linkId: System.Char
    commentId: T:System.Char
  nameWithType.vb: Decimal.Widening(Char to Decimal)
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: System.Decimal.Widening(System.Char to System.Decimal)
  name.vb: Widening(Char to Decimal)
- uid: System.Decimal.op_Implicit(System.Int16)~System.Decimal
  commentId: M:System.Decimal.op_Implicit(System.Int16)~System.Decimal
  id: op_Implicit(System.Int16)~System.Decimal
  parent: System.Decimal
  langs:
  - csharp
  - vb
  name: Implicit(Int16 to Decimal)
  nameWithType: Decimal.Implicit(Int16 to Decimal)
  fullName: System.Decimal.Implicit(System.Int16 to System.Decimal)
  type: Operator
  source:
    remote:
      path: src/mscorlib/src/System/Decimal.cs
      branch: master
      repo: https://github.com/dotnet/coreclr.git
    id: op_Implicit
    path: src/mscorlib/src/System/Decimal.cs
    startLine: 997
  assemblies:
  - System.Runtime
  namespace: System
  summary: "\n<p>Defines an implicit conversion of a 16-bit signed integer to a <xref href=\"System.Decimal\" data-throw-if-not-resolved=\"false\"></xref>.</p>\n"
  syntax:
    content: public static implicit operator decimal (short value)
    content.vb: Public Shared Widening Operator CType(value As Short) As Decimal
    parameters:
    - id: value
      type: System.Int16
      description: "\n<p>The16-bit signed integer to convert. </p>\n"
    return:
      type: System.Decimal
      description: "\n<p>The converted 16-bit signed integer.</p>\n"
  seealso:
  - linkId: System.Int16
    commentId: T:System.Int16
  nameWithType.vb: Decimal.Widening(Int16 to Decimal)
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: System.Decimal.Widening(System.Int16 to System.Decimal)
  name.vb: Widening(Int16 to Decimal)
- uid: System.Decimal.op_Implicit(System.Int32)~System.Decimal
  commentId: M:System.Decimal.op_Implicit(System.Int32)~System.Decimal
  id: op_Implicit(System.Int32)~System.Decimal
  parent: System.Decimal
  langs:
  - csharp
  - vb
  name: Implicit(Int32 to Decimal)
  nameWithType: Decimal.Implicit(Int32 to Decimal)
  fullName: System.Decimal.Implicit(System.Int32 to System.Decimal)
  type: Operator
  source:
    remote:
      path: src/mscorlib/src/System/Decimal.cs
      branch: master
      repo: https://github.com/dotnet/coreclr.git
    id: op_Implicit
    path: src/mscorlib/src/System/Decimal.cs
    startLine: 1010
  assemblies:
  - System.Runtime
  namespace: System
  summary: "\n<p>Defines an implicit conversion of a 32-bit signed integer to a <xref href=\"System.Decimal\" data-throw-if-not-resolved=\"false\"></xref>.</p>\n"
  syntax:
    content: public static implicit operator decimal (int value)
    content.vb: Public Shared Widening Operator CType(value As Integer) As Decimal
    parameters:
    - id: value
      type: System.Int32
      description: "\n<p>The 32-bit signed integer to convert. </p>\n"
    return:
      type: System.Decimal
      description: "\n<p>The converted 32-bit signed integer.</p>\n"
  seealso:
  - linkId: System.Int32
    commentId: T:System.Int32
  nameWithType.vb: Decimal.Widening(Int32 to Decimal)
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: System.Decimal.Widening(System.Int32 to System.Decimal)
  name.vb: Widening(Int32 to Decimal)
- uid: System.Decimal.op_Implicit(System.Int64)~System.Decimal
  commentId: M:System.Decimal.op_Implicit(System.Int64)~System.Decimal
  id: op_Implicit(System.Int64)~System.Decimal
  parent: System.Decimal
  langs:
  - csharp
  - vb
  name: Implicit(Int64 to Decimal)
  nameWithType: Decimal.Implicit(Int64 to Decimal)
  fullName: System.Decimal.Implicit(System.Int64 to System.Decimal)
  type: Operator
  source:
    remote:
      path: src/mscorlib/src/System/Decimal.cs
      branch: master
      repo: https://github.com/dotnet/coreclr.git
    id: op_Implicit
    path: src/mscorlib/src/System/Decimal.cs
    startLine: 1019
  assemblies:
  - System.Runtime
  namespace: System
  summary: "\n<p>Defines an implicit conversion of a 64-bit signed integer to a <xref href=\"System.Decimal\" data-throw-if-not-resolved=\"false\"></xref>.</p>\n"
  syntax:
    content: public static implicit operator decimal (long value)
    content.vb: Public Shared Widening Operator CType(value As Long) As Decimal
    parameters:
    - id: value
      type: System.Int64
      description: "\n<p>The 64-bit signed integer to convert. </p>\n"
    return:
      type: System.Decimal
      description: "\n<p>The converted 64-bit signed integer.</p>\n"
  seealso:
  - linkId: System.Int64
    commentId: T:System.Int64
  nameWithType.vb: Decimal.Widening(Int64 to Decimal)
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: System.Decimal.Widening(System.Int64 to System.Decimal)
  name.vb: Widening(Int64 to Decimal)
- uid: System.Decimal.op_Implicit(System.SByte)~System.Decimal
  commentId: M:System.Decimal.op_Implicit(System.SByte)~System.Decimal
  id: op_Implicit(System.SByte)~System.Decimal
  parent: System.Decimal
  langs:
  - csharp
  - vb
  name: Implicit(SByte to Decimal)
  nameWithType: Decimal.Implicit(SByte to Decimal)
  fullName: System.Decimal.Implicit(System.SByte to System.Decimal)
  type: Operator
  source:
    remote:
      path: src/mscorlib/src/System/Decimal.cs
      branch: master
      repo: https://github.com/dotnet/coreclr.git
    id: op_Implicit
    path: src/mscorlib/src/System/Decimal.cs
    startLine: 992
  assemblies:
  - System.Runtime
  namespace: System
  summary: "\n<p>Defines an implicit conversion of an 8-bit signed integer to a <xref href=\"System.Decimal\" data-throw-if-not-resolved=\"false\"></xref>.</p>\n"
  syntax:
    content: >-
      [CLSCompliant(false)]

      public static implicit operator decimal (sbyte value)
    content.vb: >-
      <CLSCompliant(False)>

      Public Shared Widening Operator CType(value As SByte) As Decimal
    parameters:
    - id: value
      type: System.SByte
      description: "\n<p>The 8-bit signed integer to convert. </p>\n"
    return:
      type: System.Decimal
      description: "\n<p>The converted 8-bit signed integer.</p>\n"
  seealso:
  - linkId: System.SByte
    commentId: T:System.SByte
  attributes:
  - type: System.CLSCompliantAttribute
    ctor: System.CLSCompliantAttribute.#ctor(System.Boolean)
    arguments:
    - type: System.Boolean
      value: false
  nameWithType.vb: Decimal.Widening(SByte to Decimal)
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: System.Decimal.Widening(System.SByte to System.Decimal)
  name.vb: Widening(SByte to Decimal)
- uid: System.Decimal.op_Implicit(System.UInt16)~System.Decimal
  commentId: M:System.Decimal.op_Implicit(System.UInt16)~System.Decimal
  id: op_Implicit(System.UInt16)~System.Decimal
  parent: System.Decimal
  langs:
  - csharp
  - vb
  name: Implicit(UInt16 to Decimal)
  nameWithType: Decimal.Implicit(UInt16 to Decimal)
  fullName: System.Decimal.Implicit(System.UInt16 to System.Decimal)
  type: Operator
  source:
    remote:
      path: src/mscorlib/src/System/Decimal.cs
      branch: master
      repo: https://github.com/dotnet/coreclr.git
    id: op_Implicit
    path: src/mscorlib/src/System/Decimal.cs
    startLine: 1001
  assemblies:
  - System.Runtime
  namespace: System
  summary: "\n<p>Defines an implicit conversion of a 16-bit unsigned integer to a <xref href=\"System.Decimal\" data-throw-if-not-resolved=\"false\"></xref>.</p>\n"
  syntax:
    content: >-
      [CLSCompliant(false)]

      public static implicit operator decimal (ushort value)
    content.vb: >-
      <CLSCompliant(False)>

      Public Shared Widening Operator CType(value As UShort) As Decimal
    parameters:
    - id: value
      type: System.UInt16
      description: "\n<p>The 16-bit unsigned integer to convert. </p>\n"
    return:
      type: System.Decimal
      description: "\n<p>The converted 16-bit unsigned integer.</p>\n"
  seealso:
  - linkId: System.UInt16
    commentId: T:System.UInt16
  attributes:
  - type: System.CLSCompliantAttribute
    ctor: System.CLSCompliantAttribute.#ctor(System.Boolean)
    arguments:
    - type: System.Boolean
      value: false
  nameWithType.vb: Decimal.Widening(UInt16 to Decimal)
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: System.Decimal.Widening(System.UInt16 to System.Decimal)
  name.vb: Widening(UInt16 to Decimal)
- uid: System.Decimal.op_Implicit(System.UInt32)~System.Decimal
  commentId: M:System.Decimal.op_Implicit(System.UInt32)~System.Decimal
  id: op_Implicit(System.UInt32)~System.Decimal
  parent: System.Decimal
  langs:
  - csharp
  - vb
  name: Implicit(UInt32 to Decimal)
  nameWithType: Decimal.Implicit(UInt32 to Decimal)
  fullName: System.Decimal.Implicit(System.UInt32 to System.Decimal)
  type: Operator
  source:
    remote:
      path: src/mscorlib/src/System/Decimal.cs
      branch: master
      repo: https://github.com/dotnet/coreclr.git
    id: op_Implicit
    path: src/mscorlib/src/System/Decimal.cs
    startLine: 1014
  assemblies:
  - System.Runtime
  namespace: System
  summary: "\n<p>Defines an implicit conversion of a 32-bit unsigned integer to a <xref href=\"System.Decimal\" data-throw-if-not-resolved=\"false\"></xref>.</p>\n"
  syntax:
    content: >-
      [CLSCompliant(false)]

      public static implicit operator decimal (uint value)
    content.vb: >-
      <CLSCompliant(False)>

      Public Shared Widening Operator CType(value As UInteger) As Decimal
    parameters:
    - id: value
      type: System.UInt32
      description: "\n<p>The 32-bit unsigned integer to convert. </p>\n"
    return:
      type: System.Decimal
      description: "\n<p>The converted 32-bit unsigned integer.</p>\n"
  seealso:
  - linkId: System.UInt32
    commentId: T:System.UInt32
  attributes:
  - type: System.CLSCompliantAttribute
    ctor: System.CLSCompliantAttribute.#ctor(System.Boolean)
    arguments:
    - type: System.Boolean
      value: false
  nameWithType.vb: Decimal.Widening(UInt32 to Decimal)
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: System.Decimal.Widening(System.UInt32 to System.Decimal)
  name.vb: Widening(UInt32 to Decimal)
- uid: System.Decimal.op_Implicit(System.UInt64)~System.Decimal
  commentId: M:System.Decimal.op_Implicit(System.UInt64)~System.Decimal
  id: op_Implicit(System.UInt64)~System.Decimal
  parent: System.Decimal
  langs:
  - csharp
  - vb
  name: Implicit(UInt64 to Decimal)
  nameWithType: Decimal.Implicit(UInt64 to Decimal)
  fullName: System.Decimal.Implicit(System.UInt64 to System.Decimal)
  type: Operator
  source:
    remote:
      path: src/mscorlib/src/System/Decimal.cs
      branch: master
      repo: https://github.com/dotnet/coreclr.git
    id: op_Implicit
    path: src/mscorlib/src/System/Decimal.cs
    startLine: 1023
  assemblies:
  - System.Runtime
  namespace: System
  summary: "\n<p>Defines an implicit conversion of a 64-bit unsigned integer to a <xref href=\"System.Decimal\" data-throw-if-not-resolved=\"false\"></xref>.</p>\n"
  syntax:
    content: >-
      [CLSCompliant(false)]

      public static implicit operator decimal (ulong value)
    content.vb: >-
      <CLSCompliant(False)>

      Public Shared Widening Operator CType(value As ULong) As Decimal
    parameters:
    - id: value
      type: System.UInt64
      description: "\n<p>The 64-bit unsigned integer to convert. </p>\n"
    return:
      type: System.Decimal
      description: "\n<p>The converted 64-bit unsigned integer.</p>\n"
  seealso:
  - linkId: System.UInt64
    commentId: T:System.UInt64
  attributes:
  - type: System.CLSCompliantAttribute
    ctor: System.CLSCompliantAttribute.#ctor(System.Boolean)
    arguments:
    - type: System.Boolean
      value: false
  nameWithType.vb: Decimal.Widening(UInt64 to Decimal)
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: System.Decimal.Widening(System.UInt64 to System.Decimal)
  name.vb: Widening(UInt64 to Decimal)
- uid: System.Decimal.op_Increment(System.Decimal)
  commentId: M:System.Decimal.op_Increment(System.Decimal)
  id: op_Increment(System.Decimal)
  parent: System.Decimal
  langs:
  - csharp
  - vb
  name: Increment(Decimal)
  nameWithType: Decimal.Increment(Decimal)
  fullName: System.Decimal.Increment(System.Decimal)
  type: Operator
  source:
    remote:
      path: src/mscorlib/src/System/Decimal.cs
      branch: master
      repo: https://github.com/dotnet/coreclr.git
    id: op_Increment
    path: src/mscorlib/src/System/Decimal.cs
    startLine: 1100
  assemblies:
  - System.Runtime
  namespace: System
  summary: "\n<p>Increments the <xref href=\"System.Decimal\" data-throw-if-not-resolved=\"false\"></xref> operand by 1.</p>\n"
  syntax:
    content: public static decimal operator ++(decimal d)
    content.vb: VB cannot support this operator.
    parameters:
    - id: d
      type: System.Decimal
      description: "\n<p>The value to increment. </p>\n"
    return:
      type: System.Decimal
      description: "\n<p>The value of <em>d</em> incremented by 1.</p>\n"
  exceptions:
  - type: System.OverflowException
    commentId: T:System.OverflowException
    description: "\n<p>The return value is less than <xref href=\"System.Decimal.MinValue\" data-throw-if-not-resolved=\"false\"></xref> or greater than <xref href=\"System.Decimal.MaxValue\" data-throw-if-not-resolved=\"false\"></xref>. </p>\n"
  seealso:
  - linkId: System.Decimal.Add(System.Decimal,System.Decimal)
    commentId: M:System.Decimal.Add(System.Decimal,System.Decimal)
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: System.Decimal.op_Inequality(System.Decimal,System.Decimal)
  commentId: M:System.Decimal.op_Inequality(System.Decimal,System.Decimal)
  id: op_Inequality(System.Decimal,System.Decimal)
  parent: System.Decimal
  langs:
  - csharp
  - vb
  name: Inequality(Decimal, Decimal)
  nameWithType: Decimal.Inequality(Decimal, Decimal)
  fullName: System.Decimal.Inequality(System.Decimal, System.Decimal)
  type: Operator
  source:
    remote:
      path: src/mscorlib/src/System/Decimal.cs
      branch: master
      repo: https://github.com/dotnet/coreclr.git
    id: op_Inequality
    path: src/mscorlib/src/System/Decimal.cs
    startLine: 1141
  assemblies:
  - System.Runtime
  namespace: System
  summary: "\n<p>Returns a value that indicates whether two <xref href=\"System.Decimal\" data-throw-if-not-resolved=\"false\"></xref> objects have different values.</p>\n"
  syntax:
    content: >-
      [SecuritySafeCritical]

      public static bool operator !=(decimal d1, decimal d2)
    content.vb: >-
      <SecuritySafeCritical>

      Public Shared Operator <>(d1 As Decimal, d2 As Decimal) As Boolean
    parameters:
    - id: d1
      type: System.Decimal
      description: "\n<p>The first value to compare. </p>\n"
    - id: d2
      type: System.Decimal
      description: "\n<p>The second value to compare. </p>\n"
    return:
      type: System.Boolean
      description: "\n<p>\n<strong>true</strong> if <em>d1</em> and <em>d2</em> are not equal; otherwise, <strong>false</strong>.</p>\n"
  seealso:
  - linkId: System.Decimal.Equals(System.Object)
    commentId: M:System.Decimal.Equals(System.Object)
  - linkId: System.Decimal.op_Equality(System.Decimal,System.Decimal)
    commentId: M:System.Decimal.op_Equality(System.Decimal,System.Decimal)
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: System.Decimal.op_LessThan(System.Decimal,System.Decimal)
  commentId: M:System.Decimal.op_LessThan(System.Decimal,System.Decimal)
  id: op_LessThan(System.Decimal,System.Decimal)
  parent: System.Decimal
  langs:
  - csharp
  - vb
  name: LessThan(Decimal, Decimal)
  nameWithType: Decimal.LessThan(Decimal, Decimal)
  fullName: System.Decimal.LessThan(System.Decimal, System.Decimal)
  type: Operator
  source:
    remote:
      path: src/mscorlib/src/System/Decimal.cs
      branch: master
      repo: https://github.com/dotnet/coreclr.git
    id: op_LessThan
    path: src/mscorlib/src/System/Decimal.cs
    startLine: 1146
  assemblies:
  - System.Runtime
  namespace: System
  summary: "\n<p>Returns a value indicating whether a specified <xref href=\"System.Decimal\" data-throw-if-not-resolved=\"false\"></xref> is less than another specified <xref href=\"System.Decimal\" data-throw-if-not-resolved=\"false\"></xref>.</p>\n"
  syntax:
    content: >-
      [SecuritySafeCritical]

      public static bool operator <(decimal d1, decimal d2)
    content.vb: >-
      <SecuritySafeCritical>

      Public Shared Operator <(d1 As Decimal, d2 As Decimal) As Boolean
    parameters:
    - id: d1
      type: System.Decimal
      description: "\n<p>The first value to compare. </p>\n"
    - id: d2
      type: System.Decimal
      description: "\n<p>The second value to compare. </p>\n"
    return:
      type: System.Boolean
      description: "\n<p>\n<strong>true</strong> if <em>d1</em> is less than <em>d2</em>; otherwise, <strong>false</strong>.</p>\n"
  seealso:
  - linkId: System.Decimal.Compare(System.Decimal,System.Decimal)
    commentId: M:System.Decimal.Compare(System.Decimal,System.Decimal)
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: System.Decimal.op_LessThanOrEqual(System.Decimal,System.Decimal)
  commentId: M:System.Decimal.op_LessThanOrEqual(System.Decimal,System.Decimal)
  id: op_LessThanOrEqual(System.Decimal,System.Decimal)
  parent: System.Decimal
  langs:
  - csharp
  - vb
  name: LessThanOrEqual(Decimal, Decimal)
  nameWithType: Decimal.LessThanOrEqual(Decimal, Decimal)
  fullName: System.Decimal.LessThanOrEqual(System.Decimal, System.Decimal)
  type: Operator
  source:
    remote:
      path: src/mscorlib/src/System/Decimal.cs
      branch: master
      repo: https://github.com/dotnet/coreclr.git
    id: op_LessThanOrEqual
    path: src/mscorlib/src/System/Decimal.cs
    startLine: 1151
  assemblies:
  - System.Runtime
  namespace: System
  summary: "\n<p>Returns a value indicating whether a specified <xref href=\"System.Decimal\" data-throw-if-not-resolved=\"false\"></xref> is less than or equal to another specified <xref href=\"System.Decimal\" data-throw-if-not-resolved=\"false\"></xref>.</p>\n"
  syntax:
    content: >-
      [SecuritySafeCritical]

      public static bool operator <=(decimal d1, decimal d2)
    content.vb: >-
      <SecuritySafeCritical>

      Public Shared Operator <=(d1 As Decimal, d2 As Decimal) As Boolean
    parameters:
    - id: d1
      type: System.Decimal
      description: "\n<p>The first value to compare. </p>\n"
    - id: d2
      type: System.Decimal
      description: "\n<p>The second value to compare. </p>\n"
    return:
      type: System.Boolean
      description: "\n<p>\n<strong>true</strong> if <em>d1</em> is less than or equal to <em>d2</em>; otherwise, <strong>false</strong>.</p>\n"
  seealso:
  - linkId: System.Decimal.Compare(System.Decimal,System.Decimal)
    commentId: M:System.Decimal.Compare(System.Decimal,System.Decimal)
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: System.Decimal.op_Modulus(System.Decimal,System.Decimal)
  commentId: M:System.Decimal.op_Modulus(System.Decimal,System.Decimal)
  id: op_Modulus(System.Decimal,System.Decimal)
  parent: System.Decimal
  langs:
  - csharp
  - vb
  name: Modulus(Decimal, Decimal)
  nameWithType: Decimal.Modulus(Decimal, Decimal)
  fullName: System.Decimal.Modulus(System.Decimal, System.Decimal)
  type: Operator
  source:
    remote:
      path: src/mscorlib/src/System/Decimal.cs
      branch: master
      repo: https://github.com/dotnet/coreclr.git
    id: op_Modulus
    path: src/mscorlib/src/System/Decimal.cs
    startLine: 1132
  assemblies:
  - System.Runtime
  namespace: System
  summary: "\n<p>Returns the remainder resulting from dividing two specified <xref href=\"System.Decimal\" data-throw-if-not-resolved=\"false\"></xref> values.</p>\n"
  syntax:
    content: public static decimal operator %(decimal d1, decimal d2)
    content.vb: Public Shared Operator Mod(d1 As Decimal, d2 As Decimal) As Decimal
    parameters:
    - id: d1
      type: System.Decimal
      description: "\n<p>The dividend. </p>\n"
    - id: d2
      type: System.Decimal
      description: "\n<p>The divisor. </p>\n"
    return:
      type: System.Decimal
      description: "\n<p>The remainder resulting from dividing <em>d1</em> by <em>d2</em>.</p>\n"
  exceptions:
  - type: System.DivideByZeroException
    commentId: T:System.DivideByZeroException
    description: "\n<p>\n<em>d2</em> is <strong>zero</strong>. </p>\n"
  - type: System.OverflowException
    commentId: T:System.OverflowException
    description: "\n<p>The return value is less than <xref href=\"System.Decimal.MinValue\" data-throw-if-not-resolved=\"false\"></xref> or greater than <xref href=\"System.Decimal.MaxValue\" data-throw-if-not-resolved=\"false\"></xref>. </p>\n"
  seealso:
  - linkId: System.Decimal.Remainder(System.Decimal,System.Decimal)
    commentId: M:System.Decimal.Remainder(System.Decimal,System.Decimal)
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: System.Decimal.op_Multiply(System.Decimal,System.Decimal)
  commentId: M:System.Decimal.op_Multiply(System.Decimal,System.Decimal)
  id: op_Multiply(System.Decimal,System.Decimal)
  parent: System.Decimal
  langs:
  - csharp
  - vb
  name: Multiply(Decimal, Decimal)
  nameWithType: Decimal.Multiply(Decimal, Decimal)
  fullName: System.Decimal.Multiply(System.Decimal, System.Decimal)
  type: Operator
  source:
    remote:
      path: src/mscorlib/src/System/Decimal.cs
      branch: master
      repo: https://github.com/dotnet/coreclr.git
    id: op_Multiply
    path: src/mscorlib/src/System/Decimal.cs
    startLine: 1120
  assemblies:
  - System.Runtime
  namespace: System
  summary: "\n<p>Multiplies two specified <xref href=\"System.Decimal\" data-throw-if-not-resolved=\"false\"></xref> values.</p>\n"
  syntax:
    content: >-
      [SecuritySafeCritical]

      public static decimal operator *(decimal d1, decimal d2)
    content.vb: >-
      <SecuritySafeCritical>

      Public Shared Operator *(d1 As Decimal, d2 As Decimal) As Decimal
    parameters:
    - id: d1
      type: System.Decimal
      description: "\n<p>The first value to multiply. </p>\n"
    - id: d2
      type: System.Decimal
      description: "\n<p>The second value to multiply. </p>\n"
    return:
      type: System.Decimal
      description: "\n<p>The result of multiplying <em>d1</em> by <em>d2</em>.</p>\n"
  exceptions:
  - type: System.OverflowException
    commentId: T:System.OverflowException
    description: "\n<p>The return value is less than <xref href=\"System.Decimal.MinValue\" data-throw-if-not-resolved=\"false\"></xref> or greater than <xref href=\"System.Decimal.MaxValue\" data-throw-if-not-resolved=\"false\"></xref>. </p>\n"
  seealso:
  - linkId: System.Decimal.Multiply(System.Decimal,System.Decimal)
    commentId: M:System.Decimal.Multiply(System.Decimal,System.Decimal)
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: System.Decimal.op_Subtraction(System.Decimal,System.Decimal)
  commentId: M:System.Decimal.op_Subtraction(System.Decimal,System.Decimal)
  id: op_Subtraction(System.Decimal,System.Decimal)
  parent: System.Decimal
  langs:
  - csharp
  - vb
  name: Subtraction(Decimal, Decimal)
  nameWithType: Decimal.Subtraction(Decimal, Decimal)
  fullName: System.Decimal.Subtraction(System.Decimal, System.Decimal)
  type: Operator
  source:
    remote:
      path: src/mscorlib/src/System/Decimal.cs
      branch: master
      repo: https://github.com/dotnet/coreclr.git
    id: op_Subtraction
    path: src/mscorlib/src/System/Decimal.cs
    startLine: 1114
  assemblies:
  - System.Runtime
  namespace: System
  summary: "\n<p>Subtracts two specified <xref href=\"System.Decimal\" data-throw-if-not-resolved=\"false\"></xref> values.</p>\n"
  syntax:
    content: >-
      [SecuritySafeCritical]

      public static decimal operator -(decimal d1, decimal d2)
    content.vb: >-
      <SecuritySafeCritical>

      Public Shared Operator -(d1 As Decimal, d2 As Decimal) As Decimal
    parameters:
    - id: d1
      type: System.Decimal
      description: "\n<p>The minuend. </p>\n"
    - id: d2
      type: System.Decimal
      description: "\n<p>The subtrahend. </p>\n"
    return:
      type: System.Decimal
      description: "\n<p>The result of subtracting <em>d2</em> from <em>d1</em>.</p>\n"
  exceptions:
  - type: System.OverflowException
    commentId: T:System.OverflowException
    description: "\n<p>The return value is less than <xref href=\"System.Decimal.MinValue\" data-throw-if-not-resolved=\"false\"></xref> or greater than <xref href=\"System.Decimal.MaxValue\" data-throw-if-not-resolved=\"false\"></xref>. </p>\n"
  seealso:
  - linkId: System.Decimal.Subtract(System.Decimal,System.Decimal)
    commentId: M:System.Decimal.Subtract(System.Decimal,System.Decimal)
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: System.Decimal.op_UnaryNegation(System.Decimal)
  commentId: M:System.Decimal.op_UnaryNegation(System.Decimal)
  id: op_UnaryNegation(System.Decimal)
  parent: System.Decimal
  langs:
  - csharp
  - vb
  name: UnaryNegation(Decimal)
  nameWithType: Decimal.UnaryNegation(Decimal)
  fullName: System.Decimal.UnaryNegation(System.Decimal)
  type: Operator
  source:
    remote:
      path: src/mscorlib/src/System/Decimal.cs
      branch: master
      repo: https://github.com/dotnet/coreclr.git
    id: op_UnaryNegation
    path: src/mscorlib/src/System/Decimal.cs
    startLine: 1096
  assemblies:
  - System.Runtime
  namespace: System
  summary: "\n<p>Negates the value of the specified <xref href=\"System.Decimal\" data-throw-if-not-resolved=\"false\"></xref> operand.</p>\n"
  syntax:
    content: public static decimal operator -(decimal d)
    content.vb: Public Shared Operator -(d As Decimal) As Decimal
    parameters:
    - id: d
      type: System.Decimal
      description: "\n<p>The value to negate. </p>\n"
    return:
      type: System.Decimal
      description: "\n<p>The result of <em>d</em> multiplied by negative one (-1).</p>\n"
  seealso:
  - linkId: System.Decimal.Negate(System.Decimal)
    commentId: M:System.Decimal.Negate(System.Decimal)
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: System.Decimal.op_UnaryPlus(System.Decimal)
  commentId: M:System.Decimal.op_UnaryPlus(System.Decimal)
  id: op_UnaryPlus(System.Decimal)
  parent: System.Decimal
  langs:
  - csharp
  - vb
  name: UnaryPlus(Decimal)
  nameWithType: Decimal.UnaryPlus(Decimal)
  fullName: System.Decimal.UnaryPlus(System.Decimal)
  type: Operator
  source:
    remote:
      path: src/mscorlib/src/System/Decimal.cs
      branch: master
      repo: https://github.com/dotnet/coreclr.git
    id: op_UnaryPlus
    path: src/mscorlib/src/System/Decimal.cs
    startLine: 1092
  assemblies:
  - System.Runtime
  namespace: System
  summary: "\n<p>Returns the value of the <xref href=\"System.Decimal\" data-throw-if-not-resolved=\"false\"></xref> operand (the sign of the operand is unchanged).</p>\n"
  syntax:
    content: public static decimal operator +(decimal d)
    content.vb: Public Shared Operator +(d As Decimal) As Decimal
    parameters:
    - id: d
      type: System.Decimal
      description: "\n<p>The operand to return.</p>\n"
    return:
      type: System.Decimal
      description: "\n<p>The value of the operand, <em>d</em>.</p>\n"
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: System.Decimal.Parse(System.String)
  commentId: M:System.Decimal.Parse(System.String)
  id: Parse(System.String)
  parent: System.Decimal
  langs:
  - csharp
  - vb
  name: Parse(String)
  nameWithType: Decimal.Parse(String)
  fullName: System.Decimal.Parse(System.String)
  type: Method
  source:
    remote:
      path: src/mscorlib/src/System/Decimal.cs
      branch: master
      repo: https://github.com/dotnet/coreclr.git
    id: Parse
    path: src/mscorlib/src/System/Decimal.cs
    startLine: 512
  assemblies:
  - System.Runtime
  namespace: System
  summary: "\n<p>Converts the string representation of a number to its <xref href=\"System.Decimal\" data-throw-if-not-resolved=\"false\"></xref> equivalent.</p>\n"
  syntax:
    content: public static decimal Parse(string s)
    content.vb: Public Shared Function Parse(s As String) As Decimal
    parameters:
    - id: s
      type: System.String
      description: "\n<p>The string representation of the number to convert.</p>\n"
    return:
      type: System.Decimal
      description: "\n<p>The equivalent to the number contained in <em>s</em>.</p>\n"
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "\n<p>\n<em>s</em> is <strong>null</strong>. </p>\n"
  - type: System.FormatException
    commentId: T:System.FormatException
    description: "\n<p>\n<em>s</em> is not in the correct format. </p>\n"
  - type: System.OverflowException
    commentId: T:System.OverflowException
    description: "\n<p>\n<em>s</em> represents a number less than <xref href=\"System.Decimal.MinValue\" data-throw-if-not-resolved=\"false\"></xref> or greater than <xref href=\"System.Decimal.MaxValue\" data-throw-if-not-resolved=\"false\"></xref>. </p>\n"
  seealso:
  - linkId: System.Decimal.TryParse(System.String,System.Decimal@)
    commentId: M:System.Decimal.TryParse(System.String,System.Decimal@)
  - linkId: System.Decimal.ToString
    commentId: M:System.Decimal.ToString
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: System.Decimal.Parse(System.String,System.Globalization.NumberStyles)
  commentId: M:System.Decimal.Parse(System.String,System.Globalization.NumberStyles)
  id: Parse(System.String,System.Globalization.NumberStyles)
  parent: System.Decimal
  langs:
  - csharp
  - vb
  name: Parse(String, NumberStyles)
  nameWithType: Decimal.Parse(String, NumberStyles)
  fullName: System.Decimal.Parse(System.String, System.Globalization.NumberStyles)
  type: Method
  source:
    remote:
      path: src/mscorlib/src/System/Decimal.cs
      branch: master
      repo: https://github.com/dotnet/coreclr.git
    id: Parse
    path: src/mscorlib/src/System/Decimal.cs
    startLine: 516
  assemblies:
  - System.Runtime
  namespace: System
  summary: "\n<p>Converts the string representation of a number in a specified style to its <xref href=\"System.Decimal\" data-throw-if-not-resolved=\"false\"></xref> equivalent.</p>\n"
  syntax:
    content: public static decimal Parse(string s, NumberStyles style)
    content.vb: Public Shared Function Parse(s As String, style As NumberStyles) As Decimal
    parameters:
    - id: s
      type: System.String
      description: "\n<p>The string representation of the number to convert. </p>\n"
    - id: style
      type: System.Globalization.NumberStyles
      description: "\n<p>A bitwise combination of <xref href=\"System.Globalization.NumberStyles\" data-throw-if-not-resolved=\"false\"></xref> values that indicates the style elements that can be present in <em>s</em>. A typical value to specify is <xref href=\"System.Globalization.NumberStyles.Number\" data-throw-if-not-resolved=\"false\"></xref>.</p>\n"
    return:
      type: System.Decimal
      description: "\n<p>The <xref href=\"System.Decimal\" data-throw-if-not-resolved=\"false\"></xref> number equivalent to the number contained in <em>s</em> as specified by <em>style</em>.</p>\n"
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "\n<p>\n<em>s</em> is <strong>null</strong>.</p>\n"
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "\n<p>\n<em>style</em> is not a <xref href=\"System.Globalization.NumberStyles\" data-throw-if-not-resolved=\"false\"></xref> value. </p>\n<p>-or-</p>\n<p>\n<em>style</em> is the <xref href=\"System.Globalization.NumberStyles.AllowHexSpecifier\" data-throw-if-not-resolved=\"false\"></xref> value.</p>\n"
  - type: System.FormatException
    commentId: T:System.FormatException
    description: "\n<p>\n<em>s</em> is not in the correct format. </p>\n"
  - type: System.OverflowException
    commentId: T:System.OverflowException
    description: "\n<p>\n<em>s</em> represents a number less than <xref href=\"System.Decimal.MinValue\" data-throw-if-not-resolved=\"false\"></xref> or greater than <xref href=\"System.Decimal.MaxValue\" data-throw-if-not-resolved=\"false\"></xref></p>\n"
  seealso:
  - linkId: System.Decimal.TryParse(System.String,System.Decimal@)
    commentId: M:System.Decimal.TryParse(System.String,System.Decimal@)
  - linkId: System.Decimal.ToString
    commentId: M:System.Decimal.ToString
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: System.Decimal.Parse(System.String,System.Globalization.NumberStyles,System.IFormatProvider)
  commentId: M:System.Decimal.Parse(System.String,System.Globalization.NumberStyles,System.IFormatProvider)
  id: Parse(System.String,System.Globalization.NumberStyles,System.IFormatProvider)
  parent: System.Decimal
  langs:
  - csharp
  - vb
  name: Parse(String, NumberStyles, IFormatProvider)
  nameWithType: Decimal.Parse(String, NumberStyles, IFormatProvider)
  fullName: System.Decimal.Parse(System.String, System.Globalization.NumberStyles, System.IFormatProvider)
  type: Method
  source:
    remote:
      path: src/mscorlib/src/System/Decimal.cs
      branch: master
      repo: https://github.com/dotnet/coreclr.git
    id: Parse
    path: src/mscorlib/src/System/Decimal.cs
    startLine: 525
  assemblies:
  - System.Runtime
  namespace: System
  summary: "\n<p>Converts the string representation of a number to its <xref href=\"System.Decimal\" data-throw-if-not-resolved=\"false\"></xref> equivalent using the specified style and culture-specific format.</p>\n"
  syntax:
    content: public static decimal Parse(string s, NumberStyles style, IFormatProvider provider)
    content.vb: Public Shared Function Parse(s As String, style As NumberStyles, provider As IFormatProvider) As Decimal
    parameters:
    - id: s
      type: System.String
      description: "\n<p>The string representation of the number to convert. </p>\n"
    - id: style
      type: System.Globalization.NumberStyles
      description: "\n<p>A bitwise combination of <xref href=\"System.Globalization.NumberStyles\" data-throw-if-not-resolved=\"false\"></xref> values that indicates the style elements that can be present in <em>s</em>. A typical value to specify is <xref href=\"System.Globalization.NumberStyles.Number\" data-throw-if-not-resolved=\"false\"></xref>.</p>\n"
    - id: provider
      type: System.IFormatProvider
      description: "\n<p>An <xref href=\"System.IFormatProvider\" data-throw-if-not-resolved=\"false\"></xref> object that supplies culture-specific information about the format of <em>s</em>. </p>\n"
    return:
      type: System.Decimal
      description: "\n<p>The <xref href=\"System.Decimal\" data-throw-if-not-resolved=\"false\"></xref> number equivalent to the number contained in <em>s</em> as specified by <em>style</em> and <em>provider</em>.</p>\n"
  exceptions:
  - type: System.FormatException
    commentId: T:System.FormatException
    description: "\n<p>\n<em>s</em> is not in the correct format. </p>\n"
  - type: System.OverflowException
    commentId: T:System.OverflowException
    description: "\n<p>\n<em>s</em> represents a number less than <xref href=\"System.Decimal.MinValue\" data-throw-if-not-resolved=\"false\"></xref> or greater than <xref href=\"System.Decimal.MaxValue\" data-throw-if-not-resolved=\"false\"></xref>. </p>\n"
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "\n<p>\n<em>s</em> is <strong>null</strong>.</p>\n"
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "\n<p>\n<em>style</em> is not a <xref href=\"System.Globalization.NumberStyles\" data-throw-if-not-resolved=\"false\"></xref> value. </p>\n<p>-or-</p>\n<p>\n<em>style</em> is the <xref href=\"System.Globalization.NumberStyles.AllowHexSpecifier\" data-throw-if-not-resolved=\"false\"></xref> value.</p>\n"
  seealso:
  - linkId: System.Decimal.TryParse(System.String,System.Decimal@)
    commentId: M:System.Decimal.TryParse(System.String,System.Decimal@)
  - linkId: System.Decimal.ToString
    commentId: M:System.Decimal.ToString
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: System.Decimal.Parse(System.String,System.IFormatProvider)
  commentId: M:System.Decimal.Parse(System.String,System.IFormatProvider)
  id: Parse(System.String,System.IFormatProvider)
  parent: System.Decimal
  langs:
  - csharp
  - vb
  name: Parse(String, IFormatProvider)
  nameWithType: Decimal.Parse(String, IFormatProvider)
  fullName: System.Decimal.Parse(System.String, System.IFormatProvider)
  type: Method
  source:
    remote:
      path: src/mscorlib/src/System/Decimal.cs
      branch: master
      repo: https://github.com/dotnet/coreclr.git
    id: Parse
    path: src/mscorlib/src/System/Decimal.cs
    startLine: 521
  assemblies:
  - System.Runtime
  namespace: System
  summary: "\n<p>Converts the string representation of a number to its <xref href=\"System.Decimal\" data-throw-if-not-resolved=\"false\"></xref> equivalent using the specified culture-specific format information.</p>\n"
  syntax:
    content: public static decimal Parse(string s, IFormatProvider provider)
    content.vb: Public Shared Function Parse(s As String, provider As IFormatProvider) As Decimal
    parameters:
    - id: s
      type: System.String
      description: "\n<p>The string representation of the number to convert. </p>\n"
    - id: provider
      type: System.IFormatProvider
      description: "\n<p>An <xref href=\"System.IFormatProvider\" data-throw-if-not-resolved=\"false\"></xref> that supplies culture-specific parsing information about <em>s</em>. </p>\n"
    return:
      type: System.Decimal
      description: "\n<p>The <xref href=\"System.Decimal\" data-throw-if-not-resolved=\"false\"></xref> number equivalent to the number contained in <em>s</em> as specified by <em>provider</em>.</p>\n"
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "\n<p>\n<em>s</em> is <strong>null</strong>. </p>\n"
  - type: System.FormatException
    commentId: T:System.FormatException
    description: "\n<p>\n<em>s</em> is not of the correct format </p>\n"
  - type: System.OverflowException
    commentId: T:System.OverflowException
    description: "\n<p>\n<em>s</em> represents a number less than <xref href=\"System.Decimal.MinValue\" data-throw-if-not-resolved=\"false\"></xref> or greater than <xref href=\"System.Decimal.MaxValue\" data-throw-if-not-resolved=\"false\"></xref></p>\n"
  seealso:
  - linkId: System.Decimal.TryParse(System.String,System.Decimal@)
    commentId: M:System.Decimal.TryParse(System.String,System.Decimal@)
  - linkId: System.Decimal.ToString
    commentId: M:System.Decimal.ToString
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: System.Decimal.Remainder(System.Decimal,System.Decimal)
  commentId: M:System.Decimal.Remainder(System.Decimal,System.Decimal)
  id: Remainder(System.Decimal,System.Decimal)
  parent: System.Decimal
  langs:
  - csharp
  - vb
  name: Remainder(Decimal, Decimal)
  nameWithType: Decimal.Remainder(Decimal, Decimal)
  fullName: System.Decimal.Remainder(System.Decimal, System.Decimal)
  type: Method
  source:
    remote:
      path: src/mscorlib/src/System/Decimal.cs
      branch: master
      repo: https://github.com/dotnet/coreclr.git
    id: Remainder
    path: src/mscorlib/src/System/Decimal.cs
    startLine: 673
  assemblies:
  - System.Runtime
  namespace: System
  summary: "\n<p>Computes the remainder after dividing two <xref href=\"System.Decimal\" data-throw-if-not-resolved=\"false\"></xref> values.</p>\n"
  syntax:
    content: public static decimal Remainder(decimal d1, decimal d2)
    content.vb: Public Shared Function Remainder(d1 As Decimal, d2 As Decimal) As Decimal
    parameters:
    - id: d1
      type: System.Decimal
      description: "\n<p>The dividend. </p>\n"
    - id: d2
      type: System.Decimal
      description: "\n<p>The divisor. </p>\n"
    return:
      type: System.Decimal
      description: "\n<p>The remainder after dividing <em>d1</em> by <em>d2</em>.</p>\n"
  exceptions:
  - type: System.DivideByZeroException
    commentId: T:System.DivideByZeroException
    description: "\n<p>\n<em>d2</em> is zero. </p>\n"
  - type: System.OverflowException
    commentId: T:System.OverflowException
    description: "\n<p>The return value is less than <xref href=\"System.Decimal.MinValue\" data-throw-if-not-resolved=\"false\"></xref> or greater than <xref href=\"System.Decimal.MaxValue\" data-throw-if-not-resolved=\"false\"></xref>. </p>\n"
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: System.Decimal.Subtract(System.Decimal,System.Decimal)
  commentId: M:System.Decimal.Subtract(System.Decimal,System.Decimal)
  id: Subtract(System.Decimal,System.Decimal)
  parent: System.Decimal
  langs:
  - csharp
  - vb
  name: Subtract(Decimal, Decimal)
  nameWithType: Decimal.Subtract(Decimal, Decimal)
  fullName: System.Decimal.Subtract(System.Decimal, System.Decimal)
  type: Method
  source:
    remote:
      path: src/mscorlib/src/System/Decimal.cs
      branch: master
      repo: https://github.com/dotnet/coreclr.git
    id: Subtract
    path: src/mscorlib/src/System/Decimal.cs
    startLine: 790
  assemblies:
  - System.Runtime
  namespace: System
  summary: "\n<p>Subtracts one specified <xref href=\"System.Decimal\" data-throw-if-not-resolved=\"false\"></xref> value from another.</p>\n"
  syntax:
    content: >-
      [SecuritySafeCritical]

      public static decimal Subtract(decimal d1, decimal d2)
    content.vb: >-
      <SecuritySafeCritical>

      Public Shared Function Subtract(d1 As Decimal, d2 As Decimal) As Decimal
    parameters:
    - id: d1
      type: System.Decimal
      description: "\n<p>The minuend. </p>\n"
    - id: d2
      type: System.Decimal
      description: "\n<p>The subtrahend. </p>\n"
    return:
      type: System.Decimal
      description: "\n<p>The result of subtracting <em>d2</em> from <em>d1</em>.</p>\n"
  exceptions:
  - type: System.OverflowException
    commentId: T:System.OverflowException
    description: "\n<p>The return value is less than <xref href=\"System.Decimal.MinValue\" data-throw-if-not-resolved=\"false\"></xref> or greater than <xref href=\"System.Decimal.MaxValue\" data-throw-if-not-resolved=\"false\"></xref>. </p>\n"
  seealso:
  - linkId: System.Decimal.Add(System.Decimal,System.Decimal)
    commentId: M:System.Decimal.Add(System.Decimal,System.Decimal)
  - linkId: System.Decimal.Multiply(System.Decimal,System.Decimal)
    commentId: M:System.Decimal.Multiply(System.Decimal,System.Decimal)
  - linkId: System.Decimal.Divide(System.Decimal,System.Decimal)
    commentId: M:System.Decimal.Divide(System.Decimal,System.Decimal)
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: System.Decimal.System#IComparable#CompareTo(System.Object)
  commentId: M:System.Decimal.System#IComparable#CompareTo(System.Object)
  id: System#IComparable#CompareTo(System.Object)
  isEii: true
  parent: System.Decimal
  langs:
  - csharp
  - vb
  name: IComparable.CompareTo(Object)
  nameWithType: Decimal.IComparable.CompareTo(Object)
  fullName: System.Decimal.System.IComparable.CompareTo(System.Object)
  type: Method
  source:
    remote:
      path: src/System.Runtime/ref/System.Runtime.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: System.IComparable.CompareTo
    path: src/System.Runtime/ref/System.Runtime.cs
    startLine: 683
  assemblies:
  - System.Runtime
  namespace: System
  syntax:
    content: int IComparable.CompareTo(object value)
    content.vb: Function System.IComparable.CompareTo(value As Object) As Integer Implements IComparable.CompareTo
    parameters:
    - id: value
      type: System.Object
    return:
      type: System.Int32
  implements:
  - System.IComparable.CompareTo(System.Object)
  nameWithType.vb: Decimal.System.IComparable.CompareTo(Object)
  name.vb: System.IComparable.CompareTo(Object)
- uid: System.Decimal.System#IConvertible#GetTypeCode
  commentId: M:System.Decimal.System#IConvertible#GetTypeCode
  id: System#IConvertible#GetTypeCode
  isEii: true
  parent: System.Decimal
  langs:
  - csharp
  - vb
  name: IConvertible.GetTypeCode()
  nameWithType: Decimal.IConvertible.GetTypeCode()
  fullName: System.Decimal.System.IConvertible.GetTypeCode()
  type: Method
  source:
    remote:
      path: src/System.Runtime/ref/System.Runtime.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: System.IConvertible.GetTypeCode
    path: src/System.Runtime/ref/System.Runtime.cs
    startLine: 684
  assemblies:
  - System.Runtime
  namespace: System
  syntax:
    content: TypeCode IConvertible.GetTypeCode()
    content.vb: Function System.IConvertible.GetTypeCode As TypeCode Implements IConvertible.GetTypeCode
    return:
      type: System.TypeCode
  implements:
  - System.IConvertible.GetTypeCode
  nameWithType.vb: Decimal.System.IConvertible.GetTypeCode()
  name.vb: System.IConvertible.GetTypeCode()
- uid: System.Decimal.System#IConvertible#ToBoolean(System.IFormatProvider)
  commentId: M:System.Decimal.System#IConvertible#ToBoolean(System.IFormatProvider)
  id: System#IConvertible#ToBoolean(System.IFormatProvider)
  isEii: true
  parent: System.Decimal
  langs:
  - csharp
  - vb
  name: IConvertible.ToBoolean(IFormatProvider)
  nameWithType: Decimal.IConvertible.ToBoolean(IFormatProvider)
  fullName: System.Decimal.System.IConvertible.ToBoolean(System.IFormatProvider)
  type: Method
  source:
    remote:
      path: src/mscorlib/src/System/Decimal.cs
      branch: master
      repo: https://github.com/dotnet/coreclr.git
    id: System.IConvertible.ToBoolean
    path: src/mscorlib/src/System/Decimal.cs
    startLine: 1175
  assemblies:
  - System.Runtime
  namespace: System
  summary: "\n<p>For a description of this member, see <xref href=\"System.IConvertible.ToBoolean(System.IFormatProvider)\" data-throw-if-not-resolved=\"false\"></xref>.</p>\n"
  syntax:
    content: bool IConvertible.ToBoolean(IFormatProvider provider)
    content.vb: Function System.IConvertible.ToBoolean(provider As IFormatProvider) As Boolean Implements IConvertible.ToBoolean
    parameters:
    - id: provider
      type: System.IFormatProvider
      description: "\n<p>This parameter is ignored. </p>\n"
    return:
      type: System.Boolean
      description: "\n<p>\n<strong>true</strong> if the value of the current instance is not zero; otherwise, <strong>false</strong>.</p>\n"
  implements:
  - System.IConvertible.ToBoolean(System.IFormatProvider)
  nameWithType.vb: Decimal.System.IConvertible.ToBoolean(IFormatProvider)
  name.vb: System.IConvertible.ToBoolean(IFormatProvider)
- uid: System.Decimal.System#IConvertible#ToByte(System.IFormatProvider)
  commentId: M:System.Decimal.System#IConvertible#ToByte(System.IFormatProvider)
  id: System#IConvertible#ToByte(System.IFormatProvider)
  isEii: true
  parent: System.Decimal
  langs:
  - csharp
  - vb
  name: IConvertible.ToByte(IFormatProvider)
  nameWithType: Decimal.IConvertible.ToByte(IFormatProvider)
  fullName: System.Decimal.System.IConvertible.ToByte(System.IFormatProvider)
  type: Method
  source:
    remote:
      path: src/mscorlib/src/System/Decimal.cs
      branch: master
      repo: https://github.com/dotnet/coreclr.git
    id: System.IConvertible.ToByte
    path: src/mscorlib/src/System/Decimal.cs
    startLine: 1191
  assemblies:
  - System.Runtime
  namespace: System
  summary: "\n<p>For a description of this member, see <xref href=\"System.IConvertible.ToByte(System.IFormatProvider)\" data-throw-if-not-resolved=\"false\"></xref>.</p>\n"
  syntax:
    content: byte IConvertible.ToByte(IFormatProvider provider)
    content.vb: Function System.IConvertible.ToByte(provider As IFormatProvider) As Byte Implements IConvertible.ToByte
    parameters:
    - id: provider
      type: System.IFormatProvider
      description: "\n<p>This parameter is ignored.</p>\n"
    return:
      type: System.Byte
      description: "\n<p>The value of the current instance, converted to a <xref href=\"System.Byte\" data-throw-if-not-resolved=\"false\"></xref>.</p>\n"
  exceptions:
  - type: System.OverflowException
    commentId: T:System.OverflowException
    description: "\n<p>The resulting integer value is less than <xref href=\"System.Byte.MinValue\" data-throw-if-not-resolved=\"false\"></xref> or greater than <xref href=\"System.Byte.MaxValue\" data-throw-if-not-resolved=\"false\"></xref>. </p>\n"
  implements:
  - System.IConvertible.ToByte(System.IFormatProvider)
  nameWithType.vb: Decimal.System.IConvertible.ToByte(IFormatProvider)
  name.vb: System.IConvertible.ToByte(IFormatProvider)
- uid: System.Decimal.System#IConvertible#ToChar(System.IFormatProvider)
  commentId: M:System.Decimal.System#IConvertible#ToChar(System.IFormatProvider)
  id: System#IConvertible#ToChar(System.IFormatProvider)
  isEii: true
  parent: System.Decimal
  langs:
  - csharp
  - vb
  name: IConvertible.ToChar(IFormatProvider)
  nameWithType: Decimal.IConvertible.ToChar(IFormatProvider)
  fullName: System.Decimal.System.IConvertible.ToChar(System.IFormatProvider)
  type: Method
  source:
    remote:
      path: src/mscorlib/src/System/Decimal.cs
      branch: master
      repo: https://github.com/dotnet/coreclr.git
    id: System.IConvertible.ToChar
    path: src/mscorlib/src/System/Decimal.cs
    startLine: 1181
  assemblies:
  - System.Runtime
  namespace: System
  summary: "\n<p>This conversion is not supported. Attempting to use this method throws an <xref href=\"System.InvalidCastException\" data-throw-if-not-resolved=\"false\"></xref>.</p>\n"
  syntax:
    content: char IConvertible.ToChar(IFormatProvider provider)
    content.vb: Function System.IConvertible.ToChar(provider As IFormatProvider) As Char Implements IConvertible.ToChar
    parameters:
    - id: provider
      type: System.IFormatProvider
      description: "\n<p>This parameter is ignored.</p>\n"
    return:
      type: System.Char
      description: "\n<p>None. This conversion is not supported. </p>\n"
  exceptions:
  - type: System.InvalidCastException
    commentId: T:System.InvalidCastException
    description: "\n<p>In all cases. </p>\n"
  implements:
  - System.IConvertible.ToChar(System.IFormatProvider)
  nameWithType.vb: Decimal.System.IConvertible.ToChar(IFormatProvider)
  name.vb: System.IConvertible.ToChar(IFormatProvider)
- uid: System.Decimal.System#IConvertible#ToDateTime(System.IFormatProvider)
  commentId: M:System.Decimal.System#IConvertible#ToDateTime(System.IFormatProvider)
  id: System#IConvertible#ToDateTime(System.IFormatProvider)
  isEii: true
  parent: System.Decimal
  langs:
  - csharp
  - vb
  name: IConvertible.ToDateTime(IFormatProvider)
  nameWithType: Decimal.IConvertible.ToDateTime(IFormatProvider)
  fullName: System.Decimal.System.IConvertible.ToDateTime(System.IFormatProvider)
  type: Method
  source:
    remote:
      path: src/mscorlib/src/System/Decimal.cs
      branch: master
      repo: https://github.com/dotnet/coreclr.git
    id: System.IConvertible.ToDateTime
    path: src/mscorlib/src/System/Decimal.cs
    startLine: 1241
  assemblies:
  - System.Runtime
  namespace: System
  summary: "\n<p>This conversion is not supported. Attempting to use this method throws an <xref href=\"System.InvalidCastException\" data-throw-if-not-resolved=\"false\"></xref>.</p>\n"
  syntax:
    content: DateTime IConvertible.ToDateTime(IFormatProvider provider)
    content.vb: Function System.IConvertible.ToDateTime(provider As IFormatProvider) As Date Implements IConvertible.ToDateTime
    parameters:
    - id: provider
      type: System.IFormatProvider
      description: "\n<p>This parameter is ignored.</p>\n"
    return:
      type: System.DateTime
      description: "\n<p>None. This conversion is not supported. </p>\n"
  exceptions:
  - type: System.InvalidCastException
    commentId: T:System.InvalidCastException
    description: "\n<p>In all cases.</p>\n"
  implements:
  - System.IConvertible.ToDateTime(System.IFormatProvider)
  nameWithType.vb: Decimal.System.IConvertible.ToDateTime(IFormatProvider)
  name.vb: System.IConvertible.ToDateTime(IFormatProvider)
- uid: System.Decimal.System#IConvertible#ToDecimal(System.IFormatProvider)
  commentId: M:System.Decimal.System#IConvertible#ToDecimal(System.IFormatProvider)
  id: System#IConvertible#ToDecimal(System.IFormatProvider)
  isEii: true
  parent: System.Decimal
  langs:
  - csharp
  - vb
  name: IConvertible.ToDecimal(IFormatProvider)
  nameWithType: Decimal.IConvertible.ToDecimal(IFormatProvider)
  fullName: System.Decimal.System.IConvertible.ToDecimal(System.IFormatProvider)
  type: Method
  source:
    remote:
      path: src/mscorlib/src/System/Decimal.cs
      branch: master
      repo: https://github.com/dotnet/coreclr.git
    id: System.IConvertible.ToDecimal
    path: src/mscorlib/src/System/Decimal.cs
    startLine: 1236
  assemblies:
  - System.Runtime
  namespace: System
  summary: "\n<p>For a description of this member, see <xref href=\"System.IConvertible.ToDecimal(System.IFormatProvider)\" data-throw-if-not-resolved=\"false\"></xref>.</p>\n"
  syntax:
    content: decimal IConvertible.ToDecimal(IFormatProvider provider)
    content.vb: Function System.IConvertible.ToDecimal(provider As IFormatProvider) As Decimal Implements IConvertible.ToDecimal
    parameters:
    - id: provider
      type: System.IFormatProvider
      description: "\n<p>This parameter is ignored.</p>\n"
    return:
      type: System.Decimal
      description: "\n<p>The value of the current instance, unchanged.</p>\n"
  implements:
  - System.IConvertible.ToDecimal(System.IFormatProvider)
  nameWithType.vb: Decimal.System.IConvertible.ToDecimal(IFormatProvider)
  name.vb: System.IConvertible.ToDecimal(IFormatProvider)
- uid: System.Decimal.System#IConvertible#ToDouble(System.IFormatProvider)
  commentId: M:System.Decimal.System#IConvertible#ToDouble(System.IFormatProvider)
  id: System#IConvertible#ToDouble(System.IFormatProvider)
  isEii: true
  parent: System.Decimal
  langs:
  - csharp
  - vb
  name: IConvertible.ToDouble(IFormatProvider)
  nameWithType: Decimal.IConvertible.ToDouble(IFormatProvider)
  fullName: System.Decimal.System.IConvertible.ToDouble(System.IFormatProvider)
  type: Method
  source:
    remote:
      path: src/mscorlib/src/System/Decimal.cs
      branch: master
      repo: https://github.com/dotnet/coreclr.git
    id: System.IConvertible.ToDouble
    path: src/mscorlib/src/System/Decimal.cs
    startLine: 1231
  assemblies:
  - System.Runtime
  namespace: System
  summary: "\n<p>For a description of this member, see <xref href=\"System.IConvertible.ToDouble(System.IFormatProvider)\" data-throw-if-not-resolved=\"false\"></xref>.</p>\n"
  syntax:
    content: double IConvertible.ToDouble(IFormatProvider provider)
    content.vb: Function System.IConvertible.ToDouble(provider As IFormatProvider) As Double Implements IConvertible.ToDouble
    parameters:
    - id: provider
      type: System.IFormatProvider
      description: "\n<p>This parameter is ignored.</p>\n"
    return:
      type: System.Double
      description: "\n<p>The value of the current instance, converted to a <xref href=\"System.Double\" data-throw-if-not-resolved=\"false\"></xref>.</p>\n"
  implements:
  - System.IConvertible.ToDouble(System.IFormatProvider)
  nameWithType.vb: Decimal.System.IConvertible.ToDouble(IFormatProvider)
  name.vb: System.IConvertible.ToDouble(IFormatProvider)
- uid: System.Decimal.System#IConvertible#ToInt16(System.IFormatProvider)
  commentId: M:System.Decimal.System#IConvertible#ToInt16(System.IFormatProvider)
  id: System#IConvertible#ToInt16(System.IFormatProvider)
  isEii: true
  parent: System.Decimal
  langs:
  - csharp
  - vb
  name: IConvertible.ToInt16(IFormatProvider)
  nameWithType: Decimal.IConvertible.ToInt16(IFormatProvider)
  fullName: System.Decimal.System.IConvertible.ToInt16(System.IFormatProvider)
  type: Method
  source:
    remote:
      path: src/mscorlib/src/System/Decimal.cs
      branch: master
      repo: https://github.com/dotnet/coreclr.git
    id: System.IConvertible.ToInt16
    path: src/mscorlib/src/System/Decimal.cs
    startLine: 1196
  assemblies:
  - System.Runtime
  namespace: System
  summary: "\n<p>For a description of this member, see <xref href=\"System.IConvertible.ToInt16(System.IFormatProvider)\" data-throw-if-not-resolved=\"false\"></xref>.</p>\n"
  syntax:
    content: short IConvertible.ToInt16(IFormatProvider provider)
    content.vb: Function System.IConvertible.ToInt16(provider As IFormatProvider) As Short Implements IConvertible.ToInt16
    parameters:
    - id: provider
      type: System.IFormatProvider
      description: "\n<p>This parameter is ignored.</p>\n"
    return:
      type: System.Int16
      description: "\n<p>The value of the current instance, converted to a <xref href=\"System.Int16\" data-throw-if-not-resolved=\"false\"></xref>.</p>\n"
  exceptions:
  - type: System.OverflowException
    commentId: T:System.OverflowException
    description: "\n<p>The resulting integer value is less than <xref href=\"System.Int16.MinValue\" data-throw-if-not-resolved=\"false\"></xref> or greater than <xref href=\"System.Int16.MaxValue\" data-throw-if-not-resolved=\"false\"></xref>.</p>\n"
  implements:
  - System.IConvertible.ToInt16(System.IFormatProvider)
  nameWithType.vb: Decimal.System.IConvertible.ToInt16(IFormatProvider)
  name.vb: System.IConvertible.ToInt16(IFormatProvider)
- uid: System.Decimal.System#IConvertible#ToInt32(System.IFormatProvider)
  commentId: M:System.Decimal.System#IConvertible#ToInt32(System.IFormatProvider)
  id: System#IConvertible#ToInt32(System.IFormatProvider)
  isEii: true
  parent: System.Decimal
  langs:
  - csharp
  - vb
  name: IConvertible.ToInt32(IFormatProvider)
  nameWithType: Decimal.IConvertible.ToInt32(IFormatProvider)
  fullName: System.Decimal.System.IConvertible.ToInt32(System.IFormatProvider)
  type: Method
  source:
    remote:
      path: src/mscorlib/src/System/Decimal.cs
      branch: master
      repo: https://github.com/dotnet/coreclr.git
    id: System.IConvertible.ToInt32
    path: src/mscorlib/src/System/Decimal.cs
    startLine: 1206
  assemblies:
  - System.Runtime
  namespace: System
  summary: "\n<p>For a description of this member, see <xref href=\"System.IConvertible.ToInt32(System.IFormatProvider)\" data-throw-if-not-resolved=\"false\"></xref>.</p>\n"
  syntax:
    content: int IConvertible.ToInt32(IFormatProvider provider)
    content.vb: Function System.IConvertible.ToInt32(provider As IFormatProvider) As Integer Implements IConvertible.ToInt32
    parameters:
    - id: provider
      type: System.IFormatProvider
      description: "\n<p>The parameter is ignored.</p>\n"
    return:
      type: System.Int32
      description: "\n<p>The value of the current instance, converted to a <xref href=\"System.Int32\" data-throw-if-not-resolved=\"false\"></xref>.</p>\n"
  exceptions:
  - type: System.OverflowException
    commentId: T:System.OverflowException
    description: "\n<p>The resulting integer value is less than <xref href=\"System.Int32.MinValue\" data-throw-if-not-resolved=\"false\"></xref> or greater than <xref href=\"System.Int32.MaxValue\" data-throw-if-not-resolved=\"false\"></xref>.</p>\n"
  implements:
  - System.IConvertible.ToInt32(System.IFormatProvider)
  nameWithType.vb: Decimal.System.IConvertible.ToInt32(IFormatProvider)
  name.vb: System.IConvertible.ToInt32(IFormatProvider)
- uid: System.Decimal.System#IConvertible#ToInt64(System.IFormatProvider)
  commentId: M:System.Decimal.System#IConvertible#ToInt64(System.IFormatProvider)
  id: System#IConvertible#ToInt64(System.IFormatProvider)
  isEii: true
  parent: System.Decimal
  langs:
  - csharp
  - vb
  name: IConvertible.ToInt64(IFormatProvider)
  nameWithType: Decimal.IConvertible.ToInt64(IFormatProvider)
  fullName: System.Decimal.System.IConvertible.ToInt64(System.IFormatProvider)
  type: Method
  source:
    remote:
      path: src/mscorlib/src/System/Decimal.cs
      branch: master
      repo: https://github.com/dotnet/coreclr.git
    id: System.IConvertible.ToInt64
    path: src/mscorlib/src/System/Decimal.cs
    startLine: 1216
  assemblies:
  - System.Runtime
  namespace: System
  summary: "\n<p>For a description of this member, see <xref href=\"System.IConvertible.ToInt64(System.IFormatProvider)\" data-throw-if-not-resolved=\"false\"></xref>.</p>\n"
  syntax:
    content: long IConvertible.ToInt64(IFormatProvider provider)
    content.vb: Function System.IConvertible.ToInt64(provider As IFormatProvider) As Long Implements IConvertible.ToInt64
    parameters:
    - id: provider
      type: System.IFormatProvider
      description: "\n<p>This parameter is ignored.</p>\n"
    return:
      type: System.Int64
      description: "\n<p>The value of the current instance, converted to a <xref href=\"System.Int64\" data-throw-if-not-resolved=\"false\"></xref>.</p>\n"
  exceptions:
  - type: System.OverflowException
    commentId: T:System.OverflowException
    description: "\n<p>The resulting integer value is less than <xref href=\"System.Int64.MinValue\" data-throw-if-not-resolved=\"false\"></xref> or greater than <xref href=\"System.Int64.MaxValue\" data-throw-if-not-resolved=\"false\"></xref>. </p>\n"
  implements:
  - System.IConvertible.ToInt64(System.IFormatProvider)
  nameWithType.vb: Decimal.System.IConvertible.ToInt64(IFormatProvider)
  name.vb: System.IConvertible.ToInt64(IFormatProvider)
- uid: System.Decimal.System#IConvertible#ToSByte(System.IFormatProvider)
  commentId: M:System.Decimal.System#IConvertible#ToSByte(System.IFormatProvider)
  id: System#IConvertible#ToSByte(System.IFormatProvider)
  isEii: true
  parent: System.Decimal
  langs:
  - csharp
  - vb
  name: IConvertible.ToSByte(IFormatProvider)
  nameWithType: Decimal.IConvertible.ToSByte(IFormatProvider)
  fullName: System.Decimal.System.IConvertible.ToSByte(System.IFormatProvider)
  type: Method
  source:
    remote:
      path: src/mscorlib/src/System/Decimal.cs
      branch: master
      repo: https://github.com/dotnet/coreclr.git
    id: System.IConvertible.ToSByte
    path: src/mscorlib/src/System/Decimal.cs
    startLine: 1186
  assemblies:
  - System.Runtime
  namespace: System
  summary: "\n<p>For a description of this member, see <xref href=\"System.IConvertible.ToSByte(System.IFormatProvider)\" data-throw-if-not-resolved=\"false\"></xref>.</p>\n"
  syntax:
    content: sbyte IConvertible.ToSByte(IFormatProvider provider)
    content.vb: Function System.IConvertible.ToSByte(provider As IFormatProvider) As SByte Implements IConvertible.ToSByte
    parameters:
    - id: provider
      type: System.IFormatProvider
      description: "\n<p>This parameter is ignored.</p>\n"
    return:
      type: System.SByte
      description: "\n<p>The value of the current instance, converted to a <xref href=\"System.SByte\" data-throw-if-not-resolved=\"false\"></xref>.</p>\n"
  exceptions:
  - type: System.OverflowException
    commentId: T:System.OverflowException
    description: "\n<p>The resulting integer value is less than <xref href=\"System.SByte.MinValue\" data-throw-if-not-resolved=\"false\"></xref> or greater than <xref href=\"System.SByte.MaxValue\" data-throw-if-not-resolved=\"false\"></xref>. </p>\n"
  implements:
  - System.IConvertible.ToSByte(System.IFormatProvider)
  nameWithType.vb: Decimal.System.IConvertible.ToSByte(IFormatProvider)
  name.vb: System.IConvertible.ToSByte(IFormatProvider)
- uid: System.Decimal.System#IConvertible#ToSingle(System.IFormatProvider)
  commentId: M:System.Decimal.System#IConvertible#ToSingle(System.IFormatProvider)
  id: System#IConvertible#ToSingle(System.IFormatProvider)
  isEii: true
  parent: System.Decimal
  langs:
  - csharp
  - vb
  name: IConvertible.ToSingle(IFormatProvider)
  nameWithType: Decimal.IConvertible.ToSingle(IFormatProvider)
  fullName: System.Decimal.System.IConvertible.ToSingle(System.IFormatProvider)
  type: Method
  source:
    remote:
      path: src/mscorlib/src/System/Decimal.cs
      branch: master
      repo: https://github.com/dotnet/coreclr.git
    id: System.IConvertible.ToSingle
    path: src/mscorlib/src/System/Decimal.cs
    startLine: 1226
  assemblies:
  - System.Runtime
  namespace: System
  summary: "\n<p>For a description of this member, see <xref href=\"System.IConvertible.ToSingle(System.IFormatProvider)\" data-throw-if-not-resolved=\"false\"></xref>.</p>\n"
  syntax:
    content: float IConvertible.ToSingle(IFormatProvider provider)
    content.vb: Function System.IConvertible.ToSingle(provider As IFormatProvider) As Single Implements IConvertible.ToSingle
    parameters:
    - id: provider
      type: System.IFormatProvider
      description: "\n<p>This parameter is ignored.</p>\n"
    return:
      type: System.Single
      description: "\n<p>The value of the current instance, converted to a <xref href=\"System.Single\" data-throw-if-not-resolved=\"false\"></xref>.</p>\n"
  implements:
  - System.IConvertible.ToSingle(System.IFormatProvider)
  nameWithType.vb: Decimal.System.IConvertible.ToSingle(IFormatProvider)
  name.vb: System.IConvertible.ToSingle(IFormatProvider)
- uid: System.Decimal.System#IConvertible#ToType(System.Type,System.IFormatProvider)
  commentId: M:System.Decimal.System#IConvertible#ToType(System.Type,System.IFormatProvider)
  id: System#IConvertible#ToType(System.Type,System.IFormatProvider)
  isEii: true
  parent: System.Decimal
  langs:
  - csharp
  - vb
  name: IConvertible.ToType(Type, IFormatProvider)
  nameWithType: Decimal.IConvertible.ToType(Type, IFormatProvider)
  fullName: System.Decimal.System.IConvertible.ToType(System.Type, System.IFormatProvider)
  type: Method
  source:
    remote:
      path: src/mscorlib/src/System/Decimal.cs
      branch: master
      repo: https://github.com/dotnet/coreclr.git
    id: System.IConvertible.ToType
    path: src/mscorlib/src/System/Decimal.cs
    startLine: 1246
  assemblies:
  - System.Runtime
  namespace: System
  summary: "\n<p>For a description of this member, see <xref href=\"System.IConvertible.ToType(System.Type,System.IFormatProvider)\" data-throw-if-not-resolved=\"false\"></xref>.</p>\n"
  syntax:
    content: object IConvertible.ToType(Type type, IFormatProvider provider)
    content.vb: Function System.IConvertible.ToType(type As Type, provider As IFormatProvider) As Object Implements IConvertible.ToType
    parameters:
    - id: type
      type: System.Type
      description: "\n<p>The type to which to convert the value of this <xref href=\"System.Decimal\" data-throw-if-not-resolved=\"false\"></xref> instance. </p>\n"
    - id: provider
      type: System.IFormatProvider
      description: "\n<p>An <xref href=\"System.IFormatProvider\" data-throw-if-not-resolved=\"false\"></xref> implementation that supplies culture-specific information about the format of the returned value.</p>\n"
    return:
      type: System.Object
      description: "\n<p>The value of the current instance, converted to a <em>type</em>.</p>\n"
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "\n<p>\n<em>type</em> is <strong>null</strong>. </p>\n"
  - type: System.InvalidCastException
    commentId: T:System.InvalidCastException
    description: "\n<p>The requested type conversion is not supported. </p>\n"
  implements:
  - System.IConvertible.ToType(System.Type,System.IFormatProvider)
  nameWithType.vb: Decimal.System.IConvertible.ToType(Type, IFormatProvider)
  name.vb: System.IConvertible.ToType(Type, IFormatProvider)
- uid: System.Decimal.System#IConvertible#ToUInt16(System.IFormatProvider)
  commentId: M:System.Decimal.System#IConvertible#ToUInt16(System.IFormatProvider)
  id: System#IConvertible#ToUInt16(System.IFormatProvider)
  isEii: true
  parent: System.Decimal
  langs:
  - csharp
  - vb
  name: IConvertible.ToUInt16(IFormatProvider)
  nameWithType: Decimal.IConvertible.ToUInt16(IFormatProvider)
  fullName: System.Decimal.System.IConvertible.ToUInt16(System.IFormatProvider)
  type: Method
  source:
    remote:
      path: src/mscorlib/src/System/Decimal.cs
      branch: master
      repo: https://github.com/dotnet/coreclr.git
    id: System.IConvertible.ToUInt16
    path: src/mscorlib/src/System/Decimal.cs
    startLine: 1201
  assemblies:
  - System.Runtime
  namespace: System
  summary: "\n<p>For a description of this member, see <xref href=\"System.IConvertible.ToUInt16(System.IFormatProvider)\" data-throw-if-not-resolved=\"false\"></xref>.</p>\n"
  syntax:
    content: ushort IConvertible.ToUInt16(IFormatProvider provider)
    content.vb: Function System.IConvertible.ToUInt16(provider As IFormatProvider) As UShort Implements IConvertible.ToUInt16
    parameters:
    - id: provider
      type: System.IFormatProvider
      description: "\n<p>This parameter is ignored.</p>\n"
    return:
      type: System.UInt16
      description: "\n<p>The value of the current instance, converted to a <xref href=\"System.UInt16\" data-throw-if-not-resolved=\"false\"></xref>.</p>\n"
  exceptions:
  - type: System.OverflowException
    commentId: T:System.OverflowException
    description: "\n<p>The resulting integer value is less than <xref href=\"System.UInt16.MinValue\" data-throw-if-not-resolved=\"false\"></xref> or greater than <xref href=\"System.UInt16.MaxValue\" data-throw-if-not-resolved=\"false\"></xref>.</p>\n"
  implements:
  - System.IConvertible.ToUInt16(System.IFormatProvider)
  nameWithType.vb: Decimal.System.IConvertible.ToUInt16(IFormatProvider)
  name.vb: System.IConvertible.ToUInt16(IFormatProvider)
- uid: System.Decimal.System#IConvertible#ToUInt32(System.IFormatProvider)
  commentId: M:System.Decimal.System#IConvertible#ToUInt32(System.IFormatProvider)
  id: System#IConvertible#ToUInt32(System.IFormatProvider)
  isEii: true
  parent: System.Decimal
  langs:
  - csharp
  - vb
  name: IConvertible.ToUInt32(IFormatProvider)
  nameWithType: Decimal.IConvertible.ToUInt32(IFormatProvider)
  fullName: System.Decimal.System.IConvertible.ToUInt32(System.IFormatProvider)
  type: Method
  source:
    remote:
      path: src/mscorlib/src/System/Decimal.cs
      branch: master
      repo: https://github.com/dotnet/coreclr.git
    id: System.IConvertible.ToUInt32
    path: src/mscorlib/src/System/Decimal.cs
    startLine: 1211
  assemblies:
  - System.Runtime
  namespace: System
  summary: "\n<p>For a description of this member, see <xref href=\"System.IConvertible.ToInt32(System.IFormatProvider)\" data-throw-if-not-resolved=\"false\"></xref>.</p>\n"
  syntax:
    content: uint IConvertible.ToUInt32(IFormatProvider provider)
    content.vb: Function System.IConvertible.ToUInt32(provider As IFormatProvider) As UInteger Implements IConvertible.ToUInt32
    parameters:
    - id: provider
      type: System.IFormatProvider
      description: "\n<p>This parameter is ignored.</p>\n"
    return:
      type: System.UInt32
      description: "\n<p>The value of the current instance, converted to a <xref href=\"System.UInt32\" data-throw-if-not-resolved=\"false\"></xref>.</p>\n"
  exceptions:
  - type: System.OverflowException
    commentId: T:System.OverflowException
    description: "\n<p>The resulting integer value is less than <xref href=\"System.UInt32.MinValue\" data-throw-if-not-resolved=\"false\"></xref> or greater than <xref href=\"System.UInt32.MaxValue\" data-throw-if-not-resolved=\"false\"></xref>.</p>\n"
  implements:
  - System.IConvertible.ToUInt32(System.IFormatProvider)
  nameWithType.vb: Decimal.System.IConvertible.ToUInt32(IFormatProvider)
  name.vb: System.IConvertible.ToUInt32(IFormatProvider)
- uid: System.Decimal.System#IConvertible#ToUInt64(System.IFormatProvider)
  commentId: M:System.Decimal.System#IConvertible#ToUInt64(System.IFormatProvider)
  id: System#IConvertible#ToUInt64(System.IFormatProvider)
  isEii: true
  parent: System.Decimal
  langs:
  - csharp
  - vb
  name: IConvertible.ToUInt64(IFormatProvider)
  nameWithType: Decimal.IConvertible.ToUInt64(IFormatProvider)
  fullName: System.Decimal.System.IConvertible.ToUInt64(System.IFormatProvider)
  type: Method
  source:
    remote:
      path: src/mscorlib/src/System/Decimal.cs
      branch: master
      repo: https://github.com/dotnet/coreclr.git
    id: System.IConvertible.ToUInt64
    path: src/mscorlib/src/System/Decimal.cs
    startLine: 1221
  assemblies:
  - System.Runtime
  namespace: System
  summary: "\n<p>For a description of this member, see <xref href=\"System.IConvertible.ToInt64(System.IFormatProvider)\" data-throw-if-not-resolved=\"false\"></xref>.</p>\n"
  syntax:
    content: ulong IConvertible.ToUInt64(IFormatProvider provider)
    content.vb: Function System.IConvertible.ToUInt64(provider As IFormatProvider) As ULong Implements IConvertible.ToUInt64
    parameters:
    - id: provider
      type: System.IFormatProvider
      description: "\n<p>This parameter is ignored.</p>\n"
    return:
      type: System.UInt64
      description: "\n<p>The value of the current instance, converted to a <xref href=\"System.UInt64\" data-throw-if-not-resolved=\"false\"></xref>.</p>\n"
  exceptions:
  - type: System.OverflowException
    commentId: T:System.OverflowException
    description: "\n<p>The resulting integer value is less than <xref href=\"System.UInt64.MinValue\" data-throw-if-not-resolved=\"false\"></xref> or greater than <xref href=\"System.UInt64.MaxValue\" data-throw-if-not-resolved=\"false\"></xref>.</p>\n"
  implements:
  - System.IConvertible.ToUInt64(System.IFormatProvider)
  nameWithType.vb: Decimal.System.IConvertible.ToUInt64(IFormatProvider)
  name.vb: System.IConvertible.ToUInt64(IFormatProvider)
- uid: System.Decimal.ToByte(System.Decimal)
  commentId: M:System.Decimal.ToByte(System.Decimal)
  id: ToByte(System.Decimal)
  parent: System.Decimal
  langs:
  - csharp
  - vb
  name: ToByte(Decimal)
  nameWithType: Decimal.ToByte(Decimal)
  fullName: System.Decimal.ToByte(System.Decimal)
  type: Method
  source:
    remote:
      path: src/mscorlib/src/System/Decimal.cs
      branch: master
      repo: https://github.com/dotnet/coreclr.git
    id: ToByte
    path: src/mscorlib/src/System/Decimal.cs
    startLine: 801
  assemblies:
  - System.Runtime
  namespace: System
  summary: "\n<p>Converts the value of the specified <xref href=\"System.Decimal\" data-throw-if-not-resolved=\"false\"></xref> to the equivalent 8-bit unsigned integer.</p>\n"
  syntax:
    content: public static byte ToByte(decimal value)
    content.vb: Public Shared Function ToByte(value As Decimal) As Byte
    parameters:
    - id: value
      type: System.Decimal
      description: "\n<p>The decimal number to convert. </p>\n"
    return:
      type: System.Byte
      description: "\n<p>An 8-bit unsigned integer equivalent to <em>value</em>.</p>\n"
  exceptions:
  - type: System.OverflowException
    commentId: T:System.OverflowException
    description: "\n<p>\n<em>value</em> is less than <xref href=\"System.Byte.MinValue\" data-throw-if-not-resolved=\"false\"></xref> or greater than <xref href=\"System.Byte.MaxValue\" data-throw-if-not-resolved=\"false\"></xref>. </p>\n"
  seealso:
  - linkId: System.Byte
    commentId: T:System.Byte
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: System.Decimal.ToDouble(System.Decimal)
  commentId: M:System.Decimal.ToDouble(System.Decimal)
  id: ToDouble(System.Decimal)
  parent: System.Decimal
  langs:
  - csharp
  - vb
  name: ToDouble(Decimal)
  nameWithType: Decimal.ToDouble(Decimal)
  fullName: System.Decimal.ToDouble(System.Decimal)
  type: Method
  source:
    path: System.Private.CoreLib
    isExternal: true
  assemblies:
  - System.Runtime
  namespace: System
  summary: "\n<p>Converts the value of the specified <xref href=\"System.Decimal\" data-throw-if-not-resolved=\"false\"></xref> to the equivalent double-precision floating-point number.</p>\n"
  syntax:
    content: >-
      [SecuritySafeCritical]

      [MethodImpl(MethodImplOptions.InternalCall)]

      public static double ToDouble(decimal d)
    content.vb: >-
      <SecuritySafeCritical>

      <MethodImpl(MethodImplOptions.InternalCall)>

      Public Shared Function ToDouble(d As Decimal) As Double
    parameters:
    - id: d
      type: System.Decimal
      description: "\n<p>The decimal number to convert. </p>\n"
    return:
      type: System.Double
      description: "\n<p>A double-precision floating-point number equivalent to <em>d</em>.</p>\n"
  seealso:
  - linkId: System.Double
    commentId: T:System.Double
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: System.Decimal.ToInt16(System.Decimal)
  commentId: M:System.Decimal.ToInt16(System.Decimal)
  id: ToInt16(System.Decimal)
  parent: System.Decimal
  langs:
  - csharp
  - vb
  name: ToInt16(Decimal)
  nameWithType: Decimal.ToInt16(Decimal)
  fullName: System.Decimal.ToInt16(System.Decimal)
  type: Method
  source:
    remote:
      path: src/mscorlib/src/System/Decimal.cs
      branch: master
      repo: https://github.com/dotnet/coreclr.git
    id: ToInt16
    path: src/mscorlib/src/System/Decimal.cs
    startLine: 835
  assemblies:
  - System.Runtime
  namespace: System
  summary: "\n<p>Converts the value of the specified <xref href=\"System.Decimal\" data-throw-if-not-resolved=\"false\"></xref> to the equivalent 16-bit signed integer.</p>\n"
  syntax:
    content: public static short ToInt16(decimal value)
    content.vb: Public Shared Function ToInt16(value As Decimal) As Short
    parameters:
    - id: value
      type: System.Decimal
      description: "\n<p>The decimal number to convert. </p>\n"
    return:
      type: System.Int16
      description: "\n<p>A 16-bit signed integer equivalent to <em>value</em>.</p>\n"
  exceptions:
  - type: System.OverflowException
    commentId: T:System.OverflowException
    description: "\n<p>\n<em>value</em> is less than <xref href=\"System.Int16.MinValue\" data-throw-if-not-resolved=\"false\"></xref> or greater than <xref href=\"System.Int16.MaxValue\" data-throw-if-not-resolved=\"false\"></xref>. </p>\n"
  seealso:
  - linkId: System.Int16
    commentId: T:System.Int16
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: System.Decimal.ToInt32(System.Decimal)
  commentId: M:System.Decimal.ToInt32(System.Decimal)
  id: ToInt32(System.Decimal)
  parent: System.Decimal
  langs:
  - csharp
  - vb
  name: ToInt32(Decimal)
  nameWithType: Decimal.ToInt32(Decimal)
  fullName: System.Decimal.ToInt32(System.Decimal)
  type: Method
  source:
    remote:
      path: src/mscorlib/src/System/Decimal.cs
      branch: master
      repo: https://github.com/dotnet/coreclr.git
    id: ToInt32
    path: src/mscorlib/src/System/Decimal.cs
    startLine: 879
  assemblies:
  - System.Runtime
  namespace: System
  summary: "\n<p>Converts the value of the specified <xref href=\"System.Decimal\" data-throw-if-not-resolved=\"false\"></xref> to the equivalent 32-bit signed integer.</p>\n"
  syntax:
    content: >-
      [SecuritySafeCritical]

      public static int ToInt32(decimal d)
    content.vb: >-
      <SecuritySafeCritical>

      Public Shared Function ToInt32(d As Decimal) As Integer
    parameters:
    - id: d
      type: System.Decimal
      description: "\n<p>The decimal number to convert. </p>\n"
    return:
      type: System.Int32
      description: "\n<p>A 32-bit signed integer equivalent to the value of <em>d</em>.</p>\n"
  exceptions:
  - type: System.OverflowException
    commentId: T:System.OverflowException
    description: "\n<p>\n<em>d</em> is less than <xref href=\"System.Int32.MinValue\" data-throw-if-not-resolved=\"false\"></xref> or greater than <xref href=\"System.Int32.MaxValue\" data-throw-if-not-resolved=\"false\"></xref>. </p>\n"
  seealso:
  - linkId: System.Int32
    commentId: T:System.Int32
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: System.Decimal.ToInt64(System.Decimal)
  commentId: M:System.Decimal.ToInt64(System.Decimal)
  id: ToInt64(System.Decimal)
  parent: System.Decimal
  langs:
  - csharp
  - vb
  name: ToInt64(Decimal)
  nameWithType: Decimal.ToInt64(Decimal)
  fullName: System.Decimal.ToInt64(System.Decimal)
  type: Method
  source:
    remote:
      path: src/mscorlib/src/System/Decimal.cs
      branch: master
      repo: https://github.com/dotnet/coreclr.git
    id: ToInt64
    path: src/mscorlib/src/System/Decimal.cs
    startLine: 899
  assemblies:
  - System.Runtime
  namespace: System
  summary: "\n<p>Converts the value of the specified <xref href=\"System.Decimal\" data-throw-if-not-resolved=\"false\"></xref> to the equivalent 64-bit signed integer.</p>\n"
  syntax:
    content: >-
      [SecuritySafeCritical]

      public static long ToInt64(decimal d)
    content.vb: >-
      <SecuritySafeCritical>

      Public Shared Function ToInt64(d As Decimal) As Long
    parameters:
    - id: d
      type: System.Decimal
      description: "\n<p>The decimal number to convert. </p>\n"
    return:
      type: System.Int64
      description: "\n<p>A 64-bit signed integer equivalent to the value of <em>d</em>.</p>\n"
  exceptions:
  - type: System.OverflowException
    commentId: T:System.OverflowException
    description: "\n<p>\n<em>d</em> is less than <xref href=\"System.Int64.MinValue\" data-throw-if-not-resolved=\"false\"></xref> or greater than <xref href=\"System.Int64.MaxValue\" data-throw-if-not-resolved=\"false\"></xref>. </p>\n"
  seealso:
  - linkId: System.Int64
    commentId: T:System.Int64
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: System.Decimal.ToSByte(System.Decimal)
  commentId: M:System.Decimal.ToSByte(System.Decimal)
  id: ToSByte(System.Decimal)
  parent: System.Decimal
  langs:
  - csharp
  - vb
  name: ToSByte(Decimal)
  nameWithType: Decimal.ToSByte(Decimal)
  fullName: System.Decimal.ToSByte(System.Decimal)
  type: Method
  source:
    remote:
      path: src/mscorlib/src/System/Decimal.cs
      branch: master
      repo: https://github.com/dotnet/coreclr.git
    id: ToSByte
    path: src/mscorlib/src/System/Decimal.cs
    startLine: 818
  assemblies:
  - System.Runtime
  namespace: System
  summary: "\n<p>Converts the value of the specified <xref href=\"System.Decimal\" data-throw-if-not-resolved=\"false\"></xref> to the equivalent 8-bit signed integer.</p>\n"
  syntax:
    content: >-
      [CLSCompliant(false)]

      public static sbyte ToSByte(decimal value)
    content.vb: >-
      <CLSCompliant(False)>

      Public Shared Function ToSByte(value As Decimal) As SByte
    parameters:
    - id: value
      type: System.Decimal
      description: "\n<p>The decimal number to convert. </p>\n"
    return:
      type: System.SByte
      description: "\n<p>An 8-bit signed integer equivalent to <em>value</em>.</p>\n"
  exceptions:
  - type: System.OverflowException
    commentId: T:System.OverflowException
    description: "\n<p>\n<em>value</em> is less than <xref href=\"System.SByte.MinValue\" data-throw-if-not-resolved=\"false\"></xref> or greater than <xref href=\"System.SByte.MaxValue\" data-throw-if-not-resolved=\"false\"></xref>. </p>\n"
  seealso:
  - linkId: System.SByte
    commentId: T:System.SByte
  attributes:
  - type: System.CLSCompliantAttribute
    ctor: System.CLSCompliantAttribute.#ctor(System.Boolean)
    arguments:
    - type: System.Boolean
      value: false
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: System.Decimal.ToSingle(System.Decimal)
  commentId: M:System.Decimal.ToSingle(System.Decimal)
  id: ToSingle(System.Decimal)
  parent: System.Decimal
  langs:
  - csharp
  - vb
  name: ToSingle(Decimal)
  nameWithType: Decimal.ToSingle(Decimal)
  fullName: System.Decimal.ToSingle(System.Decimal)
  type: Method
  source:
    path: System.Private.CoreLib
    isExternal: true
  assemblies:
  - System.Runtime
  namespace: System
  summary: "\n<p>Converts the value of the specified <xref href=\"System.Decimal\" data-throw-if-not-resolved=\"false\"></xref> to the equivalent single-precision floating-point number.</p>\n"
  syntax:
    content: >-
      [SecuritySafeCritical]

      [MethodImpl(MethodImplOptions.InternalCall)]

      public static float ToSingle(decimal d)
    content.vb: >-
      <SecuritySafeCritical>

      <MethodImpl(MethodImplOptions.InternalCall)>

      Public Shared Function ToSingle(d As Decimal) As Single
    parameters:
    - id: d
      type: System.Decimal
      description: "\n<p>The decimal number to convert. </p>\n"
    return:
      type: System.Single
      description: "\n<p>A single-precision floating-point number equivalent to the value of <em>d</em>.</p>\n"
  seealso:
  - linkId: System.Single
    commentId: T:System.Single
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: System.Decimal.ToString
  commentId: M:System.Decimal.ToString
  id: ToString
  parent: System.Decimal
  langs:
  - csharp
  - vb
  name: ToString()
  nameWithType: Decimal.ToString()
  fullName: System.Decimal.ToString()
  type: Method
  source:
    remote:
      path: src/mscorlib/src/System/Decimal.cs
      branch: master
      repo: https://github.com/dotnet/coreclr.git
    id: ToString
    path: src/mscorlib/src/System/Decimal.cs
    startLine: 480
  assemblies:
  - System.Runtime
  namespace: System
  summary: "\n<p>Converts the numeric value of this instance to its equivalent string representation.</p>\n"
  syntax:
    content: >-
      [SecuritySafeCritical]

      public override string ToString()
    content.vb: >-
      <SecuritySafeCritical>

      Public Overrides Function ToString As String
    return:
      type: System.String
      description: "\n<p>A string that represents the value of this instance.</p>\n"
  overridden: System.ValueType.ToString
  seealso:
  - linkId: System.Decimal.Parse(System.String)
    commentId: M:System.Decimal.Parse(System.String)
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
- uid: System.Decimal.ToString(System.IFormatProvider)
  commentId: M:System.Decimal.ToString(System.IFormatProvider)
  id: ToString(System.IFormatProvider)
  parent: System.Decimal
  langs:
  - csharp
  - vb
  name: ToString(IFormatProvider)
  nameWithType: Decimal.ToString(IFormatProvider)
  fullName: System.Decimal.ToString(System.IFormatProvider)
  type: Method
  source:
    remote:
      path: src/mscorlib/src/System/Decimal.cs
      branch: master
      repo: https://github.com/dotnet/coreclr.git
    id: ToString
    path: src/mscorlib/src/System/Decimal.cs
    startLine: 492
  assemblies:
  - System.Runtime
  namespace: System
  summary: "\n<p>Converts the numeric value of this instance to its equivalent string representation using the specified culture-specific format information.</p>\n"
  syntax:
    content: >-
      [SecuritySafeCritical]

      public string ToString(IFormatProvider provider)
    content.vb: >-
      <SecuritySafeCritical>

      Public Function ToString(provider As IFormatProvider) As String
    parameters:
    - id: provider
      type: System.IFormatProvider
      description: "\n<p>An object that supplies culture-specific formatting information. </p>\n"
    return:
      type: System.String
      description: "\n<p>The string representation of the value of this instance as specified by <em>provider</em>.</p>\n"
  seealso:
  - linkId: System.Decimal.Parse(System.String)
    commentId: M:System.Decimal.Parse(System.String)
  implements:
  - System.IConvertible.ToString(System.IFormatProvider)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: System.Decimal.ToString(System.String)
  commentId: M:System.Decimal.ToString(System.String)
  id: ToString(System.String)
  parent: System.Decimal
  langs:
  - csharp
  - vb
  name: ToString(String)
  nameWithType: Decimal.ToString(String)
  fullName: System.Decimal.ToString(System.String)
  type: Method
  source:
    remote:
      path: src/mscorlib/src/System/Decimal.cs
      branch: master
      repo: https://github.com/dotnet/coreclr.git
    id: ToString
    path: src/mscorlib/src/System/Decimal.cs
    startLine: 486
  assemblies:
  - System.Runtime
  namespace: System
  summary: "\n<p>Converts the numeric value of this instance to its equivalent string representation, using the specified format.</p>\n"
  syntax:
    content: >-
      [SecuritySafeCritical]

      public string ToString(string format)
    content.vb: >-
      <SecuritySafeCritical>

      Public Function ToString(format As String) As String
    parameters:
    - id: format
      type: System.String
      description: "\n<p>A standard or custom numeric format string (see Remarks).</p>\n"
    return:
      type: System.String
      description: "\n<p>The string representation of the value of this instance as specified by <em>format</em>.</p>\n"
  exceptions:
  - type: System.FormatException
    commentId: T:System.FormatException
    description: "\n<p>\n<em>format</em> is invalid. </p>\n"
  seealso:
  - linkId: System.Decimal.Parse(System.String)
    commentId: M:System.Decimal.Parse(System.String)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: System.Decimal.ToString(System.String,System.IFormatProvider)
  commentId: M:System.Decimal.ToString(System.String,System.IFormatProvider)
  id: ToString(System.String,System.IFormatProvider)
  parent: System.Decimal
  langs:
  - csharp
  - vb
  name: ToString(String, IFormatProvider)
  nameWithType: Decimal.ToString(String, IFormatProvider)
  fullName: System.Decimal.ToString(System.String, System.IFormatProvider)
  type: Method
  source:
    remote:
      path: src/mscorlib/src/System/Decimal.cs
      branch: master
      repo: https://github.com/dotnet/coreclr.git
    id: ToString
    path: src/mscorlib/src/System/Decimal.cs
    startLine: 498
  assemblies:
  - System.Runtime
  namespace: System
  summary: "\n<p>Converts the numeric value of this instance to its equivalent string representation using the specified format and culture-specific format information.</p>\n"
  syntax:
    content: >-
      [SecuritySafeCritical]

      public string ToString(string format, IFormatProvider provider)
    content.vb: >-
      <SecuritySafeCritical>

      Public Function ToString(format As String, provider As IFormatProvider) As String
    parameters:
    - id: format
      type: System.String
      description: "\n<p>A numeric format string (see Remarks).</p>\n"
    - id: provider
      type: System.IFormatProvider
      description: "\n<p>An object that supplies culture-specific formatting information. </p>\n"
    return:
      type: System.String
      description: "\n<p>The string representation of the value of this instance as specified by <em>format</em> and <em>provider</em>.</p>\n"
  exceptions:
  - type: System.FormatException
    commentId: T:System.FormatException
    description: "\n<p>\n<em>format</em> is invalid. </p>\n"
  seealso:
  - linkId: System.Decimal.Parse(System.String)
    commentId: M:System.Decimal.Parse(System.String)
  implements:
  - System.IFormattable.ToString(System.String,System.IFormatProvider)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: System.Decimal.ToUInt16(System.Decimal)
  commentId: M:System.Decimal.ToUInt16(System.Decimal)
  id: ToUInt16(System.Decimal)
  parent: System.Decimal
  langs:
  - csharp
  - vb
  name: ToUInt16(Decimal)
  nameWithType: Decimal.ToUInt16(Decimal)
  fullName: System.Decimal.ToUInt16(System.Decimal)
  type: Method
  source:
    remote:
      path: src/mscorlib/src/System/Decimal.cs
      branch: master
      repo: https://github.com/dotnet/coreclr.git
    id: ToUInt16
    path: src/mscorlib/src/System/Decimal.cs
    startLine: 919
  assemblies:
  - System.Runtime
  namespace: System
  summary: "\n<p>Converts the value of the specified <xref href=\"System.Decimal\" data-throw-if-not-resolved=\"false\"></xref> to the equivalent 16-bit unsigned integer.</p>\n"
  syntax:
    content: >-
      [CLSCompliant(false)]

      public static ushort ToUInt16(decimal value)
    content.vb: >-
      <CLSCompliant(False)>

      Public Shared Function ToUInt16(value As Decimal) As UShort
    parameters:
    - id: value
      type: System.Decimal
      description: "\n<p>The decimal number to convert. </p>\n"
    return:
      type: System.UInt16
      description: "\n<p>A 16-bit unsigned integer equivalent to the value of <em>value</em>.</p>\n"
  exceptions:
  - type: System.OverflowException
    commentId: T:System.OverflowException
    description: "\n<p>\n<em>value</em> is greater than <xref href=\"System.UInt16.MaxValue\" data-throw-if-not-resolved=\"false\"></xref> or less than <xref href=\"System.UInt16.MinValue\" data-throw-if-not-resolved=\"false\"></xref>. </p>\n"
  seealso:
  - linkId: System.UInt16
    commentId: T:System.UInt16
  attributes:
  - type: System.CLSCompliantAttribute
    ctor: System.CLSCompliantAttribute.#ctor(System.Boolean)
    arguments:
    - type: System.Boolean
      value: false
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: System.Decimal.ToUInt32(System.Decimal)
  commentId: M:System.Decimal.ToUInt32(System.Decimal)
  id: ToUInt32(System.Decimal)
  parent: System.Decimal
  langs:
  - csharp
  - vb
  name: ToUInt32(Decimal)
  nameWithType: Decimal.ToUInt32(Decimal)
  fullName: System.Decimal.ToUInt32(System.Decimal)
  type: Method
  source:
    remote:
      path: src/mscorlib/src/System/Decimal.cs
      branch: master
      repo: https://github.com/dotnet/coreclr.git
    id: ToUInt32
    path: src/mscorlib/src/System/Decimal.cs
    startLine: 936
  assemblies:
  - System.Runtime
  namespace: System
  summary: "\n<p>Converts the value of the specified <xref href=\"System.Decimal\" data-throw-if-not-resolved=\"false\"></xref> to the equivalent 32-bit unsigned integer.</p>\n"
  syntax:
    content: >-
      [SecuritySafeCritical]

      [CLSCompliant(false)]

      public static uint ToUInt32(decimal d)
    content.vb: >-
      <SecuritySafeCritical>

      <CLSCompliant(False)>

      Public Shared Function ToUInt32(d As Decimal) As UInteger
    parameters:
    - id: d
      type: System.Decimal
      description: "\n<p>The decimal number to convert. </p>\n"
    return:
      type: System.UInt32
      description: "\n<p>A 32-bit unsigned integer equivalent to the value of <em>d</em>.</p>\n"
  exceptions:
  - type: System.OverflowException
    commentId: T:System.OverflowException
    description: "\n<p>\n<em>d</em> is negative or greater than <xref href=\"System.UInt32.MaxValue\" data-throw-if-not-resolved=\"false\"></xref>. </p>\n"
  seealso:
  - linkId: System.UInt32
    commentId: T:System.UInt32
  attributes:
  - type: System.CLSCompliantAttribute
    ctor: System.CLSCompliantAttribute.#ctor(System.Boolean)
    arguments:
    - type: System.Boolean
      value: false
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: System.Decimal.ToUInt64(System.Decimal)
  commentId: M:System.Decimal.ToUInt64(System.Decimal)
  id: ToUInt64(System.Decimal)
  parent: System.Decimal
  langs:
  - csharp
  - vb
  name: ToUInt64(Decimal)
  nameWithType: Decimal.ToUInt64(Decimal)
  fullName: System.Decimal.ToUInt64(System.Decimal)
  type: Method
  source:
    remote:
      path: src/mscorlib/src/System/Decimal.cs
      branch: master
      repo: https://github.com/dotnet/coreclr.git
    id: ToUInt64
    path: src/mscorlib/src/System/Decimal.cs
    startLine: 952
  assemblies:
  - System.Runtime
  namespace: System
  summary: "\n<p>Converts the value of the specified <xref href=\"System.Decimal\" data-throw-if-not-resolved=\"false\"></xref> to the equivalent 64-bit unsigned integer.</p>\n"
  syntax:
    content: >-
      [SecuritySafeCritical]

      [CLSCompliant(false)]

      public static ulong ToUInt64(decimal d)
    content.vb: >-
      <SecuritySafeCritical>

      <CLSCompliant(False)>

      Public Shared Function ToUInt64(d As Decimal) As ULong
    parameters:
    - id: d
      type: System.Decimal
      description: "\n<p>The decimal number to convert. </p>\n"
    return:
      type: System.UInt64
      description: "\n<p>A 64-bit unsigned integer equivalent to the value of <em>d</em>.</p>\n"
  exceptions:
  - type: System.OverflowException
    commentId: T:System.OverflowException
    description: "\n<p>\n<em>d</em> is negative or greater than <xref href=\"System.UInt64.MaxValue\" data-throw-if-not-resolved=\"false\"></xref>. </p>\n"
  seealso:
  - linkId: System.UInt64
    commentId: T:System.UInt64
  attributes:
  - type: System.CLSCompliantAttribute
    ctor: System.CLSCompliantAttribute.#ctor(System.Boolean)
    arguments:
    - type: System.Boolean
      value: false
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: System.Decimal.Truncate(System.Decimal)
  commentId: M:System.Decimal.Truncate(System.Decimal)
  id: Truncate(System.Decimal)
  parent: System.Decimal
  langs:
  - csharp
  - vb
  name: Truncate(Decimal)
  nameWithType: Decimal.Truncate(Decimal)
  fullName: System.Decimal.Truncate(System.Decimal)
  type: Method
  source:
    remote:
      path: src/mscorlib/src/System/Decimal.cs
      branch: master
      repo: https://github.com/dotnet/coreclr.git
    id: Truncate
    path: src/mscorlib/src/System/Decimal.cs
    startLine: 975
  assemblies:
  - System.Runtime
  namespace: System
  summary: "\n<p>Returns the integral digits of the specified <xref href=\"System.Decimal\" data-throw-if-not-resolved=\"false\"></xref>; any fractional digits are discarded.</p>\n"
  syntax:
    content: >-
      [SecuritySafeCritical]

      public static decimal Truncate(decimal d)
    content.vb: >-
      <SecuritySafeCritical>

      Public Shared Function Truncate(d As Decimal) As Decimal
    parameters:
    - id: d
      type: System.Decimal
      description: "\n<p>The decimal number to truncate. </p>\n"
    return:
      type: System.Decimal
      description: "\n<p>The result of <em>d</em> rounded toward zero, to the nearest whole number.</p>\n"
  seealso:
  - linkId: System.Decimal.Round(System.Decimal,System.Int32)
    commentId: M:System.Decimal.Round(System.Decimal,System.Int32)
  - linkId: System.Decimal.Floor(System.Decimal)
    commentId: M:System.Decimal.Floor(System.Decimal)
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: System.Decimal.TryParse(System.String,System.Decimal@)
  commentId: M:System.Decimal.TryParse(System.String,System.Decimal@)
  id: TryParse(System.String,System.Decimal@)
  parent: System.Decimal
  langs:
  - csharp
  - vb
  name: TryParse(String, out Decimal)
  nameWithType: Decimal.TryParse(String, out Decimal)
  fullName: System.Decimal.TryParse(System.String, out System.Decimal)
  type: Method
  source:
    remote:
      path: src/mscorlib/src/System/Decimal.cs
      branch: master
      repo: https://github.com/dotnet/coreclr.git
    id: TryParse
    path: src/mscorlib/src/System/Decimal.cs
    startLine: 530
  assemblies:
  - System.Runtime
  namespace: System
  summary: "\n<p>Converts the string representation of a number to its <xref href=\"System.Decimal\" data-throw-if-not-resolved=\"false\"></xref> equivalent. A return value indicates whether the conversion succeeded or failed.</p>\n"
  syntax:
    content: public static bool TryParse(string s, out decimal result)
    content.vb: Public Shared Function TryParse(s As String, ByRef result As Decimal) As Boolean
    parameters:
    - id: s
      type: System.String
      description: "\n<p>The string representation of the number to convert.</p>\n"
    - id: result
      type: System.Decimal
      description: "\n<p>When this method returns, contains the <xref href=\"System.Decimal\" data-throw-if-not-resolved=\"false\"></xref> number that is equivalent to the numeric value contained in <em>s</em>, if the conversion succeeded, or is zero if the conversion failed. The conversion fails if the <em>s</em> parameter is <strong>null</strong> or <xref href=\"System.String.Empty\" data-throw-if-not-resolved=\"false\"></xref>, is not a number in a valid format, or represents a number less than <xref href=\"System.Decimal.MinValue\" data-throw-if-not-resolved=\"false\"></xref> or greater than <xref href=\"System.Decimal.MaxValue\" data-throw-if-not-resolved=\"false\"></xref>. This parameter is passed uninitialized; any value originally supplied in <em>result</em> will be overwritten.  </p>\n"
    return:
      type: System.Boolean
      description: "\n<p>\n<strong>true</strong> if <em>s</em> was converted successfully; otherwise, <strong>false</strong>.</p>\n"
  seealso:
  - linkId: System.Decimal.Parse(System.String)
    commentId: M:System.Decimal.Parse(System.String)
  - linkId: System.Decimal.ToString
    commentId: M:System.Decimal.ToString
  nameWithType.vb: Decimal.TryParse(String, ByRef Decimal)
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: System.Decimal.TryParse(System.String, ByRef System.Decimal)
  name.vb: TryParse(String, ByRef Decimal)
- uid: System.Decimal.TryParse(System.String,System.Globalization.NumberStyles,System.IFormatProvider,System.Decimal@)
  commentId: M:System.Decimal.TryParse(System.String,System.Globalization.NumberStyles,System.IFormatProvider,System.Decimal@)
  id: TryParse(System.String,System.Globalization.NumberStyles,System.IFormatProvider,System.Decimal@)
  parent: System.Decimal
  langs:
  - csharp
  - vb
  name: TryParse(String, NumberStyles, IFormatProvider, out Decimal)
  nameWithType: Decimal.TryParse(String, NumberStyles, IFormatProvider, out Decimal)
  fullName: System.Decimal.TryParse(System.String, System.Globalization.NumberStyles, System.IFormatProvider, out System.Decimal)
  type: Method
  source:
    remote:
      path: src/mscorlib/src/System/Decimal.cs
      branch: master
      repo: https://github.com/dotnet/coreclr.git
    id: TryParse
    path: src/mscorlib/src/System/Decimal.cs
    startLine: 534
  assemblies:
  - System.Runtime
  namespace: System
  summary: "\n<p>Converts the string representation of a number to its <xref href=\"System.Decimal\" data-throw-if-not-resolved=\"false\"></xref> equivalent using the specified style and culture-specific format. A return value indicates whether the conversion succeeded or failed.</p>\n"
  syntax:
    content: public static bool TryParse(string s, NumberStyles style, IFormatProvider provider, out decimal result)
    content.vb: Public Shared Function TryParse(s As String, style As NumberStyles, provider As IFormatProvider, ByRef result As Decimal) As Boolean
    parameters:
    - id: s
      type: System.String
      description: "\n<p>The string representation of the number to convert.</p>\n"
    - id: style
      type: System.Globalization.NumberStyles
      description: "\n<p>A bitwise combination of enumeration values that indicates the permitted format of <em>s</em>. A typical value to specify is <xref href=\"System.Globalization.NumberStyles.Number\" data-throw-if-not-resolved=\"false\"></xref>.</p>\n"
    - id: provider
      type: System.IFormatProvider
      description: "\n<p>An object that supplies culture-specific parsing information about <em>s</em>. </p>\n"
    - id: result
      type: System.Decimal
      description: "\n<p>When this method returns, contains the <xref href=\"System.Decimal\" data-throw-if-not-resolved=\"false\"></xref> number that is equivalent to the numeric value contained in <em>s</em>, if the conversion succeeded, or is zero if the conversion failed. The conversion fails if the <em>s</em> parameter is <strong>null</strong> or <xref href=\"System.String.Empty\" data-throw-if-not-resolved=\"false\"></xref>, is not in a format compliant with <em>style</em>, or represents a number less than <xref href=\"System.Decimal.MinValue\" data-throw-if-not-resolved=\"false\"></xref> or greater than <xref href=\"System.Decimal.MaxValue\" data-throw-if-not-resolved=\"false\"></xref>. This parameter is passed uninitialized; any value originally supplied in <em>result</em> will be overwritten.  </p>\n"
    return:
      type: System.Boolean
      description: "\n<p>\n<strong>true</strong> if <em>s</em> was converted successfully; otherwise, <strong>false</strong>.</p>\n"
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "\n<p>\n<em>style</em> is not a <xref href=\"System.Globalization.NumberStyles\" data-throw-if-not-resolved=\"false\"></xref> value. </p>\n<p>-or-</p>\n<p>\n<em>style</em> is the <xref href=\"System.Globalization.NumberStyles.AllowHexSpecifier\" data-throw-if-not-resolved=\"false\"></xref> value.</p>\n"
  seealso:
  - linkId: System.Decimal.Parse(System.String)
    commentId: M:System.Decimal.Parse(System.String)
  - linkId: System.Decimal.ToString
    commentId: M:System.Decimal.ToString
  nameWithType.vb: Decimal.TryParse(String, NumberStyles, IFormatProvider, ByRef Decimal)
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: System.Decimal.TryParse(System.String, System.Globalization.NumberStyles, System.IFormatProvider, ByRef System.Decimal)
  name.vb: TryParse(String, NumberStyles, IFormatProvider, ByRef Decimal)
references:
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: System.IComparable
  commentId: T:System.IComparable
  parent: System
  isExternal: false
  name: IComparable
  nameWithType: IComparable
  fullName: System.IComparable
- uid: System.IComparable{System.Decimal}
  commentId: T:System.IComparable{System.Decimal}
  parent: System
  definition: System.IComparable`1
  name: IComparable<Decimal>
  nameWithType: IComparable<Decimal>
  fullName: System.IComparable<System.Decimal>
  nameWithType.vb: IComparable(Of Decimal)
  fullname.vb: System.IComparable(Of System.Decimal)
  name.vb: IComparable(Of Decimal)
  spec.csharp:
  - uid: System.IComparable`1
    name: IComparable
    nameWithType: IComparable
    fullName: System.IComparable
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Decimal
    name: Decimal
    nameWithType: Decimal
    fullName: System.Decimal
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.IComparable`1
    name: IComparable
    nameWithType: IComparable
    fullName: System.IComparable
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Decimal
    name: Decimal
    nameWithType: Decimal
    fullName: System.Decimal
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.IConvertible
  commentId: T:System.IConvertible
  parent: System
  isExternal: false
  name: IConvertible
  nameWithType: IConvertible
  fullName: System.IConvertible
- uid: System.IEquatable{System.Decimal}
  commentId: T:System.IEquatable{System.Decimal}
  parent: System
  definition: System.IEquatable`1
  name: IEquatable<Decimal>
  nameWithType: IEquatable<Decimal>
  fullName: System.IEquatable<System.Decimal>
  nameWithType.vb: IEquatable(Of Decimal)
  fullname.vb: System.IEquatable(Of System.Decimal)
  name.vb: IEquatable(Of Decimal)
  spec.csharp:
  - uid: System.IEquatable`1
    name: IEquatable
    nameWithType: IEquatable
    fullName: System.IEquatable
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Decimal
    name: Decimal
    nameWithType: Decimal
    fullName: System.Decimal
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.IEquatable`1
    name: IEquatable
    nameWithType: IEquatable
    fullName: System.IEquatable
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Decimal
    name: Decimal
    nameWithType: Decimal
    fullName: System.Decimal
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.IFormattable
  commentId: T:System.IFormattable
  parent: System
  isExternal: false
  name: IFormattable
  nameWithType: IFormattable
  fullName: System.IFormattable
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.IComparable`1
  commentId: T:System.IComparable`1
  isExternal: false
  name: IComparable<T>
  nameWithType: IComparable<T>
  fullName: System.IComparable<T>
  nameWithType.vb: IComparable(Of T)
  fullname.vb: System.IComparable(Of T)
  name.vb: IComparable(Of T)
  spec.csharp:
  - uid: System.IComparable`1
    name: IComparable
    nameWithType: IComparable
    fullName: System.IComparable
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.IComparable`1
    name: IComparable
    nameWithType: IComparable
    fullName: System.IComparable
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.IEquatable`1
  commentId: T:System.IEquatable`1
  isExternal: false
  name: IEquatable<T>
  nameWithType: IEquatable<T>
  fullName: System.IEquatable<T>
  nameWithType.vb: IEquatable(Of T)
  fullname.vb: System.IEquatable(Of T)
  name.vb: IEquatable(Of T)
  spec.csharp:
  - uid: System.IEquatable`1
    name: IEquatable
    nameWithType: IEquatable
    fullName: System.IEquatable
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.IEquatable`1
    name: IEquatable
    nameWithType: IEquatable
    fullName: System.IEquatable
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: false
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Decimal
  commentId: T:System.Decimal
  parent: System
  isExternal: false
  name: Decimal
  nameWithType: Decimal
  fullName: System.Decimal
- uid: System.Double
  commentId: T:System.Double
  parent: System
  isExternal: false
  name: Double
  nameWithType: Double
  fullName: System.Double
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: false
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: false
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Byte
  commentId: T:System.Byte
  parent: System
  isExternal: false
  name: Byte
  nameWithType: Byte
  fullName: System.Byte
- uid: System.Int32[]
  name: Int32[]
  nameWithType: Int32[]
  fullName: System.Int32[]
  nameWithType.vb: Int32()
  fullname.vb: System.Int32()
  name.vb: Int32()
  spec.csharp:
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  spec.vb:
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
- uid: System.Int64
  commentId: T:System.Int64
  parent: System
  isExternal: false
  name: Int64
  nameWithType: Int64
  fullName: System.Int64
- uid: System.Single
  commentId: T:System.Single
  parent: System
  isExternal: false
  name: Single
  nameWithType: Single
  fullName: System.Single
- uid: System.UInt32
  commentId: T:System.UInt32
  parent: System
  isExternal: false
  name: UInt32
  nameWithType: UInt32
  fullName: System.UInt32
- uid: System.UInt64
  commentId: T:System.UInt64
  parent: System
  isExternal: false
  name: UInt64
  nameWithType: UInt64
  fullName: System.UInt64
- uid: System.IComparable{System.Decimal}.CompareTo(System.Decimal)
  commentId: M:System.IComparable{System.Decimal}.CompareTo(System.Decimal)
  parent: System.IComparable{System.Decimal}
  definition: System.IComparable`1.CompareTo(`0)
  name: CompareTo(Decimal)
  nameWithType: IComparable<Decimal>.CompareTo(Decimal)
  fullName: System.IComparable<System.Decimal>.CompareTo(System.Decimal)
  nameWithType.vb: IComparable(Of Decimal).CompareTo(Decimal)
  fullname.vb: System.IComparable(Of System.Decimal).CompareTo(System.Decimal)
  spec.csharp:
  - uid: System.IComparable`1.CompareTo(`0)
    name: CompareTo
    nameWithType: IComparable<Decimal>.CompareTo
    fullName: System.IComparable<System.Decimal>.CompareTo
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Decimal
    name: Decimal
    nameWithType: Decimal
    fullName: System.Decimal
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.IComparable`1.CompareTo(`0)
    name: CompareTo
    nameWithType: IComparable(Of Decimal).CompareTo
    fullName: System.IComparable(Of System.Decimal).CompareTo
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Decimal
    name: Decimal
    nameWithType: Decimal
    fullName: System.Decimal
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.IComparable`1.CompareTo(`0)
  commentId: M:System.IComparable`1.CompareTo(`0)
  isExternal: false
  name: CompareTo(T)
  nameWithType: IComparable<T>.CompareTo(T)
  fullName: System.IComparable<T>.CompareTo(T)
  nameWithType.vb: IComparable(Of T).CompareTo(T)
  fullname.vb: System.IComparable(Of T).CompareTo(T)
  spec.csharp:
  - uid: System.IComparable`1.CompareTo(`0)
    name: CompareTo
    nameWithType: IComparable<T>.CompareTo
    fullName: System.IComparable<T>.CompareTo
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.IComparable`1.CompareTo(`0)
    name: CompareTo
    nameWithType: IComparable(Of T).CompareTo
    fullName: System.IComparable(Of T).CompareTo
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.IEquatable{System.Decimal}.Equals(System.Decimal)
  commentId: M:System.IEquatable{System.Decimal}.Equals(System.Decimal)
  parent: System.IEquatable{System.Decimal}
  definition: System.IEquatable`1.Equals(`0)
  name: Equals(Decimal)
  nameWithType: IEquatable<Decimal>.Equals(Decimal)
  fullName: System.IEquatable<System.Decimal>.Equals(System.Decimal)
  nameWithType.vb: IEquatable(Of Decimal).Equals(Decimal)
  fullname.vb: System.IEquatable(Of System.Decimal).Equals(System.Decimal)
  spec.csharp:
  - uid: System.IEquatable`1.Equals(`0)
    name: Equals
    nameWithType: IEquatable<Decimal>.Equals
    fullName: System.IEquatable<System.Decimal>.Equals
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Decimal
    name: Decimal
    nameWithType: Decimal
    fullName: System.Decimal
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.IEquatable`1.Equals(`0)
    name: Equals
    nameWithType: IEquatable(Of Decimal).Equals
    fullName: System.IEquatable(Of System.Decimal).Equals
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Decimal
    name: Decimal
    nameWithType: Decimal
    fullName: System.Decimal
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.IEquatable`1.Equals(`0)
  commentId: M:System.IEquatable`1.Equals(`0)
  isExternal: false
  name: Equals(T)
  nameWithType: IEquatable<T>.Equals(T)
  fullName: System.IEquatable<T>.Equals(T)
  nameWithType.vb: IEquatable(Of T).Equals(T)
  fullname.vb: System.IEquatable(Of T).Equals(T)
  spec.csharp:
  - uid: System.IEquatable`1.Equals(`0)
    name: Equals
    nameWithType: IEquatable<T>.Equals
    fullName: System.IEquatable<T>.Equals
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.IEquatable`1.Equals(`0)
    name: Equals
    nameWithType: IEquatable(Of T).Equals
    fullName: System.IEquatable(Of T).Equals
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.ValueType.Equals(System.Object)
  commentId: M:System.ValueType.Equals(System.Object)
  parent: System.ValueType
  isExternal: true
  name: Equals(Object)
  nameWithType: ValueType.Equals(Object)
  fullName: System.ValueType.Equals(System.Object)
  spec.csharp:
  - uid: System.ValueType.Equals(System.Object)
    name: Equals
    nameWithType: ValueType.Equals
    fullName: System.ValueType.Equals
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.ValueType.Equals(System.Object)
    name: Equals
    nameWithType: ValueType.Equals
    fullName: System.ValueType.Equals
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.ValueType
  commentId: T:System.ValueType
  parent: System
  isExternal: false
  name: ValueType
  nameWithType: ValueType
  fullName: System.ValueType
- uid: System.ValueType.GetHashCode
  commentId: M:System.ValueType.GetHashCode
  parent: System.ValueType
  isExternal: false
  name: GetHashCode()
  nameWithType: ValueType.GetHashCode()
  fullName: System.ValueType.GetHashCode()
  spec.csharp:
  - uid: System.ValueType.GetHashCode
    name: GetHashCode
    nameWithType: ValueType.GetHashCode
    fullName: System.ValueType.GetHashCode
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.ValueType.GetHashCode
    name: GetHashCode
    nameWithType: ValueType.GetHashCode
    fullName: System.ValueType.GetHashCode
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Char
  commentId: T:System.Char
  parent: System
  isExternal: false
  name: Char
  nameWithType: Char
  fullName: System.Char
- uid: System.Int16
  commentId: T:System.Int16
  parent: System
  isExternal: false
  name: Int16
  nameWithType: Int16
  fullName: System.Int16
- uid: System.SByte
  commentId: T:System.SByte
  parent: System
  isExternal: false
  name: SByte
  nameWithType: SByte
  fullName: System.SByte
- uid: System.UInt16
  commentId: T:System.UInt16
  parent: System
  isExternal: false
  name: UInt16
  nameWithType: UInt16
  fullName: System.UInt16
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: false
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Globalization.NumberStyles
  commentId: T:System.Globalization.NumberStyles
  parent: System.Globalization
  isExternal: false
  name: NumberStyles
  nameWithType: NumberStyles
  fullName: System.Globalization.NumberStyles
- uid: System.Globalization
  commentId: N:System.Globalization
  isExternal: false
  name: System.Globalization
  nameWithType: System.Globalization
  fullName: System.Globalization
- uid: System.IFormatProvider
  commentId: T:System.IFormatProvider
  parent: System
  isExternal: false
  name: IFormatProvider
  nameWithType: IFormatProvider
  fullName: System.IFormatProvider
- uid: System.IComparable.CompareTo(System.Object)
  commentId: M:System.IComparable.CompareTo(System.Object)
  parent: System.IComparable
  isExternal: true
  name: CompareTo(Object)
  nameWithType: IComparable.CompareTo(Object)
  fullName: System.IComparable.CompareTo(System.Object)
  spec.csharp:
  - uid: System.IComparable.CompareTo(System.Object)
    name: CompareTo
    nameWithType: IComparable.CompareTo
    fullName: System.IComparable.CompareTo
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.IComparable.CompareTo(System.Object)
    name: CompareTo
    nameWithType: IComparable.CompareTo
    fullName: System.IComparable.CompareTo
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.IConvertible.GetTypeCode
  commentId: M:System.IConvertible.GetTypeCode
  parent: System.IConvertible
  isExternal: false
  name: GetTypeCode()
  nameWithType: IConvertible.GetTypeCode()
  fullName: System.IConvertible.GetTypeCode()
  spec.csharp:
  - uid: System.IConvertible.GetTypeCode
    name: GetTypeCode
    nameWithType: IConvertible.GetTypeCode
    fullName: System.IConvertible.GetTypeCode
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.IConvertible.GetTypeCode
    name: GetTypeCode
    nameWithType: IConvertible.GetTypeCode
    fullName: System.IConvertible.GetTypeCode
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.TypeCode
  commentId: T:System.TypeCode
  parent: System
  isExternal: false
  name: TypeCode
  nameWithType: TypeCode
  fullName: System.TypeCode
- uid: System.IConvertible.ToBoolean(System.IFormatProvider)
  commentId: M:System.IConvertible.ToBoolean(System.IFormatProvider)
  parent: System.IConvertible
  isExternal: false
  name: ToBoolean(IFormatProvider)
  nameWithType: IConvertible.ToBoolean(IFormatProvider)
  fullName: System.IConvertible.ToBoolean(System.IFormatProvider)
  spec.csharp:
  - uid: System.IConvertible.ToBoolean(System.IFormatProvider)
    name: ToBoolean
    nameWithType: IConvertible.ToBoolean
    fullName: System.IConvertible.ToBoolean
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.IFormatProvider
    name: IFormatProvider
    nameWithType: IFormatProvider
    fullName: System.IFormatProvider
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.IConvertible.ToBoolean(System.IFormatProvider)
    name: ToBoolean
    nameWithType: IConvertible.ToBoolean
    fullName: System.IConvertible.ToBoolean
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.IFormatProvider
    name: IFormatProvider
    nameWithType: IFormatProvider
    fullName: System.IFormatProvider
  - name: )
    nameWithType: )
    fullName: )
- uid: System.IConvertible.ToByte(System.IFormatProvider)
  commentId: M:System.IConvertible.ToByte(System.IFormatProvider)
  parent: System.IConvertible
  isExternal: false
  name: ToByte(IFormatProvider)
  nameWithType: IConvertible.ToByte(IFormatProvider)
  fullName: System.IConvertible.ToByte(System.IFormatProvider)
  spec.csharp:
  - uid: System.IConvertible.ToByte(System.IFormatProvider)
    name: ToByte
    nameWithType: IConvertible.ToByte
    fullName: System.IConvertible.ToByte
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.IFormatProvider
    name: IFormatProvider
    nameWithType: IFormatProvider
    fullName: System.IFormatProvider
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.IConvertible.ToByte(System.IFormatProvider)
    name: ToByte
    nameWithType: IConvertible.ToByte
    fullName: System.IConvertible.ToByte
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.IFormatProvider
    name: IFormatProvider
    nameWithType: IFormatProvider
    fullName: System.IFormatProvider
  - name: )
    nameWithType: )
    fullName: )
- uid: System.IConvertible.ToChar(System.IFormatProvider)
  commentId: M:System.IConvertible.ToChar(System.IFormatProvider)
  parent: System.IConvertible
  isExternal: false
  name: ToChar(IFormatProvider)
  nameWithType: IConvertible.ToChar(IFormatProvider)
  fullName: System.IConvertible.ToChar(System.IFormatProvider)
  spec.csharp:
  - uid: System.IConvertible.ToChar(System.IFormatProvider)
    name: ToChar
    nameWithType: IConvertible.ToChar
    fullName: System.IConvertible.ToChar
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.IFormatProvider
    name: IFormatProvider
    nameWithType: IFormatProvider
    fullName: System.IFormatProvider
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.IConvertible.ToChar(System.IFormatProvider)
    name: ToChar
    nameWithType: IConvertible.ToChar
    fullName: System.IConvertible.ToChar
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.IFormatProvider
    name: IFormatProvider
    nameWithType: IFormatProvider
    fullName: System.IFormatProvider
  - name: )
    nameWithType: )
    fullName: )
- uid: System.IConvertible.ToDateTime(System.IFormatProvider)
  commentId: M:System.IConvertible.ToDateTime(System.IFormatProvider)
  parent: System.IConvertible
  isExternal: false
  name: ToDateTime(IFormatProvider)
  nameWithType: IConvertible.ToDateTime(IFormatProvider)
  fullName: System.IConvertible.ToDateTime(System.IFormatProvider)
  spec.csharp:
  - uid: System.IConvertible.ToDateTime(System.IFormatProvider)
    name: ToDateTime
    nameWithType: IConvertible.ToDateTime
    fullName: System.IConvertible.ToDateTime
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.IFormatProvider
    name: IFormatProvider
    nameWithType: IFormatProvider
    fullName: System.IFormatProvider
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.IConvertible.ToDateTime(System.IFormatProvider)
    name: ToDateTime
    nameWithType: IConvertible.ToDateTime
    fullName: System.IConvertible.ToDateTime
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.IFormatProvider
    name: IFormatProvider
    nameWithType: IFormatProvider
    fullName: System.IFormatProvider
  - name: )
    nameWithType: )
    fullName: )
- uid: System.DateTime
  commentId: T:System.DateTime
  parent: System
  isExternal: false
  name: DateTime
  nameWithType: DateTime
  fullName: System.DateTime
- uid: System.IConvertible.ToDecimal(System.IFormatProvider)
  commentId: M:System.IConvertible.ToDecimal(System.IFormatProvider)
  parent: System.IConvertible
  isExternal: false
  name: ToDecimal(IFormatProvider)
  nameWithType: IConvertible.ToDecimal(IFormatProvider)
  fullName: System.IConvertible.ToDecimal(System.IFormatProvider)
  spec.csharp:
  - uid: System.IConvertible.ToDecimal(System.IFormatProvider)
    name: ToDecimal
    nameWithType: IConvertible.ToDecimal
    fullName: System.IConvertible.ToDecimal
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.IFormatProvider
    name: IFormatProvider
    nameWithType: IFormatProvider
    fullName: System.IFormatProvider
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.IConvertible.ToDecimal(System.IFormatProvider)
    name: ToDecimal
    nameWithType: IConvertible.ToDecimal
    fullName: System.IConvertible.ToDecimal
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.IFormatProvider
    name: IFormatProvider
    nameWithType: IFormatProvider
    fullName: System.IFormatProvider
  - name: )
    nameWithType: )
    fullName: )
- uid: System.IConvertible.ToDouble(System.IFormatProvider)
  commentId: M:System.IConvertible.ToDouble(System.IFormatProvider)
  parent: System.IConvertible
  isExternal: false
  name: ToDouble(IFormatProvider)
  nameWithType: IConvertible.ToDouble(IFormatProvider)
  fullName: System.IConvertible.ToDouble(System.IFormatProvider)
  spec.csharp:
  - uid: System.IConvertible.ToDouble(System.IFormatProvider)
    name: ToDouble
    nameWithType: IConvertible.ToDouble
    fullName: System.IConvertible.ToDouble
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.IFormatProvider
    name: IFormatProvider
    nameWithType: IFormatProvider
    fullName: System.IFormatProvider
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.IConvertible.ToDouble(System.IFormatProvider)
    name: ToDouble
    nameWithType: IConvertible.ToDouble
    fullName: System.IConvertible.ToDouble
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.IFormatProvider
    name: IFormatProvider
    nameWithType: IFormatProvider
    fullName: System.IFormatProvider
  - name: )
    nameWithType: )
    fullName: )
- uid: System.IConvertible.ToInt16(System.IFormatProvider)
  commentId: M:System.IConvertible.ToInt16(System.IFormatProvider)
  parent: System.IConvertible
  isExternal: false
  name: ToInt16(IFormatProvider)
  nameWithType: IConvertible.ToInt16(IFormatProvider)
  fullName: System.IConvertible.ToInt16(System.IFormatProvider)
  spec.csharp:
  - uid: System.IConvertible.ToInt16(System.IFormatProvider)
    name: ToInt16
    nameWithType: IConvertible.ToInt16
    fullName: System.IConvertible.ToInt16
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.IFormatProvider
    name: IFormatProvider
    nameWithType: IFormatProvider
    fullName: System.IFormatProvider
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.IConvertible.ToInt16(System.IFormatProvider)
    name: ToInt16
    nameWithType: IConvertible.ToInt16
    fullName: System.IConvertible.ToInt16
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.IFormatProvider
    name: IFormatProvider
    nameWithType: IFormatProvider
    fullName: System.IFormatProvider
  - name: )
    nameWithType: )
    fullName: )
- uid: System.IConvertible.ToInt32(System.IFormatProvider)
  commentId: M:System.IConvertible.ToInt32(System.IFormatProvider)
  parent: System.IConvertible
  isExternal: false
  name: ToInt32(IFormatProvider)
  nameWithType: IConvertible.ToInt32(IFormatProvider)
  fullName: System.IConvertible.ToInt32(System.IFormatProvider)
  spec.csharp:
  - uid: System.IConvertible.ToInt32(System.IFormatProvider)
    name: ToInt32
    nameWithType: IConvertible.ToInt32
    fullName: System.IConvertible.ToInt32
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.IFormatProvider
    name: IFormatProvider
    nameWithType: IFormatProvider
    fullName: System.IFormatProvider
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.IConvertible.ToInt32(System.IFormatProvider)
    name: ToInt32
    nameWithType: IConvertible.ToInt32
    fullName: System.IConvertible.ToInt32
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.IFormatProvider
    name: IFormatProvider
    nameWithType: IFormatProvider
    fullName: System.IFormatProvider
  - name: )
    nameWithType: )
    fullName: )
- uid: System.IConvertible.ToInt64(System.IFormatProvider)
  commentId: M:System.IConvertible.ToInt64(System.IFormatProvider)
  parent: System.IConvertible
  isExternal: false
  name: ToInt64(IFormatProvider)
  nameWithType: IConvertible.ToInt64(IFormatProvider)
  fullName: System.IConvertible.ToInt64(System.IFormatProvider)
  spec.csharp:
  - uid: System.IConvertible.ToInt64(System.IFormatProvider)
    name: ToInt64
    nameWithType: IConvertible.ToInt64
    fullName: System.IConvertible.ToInt64
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.IFormatProvider
    name: IFormatProvider
    nameWithType: IFormatProvider
    fullName: System.IFormatProvider
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.IConvertible.ToInt64(System.IFormatProvider)
    name: ToInt64
    nameWithType: IConvertible.ToInt64
    fullName: System.IConvertible.ToInt64
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.IFormatProvider
    name: IFormatProvider
    nameWithType: IFormatProvider
    fullName: System.IFormatProvider
  - name: )
    nameWithType: )
    fullName: )
- uid: System.IConvertible.ToSByte(System.IFormatProvider)
  commentId: M:System.IConvertible.ToSByte(System.IFormatProvider)
  parent: System.IConvertible
  isExternal: false
  name: ToSByte(IFormatProvider)
  nameWithType: IConvertible.ToSByte(IFormatProvider)
  fullName: System.IConvertible.ToSByte(System.IFormatProvider)
  spec.csharp:
  - uid: System.IConvertible.ToSByte(System.IFormatProvider)
    name: ToSByte
    nameWithType: IConvertible.ToSByte
    fullName: System.IConvertible.ToSByte
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.IFormatProvider
    name: IFormatProvider
    nameWithType: IFormatProvider
    fullName: System.IFormatProvider
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.IConvertible.ToSByte(System.IFormatProvider)
    name: ToSByte
    nameWithType: IConvertible.ToSByte
    fullName: System.IConvertible.ToSByte
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.IFormatProvider
    name: IFormatProvider
    nameWithType: IFormatProvider
    fullName: System.IFormatProvider
  - name: )
    nameWithType: )
    fullName: )
- uid: System.IConvertible.ToSingle(System.IFormatProvider)
  commentId: M:System.IConvertible.ToSingle(System.IFormatProvider)
  parent: System.IConvertible
  isExternal: false
  name: ToSingle(IFormatProvider)
  nameWithType: IConvertible.ToSingle(IFormatProvider)
  fullName: System.IConvertible.ToSingle(System.IFormatProvider)
  spec.csharp:
  - uid: System.IConvertible.ToSingle(System.IFormatProvider)
    name: ToSingle
    nameWithType: IConvertible.ToSingle
    fullName: System.IConvertible.ToSingle
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.IFormatProvider
    name: IFormatProvider
    nameWithType: IFormatProvider
    fullName: System.IFormatProvider
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.IConvertible.ToSingle(System.IFormatProvider)
    name: ToSingle
    nameWithType: IConvertible.ToSingle
    fullName: System.IConvertible.ToSingle
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.IFormatProvider
    name: IFormatProvider
    nameWithType: IFormatProvider
    fullName: System.IFormatProvider
  - name: )
    nameWithType: )
    fullName: )
- uid: System.IConvertible.ToType(System.Type,System.IFormatProvider)
  commentId: M:System.IConvertible.ToType(System.Type,System.IFormatProvider)
  parent: System.IConvertible
  isExternal: false
  name: ToType(Type, IFormatProvider)
  nameWithType: IConvertible.ToType(Type, IFormatProvider)
  fullName: System.IConvertible.ToType(System.Type, System.IFormatProvider)
  spec.csharp:
  - uid: System.IConvertible.ToType(System.Type,System.IFormatProvider)
    name: ToType
    nameWithType: IConvertible.ToType
    fullName: System.IConvertible.ToType
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Type
    name: Type
    nameWithType: Type
    fullName: System.Type
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.IFormatProvider
    name: IFormatProvider
    nameWithType: IFormatProvider
    fullName: System.IFormatProvider
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.IConvertible.ToType(System.Type,System.IFormatProvider)
    name: ToType
    nameWithType: IConvertible.ToType
    fullName: System.IConvertible.ToType
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Type
    name: Type
    nameWithType: Type
    fullName: System.Type
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.IFormatProvider
    name: IFormatProvider
    nameWithType: IFormatProvider
    fullName: System.IFormatProvider
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Type
  commentId: T:System.Type
  parent: System
  isExternal: false
  name: Type
  nameWithType: Type
  fullName: System.Type
- uid: System.IConvertible.ToUInt16(System.IFormatProvider)
  commentId: M:System.IConvertible.ToUInt16(System.IFormatProvider)
  parent: System.IConvertible
  isExternal: false
  name: ToUInt16(IFormatProvider)
  nameWithType: IConvertible.ToUInt16(IFormatProvider)
  fullName: System.IConvertible.ToUInt16(System.IFormatProvider)
  spec.csharp:
  - uid: System.IConvertible.ToUInt16(System.IFormatProvider)
    name: ToUInt16
    nameWithType: IConvertible.ToUInt16
    fullName: System.IConvertible.ToUInt16
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.IFormatProvider
    name: IFormatProvider
    nameWithType: IFormatProvider
    fullName: System.IFormatProvider
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.IConvertible.ToUInt16(System.IFormatProvider)
    name: ToUInt16
    nameWithType: IConvertible.ToUInt16
    fullName: System.IConvertible.ToUInt16
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.IFormatProvider
    name: IFormatProvider
    nameWithType: IFormatProvider
    fullName: System.IFormatProvider
  - name: )
    nameWithType: )
    fullName: )
- uid: System.IConvertible.ToUInt32(System.IFormatProvider)
  commentId: M:System.IConvertible.ToUInt32(System.IFormatProvider)
  parent: System.IConvertible
  isExternal: false
  name: ToUInt32(IFormatProvider)
  nameWithType: IConvertible.ToUInt32(IFormatProvider)
  fullName: System.IConvertible.ToUInt32(System.IFormatProvider)
  spec.csharp:
  - uid: System.IConvertible.ToUInt32(System.IFormatProvider)
    name: ToUInt32
    nameWithType: IConvertible.ToUInt32
    fullName: System.IConvertible.ToUInt32
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.IFormatProvider
    name: IFormatProvider
    nameWithType: IFormatProvider
    fullName: System.IFormatProvider
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.IConvertible.ToUInt32(System.IFormatProvider)
    name: ToUInt32
    nameWithType: IConvertible.ToUInt32
    fullName: System.IConvertible.ToUInt32
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.IFormatProvider
    name: IFormatProvider
    nameWithType: IFormatProvider
    fullName: System.IFormatProvider
  - name: )
    nameWithType: )
    fullName: )
- uid: System.IConvertible.ToUInt64(System.IFormatProvider)
  commentId: M:System.IConvertible.ToUInt64(System.IFormatProvider)
  parent: System.IConvertible
  isExternal: false
  name: ToUInt64(IFormatProvider)
  nameWithType: IConvertible.ToUInt64(IFormatProvider)
  fullName: System.IConvertible.ToUInt64(System.IFormatProvider)
  spec.csharp:
  - uid: System.IConvertible.ToUInt64(System.IFormatProvider)
    name: ToUInt64
    nameWithType: IConvertible.ToUInt64
    fullName: System.IConvertible.ToUInt64
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.IFormatProvider
    name: IFormatProvider
    nameWithType: IFormatProvider
    fullName: System.IFormatProvider
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.IConvertible.ToUInt64(System.IFormatProvider)
    name: ToUInt64
    nameWithType: IConvertible.ToUInt64
    fullName: System.IConvertible.ToUInt64
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.IFormatProvider
    name: IFormatProvider
    nameWithType: IFormatProvider
    fullName: System.IFormatProvider
  - name: )
    nameWithType: )
    fullName: )
- uid: System.ValueType.ToString
  commentId: M:System.ValueType.ToString
  parent: System.ValueType
  isExternal: false
  name: ToString()
  nameWithType: ValueType.ToString()
  fullName: System.ValueType.ToString()
  spec.csharp:
  - uid: System.ValueType.ToString
    name: ToString
    nameWithType: ValueType.ToString
    fullName: System.ValueType.ToString
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.ValueType.ToString
    name: ToString
    nameWithType: ValueType.ToString
    fullName: System.ValueType.ToString
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.IConvertible.ToString(System.IFormatProvider)
  commentId: M:System.IConvertible.ToString(System.IFormatProvider)
  parent: System.IConvertible
  isExternal: false
  name: ToString(IFormatProvider)
  nameWithType: IConvertible.ToString(IFormatProvider)
  fullName: System.IConvertible.ToString(System.IFormatProvider)
  spec.csharp:
  - uid: System.IConvertible.ToString(System.IFormatProvider)
    name: ToString
    nameWithType: IConvertible.ToString
    fullName: System.IConvertible.ToString
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.IFormatProvider
    name: IFormatProvider
    nameWithType: IFormatProvider
    fullName: System.IFormatProvider
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.IConvertible.ToString(System.IFormatProvider)
    name: ToString
    nameWithType: IConvertible.ToString
    fullName: System.IConvertible.ToString
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.IFormatProvider
    name: IFormatProvider
    nameWithType: IFormatProvider
    fullName: System.IFormatProvider
  - name: )
    nameWithType: )
    fullName: )
- uid: System.IFormattable.ToString(System.String,System.IFormatProvider)
  commentId: M:System.IFormattable.ToString(System.String,System.IFormatProvider)
  parent: System.IFormattable
  isExternal: true
  name: ToString(String, IFormatProvider)
  nameWithType: IFormattable.ToString(String, IFormatProvider)
  fullName: System.IFormattable.ToString(System.String, System.IFormatProvider)
  spec.csharp:
  - uid: System.IFormattable.ToString(System.String,System.IFormatProvider)
    name: ToString
    nameWithType: IFormattable.ToString
    fullName: System.IFormattable.ToString
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.IFormatProvider
    name: IFormatProvider
    nameWithType: IFormatProvider
    fullName: System.IFormatProvider
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.IFormattable.ToString(System.String,System.IFormatProvider)
    name: ToString
    nameWithType: IFormattable.ToString
    fullName: System.IFormattable.ToString
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.IFormatProvider
    name: IFormatProvider
    nameWithType: IFormatProvider
    fullName: System.IFormatProvider
  - name: )
    nameWithType: )
    fullName: )
- uid: System.OverflowException
  commentId: T:System.OverflowException
  isExternal: false
  name: OverflowException
  nameWithType: OverflowException
  fullName: System.OverflowException
- uid: System.ArgumentOutOfRangeException
  commentId: T:System.ArgumentOutOfRangeException
  isExternal: false
  name: ArgumentOutOfRangeException
  nameWithType: ArgumentOutOfRangeException
  fullName: System.ArgumentOutOfRangeException
- uid: System.ArgumentNullException
  commentId: T:System.ArgumentNullException
  isExternal: false
  name: ArgumentNullException
  nameWithType: ArgumentNullException
  fullName: System.ArgumentNullException
- uid: System.ArgumentException
  commentId: T:System.ArgumentException
  parent: System
  isExternal: false
  name: ArgumentException
  nameWithType: ArgumentException
  fullName: System.ArgumentException
- uid: System.DivideByZeroException
  commentId: T:System.DivideByZeroException
  isExternal: false
  name: DivideByZeroException
  nameWithType: DivideByZeroException
  fullName: System.DivideByZeroException
- uid: System.FormatException
  commentId: T:System.FormatException
  parent: System
  isExternal: false
  name: FormatException
  nameWithType: FormatException
  fullName: System.FormatException
- uid: System.InvalidCastException
  commentId: T:System.InvalidCastException
  isExternal: false
  name: InvalidCastException
  nameWithType: InvalidCastException
  fullName: System.InvalidCastException
