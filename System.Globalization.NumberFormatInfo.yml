### YamlMime:ManagedReference
items:
- uid: System.Globalization.NumberFormatInfo
  commentId: T:System.Globalization.NumberFormatInfo
  id: NumberFormatInfo
  parent: System.Globalization
  children:
  - System.Globalization.NumberFormatInfo.#ctor
  - System.Globalization.NumberFormatInfo.Clone
  - System.Globalization.NumberFormatInfo.CurrencyDecimalDigits
  - System.Globalization.NumberFormatInfo.CurrencyDecimalSeparator
  - System.Globalization.NumberFormatInfo.CurrencyGroupSeparator
  - System.Globalization.NumberFormatInfo.CurrencyGroupSizes
  - System.Globalization.NumberFormatInfo.CurrencyNegativePattern
  - System.Globalization.NumberFormatInfo.CurrencyPositivePattern
  - System.Globalization.NumberFormatInfo.CurrencySymbol
  - System.Globalization.NumberFormatInfo.CurrentInfo
  - System.Globalization.NumberFormatInfo.GetFormat(System.Type)
  - System.Globalization.NumberFormatInfo.GetInstance(System.IFormatProvider)
  - System.Globalization.NumberFormatInfo.InvariantInfo
  - System.Globalization.NumberFormatInfo.IsReadOnly
  - System.Globalization.NumberFormatInfo.NaNSymbol
  - System.Globalization.NumberFormatInfo.NegativeInfinitySymbol
  - System.Globalization.NumberFormatInfo.NegativeSign
  - System.Globalization.NumberFormatInfo.NumberDecimalDigits
  - System.Globalization.NumberFormatInfo.NumberDecimalSeparator
  - System.Globalization.NumberFormatInfo.NumberGroupSeparator
  - System.Globalization.NumberFormatInfo.NumberGroupSizes
  - System.Globalization.NumberFormatInfo.NumberNegativePattern
  - System.Globalization.NumberFormatInfo.PercentDecimalDigits
  - System.Globalization.NumberFormatInfo.PercentDecimalSeparator
  - System.Globalization.NumberFormatInfo.PercentGroupSeparator
  - System.Globalization.NumberFormatInfo.PercentGroupSizes
  - System.Globalization.NumberFormatInfo.PercentNegativePattern
  - System.Globalization.NumberFormatInfo.PercentPositivePattern
  - System.Globalization.NumberFormatInfo.PercentSymbol
  - System.Globalization.NumberFormatInfo.PerMilleSymbol
  - System.Globalization.NumberFormatInfo.PositiveInfinitySymbol
  - System.Globalization.NumberFormatInfo.PositiveSign
  - System.Globalization.NumberFormatInfo.ReadOnly(System.Globalization.NumberFormatInfo)
  langs:
  - csharp
  - vb
  name: NumberFormatInfo
  nameWithType: NumberFormatInfo
  fullName: System.Globalization.NumberFormatInfo
  type: Class
  source:
    remote:
      path: src/mscorlib/src/System/Globalization/NumberFormatInfo.cs
      branch: master
      repo: https://github.com/dotnet/coreclr.git
    id: NumberFormatInfo
    path: src/mscorlib/src/System/Globalization/NumberFormatInfo.cs
    startLine: 42
  assemblies:
  - System.Globalization
  namespace: System.Globalization
  summary: "\n<p>Provides culture-specific information for formatting and parsing numeric values. </p>\n"
  syntax:
    content: >-
      [Serializable]

      [ComVisible(true)]

      public sealed class NumberFormatInfo : ICloneable, IFormatProvider
    content.vb: >-
      <Serializable>

      <ComVisible(True)>

      Public NotInheritable Class NumberFormatInfo
          Implements ICloneable, IFormatProvider
  seealso:
  - linkId: System.Globalization.CultureInfo
    commentId: T:System.Globalization.CultureInfo
  - linkId: System.IFormatProvider
    commentId: T:System.IFormatProvider
  inheritance:
  - System.Object
  implements:
  - System.IFormatProvider
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  modifiers.csharp:
  - public
  - sealed
  - class
  modifiers.vb:
  - Public
  - NotInheritable
  - Class
- uid: System.Globalization.NumberFormatInfo.#ctor
  commentId: M:System.Globalization.NumberFormatInfo.#ctor
  id: '#ctor'
  parent: System.Globalization.NumberFormatInfo
  langs:
  - csharp
  - vb
  name: NumberFormatInfo()
  nameWithType: NumberFormatInfo.NumberFormatInfo()
  fullName: System.Globalization.NumberFormatInfo.NumberFormatInfo()
  type: Constructor
  source:
    remote:
      path: src/mscorlib/src/System/Globalization/NumberFormatInfo.cs
      branch: master
      repo: https://github.com/dotnet/coreclr.git
    id: .ctor
    path: src/mscorlib/src/System/Globalization/NumberFormatInfo.cs
    startLine: 109
  assemblies:
  - System.Globalization
  namespace: System.Globalization
  summary: "\n<p>Initializes a new writable instance of the <xref href=\"System.Globalization.NumberFormatInfo\" data-throw-if-not-resolved=\"false\"></xref> class that is culture-independent (invariant).</p>\n"
  syntax:
    content: public NumberFormatInfo()
    content.vb: Public Sub New
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: System.Globalization.NumberFormatInfo.CurrencyDecimalDigits
  commentId: P:System.Globalization.NumberFormatInfo.CurrencyDecimalDigits
  id: CurrencyDecimalDigits
  parent: System.Globalization.NumberFormatInfo
  langs:
  - csharp
  - vb
  name: CurrencyDecimalDigits
  nameWithType: NumberFormatInfo.CurrencyDecimalDigits
  fullName: System.Globalization.NumberFormatInfo.CurrencyDecimalDigits
  type: Property
  source:
    remote:
      path: src/mscorlib/src/System/Globalization/NumberFormatInfo.cs
      branch: master
      repo: https://github.com/dotnet/coreclr.git
    id: CurrencyDecimalDigits
    path: src/mscorlib/src/System/Globalization/NumberFormatInfo.cs
    startLine: 319
  assemblies:
  - System.Globalization
  namespace: System.Globalization
  summary: "\n<p>Gets or sets the number of decimal places to use in currency values.</p>\n"
  syntax:
    content: public int CurrencyDecimalDigits { get; set; }
    content.vb: Public Property CurrencyDecimalDigits As Integer
    parameters: []
    return:
      type: System.Int32
      description: "\n<p>The number of decimal places to use in currency values. The default for <xref href=\"System.Globalization.NumberFormatInfo.InvariantInfo\" data-throw-if-not-resolved=\"false\"></xref> is 2.</p>\n"
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "\n<p>The property is being set to a value that is less than 0 or greater than 99. </p>\n"
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "\n<p>The property is being set and the <xref href=\"System.Globalization.NumberFormatInfo\" data-throw-if-not-resolved=\"false\"></xref> object is read-only. </p>\n"
  seealso:
  - linkId: System.Globalization.NumberFormatInfo.CurrencyDecimalSeparator
    commentId: P:System.Globalization.NumberFormatInfo.CurrencyDecimalSeparator
  - linkId: System.Globalization.NumberFormatInfo.CurrencyGroupSeparator
    commentId: P:System.Globalization.NumberFormatInfo.CurrencyGroupSeparator
  - linkId: System.Globalization.NumberFormatInfo.CurrencyGroupSizes
    commentId: P:System.Globalization.NumberFormatInfo.CurrencyGroupSizes
  - linkId: System.Globalization.NumberFormatInfo.CurrencySymbol
    commentId: P:System.Globalization.NumberFormatInfo.CurrencySymbol
  - linkId: System.Globalization.NumberFormatInfo.CurrencyNegativePattern
    commentId: P:System.Globalization.NumberFormatInfo.CurrencyNegativePattern
  - linkId: System.Globalization.NumberFormatInfo.CurrencyPositivePattern
    commentId: P:System.Globalization.NumberFormatInfo.CurrencyPositivePattern
  - linkId: System.Globalization.NumberFormatInfo.NumberDecimalDigits
    commentId: P:System.Globalization.NumberFormatInfo.NumberDecimalDigits
  - linkId: System.Globalization.NumberFormatInfo.PercentDecimalDigits
    commentId: P:System.Globalization.NumberFormatInfo.PercentDecimalDigits
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: System.Globalization.NumberFormatInfo.CurrencyDecimalSeparator
  commentId: P:System.Globalization.NumberFormatInfo.CurrencyDecimalSeparator
  id: CurrencyDecimalSeparator
  parent: System.Globalization.NumberFormatInfo
  langs:
  - csharp
  - vb
  name: CurrencyDecimalSeparator
  nameWithType: NumberFormatInfo.CurrencyDecimalSeparator
  fullName: System.Globalization.NumberFormatInfo.CurrencyDecimalSeparator
  type: Property
  source:
    remote:
      path: src/mscorlib/src/System/Globalization/NumberFormatInfo.cs
      branch: master
      repo: https://github.com/dotnet/coreclr.git
    id: CurrencyDecimalSeparator
    path: src/mscorlib/src/System/Globalization/NumberFormatInfo.cs
    startLine: 338
  assemblies:
  - System.Globalization
  namespace: System.Globalization
  summary: "\n<p>Gets or sets the string to use as the decimal separator in currency values.</p>\n"
  syntax:
    content: public string CurrencyDecimalSeparator { get; set; }
    content.vb: Public Property CurrencyDecimalSeparator As String
    parameters: []
    return:
      type: System.String
      description: "\n<p>The string to use as the decimal separator in currency values. The default for <xref href=\"System.Globalization.NumberFormatInfo.InvariantInfo\" data-throw-if-not-resolved=\"false\"></xref> is \".\".</p>\n"
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "\n<p>The property is being set to <strong>null</strong>. </p>\n"
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "\n<p>The property is being set and the <xref href=\"System.Globalization.NumberFormatInfo\" data-throw-if-not-resolved=\"false\"></xref> object is read-only. </p>\n"
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "\n<p>The property is being set to an empty string.</p>\n"
  seealso:
  - linkId: System.Globalization.NumberFormatInfo.CurrencyDecimalDigits
    commentId: P:System.Globalization.NumberFormatInfo.CurrencyDecimalDigits
  - linkId: System.Globalization.NumberFormatInfo.CurrencyGroupSeparator
    commentId: P:System.Globalization.NumberFormatInfo.CurrencyGroupSeparator
  - linkId: System.Globalization.NumberFormatInfo.CurrencyGroupSizes
    commentId: P:System.Globalization.NumberFormatInfo.CurrencyGroupSizes
  - linkId: System.Globalization.NumberFormatInfo.CurrencySymbol
    commentId: P:System.Globalization.NumberFormatInfo.CurrencySymbol
  - linkId: System.Globalization.NumberFormatInfo.CurrencyNegativePattern
    commentId: P:System.Globalization.NumberFormatInfo.CurrencyNegativePattern
  - linkId: System.Globalization.NumberFormatInfo.CurrencyPositivePattern
    commentId: P:System.Globalization.NumberFormatInfo.CurrencyPositivePattern
  - linkId: System.Globalization.NumberFormatInfo.NumberDecimalSeparator
    commentId: P:System.Globalization.NumberFormatInfo.NumberDecimalSeparator
  - linkId: System.Globalization.NumberFormatInfo.PercentDecimalSeparator
    commentId: P:System.Globalization.NumberFormatInfo.PercentDecimalSeparator
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: System.Globalization.NumberFormatInfo.CurrencyGroupSeparator
  commentId: P:System.Globalization.NumberFormatInfo.CurrencyGroupSeparator
  id: CurrencyGroupSeparator
  parent: System.Globalization.NumberFormatInfo
  langs:
  - csharp
  - vb
  name: CurrencyGroupSeparator
  nameWithType: NumberFormatInfo.CurrencyGroupSeparator
  fullName: System.Globalization.NumberFormatInfo.CurrencyGroupSeparator
  type: Property
  source:
    remote:
      path: src/mscorlib/src/System/Globalization/NumberFormatInfo.cs
      branch: master
      repo: https://github.com/dotnet/coreclr.git
    id: CurrencyGroupSeparator
    path: src/mscorlib/src/System/Globalization/NumberFormatInfo.cs
    startLine: 437
  assemblies:
  - System.Globalization
  namespace: System.Globalization
  summary: "\n<p>Gets or sets the string that separates groups of digits to the left of the decimal in currency values.</p>\n"
  syntax:
    content: public string CurrencyGroupSeparator { get; set; }
    content.vb: Public Property CurrencyGroupSeparator As String
    parameters: []
    return:
      type: System.String
      description: "\n<p>The string that separates groups of digits to the left of the decimal in currency values. The default for <xref href=\"System.Globalization.NumberFormatInfo.InvariantInfo\" data-throw-if-not-resolved=\"false\"></xref> is \",\".</p>\n"
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "\n<p>The property is being set to <strong>null</strong>. </p>\n"
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "\n<p>The property is being set and the <xref href=\"System.Globalization.NumberFormatInfo\" data-throw-if-not-resolved=\"false\"></xref> object is read-only. </p>\n"
  seealso:
  - linkId: System.Globalization.NumberFormatInfo.CurrencyDecimalDigits
    commentId: P:System.Globalization.NumberFormatInfo.CurrencyDecimalDigits
  - linkId: System.Globalization.NumberFormatInfo.CurrencyDecimalSeparator
    commentId: P:System.Globalization.NumberFormatInfo.CurrencyDecimalSeparator
  - linkId: System.Globalization.NumberFormatInfo.CurrencyGroupSizes
    commentId: P:System.Globalization.NumberFormatInfo.CurrencyGroupSizes
  - linkId: System.Globalization.NumberFormatInfo.CurrencySymbol
    commentId: P:System.Globalization.NumberFormatInfo.CurrencySymbol
  - linkId: System.Globalization.NumberFormatInfo.CurrencyNegativePattern
    commentId: P:System.Globalization.NumberFormatInfo.CurrencyNegativePattern
  - linkId: System.Globalization.NumberFormatInfo.CurrencyPositivePattern
    commentId: P:System.Globalization.NumberFormatInfo.CurrencyPositivePattern
  - linkId: System.Globalization.NumberFormatInfo.NumberGroupSeparator
    commentId: P:System.Globalization.NumberFormatInfo.NumberGroupSeparator
  - linkId: System.Globalization.NumberFormatInfo.PercentGroupSeparator
    commentId: P:System.Globalization.NumberFormatInfo.PercentGroupSeparator
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: System.Globalization.NumberFormatInfo.CurrencyGroupSizes
  commentId: P:System.Globalization.NumberFormatInfo.CurrencyGroupSizes
  id: CurrencyGroupSizes
  parent: System.Globalization.NumberFormatInfo
  langs:
  - csharp
  - vb
  name: CurrencyGroupSizes
  nameWithType: NumberFormatInfo.CurrencyGroupSizes
  fullName: System.Globalization.NumberFormatInfo.CurrencyGroupSizes
  type: Property
  source:
    remote:
      path: src/mscorlib/src/System/Globalization/NumberFormatInfo.cs
      branch: master
      repo: https://github.com/dotnet/coreclr.git
    id: CurrencyGroupSizes
    path: src/mscorlib/src/System/Globalization/NumberFormatInfo.cs
    startLine: 378
  assemblies:
  - System.Globalization
  namespace: System.Globalization
  summary: "\n<p>Gets or sets the number of digits in each group to the left of the decimal in currency values.</p>\n"
  syntax:
    content: public int[] CurrencyGroupSizes { get; set; }
    content.vb: Public Property CurrencyGroupSizes As Integer()
    parameters: []
    return:
      type: System.Int32[]
      description: "\n<p>The number of digits in each group to the left of the decimal in currency values. The default for <xref href=\"System.Globalization.NumberFormatInfo.InvariantInfo\" data-throw-if-not-resolved=\"false\"></xref> is a one-dimensional array with only one element, which is set to 3.</p>\n"
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "\n<p>The property is being set to <strong>null</strong>. </p>\n"
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "\n<p>The property is being set and the array contains an entry that is less than 0 or greater than 9.</p>\n<p>-or- </p>\n<p>The property is being set and the array contains an entry, other than the last entry, that is set to 0. </p>\n"
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "\n<p>The property is being set and the <xref href=\"System.Globalization.NumberFormatInfo\" data-throw-if-not-resolved=\"false\"></xref> object is read-only. </p>\n"
  seealso:
  - linkId: System.Globalization.NumberFormatInfo.CurrencyDecimalDigits
    commentId: P:System.Globalization.NumberFormatInfo.CurrencyDecimalDigits
  - linkId: System.Globalization.NumberFormatInfo.CurrencyDecimalSeparator
    commentId: P:System.Globalization.NumberFormatInfo.CurrencyDecimalSeparator
  - linkId: System.Globalization.NumberFormatInfo.CurrencyGroupSeparator
    commentId: P:System.Globalization.NumberFormatInfo.CurrencyGroupSeparator
  - linkId: System.Globalization.NumberFormatInfo.CurrencySymbol
    commentId: P:System.Globalization.NumberFormatInfo.CurrencySymbol
  - linkId: System.Globalization.NumberFormatInfo.CurrencyNegativePattern
    commentId: P:System.Globalization.NumberFormatInfo.CurrencyNegativePattern
  - linkId: System.Globalization.NumberFormatInfo.CurrencyPositivePattern
    commentId: P:System.Globalization.NumberFormatInfo.CurrencyPositivePattern
  - linkId: System.Globalization.NumberFormatInfo.NumberGroupSizes
    commentId: P:System.Globalization.NumberFormatInfo.NumberGroupSizes
  - linkId: System.Globalization.NumberFormatInfo.PercentGroupSizes
    commentId: P:System.Globalization.NumberFormatInfo.PercentGroupSizes
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: System.Globalization.NumberFormatInfo.CurrencyNegativePattern
  commentId: P:System.Globalization.NumberFormatInfo.CurrencyNegativePattern
  id: CurrencyNegativePattern
  parent: System.Globalization.NumberFormatInfo
  langs:
  - csharp
  - vb
  name: CurrencyNegativePattern
  nameWithType: NumberFormatInfo.CurrencyNegativePattern
  fullName: System.Globalization.NumberFormatInfo.CurrencyNegativePattern
  type: Property
  source:
    remote:
      path: src/mscorlib/src/System/Globalization/NumberFormatInfo.cs
      branch: master
      repo: https://github.com/dotnet/coreclr.git
    id: CurrencyNegativePattern
    path: src/mscorlib/src/System/Globalization/NumberFormatInfo.cs
    startLine: 494
  assemblies:
  - System.Globalization
  namespace: System.Globalization
  summary: "\n<p>Gets or sets the format pattern for negative currency values.</p>\n"
  syntax:
    content: public int CurrencyNegativePattern { get; set; }
    content.vb: Public Property CurrencyNegativePattern As Integer
    parameters: []
    return:
      type: System.Int32
      description: "\n<p>The format pattern for negative currency values. The default for <xref href=\"System.Globalization.NumberFormatInfo.InvariantInfo\" data-throw-if-not-resolved=\"false\"></xref> is 0, which represents \"($n)\", where \"$\" is the <xref href=\"System.Globalization.NumberFormatInfo.CurrencySymbol\" data-throw-if-not-resolved=\"false\"></xref> and <em>n</em> is a number.</p>\n"
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "\n<p>The property is being set to a value that is less than 0 or greater than 15. </p>\n"
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "\n<p>The property is being set and the <xref href=\"System.Globalization.NumberFormatInfo\" data-throw-if-not-resolved=\"false\"></xref> object is read-only. </p>\n"
  seealso:
  - linkId: System.Globalization.NumberFormatInfo.CurrencyDecimalDigits
    commentId: P:System.Globalization.NumberFormatInfo.CurrencyDecimalDigits
  - linkId: System.Globalization.NumberFormatInfo.CurrencyDecimalSeparator
    commentId: P:System.Globalization.NumberFormatInfo.CurrencyDecimalSeparator
  - linkId: System.Globalization.NumberFormatInfo.CurrencyGroupSeparator
    commentId: P:System.Globalization.NumberFormatInfo.CurrencyGroupSeparator
  - linkId: System.Globalization.NumberFormatInfo.CurrencyGroupSizes
    commentId: P:System.Globalization.NumberFormatInfo.CurrencyGroupSizes
  - linkId: System.Globalization.NumberFormatInfo.CurrencySymbol
    commentId: P:System.Globalization.NumberFormatInfo.CurrencySymbol
  - linkId: System.Globalization.NumberFormatInfo.CurrencyPositivePattern
    commentId: P:System.Globalization.NumberFormatInfo.CurrencyPositivePattern
  - linkId: System.Globalization.NumberFormatInfo.NumberNegativePattern
    commentId: P:System.Globalization.NumberFormatInfo.NumberNegativePattern
  - linkId: System.Globalization.NumberFormatInfo.PercentNegativePattern
    commentId: P:System.Globalization.NumberFormatInfo.PercentNegativePattern
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: System.Globalization.NumberFormatInfo.CurrencyPositivePattern
  commentId: P:System.Globalization.NumberFormatInfo.CurrencyPositivePattern
  id: CurrencyPositivePattern
  parent: System.Globalization.NumberFormatInfo
  langs:
  - csharp
  - vb
  name: CurrencyPositivePattern
  nameWithType: NumberFormatInfo.CurrencyPositivePattern
  fullName: System.Globalization.NumberFormatInfo.CurrencyPositivePattern
  type: Property
  source:
    remote:
      path: src/mscorlib/src/System/Globalization/NumberFormatInfo.cs
      branch: master
      repo: https://github.com/dotnet/coreclr.git
    id: CurrencyPositivePattern
    path: src/mscorlib/src/System/Globalization/NumberFormatInfo.cs
    startLine: 648
  assemblies:
  - System.Globalization
  namespace: System.Globalization
  summary: "\n<p>Gets or sets the format pattern for positive currency values.</p>\n"
  syntax:
    content: public int CurrencyPositivePattern { get; set; }
    content.vb: Public Property CurrencyPositivePattern As Integer
    parameters: []
    return:
      type: System.Int32
      description: "\n<p>The format pattern for positive currency values. The default for <xref href=\"System.Globalization.NumberFormatInfo.InvariantInfo\" data-throw-if-not-resolved=\"false\"></xref> is 0, which represents \"$n\", where \"$\" is the <xref href=\"System.Globalization.NumberFormatInfo.CurrencySymbol\" data-throw-if-not-resolved=\"false\"></xref> and <em>n</em> is a number.</p>\n"
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "\n<p>The property is being set to a value that is less than 0 or greater than 3. </p>\n"
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "\n<p>The property is being set and the <xref href=\"System.Globalization.NumberFormatInfo\" data-throw-if-not-resolved=\"false\"></xref> object is read-only. </p>\n"
  seealso:
  - linkId: System.Globalization.NumberFormatInfo.CurrencyDecimalDigits
    commentId: P:System.Globalization.NumberFormatInfo.CurrencyDecimalDigits
  - linkId: System.Globalization.NumberFormatInfo.CurrencyDecimalSeparator
    commentId: P:System.Globalization.NumberFormatInfo.CurrencyDecimalSeparator
  - linkId: System.Globalization.NumberFormatInfo.CurrencyGroupSeparator
    commentId: P:System.Globalization.NumberFormatInfo.CurrencyGroupSeparator
  - linkId: System.Globalization.NumberFormatInfo.CurrencyGroupSizes
    commentId: P:System.Globalization.NumberFormatInfo.CurrencyGroupSizes
  - linkId: System.Globalization.NumberFormatInfo.CurrencySymbol
    commentId: P:System.Globalization.NumberFormatInfo.CurrencySymbol
  - linkId: System.Globalization.NumberFormatInfo.CurrencyNegativePattern
    commentId: P:System.Globalization.NumberFormatInfo.CurrencyNegativePattern
  - linkId: System.Globalization.NumberFormatInfo.PercentPositivePattern
    commentId: P:System.Globalization.NumberFormatInfo.PercentPositivePattern
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: System.Globalization.NumberFormatInfo.CurrencySymbol
  commentId: P:System.Globalization.NumberFormatInfo.CurrencySymbol
  id: CurrencySymbol
  parent: System.Globalization.NumberFormatInfo
  langs:
  - csharp
  - vb
  name: CurrencySymbol
  nameWithType: NumberFormatInfo.CurrencySymbol
  fullName: System.Globalization.NumberFormatInfo.CurrencySymbol
  type: Property
  source:
    remote:
      path: src/mscorlib/src/System/Globalization/NumberFormatInfo.cs
      branch: master
      repo: https://github.com/dotnet/coreclr.git
    id: CurrencySymbol
    path: src/mscorlib/src/System/Globalization/NumberFormatInfo.cs
    startLine: 447
  assemblies:
  - System.Globalization
  namespace: System.Globalization
  summary: "\n<p>Gets or sets the string to use as the currency symbol.</p>\n"
  syntax:
    content: public string CurrencySymbol { get; set; }
    content.vb: Public Property CurrencySymbol As String
    parameters: []
    return:
      type: System.String
      description: "\n<p>The string to use as the currency symbol. The default for <xref href=\"System.Globalization.NumberFormatInfo.InvariantInfo\" data-throw-if-not-resolved=\"false\"></xref> is \"¤\". </p>\n"
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "\n<p>The property is being set to <strong>null</strong>. </p>\n"
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "\n<p>The property is being set and the <xref href=\"System.Globalization.NumberFormatInfo\" data-throw-if-not-resolved=\"false\"></xref> object is read-only. </p>\n"
  seealso:
  - linkId: System.Globalization.NumberFormatInfo.CurrencyDecimalDigits
    commentId: P:System.Globalization.NumberFormatInfo.CurrencyDecimalDigits
  - linkId: System.Globalization.NumberFormatInfo.CurrencyDecimalSeparator
    commentId: P:System.Globalization.NumberFormatInfo.CurrencyDecimalSeparator
  - linkId: System.Globalization.NumberFormatInfo.CurrencyGroupSeparator
    commentId: P:System.Globalization.NumberFormatInfo.CurrencyGroupSeparator
  - linkId: System.Globalization.NumberFormatInfo.CurrencyGroupSizes
    commentId: P:System.Globalization.NumberFormatInfo.CurrencyGroupSizes
  - linkId: System.Globalization.NumberFormatInfo.CurrencyNegativePattern
    commentId: P:System.Globalization.NumberFormatInfo.CurrencyNegativePattern
  - linkId: System.Globalization.NumberFormatInfo.CurrencyPositivePattern
    commentId: P:System.Globalization.NumberFormatInfo.CurrencyPositivePattern
  - linkId: System.Globalization.NumberFormatInfo.NaNSymbol
    commentId: P:System.Globalization.NumberFormatInfo.NaNSymbol
  - linkId: System.Globalization.NumberFormatInfo.PercentSymbol
    commentId: P:System.Globalization.NumberFormatInfo.PercentSymbol
  - linkId: System.Globalization.NumberFormatInfo.PerMilleSymbol
    commentId: P:System.Globalization.NumberFormatInfo.PerMilleSymbol
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: System.Globalization.NumberFormatInfo.CurrentInfo
  commentId: P:System.Globalization.NumberFormatInfo.CurrentInfo
  id: CurrentInfo
  parent: System.Globalization.NumberFormatInfo
  langs:
  - csharp
  - vb
  name: CurrentInfo
  nameWithType: NumberFormatInfo.CurrentInfo
  fullName: System.Globalization.NumberFormatInfo.CurrentInfo
  type: Property
  source:
    remote:
      path: src/mscorlib/src/System/Globalization/NumberFormatInfo.cs
      branch: master
      repo: https://github.com/dotnet/coreclr.git
    id: CurrentInfo
    path: src/mscorlib/src/System/Globalization/NumberFormatInfo.cs
    startLine: 463
  assemblies:
  - System.Globalization
  namespace: System.Globalization
  summary: "\n<p>Gets a read-only <xref href=\"System.Globalization.NumberFormatInfo\" data-throw-if-not-resolved=\"false\"></xref> that formats values based on the current culture.</p>\n"
  syntax:
    content: public static NumberFormatInfo CurrentInfo { get; }
    content.vb: Public Shared ReadOnly Property CurrentInfo As NumberFormatInfo
    parameters: []
    return:
      type: System.Globalization.NumberFormatInfo
      description: "\n<p>A read-only <xref href=\"System.Globalization.NumberFormatInfo\" data-throw-if-not-resolved=\"false\"></xref> based on the culture of the current thread.</p>\n"
  seealso:
  - linkId: System.Globalization.CultureInfo
    commentId: T:System.Globalization.CultureInfo
  - linkId: System.Globalization.CultureInfo.NumberFormat
    commentId: P:System.Globalization.CultureInfo.NumberFormat
  modifiers.csharp:
  - public
  - static
  - get
  modifiers.vb:
  - Public
  - Shared
  - ReadOnly
- uid: System.Globalization.NumberFormatInfo.InvariantInfo
  commentId: P:System.Globalization.NumberFormatInfo.InvariantInfo
  id: InvariantInfo
  parent: System.Globalization.NumberFormatInfo
  langs:
  - csharp
  - vb
  name: InvariantInfo
  nameWithType: NumberFormatInfo.InvariantInfo
  fullName: System.Globalization.NumberFormatInfo.InvariantInfo
  type: Property
  source:
    remote:
      path: src/mscorlib/src/System/Globalization/NumberFormatInfo.cs
      branch: master
      repo: https://github.com/dotnet/coreclr.git
    id: InvariantInfo
    path: src/mscorlib/src/System/Globalization/NumberFormatInfo.cs
    startLine: 269
  assemblies:
  - System.Globalization
  namespace: System.Globalization
  summary: "\n<p>Gets a read-only <xref href=\"System.Globalization.NumberFormatInfo\" data-throw-if-not-resolved=\"false\"></xref> object that is culture-independent (invariant).</p>\n"
  syntax:
    content: public static NumberFormatInfo InvariantInfo { get; }
    content.vb: Public Shared ReadOnly Property InvariantInfo As NumberFormatInfo
    parameters: []
    return:
      type: System.Globalization.NumberFormatInfo
      description: "\n<p>A read-only  object that is culture-independent (invariant).</p>\n"
  modifiers.csharp:
  - public
  - static
  - get
  modifiers.vb:
  - Public
  - Shared
  - ReadOnly
- uid: System.Globalization.NumberFormatInfo.IsReadOnly
  commentId: P:System.Globalization.NumberFormatInfo.IsReadOnly
  id: IsReadOnly
  parent: System.Globalization.NumberFormatInfo
  langs:
  - csharp
  - vb
  name: IsReadOnly
  nameWithType: NumberFormatInfo.IsReadOnly
  fullName: System.Globalization.NumberFormatInfo.IsReadOnly
  type: Property
  source:
    remote:
      path: src/mscorlib/src/System/Globalization/NumberFormatInfo.cs
      branch: master
      repo: https://github.com/dotnet/coreclr.git
    id: IsReadOnly
    path: src/mscorlib/src/System/Globalization/NumberFormatInfo.cs
    startLine: 348
  assemblies:
  - System.Globalization
  namespace: System.Globalization
  summary: "\n<p>Gets a value that indicates whether this <xref href=\"System.Globalization.NumberFormatInfo\" data-throw-if-not-resolved=\"false\"></xref> object is read-only.</p>\n"
  syntax:
    content: public bool IsReadOnly { get; }
    content.vb: Public ReadOnly Property IsReadOnly As Boolean
    parameters: []
    return:
      type: System.Boolean
      description: "\n<p>\n<strong>true</strong> if the <xref href=\"System.Globalization.NumberFormatInfo\" data-throw-if-not-resolved=\"false\"></xref> is read-only; otherwise, <strong>false</strong>.</p>\n"
  seealso:
  - linkId: System.Globalization.NumberFormatInfo.ReadOnly(System.Globalization.NumberFormatInfo)
    commentId: M:System.Globalization.NumberFormatInfo.ReadOnly(System.Globalization.NumberFormatInfo)
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: System.Globalization.NumberFormatInfo.NaNSymbol
  commentId: P:System.Globalization.NumberFormatInfo.NaNSymbol
  id: NaNSymbol
  parent: System.Globalization.NumberFormatInfo
  langs:
  - csharp
  - vb
  name: NaNSymbol
  nameWithType: NumberFormatInfo.NaNSymbol
  fullName: System.Globalization.NumberFormatInfo.NaNSymbol
  type: Property
  source:
    remote:
      path: src/mscorlib/src/System/Globalization/NumberFormatInfo.cs
      branch: master
      repo: https://github.com/dotnet/coreclr.git
    id: NaNSymbol
    path: src/mscorlib/src/System/Globalization/NumberFormatInfo.cs
    startLine: 477
  assemblies:
  - System.Globalization
  namespace: System.Globalization
  summary: "\n<p>Gets or sets the string that represents the IEEE NaN (not a number) value.</p>\n"
  syntax:
    content: public string NaNSymbol { get; set; }
    content.vb: Public Property NaNSymbol As String
    parameters: []
    return:
      type: System.String
      description: "\n<p>The string that represents the IEEE NaN (not a number) value. The default for <xref href=\"System.Globalization.NumberFormatInfo.InvariantInfo\" data-throw-if-not-resolved=\"false\"></xref> is \"NaN\".</p>\n"
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "\n<p>The property is being set to <strong>null</strong>. </p>\n"
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "\n<p>The property is being set and the <xref href=\"System.Globalization.NumberFormatInfo\" data-throw-if-not-resolved=\"false\"></xref> object is read-only. </p>\n"
  seealso:
  - linkId: System.Globalization.NumberFormatInfo.PositiveInfinitySymbol
    commentId: P:System.Globalization.NumberFormatInfo.PositiveInfinitySymbol
  - linkId: System.Globalization.NumberFormatInfo.NegativeInfinitySymbol
    commentId: P:System.Globalization.NumberFormatInfo.NegativeInfinitySymbol
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: System.Globalization.NumberFormatInfo.NegativeInfinitySymbol
  commentId: P:System.Globalization.NumberFormatInfo.NegativeInfinitySymbol
  id: NegativeInfinitySymbol
  parent: System.Globalization.NumberFormatInfo
  langs:
  - csharp
  - vb
  name: NegativeInfinitySymbol
  nameWithType: NumberFormatInfo.NegativeInfinitySymbol
  fullName: System.Globalization.NumberFormatInfo.NegativeInfinitySymbol
  type: Property
  source:
    remote:
      path: src/mscorlib/src/System/Globalization/NumberFormatInfo.cs
      branch: master
      repo: https://github.com/dotnet/coreclr.git
    id: NegativeInfinitySymbol
    path: src/mscorlib/src/System/Globalization/NumberFormatInfo.cs
    startLine: 579
  assemblies:
  - System.Globalization
  namespace: System.Globalization
  summary: "\n<p>Gets or sets the string that represents negative infinity.</p>\n"
  syntax:
    content: public string NegativeInfinitySymbol { get; set; }
    content.vb: Public Property NegativeInfinitySymbol As String
    parameters: []
    return:
      type: System.String
      description: "\n<p>The string that represents negative infinity. The default for <xref href=\"System.Globalization.NumberFormatInfo.InvariantInfo\" data-throw-if-not-resolved=\"false\"></xref> is \"-Infinity\".</p>\n"
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "\n<p>The property is being set to <strong>null</strong>. </p>\n"
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "\n<p>The property is being set and the <xref href=\"System.Globalization.NumberFormatInfo\" data-throw-if-not-resolved=\"false\"></xref> object is read-only. </p>\n"
  seealso:
  - linkId: System.Globalization.NumberFormatInfo.PositiveInfinitySymbol
    commentId: P:System.Globalization.NumberFormatInfo.PositiveInfinitySymbol
  - linkId: System.Globalization.NumberFormatInfo.NaNSymbol
    commentId: P:System.Globalization.NumberFormatInfo.NaNSymbol
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: System.Globalization.NumberFormatInfo.NegativeSign
  commentId: P:System.Globalization.NumberFormatInfo.NegativeSign
  id: NegativeSign
  parent: System.Globalization.NumberFormatInfo
  langs:
  - csharp
  - vb
  name: NegativeSign
  nameWithType: NumberFormatInfo.NegativeSign
  fullName: System.Globalization.NumberFormatInfo.NegativeSign
  type: Property
  source:
    remote:
      path: src/mscorlib/src/System/Globalization/NumberFormatInfo.cs
      branch: master
      repo: https://github.com/dotnet/coreclr.git
    id: NegativeSign
    path: src/mscorlib/src/System/Globalization/NumberFormatInfo.cs
    startLine: 595
  assemblies:
  - System.Globalization
  namespace: System.Globalization
  summary: "\n<p>Gets or sets the string that denotes that the associated number is negative.</p>\n"
  syntax:
    content: public string NegativeSign { get; set; }
    content.vb: Public Property NegativeSign As String
    parameters: []
    return:
      type: System.String
      description: "\n<p>The string that denotes that the associated number is negative. The default for <xref href=\"System.Globalization.NumberFormatInfo.InvariantInfo\" data-throw-if-not-resolved=\"false\"></xref> is \"-\".</p>\n"
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "\n<p>The property is being set to <strong>null</strong>. </p>\n"
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "\n<p>The property is being set and the <xref href=\"System.Globalization.NumberFormatInfo\" data-throw-if-not-resolved=\"false\"></xref> object is read-only. </p>\n"
  seealso:
  - linkId: System.Globalization.NumberFormatInfo.PositiveSign
    commentId: P:System.Globalization.NumberFormatInfo.PositiveSign
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: System.Globalization.NumberFormatInfo.NumberDecimalDigits
  commentId: P:System.Globalization.NumberFormatInfo.NumberDecimalDigits
  id: NumberDecimalDigits
  parent: System.Globalization.NumberFormatInfo
  langs:
  - csharp
  - vb
  name: NumberDecimalDigits
  nameWithType: NumberFormatInfo.NumberDecimalDigits
  fullName: System.Globalization.NumberFormatInfo.NumberDecimalDigits
  type: Property
  source:
    remote:
      path: src/mscorlib/src/System/Globalization/NumberFormatInfo.cs
      branch: master
      repo: https://github.com/dotnet/coreclr.git
    id: NumberDecimalDigits
    path: src/mscorlib/src/System/Globalization/NumberFormatInfo.cs
    startLine: 609
  assemblies:
  - System.Globalization
  namespace: System.Globalization
  summary: "\n<p>Gets or sets the number of decimal places to use in numeric values.</p>\n"
  syntax:
    content: public int NumberDecimalDigits { get; set; }
    content.vb: Public Property NumberDecimalDigits As Integer
    parameters: []
    return:
      type: System.Int32
      description: "\n<p>The number of decimal places to use in numeric values. The default for <xref href=\"System.Globalization.NumberFormatInfo.InvariantInfo\" data-throw-if-not-resolved=\"false\"></xref> is 2.</p>\n"
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "\n<p>The property is being set to a value that is less than 0 or greater than 99. </p>\n"
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "\n<p>The property is being set and the <xref href=\"System.Globalization.NumberFormatInfo\" data-throw-if-not-resolved=\"false\"></xref> object is read-only. </p>\n"
  seealso:
  - linkId: System.Globalization.NumberFormatInfo.NumberDecimalSeparator
    commentId: P:System.Globalization.NumberFormatInfo.NumberDecimalSeparator
  - linkId: System.Globalization.NumberFormatInfo.NumberGroupSeparator
    commentId: P:System.Globalization.NumberFormatInfo.NumberGroupSeparator
  - linkId: System.Globalization.NumberFormatInfo.NumberGroupSizes
    commentId: P:System.Globalization.NumberFormatInfo.NumberGroupSizes
  - linkId: System.Globalization.NumberFormatInfo.NaNSymbol
    commentId: P:System.Globalization.NumberFormatInfo.NaNSymbol
  - linkId: System.Globalization.NumberFormatInfo.NumberNegativePattern
    commentId: P:System.Globalization.NumberFormatInfo.NumberNegativePattern
  - linkId: System.Globalization.NumberFormatInfo.CurrencyDecimalDigits
    commentId: P:System.Globalization.NumberFormatInfo.CurrencyDecimalDigits
  - linkId: System.Globalization.NumberFormatInfo.PercentDecimalDigits
    commentId: P:System.Globalization.NumberFormatInfo.PercentDecimalDigits
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: System.Globalization.NumberFormatInfo.NumberDecimalSeparator
  commentId: P:System.Globalization.NumberFormatInfo.NumberDecimalSeparator
  id: NumberDecimalSeparator
  parent: System.Globalization.NumberFormatInfo
  langs:
  - csharp
  - vb
  name: NumberDecimalSeparator
  nameWithType: NumberFormatInfo.NumberDecimalSeparator
  fullName: System.Globalization.NumberFormatInfo.NumberDecimalSeparator
  type: Property
  source:
    remote:
      path: src/mscorlib/src/System/Globalization/NumberFormatInfo.cs
      branch: master
      repo: https://github.com/dotnet/coreclr.git
    id: NumberDecimalSeparator
    path: src/mscorlib/src/System/Globalization/NumberFormatInfo.cs
    startLine: 628
  assemblies:
  - System.Globalization
  namespace: System.Globalization
  summary: "\n<p>Gets or sets the string to use as the decimal separator in numeric values.</p>\n"
  syntax:
    content: public string NumberDecimalSeparator { get; set; }
    content.vb: Public Property NumberDecimalSeparator As String
    parameters: []
    return:
      type: System.String
      description: "\n<p>The string to use as the decimal separator in numeric values. The default for <xref href=\"System.Globalization.NumberFormatInfo.InvariantInfo\" data-throw-if-not-resolved=\"false\"></xref> is \".\".</p>\n"
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "\n<p>The property is being set to <strong>null</strong>. </p>\n"
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "\n<p>The property is being set and the <xref href=\"System.Globalization.NumberFormatInfo\" data-throw-if-not-resolved=\"false\"></xref> object is read-only. </p>\n"
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "\n<p>The property is being set to an empty string.</p>\n"
  seealso:
  - linkId: System.Globalization.NumberFormatInfo.NumberDecimalDigits
    commentId: P:System.Globalization.NumberFormatInfo.NumberDecimalDigits
  - linkId: System.Globalization.NumberFormatInfo.NumberGroupSeparator
    commentId: P:System.Globalization.NumberFormatInfo.NumberGroupSeparator
  - linkId: System.Globalization.NumberFormatInfo.NumberGroupSizes
    commentId: P:System.Globalization.NumberFormatInfo.NumberGroupSizes
  - linkId: System.Globalization.NumberFormatInfo.NaNSymbol
    commentId: P:System.Globalization.NumberFormatInfo.NaNSymbol
  - linkId: System.Globalization.NumberFormatInfo.NumberNegativePattern
    commentId: P:System.Globalization.NumberFormatInfo.NumberNegativePattern
  - linkId: System.Globalization.NumberFormatInfo.CurrencyDecimalSeparator
    commentId: P:System.Globalization.NumberFormatInfo.CurrencyDecimalSeparator
  - linkId: System.Globalization.NumberFormatInfo.PercentDecimalSeparator
    commentId: P:System.Globalization.NumberFormatInfo.PercentDecimalSeparator
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: System.Globalization.NumberFormatInfo.NumberGroupSeparator
  commentId: P:System.Globalization.NumberFormatInfo.NumberGroupSeparator
  id: NumberGroupSeparator
  parent: System.Globalization.NumberFormatInfo
  langs:
  - csharp
  - vb
  name: NumberGroupSeparator
  nameWithType: NumberFormatInfo.NumberGroupSeparator
  fullName: System.Globalization.NumberFormatInfo.NumberGroupSeparator
  type: Property
  source:
    remote:
      path: src/mscorlib/src/System/Globalization/NumberFormatInfo.cs
      branch: master
      repo: https://github.com/dotnet/coreclr.git
    id: NumberGroupSeparator
    path: src/mscorlib/src/System/Globalization/NumberFormatInfo.cs
    startLine: 638
  assemblies:
  - System.Globalization
  namespace: System.Globalization
  summary: "\n<p>Gets or sets the string that separates groups of digits to the left of the decimal in numeric values.</p>\n"
  syntax:
    content: public string NumberGroupSeparator { get; set; }
    content.vb: Public Property NumberGroupSeparator As String
    parameters: []
    return:
      type: System.String
      description: "\n<p>The string that separates groups of digits to the left of the decimal in numeric values. The default for <xref href=\"System.Globalization.NumberFormatInfo.InvariantInfo\" data-throw-if-not-resolved=\"false\"></xref> is \",\".</p>\n"
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "\n<p>The property is being set to <strong>null</strong>. </p>\n"
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "\n<p>The property is being set and the <xref href=\"System.Globalization.NumberFormatInfo\" data-throw-if-not-resolved=\"false\"></xref> object is read-only. </p>\n"
  seealso:
  - linkId: System.Globalization.NumberFormatInfo.NumberDecimalDigits
    commentId: P:System.Globalization.NumberFormatInfo.NumberDecimalDigits
  - linkId: System.Globalization.NumberFormatInfo.NumberDecimalSeparator
    commentId: P:System.Globalization.NumberFormatInfo.NumberDecimalSeparator
  - linkId: System.Globalization.NumberFormatInfo.NumberGroupSizes
    commentId: P:System.Globalization.NumberFormatInfo.NumberGroupSizes
  - linkId: System.Globalization.NumberFormatInfo.NaNSymbol
    commentId: P:System.Globalization.NumberFormatInfo.NaNSymbol
  - linkId: System.Globalization.NumberFormatInfo.NumberNegativePattern
    commentId: P:System.Globalization.NumberFormatInfo.NumberNegativePattern
  - linkId: System.Globalization.NumberFormatInfo.CurrencyGroupSeparator
    commentId: P:System.Globalization.NumberFormatInfo.CurrencyGroupSeparator
  - linkId: System.Globalization.NumberFormatInfo.PercentGroupSeparator
    commentId: P:System.Globalization.NumberFormatInfo.PercentGroupSeparator
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: System.Globalization.NumberFormatInfo.NumberGroupSizes
  commentId: P:System.Globalization.NumberFormatInfo.NumberGroupSizes
  id: NumberGroupSizes
  parent: System.Globalization.NumberFormatInfo
  langs:
  - csharp
  - vb
  name: NumberGroupSizes
  nameWithType: NumberFormatInfo.NumberGroupSizes
  fullName: System.Globalization.NumberFormatInfo.NumberGroupSizes
  type: Property
  source:
    remote:
      path: src/mscorlib/src/System/Globalization/NumberFormatInfo.cs
      branch: master
      repo: https://github.com/dotnet/coreclr.git
    id: NumberGroupSizes
    path: src/mscorlib/src/System/Globalization/NumberFormatInfo.cs
    startLine: 399
  assemblies:
  - System.Globalization
  namespace: System.Globalization
  summary: "\n<p>Gets or sets the number of digits in each group to the left of the decimal in numeric values.</p>\n"
  syntax:
    content: public int[] NumberGroupSizes { get; set; }
    content.vb: Public Property NumberGroupSizes As Integer()
    parameters: []
    return:
      type: System.Int32[]
      description: "\n<p>The number of digits in each group to the left of the decimal in numeric values. The default for <xref href=\"System.Globalization.NumberFormatInfo.InvariantInfo\" data-throw-if-not-resolved=\"false\"></xref> is a one-dimensional array with only one element, which is set to 3.</p>\n"
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "\n<p>The property is being set to <strong>null</strong>. </p>\n"
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "\n<p>The property is being set and the array contains an entry that is less than 0 or greater than 9.</p>\n<p>-or- </p>\n<p>The property is being set and the array contains an entry, other than the last entry, that is set to 0. </p>\n"
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "\n<p>The property is being set and the <xref href=\"System.Globalization.NumberFormatInfo\" data-throw-if-not-resolved=\"false\"></xref> object is read-only. </p>\n"
  seealso:
  - linkId: System.Globalization.NumberFormatInfo.NumberDecimalDigits
    commentId: P:System.Globalization.NumberFormatInfo.NumberDecimalDigits
  - linkId: System.Globalization.NumberFormatInfo.NumberDecimalSeparator
    commentId: P:System.Globalization.NumberFormatInfo.NumberDecimalSeparator
  - linkId: System.Globalization.NumberFormatInfo.NumberGroupSeparator
    commentId: P:System.Globalization.NumberFormatInfo.NumberGroupSeparator
  - linkId: System.Globalization.NumberFormatInfo.NaNSymbol
    commentId: P:System.Globalization.NumberFormatInfo.NaNSymbol
  - linkId: System.Globalization.NumberFormatInfo.NumberNegativePattern
    commentId: P:System.Globalization.NumberFormatInfo.NumberNegativePattern
  - linkId: System.Globalization.NumberFormatInfo.CurrencyGroupSizes
    commentId: P:System.Globalization.NumberFormatInfo.CurrencyGroupSizes
  - linkId: System.Globalization.NumberFormatInfo.PercentGroupSizes
    commentId: P:System.Globalization.NumberFormatInfo.PercentGroupSizes
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: System.Globalization.NumberFormatInfo.NumberNegativePattern
  commentId: P:System.Globalization.NumberFormatInfo.NumberNegativePattern
  id: NumberNegativePattern
  parent: System.Globalization.NumberFormatInfo
  langs:
  - csharp
  - vb
  name: NumberNegativePattern
  nameWithType: NumberFormatInfo.NumberNegativePattern
  fullName: System.Globalization.NumberFormatInfo.NumberNegativePattern
  type: Property
  source:
    remote:
      path: src/mscorlib/src/System/Globalization/NumberFormatInfo.cs
      branch: master
      repo: https://github.com/dotnet/coreclr.git
    id: NumberNegativePattern
    path: src/mscorlib/src/System/Globalization/NumberFormatInfo.cs
    startLine: 513
  assemblies:
  - System.Globalization
  namespace: System.Globalization
  summary: "\n<p>Gets or sets the format pattern for negative numeric values.</p>\n"
  syntax:
    content: public int NumberNegativePattern { get; set; }
    content.vb: Public Property NumberNegativePattern As Integer
    parameters: []
    return:
      type: System.Int32
      description: "\n<p>The format pattern for negative numeric values. </p>\n"
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "\n<p>The property is being set to a value that is less than 0 or greater than 4. </p>\n"
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "\n<p>The property is being set and the <xref href=\"System.Globalization.NumberFormatInfo\" data-throw-if-not-resolved=\"false\"></xref> object is read-only. </p>\n"
  seealso:
  - linkId: System.Globalization.NumberFormatInfo.NumberDecimalDigits
    commentId: P:System.Globalization.NumberFormatInfo.NumberDecimalDigits
  - linkId: System.Globalization.NumberFormatInfo.NumberDecimalSeparator
    commentId: P:System.Globalization.NumberFormatInfo.NumberDecimalSeparator
  - linkId: System.Globalization.NumberFormatInfo.NumberGroupSeparator
    commentId: P:System.Globalization.NumberFormatInfo.NumberGroupSeparator
  - linkId: System.Globalization.NumberFormatInfo.NumberGroupSizes
    commentId: P:System.Globalization.NumberFormatInfo.NumberGroupSizes
  - linkId: System.Globalization.NumberFormatInfo.NaNSymbol
    commentId: P:System.Globalization.NumberFormatInfo.NaNSymbol
  - linkId: System.Globalization.NumberFormatInfo.CurrencyNegativePattern
    commentId: P:System.Globalization.NumberFormatInfo.CurrencyNegativePattern
  - linkId: System.Globalization.NumberFormatInfo.PercentNegativePattern
    commentId: P:System.Globalization.NumberFormatInfo.PercentNegativePattern
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: System.Globalization.NumberFormatInfo.PercentDecimalDigits
  commentId: P:System.Globalization.NumberFormatInfo.PercentDecimalDigits
  id: PercentDecimalDigits
  parent: System.Globalization.NumberFormatInfo
  langs:
  - csharp
  - vb
  name: PercentDecimalDigits
  nameWithType: NumberFormatInfo.PercentDecimalDigits
  fullName: System.Globalization.NumberFormatInfo.PercentDecimalDigits
  type: Property
  source:
    remote:
      path: src/mscorlib/src/System/Globalization/NumberFormatInfo.cs
      branch: master
      repo: https://github.com/dotnet/coreclr.git
    id: PercentDecimalDigits
    path: src/mscorlib/src/System/Globalization/NumberFormatInfo.cs
    startLine: 697
  assemblies:
  - System.Globalization
  namespace: System.Globalization
  summary: "\n<p>Gets or sets the number of decimal places to use in percent values. </p>\n"
  syntax:
    content: public int PercentDecimalDigits { get; set; }
    content.vb: Public Property PercentDecimalDigits As Integer
    parameters: []
    return:
      type: System.Int32
      description: "\n<p>The number of decimal places to use in percent values. The default for <xref href=\"System.Globalization.NumberFormatInfo.InvariantInfo\" data-throw-if-not-resolved=\"false\"></xref> is 2.</p>\n"
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "\n<p>The property is being set to a value that is less than 0 or greater than 99. </p>\n"
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "\n<p>The property is being set and the <xref href=\"System.Globalization.NumberFormatInfo\" data-throw-if-not-resolved=\"false\"></xref> object is read-only. </p>\n"
  seealso:
  - linkId: System.Globalization.NumberFormatInfo.PercentDecimalSeparator
    commentId: P:System.Globalization.NumberFormatInfo.PercentDecimalSeparator
  - linkId: System.Globalization.NumberFormatInfo.PercentGroupSeparator
    commentId: P:System.Globalization.NumberFormatInfo.PercentGroupSeparator
  - linkId: System.Globalization.NumberFormatInfo.PercentGroupSizes
    commentId: P:System.Globalization.NumberFormatInfo.PercentGroupSizes
  - linkId: System.Globalization.NumberFormatInfo.PercentSymbol
    commentId: P:System.Globalization.NumberFormatInfo.PercentSymbol
  - linkId: System.Globalization.NumberFormatInfo.PercentNegativePattern
    commentId: P:System.Globalization.NumberFormatInfo.PercentNegativePattern
  - linkId: System.Globalization.NumberFormatInfo.PercentPositivePattern
    commentId: P:System.Globalization.NumberFormatInfo.PercentPositivePattern
  - linkId: System.Globalization.NumberFormatInfo.CurrencyDecimalDigits
    commentId: P:System.Globalization.NumberFormatInfo.CurrencyDecimalDigits
  - linkId: System.Globalization.NumberFormatInfo.NumberDecimalDigits
    commentId: P:System.Globalization.NumberFormatInfo.NumberDecimalDigits
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: System.Globalization.NumberFormatInfo.PercentDecimalSeparator
  commentId: P:System.Globalization.NumberFormatInfo.PercentDecimalSeparator
  id: PercentDecimalSeparator
  parent: System.Globalization.NumberFormatInfo
  langs:
  - csharp
  - vb
  name: PercentDecimalSeparator
  nameWithType: NumberFormatInfo.PercentDecimalSeparator
  fullName: System.Globalization.NumberFormatInfo.PercentDecimalSeparator
  type: Property
  source:
    remote:
      path: src/mscorlib/src/System/Globalization/NumberFormatInfo.cs
      branch: master
      repo: https://github.com/dotnet/coreclr.git
    id: PercentDecimalSeparator
    path: src/mscorlib/src/System/Globalization/NumberFormatInfo.cs
    startLine: 716
  assemblies:
  - System.Globalization
  namespace: System.Globalization
  summary: "\n<p>Gets or sets the string to use as the decimal separator in percent values. </p>\n"
  syntax:
    content: public string PercentDecimalSeparator { get; set; }
    content.vb: Public Property PercentDecimalSeparator As String
    parameters: []
    return:
      type: System.String
      description: "\n<p>The string to use as the decimal separator in percent values. The default for <xref href=\"System.Globalization.NumberFormatInfo.InvariantInfo\" data-throw-if-not-resolved=\"false\"></xref> is \".\".</p>\n"
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "\n<p>The property is being set to <strong>null</strong>. </p>\n"
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "\n<p>The property is being set and the <xref href=\"System.Globalization.NumberFormatInfo\" data-throw-if-not-resolved=\"false\"></xref> object is read-only. </p>\n"
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "\n<p>The property is being set to an empty string.</p>\n"
  seealso:
  - linkId: System.Globalization.NumberFormatInfo.PercentDecimalDigits
    commentId: P:System.Globalization.NumberFormatInfo.PercentDecimalDigits
  - linkId: System.Globalization.NumberFormatInfo.PercentGroupSeparator
    commentId: P:System.Globalization.NumberFormatInfo.PercentGroupSeparator
  - linkId: System.Globalization.NumberFormatInfo.PercentGroupSizes
    commentId: P:System.Globalization.NumberFormatInfo.PercentGroupSizes
  - linkId: System.Globalization.NumberFormatInfo.PercentSymbol
    commentId: P:System.Globalization.NumberFormatInfo.PercentSymbol
  - linkId: System.Globalization.NumberFormatInfo.PercentNegativePattern
    commentId: P:System.Globalization.NumberFormatInfo.PercentNegativePattern
  - linkId: System.Globalization.NumberFormatInfo.PercentPositivePattern
    commentId: P:System.Globalization.NumberFormatInfo.PercentPositivePattern
  - linkId: System.Globalization.NumberFormatInfo.CurrencyDecimalSeparator
    commentId: P:System.Globalization.NumberFormatInfo.CurrencyDecimalSeparator
  - linkId: System.Globalization.NumberFormatInfo.NumberDecimalSeparator
    commentId: P:System.Globalization.NumberFormatInfo.NumberDecimalSeparator
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: System.Globalization.NumberFormatInfo.PercentGroupSeparator
  commentId: P:System.Globalization.NumberFormatInfo.PercentGroupSeparator
  id: PercentGroupSeparator
  parent: System.Globalization.NumberFormatInfo
  langs:
  - csharp
  - vb
  name: PercentGroupSeparator
  nameWithType: NumberFormatInfo.PercentGroupSeparator
  fullName: System.Globalization.NumberFormatInfo.PercentGroupSeparator
  type: Property
  source:
    remote:
      path: src/mscorlib/src/System/Globalization/NumberFormatInfo.cs
      branch: master
      repo: https://github.com/dotnet/coreclr.git
    id: PercentGroupSeparator
    path: src/mscorlib/src/System/Globalization/NumberFormatInfo.cs
    startLine: 726
  assemblies:
  - System.Globalization
  namespace: System.Globalization
  summary: "\n<p>Gets or sets the string that separates groups of digits to the left of the decimal in percent values. </p>\n"
  syntax:
    content: public string PercentGroupSeparator { get; set; }
    content.vb: Public Property PercentGroupSeparator As String
    parameters: []
    return:
      type: System.String
      description: "\n<p>The string that separates groups of digits to the left of the decimal in percent values. The default for <xref href=\"System.Globalization.NumberFormatInfo.InvariantInfo\" data-throw-if-not-resolved=\"false\"></xref> is \",\".</p>\n"
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "\n<p>The property is being set to <strong>null</strong>. </p>\n"
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "\n<p>The property is being set and the <xref href=\"System.Globalization.NumberFormatInfo\" data-throw-if-not-resolved=\"false\"></xref> object is read-only. </p>\n"
  seealso:
  - linkId: System.Globalization.NumberFormatInfo.PercentDecimalDigits
    commentId: P:System.Globalization.NumberFormatInfo.PercentDecimalDigits
  - linkId: System.Globalization.NumberFormatInfo.PercentDecimalSeparator
    commentId: P:System.Globalization.NumberFormatInfo.PercentDecimalSeparator
  - linkId: System.Globalization.NumberFormatInfo.PercentGroupSizes
    commentId: P:System.Globalization.NumberFormatInfo.PercentGroupSizes
  - linkId: System.Globalization.NumberFormatInfo.PercentSymbol
    commentId: P:System.Globalization.NumberFormatInfo.PercentSymbol
  - linkId: System.Globalization.NumberFormatInfo.PercentNegativePattern
    commentId: P:System.Globalization.NumberFormatInfo.PercentNegativePattern
  - linkId: System.Globalization.NumberFormatInfo.PercentPositivePattern
    commentId: P:System.Globalization.NumberFormatInfo.PercentPositivePattern
  - linkId: System.Globalization.NumberFormatInfo.CurrencyGroupSeparator
    commentId: P:System.Globalization.NumberFormatInfo.CurrencyGroupSeparator
  - linkId: System.Globalization.NumberFormatInfo.NumberGroupSeparator
    commentId: P:System.Globalization.NumberFormatInfo.NumberGroupSeparator
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: System.Globalization.NumberFormatInfo.PercentGroupSizes
  commentId: P:System.Globalization.NumberFormatInfo.PercentGroupSizes
  id: PercentGroupSizes
  parent: System.Globalization.NumberFormatInfo
  langs:
  - csharp
  - vb
  name: PercentGroupSizes
  nameWithType: NumberFormatInfo.PercentGroupSizes
  fullName: System.Globalization.NumberFormatInfo.PercentGroupSizes
  type: Property
  source:
    remote:
      path: src/mscorlib/src/System/Globalization/NumberFormatInfo.cs
      branch: master
      repo: https://github.com/dotnet/coreclr.git
    id: PercentGroupSizes
    path: src/mscorlib/src/System/Globalization/NumberFormatInfo.cs
    startLine: 418
  assemblies:
  - System.Globalization
  namespace: System.Globalization
  summary: "\n<p>Gets or sets the number of digits in each group to the left of the decimal in percent values. </p>\n"
  syntax:
    content: public int[] PercentGroupSizes { get; set; }
    content.vb: Public Property PercentGroupSizes As Integer()
    parameters: []
    return:
      type: System.Int32[]
      description: "\n<p>The number of digits in each group to the left of the decimal in percent values. The default for <xref href=\"System.Globalization.NumberFormatInfo.InvariantInfo\" data-throw-if-not-resolved=\"false\"></xref> is a one-dimensional array with only one element, which is set to 3.</p>\n"
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "\n<p>The property is being set to <strong>null</strong>. </p>\n"
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "\n<p>The property is being set and the array contains an entry that is less than 0 or greater than 9.</p>\n<p>-or- </p>\n<p>The property is being set and the array contains an entry, other than the last entry, that is set to 0. </p>\n"
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "\n<p>The property is being set and the <xref href=\"System.Globalization.NumberFormatInfo\" data-throw-if-not-resolved=\"false\"></xref> object is read-only. </p>\n"
  seealso:
  - linkId: System.Globalization.NumberFormatInfo.PercentDecimalDigits
    commentId: P:System.Globalization.NumberFormatInfo.PercentDecimalDigits
  - linkId: System.Globalization.NumberFormatInfo.PercentDecimalSeparator
    commentId: P:System.Globalization.NumberFormatInfo.PercentDecimalSeparator
  - linkId: System.Globalization.NumberFormatInfo.PercentGroupSeparator
    commentId: P:System.Globalization.NumberFormatInfo.PercentGroupSeparator
  - linkId: System.Globalization.NumberFormatInfo.PercentSymbol
    commentId: P:System.Globalization.NumberFormatInfo.PercentSymbol
  - linkId: System.Globalization.NumberFormatInfo.PercentNegativePattern
    commentId: P:System.Globalization.NumberFormatInfo.PercentNegativePattern
  - linkId: System.Globalization.NumberFormatInfo.PercentPositivePattern
    commentId: P:System.Globalization.NumberFormatInfo.PercentPositivePattern
  - linkId: System.Globalization.NumberFormatInfo.CurrencyGroupSizes
    commentId: P:System.Globalization.NumberFormatInfo.CurrencyGroupSizes
  - linkId: System.Globalization.NumberFormatInfo.NumberGroupSizes
    commentId: P:System.Globalization.NumberFormatInfo.NumberGroupSizes
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: System.Globalization.NumberFormatInfo.PercentNegativePattern
  commentId: P:System.Globalization.NumberFormatInfo.PercentNegativePattern
  id: PercentNegativePattern
  parent: System.Globalization.NumberFormatInfo
  langs:
  - csharp
  - vb
  name: PercentNegativePattern
  nameWithType: NumberFormatInfo.PercentNegativePattern
  fullName: System.Globalization.NumberFormatInfo.PercentNegativePattern
  type: Property
  source:
    remote:
      path: src/mscorlib/src/System/Globalization/NumberFormatInfo.cs
      branch: master
      repo: https://github.com/dotnet/coreclr.git
    id: PercentNegativePattern
    path: src/mscorlib/src/System/Globalization/NumberFormatInfo.cs
    startLine: 557
  assemblies:
  - System.Globalization
  namespace: System.Globalization
  summary: "\n<p>Gets or sets the format pattern for negative percent values.</p>\n"
  syntax:
    content: public int PercentNegativePattern { get; set; }
    content.vb: Public Property PercentNegativePattern As Integer
    parameters: []
    return:
      type: System.Int32
      description: "\n<p>The format pattern for negative percent values. The default for <xref href=\"System.Globalization.NumberFormatInfo.InvariantInfo\" data-throw-if-not-resolved=\"false\"></xref> is 0, which represents \"-n %\", where \"%\" is the <xref href=\"System.Globalization.NumberFormatInfo.PercentSymbol\" data-throw-if-not-resolved=\"false\"></xref> and <em>n</em> is a number.</p>\n"
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "\n<p>The property is being set to a value that is less than 0 or greater than 11. </p>\n"
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "\n<p>The property is being set and the <xref href=\"System.Globalization.NumberFormatInfo\" data-throw-if-not-resolved=\"false\"></xref> object is read-only. </p>\n"
  seealso:
  - linkId: System.Globalization.NumberFormatInfo.PercentDecimalDigits
    commentId: P:System.Globalization.NumberFormatInfo.PercentDecimalDigits
  - linkId: System.Globalization.NumberFormatInfo.PercentDecimalSeparator
    commentId: P:System.Globalization.NumberFormatInfo.PercentDecimalSeparator
  - linkId: System.Globalization.NumberFormatInfo.PercentGroupSeparator
    commentId: P:System.Globalization.NumberFormatInfo.PercentGroupSeparator
  - linkId: System.Globalization.NumberFormatInfo.PercentGroupSizes
    commentId: P:System.Globalization.NumberFormatInfo.PercentGroupSizes
  - linkId: System.Globalization.NumberFormatInfo.PercentSymbol
    commentId: P:System.Globalization.NumberFormatInfo.PercentSymbol
  - linkId: System.Globalization.NumberFormatInfo.PercentPositivePattern
    commentId: P:System.Globalization.NumberFormatInfo.PercentPositivePattern
  - linkId: System.Globalization.NumberFormatInfo.CurrencyNegativePattern
    commentId: P:System.Globalization.NumberFormatInfo.CurrencyNegativePattern
  - linkId: System.Globalization.NumberFormatInfo.NumberNegativePattern
    commentId: P:System.Globalization.NumberFormatInfo.NumberNegativePattern
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: System.Globalization.NumberFormatInfo.PercentPositivePattern
  commentId: P:System.Globalization.NumberFormatInfo.PercentPositivePattern
  id: PercentPositivePattern
  parent: System.Globalization.NumberFormatInfo
  langs:
  - csharp
  - vb
  name: PercentPositivePattern
  nameWithType: NumberFormatInfo.PercentPositivePattern
  fullName: System.Globalization.NumberFormatInfo.PercentPositivePattern
  type: Property
  source:
    remote:
      path: src/mscorlib/src/System/Globalization/NumberFormatInfo.cs
      branch: master
      repo: https://github.com/dotnet/coreclr.git
    id: PercentPositivePattern
    path: src/mscorlib/src/System/Globalization/NumberFormatInfo.cs
    startLine: 535
  assemblies:
  - System.Globalization
  namespace: System.Globalization
  summary: "\n<p>Gets or sets the format pattern for positive percent values.</p>\n"
  syntax:
    content: public int PercentPositivePattern { get; set; }
    content.vb: Public Property PercentPositivePattern As Integer
    parameters: []
    return:
      type: System.Int32
      description: "\n<p>The format pattern for positive percent values. The default for <xref href=\"System.Globalization.NumberFormatInfo.InvariantInfo\" data-throw-if-not-resolved=\"false\"></xref> is 0, which represents \"n %\", where \"%\" is the <xref href=\"System.Globalization.NumberFormatInfo.PercentSymbol\" data-throw-if-not-resolved=\"false\"></xref> and <em>n</em> is a number.</p>\n"
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "\n<p>The property is being set to a value that is less than 0 or greater than 3. </p>\n"
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "\n<p>The property is being set and the <xref href=\"System.Globalization.NumberFormatInfo\" data-throw-if-not-resolved=\"false\"></xref> object is read-only. </p>\n"
  seealso:
  - linkId: System.Globalization.NumberFormatInfo.PercentDecimalDigits
    commentId: P:System.Globalization.NumberFormatInfo.PercentDecimalDigits
  - linkId: System.Globalization.NumberFormatInfo.PercentDecimalSeparator
    commentId: P:System.Globalization.NumberFormatInfo.PercentDecimalSeparator
  - linkId: System.Globalization.NumberFormatInfo.PercentGroupSeparator
    commentId: P:System.Globalization.NumberFormatInfo.PercentGroupSeparator
  - linkId: System.Globalization.NumberFormatInfo.PercentGroupSizes
    commentId: P:System.Globalization.NumberFormatInfo.PercentGroupSizes
  - linkId: System.Globalization.NumberFormatInfo.PercentSymbol
    commentId: P:System.Globalization.NumberFormatInfo.PercentSymbol
  - linkId: System.Globalization.NumberFormatInfo.PercentNegativePattern
    commentId: P:System.Globalization.NumberFormatInfo.PercentNegativePattern
  - linkId: System.Globalization.NumberFormatInfo.CurrencyPositivePattern
    commentId: P:System.Globalization.NumberFormatInfo.CurrencyPositivePattern
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: System.Globalization.NumberFormatInfo.PercentSymbol
  commentId: P:System.Globalization.NumberFormatInfo.PercentSymbol
  id: PercentSymbol
  parent: System.Globalization.NumberFormatInfo
  langs:
  - csharp
  - vb
  name: PercentSymbol
  nameWithType: NumberFormatInfo.PercentSymbol
  fullName: System.Globalization.NumberFormatInfo.PercentSymbol
  type: Property
  source:
    remote:
      path: src/mscorlib/src/System/Globalization/NumberFormatInfo.cs
      branch: master
      repo: https://github.com/dotnet/coreclr.git
    id: PercentSymbol
    path: src/mscorlib/src/System/Globalization/NumberFormatInfo.cs
    startLine: 736
  assemblies:
  - System.Globalization
  namespace: System.Globalization
  summary: "\n<p>Gets or sets the string to use as the percent symbol.</p>\n"
  syntax:
    content: public string PercentSymbol { get; set; }
    content.vb: Public Property PercentSymbol As String
    parameters: []
    return:
      type: System.String
      description: "\n<p>The string to use as the percent symbol. The default for <xref href=\"System.Globalization.NumberFormatInfo.InvariantInfo\" data-throw-if-not-resolved=\"false\"></xref> is \"%\".</p>\n"
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "\n<p>The property is being set to <strong>null</strong>. </p>\n"
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "\n<p>The property is being set and the <xref href=\"System.Globalization.NumberFormatInfo\" data-throw-if-not-resolved=\"false\"></xref> object is read-only. </p>\n"
  seealso:
  - linkId: System.Globalization.NumberFormatInfo.PercentDecimalDigits
    commentId: P:System.Globalization.NumberFormatInfo.PercentDecimalDigits
  - linkId: System.Globalization.NumberFormatInfo.PercentDecimalSeparator
    commentId: P:System.Globalization.NumberFormatInfo.PercentDecimalSeparator
  - linkId: System.Globalization.NumberFormatInfo.PercentGroupSeparator
    commentId: P:System.Globalization.NumberFormatInfo.PercentGroupSeparator
  - linkId: System.Globalization.NumberFormatInfo.PercentGroupSizes
    commentId: P:System.Globalization.NumberFormatInfo.PercentGroupSizes
  - linkId: System.Globalization.NumberFormatInfo.PercentNegativePattern
    commentId: P:System.Globalization.NumberFormatInfo.PercentNegativePattern
  - linkId: System.Globalization.NumberFormatInfo.PercentPositivePattern
    commentId: P:System.Globalization.NumberFormatInfo.PercentPositivePattern
  - linkId: System.Globalization.NumberFormatInfo.CurrencySymbol
    commentId: P:System.Globalization.NumberFormatInfo.CurrencySymbol
  - linkId: System.Globalization.NumberFormatInfo.NaNSymbol
    commentId: P:System.Globalization.NumberFormatInfo.NaNSymbol
  - linkId: System.Globalization.NumberFormatInfo.PerMilleSymbol
    commentId: P:System.Globalization.NumberFormatInfo.PerMilleSymbol
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: System.Globalization.NumberFormatInfo.PerMilleSymbol
  commentId: P:System.Globalization.NumberFormatInfo.PerMilleSymbol
  id: PerMilleSymbol
  parent: System.Globalization.NumberFormatInfo
  langs:
  - csharp
  - vb
  name: PerMilleSymbol
  nameWithType: NumberFormatInfo.PerMilleSymbol
  fullName: System.Globalization.NumberFormatInfo.PerMilleSymbol
  type: Property
  source:
    remote:
      path: src/mscorlib/src/System/Globalization/NumberFormatInfo.cs
      branch: master
      repo: https://github.com/dotnet/coreclr.git
    id: PerMilleSymbol
    path: src/mscorlib/src/System/Globalization/NumberFormatInfo.cs
    startLine: 752
  assemblies:
  - System.Globalization
  namespace: System.Globalization
  summary: "\n<p>Gets or sets the string to use as the per mille symbol.</p>\n"
  syntax:
    content: public string PerMilleSymbol { get; set; }
    content.vb: Public Property PerMilleSymbol As String
    parameters: []
    return:
      type: System.String
      description: "\n<p>The string to use as the per mille symbol. The default for <xref href=\"System.Globalization.NumberFormatInfo.InvariantInfo\" data-throw-if-not-resolved=\"false\"></xref> is \"‰\", which is the Unicode character U+2030.</p>\n"
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "\n<p>The property is being set to <strong>null</strong>. </p>\n"
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "\n<p>The property is being set and the <xref href=\"System.Globalization.NumberFormatInfo\" data-throw-if-not-resolved=\"false\"></xref> object is read-only. </p>\n"
  seealso:
  - linkId: System.Globalization.NumberFormatInfo.CurrencySymbol
    commentId: P:System.Globalization.NumberFormatInfo.CurrencySymbol
  - linkId: System.Globalization.NumberFormatInfo.NaNSymbol
    commentId: P:System.Globalization.NumberFormatInfo.NaNSymbol
  - linkId: System.Globalization.NumberFormatInfo.PercentSymbol
    commentId: P:System.Globalization.NumberFormatInfo.PercentSymbol
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: System.Globalization.NumberFormatInfo.PositiveInfinitySymbol
  commentId: P:System.Globalization.NumberFormatInfo.PositiveInfinitySymbol
  id: PositiveInfinitySymbol
  parent: System.Globalization.NumberFormatInfo
  langs:
  - csharp
  - vb
  name: PositiveInfinitySymbol
  nameWithType: NumberFormatInfo.PositiveInfinitySymbol
  fullName: System.Globalization.NumberFormatInfo.PositiveInfinitySymbol
  type: Property
  source:
    remote:
      path: src/mscorlib/src/System/Globalization/NumberFormatInfo.cs
      branch: master
      repo: https://github.com/dotnet/coreclr.git
    id: PositiveInfinitySymbol
    path: src/mscorlib/src/System/Globalization/NumberFormatInfo.cs
    startLine: 667
  assemblies:
  - System.Globalization
  namespace: System.Globalization
  summary: "\n<p>Gets or sets the string that represents positive infinity.</p>\n"
  syntax:
    content: public string PositiveInfinitySymbol { get; set; }
    content.vb: Public Property PositiveInfinitySymbol As String
    parameters: []
    return:
      type: System.String
      description: "\n<p>The string that represents positive infinity. The default for <xref href=\"System.Globalization.NumberFormatInfo.InvariantInfo\" data-throw-if-not-resolved=\"false\"></xref> is \"Infinity\".</p>\n"
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "\n<p>The property is being set to <strong>null</strong>. </p>\n"
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "\n<p>The property is being set and the <xref href=\"System.Globalization.NumberFormatInfo\" data-throw-if-not-resolved=\"false\"></xref> object is read-only. </p>\n"
  seealso:
  - linkId: System.Globalization.NumberFormatInfo.NegativeInfinitySymbol
    commentId: P:System.Globalization.NumberFormatInfo.NegativeInfinitySymbol
  - linkId: System.Globalization.NumberFormatInfo.NaNSymbol
    commentId: P:System.Globalization.NumberFormatInfo.NaNSymbol
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: System.Globalization.NumberFormatInfo.PositiveSign
  commentId: P:System.Globalization.NumberFormatInfo.PositiveSign
  id: PositiveSign
  parent: System.Globalization.NumberFormatInfo
  langs:
  - csharp
  - vb
  name: PositiveSign
  nameWithType: NumberFormatInfo.PositiveSign
  fullName: System.Globalization.NumberFormatInfo.PositiveSign
  type: Property
  source:
    remote:
      path: src/mscorlib/src/System/Globalization/NumberFormatInfo.cs
      branch: master
      repo: https://github.com/dotnet/coreclr.git
    id: PositiveSign
    path: src/mscorlib/src/System/Globalization/NumberFormatInfo.cs
    startLine: 683
  assemblies:
  - System.Globalization
  namespace: System.Globalization
  summary: "\n<p>Gets or sets the string that denotes that the associated number is positive.</p>\n"
  syntax:
    content: public string PositiveSign { get; set; }
    content.vb: Public Property PositiveSign As String
    parameters: []
    return:
      type: System.String
      description: "\n<p>The string that denotes that the associated number is positive. The default for <xref href=\"System.Globalization.NumberFormatInfo.InvariantInfo\" data-throw-if-not-resolved=\"false\"></xref> is \"+\".</p>\n"
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "\n<p>In a set operation, the value to be assigned is <strong>null</strong>.</p>\n"
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "\n<p>The property is being set and the <xref href=\"System.Globalization.NumberFormatInfo\" data-throw-if-not-resolved=\"false\"></xref> object is read-only. </p>\n"
  seealso:
  - linkId: System.Globalization.NumberFormatInfo.NegativeSign
    commentId: P:System.Globalization.NumberFormatInfo.NegativeSign
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: System.Globalization.NumberFormatInfo.Clone
  commentId: M:System.Globalization.NumberFormatInfo.Clone
  id: Clone
  parent: System.Globalization.NumberFormatInfo
  langs:
  - csharp
  - vb
  name: Clone()
  nameWithType: NumberFormatInfo.Clone()
  fullName: System.Globalization.NumberFormatInfo.Clone()
  type: Method
  source:
    remote:
      path: src/mscorlib/src/System/Globalization/NumberFormatInfo.cs
      branch: master
      repo: https://github.com/dotnet/coreclr.git
    id: Clone
    path: src/mscorlib/src/System/Globalization/NumberFormatInfo.cs
    startLine: 312
  assemblies:
  - System.Globalization
  namespace: System.Globalization
  summary: "\n<p>Creates a shallow copy of the <xref href=\"System.Globalization.NumberFormatInfo\" data-throw-if-not-resolved=\"false\"></xref> object.</p>\n"
  syntax:
    content: public object Clone()
    content.vb: Public Function Clone As Object
    return:
      type: System.Object
      description: "\n<p>A new object copied from the original <xref href=\"System.Globalization.NumberFormatInfo\" data-throw-if-not-resolved=\"false\"></xref> object.</p>\n"
  seealso:
  - linkId: System.Globalization.NumberFormatInfo.IsReadOnly
    commentId: P:System.Globalization.NumberFormatInfo.IsReadOnly
  - linkId: System.Globalization.NumberFormatInfo.ReadOnly(System.Globalization.NumberFormatInfo)
    commentId: M:System.Globalization.NumberFormatInfo.ReadOnly(System.Globalization.NumberFormatInfo)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: System.Globalization.NumberFormatInfo.GetFormat(System.Type)
  commentId: M:System.Globalization.NumberFormatInfo.GetFormat(System.Type)
  id: GetFormat(System.Type)
  parent: System.Globalization.NumberFormatInfo
  langs:
  - csharp
  - vb
  name: GetFormat(Type)
  nameWithType: NumberFormatInfo.GetFormat(Type)
  fullName: System.Globalization.NumberFormatInfo.GetFormat(System.Type)
  type: Method
  source:
    remote:
      path: src/mscorlib/src/System/Globalization/NumberFormatInfo.cs
      branch: master
      repo: https://github.com/dotnet/coreclr.git
    id: GetFormat
    path: src/mscorlib/src/System/Globalization/NumberFormatInfo.cs
    startLine: 792
  assemblies:
  - System.Globalization
  namespace: System.Globalization
  summary: "\n<p>Gets an object of the specified type that provides a number formatting service.</p>\n"
  syntax:
    content: public object GetFormat(Type formatType)
    content.vb: Public Function GetFormat(formatType As Type) As Object
    parameters:
    - id: formatType
      type: System.Type
      description: "\n<p>The <xref href=\"System.Type\" data-throw-if-not-resolved=\"false\"></xref> of the required formatting service. </p>\n"
    return:
      type: System.Object
      description: "\n<p>The current <xref href=\"System.Globalization.NumberFormatInfo\" data-throw-if-not-resolved=\"false\"></xref>, if <em>formatType</em> is the same as the type of the current <xref href=\"System.Globalization.NumberFormatInfo\" data-throw-if-not-resolved=\"false\"></xref>; otherwise, <strong>null</strong>.</p>\n"
  seealso:
  - linkId: System.IFormatProvider
    commentId: T:System.IFormatProvider
  - linkId: System.Globalization.DateTimeFormatInfo.GetFormat(System.Type)
    commentId: M:System.Globalization.DateTimeFormatInfo.GetFormat(System.Type)
  implements:
  - System.IFormatProvider.GetFormat(System.Type)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: System.Globalization.NumberFormatInfo.GetInstance(System.IFormatProvider)
  commentId: M:System.Globalization.NumberFormatInfo.GetInstance(System.IFormatProvider)
  id: GetInstance(System.IFormatProvider)
  parent: System.Globalization.NumberFormatInfo
  langs:
  - csharp
  - vb
  name: GetInstance(IFormatProvider)
  nameWithType: NumberFormatInfo.GetInstance(IFormatProvider)
  fullName: System.Globalization.NumberFormatInfo.GetInstance(System.IFormatProvider)
  type: Method
  source:
    remote:
      path: src/mscorlib/src/System/Globalization/NumberFormatInfo.cs
      branch: master
      repo: https://github.com/dotnet/coreclr.git
    id: GetInstance
    path: src/mscorlib/src/System/Globalization/NumberFormatInfo.cs
    startLine: 283
  assemblies:
  - System.Globalization
  namespace: System.Globalization
  summary: "\n<p>Gets the <xref href=\"System.Globalization.NumberFormatInfo\" data-throw-if-not-resolved=\"false\"></xref> associated with the specified <xref href=\"System.IFormatProvider\" data-throw-if-not-resolved=\"false\"></xref>.</p>\n"
  syntax:
    content: public static NumberFormatInfo GetInstance(IFormatProvider formatProvider)
    content.vb: Public Shared Function GetInstance(formatProvider As IFormatProvider) As NumberFormatInfo
    parameters:
    - id: formatProvider
      type: System.IFormatProvider
      description: "\n<p>The <xref href=\"System.IFormatProvider\" data-throw-if-not-resolved=\"false\"></xref> used to get the <xref href=\"System.Globalization.NumberFormatInfo\" data-throw-if-not-resolved=\"false\"></xref>.</p>\n<p>-or- </p>\n<p>\n<strong>null</strong> to get <xref href=\"System.Globalization.NumberFormatInfo.CurrentInfo\" data-throw-if-not-resolved=\"false\"></xref>. </p>\n"
    return:
      type: System.Globalization.NumberFormatInfo
      description: "\n<p>The <xref href=\"System.Globalization.NumberFormatInfo\" data-throw-if-not-resolved=\"false\"></xref> associated with the specified <xref href=\"System.IFormatProvider\" data-throw-if-not-resolved=\"false\"></xref>.</p>\n"
  seealso:
  - linkId: System.IFormatProvider
    commentId: T:System.IFormatProvider
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: System.Globalization.NumberFormatInfo.ReadOnly(System.Globalization.NumberFormatInfo)
  commentId: M:System.Globalization.NumberFormatInfo.ReadOnly(System.Globalization.NumberFormatInfo)
  id: ReadOnly(System.Globalization.NumberFormatInfo)
  parent: System.Globalization.NumberFormatInfo
  langs:
  - csharp
  - vb
  name: ReadOnly(NumberFormatInfo)
  nameWithType: NumberFormatInfo.ReadOnly(NumberFormatInfo)
  fullName: System.Globalization.NumberFormatInfo.ReadOnly(System.Globalization.NumberFormatInfo)
  type: Method
  source:
    remote:
      path: src/mscorlib/src/System/Globalization/NumberFormatInfo.cs
      branch: master
      repo: https://github.com/dotnet/coreclr.git
    id: ReadOnly
    path: src/mscorlib/src/System/Globalization/NumberFormatInfo.cs
    startLine: 796
  assemblies:
  - System.Globalization
  namespace: System.Globalization
  summary: "\n<p>Returns a read-only <xref href=\"System.Globalization.NumberFormatInfo\" data-throw-if-not-resolved=\"false\"></xref> wrapper.</p>\n"
  syntax:
    content: public static NumberFormatInfo ReadOnly(NumberFormatInfo nfi)
    content.vb: Public Shared Function ReadOnly(nfi As NumberFormatInfo) As NumberFormatInfo
    parameters:
    - id: nfi
      type: System.Globalization.NumberFormatInfo
      description: "\n<p>The <xref href=\"System.Globalization.NumberFormatInfo\" data-throw-if-not-resolved=\"false\"></xref> to wrap. </p>\n"
    return:
      type: System.Globalization.NumberFormatInfo
      description: "\n<p>A read-only <xref href=\"System.Globalization.NumberFormatInfo\" data-throw-if-not-resolved=\"false\"></xref> wrapper around <em>nfi</em>.</p>\n"
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "\n<p>\n<em>nfi</em> is <strong>null</strong>. </p>\n"
  seealso:
  - linkId: System.Globalization.NumberFormatInfo.IsReadOnly
    commentId: P:System.Globalization.NumberFormatInfo.IsReadOnly
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
references:
- uid: System.Globalization
  commentId: N:System.Globalization
  isExternal: false
  name: System.Globalization
  nameWithType: System.Globalization
  fullName: System.Globalization
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: false
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.IFormatProvider
  commentId: T:System.IFormatProvider
  parent: System
  isExternal: false
  name: IFormatProvider
  nameWithType: IFormatProvider
  fullName: System.IFormatProvider
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: false
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: false
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Int32[]
  name: Int32[]
  nameWithType: Int32[]
  fullName: System.Int32[]
  nameWithType.vb: Int32()
  fullname.vb: System.Int32()
  name.vb: Int32()
  spec.csharp:
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  spec.vb:
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
- uid: System.Globalization.NumberFormatInfo
  commentId: T:System.Globalization.NumberFormatInfo
  parent: System.Globalization
  isExternal: false
  name: NumberFormatInfo
  nameWithType: NumberFormatInfo
  fullName: System.Globalization.NumberFormatInfo
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: false
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.IFormatProvider.GetFormat(System.Type)
  commentId: M:System.IFormatProvider.GetFormat(System.Type)
  parent: System.IFormatProvider
  isExternal: true
  name: GetFormat(Type)
  nameWithType: IFormatProvider.GetFormat(Type)
  fullName: System.IFormatProvider.GetFormat(System.Type)
  spec.csharp:
  - uid: System.IFormatProvider.GetFormat(System.Type)
    name: GetFormat
    nameWithType: IFormatProvider.GetFormat
    fullName: System.IFormatProvider.GetFormat
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Type
    name: Type
    nameWithType: Type
    fullName: System.Type
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.IFormatProvider.GetFormat(System.Type)
    name: GetFormat
    nameWithType: IFormatProvider.GetFormat
    fullName: System.IFormatProvider.GetFormat
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Type
    name: Type
    nameWithType: Type
    fullName: System.Type
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Type
  commentId: T:System.Type
  parent: System
  isExternal: false
  name: Type
  nameWithType: Type
  fullName: System.Type
- uid: System.ArgumentOutOfRangeException
  commentId: T:System.ArgumentOutOfRangeException
  isExternal: false
  name: ArgumentOutOfRangeException
  nameWithType: ArgumentOutOfRangeException
  fullName: System.ArgumentOutOfRangeException
- uid: System.InvalidOperationException
  commentId: T:System.InvalidOperationException
  parent: System
  isExternal: false
  name: InvalidOperationException
  nameWithType: InvalidOperationException
  fullName: System.InvalidOperationException
- uid: System.ArgumentNullException
  commentId: T:System.ArgumentNullException
  isExternal: false
  name: ArgumentNullException
  nameWithType: ArgumentNullException
  fullName: System.ArgumentNullException
- uid: System.ArgumentException
  commentId: T:System.ArgumentException
  parent: System
  isExternal: false
  name: ArgumentException
  nameWithType: ArgumentException
  fullName: System.ArgumentException
