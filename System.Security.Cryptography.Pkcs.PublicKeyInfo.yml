items:
- uid: System.Security.Cryptography.Pkcs.PublicKeyInfo
  commentId: T:System.Security.Cryptography.Pkcs.PublicKeyInfo
  id: PublicKeyInfo
  parent: System.Security.Cryptography.Pkcs
  children:
  - System.Security.Cryptography.Pkcs.PublicKeyInfo.Algorithm
  - System.Security.Cryptography.Pkcs.PublicKeyInfo.KeyValue
  langs:
  - csharp
  - vb
  name: PublicKeyInfo
  fullName: System.Security.Cryptography.Pkcs.PublicKeyInfo
  type: Class
  source:
    remote:
      path: src/System.Security.Cryptography.Pkcs/src/System/Security/Cryptography/Pkcs/PublicKeyInfo.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: PublicKeyInfo
    path: src/System.Security.Cryptography.Pkcs/src/System/Security/Cryptography/Pkcs/PublicKeyInfo.cs
    startLine: 9
  assemblies:
  - System.Security.Cryptography.Pkcs
  namespace: System.Security.Cryptography.Pkcs
  summary: "\n<p>The <xref href=\"System.Security.Cryptography.Pkcs.PublicKeyInfo\" data-throw-if-not-resolved=\"false\"></xref> class represents information associated with a public key.</p>\n"
  syntax:
    content: public sealed class PublicKeyInfo
    content.vb: Public NotInheritable Class PublicKeyInfo
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  modifiers.csharp:
  - public
  - sealed
  - class
  modifiers.vb:
  - Public
  - NotInheritable
  - Class
  nameWithType: PublicKeyInfo
- uid: System.Security.Cryptography.Pkcs.PublicKeyInfo.Algorithm
  commentId: P:System.Security.Cryptography.Pkcs.PublicKeyInfo.Algorithm
  id: Algorithm
  parent: System.Security.Cryptography.Pkcs.PublicKeyInfo
  langs:
  - csharp
  - vb
  name: Algorithm
  fullName: System.Security.Cryptography.Pkcs.PublicKeyInfo.Algorithm
  type: Property
  source:
    remote:
      path: src/System.Security.Cryptography.Pkcs/src/System/Security/Cryptography/Pkcs/PublicKeyInfo.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: Algorithm
    path: src/System.Security.Cryptography.Pkcs/src/System/Security/Cryptography/Pkcs/PublicKeyInfo.cs
    startLine: 20
  assemblies:
  - System.Security.Cryptography.Pkcs
  namespace: System.Security.Cryptography.Pkcs
  summary: "\n<p>The <xref href=\"System.Security.Cryptography.Pkcs.PublicKeyInfo.Algorithm\" data-throw-if-not-resolved=\"false\"></xref> property retrieves the algorithm identifier associated with the public key.</p>\n"
  syntax:
    content: public AlgorithmIdentifier Algorithm { get; }
    content.vb: Public ReadOnly Property Algorithm As AlgorithmIdentifier
    parameters: []
    return:
      type: System.Security.Cryptography.Pkcs.AlgorithmIdentifier
      description: "\n<p>An <xref href=\"System.Security.Cryptography.Pkcs.AlgorithmIdentifier\" data-throw-if-not-resolved=\"false\"></xref>  object that represents the algorithm.</p>\n"
  seealso:
  - type: System.Security.Cryptography.Pkcs.PublicKeyInfo.KeyValue
    commentId: P:System.Security.Cryptography.Pkcs.PublicKeyInfo.KeyValue
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
  nameWithType: PublicKeyInfo.Algorithm
- uid: System.Security.Cryptography.Pkcs.PublicKeyInfo.KeyValue
  commentId: P:System.Security.Cryptography.Pkcs.PublicKeyInfo.KeyValue
  id: KeyValue
  parent: System.Security.Cryptography.Pkcs.PublicKeyInfo
  langs:
  - csharp
  - vb
  name: KeyValue
  fullName: System.Security.Cryptography.Pkcs.PublicKeyInfo.KeyValue
  type: Property
  source:
    remote:
      path: src/System.Security.Cryptography.Pkcs/src/System/Security/Cryptography/Pkcs/PublicKeyInfo.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: KeyValue
    path: src/System.Security.Cryptography.Pkcs/src/System/Security/Cryptography/Pkcs/PublicKeyInfo.cs
    startLine: 22
  assemblies:
  - System.Security.Cryptography.Pkcs
  namespace: System.Security.Cryptography.Pkcs
  summary: "\n<p>The <xref href=\"System.Security.Cryptography.Pkcs.PublicKeyInfo.KeyValue\" data-throw-if-not-resolved=\"false\"></xref> property retrieves the value of the encoded public component of the public key pair.</p>\n"
  syntax:
    content: public byte[] KeyValue { get; }
    content.vb: Public ReadOnly Property KeyValue As Byte()
    parameters: []
    return:
      type: System.Byte[]
      description: "\n<p>An array of byte values  that represents the encoded public component of the public key pair.</p>\n"
  seealso:
  - type: System.Security.Cryptography.Pkcs.PublicKeyInfo.Algorithm
    commentId: P:System.Security.Cryptography.Pkcs.PublicKeyInfo.Algorithm
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
  nameWithType: PublicKeyInfo.KeyValue
references:
- uid: System.Security.Cryptography.Pkcs
  isExternal: false
  name: System.Security.Cryptography.Pkcs
  fullName: System.Security.Cryptography.Pkcs
  nameWithType: System.Security.Cryptography.Pkcs
  commentId: N:System.Security.Cryptography.Pkcs
- uid: System.Object
  parent: System
  isExternal: false
  name: Object
  fullName: System.Object
  nameWithType: Object
  commentId: T:System.Object
- uid: System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  nameWithType: Object.ToString()
  commentId: M:System.Object.ToString
- uid: System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
  nameWithType: Object.Equals(Object)
  commentId: M:System.Object.Equals(System.Object)
- uid: System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
  nameWithType: Object.Equals(Object, Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
  nameWithType: Object.ReferenceEquals(Object, Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
- uid: System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  nameWithType: Object.GetHashCode()
  commentId: M:System.Object.GetHashCode
- uid: System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  nameWithType: Object.GetType()
  commentId: M:System.Object.GetType
- uid: System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  nameWithType: Object.MemberwiseClone()
  commentId: M:System.Object.MemberwiseClone
- uid: System
  isExternal: false
  name: System
  fullName: System
  nameWithType: System
  commentId: N:System
- uid: System.Security.Cryptography.Pkcs.AlgorithmIdentifier
  parent: System.Security.Cryptography.Pkcs
  isExternal: false
  name: AlgorithmIdentifier
  fullName: System.Security.Cryptography.Pkcs.AlgorithmIdentifier
  nameWithType: AlgorithmIdentifier
  commentId: T:System.Security.Cryptography.Pkcs.AlgorithmIdentifier
- uid: System.Byte[]
  name: Byte[]
  fullName: System.Byte[]
  fullname.vb: System.Byte()
  name.vb: Byte()
  spec.csharp:
  - uid: System.Byte
    name: Byte
    fullName: System.Byte
    isExternal: true
  - name: '[]'
    fullName: '[]'
  spec.vb:
  - uid: System.Byte
    name: Byte
    fullName: System.Byte
    isExternal: true
  - name: ()
    fullName: ()
  nameWithType: Byte[]
  nameWithType.vb: Byte()
