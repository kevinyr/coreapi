### YamlMime:ManagedReference
items:
- uid: System.Diagnostics.TraceSwitch
  commentId: T:System.Diagnostics.TraceSwitch
  id: TraceSwitch
  parent: System.Diagnostics
  children:
  - System.Diagnostics.TraceSwitch.#ctor(System.String,System.String)
  - System.Diagnostics.TraceSwitch.#ctor(System.String,System.String,System.String)
  - System.Diagnostics.TraceSwitch.Level
  - System.Diagnostics.TraceSwitch.OnSwitchSettingChanged
  - System.Diagnostics.TraceSwitch.OnValueChanged
  - System.Diagnostics.TraceSwitch.TraceError
  - System.Diagnostics.TraceSwitch.TraceInfo
  - System.Diagnostics.TraceSwitch.TraceVerbose
  - System.Diagnostics.TraceSwitch.TraceWarning
  langs:
  - csharp
  - vb
  name: TraceSwitch
  nameWithType: TraceSwitch
  fullName: System.Diagnostics.TraceSwitch
  type: Class
  source:
    remote:
      path: src/System.Diagnostics.TraceSource/src/System/Diagnostics/TraceSwitch.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: TraceSwitch
    path: src/System.Diagnostics.TraceSource/src/System/Diagnostics/TraceSwitch.cs
    startLine: 12
  assemblies:
  - System.Diagnostics.TraceSource
  namespace: System.Diagnostics
  summary: "\n<p>Provides a multilevel switch to control tracing and debug output without recompiling your code.</p>\n"
  syntax:
    content: 'public class TraceSwitch : Switch'
    content.vb: >-
      Public Class TraceSwitch
          Inherits Switch
  seealso:
  - linkId: System.Diagnostics.Switch
    commentId: T:System.Diagnostics.Switch
  - linkId: System.Diagnostics.BooleanSwitch
    commentId: T:System.Diagnostics.BooleanSwitch
  - linkId: System.Diagnostics.TraceLevel
    commentId: T:System.Diagnostics.TraceLevel
  - linkId: System.Diagnostics.Debug
    commentId: T:System.Diagnostics.Debug
  - linkId: System.Diagnostics.Trace
    commentId: T:System.Diagnostics.Trace
  inheritance:
  - System.Object
  - System.Diagnostics.Switch
  inheritedMembers:
  - System.Diagnostics.Switch.Description
  - System.Diagnostics.Switch.DisplayName
  - System.Diagnostics.Switch.SwitchSetting
  - System.Diagnostics.Switch.Value
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: System.Diagnostics.TraceSwitch.#ctor(System.String,System.String)
  commentId: M:System.Diagnostics.TraceSwitch.#ctor(System.String,System.String)
  id: '#ctor(System.String,System.String)'
  parent: System.Diagnostics.TraceSwitch
  langs:
  - csharp
  - vb
  name: TraceSwitch(String, String)
  nameWithType: TraceSwitch.TraceSwitch(String, String)
  fullName: System.Diagnostics.TraceSwitch.TraceSwitch(System.String, System.String)
  type: Constructor
  source:
    remote:
      path: src/System.Diagnostics.TraceSource/src/System/Diagnostics/TraceSwitch.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: .ctor
    path: src/System.Diagnostics.TraceSource/src/System/Diagnostics/TraceSwitch.cs
    startLine: 17
  assemblies:
  - System.Diagnostics.TraceSource
  namespace: System.Diagnostics
  summary: "\n<p>Initializes a new instance of the <xref href=\"System.Diagnostics.TraceSwitch\" data-throw-if-not-resolved=\"false\"></xref> class, using the specified display name and description.</p>\n"
  syntax:
    content: public TraceSwitch(string displayName, string description)
    content.vb: Public Sub New(displayName As String, description As String)
    parameters:
    - id: displayName
      type: System.String
      description: "\n<p>The name to display on a user interface. </p>\n"
    - id: description
      type: System.String
      description: "\n<p>The description of the switch. </p>\n"
  seealso:
  - linkId: System.Diagnostics.TraceSwitch
    commentId: T:System.Diagnostics.TraceSwitch
  - linkId: System.Diagnostics.TraceLevel
    commentId: T:System.Diagnostics.TraceLevel
  - linkId: System.Diagnostics.Switch
    commentId: T:System.Diagnostics.Switch
  - linkId: System.Diagnostics.Debug
    commentId: T:System.Diagnostics.Debug
  - linkId: System.Diagnostics.Trace
    commentId: T:System.Diagnostics.Trace
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: System.Diagnostics.TraceSwitch.#ctor(System.String,System.String,System.String)
  commentId: M:System.Diagnostics.TraceSwitch.#ctor(System.String,System.String,System.String)
  id: '#ctor(System.String,System.String,System.String)'
  parent: System.Diagnostics.TraceSwitch
  langs:
  - csharp
  - vb
  name: TraceSwitch(String, String, String)
  nameWithType: TraceSwitch.TraceSwitch(String, String, String)
  fullName: System.Diagnostics.TraceSwitch.TraceSwitch(System.String, System.String, System.String)
  type: Constructor
  source:
    remote:
      path: src/System.Diagnostics.TraceSource/src/System/Diagnostics/TraceSwitch.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: .ctor
    path: src/System.Diagnostics.TraceSource/src/System/Diagnostics/TraceSwitch.cs
    startLine: 22
  assemblies:
  - System.Diagnostics.TraceSource
  namespace: System.Diagnostics
  summary: "\n<p>Initializes a new instance of the <xref href=\"System.Diagnostics.TraceSwitch\" data-throw-if-not-resolved=\"false\"></xref> class, using the specified display name, description, and default value for the switch. </p>\n"
  syntax:
    content: public TraceSwitch(string displayName, string description, string defaultSwitchValue)
    content.vb: Public Sub New(displayName As String, description As String, defaultSwitchValue As String)
    parameters:
    - id: displayName
      type: System.String
      description: "\n<p>The name to display on a user interface. </p>\n"
    - id: description
      type: System.String
      description: "\n<p>The description of the switch. </p>\n"
    - id: defaultSwitchValue
      type: System.String
      description: "\n<p>The default value of the switch.</p>\n"
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: System.Diagnostics.TraceSwitch.Level
  commentId: P:System.Diagnostics.TraceSwitch.Level
  id: Level
  parent: System.Diagnostics.TraceSwitch
  langs:
  - csharp
  - vb
  name: Level
  nameWithType: TraceSwitch.Level
  fullName: System.Diagnostics.TraceSwitch.Level
  type: Property
  source:
    remote:
      path: src/System.Diagnostics.TraceSource/src/System/Diagnostics/TraceSwitch.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: Level
    path: src/System.Diagnostics.TraceSource/src/System/Diagnostics/TraceSwitch.cs
    startLine: 30
  assemblies:
  - System.Diagnostics.TraceSource
  namespace: System.Diagnostics
  summary: "\n<p>Gets or sets the trace level that determines the messages the switch allows.</p>\n"
  syntax:
    content: public TraceLevel Level { get; set; }
    content.vb: Public Property Level As TraceLevel
    parameters: []
    return:
      type: System.Diagnostics.TraceLevel
      description: "\n<p>One of the <xref href=\"System.Diagnostics.TraceLevel\" data-throw-if-not-resolved=\"false\"></xref> values that that specifies the level of messages that are allowed by the switch.</p>\n"
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "\n<p>\n<xref href=\"System.Diagnostics.TraceSwitch.Level\" data-throw-if-not-resolved=\"false\"></xref> is set to a value that is not one of the <xref href=\"System.Diagnostics.TraceLevel\" data-throw-if-not-resolved=\"false\"></xref> values. </p>\n"
  seealso:
  - linkId: System.Diagnostics.TraceSwitch
    commentId: T:System.Diagnostics.TraceSwitch
  - linkId: System.Diagnostics.TraceLevel
    commentId: T:System.Diagnostics.TraceLevel
  - linkId: System.Diagnostics.Switch
    commentId: T:System.Diagnostics.Switch
  - linkId: System.Diagnostics.Debug
    commentId: T:System.Diagnostics.Debug
  - linkId: System.Diagnostics.Trace
    commentId: T:System.Diagnostics.Trace
  see:
  - linkId: System.Security.Permissions.SecurityPermission
    commentId: T:System.Security.Permissions.SecurityPermission
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: System.Diagnostics.TraceSwitch.TraceError
  commentId: P:System.Diagnostics.TraceSwitch.TraceError
  id: TraceError
  parent: System.Diagnostics.TraceSwitch
  langs:
  - csharp
  - vb
  name: TraceError
  nameWithType: TraceSwitch.TraceError
  fullName: System.Diagnostics.TraceSwitch.TraceError
  type: Property
  source:
    remote:
      path: src/System.Diagnostics.TraceSource/src/System/Diagnostics/TraceSwitch.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: TraceError
    path: src/System.Diagnostics.TraceSource/src/System/Diagnostics/TraceSwitch.cs
    startLine: 51
  assemblies:
  - System.Diagnostics.TraceSource
  namespace: System.Diagnostics
  summary: "\n<p>Gets a value indicating whether the switch allows error-handling messages.</p>\n"
  syntax:
    content: public bool TraceError { get; }
    content.vb: Public ReadOnly Property TraceError As Boolean
    parameters: []
    return:
      type: System.Boolean
      description: "\n<p>\n<strong>true</strong> if the <xref href=\"System.Diagnostics.TraceSwitch.Level\" data-throw-if-not-resolved=\"false\"></xref> property is set to <xref href=\"System.Diagnostics.TraceLevel.Error\" data-throw-if-not-resolved=\"false\"></xref>, <xref href=\"System.Diagnostics.TraceLevel.Warning\" data-throw-if-not-resolved=\"false\"></xref>, <xref href=\"System.Diagnostics.TraceLevel.Info\" data-throw-if-not-resolved=\"false\"></xref>, or <xref href=\"System.Diagnostics.TraceLevel.Verbose\" data-throw-if-not-resolved=\"false\"></xref>; otherwise, <strong>false</strong>.</p>\n"
  seealso:
  - linkId: System.Diagnostics.TraceSwitch
    commentId: T:System.Diagnostics.TraceSwitch
  - linkId: System.Diagnostics.Switch
    commentId: T:System.Diagnostics.Switch
  - linkId: System.Diagnostics.TraceLevel
    commentId: T:System.Diagnostics.TraceLevel
  - linkId: System.Diagnostics.Debug
    commentId: T:System.Diagnostics.Debug
  - linkId: System.Diagnostics.Trace
    commentId: T:System.Diagnostics.Trace
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: System.Diagnostics.TraceSwitch.TraceInfo
  commentId: P:System.Diagnostics.TraceSwitch.TraceInfo
  id: TraceInfo
  parent: System.Diagnostics.TraceSwitch
  langs:
  - csharp
  - vb
  name: TraceInfo
  nameWithType: TraceSwitch.TraceInfo
  fullName: System.Diagnostics.TraceSwitch.TraceInfo
  type: Property
  source:
    remote:
      path: src/System.Diagnostics.TraceSource/src/System/Diagnostics/TraceSwitch.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: TraceInfo
    path: src/System.Diagnostics.TraceSource/src/System/Diagnostics/TraceSwitch.cs
    startLine: 77
  assemblies:
  - System.Diagnostics.TraceSource
  namespace: System.Diagnostics
  summary: "\n<p>Gets a value indicating whether the switch allows informational messages.</p>\n"
  syntax:
    content: public bool TraceInfo { get; }
    content.vb: Public ReadOnly Property TraceInfo As Boolean
    parameters: []
    return:
      type: System.Boolean
      description: "\n<p>\n<strong>true</strong> if the <xref href=\"System.Diagnostics.TraceSwitch.Level\" data-throw-if-not-resolved=\"false\"></xref> property is set to <xref href=\"System.Diagnostics.TraceLevel.Info\" data-throw-if-not-resolved=\"false\"></xref> or <xref href=\"System.Diagnostics.TraceLevel.Verbose\" data-throw-if-not-resolved=\"false\"></xref>; otherwise, <strong>false</strong>.  </p>\n"
  seealso:
  - linkId: System.Diagnostics.TraceSwitch
    commentId: T:System.Diagnostics.TraceSwitch
  - linkId: System.Diagnostics.Switch
    commentId: T:System.Diagnostics.Switch
  - linkId: System.Diagnostics.TraceLevel
    commentId: T:System.Diagnostics.TraceLevel
  - linkId: System.Diagnostics.Debug
    commentId: T:System.Diagnostics.Debug
  - linkId: System.Diagnostics.Trace
    commentId: T:System.Diagnostics.Trace
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: System.Diagnostics.TraceSwitch.TraceVerbose
  commentId: P:System.Diagnostics.TraceSwitch.TraceVerbose
  id: TraceVerbose
  parent: System.Diagnostics.TraceSwitch
  langs:
  - csharp
  - vb
  name: TraceVerbose
  nameWithType: TraceSwitch.TraceVerbose
  fullName: System.Diagnostics.TraceSwitch.TraceVerbose
  type: Property
  source:
    remote:
      path: src/System.Diagnostics.TraceSource/src/System/Diagnostics/TraceSwitch.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: TraceVerbose
    path: src/System.Diagnostics.TraceSource/src/System/Diagnostics/TraceSwitch.cs
    startLine: 90
  assemblies:
  - System.Diagnostics.TraceSource
  namespace: System.Diagnostics
  summary: "\n<p>Gets a value indicating whether the switch allows all messages.</p>\n"
  syntax:
    content: public bool TraceVerbose { get; }
    content.vb: Public ReadOnly Property TraceVerbose As Boolean
    parameters: []
    return:
      type: System.Boolean
      description: "\n<p>\n<strong>true</strong> if the <xref href=\"System.Diagnostics.TraceSwitch.Level\" data-throw-if-not-resolved=\"false\"></xref> property is set to <xref href=\"System.Diagnostics.TraceLevel.Verbose\" data-throw-if-not-resolved=\"false\"></xref>; otherwise, <strong>false</strong>.</p>\n"
  seealso:
  - linkId: System.Diagnostics.TraceSwitch
    commentId: T:System.Diagnostics.TraceSwitch
  - linkId: System.Diagnostics.Switch
    commentId: T:System.Diagnostics.Switch
  - linkId: System.Diagnostics.TraceLevel
    commentId: T:System.Diagnostics.TraceLevel
  - linkId: System.Diagnostics.Debug
    commentId: T:System.Diagnostics.Debug
  - linkId: System.Diagnostics.Trace
    commentId: T:System.Diagnostics.Trace
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: System.Diagnostics.TraceSwitch.TraceWarning
  commentId: P:System.Diagnostics.TraceSwitch.TraceWarning
  id: TraceWarning
  parent: System.Diagnostics.TraceSwitch
  langs:
  - csharp
  - vb
  name: TraceWarning
  nameWithType: TraceSwitch.TraceWarning
  fullName: System.Diagnostics.TraceSwitch.TraceWarning
  type: Property
  source:
    remote:
      path: src/System.Diagnostics.TraceSource/src/System/Diagnostics/TraceSwitch.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: TraceWarning
    path: src/System.Diagnostics.TraceSource/src/System/Diagnostics/TraceSwitch.cs
    startLine: 64
  assemblies:
  - System.Diagnostics.TraceSource
  namespace: System.Diagnostics
  summary: "\n<p>Gets a value indicating whether the switch allows warning messages.</p>\n"
  syntax:
    content: public bool TraceWarning { get; }
    content.vb: Public ReadOnly Property TraceWarning As Boolean
    parameters: []
    return:
      type: System.Boolean
      description: "\n<p>\n<strong>true</strong> if the <xref href=\"System.Diagnostics.TraceSwitch.Level\" data-throw-if-not-resolved=\"false\"></xref> property is set to <xref href=\"System.Diagnostics.TraceLevel.Warning\" data-throw-if-not-resolved=\"false\"></xref>, <xref href=\"System.Diagnostics.TraceLevel.Info\" data-throw-if-not-resolved=\"false\"></xref>, or <xref href=\"System.Diagnostics.TraceLevel.Verbose\" data-throw-if-not-resolved=\"false\"></xref>; otherwise, <strong>false</strong>.</p>\n"
  seealso:
  - linkId: System.Diagnostics.TraceSwitch
    commentId: T:System.Diagnostics.TraceSwitch
  - linkId: System.Diagnostics.Switch
    commentId: T:System.Diagnostics.Switch
  - linkId: System.Diagnostics.TraceLevel
    commentId: T:System.Diagnostics.TraceLevel
  - linkId: System.Diagnostics.Debug
    commentId: T:System.Diagnostics.Debug
  - linkId: System.Diagnostics.Trace
    commentId: T:System.Diagnostics.Trace
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: System.Diagnostics.TraceSwitch.OnSwitchSettingChanged
  commentId: M:System.Diagnostics.TraceSwitch.OnSwitchSettingChanged
  id: OnSwitchSettingChanged
  parent: System.Diagnostics.TraceSwitch
  langs:
  - csharp
  - vb
  name: OnSwitchSettingChanged()
  nameWithType: TraceSwitch.OnSwitchSettingChanged()
  fullName: System.Diagnostics.TraceSwitch.OnSwitchSettingChanged()
  type: Method
  source:
    remote:
      path: src/System.Diagnostics.TraceSource/src/System/Diagnostics/TraceSwitch.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: OnSwitchSettingChanged
    path: src/System.Diagnostics.TraceSource/src/System/Diagnostics/TraceSwitch.cs
    startLine: 103
  assemblies:
  - System.Diagnostics.TraceSource
  namespace: System.Diagnostics
  summary: "\n<p>Updates and corrects the level for this switch.</p>\n"
  syntax:
    content: protected override void OnSwitchSettingChanged()
    content.vb: Protected Overrides Sub OnSwitchSettingChanged
  overridden: System.Diagnostics.Switch.OnSwitchSettingChanged
  seealso:
  - linkId: System.Diagnostics.TraceSwitch
    commentId: T:System.Diagnostics.TraceSwitch
  - linkId: System.Diagnostics.Switch
    commentId: T:System.Diagnostics.Switch
  - linkId: System.Diagnostics.Debug
    commentId: T:System.Diagnostics.Debug
  - linkId: System.Diagnostics.Trace
    commentId: T:System.Diagnostics.Trace
  modifiers.csharp:
  - protected
  - override
  modifiers.vb:
  - Protected
  - Overrides
- uid: System.Diagnostics.TraceSwitch.OnValueChanged
  commentId: M:System.Diagnostics.TraceSwitch.OnValueChanged
  id: OnValueChanged
  parent: System.Diagnostics.TraceSwitch
  langs:
  - csharp
  - vb
  name: OnValueChanged()
  nameWithType: TraceSwitch.OnValueChanged()
  fullName: System.Diagnostics.TraceSwitch.OnValueChanged()
  type: Method
  source:
    remote:
      path: src/System.Diagnostics.TraceSource/src/System/Diagnostics/TraceSwitch.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: OnValueChanged
    path: src/System.Diagnostics.TraceSource/src/System/Diagnostics/TraceSwitch.cs
    startLine: 118
  assemblies:
  - System.Diagnostics.TraceSource
  namespace: System.Diagnostics
  summary: "\n<p>Sets the <xref href=\"System.Diagnostics.Switch.SwitchSetting\" data-throw-if-not-resolved=\"false\"></xref> property to the integer equivalent of the <xref href=\"System.Diagnostics.Switch.Value\" data-throw-if-not-resolved=\"false\"></xref> property.</p>\n"
  syntax:
    content: protected override void OnValueChanged()
    content.vb: Protected Overrides Sub OnValueChanged
  overridden: System.Diagnostics.Switch.OnValueChanged
  modifiers.csharp:
  - protected
  - override
  modifiers.vb:
  - Protected
  - Overrides
references:
- uid: System.Diagnostics
  commentId: N:System.Diagnostics
  isExternal: false
  name: System.Diagnostics
  nameWithType: System.Diagnostics
  fullName: System.Diagnostics
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: false
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Diagnostics.Switch
  commentId: T:System.Diagnostics.Switch
  parent: System.Diagnostics
  isExternal: false
  name: Switch
  nameWithType: Switch
  fullName: System.Diagnostics.Switch
- uid: System.Diagnostics.Switch.Description
  commentId: P:System.Diagnostics.Switch.Description
  parent: System.Diagnostics.Switch
  isExternal: false
  name: Description
  nameWithType: Switch.Description
  fullName: System.Diagnostics.Switch.Description
- uid: System.Diagnostics.Switch.DisplayName
  commentId: P:System.Diagnostics.Switch.DisplayName
  parent: System.Diagnostics.Switch
  isExternal: false
  name: DisplayName
  nameWithType: Switch.DisplayName
  fullName: System.Diagnostics.Switch.DisplayName
- uid: System.Diagnostics.Switch.SwitchSetting
  commentId: P:System.Diagnostics.Switch.SwitchSetting
  parent: System.Diagnostics.Switch
  isExternal: false
  name: SwitchSetting
  nameWithType: Switch.SwitchSetting
  fullName: System.Diagnostics.Switch.SwitchSetting
- uid: System.Diagnostics.Switch.Value
  commentId: P:System.Diagnostics.Switch.Value
  parent: System.Diagnostics.Switch
  isExternal: false
  name: Value
  nameWithType: Switch.Value
  fullName: System.Diagnostics.Switch.Value
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: false
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Diagnostics.TraceLevel
  commentId: T:System.Diagnostics.TraceLevel
  parent: System.Diagnostics
  isExternal: false
  name: TraceLevel
  nameWithType: TraceLevel
  fullName: System.Diagnostics.TraceLevel
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: false
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Diagnostics.Switch.OnSwitchSettingChanged
  commentId: M:System.Diagnostics.Switch.OnSwitchSettingChanged
  parent: System.Diagnostics.Switch
  isExternal: false
  name: OnSwitchSettingChanged()
  nameWithType: Switch.OnSwitchSettingChanged()
  fullName: System.Diagnostics.Switch.OnSwitchSettingChanged()
  spec.csharp:
  - uid: System.Diagnostics.Switch.OnSwitchSettingChanged
    name: OnSwitchSettingChanged
    nameWithType: Switch.OnSwitchSettingChanged
    fullName: System.Diagnostics.Switch.OnSwitchSettingChanged
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Diagnostics.Switch.OnSwitchSettingChanged
    name: OnSwitchSettingChanged
    nameWithType: Switch.OnSwitchSettingChanged
    fullName: System.Diagnostics.Switch.OnSwitchSettingChanged
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Diagnostics.Switch.OnValueChanged
  commentId: M:System.Diagnostics.Switch.OnValueChanged
  parent: System.Diagnostics.Switch
  isExternal: false
  name: OnValueChanged()
  nameWithType: Switch.OnValueChanged()
  fullName: System.Diagnostics.Switch.OnValueChanged()
  spec.csharp:
  - uid: System.Diagnostics.Switch.OnValueChanged
    name: OnValueChanged
    nameWithType: Switch.OnValueChanged
    fullName: System.Diagnostics.Switch.OnValueChanged
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Diagnostics.Switch.OnValueChanged
    name: OnValueChanged
    nameWithType: Switch.OnValueChanged
    fullName: System.Diagnostics.Switch.OnValueChanged
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.ArgumentException
  commentId: T:System.ArgumentException
  parent: System
  isExternal: false
  name: ArgumentException
  nameWithType: ArgumentException
  fullName: System.ArgumentException
