### YamlMime:ManagedReference
items:
- uid: System.ComponentModel.CollectionChangeEventArgs
  commentId: T:System.ComponentModel.CollectionChangeEventArgs
  id: CollectionChangeEventArgs
  parent: System.ComponentModel
  children:
  - System.ComponentModel.CollectionChangeEventArgs.#ctor(System.ComponentModel.CollectionChangeAction,System.Object)
  - System.ComponentModel.CollectionChangeEventArgs.Action
  - System.ComponentModel.CollectionChangeEventArgs.Element
  langs:
  - csharp
  - vb
  name: CollectionChangeEventArgs
  nameWithType: CollectionChangeEventArgs
  fullName: System.ComponentModel.CollectionChangeEventArgs
  type: Class
  source:
    remote:
      path: src/System.ComponentModel.TypeConverter/src/System/ComponentModel/CollectionChangeEventArgs.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: CollectionChangeEventArgs
    path: src/System.ComponentModel.TypeConverter/src/System/ComponentModel/CollectionChangeEventArgs.cs
    startLine: 9
  assemblies:
  - System.ComponentModel.TypeConverter
  namespace: System.ComponentModel
  summary: "\n<p>Provides data for the <xref href=\"System.Data.DataColumnCollection.CollectionChanged\" data-throw-if-not-resolved=\"false\"></xref> event.</p>\n"
  syntax:
    content: 'public class CollectionChangeEventArgs : EventArgs'
    content.vb: >-
      Public Class CollectionChangeEventArgs
          Inherits EventArgs
  seealso:
  - linkId: System.Data.DataColumnCollection.CollectionChanged
    commentId: E:System.Data.DataColumnCollection.CollectionChanged
  - linkId: System.ComponentModel.CollectionChangeEventHandler
    commentId: T:System.ComponentModel.CollectionChangeEventHandler
  - linkId: System.ComponentModel.CollectionChangeAction
    commentId: T:System.ComponentModel.CollectionChangeAction
  inheritance:
  - System.Object
  - System.EventArgs
  inheritedMembers:
  - System.EventArgs.Empty
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: System.ComponentModel.CollectionChangeEventArgs.#ctor(System.ComponentModel.CollectionChangeAction,System.Object)
  commentId: M:System.ComponentModel.CollectionChangeEventArgs.#ctor(System.ComponentModel.CollectionChangeAction,System.Object)
  id: '#ctor(System.ComponentModel.CollectionChangeAction,System.Object)'
  parent: System.ComponentModel.CollectionChangeEventArgs
  langs:
  - csharp
  - vb
  name: CollectionChangeEventArgs(CollectionChangeAction, Object)
  nameWithType: CollectionChangeEventArgs.CollectionChangeEventArgs(CollectionChangeAction, Object)
  fullName: System.ComponentModel.CollectionChangeEventArgs.CollectionChangeEventArgs(System.ComponentModel.CollectionChangeAction, System.Object)
  type: Constructor
  source:
    remote:
      path: src/System.ComponentModel.TypeConverter/src/System/ComponentModel/CollectionChangeEventArgs.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: .ctor
    path: src/System.ComponentModel.TypeConverter/src/System/ComponentModel/CollectionChangeEventArgs.cs
    startLine: 17
  assemblies:
  - System.ComponentModel.TypeConverter
  namespace: System.ComponentModel
  summary: "\n<p>Initializes a new instance of the <xref href=\"System.ComponentModel.CollectionChangeEventArgs\" data-throw-if-not-resolved=\"false\"></xref> class.</p>\n"
  syntax:
    content: public CollectionChangeEventArgs(CollectionChangeAction action, object element)
    content.vb: Public Sub New(action As CollectionChangeAction, element As Object)
    parameters:
    - id: action
      type: System.ComponentModel.CollectionChangeAction
      description: "\n<p>One of the <xref href=\"System.ComponentModel.CollectionChangeAction\" data-throw-if-not-resolved=\"false\"></xref> values that specifies how the collection changed. </p>\n"
    - id: element
      type: System.Object
      description: "\n<p>An <xref href=\"System.Object\" data-throw-if-not-resolved=\"false\"></xref> that specifies the instance of the collection where the change occurred. </p>\n"
  seealso:
  - linkId: System.Data.DataColumnCollection.CollectionChanged
    commentId: E:System.Data.DataColumnCollection.CollectionChanged
  - linkId: System.ComponentModel.CollectionChangeAction
    commentId: T:System.ComponentModel.CollectionChangeAction
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: System.ComponentModel.CollectionChangeEventArgs.Action
  commentId: P:System.ComponentModel.CollectionChangeEventArgs.Action
  id: Action
  parent: System.ComponentModel.CollectionChangeEventArgs
  langs:
  - csharp
  - vb
  name: Action
  nameWithType: CollectionChangeEventArgs.Action
  fullName: System.ComponentModel.CollectionChangeEventArgs.Action
  type: Property
  source:
    remote:
      path: src/System.ComponentModel.TypeConverter/src/System/ComponentModel/CollectionChangeEventArgs.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: Action
    path: src/System.ComponentModel.TypeConverter/src/System/ComponentModel/CollectionChangeEventArgs.cs
    startLine: 26
  assemblies:
  - System.ComponentModel.TypeConverter
  namespace: System.ComponentModel
  summary: "\n<p>Gets an action that specifies how the collection changed.</p>\n"
  syntax:
    content: public virtual CollectionChangeAction Action { get; }
    content.vb: Public Overridable ReadOnly Property Action As CollectionChangeAction
    parameters: []
    return:
      type: System.ComponentModel.CollectionChangeAction
      description: "\n<p>One of the <xref href=\"System.ComponentModel.CollectionChangeAction\" data-throw-if-not-resolved=\"false\"></xref> values.</p>\n"
  seealso:
  - linkId: System.Data.DataColumnCollection.CollectionChanged
    commentId: E:System.Data.DataColumnCollection.CollectionChanged
  - linkId: System.ComponentModel.CollectionChangeAction
    commentId: T:System.ComponentModel.CollectionChangeAction
  modifiers.csharp:
  - public
  - virtual
  - get
  modifiers.vb:
  - Public
  - Overridable
  - ReadOnly
- uid: System.ComponentModel.CollectionChangeEventArgs.Element
  commentId: P:System.ComponentModel.CollectionChangeEventArgs.Element
  id: Element
  parent: System.ComponentModel.CollectionChangeEventArgs
  langs:
  - csharp
  - vb
  name: Element
  nameWithType: CollectionChangeEventArgs.Element
  fullName: System.ComponentModel.CollectionChangeEventArgs.Element
  type: Property
  source:
    remote:
      path: src/System.ComponentModel.TypeConverter/src/System/ComponentModel/CollectionChangeEventArgs.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: Element
    path: src/System.ComponentModel.TypeConverter/src/System/ComponentModel/CollectionChangeEventArgs.cs
    startLine: 37
  assemblies:
  - System.ComponentModel.TypeConverter
  namespace: System.ComponentModel
  summary: "\n<p>Gets the instance of the collection with the change.</p>\n"
  syntax:
    content: public virtual object Element { get; }
    content.vb: Public Overridable ReadOnly Property Element As Object
    parameters: []
    return:
      type: System.Object
      description: "\n<p>An <xref href=\"System.Object\" data-throw-if-not-resolved=\"false\"></xref> that represents the instance of the collection with the change, or <strong>null</strong> if you refresh the collection.</p>\n"
  seealso:
  - linkId: System.Data.DataColumnCollection.CollectionChanged
    commentId: E:System.Data.DataColumnCollection.CollectionChanged
  - linkId: System.ComponentModel.CollectionChangeAction
    commentId: T:System.ComponentModel.CollectionChangeAction
  modifiers.csharp:
  - public
  - virtual
  - get
  modifiers.vb:
  - Public
  - Overridable
  - ReadOnly
references:
- uid: System.ComponentModel
  commentId: N:System.ComponentModel
  isExternal: false
  name: System.ComponentModel
  nameWithType: System.ComponentModel
  fullName: System.ComponentModel
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: false
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.EventArgs
  commentId: T:System.EventArgs
  parent: System
  isExternal: false
  name: EventArgs
  nameWithType: EventArgs
  fullName: System.EventArgs
- uid: System.EventArgs.Empty
  commentId: F:System.EventArgs.Empty
  parent: System.EventArgs
  isExternal: true
  name: Empty
  nameWithType: EventArgs.Empty
  fullName: System.EventArgs.Empty
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: System.ComponentModel.CollectionChangeAction
  commentId: T:System.ComponentModel.CollectionChangeAction
  parent: System.ComponentModel
  isExternal: false
  name: CollectionChangeAction
  nameWithType: CollectionChangeAction
  fullName: System.ComponentModel.CollectionChangeAction
