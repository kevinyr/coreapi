### YamlMime:ManagedReference
items:
- uid: System.ServiceModel.FaultException
  commentId: T:System.ServiceModel.FaultException
  id: FaultException
  parent: System.ServiceModel
  children:
  - System.ServiceModel.FaultException.#ctor
  - System.ServiceModel.FaultException.#ctor(System.ServiceModel.Channels.MessageFault,System.String)
  - System.ServiceModel.FaultException.#ctor(System.ServiceModel.FaultReason,System.ServiceModel.FaultCode,System.String)
  - System.ServiceModel.FaultException.Action
  - System.ServiceModel.FaultException.Code
  - System.ServiceModel.FaultException.CreateFault(System.ServiceModel.Channels.MessageFault,System.String,System.Type[])
  - System.ServiceModel.FaultException.CreateFault(System.ServiceModel.Channels.MessageFault,System.Type[])
  - System.ServiceModel.FaultException.CreateMessageFault
  - System.ServiceModel.FaultException.Message
  - System.ServiceModel.FaultException.Reason
  langs:
  - csharp
  - vb
  name: FaultException
  nameWithType: FaultException
  fullName: System.ServiceModel.FaultException
  type: Class
  source:
    remote:
      path: src/System.Private.ServiceModel/src/System/ServiceModel/FaultException.cs
      branch: master
      repo: https://github.com/dotnet/wcf.git
    id: FaultException
    path: src/System.Private.ServiceModel/src/System/ServiceModel/FaultException.cs
    startLine: 13
  assemblies:
  - System.ServiceModel.Primitives
  namespace: System.ServiceModel
  summary: "\n<p>Represents a SOAP fault.</p>\n"
  syntax:
    content: 'public class FaultException : CommunicationException, ISerializable, _Exception'
    content.vb: >-
      Public Class FaultException
          Inherits CommunicationException
          Implements ISerializable, _Exception
  inheritance:
  - System.Object
  - System.Exception
  - System.ServiceModel.CommunicationException
  implements:
  - System.Runtime.Serialization.ISerializable
  - System.Runtime.InteropServices._Exception
  inheritedMembers:
  - System.Exception.GetBaseException
  - System.Exception.ToString
  - System.Exception.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)
  - System.Exception.GetType
  - System.Exception.Data
  - System.Exception.InnerException
  - System.Exception.TargetSite
  - System.Exception.StackTrace
  - System.Exception.HelpLink
  - System.Exception.Source
  - System.Exception.HResult
  - System.Exception.SerializeObjectState
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.MemberwiseClone
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: System.ServiceModel.FaultException.#ctor
  commentId: M:System.ServiceModel.FaultException.#ctor
  id: '#ctor'
  parent: System.ServiceModel.FaultException
  langs:
  - csharp
  - vb
  name: FaultException()
  nameWithType: FaultException.FaultException()
  fullName: System.ServiceModel.FaultException.FaultException()
  type: Constructor
  source:
    remote:
      path: src/System.Private.ServiceModel/src/System/ServiceModel/FaultException.cs
      branch: master
      repo: https://github.com/dotnet/wcf.git
    id: .ctor
    path: src/System.Private.ServiceModel/src/System/ServiceModel/FaultException.cs
    startLine: 26
  assemblies:
  - System.ServiceModel.Primitives
  namespace: System.ServiceModel
  summary: "\n<p>Initializes a new instance of the <xref href=\"System.ServiceModel.FaultException\" data-throw-if-not-resolved=\"false\"></xref> class.  </p>\n"
  syntax:
    content: public FaultException()
    content.vb: Public Sub New
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: System.ServiceModel.FaultException.#ctor(System.ServiceModel.Channels.MessageFault,System.String)
  commentId: M:System.ServiceModel.FaultException.#ctor(System.ServiceModel.Channels.MessageFault,System.String)
  id: '#ctor(System.ServiceModel.Channels.MessageFault,System.String)'
  parent: System.ServiceModel.FaultException
  langs:
  - csharp
  - vb
  name: FaultException(MessageFault, String)
  nameWithType: FaultException.FaultException(MessageFault, String)
  fullName: System.ServiceModel.FaultException.FaultException(System.ServiceModel.Channels.MessageFault, System.String)
  type: Constructor
  source:
    remote:
      path: src/System.Private.ServiceModel/src/System/ServiceModel/FaultException.cs
      branch: master
      repo: https://github.com/dotnet/wcf.git
    id: .ctor
    path: src/System.Private.ServiceModel/src/System/ServiceModel/FaultException.cs
    startLine: 104
  assemblies:
  - System.ServiceModel.Primitives
  namespace: System.ServiceModel
  summary: "\n<p>Initializes a new instance of the <xref href=\"System.ServiceModel.FaultException\" data-throw-if-not-resolved=\"false\"></xref> class using the specified message fault values and the provided action string.</p>\n"
  syntax:
    content: public FaultException(MessageFault fault, string action)
    content.vb: Public Sub New(fault As MessageFault, action As String)
    parameters:
    - id: fault
      type: System.ServiceModel.Channels.MessageFault
      description: "\n<p>The message fault that contains the default SOAP fault values to use.</p>\n"
    - id: action
      type: System.String
      description: "\n<p>The action of the SOAP fault.</p>\n"
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: System.ServiceModel.FaultException.#ctor(System.ServiceModel.FaultReason,System.ServiceModel.FaultCode,System.String)
  commentId: M:System.ServiceModel.FaultException.#ctor(System.ServiceModel.FaultReason,System.ServiceModel.FaultCode,System.String)
  id: '#ctor(System.ServiceModel.FaultReason,System.ServiceModel.FaultCode,System.String)'
  parent: System.ServiceModel.FaultException
  langs:
  - csharp
  - vb
  name: FaultException(FaultReason, FaultCode, String)
  nameWithType: FaultException.FaultException(FaultReason, FaultCode, String)
  fullName: System.ServiceModel.FaultException.FaultException(System.ServiceModel.FaultReason, System.ServiceModel.FaultCode, System.String)
  type: Constructor
  source:
    remote:
      path: src/System.Private.ServiceModel/src/System/ServiceModel/FaultException.cs
      branch: master
      repo: https://github.com/dotnet/wcf.git
    id: .ctor
    path: src/System.Private.ServiceModel/src/System/ServiceModel/FaultException.cs
    startLine: 77
  assemblies:
  - System.ServiceModel.Primitives
  namespace: System.ServiceModel
  summary: "\n<p>Initializes a new instance of the <xref href=\"System.ServiceModel.FaultException\" data-throw-if-not-resolved=\"false\"></xref> class using the specified reason, fault code, and action value.</p>\n"
  syntax:
    content: public FaultException(FaultReason reason, FaultCode code, string action)
    content.vb: Public Sub New(reason As FaultReason, code As FaultCode, action As String)
    parameters:
    - id: reason
      type: System.ServiceModel.FaultReason
      description: "\n<p>The reason for the SOAP fault.</p>\n"
    - id: code
      type: System.ServiceModel.FaultCode
      description: "\n<p>The fault code for the SOAP fault.</p>\n"
    - id: action
      type: System.String
      description: "\n<p>The action value for the SOAP fault.</p>\n"
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: System.ServiceModel.FaultException.Action
  commentId: P:System.ServiceModel.FaultException.Action
  id: Action
  parent: System.ServiceModel.FaultException
  langs:
  - csharp
  - vb
  name: Action
  nameWithType: FaultException.Action
  fullName: System.ServiceModel.FaultException.Action
  type: Property
  source:
    remote:
      path: src/System.Private.ServiceModel/src/System/ServiceModel/FaultException.cs
      branch: master
      repo: https://github.com/dotnet/wcf.git
    id: Action
    path: src/System.Private.ServiceModel/src/System/ServiceModel/FaultException.cs
    startLine: 116
  assemblies:
  - System.ServiceModel.Primitives
  namespace: System.ServiceModel
  summary: "\n<p>Gets the value of the SOAP action for the fault message.</p>\n"
  syntax:
    content: public string Action { get; }
    content.vb: Public ReadOnly Property Action As String
    parameters: []
    return:
      type: System.String
      description: "\n<p>The value of the SOAP action for the fault message.</p>\n"
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: System.ServiceModel.FaultException.Code
  commentId: P:System.ServiceModel.FaultException.Code
  id: Code
  parent: System.ServiceModel.FaultException
  langs:
  - csharp
  - vb
  name: Code
  nameWithType: FaultException.Code
  fullName: System.ServiceModel.FaultException.Code
  type: Property
  source:
    remote:
      path: src/System.Private.ServiceModel/src/System/ServiceModel/FaultException.cs
      branch: master
      repo: https://github.com/dotnet/wcf.git
    id: Code
    path: src/System.Private.ServiceModel/src/System/ServiceModel/FaultException.cs
    startLine: 121
  assemblies:
  - System.ServiceModel.Primitives
  namespace: System.ServiceModel
  summary: "\n<p>Gets the fault code for the SOAP fault.</p>\n"
  syntax:
    content: public FaultCode Code { get; }
    content.vb: Public ReadOnly Property Code As FaultCode
    parameters: []
    return:
      type: System.ServiceModel.FaultCode
      description: "\n<p>The fault code for the SOAP fault.</p>\n"
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: System.ServiceModel.FaultException.Message
  commentId: P:System.ServiceModel.FaultException.Message
  id: Message
  parent: System.ServiceModel.FaultException
  langs:
  - csharp
  - vb
  name: Message
  nameWithType: FaultException.Message
  fullName: System.ServiceModel.FaultException.Message
  type: Property
  source:
    remote:
      path: src/System.Private.ServiceModel/src/System/ServiceModel/FaultException.cs
      branch: master
      repo: https://github.com/dotnet/wcf.git
    id: Message
    path: src/System.Private.ServiceModel/src/System/ServiceModel/FaultException.cs
    startLine: 136
  assemblies:
  - System.ServiceModel.Primitives
  namespace: System.ServiceModel
  summary: "\n<p>Gets the message for the exception.</p>\n"
  syntax:
    content: public override string Message { get; }
    content.vb: Public Overrides ReadOnly Property Message As String
    parameters: []
    return:
      type: System.String
      description: "\n<p>The exception message.</p>\n"
  overridden: System.Exception.Message
  modifiers.csharp:
  - public
  - override
  - get
  modifiers.vb:
  - Public
  - Overrides
  - ReadOnly
- uid: System.ServiceModel.FaultException.Reason
  commentId: P:System.ServiceModel.FaultException.Reason
  id: Reason
  parent: System.ServiceModel.FaultException
  langs:
  - csharp
  - vb
  name: Reason
  nameWithType: FaultException.Reason
  fullName: System.ServiceModel.FaultException.Reason
  type: Property
  source:
    remote:
      path: src/System.Private.ServiceModel/src/System/ServiceModel/FaultException.cs
      branch: master
      repo: https://github.com/dotnet/wcf.git
    id: Reason
    path: src/System.Private.ServiceModel/src/System/ServiceModel/FaultException.cs
    startLine: 141
  assemblies:
  - System.ServiceModel.Primitives
  namespace: System.ServiceModel
  summary: "\n<p>Gets the <xref href=\"System.ServiceModel.FaultReason\" data-throw-if-not-resolved=\"false\"></xref> for the SOAP fault.</p>\n"
  syntax:
    content: public FaultReason Reason { get; }
    content.vb: Public ReadOnly Property Reason As FaultReason
    parameters: []
    return:
      type: System.ServiceModel.FaultReason
      description: "\n<p>The reason for the SOAP fault.</p>\n"
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: System.ServiceModel.FaultException.CreateFault(System.ServiceModel.Channels.MessageFault,System.String,System.Type[])
  commentId: M:System.ServiceModel.FaultException.CreateFault(System.ServiceModel.Channels.MessageFault,System.String,System.Type[])
  id: CreateFault(System.ServiceModel.Channels.MessageFault,System.String,System.Type[])
  parent: System.ServiceModel.FaultException
  langs:
  - csharp
  - vb
  name: CreateFault(MessageFault, String, Type[])
  nameWithType: FaultException.CreateFault(MessageFault, String, Type[])
  fullName: System.ServiceModel.FaultException.CreateFault(System.ServiceModel.Channels.MessageFault, System.String, System.Type[])
  type: Method
  source:
    remote:
      path: src/System.Private.ServiceModel/src/System/ServiceModel/FaultException.cs
      branch: master
      repo: https://github.com/dotnet/wcf.git
    id: CreateFault
    path: src/System.Private.ServiceModel/src/System/ServiceModel/FaultException.cs
    startLine: 161
  assemblies:
  - System.ServiceModel.Primitives
  namespace: System.ServiceModel
  summary: "\n<p>Returns a <xref href=\"System.ServiceModel.FaultException\" data-throw-if-not-resolved=\"false\"></xref> object from the specified message fault, action and an array of detail types.</p>\n"
  syntax:
    content: public static FaultException CreateFault(MessageFault messageFault, string action, params Type[] faultDetailTypes)
    content.vb: Public Shared Function CreateFault(messageFault As MessageFault, action As String, ParamArray faultDetailTypes As Type()) As FaultException
    parameters:
    - id: messageFault
      type: System.ServiceModel.Channels.MessageFault
      description: "\n<p>The message fault that contains default SOAP fault information.</p>\n"
    - id: action
      type: System.String
      description: "\n<p>The fault action value.</p>\n"
    - id: faultDetailTypes
      type: System.Type[]
      description: "\n<p>An array of types that contains fault details.</p>\n"
    return:
      type: System.ServiceModel.FaultException
      description: "\n<p>A <xref href=\"System.ServiceModel.FaultException\" data-throw-if-not-resolved=\"false\"></xref> object that you can throw to indicate that a SOAP fault message was received.</p>\n"
  nameWithType.vb: FaultException.CreateFault(MessageFault, String, Type())
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: System.ServiceModel.FaultException.CreateFault(System.ServiceModel.Channels.MessageFault, System.String, System.Type())
  name.vb: CreateFault(MessageFault, String, Type())
- uid: System.ServiceModel.FaultException.CreateFault(System.ServiceModel.Channels.MessageFault,System.Type[])
  commentId: M:System.ServiceModel.FaultException.CreateFault(System.ServiceModel.Channels.MessageFault,System.Type[])
  id: CreateFault(System.ServiceModel.Channels.MessageFault,System.Type[])
  parent: System.ServiceModel.FaultException
  langs:
  - csharp
  - vb
  name: CreateFault(MessageFault, Type[])
  nameWithType: FaultException.CreateFault(MessageFault, Type[])
  fullName: System.ServiceModel.FaultException.CreateFault(System.ServiceModel.Channels.MessageFault, System.Type[])
  type: Method
  source:
    remote:
      path: src/System.Private.ServiceModel/src/System/ServiceModel/FaultException.cs
      branch: master
      repo: https://github.com/dotnet/wcf.git
    id: CreateFault
    path: src/System.Private.ServiceModel/src/System/ServiceModel/FaultException.cs
    startLine: 156
  assemblies:
  - System.ServiceModel.Primitives
  namespace: System.ServiceModel
  summary: "\n<p>Returns a <xref href=\"System.ServiceModel.FaultException\" data-throw-if-not-resolved=\"false\"></xref> object from the specified message fault and an array of detail types.</p>\n"
  syntax:
    content: public static FaultException CreateFault(MessageFault messageFault, params Type[] faultDetailTypes)
    content.vb: Public Shared Function CreateFault(messageFault As MessageFault, ParamArray faultDetailTypes As Type()) As FaultException
    parameters:
    - id: messageFault
      type: System.ServiceModel.Channels.MessageFault
      description: "\n<p>The message fault that contains default SOAP fault information.</p>\n"
    - id: faultDetailTypes
      type: System.Type[]
      description: "\n<p>An array of types that contains fault details.</p>\n"
    return:
      type: System.ServiceModel.FaultException
      description: "\n<p>A <xref href=\"System.ServiceModel.FaultException\" data-throw-if-not-resolved=\"false\"></xref> object that you can throw to indicate that a SOAP fault message was received.</p>\n"
  nameWithType.vb: FaultException.CreateFault(MessageFault, Type())
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: System.ServiceModel.FaultException.CreateFault(System.ServiceModel.Channels.MessageFault, System.Type())
  name.vb: CreateFault(MessageFault, Type())
- uid: System.ServiceModel.FaultException.CreateMessageFault
  commentId: M:System.ServiceModel.FaultException.CreateMessageFault
  id: CreateMessageFault
  parent: System.ServiceModel.FaultException
  langs:
  - csharp
  - vb
  name: CreateMessageFault()
  nameWithType: FaultException.CreateMessageFault()
  fullName: System.ServiceModel.FaultException.CreateMessageFault()
  type: Method
  source:
    remote:
      path: src/System.Private.ServiceModel/src/System/ServiceModel/FaultException.cs
      branch: master
      repo: https://github.com/dotnet/wcf.git
    id: CreateMessageFault
    path: src/System.Private.ServiceModel/src/System/ServiceModel/FaultException.cs
    startLine: 176
  assemblies:
  - System.ServiceModel.Primitives
  namespace: System.ServiceModel
  summary: "\n<p>Returns a <xref href=\"System.ServiceModel.Channels.MessageFault\" data-throw-if-not-resolved=\"false\"></xref> object.</p>\n"
  syntax:
    content: public virtual MessageFault CreateMessageFault()
    content.vb: Public Overridable Function CreateMessageFault As MessageFault
    return:
      type: System.ServiceModel.Channels.MessageFault
      description: "\n<p>The in-memory representation of a SOAP fault that can be passed to <xref href=\"System.ServiceModel.Channels.Message.CreateMessage\" data-throw-if-not-resolved=\"false\"></xref> to create a message that contains a fault. For <xref href=\"System.ServiceModel.FaultException\" data-throw-if-not-resolved=\"false\"></xref> objects that result from fault messages, this <xref href=\"System.ServiceModel.Channels.MessageFault\" data-throw-if-not-resolved=\"false\"></xref> object is the fault that arrives.</p>\n"
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
references:
- uid: System.ServiceModel
  commentId: N:System.ServiceModel
  isExternal: false
  name: System.ServiceModel
  nameWithType: System.ServiceModel
  fullName: System.ServiceModel
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: false
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Exception
  commentId: T:System.Exception
  parent: System
  isExternal: false
  name: Exception
  nameWithType: Exception
  fullName: System.Exception
- uid: System.ServiceModel.CommunicationException
  commentId: T:System.ServiceModel.CommunicationException
  parent: System.ServiceModel
  isExternal: false
  name: CommunicationException
  nameWithType: CommunicationException
  fullName: System.ServiceModel.CommunicationException
- uid: System.Runtime.Serialization.ISerializable
  commentId: T:System.Runtime.Serialization.ISerializable
  parent: System.Runtime.Serialization
  isExternal: false
  name: ISerializable
  nameWithType: ISerializable
  fullName: System.Runtime.Serialization.ISerializable
- uid: System.Runtime.InteropServices._Exception
  commentId: T:System.Runtime.InteropServices._Exception
  parent: System.Runtime.InteropServices
  isExternal: true
  name: _Exception
  nameWithType: _Exception
  fullName: System.Runtime.InteropServices._Exception
- uid: System.Exception.GetBaseException
  commentId: M:System.Exception.GetBaseException
  parent: System.Exception
  isExternal: false
  name: GetBaseException()
  nameWithType: Exception.GetBaseException()
  fullName: System.Exception.GetBaseException()
  spec.csharp:
  - uid: System.Exception.GetBaseException
    name: GetBaseException
    nameWithType: Exception.GetBaseException
    fullName: System.Exception.GetBaseException
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Exception.GetBaseException
    name: GetBaseException
    nameWithType: Exception.GetBaseException
    fullName: System.Exception.GetBaseException
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Exception.ToString
  commentId: M:System.Exception.ToString
  parent: System.Exception
  isExternal: false
  name: ToString()
  nameWithType: Exception.ToString()
  fullName: System.Exception.ToString()
  spec.csharp:
  - uid: System.Exception.ToString
    name: ToString
    nameWithType: Exception.ToString
    fullName: System.Exception.ToString
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Exception.ToString
    name: ToString
    nameWithType: Exception.ToString
    fullName: System.Exception.ToString
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Exception.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)
  commentId: M:System.Exception.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)
  parent: System.Exception
  isExternal: true
  name: GetObjectData(SerializationInfo, StreamingContext)
  nameWithType: Exception.GetObjectData(SerializationInfo, StreamingContext)
  fullName: System.Exception.GetObjectData(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext)
  spec.csharp:
  - uid: System.Exception.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)
    name: GetObjectData
    nameWithType: Exception.GetObjectData
    fullName: System.Exception.GetObjectData
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Runtime.Serialization.SerializationInfo
    name: SerializationInfo
    nameWithType: SerializationInfo
    fullName: System.Runtime.Serialization.SerializationInfo
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Runtime.Serialization.StreamingContext
    name: StreamingContext
    nameWithType: StreamingContext
    fullName: System.Runtime.Serialization.StreamingContext
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Exception.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)
    name: GetObjectData
    nameWithType: Exception.GetObjectData
    fullName: System.Exception.GetObjectData
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Runtime.Serialization.SerializationInfo
    name: SerializationInfo
    nameWithType: SerializationInfo
    fullName: System.Runtime.Serialization.SerializationInfo
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Runtime.Serialization.StreamingContext
    name: StreamingContext
    nameWithType: StreamingContext
    fullName: System.Runtime.Serialization.StreamingContext
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Exception.GetType
  commentId: M:System.Exception.GetType
  parent: System.Exception
  isExternal: true
  name: GetType()
  nameWithType: Exception.GetType()
  fullName: System.Exception.GetType()
  spec.csharp:
  - uid: System.Exception.GetType
    name: GetType
    nameWithType: Exception.GetType
    fullName: System.Exception.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Exception.GetType
    name: GetType
    nameWithType: Exception.GetType
    fullName: System.Exception.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Exception.Data
  commentId: P:System.Exception.Data
  parent: System.Exception
  isExternal: false
  name: Data
  nameWithType: Exception.Data
  fullName: System.Exception.Data
- uid: System.Exception.InnerException
  commentId: P:System.Exception.InnerException
  parent: System.Exception
  isExternal: false
  name: InnerException
  nameWithType: Exception.InnerException
  fullName: System.Exception.InnerException
- uid: System.Exception.TargetSite
  commentId: P:System.Exception.TargetSite
  parent: System.Exception
  isExternal: true
  name: TargetSite
  nameWithType: Exception.TargetSite
  fullName: System.Exception.TargetSite
- uid: System.Exception.StackTrace
  commentId: P:System.Exception.StackTrace
  parent: System.Exception
  isExternal: false
  name: StackTrace
  nameWithType: Exception.StackTrace
  fullName: System.Exception.StackTrace
- uid: System.Exception.HelpLink
  commentId: P:System.Exception.HelpLink
  parent: System.Exception
  isExternal: false
  name: HelpLink
  nameWithType: Exception.HelpLink
  fullName: System.Exception.HelpLink
- uid: System.Exception.Source
  commentId: P:System.Exception.Source
  parent: System.Exception
  isExternal: false
  name: Source
  nameWithType: Exception.Source
  fullName: System.Exception.Source
- uid: System.Exception.HResult
  commentId: P:System.Exception.HResult
  parent: System.Exception
  isExternal: false
  name: HResult
  nameWithType: Exception.HResult
  fullName: System.Exception.HResult
- uid: System.Exception.SerializeObjectState
  commentId: E:System.Exception.SerializeObjectState
  parent: System.Exception
  isExternal: true
  name: SerializeObjectState
  nameWithType: Exception.SerializeObjectState
  fullName: System.Exception.SerializeObjectState
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: System.Runtime.Serialization
  commentId: N:System.Runtime.Serialization
  isExternal: false
  name: System.Runtime.Serialization
  nameWithType: System.Runtime.Serialization
  fullName: System.Runtime.Serialization
- uid: System.Runtime.InteropServices
  commentId: N:System.Runtime.InteropServices
  isExternal: false
  name: System.Runtime.InteropServices
  nameWithType: System.Runtime.InteropServices
  fullName: System.Runtime.InteropServices
- uid: System.ServiceModel.Channels.MessageFault
  commentId: T:System.ServiceModel.Channels.MessageFault
  parent: System.ServiceModel.Channels
  isExternal: false
  name: MessageFault
  nameWithType: MessageFault
  fullName: System.ServiceModel.Channels.MessageFault
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: false
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.ServiceModel.Channels
  commentId: N:System.ServiceModel.Channels
  isExternal: false
  name: System.ServiceModel.Channels
  nameWithType: System.ServiceModel.Channels
  fullName: System.ServiceModel.Channels
- uid: System.ServiceModel.FaultReason
  commentId: T:System.ServiceModel.FaultReason
  parent: System.ServiceModel
  isExternal: false
  name: FaultReason
  nameWithType: FaultReason
  fullName: System.ServiceModel.FaultReason
- uid: System.ServiceModel.FaultCode
  commentId: T:System.ServiceModel.FaultCode
  parent: System.ServiceModel
  isExternal: false
  name: FaultCode
  nameWithType: FaultCode
  fullName: System.ServiceModel.FaultCode
- uid: System.Exception.Message
  commentId: P:System.Exception.Message
  parent: System.Exception
  isExternal: false
  name: Message
  nameWithType: Exception.Message
  fullName: System.Exception.Message
- uid: System.Type[]
  name: Type[]
  nameWithType: Type[]
  fullName: System.Type[]
  nameWithType.vb: Type()
  fullname.vb: System.Type()
  name.vb: Type()
  spec.csharp:
  - uid: System.Type
    name: Type
    nameWithType: Type
    fullName: System.Type
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  spec.vb:
  - uid: System.Type
    name: Type
    nameWithType: Type
    fullName: System.Type
  - name: ()
    nameWithType: ()
    fullName: ()
- uid: System.ServiceModel.FaultException
  commentId: T:System.ServiceModel.FaultException
  parent: System.ServiceModel
  isExternal: false
  name: FaultException
  nameWithType: FaultException
  fullName: System.ServiceModel.FaultException
