### YamlMime:ManagedReference
items:
- uid: System.Xml.XmlDocumentXPathExtensions
  commentId: T:System.Xml.XmlDocumentXPathExtensions
  id: XmlDocumentXPathExtensions
  parent: System.Xml
  children:
  - System.Xml.XmlDocumentXPathExtensions.CreateNavigator(XmlDocument)
  - System.Xml.XmlDocumentXPathExtensions.CreateNavigator(XmlDocument,System.Xml.XmlNode)
  - System.Xml.XmlDocumentXPathExtensions.CreateNavigator(XmlNode)
  - System.Xml.XmlDocumentXPathExtensions.SelectNodes(XmlNode,System.String)
  - System.Xml.XmlDocumentXPathExtensions.SelectNodes(XmlNode,System.String,System.Xml.XmlNamespaceManager)
  - System.Xml.XmlDocumentXPathExtensions.SelectSingleNode(XmlNode,System.String)
  - System.Xml.XmlDocumentXPathExtensions.SelectSingleNode(XmlNode,System.String,System.Xml.XmlNamespaceManager)
  - System.Xml.XmlDocumentXPathExtensions.ToXPathNavigable(XmlNode)
  langs:
  - csharp
  - vb
  name: XmlDocumentXPathExtensions
  nameWithType: XmlDocumentXPathExtensions
  fullName: System.Xml.XmlDocumentXPathExtensions
  type: Class
  source:
    remote:
      path: src/System.Xml.XPath.XmlDocument/ref/System.Xml.XPath.XmlDocument.Manual.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: XmlDocumentXPathExtensions
    path: src/System.Xml.XPath.XmlDocument/ref/System.Xml.XPath.XmlDocument.Manual.cs
    startLine: 11
  assemblies:
  - System.Xml.XPath.XmlDocument
  namespace: System.Xml
  syntax:
    content: public static class XmlDocumentXPathExtensions
    content.vb: Public Module XmlDocumentXPathExtensions
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  modifiers.csharp:
  - public
  - static
  - class
  modifiers.vb:
  - Public
  - Module
- uid: System.Xml.XmlDocumentXPathExtensions.SelectNodes(XmlNode,System.String)
  commentId: M:System.Xml.XmlDocumentXPathExtensions.SelectNodes(XmlNode,System.String)
  id: SelectNodes(XmlNode,System.String)
  isExtensionMethod: true
  parent: System.Xml.XmlDocumentXPathExtensions
  langs:
  - csharp
  - vb
  name: SelectNodes(XmlNode, String)
  nameWithType: XmlDocumentXPathExtensions.SelectNodes(XmlNode, String)
  fullName: System.Xml.XmlDocumentXPathExtensions.SelectNodes(XmlNode, System.String)
  type: Method
  source:
    remote:
      path: src/System.Xml.XPath.XmlDocument/ref/System.Xml.XPath.XmlDocument.Manual.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: SelectNodes
    path: src/System.Xml.XPath.XmlDocument/ref/System.Xml.XPath.XmlDocument.Manual.cs
    startLine: 13
  assemblies:
  - System.Xml.XPath.XmlDocument
  namespace: System.Xml
  syntax:
    content: public static XmlNodeList SelectNodes(this XmlNode node, string xpath)
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function SelectNodes(node As XmlNode, xpath As String) As XmlNodeList
    parameters:
    - id: node
      type: XmlNode
    - id: xpath
      type: System.String
    return:
      type: System.Xml.XmlNodeList
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: System.Xml.XmlDocumentXPathExtensions.SelectNodes(XmlNode,System.String,System.Xml.XmlNamespaceManager)
  commentId: M:System.Xml.XmlDocumentXPathExtensions.SelectNodes(XmlNode,System.String,System.Xml.XmlNamespaceManager)
  id: SelectNodes(XmlNode,System.String,System.Xml.XmlNamespaceManager)
  isExtensionMethod: true
  parent: System.Xml.XmlDocumentXPathExtensions
  langs:
  - csharp
  - vb
  name: SelectNodes(XmlNode, String, XmlNamespaceManager)
  nameWithType: XmlDocumentXPathExtensions.SelectNodes(XmlNode, String, XmlNamespaceManager)
  fullName: System.Xml.XmlDocumentXPathExtensions.SelectNodes(XmlNode, System.String, System.Xml.XmlNamespaceManager)
  type: Method
  source:
    remote:
      path: src/System.Xml.XPath.XmlDocument/ref/System.Xml.XPath.XmlDocument.Manual.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: SelectNodes
    path: src/System.Xml.XPath.XmlDocument/ref/System.Xml.XPath.XmlDocument.Manual.cs
    startLine: 14
  assemblies:
  - System.Xml.XPath.XmlDocument
  namespace: System.Xml
  syntax:
    content: public static XmlNodeList SelectNodes(this XmlNode node, string xpath, XmlNamespaceManager nsmgr)
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function SelectNodes(node As XmlNode, xpath As String, nsmgr As XmlNamespaceManager) As XmlNodeList
    parameters:
    - id: node
      type: XmlNode
    - id: xpath
      type: System.String
    - id: nsmgr
      type: System.Xml.XmlNamespaceManager
    return:
      type: System.Xml.XmlNodeList
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: System.Xml.XmlDocumentXPathExtensions.SelectSingleNode(XmlNode,System.String)
  commentId: M:System.Xml.XmlDocumentXPathExtensions.SelectSingleNode(XmlNode,System.String)
  id: SelectSingleNode(XmlNode,System.String)
  isExtensionMethod: true
  parent: System.Xml.XmlDocumentXPathExtensions
  langs:
  - csharp
  - vb
  name: SelectSingleNode(XmlNode, String)
  nameWithType: XmlDocumentXPathExtensions.SelectSingleNode(XmlNode, String)
  fullName: System.Xml.XmlDocumentXPathExtensions.SelectSingleNode(XmlNode, System.String)
  type: Method
  source:
    remote:
      path: src/System.Xml.XPath.XmlDocument/ref/System.Xml.XPath.XmlDocument.Manual.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: SelectSingleNode
    path: src/System.Xml.XPath.XmlDocument/ref/System.Xml.XPath.XmlDocument.Manual.cs
    startLine: 15
  assemblies:
  - System.Xml.XPath.XmlDocument
  namespace: System.Xml
  syntax:
    content: public static XmlNode SelectSingleNode(this XmlNode node, string xpath)
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function SelectSingleNode(node As XmlNode, xpath As String) As XmlNode
    parameters:
    - id: node
      type: XmlNode
    - id: xpath
      type: System.String
    return:
      type: System.Xml.XmlNode
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: System.Xml.XmlDocumentXPathExtensions.SelectSingleNode(XmlNode,System.String,System.Xml.XmlNamespaceManager)
  commentId: M:System.Xml.XmlDocumentXPathExtensions.SelectSingleNode(XmlNode,System.String,System.Xml.XmlNamespaceManager)
  id: SelectSingleNode(XmlNode,System.String,System.Xml.XmlNamespaceManager)
  isExtensionMethod: true
  parent: System.Xml.XmlDocumentXPathExtensions
  langs:
  - csharp
  - vb
  name: SelectSingleNode(XmlNode, String, XmlNamespaceManager)
  nameWithType: XmlDocumentXPathExtensions.SelectSingleNode(XmlNode, String, XmlNamespaceManager)
  fullName: System.Xml.XmlDocumentXPathExtensions.SelectSingleNode(XmlNode, System.String, System.Xml.XmlNamespaceManager)
  type: Method
  source:
    remote:
      path: src/System.Xml.XPath.XmlDocument/ref/System.Xml.XPath.XmlDocument.Manual.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: SelectSingleNode
    path: src/System.Xml.XPath.XmlDocument/ref/System.Xml.XPath.XmlDocument.Manual.cs
    startLine: 16
  assemblies:
  - System.Xml.XPath.XmlDocument
  namespace: System.Xml
  syntax:
    content: public static XmlNode SelectSingleNode(this XmlNode node, string xpath, XmlNamespaceManager nsmgr)
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function SelectSingleNode(node As XmlNode, xpath As String, nsmgr As XmlNamespaceManager) As XmlNode
    parameters:
    - id: node
      type: XmlNode
    - id: xpath
      type: System.String
    - id: nsmgr
      type: System.Xml.XmlNamespaceManager
    return:
      type: System.Xml.XmlNode
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: System.Xml.XmlDocumentXPathExtensions.CreateNavigator(XmlNode)
  commentId: M:System.Xml.XmlDocumentXPathExtensions.CreateNavigator(XmlNode)
  id: CreateNavigator(XmlNode)
  isExtensionMethod: true
  parent: System.Xml.XmlDocumentXPathExtensions
  langs:
  - csharp
  - vb
  name: CreateNavigator(XmlNode)
  nameWithType: XmlDocumentXPathExtensions.CreateNavigator(XmlNode)
  fullName: System.Xml.XmlDocumentXPathExtensions.CreateNavigator(XmlNode)
  type: Method
  source:
    remote:
      path: src/System.Xml.XPath.XmlDocument/ref/System.Xml.XPath.XmlDocument.Manual.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: CreateNavigator
    path: src/System.Xml.XPath.XmlDocument/ref/System.Xml.XPath.XmlDocument.Manual.cs
    startLine: 17
  assemblies:
  - System.Xml.XPath.XmlDocument
  namespace: System.Xml
  syntax:
    content: public static XPath.XPathNavigator CreateNavigator(this XmlNode node)
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function CreateNavigator(node As XmlNode) As XPath.XPathNavigator
    parameters:
    - id: node
      type: XmlNode
    return:
      type: System.Xml.XPath.XPathNavigator
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: System.Xml.XmlDocumentXPathExtensions.ToXPathNavigable(XmlNode)
  commentId: M:System.Xml.XmlDocumentXPathExtensions.ToXPathNavigable(XmlNode)
  id: ToXPathNavigable(XmlNode)
  isExtensionMethod: true
  parent: System.Xml.XmlDocumentXPathExtensions
  langs:
  - csharp
  - vb
  name: ToXPathNavigable(XmlNode)
  nameWithType: XmlDocumentXPathExtensions.ToXPathNavigable(XmlNode)
  fullName: System.Xml.XmlDocumentXPathExtensions.ToXPathNavigable(XmlNode)
  type: Method
  source:
    remote:
      path: src/System.Xml.XPath.XmlDocument/ref/System.Xml.XPath.XmlDocument.Manual.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: ToXPathNavigable
    path: src/System.Xml.XPath.XmlDocument/ref/System.Xml.XPath.XmlDocument.Manual.cs
    startLine: 18
  assemblies:
  - System.Xml.XPath.XmlDocument
  namespace: System.Xml
  syntax:
    content: public static XPath.IXPathNavigable ToXPathNavigable(this XmlNode node)
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function ToXPathNavigable(node As XmlNode) As XPath.IXPathNavigable
    parameters:
    - id: node
      type: XmlNode
    return:
      type: System.Xml.XPath.IXPathNavigable
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: System.Xml.XmlDocumentXPathExtensions.CreateNavigator(XmlDocument)
  commentId: M:System.Xml.XmlDocumentXPathExtensions.CreateNavigator(XmlDocument)
  id: CreateNavigator(XmlDocument)
  isExtensionMethod: true
  parent: System.Xml.XmlDocumentXPathExtensions
  langs:
  - csharp
  - vb
  name: CreateNavigator(XmlDocument)
  nameWithType: XmlDocumentXPathExtensions.CreateNavigator(XmlDocument)
  fullName: System.Xml.XmlDocumentXPathExtensions.CreateNavigator(XmlDocument)
  type: Method
  source:
    remote:
      path: src/System.Xml.XPath.XmlDocument/ref/System.Xml.XPath.XmlDocument.Manual.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: CreateNavigator
    path: src/System.Xml.XPath.XmlDocument/ref/System.Xml.XPath.XmlDocument.Manual.cs
    startLine: 20
  assemblies:
  - System.Xml.XPath.XmlDocument
  namespace: System.Xml
  syntax:
    content: public static XPath.XPathNavigator CreateNavigator(this XmlDocument document)
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function CreateNavigator(document As XmlDocument) As XPath.XPathNavigator
    parameters:
    - id: document
      type: XmlDocument
    return:
      type: System.Xml.XPath.XPathNavigator
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: System.Xml.XmlDocumentXPathExtensions.CreateNavigator(XmlDocument,System.Xml.XmlNode)
  commentId: M:System.Xml.XmlDocumentXPathExtensions.CreateNavigator(XmlDocument,System.Xml.XmlNode)
  id: CreateNavigator(XmlDocument,System.Xml.XmlNode)
  isExtensionMethod: true
  parent: System.Xml.XmlDocumentXPathExtensions
  langs:
  - csharp
  - vb
  name: CreateNavigator(XmlDocument, XmlNode)
  nameWithType: XmlDocumentXPathExtensions.CreateNavigator(XmlDocument, XmlNode)
  fullName: System.Xml.XmlDocumentXPathExtensions.CreateNavigator(XmlDocument, System.Xml.XmlNode)
  type: Method
  source:
    remote:
      path: src/System.Xml.XPath.XmlDocument/ref/System.Xml.XPath.XmlDocument.Manual.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: CreateNavigator
    path: src/System.Xml.XPath.XmlDocument/ref/System.Xml.XPath.XmlDocument.Manual.cs
    startLine: 21
  assemblies:
  - System.Xml.XPath.XmlDocument
  namespace: System.Xml
  syntax:
    content: public static XPath.XPathNavigator CreateNavigator(this XmlDocument document, XmlNode node)
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function CreateNavigator(document As XmlDocument, node As XmlNode) As XPath.XPathNavigator
    parameters:
    - id: document
      type: XmlDocument
    - id: node
      type: System.Xml.XmlNode
    return:
      type: System.Xml.XPath.XPathNavigator
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
references:
- uid: System.Xml
  commentId: N:System.Xml
  isExternal: false
  name: System.Xml
  nameWithType: System.Xml
  fullName: System.Xml
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: false
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: XmlNode
  isExternal: true
  name: XmlNode
  nameWithType: XmlNode
  fullName: XmlNode
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: false
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Xml.XmlNodeList
  commentId: T:System.Xml.XmlNodeList
  parent: System.Xml
  isExternal: false
  name: XmlNodeList
  nameWithType: XmlNodeList
  fullName: System.Xml.XmlNodeList
- uid: System.Xml.XmlNamespaceManager
  commentId: T:System.Xml.XmlNamespaceManager
  parent: System.Xml
  isExternal: false
  name: XmlNamespaceManager
  nameWithType: XmlNamespaceManager
  fullName: System.Xml.XmlNamespaceManager
- uid: System.Xml.XmlNode
  commentId: T:System.Xml.XmlNode
  parent: System.Xml
  isExternal: false
  name: XmlNode
  nameWithType: XmlNode
  fullName: System.Xml.XmlNode
- uid: System.Xml.XPath.XPathNavigator
  commentId: T:System.Xml.XPath.XPathNavigator
  parent: System.Xml.XPath
  isExternal: false
  name: XPathNavigator
  nameWithType: XPathNavigator
  fullName: System.Xml.XPath.XPathNavigator
- uid: System.Xml.XPath
  commentId: N:System.Xml.XPath
  isExternal: false
  name: System.Xml.XPath
  nameWithType: System.Xml.XPath
  fullName: System.Xml.XPath
- uid: System.Xml.XPath.IXPathNavigable
  commentId: T:System.Xml.XPath.IXPathNavigable
  parent: System.Xml.XPath
  isExternal: false
  name: IXPathNavigable
  nameWithType: IXPathNavigable
  fullName: System.Xml.XPath.IXPathNavigable
- uid: XmlDocument
  isExternal: true
  name: XmlDocument
  nameWithType: XmlDocument
  fullName: XmlDocument
