items:
- uid: System.Net.Sockets.LingerOption
  commentId: T:System.Net.Sockets.LingerOption
  id: LingerOption
  parent: System.Net.Sockets
  children:
  - System.Net.Sockets.LingerOption.#ctor(System.Boolean,System.Int32)
  - System.Net.Sockets.LingerOption.Enabled
  - System.Net.Sockets.LingerOption.LingerTime
  langs:
  - csharp
  - vb
  name: LingerOption
  fullName: System.Net.Sockets.LingerOption
  type: Class
  source:
    remote:
      path: src/System.Net.Sockets/src/System/Net/Sockets/LingerOption.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: LingerOption
    path: src/System.Net.Sockets/src/System/Net/Sockets/LingerOption.cs
    startLine: 10
  assemblies:
  - System.Net.Sockets
  namespace: System.Net.Sockets
  summary: "\n<p>Specifies whether a <xref href=\"System.Net.Sockets.Socket\" data-throw-if-not-resolved=\"false\"></xref> will remain connected after a call to the <xref href=\"System.Net.Sockets.Socket.Close\" data-throw-if-not-resolved=\"false\"></xref> or <xref href=\"System.Net.Sockets.TcpClient.Close\" data-throw-if-not-resolved=\"false\"></xref> methods and the length of time it will remain connected, if data remains to be sent.</p>\n"
  syntax:
    content: public class LingerOption
    content.vb: Public Class LingerOption
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
  nameWithType: LingerOption
- uid: System.Net.Sockets.LingerOption.#ctor(System.Boolean,System.Int32)
  commentId: M:System.Net.Sockets.LingerOption.#ctor(System.Boolean,System.Int32)
  id: '#ctor(System.Boolean,System.Int32)'
  parent: System.Net.Sockets.LingerOption
  langs:
  - csharp
  - vb
  name: LingerOption(Boolean, Int32)
  fullName: System.Net.Sockets.LingerOption.LingerOption(System.Boolean, System.Int32)
  type: Constructor
  source:
    remote:
      path: src/System.Net.Sockets/src/System/Net/Sockets/LingerOption.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: .ctor
    path: src/System.Net.Sockets/src/System/Net/Sockets/LingerOption.cs
    startLine: 15
  assemblies:
  - System.Net.Sockets
  namespace: System.Net.Sockets
  summary: "\n<p>Initializes a new instance of the <xref href=\"System.Net.Sockets.LingerOption\" data-throw-if-not-resolved=\"false\"></xref> class.</p>\n"
  syntax:
    content: public LingerOption(bool enable, int seconds)
    content.vb: Public Sub New(enable As Boolean, seconds As Integer)
    parameters:
    - id: enable
      type: System.Boolean
      description: "\n<p>\n<strong>true</strong> to remain connected after the <xref href=\"System.Net.Sockets.Socket.Close\" data-throw-if-not-resolved=\"false\"></xref> method is called; otherwise, <strong>false</strong>. </p>\n"
    - id: seconds
      type: System.Int32
      description: "\n<p>The number of seconds to remain connected after the <xref href=\"System.Net.Sockets.Socket.Close\" data-throw-if-not-resolved=\"false\"></xref> method is called. </p>\n"
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  nameWithType: LingerOption.LingerOption(Boolean, Int32)
- uid: System.Net.Sockets.LingerOption.Enabled
  commentId: P:System.Net.Sockets.LingerOption.Enabled
  id: Enabled
  parent: System.Net.Sockets.LingerOption
  langs:
  - csharp
  - vb
  name: Enabled
  fullName: System.Net.Sockets.LingerOption.Enabled
  type: Property
  source:
    remote:
      path: src/System.Net.Sockets/src/System/Net/Sockets/LingerOption.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: Enabled
    path: src/System.Net.Sockets/src/System/Net/Sockets/LingerOption.cs
    startLine: 22
  assemblies:
  - System.Net.Sockets
  namespace: System.Net.Sockets
  summary: "\n<p>Gets or sets a value that indicates whether to linger after the <xref href=\"System.Net.Sockets.Socket\" data-throw-if-not-resolved=\"false\"></xref> is closed.</p>\n"
  syntax:
    content: public bool Enabled { get; set; }
    content.vb: Public Property Enabled As Boolean
    parameters: []
    return:
      type: System.Boolean
      description: "\n<p>\n<strong>true</strong> if the <xref href=\"System.Net.Sockets.Socket\" data-throw-if-not-resolved=\"false\"></xref> should linger after <xref href=\"System.Net.Sockets.Socket.Close\" data-throw-if-not-resolved=\"false\"></xref> is called; otherwise, <strong>false</strong>.</p>\n"
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
  nameWithType: LingerOption.Enabled
- uid: System.Net.Sockets.LingerOption.LingerTime
  commentId: P:System.Net.Sockets.LingerOption.LingerTime
  id: LingerTime
  parent: System.Net.Sockets.LingerOption
  langs:
  - csharp
  - vb
  name: LingerTime
  fullName: System.Net.Sockets.LingerOption.LingerTime
  type: Property
  source:
    remote:
      path: src/System.Net.Sockets/src/System/Net/Sockets/LingerOption.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: LingerTime
    path: src/System.Net.Sockets/src/System/Net/Sockets/LingerOption.cs
    startLine: 35
  assemblies:
  - System.Net.Sockets
  namespace: System.Net.Sockets
  summary: "\n<p>Gets or sets the amount of time to remain connected after calling the <xref href=\"System.Net.Sockets.Socket.Close\" data-throw-if-not-resolved=\"false\"></xref> method if data remains to be sent.</p>\n"
  syntax:
    content: public int LingerTime { get; set; }
    content.vb: Public Property LingerTime As Integer
    parameters: []
    return:
      type: System.Int32
      description: "\n<p>The amount of time, in seconds, to remain connected after calling <xref href=\"System.Net.Sockets.Socket.Close\" data-throw-if-not-resolved=\"false\"></xref>.</p>\n"
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
  nameWithType: LingerOption.LingerTime
references:
- uid: System.Net.Sockets
  isExternal: false
  name: System.Net.Sockets
  fullName: System.Net.Sockets
  nameWithType: System.Net.Sockets
  commentId: N:System.Net.Sockets
- uid: System.Object
  parent: System
  isExternal: false
  name: Object
  fullName: System.Object
  nameWithType: Object
  commentId: T:System.Object
- uid: System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  nameWithType: Object.ToString()
  commentId: M:System.Object.ToString
- uid: System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
  nameWithType: Object.Equals(Object)
  commentId: M:System.Object.Equals(System.Object)
- uid: System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
  nameWithType: Object.Equals(Object, Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
  nameWithType: Object.ReferenceEquals(Object, Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
- uid: System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  nameWithType: Object.GetHashCode()
  commentId: M:System.Object.GetHashCode
- uid: System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  nameWithType: Object.GetType()
  commentId: M:System.Object.GetType
- uid: System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  nameWithType: Object.MemberwiseClone()
  commentId: M:System.Object.MemberwiseClone
- uid: System
  isExternal: false
  name: System
  fullName: System
  nameWithType: System
  commentId: N:System
- uid: System.Boolean
  parent: System
  isExternal: false
  name: Boolean
  fullName: System.Boolean
  nameWithType: Boolean
  commentId: T:System.Boolean
- uid: System.Int32
  parent: System
  isExternal: false
  name: Int32
  fullName: System.Int32
  nameWithType: Int32
  commentId: T:System.Int32
