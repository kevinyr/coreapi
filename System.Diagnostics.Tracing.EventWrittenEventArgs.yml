### YamlMime:ManagedReference
items:
- uid: System.Diagnostics.Tracing.EventWrittenEventArgs
  commentId: T:System.Diagnostics.Tracing.EventWrittenEventArgs
  id: EventWrittenEventArgs
  parent: System.Diagnostics.Tracing
  children:
  - System.Diagnostics.Tracing.EventWrittenEventArgs.ActivityId
  - System.Diagnostics.Tracing.EventWrittenEventArgs.Channel
  - System.Diagnostics.Tracing.EventWrittenEventArgs.EventId
  - System.Diagnostics.Tracing.EventWrittenEventArgs.EventName
  - System.Diagnostics.Tracing.EventWrittenEventArgs.EventSource
  - System.Diagnostics.Tracing.EventWrittenEventArgs.Keywords
  - System.Diagnostics.Tracing.EventWrittenEventArgs.Level
  - System.Diagnostics.Tracing.EventWrittenEventArgs.Message
  - System.Diagnostics.Tracing.EventWrittenEventArgs.Opcode
  - System.Diagnostics.Tracing.EventWrittenEventArgs.Payload
  - System.Diagnostics.Tracing.EventWrittenEventArgs.PayloadNames
  - System.Diagnostics.Tracing.EventWrittenEventArgs.RelatedActivityId
  - System.Diagnostics.Tracing.EventWrittenEventArgs.Tags
  - System.Diagnostics.Tracing.EventWrittenEventArgs.Task
  - System.Diagnostics.Tracing.EventWrittenEventArgs.Version
  langs:
  - csharp
  - vb
  name: EventWrittenEventArgs
  nameWithType: EventWrittenEventArgs
  fullName: System.Diagnostics.Tracing.EventWrittenEventArgs
  type: Class
  source:
    remote:
      path: src/mscorlib/src/System/Diagnostics/Eventing/EventSource.cs
      branch: master
      repo: https://github.com/dotnet/coreclr.git
    id: EventWrittenEventArgs
    path: src/mscorlib/src/System/Diagnostics/Eventing/EventSource.cs
    startLine: 4789
  assemblies:
  - System.Diagnostics.Tracing
  namespace: System.Diagnostics.Tracing
  summary: "\n<p>Provides data for the <xref href=\"System.Diagnostics.Tracing.EventListener.OnEventWritten(System.Diagnostics.Tracing.EventWrittenEventArgs)\" data-throw-if-not-resolved=\"false\"></xref> callback.</p>\n"
  syntax:
    content: 'public class EventWrittenEventArgs : EventArgs'
    content.vb: >-
      Public Class EventWrittenEventArgs
          Inherits EventArgs
  inheritance:
  - System.Object
  - System.EventArgs
  inheritedMembers:
  - System.EventArgs.Empty
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: System.Diagnostics.Tracing.EventWrittenEventArgs.ActivityId
  commentId: P:System.Diagnostics.Tracing.EventWrittenEventArgs.ActivityId
  id: ActivityId
  parent: System.Diagnostics.Tracing.EventWrittenEventArgs
  langs:
  - csharp
  - vb
  name: ActivityId
  nameWithType: EventWrittenEventArgs.ActivityId
  fullName: System.Diagnostics.Tracing.EventWrittenEventArgs.ActivityId
  type: Property
  source:
    remote:
      path: src/mscorlib/src/System/Diagnostics/Eventing/EventSource.cs
      branch: master
      repo: https://github.com/dotnet/coreclr.git
    id: ActivityId
    path: src/mscorlib/src/System/Diagnostics/Eventing/EventSource.cs
    startLine: 4819
  assemblies:
  - System.Diagnostics.Tracing
  namespace: System.Diagnostics.Tracing
  summary: "\n<p>[Supported in the .NET Framework 4.5.1 and later versions] </p>\n<p>Gets the activity ID on the thread that the event was written to. </p>\n"
  syntax:
    content: >-
      public Guid ActivityId

      {
          [SecurityCritical]
          get;
      }
    content.vb: Public ReadOnly Property ActivityId As Guid
    parameters: []
    return:
      type: System.Guid
      description: "\n<p>The activity ID on the thread that the event was written to. </p>\n"
  seealso:
  - linkId: System.Diagnostics.Tracing.EventWrittenEventArgs.RelatedActivityId
    commentId: P:System.Diagnostics.Tracing.EventWrittenEventArgs.RelatedActivityId
  - linkId: System.Diagnostics.Tracing.EventSource.SetCurrentThreadActivityId(System.Guid)
    commentId: M:System.Diagnostics.Tracing.EventSource.SetCurrentThreadActivityId(System.Guid)
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: System.Diagnostics.Tracing.EventWrittenEventArgs.Channel
  commentId: P:System.Diagnostics.Tracing.EventWrittenEventArgs.Channel
  id: Channel
  parent: System.Diagnostics.Tracing.EventWrittenEventArgs
  langs:
  - csharp
  - vb
  name: Channel
  nameWithType: EventWrittenEventArgs.Channel
  fullName: System.Diagnostics.Tracing.EventWrittenEventArgs.Channel
  type: Property
  source:
    remote:
      path: src/mscorlib/src/System/Diagnostics/Eventing/EventSource.cs
      branch: master
      repo: https://github.com/dotnet/coreclr.git
    id: Channel
    path: src/mscorlib/src/System/Diagnostics/Eventing/EventSource.cs
    startLine: 4952
  assemblies:
  - System.Diagnostics.Tracing
  namespace: System.Diagnostics.Tracing
  summary: "\n<p>Gets the channel for the event.</p>\n"
  syntax:
    content: public EventChannel Channel { get; }
    content.vb: Public ReadOnly Property Channel As EventChannel
    parameters: []
    return:
      type: System.Diagnostics.Tracing.EventChannel
      description: "\n<p>The channel for the event.</p>\n"
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: System.Diagnostics.Tracing.EventWrittenEventArgs.EventId
  commentId: P:System.Diagnostics.Tracing.EventWrittenEventArgs.EventId
  id: EventId
  parent: System.Diagnostics.Tracing.EventWrittenEventArgs
  langs:
  - csharp
  - vb
  name: EventId
  nameWithType: EventWrittenEventArgs.EventId
  fullName: System.Diagnostics.Tracing.EventWrittenEventArgs.EventId
  type: Property
  source:
    remote:
      path: src/mscorlib/src/System/Diagnostics/Eventing/EventSource.cs
      branch: master
      repo: https://github.com/dotnet/coreclr.git
    id: EventId
    path: src/mscorlib/src/System/Diagnostics/Eventing/EventSource.cs
    startLine: 4814
  assemblies:
  - System.Diagnostics.Tracing
  namespace: System.Diagnostics.Tracing
  summary: "\n<p>Gets the event identifier.</p>\n"
  syntax:
    content: public int EventId { get; }
    content.vb: Public ReadOnly Property EventId As Integer
    parameters: []
    return:
      type: System.Int32
      description: "\n<p>The event identifier.</p>\n"
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: System.Diagnostics.Tracing.EventWrittenEventArgs.EventName
  commentId: P:System.Diagnostics.Tracing.EventWrittenEventArgs.EventName
  id: EventName
  parent: System.Diagnostics.Tracing.EventWrittenEventArgs
  langs:
  - csharp
  - vb
  name: EventName
  nameWithType: EventWrittenEventArgs.EventName
  fullName: System.Diagnostics.Tracing.EventWrittenEventArgs.EventName
  type: Property
  source:
    remote:
      path: src/mscorlib/src/System/Diagnostics/Eventing/EventSource.cs
      branch: master
      repo: https://github.com/dotnet/coreclr.git
    id: EventName
    path: src/mscorlib/src/System/Diagnostics/Eventing/EventSource.cs
    startLine: 4794
  assemblies:
  - System.Diagnostics.Tracing
  namespace: System.Diagnostics.Tracing
  summary: "\n<p>Gets the name of the event.</p>\n"
  syntax:
    content: public string EventName { get; }
    content.vb: Public ReadOnly Property EventName As String
    parameters: []
    return:
      type: System.String
      description: "\n<p>The name of the event.</p>\n"
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: System.Diagnostics.Tracing.EventWrittenEventArgs.EventSource
  commentId: P:System.Diagnostics.Tracing.EventWrittenEventArgs.EventSource
  id: EventSource
  parent: System.Diagnostics.Tracing.EventWrittenEventArgs
  langs:
  - csharp
  - vb
  name: EventSource
  nameWithType: EventWrittenEventArgs.EventSource
  fullName: System.Diagnostics.Tracing.EventWrittenEventArgs.EventSource
  type: Property
  source:
    remote:
      path: src/mscorlib/src/System/Diagnostics/Eventing/EventSource.cs
      branch: master
      repo: https://github.com/dotnet/coreclr.git
    id: EventSource
    path: src/mscorlib/src/System/Diagnostics/Eventing/EventSource.cs
    startLine: 4873
  assemblies:
  - System.Diagnostics.Tracing
  namespace: System.Diagnostics.Tracing
  summary: "\n<p>Gets the event source object.</p>\n"
  syntax:
    content: public EventSource EventSource { get; }
    content.vb: Public ReadOnly Property EventSource As EventSource
    parameters: []
    return:
      type: System.Diagnostics.Tracing.EventSource
      description: "\n<p>The event source object.</p>\n"
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: System.Diagnostics.Tracing.EventWrittenEventArgs.Keywords
  commentId: P:System.Diagnostics.Tracing.EventWrittenEventArgs.Keywords
  id: Keywords
  parent: System.Diagnostics.Tracing.EventWrittenEventArgs
  langs:
  - csharp
  - vb
  name: Keywords
  nameWithType: EventWrittenEventArgs.Keywords
  fullName: System.Diagnostics.Tracing.EventWrittenEventArgs.Keywords
  type: Property
  source:
    remote:
      path: src/mscorlib/src/System/Diagnostics/Eventing/EventSource.cs
      branch: master
      repo: https://github.com/dotnet/coreclr.git
    id: Keywords
    path: src/mscorlib/src/System/Diagnostics/Eventing/EventSource.cs
    startLine: 4878
  assemblies:
  - System.Diagnostics.Tracing
  namespace: System.Diagnostics.Tracing
  summary: "\n<p>Gets the keywords for the event.</p>\n"
  syntax:
    content: public EventKeywords Keywords { get; }
    content.vb: Public ReadOnly Property Keywords As EventKeywords
    parameters: []
    return:
      type: System.Diagnostics.Tracing.EventKeywords
      description: "\n<p>The keywords for the event.</p>\n"
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: System.Diagnostics.Tracing.EventWrittenEventArgs.Level
  commentId: P:System.Diagnostics.Tracing.EventWrittenEventArgs.Level
  id: Level
  parent: System.Diagnostics.Tracing.EventWrittenEventArgs
  langs:
  - csharp
  - vb
  name: Level
  nameWithType: EventWrittenEventArgs.Level
  fullName: System.Diagnostics.Tracing.EventWrittenEventArgs.Level
  type: Property
  source:
    remote:
      path: src/mscorlib/src/System/Diagnostics/Eventing/EventSource.cs
      branch: master
      repo: https://github.com/dotnet/coreclr.git
    id: Level
    path: src/mscorlib/src/System/Diagnostics/Eventing/EventSource.cs
    startLine: 4979
  assemblies:
  - System.Diagnostics.Tracing
  namespace: System.Diagnostics.Tracing
  summary: "\n<p>Gets the level of the event.</p>\n"
  syntax:
    content: public EventLevel Level { get; }
    content.vb: Public ReadOnly Property Level As EventLevel
    parameters: []
    return:
      type: System.Diagnostics.Tracing.EventLevel
      description: "\n<p>The level of the event.</p>\n"
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: System.Diagnostics.Tracing.EventWrittenEventArgs.Message
  commentId: P:System.Diagnostics.Tracing.EventWrittenEventArgs.Message
  id: Message
  parent: System.Diagnostics.Tracing.EventWrittenEventArgs
  langs:
  - csharp
  - vb
  name: Message
  nameWithType: EventWrittenEventArgs.Message
  fullName: System.Diagnostics.Tracing.EventWrittenEventArgs.Message
  type: Property
  source:
    remote:
      path: src/mscorlib/src/System/Diagnostics/Eventing/EventSource.cs
      branch: master
      repo: https://github.com/dotnet/coreclr.git
    id: Message
    path: src/mscorlib/src/System/Diagnostics/Eventing/EventSource.cs
    startLine: 4932
  assemblies:
  - System.Diagnostics.Tracing
  namespace: System.Diagnostics.Tracing
  summary: "\n<p>Gets the message for the event.</p>\n"
  syntax:
    content: public string Message { get; }
    content.vb: Public ReadOnly Property Message As String
    parameters: []
    return:
      type: System.String
      description: "\n<p>The message for the event.</p>\n"
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: System.Diagnostics.Tracing.EventWrittenEventArgs.Opcode
  commentId: P:System.Diagnostics.Tracing.EventWrittenEventArgs.Opcode
  id: Opcode
  parent: System.Diagnostics.Tracing.EventWrittenEventArgs
  langs:
  - csharp
  - vb
  name: Opcode
  nameWithType: EventWrittenEventArgs.Opcode
  fullName: System.Diagnostics.Tracing.EventWrittenEventArgs.Opcode
  type: Property
  source:
    remote:
      path: src/mscorlib/src/System/Diagnostics/Eventing/EventSource.cs
      branch: master
      repo: https://github.com/dotnet/coreclr.git
    id: Opcode
    path: src/mscorlib/src/System/Diagnostics/Eventing/EventSource.cs
    startLine: 4892
  assemblies:
  - System.Diagnostics.Tracing
  namespace: System.Diagnostics.Tracing
  summary: "\n<p>Gets the operation code for the event.</p>\n"
  syntax:
    content: public EventOpcode Opcode { get; }
    content.vb: Public ReadOnly Property Opcode As EventOpcode
    parameters: []
    return:
      type: System.Diagnostics.Tracing.EventOpcode
      description: "\n<p>The operation code for the event.</p>\n"
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: System.Diagnostics.Tracing.EventWrittenEventArgs.Payload
  commentId: P:System.Diagnostics.Tracing.EventWrittenEventArgs.Payload
  id: Payload
  parent: System.Diagnostics.Tracing.EventWrittenEventArgs
  langs:
  - csharp
  - vb
  name: Payload
  nameWithType: EventWrittenEventArgs.Payload
  fullName: System.Diagnostics.Tracing.EventWrittenEventArgs.Payload
  type: Property
  source:
    remote:
      path: src/mscorlib/src/System/Diagnostics/Eventing/EventSource.cs
      branch: master
      repo: https://github.com/dotnet/coreclr.git
    id: Payload
    path: src/mscorlib/src/System/Diagnostics/Eventing/EventSource.cs
    startLine: 4838
  assemblies:
  - System.Diagnostics.Tracing
  namespace: System.Diagnostics.Tracing
  summary: "\n<p>Gets the payload for the event.</p>\n"
  syntax:
    content: public ReadOnlyCollection<object> Payload { get; }
    content.vb: Public ReadOnly Property Payload As ReadOnlyCollection(Of Object)
    parameters: []
    return:
      type: System.Collections.ObjectModel.ReadOnlyCollection{System.Object}
      description: "\n<p>The payload for the event.</p>\n"
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: System.Diagnostics.Tracing.EventWrittenEventArgs.PayloadNames
  commentId: P:System.Diagnostics.Tracing.EventWrittenEventArgs.PayloadNames
  id: PayloadNames
  parent: System.Diagnostics.Tracing.EventWrittenEventArgs
  langs:
  - csharp
  - vb
  name: PayloadNames
  nameWithType: EventWrittenEventArgs.PayloadNames
  fullName: System.Diagnostics.Tracing.EventWrittenEventArgs.PayloadNames
  type: Property
  source:
    remote:
      path: src/mscorlib/src/System/Diagnostics/Eventing/EventSource.cs
      branch: master
      repo: https://github.com/dotnet/coreclr.git
    id: PayloadNames
    path: src/mscorlib/src/System/Diagnostics/Eventing/EventSource.cs
    startLine: 4843
  assemblies:
  - System.Diagnostics.Tracing
  namespace: System.Diagnostics.Tracing
  summary: "\n<p>Returns a list of strings that represent the property names of the event.</p>\n"
  syntax:
    content: public ReadOnlyCollection<string> PayloadNames { get; }
    content.vb: Public ReadOnly Property PayloadNames As ReadOnlyCollection(Of String)
    parameters: []
    return:
      type: System.Collections.ObjectModel.ReadOnlyCollection{System.String}
      description: "\n<p>Returns <xref href=\"System.Collections.ObjectModel.ReadOnlyCollection`1\" data-throw-if-not-resolved=\"false\"></xref>.</p>\n"
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: System.Diagnostics.Tracing.EventWrittenEventArgs.RelatedActivityId
  commentId: P:System.Diagnostics.Tracing.EventWrittenEventArgs.RelatedActivityId
  id: RelatedActivityId
  parent: System.Diagnostics.Tracing.EventWrittenEventArgs
  langs:
  - csharp
  - vb
  name: RelatedActivityId
  nameWithType: EventWrittenEventArgs.RelatedActivityId
  fullName: System.Diagnostics.Tracing.EventWrittenEventArgs.RelatedActivityId
  type: Property
  source:
    remote:
      path: src/mscorlib/src/System/Diagnostics/Eventing/EventSource.cs
      branch: master
      repo: https://github.com/dotnet/coreclr.git
    id: RelatedActivityId
    path: src/mscorlib/src/System/Diagnostics/Eventing/EventSource.cs
    startLine: 4828
  assemblies:
  - System.Diagnostics.Tracing
  namespace: System.Diagnostics.Tracing
  summary: "\n<p>[Supported in the .NET Framework 4.5.1 and later versions] </p>\n<p>Gets the identifier of an activity that is related to the activity represented by the current instance. </p>\n"
  syntax:
    content: >-
      public Guid RelatedActivityId

      {
          [SecurityCritical]
          get;
      }
    content.vb: Public ReadOnly Property RelatedActivityId As Guid
    parameters: []
    return:
      type: System.Guid
      description: "\n<p>The identifier of the related activity, or <xref href=\"System.Guid.Empty\" data-throw-if-not-resolved=\"false\"></xref> if there is no related activity.</p>\n"
  seealso:
  - linkId: System.Diagnostics.Tracing.EventWrittenEventArgs.ActivityId
    commentId: P:System.Diagnostics.Tracing.EventWrittenEventArgs.ActivityId
  - linkId: System.Diagnostics.Tracing.EventSource.WriteEventWithRelatedActivityId(System.Int32,System.Guid,System.Object[])
    commentId: M:System.Diagnostics.Tracing.EventSource.WriteEventWithRelatedActivityId(System.Int32,System.Guid,System.Object[])
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: System.Diagnostics.Tracing.EventWrittenEventArgs.Tags
  commentId: P:System.Diagnostics.Tracing.EventWrittenEventArgs.Tags
  id: Tags
  parent: System.Diagnostics.Tracing.EventWrittenEventArgs
  langs:
  - csharp
  - vb
  name: Tags
  nameWithType: EventWrittenEventArgs.Tags
  fullName: System.Diagnostics.Tracing.EventWrittenEventArgs.Tags
  type: Property
  source:
    remote:
      path: src/mscorlib/src/System/Diagnostics/Eventing/EventSource.cs
      branch: master
      repo: https://github.com/dotnet/coreclr.git
    id: Tags
    path: src/mscorlib/src/System/Diagnostics/Eventing/EventSource.cs
    startLine: 4919
  assemblies:
  - System.Diagnostics.Tracing
  namespace: System.Diagnostics.Tracing
  summary: "\n<p>Returns the tags specified in the call to the <xref href=\"System.Diagnostics.Tracing.EventSource.Write(System.String,System.Diagnostics.Tracing.EventSourceOptions)\" data-throw-if-not-resolved=\"false\"></xref> method.</p>\n"
  syntax:
    content: public EventTags Tags { get; }
    content.vb: Public ReadOnly Property Tags As EventTags
    parameters: []
    return:
      type: System.Diagnostics.Tracing.EventTags
      description: "\n<p>Returns <xref href=\"System.Diagnostics.Tracing.EventTags\" data-throw-if-not-resolved=\"false\"></xref>.</p>\n"
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: System.Diagnostics.Tracing.EventWrittenEventArgs.Task
  commentId: P:System.Diagnostics.Tracing.EventWrittenEventArgs.Task
  id: Task
  parent: System.Diagnostics.Tracing.EventWrittenEventArgs
  langs:
  - csharp
  - vb
  name: Task
  nameWithType: EventWrittenEventArgs.Task
  fullName: System.Diagnostics.Tracing.EventWrittenEventArgs.Task
  type: Property
  source:
    remote:
      path: src/mscorlib/src/System/Diagnostics/Eventing/EventSource.cs
      branch: master
      repo: https://github.com/dotnet/coreclr.git
    id: Task
    path: src/mscorlib/src/System/Diagnostics/Eventing/EventSource.cs
    startLine: 4905
  assemblies:
  - System.Diagnostics.Tracing
  namespace: System.Diagnostics.Tracing
  summary: "\n<p>Gets the task for the event.</p>\n"
  syntax:
    content: public EventTask Task { get; }
    content.vb: Public ReadOnly Property Task As EventTask
    parameters: []
    return:
      type: System.Diagnostics.Tracing.EventTask
      description: "\n<p>The task for the event.</p>\n"
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: System.Diagnostics.Tracing.EventWrittenEventArgs.Version
  commentId: P:System.Diagnostics.Tracing.EventWrittenEventArgs.Version
  id: Version
  parent: System.Diagnostics.Tracing.EventWrittenEventArgs
  langs:
  - csharp
  - vb
  name: Version
  nameWithType: EventWrittenEventArgs.Version
  fullName: System.Diagnostics.Tracing.EventWrittenEventArgs.Version
  type: Property
  source:
    remote:
      path: src/mscorlib/src/System/Diagnostics/Eventing/EventSource.cs
      branch: master
      repo: https://github.com/dotnet/coreclr.git
    id: Version
    path: src/mscorlib/src/System/Diagnostics/Eventing/EventSource.cs
    startLine: 4966
  assemblies:
  - System.Diagnostics.Tracing
  namespace: System.Diagnostics.Tracing
  summary: "\n<p>Gets the version of the event.</p>\n"
  syntax:
    content: public byte Version { get; }
    content.vb: Public ReadOnly Property Version As Byte
    parameters: []
    return:
      type: System.Byte
      description: "\n<p>The version of the event.</p>\n"
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
references:
- uid: System.Diagnostics.Tracing
  commentId: N:System.Diagnostics.Tracing
  isExternal: false
  name: System.Diagnostics.Tracing
  nameWithType: System.Diagnostics.Tracing
  fullName: System.Diagnostics.Tracing
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: false
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.EventArgs
  commentId: T:System.EventArgs
  parent: System
  isExternal: false
  name: EventArgs
  nameWithType: EventArgs
  fullName: System.EventArgs
- uid: System.EventArgs.Empty
  commentId: F:System.EventArgs.Empty
  parent: System.EventArgs
  isExternal: true
  name: Empty
  nameWithType: EventArgs.Empty
  fullName: System.EventArgs.Empty
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: System.Guid
  commentId: T:System.Guid
  parent: System
  isExternal: false
  name: Guid
  nameWithType: Guid
  fullName: System.Guid
- uid: System.Diagnostics.Tracing.EventChannel
  commentId: T:System.Diagnostics.Tracing.EventChannel
  parent: System.Diagnostics.Tracing
  isExternal: false
  name: EventChannel
  nameWithType: EventChannel
  fullName: System.Diagnostics.Tracing.EventChannel
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: false
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: false
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Diagnostics.Tracing.EventSource
  commentId: T:System.Diagnostics.Tracing.EventSource
  parent: System.Diagnostics.Tracing
  isExternal: false
  name: EventSource
  nameWithType: EventSource
  fullName: System.Diagnostics.Tracing.EventSource
- uid: System.Diagnostics.Tracing.EventKeywords
  commentId: T:System.Diagnostics.Tracing.EventKeywords
  parent: System.Diagnostics.Tracing
  isExternal: false
  name: EventKeywords
  nameWithType: EventKeywords
  fullName: System.Diagnostics.Tracing.EventKeywords
- uid: System.Diagnostics.Tracing.EventLevel
  commentId: T:System.Diagnostics.Tracing.EventLevel
  parent: System.Diagnostics.Tracing
  isExternal: false
  name: EventLevel
  nameWithType: EventLevel
  fullName: System.Diagnostics.Tracing.EventLevel
- uid: System.Diagnostics.Tracing.EventOpcode
  commentId: T:System.Diagnostics.Tracing.EventOpcode
  parent: System.Diagnostics.Tracing
  isExternal: false
  name: EventOpcode
  nameWithType: EventOpcode
  fullName: System.Diagnostics.Tracing.EventOpcode
- uid: System.Collections.ObjectModel.ReadOnlyCollection{System.Object}
  commentId: T:System.Collections.ObjectModel.ReadOnlyCollection{System.Object}
  parent: System.Collections.ObjectModel
  definition: System.Collections.ObjectModel.ReadOnlyCollection`1
  name: ReadOnlyCollection<Object>
  nameWithType: ReadOnlyCollection<Object>
  fullName: System.Collections.ObjectModel.ReadOnlyCollection<System.Object>
  nameWithType.vb: ReadOnlyCollection(Of Object)
  fullname.vb: System.Collections.ObjectModel.ReadOnlyCollection(Of System.Object)
  name.vb: ReadOnlyCollection(Of Object)
  spec.csharp:
  - uid: System.Collections.ObjectModel.ReadOnlyCollection`1
    name: ReadOnlyCollection
    nameWithType: ReadOnlyCollection
    fullName: System.Collections.ObjectModel.ReadOnlyCollection
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.ObjectModel.ReadOnlyCollection`1
    name: ReadOnlyCollection
    nameWithType: ReadOnlyCollection
    fullName: System.Collections.ObjectModel.ReadOnlyCollection
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.ObjectModel.ReadOnlyCollection`1
  commentId: T:System.Collections.ObjectModel.ReadOnlyCollection`1
  isExternal: false
  name: ReadOnlyCollection<T>
  nameWithType: ReadOnlyCollection<T>
  fullName: System.Collections.ObjectModel.ReadOnlyCollection<T>
  nameWithType.vb: ReadOnlyCollection(Of T)
  fullname.vb: System.Collections.ObjectModel.ReadOnlyCollection(Of T)
  name.vb: ReadOnlyCollection(Of T)
  spec.csharp:
  - uid: System.Collections.ObjectModel.ReadOnlyCollection`1
    name: ReadOnlyCollection
    nameWithType: ReadOnlyCollection
    fullName: System.Collections.ObjectModel.ReadOnlyCollection
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.ObjectModel.ReadOnlyCollection`1
    name: ReadOnlyCollection
    nameWithType: ReadOnlyCollection
    fullName: System.Collections.ObjectModel.ReadOnlyCollection
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.ObjectModel
  commentId: N:System.Collections.ObjectModel
  isExternal: false
  name: System.Collections.ObjectModel
  nameWithType: System.Collections.ObjectModel
  fullName: System.Collections.ObjectModel
- uid: System.Collections.ObjectModel.ReadOnlyCollection{System.String}
  commentId: T:System.Collections.ObjectModel.ReadOnlyCollection{System.String}
  parent: System.Collections.ObjectModel
  definition: System.Collections.ObjectModel.ReadOnlyCollection`1
  name: ReadOnlyCollection<String>
  nameWithType: ReadOnlyCollection<String>
  fullName: System.Collections.ObjectModel.ReadOnlyCollection<System.String>
  nameWithType.vb: ReadOnlyCollection(Of String)
  fullname.vb: System.Collections.ObjectModel.ReadOnlyCollection(Of System.String)
  name.vb: ReadOnlyCollection(Of String)
  spec.csharp:
  - uid: System.Collections.ObjectModel.ReadOnlyCollection`1
    name: ReadOnlyCollection
    nameWithType: ReadOnlyCollection
    fullName: System.Collections.ObjectModel.ReadOnlyCollection
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.ObjectModel.ReadOnlyCollection`1
    name: ReadOnlyCollection
    nameWithType: ReadOnlyCollection
    fullName: System.Collections.ObjectModel.ReadOnlyCollection
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Diagnostics.Tracing.EventTags
  commentId: T:System.Diagnostics.Tracing.EventTags
  parent: System.Diagnostics.Tracing
  isExternal: false
  name: EventTags
  nameWithType: EventTags
  fullName: System.Diagnostics.Tracing.EventTags
- uid: System.Diagnostics.Tracing.EventTask
  commentId: T:System.Diagnostics.Tracing.EventTask
  parent: System.Diagnostics.Tracing
  isExternal: false
  name: EventTask
  nameWithType: EventTask
  fullName: System.Diagnostics.Tracing.EventTask
- uid: System.Byte
  commentId: T:System.Byte
  parent: System
  isExternal: false
  name: Byte
  nameWithType: Byte
  fullName: System.Byte
