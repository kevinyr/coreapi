### YamlMime:ManagedReference
items:
- uid: System.ServiceModel.Security.SecurityPolicyVersion
  commentId: T:System.ServiceModel.Security.SecurityPolicyVersion
  id: SecurityPolicyVersion
  parent: System.ServiceModel.Security
  children:
  - System.ServiceModel.Security.SecurityPolicyVersion.Namespace
  - System.ServiceModel.Security.SecurityPolicyVersion.Prefix
  - System.ServiceModel.Security.SecurityPolicyVersion.WSSecurityPolicy11
  langs:
  - csharp
  - vb
  name: SecurityPolicyVersion
  nameWithType: SecurityPolicyVersion
  fullName: System.ServiceModel.Security.SecurityPolicyVersion
  type: Class
  source:
    remote:
      path: src/System.Private.ServiceModel/src/System/ServiceModel/Security/SecurityPolicyVersion.cs
      branch: master
      repo: https://github.com/dotnet/wcf.git
    id: SecurityPolicyVersion
    path: src/System.Private.ServiceModel/src/System/ServiceModel/Security/SecurityPolicyVersion.cs
    startLine: 7
  assemblies:
  - System.ServiceModel.Security
  namespace: System.ServiceModel.Security
  summary: "\n<p>Contains the set of supported WS-SecurityPolicy versions. This is an abstract class.</p>\n"
  syntax:
    content: public abstract class SecurityPolicyVersion
    content.vb: Public MustInherit Class SecurityPolicyVersion
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  modifiers.csharp:
  - public
  - abstract
  - class
  modifiers.vb:
  - Public
  - MustInherit
  - Class
- uid: System.ServiceModel.Security.SecurityPolicyVersion.Namespace
  commentId: P:System.ServiceModel.Security.SecurityPolicyVersion.Namespace
  id: Namespace
  parent: System.ServiceModel.Security.SecurityPolicyVersion
  langs:
  - csharp
  - vb
  name: Namespace
  nameWithType: SecurityPolicyVersion.Namespace
  fullName: System.ServiceModel.Security.SecurityPolicyVersion.Namespace
  type: Property
  source:
    remote:
      path: src/System.Private.ServiceModel/src/System/ServiceModel/Security/SecurityPolicyVersion.cs
      branch: master
      repo: https://github.com/dotnet/wcf.git
    id: Namespace
    path: src/System.Private.ServiceModel/src/System/ServiceModel/Security/SecurityPolicyVersion.cs
    startLine: 18
  assemblies:
  - System.ServiceModel.Security
  namespace: System.ServiceModel.Security
  summary: "\n<p>Gets the namespace for this WS-SecurityPolicy version.</p>\n"
  syntax:
    content: public string Namespace { get; }
    content.vb: Public ReadOnly Property Namespace As String
    parameters: []
    return:
      type: System.String
      description: "\n<p>The namespace for this WS-SecurityPolicy version.</p>\n"
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: System.ServiceModel.Security.SecurityPolicyVersion.Prefix
  commentId: P:System.ServiceModel.Security.SecurityPolicyVersion.Prefix
  id: Prefix
  parent: System.ServiceModel.Security.SecurityPolicyVersion
  langs:
  - csharp
  - vb
  name: Prefix
  nameWithType: SecurityPolicyVersion.Prefix
  fullName: System.ServiceModel.Security.SecurityPolicyVersion.Prefix
  type: Property
  source:
    remote:
      path: src/System.Private.ServiceModel/src/System/ServiceModel/Security/SecurityPolicyVersion.cs
      branch: master
      repo: https://github.com/dotnet/wcf.git
    id: Prefix
    path: src/System.Private.ServiceModel/src/System/ServiceModel/Security/SecurityPolicyVersion.cs
    startLine: 26
  assemblies:
  - System.ServiceModel.Security
  namespace: System.ServiceModel.Security
  summary: "\n<p>Gets the prefix.</p>\n"
  syntax:
    content: public string Prefix { get; }
    content.vb: Public ReadOnly Property Prefix As String
    parameters: []
    return:
      type: System.String
      description: "\n<p>The prefix.</p>\n"
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: System.ServiceModel.Security.SecurityPolicyVersion.WSSecurityPolicy11
  commentId: P:System.ServiceModel.Security.SecurityPolicyVersion.WSSecurityPolicy11
  id: WSSecurityPolicy11
  parent: System.ServiceModel.Security.SecurityPolicyVersion
  langs:
  - csharp
  - vb
  name: WSSecurityPolicy11
  nameWithType: SecurityPolicyVersion.WSSecurityPolicy11
  fullName: System.ServiceModel.Security.SecurityPolicyVersion.WSSecurityPolicy11
  type: Property
  source:
    remote:
      path: src/System.Private.ServiceModel/src/System/ServiceModel/Security/SecurityPolicyVersion.cs
      branch: master
      repo: https://github.com/dotnet/wcf.git
    id: WSSecurityPolicy11
    path: src/System.Private.ServiceModel/src/System/ServiceModel/Security/SecurityPolicyVersion.cs
    startLine: 34
  assemblies:
  - System.ServiceModel.Security
  namespace: System.ServiceModel.Security
  summary: "\n<p>Gets the version 1.1 of WS-SecurityPolicy.</p>\n"
  syntax:
    content: public static SecurityPolicyVersion WSSecurityPolicy11 { get; }
    content.vb: Public Shared ReadOnly Property WSSecurityPolicy11 As SecurityPolicyVersion
    parameters: []
    return:
      type: System.ServiceModel.Security.SecurityPolicyVersion
      description: "\n<p>The version 1.1 of WS-SecurityPolicy.</p>\n"
  modifiers.csharp:
  - public
  - static
  - get
  modifiers.vb:
  - Public
  - Shared
  - ReadOnly
references:
- uid: System.ServiceModel.Security
  commentId: N:System.ServiceModel.Security
  isExternal: false
  name: System.ServiceModel.Security
  nameWithType: System.ServiceModel.Security
  fullName: System.ServiceModel.Security
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: false
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: false
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.ServiceModel.Security.SecurityPolicyVersion
  commentId: T:System.ServiceModel.Security.SecurityPolicyVersion
  parent: System.ServiceModel.Security
  isExternal: false
  name: SecurityPolicyVersion
  nameWithType: SecurityPolicyVersion
  fullName: System.ServiceModel.Security.SecurityPolicyVersion
