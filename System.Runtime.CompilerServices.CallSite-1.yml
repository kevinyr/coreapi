### YamlMime:ManagedReference
items:
- uid: System.Runtime.CompilerServices.CallSite`1
  commentId: T:System.Runtime.CompilerServices.CallSite`1
  id: CallSite`1
  parent: System.Runtime.CompilerServices
  children:
  - System.Runtime.CompilerServices.CallSite`1.Create(System.Runtime.CompilerServices.CallSiteBinder)
  - System.Runtime.CompilerServices.CallSite`1.Target
  - System.Runtime.CompilerServices.CallSite`1.Update
  langs:
  - csharp
  - vb
  name: CallSite<T>
  nameWithType: CallSite<T>
  fullName: System.Runtime.CompilerServices.CallSite<T>
  type: Class
  source:
    remote:
      path: src/System.Dynamic.Runtime/src/System/Runtime/CompilerServices/CallSite.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: CallSite
    path: src/System.Dynamic.Runtime/src/System/Runtime/CompilerServices/CallSite.cs
    startLine: 120
  assemblies:
  - System.Dynamic.Runtime
  namespace: System.Runtime.CompilerServices
  summary: "\n<p>Dynamic site type.</p>\n"
  syntax:
    content: 'public class CallSite<T> : CallSite where T : class'
    content.vb: >-
      Public Class CallSite(Of T As Class)
          Inherits CallSite
    typeParameters:
    - id: T
      description: "\n<p>The delegate type.</p>\n"
  inheritance:
  - System.Object
  - System.Runtime.CompilerServices.CallSite
  inheritedMembers:
  - System.Runtime.CompilerServices.CallSite.Binder
  - System.Runtime.CompilerServices.CallSite.Create(System.Type,System.Runtime.CompilerServices.CallSiteBinder)
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  nameWithType.vb: CallSite(Of T)
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
  fullName.vb: System.Runtime.CompilerServices.CallSite(Of T)
  name.vb: CallSite(Of T)
- uid: System.Runtime.CompilerServices.CallSite`1.Target
  commentId: F:System.Runtime.CompilerServices.CallSite`1.Target
  id: Target
  parent: System.Runtime.CompilerServices.CallSite`1
  langs:
  - csharp
  - vb
  name: Target
  nameWithType: CallSite<T>.Target
  fullName: System.Runtime.CompilerServices.CallSite<T>.Target
  type: Field
  source:
    remote:
      path: src/System.Dynamic.Runtime/src/System/Runtime/CompilerServices/CallSite.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: Target
    path: src/System.Dynamic.Runtime/src/System/Runtime/CompilerServices/CallSite.cs
    startLine: 148
  assemblies:
  - System.Dynamic.Runtime
  namespace: System.Runtime.CompilerServices
  summary: "\n<p>The Level 0 cache - a delegate specialized based on the site history.</p>\n"
  syntax:
    content: >-
      [SuppressMessage("Microsoft.Design", "CA1051:DoNotDeclareVisibleInstanceFields")]

      public T Target
    content.vb: >-
      <SuppressMessage("Microsoft.Design", "CA1051:DoNotDeclareVisibleInstanceFields")>

      Public Target As T
    return:
      type: '{T}'
  nameWithType.vb: CallSite(Of T).Target
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: System.Runtime.CompilerServices.CallSite(Of T).Target
- uid: System.Runtime.CompilerServices.CallSite`1.Update
  commentId: P:System.Runtime.CompilerServices.CallSite`1.Update
  id: Update
  parent: System.Runtime.CompilerServices.CallSite`1
  langs:
  - csharp
  - vb
  name: Update
  nameWithType: CallSite<T>.Update
  fullName: System.Runtime.CompilerServices.CallSite<T>.Update
  type: Property
  source:
    remote:
      path: src/System.Dynamic.Runtime/src/System/Runtime/CompilerServices/CallSite.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: Update
    path: src/System.Dynamic.Runtime/src/System/Runtime/CompilerServices/CallSite.cs
    startLine: 126
  assemblies:
  - System.Dynamic.Runtime
  namespace: System.Runtime.CompilerServices
  summary: "\n<p>The update delegate. Called when the dynamic site experiences cache miss.</p>\n"
  syntax:
    content: public T Update { get; }
    content.vb: Public ReadOnly Property Update As T
    parameters: []
    return:
      type: '{T}'
      description: "\n<p>The update delegate.</p>\n"
  nameWithType.vb: CallSite(Of T).Update
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
  fullName.vb: System.Runtime.CompilerServices.CallSite(Of T).Update
- uid: System.Runtime.CompilerServices.CallSite`1.Create(System.Runtime.CompilerServices.CallSiteBinder)
  commentId: M:System.Runtime.CompilerServices.CallSite`1.Create(System.Runtime.CompilerServices.CallSiteBinder)
  id: Create(System.Runtime.CompilerServices.CallSiteBinder)
  parent: System.Runtime.CompilerServices.CallSite`1
  langs:
  - csharp
  - vb
  name: Create(CallSiteBinder)
  nameWithType: CallSite<T>.Create(CallSiteBinder)
  fullName: System.Runtime.CompilerServices.CallSite<T>.Create(System.Runtime.CompilerServices.CallSiteBinder)
  type: Method
  source:
    remote:
      path: src/System.Dynamic.Runtime/src/System/Runtime/CompilerServices/CallSite.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: Create
    path: src/System.Dynamic.Runtime/src/System/Runtime/CompilerServices/CallSite.cs
    startLine: 187
  assemblies:
  - System.Dynamic.Runtime
  namespace: System.Runtime.CompilerServices
  summary: "\n<p>Creates an instance of the dynamic call site, initialized with the binder responsible for the runtime binding of the dynamic operations at this call site.</p>\n"
  syntax:
    content: >-
      [SuppressMessage("Microsoft.Design", "CA1000:DoNotDeclareStaticMembersOnGenericTypes")]

      public static CallSite<T> Create(CallSiteBinder binder)
    content.vb: >-
      <SuppressMessage("Microsoft.Design", "CA1000:DoNotDeclareStaticMembersOnGenericTypes")>

      Public Shared Function Create(binder As CallSiteBinder) As CallSite(Of T)
    parameters:
    - id: binder
      type: System.Runtime.CompilerServices.CallSiteBinder
      description: "\n<p>The binder responsible for the runtime binding of the dynamic operations at this call site.</p>\n"
    return:
      type: System.Runtime.CompilerServices.CallSite`1
      description: "\n<p>The new instance of dynamic call site.</p>\n"
  nameWithType.vb: CallSite(Of T).Create(CallSiteBinder)
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: System.Runtime.CompilerServices.CallSite(Of T).Create(System.Runtime.CompilerServices.CallSiteBinder)
references:
- uid: System.Runtime.CompilerServices
  commentId: N:System.Runtime.CompilerServices
  isExternal: false
  name: System.Runtime.CompilerServices
  nameWithType: System.Runtime.CompilerServices
  fullName: System.Runtime.CompilerServices
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: false
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Runtime.CompilerServices.CallSite
  commentId: T:System.Runtime.CompilerServices.CallSite
  parent: System.Runtime.CompilerServices
  isExternal: false
  name: CallSite
  nameWithType: CallSite
  fullName: System.Runtime.CompilerServices.CallSite
- uid: System.Runtime.CompilerServices.CallSite.Binder
  commentId: P:System.Runtime.CompilerServices.CallSite.Binder
  parent: System.Runtime.CompilerServices.CallSite
  isExternal: false
  name: Binder
  nameWithType: CallSite.Binder
  fullName: System.Runtime.CompilerServices.CallSite.Binder
- uid: System.Runtime.CompilerServices.CallSite.Create(System.Type,System.Runtime.CompilerServices.CallSiteBinder)
  commentId: M:System.Runtime.CompilerServices.CallSite.Create(System.Type,System.Runtime.CompilerServices.CallSiteBinder)
  parent: System.Runtime.CompilerServices.CallSite
  isExternal: true
  name: Create(Type, CallSiteBinder)
  nameWithType: CallSite.Create(Type, CallSiteBinder)
  fullName: System.Runtime.CompilerServices.CallSite.Create(System.Type, System.Runtime.CompilerServices.CallSiteBinder)
  spec.csharp:
  - uid: System.Runtime.CompilerServices.CallSite.Create(System.Type,System.Runtime.CompilerServices.CallSiteBinder)
    name: Create
    nameWithType: CallSite.Create
    fullName: System.Runtime.CompilerServices.CallSite.Create
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Type
    name: Type
    nameWithType: Type
    fullName: System.Type
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Runtime.CompilerServices.CallSiteBinder
    name: CallSiteBinder
    nameWithType: CallSiteBinder
    fullName: System.Runtime.CompilerServices.CallSiteBinder
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Runtime.CompilerServices.CallSite.Create(System.Type,System.Runtime.CompilerServices.CallSiteBinder)
    name: Create
    nameWithType: CallSite.Create
    fullName: System.Runtime.CompilerServices.CallSite.Create
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Type
    name: Type
    nameWithType: Type
    fullName: System.Type
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Runtime.CompilerServices.CallSiteBinder
    name: CallSiteBinder
    nameWithType: CallSiteBinder
    fullName: System.Runtime.CompilerServices.CallSiteBinder
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: '{T}'
  commentId: '!:T'
  definition: T
  name: T
  nameWithType: T
  fullName: T
- uid: T
  isExternal: false
  name: T
  nameWithType: T
  fullName: T
- uid: System.Runtime.CompilerServices.CallSiteBinder
  commentId: T:System.Runtime.CompilerServices.CallSiteBinder
  parent: System.Runtime.CompilerServices
  isExternal: false
  name: CallSiteBinder
  nameWithType: CallSiteBinder
  fullName: System.Runtime.CompilerServices.CallSiteBinder
- uid: System.Runtime.CompilerServices.CallSite`1
  commentId: T:System.Runtime.CompilerServices.CallSite`1
  parent: System.Runtime.CompilerServices
  isExternal: false
  name: CallSite<T>
  nameWithType: CallSite<T>
  fullName: System.Runtime.CompilerServices.CallSite<T>
  nameWithType.vb: CallSite(Of T)
  fullname.vb: System.Runtime.CompilerServices.CallSite(Of T)
  name.vb: CallSite(Of T)
  spec.csharp:
  - uid: System.Runtime.CompilerServices.CallSite`1
    name: CallSite
    nameWithType: CallSite
    fullName: System.Runtime.CompilerServices.CallSite
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Runtime.CompilerServices.CallSite`1
    name: CallSite
    nameWithType: CallSite
    fullName: System.Runtime.CompilerServices.CallSite
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
