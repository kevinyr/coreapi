items:
- uid: System.ServiceModel.Channels.MessageEncoder
  commentId: T:System.ServiceModel.Channels.MessageEncoder
  id: MessageEncoder
  parent: System.ServiceModel.Channels
  children:
  - System.ServiceModel.Channels.MessageEncoder.#ctor
  - System.ServiceModel.Channels.MessageEncoder.ContentType
  - System.ServiceModel.Channels.MessageEncoder.GetProperty``1
  - System.ServiceModel.Channels.MessageEncoder.IsContentTypeSupported(System.String)
  - System.ServiceModel.Channels.MessageEncoder.MediaType
  - System.ServiceModel.Channels.MessageEncoder.MessageVersion
  - System.ServiceModel.Channels.MessageEncoder.ReadMessage(System.ArraySegment{System.Byte},System.ServiceModel.Channels.BufferManager)
  - System.ServiceModel.Channels.MessageEncoder.ReadMessage(System.ArraySegment{System.Byte},System.ServiceModel.Channels.BufferManager,System.String)
  - System.ServiceModel.Channels.MessageEncoder.ReadMessage(System.IO.Stream,System.Int32)
  - System.ServiceModel.Channels.MessageEncoder.ReadMessage(System.IO.Stream,System.Int32,System.String)
  - System.ServiceModel.Channels.MessageEncoder.ToString
  - System.ServiceModel.Channels.MessageEncoder.WriteMessage(System.ServiceModel.Channels.Message,System.Int32,System.ServiceModel.Channels.BufferManager)
  - System.ServiceModel.Channels.MessageEncoder.WriteMessage(System.ServiceModel.Channels.Message,System.Int32,System.ServiceModel.Channels.BufferManager,System.Int32)
  - System.ServiceModel.Channels.MessageEncoder.WriteMessage(System.ServiceModel.Channels.Message,System.IO.Stream)
  langs:
  - csharp
  - vb
  name: MessageEncoder
  fullName: System.ServiceModel.Channels.MessageEncoder
  type: Class
  source:
    remote:
      path: src/System.ServiceModel.Primitives/ref/System.ServiceModel.Primitives.cs
      branch: master
      repo: https://github.com/dotnet/wcf.git
    id: MessageEncoder
    path: src/System.ServiceModel.Primitives/ref/System.ServiceModel.Primitives.cs
    startLine: 948
  assemblies:
  - System.ServiceModel.Primitives
  namespace: System.ServiceModel.Channels
  summary: "\n<p>The encoder is the component that is used to write messages to a stream and to read messages from a stream.</p>\n"
  syntax:
    content: public abstract class MessageEncoder
    content.vb: Public MustInherit Class MessageEncoder
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  modifiers.csharp:
  - public
  - abstract
  - class
  modifiers.vb:
  - Public
  - MustInherit
  - Class
  nameWithType: MessageEncoder
- uid: System.ServiceModel.Channels.MessageEncoder.#ctor
  commentId: M:System.ServiceModel.Channels.MessageEncoder.#ctor
  id: '#ctor'
  parent: System.ServiceModel.Channels.MessageEncoder
  langs:
  - csharp
  - vb
  name: MessageEncoder()
  fullName: System.ServiceModel.Channels.MessageEncoder.MessageEncoder()
  type: Constructor
  source:
    remote:
      path: src/System.ServiceModel.Primitives/ref/System.ServiceModel.Primitives.cs
      branch: master
      repo: https://github.com/dotnet/wcf.git
    id: .ctor
    path: src/System.ServiceModel.Primitives/ref/System.ServiceModel.Primitives.cs
    startLine: 950
  assemblies:
  - System.ServiceModel.Primitives
  namespace: System.ServiceModel.Channels
  summary: "\n<p>Initializes a new instance of the <xref href=\"System.ServiceModel.Channels.MessageEncoder\" data-throw-if-not-resolved=\"false\"></xref> class.  </p>\n"
  syntax:
    content: protected MessageEncoder()
    content.vb: Protected Sub New
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
  nameWithType: MessageEncoder.MessageEncoder()
- uid: System.ServiceModel.Channels.MessageEncoder.ContentType
  commentId: P:System.ServiceModel.Channels.MessageEncoder.ContentType
  id: ContentType
  parent: System.ServiceModel.Channels.MessageEncoder
  langs:
  - csharp
  - vb
  name: ContentType
  fullName: System.ServiceModel.Channels.MessageEncoder.ContentType
  type: Property
  source:
    remote:
      path: src/System.ServiceModel.Primitives/ref/System.ServiceModel.Primitives.cs
      branch: master
      repo: https://github.com/dotnet/wcf.git
    id: ContentType
    path: src/System.ServiceModel.Primitives/ref/System.ServiceModel.Primitives.cs
    startLine: 951
  assemblies:
  - System.ServiceModel.Primitives
  namespace: System.ServiceModel.Channels
  summary: "\n<p>When overridden in a derived class, gets the MIME content type used by the encoder.</p>\n"
  syntax:
    content: public abstract string ContentType { get; }
    content.vb: Public MustOverride ReadOnly Property ContentType As String
    parameters: []
    return:
      type: System.String
      description: "\n<p>The content type that is supported by the message encoder.</p>\n"
  modifiers.csharp:
  - public
  - abstract
  - get
  modifiers.vb:
  - Public
  - MustOverride
  - ReadOnly
  nameWithType: MessageEncoder.ContentType
- uid: System.ServiceModel.Channels.MessageEncoder.MediaType
  commentId: P:System.ServiceModel.Channels.MessageEncoder.MediaType
  id: MediaType
  parent: System.ServiceModel.Channels.MessageEncoder
  langs:
  - csharp
  - vb
  name: MediaType
  fullName: System.ServiceModel.Channels.MessageEncoder.MediaType
  type: Property
  source:
    remote:
      path: src/System.ServiceModel.Primitives/ref/System.ServiceModel.Primitives.cs
      branch: master
      repo: https://github.com/dotnet/wcf.git
    id: MediaType
    path: src/System.ServiceModel.Primitives/ref/System.ServiceModel.Primitives.cs
    startLine: 952
  assemblies:
  - System.ServiceModel.Primitives
  namespace: System.ServiceModel.Channels
  summary: "\n<p>When overridden in a derived class, gets the media type value that is used by the encoder.</p>\n"
  syntax:
    content: public abstract string MediaType { get; }
    content.vb: Public MustOverride ReadOnly Property MediaType As String
    parameters: []
    return:
      type: System.String
      description: "\n<p>The media type that is supported by the message encoder.</p>\n"
  modifiers.csharp:
  - public
  - abstract
  - get
  modifiers.vb:
  - Public
  - MustOverride
  - ReadOnly
  nameWithType: MessageEncoder.MediaType
- uid: System.ServiceModel.Channels.MessageEncoder.MessageVersion
  commentId: P:System.ServiceModel.Channels.MessageEncoder.MessageVersion
  id: MessageVersion
  parent: System.ServiceModel.Channels.MessageEncoder
  langs:
  - csharp
  - vb
  name: MessageVersion
  fullName: System.ServiceModel.Channels.MessageEncoder.MessageVersion
  type: Property
  source:
    remote:
      path: src/System.ServiceModel.Primitives/ref/System.ServiceModel.Primitives.cs
      branch: master
      repo: https://github.com/dotnet/wcf.git
    id: MessageVersion
    path: src/System.ServiceModel.Primitives/ref/System.ServiceModel.Primitives.cs
    startLine: 953
  assemblies:
  - System.ServiceModel.Primitives
  namespace: System.ServiceModel.Channels
  summary: "\n<p>When overridden in a derived class, gets the message version value that is used by the encoder.</p>\n"
  syntax:
    content: public abstract MessageVersion MessageVersion { get; }
    content.vb: Public MustOverride ReadOnly Property MessageVersion As MessageVersion
    parameters: []
    return:
      type: System.ServiceModel.Channels.MessageVersion
      description: "\n<p>The <xref href=\"System.ServiceModel.Channels.MessageVersion\" data-throw-if-not-resolved=\"false\"></xref> that is used by the encoder.</p>\n"
  modifiers.csharp:
  - public
  - abstract
  - get
  modifiers.vb:
  - Public
  - MustOverride
  - ReadOnly
  nameWithType: MessageEncoder.MessageVersion
- uid: System.ServiceModel.Channels.MessageEncoder.GetProperty``1
  commentId: M:System.ServiceModel.Channels.MessageEncoder.GetProperty``1
  id: GetProperty``1
  parent: System.ServiceModel.Channels.MessageEncoder
  langs:
  - csharp
  - vb
  name: GetProperty<T>()
  fullName: System.ServiceModel.Channels.MessageEncoder.GetProperty<T>()
  type: Method
  source:
    remote:
      path: src/System.ServiceModel.Primitives/ref/System.ServiceModel.Primitives.cs
      branch: master
      repo: https://github.com/dotnet/wcf.git
    id: GetProperty
    path: src/System.ServiceModel.Primitives/ref/System.ServiceModel.Primitives.cs
    startLine: 954
  assemblies:
  - System.ServiceModel.Primitives
  namespace: System.ServiceModel.Channels
  summary: "\n<p>Returns a typed object requested, if present, from the appropriate layer in the channel stack.</p>\n"
  syntax:
    content: 'public virtual T GetProperty<T>()where T : class'
    content.vb: Public Overridable Function GetProperty(Of T As Class) As T
    typeParameters:
    - id: T
      description: "\n<p>The typed object for which the method is querying.</p>\n"
    return:
      type: '{T}'
      description: "\n<p>The typed object <em>T </em>requested if it is present or <strong>null</strong> if it is not.</p>\n"
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
  fullName.vb: System.ServiceModel.Channels.MessageEncoder.GetProperty(Of T)()
  name.vb: GetProperty(Of T)()
  nameWithType: MessageEncoder.GetProperty<T>()
  nameWithType.vb: MessageEncoder.GetProperty(Of T)()
- uid: System.ServiceModel.Channels.MessageEncoder.IsContentTypeSupported(System.String)
  commentId: M:System.ServiceModel.Channels.MessageEncoder.IsContentTypeSupported(System.String)
  id: IsContentTypeSupported(System.String)
  parent: System.ServiceModel.Channels.MessageEncoder
  langs:
  - csharp
  - vb
  name: IsContentTypeSupported(String)
  fullName: System.ServiceModel.Channels.MessageEncoder.IsContentTypeSupported(System.String)
  type: Method
  source:
    remote:
      path: src/System.ServiceModel.Primitives/ref/System.ServiceModel.Primitives.cs
      branch: master
      repo: https://github.com/dotnet/wcf.git
    id: IsContentTypeSupported
    path: src/System.ServiceModel.Primitives/ref/System.ServiceModel.Primitives.cs
    startLine: 955
  assemblies:
  - System.ServiceModel.Primitives
  namespace: System.ServiceModel.Channels
  summary: "\n<p>Returns a value that indicates whether a specified message-level content-type value is supported by the message encoder.</p>\n"
  syntax:
    content: public virtual bool IsContentTypeSupported(string contentType)
    content.vb: Public Overridable Function IsContentTypeSupported(contentType As String) As Boolean
    parameters:
    - id: contentType
      type: System.String
      description: "\n<p>The message-level content-type being tested.</p>\n"
    return:
      type: System.Boolean
      description: "\n<p>\n<strong>true</strong> if the message-level content-type specified is supported; otherwise <strong>false</strong>.</p>\n"
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
  nameWithType: MessageEncoder.IsContentTypeSupported(String)
- uid: System.ServiceModel.Channels.MessageEncoder.ReadMessage(System.ArraySegment{System.Byte},System.ServiceModel.Channels.BufferManager)
  commentId: M:System.ServiceModel.Channels.MessageEncoder.ReadMessage(System.ArraySegment{System.Byte},System.ServiceModel.Channels.BufferManager)
  id: ReadMessage(System.ArraySegment{System.Byte},System.ServiceModel.Channels.BufferManager)
  parent: System.ServiceModel.Channels.MessageEncoder
  langs:
  - csharp
  - vb
  name: ReadMessage(ArraySegment<Byte>, BufferManager)
  fullName: System.ServiceModel.Channels.MessageEncoder.ReadMessage(System.ArraySegment<System.Byte>, System.ServiceModel.Channels.BufferManager)
  type: Method
  source:
    remote:
      path: src/System.ServiceModel.Primitives/ref/System.ServiceModel.Primitives.cs
      branch: master
      repo: https://github.com/dotnet/wcf.git
    id: ReadMessage
    path: src/System.ServiceModel.Primitives/ref/System.ServiceModel.Primitives.cs
    startLine: 956
  assemblies:
  - System.ServiceModel.Primitives
  namespace: System.ServiceModel.Channels
  summary: "\n<p>When overridden in a derived class, reads a message from a specified buffer.</p>\n"
  syntax:
    content: public Message ReadMessage(ArraySegment<byte> buffer, BufferManager bufferManager)
    content.vb: Public Function ReadMessage(buffer As ArraySegment(Of Byte), bufferManager As BufferManager) As Message
    parameters:
    - id: buffer
      type: System.ArraySegment{System.Byte}
      description: "\n<p>A <xref href=\"System.ArraySegment`1\" data-throw-if-not-resolved=\"false\"></xref> of type <xref href=\"System.Byte\" data-throw-if-not-resolved=\"false\"></xref> that provides the buffer from which the message is deserialized.</p>\n"
    - id: bufferManager
      type: System.ServiceModel.Channels.BufferManager
      description: "\n<p>The <xref href=\"System.ServiceModel.Channels.BufferManager\" data-throw-if-not-resolved=\"false\"></xref> that manages the buffer from which the message is deserialized.</p>\n"
    return:
      type: System.ServiceModel.Channels.Message
      description: "\n<p>The <xref href=\"System.ServiceModel.Channels.Message\" data-throw-if-not-resolved=\"false\"></xref> that is read from the buffer specified.</p>\n"
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: System.ServiceModel.Channels.MessageEncoder.ReadMessage(System.ArraySegment(Of System.Byte), System.ServiceModel.Channels.BufferManager)
  name.vb: ReadMessage(ArraySegment(Of Byte), BufferManager)
  nameWithType: MessageEncoder.ReadMessage(ArraySegment<Byte>, BufferManager)
  nameWithType.vb: MessageEncoder.ReadMessage(ArraySegment(Of Byte), BufferManager)
- uid: System.ServiceModel.Channels.MessageEncoder.ReadMessage(System.ArraySegment{System.Byte},System.ServiceModel.Channels.BufferManager,System.String)
  commentId: M:System.ServiceModel.Channels.MessageEncoder.ReadMessage(System.ArraySegment{System.Byte},System.ServiceModel.Channels.BufferManager,System.String)
  id: ReadMessage(System.ArraySegment{System.Byte},System.ServiceModel.Channels.BufferManager,System.String)
  parent: System.ServiceModel.Channels.MessageEncoder
  langs:
  - csharp
  - vb
  name: ReadMessage(ArraySegment<Byte>, BufferManager, String)
  fullName: System.ServiceModel.Channels.MessageEncoder.ReadMessage(System.ArraySegment<System.Byte>, System.ServiceModel.Channels.BufferManager, System.String)
  type: Method
  source:
    remote:
      path: src/System.ServiceModel.Primitives/ref/System.ServiceModel.Primitives.cs
      branch: master
      repo: https://github.com/dotnet/wcf.git
    id: ReadMessage
    path: src/System.ServiceModel.Primitives/ref/System.ServiceModel.Primitives.cs
    startLine: 957
  assemblies:
  - System.ServiceModel.Primitives
  namespace: System.ServiceModel.Channels
  summary: "\n<p>When overridden in a derived class, reads a message from a specified stream.</p>\n"
  syntax:
    content: public abstract Message ReadMessage(ArraySegment<byte> buffer, BufferManager bufferManager, string contentType)
    content.vb: Public MustOverride Function ReadMessage(buffer As ArraySegment(Of Byte), bufferManager As BufferManager, contentType As String) As Message
    parameters:
    - id: buffer
      type: System.ArraySegment{System.Byte}
      description: "\n<p>A <xref href=\"System.ArraySegment`1\" data-throw-if-not-resolved=\"false\"></xref> of type <xref href=\"System.Byte\" data-throw-if-not-resolved=\"false\"></xref> that provides the buffer from which the message is deserialized.</p>\n"
    - id: bufferManager
      type: System.ServiceModel.Channels.BufferManager
      description: "\n<p>The <xref href=\"System.ServiceModel.Channels.BufferManager\" data-throw-if-not-resolved=\"false\"></xref> that manages the buffer from which the message is deserialized.</p>\n"
    - id: contentType
      type: System.String
      description: "\n<p>The Multipurpose Internet Mail Extensions (MIME) message-level content-type.</p>\n"
    return:
      type: System.ServiceModel.Channels.Message
      description: "\n<p>The <xref href=\"System.ServiceModel.Channels.Message\" data-throw-if-not-resolved=\"false\"></xref> that is read from the stream specified.</p>\n"
  modifiers.csharp:
  - public
  - abstract
  modifiers.vb:
  - Public
  - MustOverride
  fullName.vb: System.ServiceModel.Channels.MessageEncoder.ReadMessage(System.ArraySegment(Of System.Byte), System.ServiceModel.Channels.BufferManager, System.String)
  name.vb: ReadMessage(ArraySegment(Of Byte), BufferManager, String)
  nameWithType: MessageEncoder.ReadMessage(ArraySegment<Byte>, BufferManager, String)
  nameWithType.vb: MessageEncoder.ReadMessage(ArraySegment(Of Byte), BufferManager, String)
- uid: System.ServiceModel.Channels.MessageEncoder.ReadMessage(System.IO.Stream,System.Int32)
  commentId: M:System.ServiceModel.Channels.MessageEncoder.ReadMessage(System.IO.Stream,System.Int32)
  id: ReadMessage(System.IO.Stream,System.Int32)
  parent: System.ServiceModel.Channels.MessageEncoder
  langs:
  - csharp
  - vb
  name: ReadMessage(Stream, Int32)
  fullName: System.ServiceModel.Channels.MessageEncoder.ReadMessage(System.IO.Stream, System.Int32)
  type: Method
  source:
    remote:
      path: src/System.ServiceModel.Primitives/ref/System.ServiceModel.Primitives.cs
      branch: master
      repo: https://github.com/dotnet/wcf.git
    id: ReadMessage
    path: src/System.ServiceModel.Primitives/ref/System.ServiceModel.Primitives.cs
    startLine: 958
  assemblies:
  - System.ServiceModel.Primitives
  namespace: System.ServiceModel.Channels
  summary: "\n<p>When overridden in a derived class, reads a message from a specified stream.</p>\n"
  syntax:
    content: public Message ReadMessage(Stream stream, int maxSizeOfHeaders)
    content.vb: Public Function ReadMessage(stream As Stream, maxSizeOfHeaders As Integer) As Message
    parameters:
    - id: stream
      type: System.IO.Stream
      description: "\n<p>The <xref href=\"System.IO.Stream\" data-throw-if-not-resolved=\"false\"></xref> object from which the message is read.</p>\n"
    - id: maxSizeOfHeaders
      type: System.Int32
      description: "\n<p>The maximum size of the headers that can be read from the message.</p>\n"
    return:
      type: System.ServiceModel.Channels.Message
      description: "\n<p>The <xref href=\"System.ServiceModel.Channels.Message\" data-throw-if-not-resolved=\"false\"></xref> that is read from the stream specified.</p>\n"
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  nameWithType: MessageEncoder.ReadMessage(Stream, Int32)
- uid: System.ServiceModel.Channels.MessageEncoder.ReadMessage(System.IO.Stream,System.Int32,System.String)
  commentId: M:System.ServiceModel.Channels.MessageEncoder.ReadMessage(System.IO.Stream,System.Int32,System.String)
  id: ReadMessage(System.IO.Stream,System.Int32,System.String)
  parent: System.ServiceModel.Channels.MessageEncoder
  langs:
  - csharp
  - vb
  name: ReadMessage(Stream, Int32, String)
  fullName: System.ServiceModel.Channels.MessageEncoder.ReadMessage(System.IO.Stream, System.Int32, System.String)
  type: Method
  source:
    remote:
      path: src/System.ServiceModel.Primitives/ref/System.ServiceModel.Primitives.cs
      branch: master
      repo: https://github.com/dotnet/wcf.git
    id: ReadMessage
    path: src/System.ServiceModel.Primitives/ref/System.ServiceModel.Primitives.cs
    startLine: 959
  assemblies:
  - System.ServiceModel.Primitives
  namespace: System.ServiceModel.Channels
  summary: "\n<p>When overridden in a derived class, reads a message from a specified stream.</p>\n"
  syntax:
    content: public abstract Message ReadMessage(Stream stream, int maxSizeOfHeaders, string contentType)
    content.vb: Public MustOverride Function ReadMessage(stream As Stream, maxSizeOfHeaders As Integer, contentType As String) As Message
    parameters:
    - id: stream
      type: System.IO.Stream
      description: "\n<p>The <xref href=\"System.IO.Stream\" data-throw-if-not-resolved=\"false\"></xref> object from which the message is read.</p>\n"
    - id: maxSizeOfHeaders
      type: System.Int32
      description: "\n<p>The maximum size of the headers that can be read from the message.</p>\n"
    - id: contentType
      type: System.String
      description: "\n<p>The Multipurpose Internet Mail Extensions (MIME) message-level content-type.</p>\n"
    return:
      type: System.ServiceModel.Channels.Message
      description: "\n<p>The <xref href=\"System.ServiceModel.Channels.Message\" data-throw-if-not-resolved=\"false\"></xref> that is read from the stream specified.</p>\n"
  modifiers.csharp:
  - public
  - abstract
  modifiers.vb:
  - Public
  - MustOverride
  nameWithType: MessageEncoder.ReadMessage(Stream, Int32, String)
- uid: System.ServiceModel.Channels.MessageEncoder.ToString
  commentId: M:System.ServiceModel.Channels.MessageEncoder.ToString
  id: ToString
  parent: System.ServiceModel.Channels.MessageEncoder
  langs:
  - csharp
  - vb
  name: ToString()
  fullName: System.ServiceModel.Channels.MessageEncoder.ToString()
  type: Method
  source:
    remote:
      path: src/System.ServiceModel.Primitives/ref/System.ServiceModel.Primitives.cs
      branch: master
      repo: https://github.com/dotnet/wcf.git
    id: ToString
    path: src/System.ServiceModel.Primitives/ref/System.ServiceModel.Primitives.cs
    startLine: 960
  assemblies:
  - System.ServiceModel.Primitives
  namespace: System.ServiceModel.Channels
  summary: "\n<p>Returns the content type that is used by the message encoder.</p>\n"
  syntax:
    content: public override string ToString()
    content.vb: Public Overrides Function ToString As String
    return:
      type: System.String
      description: "\n<p>The content type that is used by the message encoder.</p>\n"
  overridden: System.Object.ToString
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
  nameWithType: MessageEncoder.ToString()
- uid: System.ServiceModel.Channels.MessageEncoder.WriteMessage(System.ServiceModel.Channels.Message,System.Int32,System.ServiceModel.Channels.BufferManager)
  commentId: M:System.ServiceModel.Channels.MessageEncoder.WriteMessage(System.ServiceModel.Channels.Message,System.Int32,System.ServiceModel.Channels.BufferManager)
  id: WriteMessage(System.ServiceModel.Channels.Message,System.Int32,System.ServiceModel.Channels.BufferManager)
  parent: System.ServiceModel.Channels.MessageEncoder
  langs:
  - csharp
  - vb
  name: WriteMessage(Message, Int32, BufferManager)
  fullName: System.ServiceModel.Channels.MessageEncoder.WriteMessage(System.ServiceModel.Channels.Message, System.Int32, System.ServiceModel.Channels.BufferManager)
  type: Method
  source:
    remote:
      path: src/System.ServiceModel.Primitives/ref/System.ServiceModel.Primitives.cs
      branch: master
      repo: https://github.com/dotnet/wcf.git
    id: WriteMessage
    path: src/System.ServiceModel.Primitives/ref/System.ServiceModel.Primitives.cs
    startLine: 961
  assemblies:
  - System.ServiceModel.Primitives
  namespace: System.ServiceModel.Channels
  summary: "\n<p>Writes a message less than a specified size to a byte array buffer.</p>\n"
  syntax:
    content: public ArraySegment<byte> WriteMessage(Message message, int maxMessageSize, BufferManager bufferManager)
    content.vb: Public Function WriteMessage(message As Message, maxMessageSize As Integer, bufferManager As BufferManager) As ArraySegment(Of Byte)
    parameters:
    - id: message
      type: System.ServiceModel.Channels.Message
      description: "\n<p>The <xref href=\"System.ServiceModel.Channels.Message\" data-throw-if-not-resolved=\"false\"></xref> to write to the message buffer.</p>\n"
    - id: maxMessageSize
      type: System.Int32
      description: "\n<p>The maximum message size that can be written.</p>\n"
    - id: bufferManager
      type: System.ServiceModel.Channels.BufferManager
      description: "\n<p>The <xref href=\"System.ServiceModel.Channels.BufferManager\" data-throw-if-not-resolved=\"false\"></xref> that manages the buffer to which the message is written.</p>\n"
    return:
      type: System.ArraySegment{System.Byte}
      description: "\n<p>A <xref href=\"System.ArraySegment`1\" data-throw-if-not-resolved=\"false\"></xref> of type <strong>byte</strong> that provides the buffer to which the message is serialized.</p>\n"
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  nameWithType: MessageEncoder.WriteMessage(Message, Int32, BufferManager)
- uid: System.ServiceModel.Channels.MessageEncoder.WriteMessage(System.ServiceModel.Channels.Message,System.Int32,System.ServiceModel.Channels.BufferManager,System.Int32)
  commentId: M:System.ServiceModel.Channels.MessageEncoder.WriteMessage(System.ServiceModel.Channels.Message,System.Int32,System.ServiceModel.Channels.BufferManager,System.Int32)
  id: WriteMessage(System.ServiceModel.Channels.Message,System.Int32,System.ServiceModel.Channels.BufferManager,System.Int32)
  parent: System.ServiceModel.Channels.MessageEncoder
  langs:
  - csharp
  - vb
  name: WriteMessage(Message, Int32, BufferManager, Int32)
  fullName: System.ServiceModel.Channels.MessageEncoder.WriteMessage(System.ServiceModel.Channels.Message, System.Int32, System.ServiceModel.Channels.BufferManager, System.Int32)
  type: Method
  source:
    remote:
      path: src/System.ServiceModel.Primitives/ref/System.ServiceModel.Primitives.cs
      branch: master
      repo: https://github.com/dotnet/wcf.git
    id: WriteMessage
    path: src/System.ServiceModel.Primitives/ref/System.ServiceModel.Primitives.cs
    startLine: 962
  assemblies:
  - System.ServiceModel.Primitives
  namespace: System.ServiceModel.Channels
  summary: "\n<p>When overridden in a derived class, writes a message of less than a specified size to a byte array buffer at the specified offset.</p>\n"
  syntax:
    content: public abstract ArraySegment<byte> WriteMessage(Message message, int maxMessageSize, BufferManager bufferManager, int messageOffset)
    content.vb: Public MustOverride Function WriteMessage(message As Message, maxMessageSize As Integer, bufferManager As BufferManager, messageOffset As Integer) As ArraySegment(Of Byte)
    parameters:
    - id: message
      type: System.ServiceModel.Channels.Message
      description: "\n<p>The <xref href=\"System.ServiceModel.Channels.Message\" data-throw-if-not-resolved=\"false\"></xref> to write to the message buffer.</p>\n"
    - id: maxMessageSize
      type: System.Int32
      description: "\n<p>The maximum message size that can be written.</p>\n"
    - id: bufferManager
      type: System.ServiceModel.Channels.BufferManager
      description: "\n<p>The <xref href=\"System.ServiceModel.Channels.BufferManager\" data-throw-if-not-resolved=\"false\"></xref> that manages the buffer to which the message is written.</p>\n"
    - id: messageOffset
      type: System.Int32
      description: "\n<p>The offset of the segment that begins from the start of the byte array that provides the buffer.</p>\n"
    return:
      type: System.ArraySegment{System.Byte}
      description: "\n<p>A <xref href=\"System.ArraySegment`1\" data-throw-if-not-resolved=\"false\"></xref> of type <strong>byte</strong> that provides the buffer to which the message is serialized.</p>\n"
  modifiers.csharp:
  - public
  - abstract
  modifiers.vb:
  - Public
  - MustOverride
  nameWithType: MessageEncoder.WriteMessage(Message, Int32, BufferManager, Int32)
- uid: System.ServiceModel.Channels.MessageEncoder.WriteMessage(System.ServiceModel.Channels.Message,System.IO.Stream)
  commentId: M:System.ServiceModel.Channels.MessageEncoder.WriteMessage(System.ServiceModel.Channels.Message,System.IO.Stream)
  id: WriteMessage(System.ServiceModel.Channels.Message,System.IO.Stream)
  parent: System.ServiceModel.Channels.MessageEncoder
  langs:
  - csharp
  - vb
  name: WriteMessage(Message, Stream)
  fullName: System.ServiceModel.Channels.MessageEncoder.WriteMessage(System.ServiceModel.Channels.Message, System.IO.Stream)
  type: Method
  source:
    remote:
      path: src/System.ServiceModel.Primitives/ref/System.ServiceModel.Primitives.cs
      branch: master
      repo: https://github.com/dotnet/wcf.git
    id: WriteMessage
    path: src/System.ServiceModel.Primitives/ref/System.ServiceModel.Primitives.cs
    startLine: 963
  assemblies:
  - System.ServiceModel.Primitives
  namespace: System.ServiceModel.Channels
  summary: "\n<p>When overridden in a derived class, writes a message to a specified stream.</p>\n"
  syntax:
    content: public abstract void WriteMessage(Message message, Stream stream)
    content.vb: Public MustOverride Sub WriteMessage(message As Message, stream As Stream)
    parameters:
    - id: message
      type: System.ServiceModel.Channels.Message
      description: "\n<p>The <xref href=\"System.ServiceModel.Channels.Message\" data-throw-if-not-resolved=\"false\"></xref> to write to the <em>stream</em>.</p>\n"
    - id: stream
      type: System.IO.Stream
      description: "\n<p>The <xref href=\"System.IO.Stream\" data-throw-if-not-resolved=\"false\"></xref> object to which the <em>message</em> is written.</p>\n"
  modifiers.csharp:
  - public
  - abstract
  modifiers.vb:
  - Public
  - MustOverride
  nameWithType: MessageEncoder.WriteMessage(Message, Stream)
references:
- uid: System.ServiceModel.Channels
  isExternal: false
  name: System.ServiceModel.Channels
  fullName: System.ServiceModel.Channels
  commentId: N:System.ServiceModel.Channels
  nameWithType: System.ServiceModel.Channels
- uid: System.Object
  parent: System
  isExternal: false
  name: Object
  fullName: System.Object
  commentId: T:System.Object
  nameWithType: Object
- uid: System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
  commentId: M:System.Object.Equals(System.Object)
  nameWithType: Object.Equals(Object)
- uid: System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
  commentId: M:System.Object.Equals(System.Object,System.Object)
  nameWithType: Object.Equals(Object, Object)
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
- uid: System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  commentId: M:System.Object.GetHashCode
  nameWithType: Object.GetHashCode()
- uid: System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  commentId: M:System.Object.GetType
  nameWithType: Object.GetType()
- uid: System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  commentId: M:System.Object.MemberwiseClone
  nameWithType: Object.MemberwiseClone()
- uid: System
  isExternal: false
  name: System
  fullName: System
  commentId: N:System
  nameWithType: System
- uid: System.String
  parent: System
  isExternal: false
  name: String
  fullName: System.String
  commentId: T:System.String
  nameWithType: String
- uid: System.ServiceModel.Channels.MessageVersion
  parent: System.ServiceModel.Channels
  isExternal: false
  name: MessageVersion
  fullName: System.ServiceModel.Channels.MessageVersion
  commentId: T:System.ServiceModel.Channels.MessageVersion
  nameWithType: MessageVersion
- uid: '{T}'
  definition: T
  name: T
  fullName: T
  commentId: '!:T'
  nameWithType: T
- uid: T
  isExternal: false
  name: T
  fullName: T
  nameWithType: T
- uid: System.Boolean
  parent: System
  isExternal: false
  name: Boolean
  fullName: System.Boolean
  commentId: T:System.Boolean
  nameWithType: Boolean
- uid: System.ArraySegment{System.Byte}
  parent: System
  definition: System.ArraySegment`1
  name: ArraySegment<Byte>
  fullName: System.ArraySegment<System.Byte>
  fullname.vb: System.ArraySegment(Of System.Byte)
  name.vb: ArraySegment(Of Byte)
  spec.csharp:
  - uid: System.ArraySegment`1
    name: ArraySegment
    fullName: System.ArraySegment
    isExternal: true
  - name: <
    fullName: <
  - uid: System.Byte
    name: Byte
    fullName: System.Byte
    isExternal: true
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: System.ArraySegment`1
    name: ArraySegment
    fullName: System.ArraySegment
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - uid: System.Byte
    name: Byte
    fullName: System.Byte
    isExternal: true
  - name: )
    fullName: )
  commentId: T:System.ArraySegment{System.Byte}
  nameWithType: ArraySegment<Byte>
  nameWithType.vb: ArraySegment(Of Byte)
- uid: System.ServiceModel.Channels.BufferManager
  parent: System.ServiceModel.Channels
  isExternal: false
  name: BufferManager
  fullName: System.ServiceModel.Channels.BufferManager
  commentId: T:System.ServiceModel.Channels.BufferManager
  nameWithType: BufferManager
- uid: System.ServiceModel.Channels.Message
  parent: System.ServiceModel.Channels
  isExternal: false
  name: Message
  fullName: System.ServiceModel.Channels.Message
  commentId: T:System.ServiceModel.Channels.Message
  nameWithType: Message
- uid: System.ArraySegment`1
  parent: System
  isExternal: false
  name: ArraySegment<T>
  fullName: System.ArraySegment<T>
  fullname.vb: System.ArraySegment(Of T)
  name.vb: ArraySegment(Of T)
  spec.csharp:
  - uid: System.ArraySegment`1
    name: ArraySegment
    fullName: System.ArraySegment
  - name: <
    fullName: <
  - name: T
    fullName: T
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: System.ArraySegment`1
    name: ArraySegment
    fullName: System.ArraySegment
  - name: '(Of '
    fullName: '(Of '
  - name: T
    fullName: T
  - name: )
    fullName: )
  commentId: T:System.ArraySegment`1
  nameWithType: ArraySegment<T>
  nameWithType.vb: ArraySegment(Of T)
- uid: System.IO.Stream
  parent: System.IO
  isExternal: false
  name: Stream
  fullName: System.IO.Stream
  commentId: T:System.IO.Stream
  nameWithType: Stream
- uid: System.Int32
  parent: System
  isExternal: false
  name: Int32
  fullName: System.Int32
  commentId: T:System.Int32
  nameWithType: Int32
- uid: System.IO
  isExternal: false
  name: System.IO
  fullName: System.IO
  commentId: N:System.IO
  nameWithType: System.IO
- uid: System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  commentId: M:System.Object.ToString
  nameWithType: Object.ToString()
