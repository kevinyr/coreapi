### YamlMime:ManagedReference
items:
- uid: System.Net.Http.HttpResponseMessage
  commentId: T:System.Net.Http.HttpResponseMessage
  id: HttpResponseMessage
  parent: System.Net.Http
  children:
  - System.Net.Http.HttpResponseMessage.#ctor
  - System.Net.Http.HttpResponseMessage.#ctor(System.Net.HttpStatusCode)
  - System.Net.Http.HttpResponseMessage.Content
  - System.Net.Http.HttpResponseMessage.Dispose
  - System.Net.Http.HttpResponseMessage.Dispose(System.Boolean)
  - System.Net.Http.HttpResponseMessage.EnsureSuccessStatusCode
  - System.Net.Http.HttpResponseMessage.Headers
  - System.Net.Http.HttpResponseMessage.IsSuccessStatusCode
  - System.Net.Http.HttpResponseMessage.ReasonPhrase
  - System.Net.Http.HttpResponseMessage.RequestMessage
  - System.Net.Http.HttpResponseMessage.StatusCode
  - System.Net.Http.HttpResponseMessage.ToString
  - System.Net.Http.HttpResponseMessage.Version
  langs:
  - csharp
  - vb
  name: HttpResponseMessage
  nameWithType: HttpResponseMessage
  fullName: System.Net.Http.HttpResponseMessage
  type: Class
  source:
    remote:
      path: src/System.Net.Http/ref/System.Net.Http.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: HttpResponseMessage
    path: src/System.Net.Http/ref/System.Net.Http.cs
    startLine: 182
  assemblies:
  - System.Net.Http
  namespace: System.Net.Http
  summary: "\n<p>Represents a HTTP response message including the status code and data.</p>\n"
  syntax:
    content: 'public class HttpResponseMessage : IDisposable'
    content.vb: >-
      Public Class HttpResponseMessage
          Implements IDisposable
  inheritance:
  - System.Object
  implements:
  - System.IDisposable
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: System.Net.Http.HttpResponseMessage.#ctor
  commentId: M:System.Net.Http.HttpResponseMessage.#ctor
  id: '#ctor'
  parent: System.Net.Http.HttpResponseMessage
  langs:
  - csharp
  - vb
  name: HttpResponseMessage()
  nameWithType: HttpResponseMessage.HttpResponseMessage()
  fullName: System.Net.Http.HttpResponseMessage.HttpResponseMessage()
  type: Constructor
  source:
    remote:
      path: src/System.Net.Http/ref/System.Net.Http.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: .ctor
    path: src/System.Net.Http/ref/System.Net.Http.cs
    startLine: 184
  assemblies:
  - System.Net.Http
  namespace: System.Net.Http
  summary: "\n<p>Initializes a new instance of the <xref href=\"System.Net.Http.HttpResponseMessage\" data-throw-if-not-resolved=\"false\"></xref> class.</p>\n"
  syntax:
    content: public HttpResponseMessage()
    content.vb: Public Sub New
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: System.Net.Http.HttpResponseMessage.#ctor(System.Net.HttpStatusCode)
  commentId: M:System.Net.Http.HttpResponseMessage.#ctor(System.Net.HttpStatusCode)
  id: '#ctor(System.Net.HttpStatusCode)'
  parent: System.Net.Http.HttpResponseMessage
  langs:
  - csharp
  - vb
  name: HttpResponseMessage(HttpStatusCode)
  nameWithType: HttpResponseMessage.HttpResponseMessage(HttpStatusCode)
  fullName: System.Net.Http.HttpResponseMessage.HttpResponseMessage(System.Net.HttpStatusCode)
  type: Constructor
  source:
    remote:
      path: src/System.Net.Http/ref/System.Net.Http.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: .ctor
    path: src/System.Net.Http/ref/System.Net.Http.cs
    startLine: 185
  assemblies:
  - System.Net.Http
  namespace: System.Net.Http
  summary: "\n<p>Initializes a new instance of the <xref href=\"System.Net.Http.HttpResponseMessage\" data-throw-if-not-resolved=\"false\"></xref> class with a specific <xref href=\"System.Net.Http.HttpResponseMessage.StatusCode\" data-throw-if-not-resolved=\"false\"></xref>.</p>\n"
  syntax:
    content: public HttpResponseMessage(HttpStatusCode statusCode)
    content.vb: Public Sub New(statusCode As HttpStatusCode)
    parameters:
    - id: statusCode
      type: System.Net.HttpStatusCode
      description: "\n<p>The status code of the HTTP response.</p>\n"
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: System.Net.Http.HttpResponseMessage.Content
  commentId: P:System.Net.Http.HttpResponseMessage.Content
  id: Content
  parent: System.Net.Http.HttpResponseMessage
  langs:
  - csharp
  - vb
  name: Content
  nameWithType: HttpResponseMessage.Content
  fullName: System.Net.Http.HttpResponseMessage.Content
  type: Property
  source:
    remote:
      path: src/System.Net.Http/ref/System.Net.Http.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: Content
    path: src/System.Net.Http/ref/System.Net.Http.cs
    startLine: 186
  assemblies:
  - System.Net.Http
  namespace: System.Net.Http
  summary: "\n<p>Gets or sets the content of a HTTP response message. </p>\n"
  syntax:
    content: public HttpContent Content { get; set; }
    content.vb: Public Property Content As HttpContent
    parameters: []
    return:
      type: System.Net.Http.HttpContent
      description: "\n<p>Returns <xref href=\"System.Net.Http.HttpContent\" data-throw-if-not-resolved=\"false\"></xref>.</p>\n<p>The content of the HTTP response message.</p>\n"
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: System.Net.Http.HttpResponseMessage.Headers
  commentId: P:System.Net.Http.HttpResponseMessage.Headers
  id: Headers
  parent: System.Net.Http.HttpResponseMessage
  langs:
  - csharp
  - vb
  name: Headers
  nameWithType: HttpResponseMessage.Headers
  fullName: System.Net.Http.HttpResponseMessage.Headers
  type: Property
  source:
    remote:
      path: src/System.Net.Http/ref/System.Net.Http.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: Headers
    path: src/System.Net.Http/ref/System.Net.Http.cs
    startLine: 187
  assemblies:
  - System.Net.Http
  namespace: System.Net.Http
  summary: "\n<p>Gets the collection of HTTP response headers. </p>\n"
  syntax:
    content: public HttpResponseHeaders Headers { get; }
    content.vb: Public ReadOnly Property Headers As HttpResponseHeaders
    parameters: []
    return:
      type: System.Net.Http.Headers.HttpResponseHeaders
      description: "\n<p>Returns <xref href=\"System.Net.Http.Headers.HttpResponseHeaders\" data-throw-if-not-resolved=\"false\"></xref>.</p>\n<p>The collection of HTTP response headers.</p>\n"
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: System.Net.Http.HttpResponseMessage.IsSuccessStatusCode
  commentId: P:System.Net.Http.HttpResponseMessage.IsSuccessStatusCode
  id: IsSuccessStatusCode
  parent: System.Net.Http.HttpResponseMessage
  langs:
  - csharp
  - vb
  name: IsSuccessStatusCode
  nameWithType: HttpResponseMessage.IsSuccessStatusCode
  fullName: System.Net.Http.HttpResponseMessage.IsSuccessStatusCode
  type: Property
  source:
    remote:
      path: src/System.Net.Http/ref/System.Net.Http.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: IsSuccessStatusCode
    path: src/System.Net.Http/ref/System.Net.Http.cs
    startLine: 188
  assemblies:
  - System.Net.Http
  namespace: System.Net.Http
  summary: "\n<p>Gets a value that indicates if the HTTP response was successful.</p>\n"
  syntax:
    content: public bool IsSuccessStatusCode { get; }
    content.vb: Public ReadOnly Property IsSuccessStatusCode As Boolean
    parameters: []
    return:
      type: System.Boolean
      description: "\n<p>Returns <xref href=\"System.Boolean\" data-throw-if-not-resolved=\"false\"></xref>.</p>\n<p>A value that indicates if the HTTP response was successful. <strong>true</strong> if <xref href=\"System.Net.Http.HttpResponseMessage.StatusCode\" data-throw-if-not-resolved=\"false\"></xref> was in the range 200-299; otherwise <strong>false</strong>.</p>\n"
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: System.Net.Http.HttpResponseMessage.ReasonPhrase
  commentId: P:System.Net.Http.HttpResponseMessage.ReasonPhrase
  id: ReasonPhrase
  parent: System.Net.Http.HttpResponseMessage
  langs:
  - csharp
  - vb
  name: ReasonPhrase
  nameWithType: HttpResponseMessage.ReasonPhrase
  fullName: System.Net.Http.HttpResponseMessage.ReasonPhrase
  type: Property
  source:
    remote:
      path: src/System.Net.Http/ref/System.Net.Http.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: ReasonPhrase
    path: src/System.Net.Http/ref/System.Net.Http.cs
    startLine: 189
  assemblies:
  - System.Net.Http
  namespace: System.Net.Http
  summary: "\n<p>Gets or sets the reason phrase which typically is sent by servers together with the status code. </p>\n"
  syntax:
    content: public string ReasonPhrase { get; set; }
    content.vb: Public Property ReasonPhrase As String
    parameters: []
    return:
      type: System.String
      description: "\n<p>Returns <xref href=\"System.String\" data-throw-if-not-resolved=\"false\"></xref>.</p>\n<p>The reason phrase sent by the server.</p>\n"
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: System.Net.Http.HttpResponseMessage.RequestMessage
  commentId: P:System.Net.Http.HttpResponseMessage.RequestMessage
  id: RequestMessage
  parent: System.Net.Http.HttpResponseMessage
  langs:
  - csharp
  - vb
  name: RequestMessage
  nameWithType: HttpResponseMessage.RequestMessage
  fullName: System.Net.Http.HttpResponseMessage.RequestMessage
  type: Property
  source:
    remote:
      path: src/System.Net.Http/ref/System.Net.Http.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: RequestMessage
    path: src/System.Net.Http/ref/System.Net.Http.cs
    startLine: 190
  assemblies:
  - System.Net.Http
  namespace: System.Net.Http
  summary: "\n<p>Gets or sets the request message which led to this response message.</p>\n"
  syntax:
    content: public HttpRequestMessage RequestMessage { get; set; }
    content.vb: Public Property RequestMessage As HttpRequestMessage
    parameters: []
    return:
      type: System.Net.Http.HttpRequestMessage
      description: "\n<p>Returns <xref href=\"System.Net.Http.HttpRequestMessage\" data-throw-if-not-resolved=\"false\"></xref>.</p>\n<p>The request message which led to this response message.</p>\n"
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: System.Net.Http.HttpResponseMessage.StatusCode
  commentId: P:System.Net.Http.HttpResponseMessage.StatusCode
  id: StatusCode
  parent: System.Net.Http.HttpResponseMessage
  langs:
  - csharp
  - vb
  name: StatusCode
  nameWithType: HttpResponseMessage.StatusCode
  fullName: System.Net.Http.HttpResponseMessage.StatusCode
  type: Property
  source:
    remote:
      path: src/System.Net.Http/ref/System.Net.Http.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: StatusCode
    path: src/System.Net.Http/ref/System.Net.Http.cs
    startLine: 191
  assemblies:
  - System.Net.Http
  namespace: System.Net.Http
  summary: "\n<p>Gets or sets the status code of the HTTP response.</p>\n"
  syntax:
    content: public HttpStatusCode StatusCode { get; set; }
    content.vb: Public Property StatusCode As HttpStatusCode
    parameters: []
    return:
      type: System.Net.HttpStatusCode
      description: "\n<p>Returns <xref href=\"System.Net.HttpStatusCode\" data-throw-if-not-resolved=\"false\"></xref>.</p>\n<p>The status code of the HTTP response.</p>\n"
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: System.Net.Http.HttpResponseMessage.Version
  commentId: P:System.Net.Http.HttpResponseMessage.Version
  id: Version
  parent: System.Net.Http.HttpResponseMessage
  langs:
  - csharp
  - vb
  name: Version
  nameWithType: HttpResponseMessage.Version
  fullName: System.Net.Http.HttpResponseMessage.Version
  type: Property
  source:
    remote:
      path: src/System.Net.Http/ref/System.Net.Http.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: Version
    path: src/System.Net.Http/ref/System.Net.Http.cs
    startLine: 192
  assemblies:
  - System.Net.Http
  namespace: System.Net.Http
  summary: "\n<p>Gets or sets the HTTP message version. </p>\n"
  syntax:
    content: public Version Version { get; set; }
    content.vb: Public Property Version As Version
    parameters: []
    return:
      type: System.Version
      description: "\n<p>Returns <xref href=\"System.Version\" data-throw-if-not-resolved=\"false\"></xref>.</p>\n<p>The HTTP message version. The default is 1.1. </p>\n"
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: System.Net.Http.HttpResponseMessage.Dispose
  commentId: M:System.Net.Http.HttpResponseMessage.Dispose
  id: Dispose
  parent: System.Net.Http.HttpResponseMessage
  langs:
  - csharp
  - vb
  name: Dispose()
  nameWithType: HttpResponseMessage.Dispose()
  fullName: System.Net.Http.HttpResponseMessage.Dispose()
  type: Method
  source:
    remote:
      path: src/System.Net.Http/ref/System.Net.Http.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: Dispose
    path: src/System.Net.Http/ref/System.Net.Http.cs
    startLine: 193
  assemblies:
  - System.Net.Http
  namespace: System.Net.Http
  summary: "\n<p>Releases the unmanaged resources and disposes of unmanaged resources used by the <xref href=\"System.Net.Http.HttpResponseMessage\" data-throw-if-not-resolved=\"false\"></xref>.</p>\n"
  syntax:
    content: public void Dispose()
    content.vb: Public Sub Dispose
  implements:
  - System.IDisposable.Dispose
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: System.Net.Http.HttpResponseMessage.Dispose(System.Boolean)
  commentId: M:System.Net.Http.HttpResponseMessage.Dispose(System.Boolean)
  id: Dispose(System.Boolean)
  parent: System.Net.Http.HttpResponseMessage
  langs:
  - csharp
  - vb
  name: Dispose(Boolean)
  nameWithType: HttpResponseMessage.Dispose(Boolean)
  fullName: System.Net.Http.HttpResponseMessage.Dispose(System.Boolean)
  type: Method
  source:
    remote:
      path: src/System.Net.Http/ref/System.Net.Http.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: Dispose
    path: src/System.Net.Http/ref/System.Net.Http.cs
    startLine: 194
  assemblies:
  - System.Net.Http
  namespace: System.Net.Http
  summary: "\n<p>Releases the unmanaged resources used by the <xref href=\"System.Net.Http.HttpResponseMessage\" data-throw-if-not-resolved=\"false\"></xref> and optionally disposes of the managed resources.</p>\n"
  syntax:
    content: protected virtual void Dispose(bool disposing)
    content.vb: Protected Overridable Sub Dispose(disposing As Boolean)
    parameters:
    - id: disposing
      type: System.Boolean
      description: "\n<p>\n<strong>true</strong> to release both managed and unmanaged resources; <strong>false</strong> to releases only unmanaged resources.</p>\n"
  modifiers.csharp:
  - protected
  - virtual
  modifiers.vb:
  - Protected
  - Overridable
- uid: System.Net.Http.HttpResponseMessage.EnsureSuccessStatusCode
  commentId: M:System.Net.Http.HttpResponseMessage.EnsureSuccessStatusCode
  id: EnsureSuccessStatusCode
  parent: System.Net.Http.HttpResponseMessage
  langs:
  - csharp
  - vb
  name: EnsureSuccessStatusCode()
  nameWithType: HttpResponseMessage.EnsureSuccessStatusCode()
  fullName: System.Net.Http.HttpResponseMessage.EnsureSuccessStatusCode()
  type: Method
  source:
    remote:
      path: src/System.Net.Http/ref/System.Net.Http.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: EnsureSuccessStatusCode
    path: src/System.Net.Http/ref/System.Net.Http.cs
    startLine: 195
  assemblies:
  - System.Net.Http
  namespace: System.Net.Http
  summary: "\n<p>Throws an exception if the <xref href=\"System.Net.Http.HttpResponseMessage.IsSuccessStatusCode\" data-throw-if-not-resolved=\"false\"></xref> property for the HTTP response is <strong>false</strong>.</p>\n"
  syntax:
    content: public HttpResponseMessage EnsureSuccessStatusCode()
    content.vb: Public Function EnsureSuccessStatusCode As HttpResponseMessage
    return:
      type: System.Net.Http.HttpResponseMessage
      description: "\n<p>Returns <xref href=\"System.Net.Http.HttpResponseMessage\" data-throw-if-not-resolved=\"false\"></xref>.</p>\n<p>The HTTP response message if the call is successful.</p>\n"
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: System.Net.Http.HttpResponseMessage.ToString
  commentId: M:System.Net.Http.HttpResponseMessage.ToString
  id: ToString
  parent: System.Net.Http.HttpResponseMessage
  langs:
  - csharp
  - vb
  name: ToString()
  nameWithType: HttpResponseMessage.ToString()
  fullName: System.Net.Http.HttpResponseMessage.ToString()
  type: Method
  source:
    remote:
      path: src/System.Net.Http/ref/System.Net.Http.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: ToString
    path: src/System.Net.Http/ref/System.Net.Http.cs
    startLine: 196
  assemblies:
  - System.Net.Http
  namespace: System.Net.Http
  summary: "\n<p>Returns a string that represents the current object.</p>\n"
  syntax:
    content: public override string ToString()
    content.vb: Public Overrides Function ToString As String
    return:
      type: System.String
      description: "\n<p>Returns <xref href=\"System.String\" data-throw-if-not-resolved=\"false\"></xref>.</p>\n<p>A string representation of the current object.</p>\n"
  overridden: System.Object.ToString
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
references:
- uid: System.Net.Http
  commentId: N:System.Net.Http
  isExternal: false
  name: System.Net.Http
  nameWithType: System.Net.Http
  fullName: System.Net.Http
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: false
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.IDisposable
  commentId: T:System.IDisposable
  parent: System
  isExternal: false
  name: IDisposable
  nameWithType: IDisposable
  fullName: System.IDisposable
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: System.Net.HttpStatusCode
  commentId: T:System.Net.HttpStatusCode
  parent: System.Net
  isExternal: false
  name: HttpStatusCode
  nameWithType: HttpStatusCode
  fullName: System.Net.HttpStatusCode
- uid: System.Net
  commentId: N:System.Net
  isExternal: false
  name: System.Net
  nameWithType: System.Net
  fullName: System.Net
- uid: System.Net.Http.HttpContent
  commentId: T:System.Net.Http.HttpContent
  parent: System.Net.Http
  isExternal: false
  name: HttpContent
  nameWithType: HttpContent
  fullName: System.Net.Http.HttpContent
- uid: System.Net.Http.Headers.HttpResponseHeaders
  commentId: T:System.Net.Http.Headers.HttpResponseHeaders
  parent: System.Net.Http.Headers
  isExternal: false
  name: HttpResponseHeaders
  nameWithType: HttpResponseHeaders
  fullName: System.Net.Http.Headers.HttpResponseHeaders
- uid: System.Net.Http.Headers
  commentId: N:System.Net.Http.Headers
  isExternal: false
  name: System.Net.Http.Headers
  nameWithType: System.Net.Http.Headers
  fullName: System.Net.Http.Headers
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: false
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: false
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Net.Http.HttpRequestMessage
  commentId: T:System.Net.Http.HttpRequestMessage
  parent: System.Net.Http
  isExternal: false
  name: HttpRequestMessage
  nameWithType: HttpRequestMessage
  fullName: System.Net.Http.HttpRequestMessage
- uid: System.Version
  commentId: T:System.Version
  parent: System
  isExternal: false
  name: Version
  nameWithType: Version
  fullName: System.Version
- uid: System.IDisposable.Dispose
  commentId: M:System.IDisposable.Dispose
  parent: System.IDisposable
  isExternal: false
  name: Dispose()
  nameWithType: IDisposable.Dispose()
  fullName: System.IDisposable.Dispose()
  spec.csharp:
  - uid: System.IDisposable.Dispose
    name: Dispose
    nameWithType: IDisposable.Dispose
    fullName: System.IDisposable.Dispose
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.IDisposable.Dispose
    name: Dispose
    nameWithType: IDisposable.Dispose
    fullName: System.IDisposable.Dispose
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Net.Http.HttpResponseMessage
  commentId: T:System.Net.Http.HttpResponseMessage
  parent: System.Net.Http
  isExternal: false
  name: HttpResponseMessage
  nameWithType: HttpResponseMessage
  fullName: System.Net.Http.HttpResponseMessage
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
