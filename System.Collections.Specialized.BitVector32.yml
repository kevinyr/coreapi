### YamlMime:ManagedReference
items:
- uid: System.Collections.Specialized.BitVector32
  commentId: T:System.Collections.Specialized.BitVector32
  id: BitVector32
  parent: System.Collections.Specialized
  children:
  - System.Collections.Specialized.BitVector32.#ctor(System.Collections.Specialized.BitVector32)
  - System.Collections.Specialized.BitVector32.#ctor(System.Int32)
  - System.Collections.Specialized.BitVector32.CreateMask
  - System.Collections.Specialized.BitVector32.CreateMask(System.Int32)
  - System.Collections.Specialized.BitVector32.CreateSection(System.Int16)
  - System.Collections.Specialized.BitVector32.CreateSection(System.Int16,System.Collections.Specialized.BitVector32.Section)
  - System.Collections.Specialized.BitVector32.Data
  - System.Collections.Specialized.BitVector32.Equals(System.Object)
  - System.Collections.Specialized.BitVector32.GetHashCode
  - System.Collections.Specialized.BitVector32.Item(System.Collections.Specialized.BitVector32.Section)
  - System.Collections.Specialized.BitVector32.Item(System.Int32)
  - System.Collections.Specialized.BitVector32.ToString
  - System.Collections.Specialized.BitVector32.ToString(System.Collections.Specialized.BitVector32)
  langs:
  - csharp
  - vb
  name: BitVector32
  nameWithType: BitVector32
  fullName: System.Collections.Specialized.BitVector32
  type: Struct
  source:
    remote:
      path: src/System.Collections.Specialized/src/System/Collections/Specialized/BitVector32.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: BitVector32
    path: src/System.Collections.Specialized/src/System/Collections/Specialized/BitVector32.cs
    startLine: 13
  assemblies:
  - System.Collections.Specialized
  namespace: System.Collections.Specialized
  summary: "\n<p>Provides a simple structure that stores Boolean values and small integers in 32 bits of memory.</p>\n"
  syntax:
    content: public struct BitVector32
    content.vb: Public Structure BitVector32
  seealso:
  - linkId: System.Collections.BitArray
    commentId: T:System.Collections.BitArray
  inheritedMembers:
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetType
  attributes:
  - type: System.Runtime.InteropServices.StructLayoutAttribute
    ctor: System.Runtime.InteropServices.StructLayoutAttribute.#ctor(System.Runtime.InteropServices.LayoutKind)
    arguments:
    - type: System.Runtime.InteropServices.LayoutKind
      value: 0
  modifiers.csharp:
  - public
  - struct
  modifiers.vb:
  - Public
  - Structure
- uid: System.Collections.Specialized.BitVector32.#ctor(System.Collections.Specialized.BitVector32)
  commentId: M:System.Collections.Specialized.BitVector32.#ctor(System.Collections.Specialized.BitVector32)
  id: '#ctor(System.Collections.Specialized.BitVector32)'
  parent: System.Collections.Specialized.BitVector32
  langs:
  - csharp
  - vb
  name: BitVector32(BitVector32)
  nameWithType: BitVector32.BitVector32(BitVector32)
  fullName: System.Collections.Specialized.BitVector32.BitVector32(System.Collections.Specialized.BitVector32)
  type: Constructor
  source:
    remote:
      path: src/System.Collections.Specialized/src/System/Collections/Specialized/BitVector32.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: .ctor
    path: src/System.Collections.Specialized/src/System/Collections/Specialized/BitVector32.cs
    startLine: 29
  assemblies:
  - System.Collections.Specialized
  namespace: System.Collections.Specialized
  summary: "\n<p>Initializes a new instance of the <xref href=\"System.Collections.Specialized.BitVector32\" data-throw-if-not-resolved=\"false\"></xref> structure containing the data represented in an existing <xref href=\"System.Collections.Specialized.BitVector32\" data-throw-if-not-resolved=\"false\"></xref> structure.</p>\n"
  syntax:
    content: public BitVector32(BitVector32 value)
    content.vb: Public Sub New(value As BitVector32)
    parameters:
    - id: value
      type: System.Collections.Specialized.BitVector32
      description: "\n<p>A <xref href=\"System.Collections.Specialized.BitVector32\" data-throw-if-not-resolved=\"false\"></xref> structure that contains the data to copy. </p>\n"
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: System.Collections.Specialized.BitVector32.#ctor(System.Int32)
  commentId: M:System.Collections.Specialized.BitVector32.#ctor(System.Int32)
  id: '#ctor(System.Int32)'
  parent: System.Collections.Specialized.BitVector32
  langs:
  - csharp
  - vb
  name: BitVector32(Int32)
  nameWithType: BitVector32.BitVector32(Int32)
  fullName: System.Collections.Specialized.BitVector32.BitVector32(System.Int32)
  type: Constructor
  source:
    remote:
      path: src/System.Collections.Specialized/src/System/Collections/Specialized/BitVector32.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: .ctor
    path: src/System.Collections.Specialized/src/System/Collections/Specialized/BitVector32.cs
    startLine: 20
  assemblies:
  - System.Collections.Specialized
  namespace: System.Collections.Specialized
  summary: "\n<p>Initializes a new instance of the <xref href=\"System.Collections.Specialized.BitVector32\" data-throw-if-not-resolved=\"false\"></xref> structure containing the data represented in an integer.</p>\n"
  syntax:
    content: public BitVector32(int data)
    content.vb: Public Sub New(data As Integer)
    parameters:
    - id: data
      type: System.Int32
      description: "\n<p>An integer representing the data of the new <xref href=\"System.Collections.Specialized.BitVector32\" data-throw-if-not-resolved=\"false\"></xref>. </p>\n"
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: System.Collections.Specialized.BitVector32.Data
  commentId: P:System.Collections.Specialized.BitVector32.Data
  id: Data
  parent: System.Collections.Specialized.BitVector32
  langs:
  - csharp
  - vb
  name: Data
  nameWithType: BitVector32.Data
  fullName: System.Collections.Specialized.BitVector32.Data
  type: Property
  source:
    remote:
      path: src/System.Collections.Specialized/src/System/Collections/Specialized/BitVector32.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: Data
    path: src/System.Collections.Specialized/src/System/Collections/Specialized/BitVector32.cs
    startLine: 81
  assemblies:
  - System.Collections.Specialized
  namespace: System.Collections.Specialized
  summary: "\n<p>Gets the value of the <xref href=\"System.Collections.Specialized.BitVector32\" data-throw-if-not-resolved=\"false\"></xref> as an integer.</p>\n"
  syntax:
    content: public int Data { get; }
    content.vb: Public ReadOnly Property Data As Integer
    parameters: []
    return:
      type: System.Int32
      description: "\n<p>The value of the <xref href=\"System.Collections.Specialized.BitVector32\" data-throw-if-not-resolved=\"false\"></xref> as an integer.</p>\n"
  seealso:
  - linkId: System.Collections.Specialized.BitVector32.Item(System.Int32)
    commentId: P:System.Collections.Specialized.BitVector32.Item(System.Int32)
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: System.Collections.Specialized.BitVector32.Item(System.Collections.Specialized.BitVector32.Section)
  commentId: P:System.Collections.Specialized.BitVector32.Item(System.Collections.Specialized.BitVector32.Section)
  id: Item(System.Collections.Specialized.BitVector32.Section)
  parent: System.Collections.Specialized.BitVector32
  langs:
  - csharp
  - vb
  name: Item[BitVector32.Section]
  nameWithType: BitVector32.Item[BitVector32.Section]
  fullName: System.Collections.Specialized.BitVector32.Item[System.Collections.Specialized.BitVector32.Section]
  type: Property
  source:
    remote:
      path: src/System.Collections.Specialized/src/System/Collections/Specialized/BitVector32.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: this[]
    path: src/System.Collections.Specialized/src/System/Collections/Specialized/BitVector32.cs
    startLine: 59
  assemblies:
  - System.Collections.Specialized
  namespace: System.Collections.Specialized
  summary: "\n<p>Gets or sets the value stored in the specified <xref href=\"System.Collections.Specialized.BitVector32.Section\" data-throw-if-not-resolved=\"false\"></xref>.</p>\n"
  syntax:
    content: public int this[BitVector32.Section section] { get; set; }
    content.vb: Public Property Item(section As BitVector32.Section) As Integer
    parameters:
    - id: section
      type: System.Collections.Specialized.BitVector32.Section
      description: "\n<p>A <xref href=\"System.Collections.Specialized.BitVector32.Section\" data-throw-if-not-resolved=\"false\"></xref> that contains the value to get or set. </p>\n"
    return:
      type: System.Int32
      description: "\n<p>The value stored in the specified <xref href=\"System.Collections.Specialized.BitVector32.Section\" data-throw-if-not-resolved=\"false\"></xref>.</p>\n"
  seealso:
  - linkId: System.Collections.Specialized.BitVector32.CreateSection(System.Int16)
    commentId: M:System.Collections.Specialized.BitVector32.CreateSection(System.Int16)
  - linkId: System.Collections.Specialized.BitVector32.Section
    commentId: T:System.Collections.Specialized.BitVector32.Section
  nameWithType.vb: BitVector32.Item(BitVector32.Section)
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
  fullName.vb: System.Collections.Specialized.BitVector32.Item(System.Collections.Specialized.BitVector32.Section)
  name.vb: Item(BitVector32.Section)
- uid: System.Collections.Specialized.BitVector32.Item(System.Int32)
  commentId: P:System.Collections.Specialized.BitVector32.Item(System.Int32)
  id: Item(System.Int32)
  parent: System.Collections.Specialized.BitVector32
  langs:
  - csharp
  - vb
  name: Item[Int32]
  nameWithType: BitVector32.Item[Int32]
  fullName: System.Collections.Specialized.BitVector32.Item[System.Int32]
  type: Property
  source:
    remote:
      path: src/System.Collections.Specialized/src/System/Collections/Specialized/BitVector32.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: this[]
    path: src/System.Collections.Specialized/src/System/Collections/Specialized/BitVector32.cs
    startLine: 37
  assemblies:
  - System.Collections.Specialized
  namespace: System.Collections.Specialized
  summary: "\n<p>Gets or sets the state of the bit flag indicated by the specified mask.</p>\n"
  syntax:
    content: public bool this[int bit] { get; set; }
    content.vb: Public Property Item(bit As Integer) As Boolean
    parameters:
    - id: bit
      type: System.Int32
      description: "\n<p>A mask that indicates the bit to get or set. </p>\n"
    return:
      type: System.Boolean
      description: "\n<p>\n<strong>true</strong> if the specified bit flag is on (1); otherwise, <strong>false</strong>.</p>\n"
  seealso:
  - linkId: System.Collections.Specialized.BitVector32.CreateMask
    commentId: M:System.Collections.Specialized.BitVector32.CreateMask
  nameWithType.vb: BitVector32.Item(Int32)
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
  fullName.vb: System.Collections.Specialized.BitVector32.Item(System.Int32)
  name.vb: Item(Int32)
- uid: System.Collections.Specialized.BitVector32.CreateMask
  commentId: M:System.Collections.Specialized.BitVector32.CreateMask
  id: CreateMask
  parent: System.Collections.Specialized.BitVector32
  langs:
  - csharp
  - vb
  name: CreateMask()
  nameWithType: BitVector32.CreateMask()
  fullName: System.Collections.Specialized.BitVector32.CreateMask()
  type: Method
  source:
    remote:
      path: src/System.Collections.Specialized/src/System/Collections/Specialized/BitVector32.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: CreateMask
    path: src/System.Collections.Specialized/src/System/Collections/Specialized/BitVector32.cs
    startLine: 104
  assemblies:
  - System.Collections.Specialized
  namespace: System.Collections.Specialized
  summary: "\n<p>Creates the first mask in a series of masks that can be used to retrieve individual bits in a <xref href=\"System.Collections.Specialized.BitVector32\" data-throw-if-not-resolved=\"false\"></xref> that is set up as bit flags.</p>\n"
  syntax:
    content: public static int CreateMask()
    content.vb: Public Shared Function CreateMask As Integer
    return:
      type: System.Int32
      description: "\n<p>A mask that isolates the first bit flag in the <xref href=\"System.Collections.Specialized.BitVector32\" data-throw-if-not-resolved=\"false\"></xref>.</p>\n"
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: System.Collections.Specialized.BitVector32.CreateMask(System.Int32)
  commentId: M:System.Collections.Specialized.BitVector32.CreateMask(System.Int32)
  id: CreateMask(System.Int32)
  parent: System.Collections.Specialized.BitVector32
  langs:
  - csharp
  - vb
  name: CreateMask(Int32)
  nameWithType: BitVector32.CreateMask(Int32)
  fullName: System.Collections.Specialized.BitVector32.CreateMask(System.Int32)
  type: Method
  source:
    remote:
      path: src/System.Collections.Specialized/src/System/Collections/Specialized/BitVector32.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: CreateMask
    path: src/System.Collections.Specialized/src/System/Collections/Specialized/BitVector32.cs
    startLine: 112
  assemblies:
  - System.Collections.Specialized
  namespace: System.Collections.Specialized
  summary: "\n<p>Creates an additional mask following the specified mask in a series of masks that can be used to retrieve individual bits in a <xref href=\"System.Collections.Specialized.BitVector32\" data-throw-if-not-resolved=\"false\"></xref> that is set up as bit flags.</p>\n"
  syntax:
    content: public static int CreateMask(int previous)
    content.vb: Public Shared Function CreateMask(previous As Integer) As Integer
    parameters:
    - id: previous
      type: System.Int32
      description: "\n<p>The mask that indicates the previous bit flag. </p>\n"
    return:
      type: System.Int32
      description: "\n<p>A mask that isolates the bit flag following the one that <em>previous</em> points to in <xref href=\"System.Collections.Specialized.BitVector32\" data-throw-if-not-resolved=\"false\"></xref>.</p>\n"
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "\n<p>\n<em>previous</em> indicates the last bit flag in the <xref href=\"System.Collections.Specialized.BitVector32\" data-throw-if-not-resolved=\"false\"></xref>. </p>\n"
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: System.Collections.Specialized.BitVector32.CreateSection(System.Int16)
  commentId: M:System.Collections.Specialized.BitVector32.CreateSection(System.Int16)
  id: CreateSection(System.Int16)
  parent: System.Collections.Specialized.BitVector32
  langs:
  - csharp
  - vb
  name: CreateSection(Int16)
  nameWithType: BitVector32.CreateSection(Int16)
  fullName: System.Collections.Specialized.BitVector32.CreateSection(System.Int16)
  type: Method
  source:
    remote:
      path: src/System.Collections.Specialized/src/System/Collections/Specialized/BitVector32.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: CreateSection
    path: src/System.Collections.Specialized/src/System/Collections/Specialized/BitVector32.cs
    startLine: 153
  assemblies:
  - System.Collections.Specialized
  namespace: System.Collections.Specialized
  summary: "\n<p>Creates the first <xref href=\"System.Collections.Specialized.BitVector32.Section\" data-throw-if-not-resolved=\"false\"></xref> in a series of sections that contain small integers.</p>\n"
  syntax:
    content: public static BitVector32.Section CreateSection(short maxValue)
    content.vb: Public Shared Function CreateSection(maxValue As Short) As BitVector32.Section
    parameters:
    - id: maxValue
      type: System.Int16
      description: "\n<p>A 16-bit signed integer that specifies the maximum value for the new <xref href=\"System.Collections.Specialized.BitVector32.Section\" data-throw-if-not-resolved=\"false\"></xref>. </p>\n"
    return:
      type: System.Collections.Specialized.BitVector32.Section
      description: "\n<p>A <xref href=\"System.Collections.Specialized.BitVector32.Section\" data-throw-if-not-resolved=\"false\"></xref> that can hold a number from zero to <em>maxValue</em>.</p>\n"
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "\n<p>\n<em>maxValue</em> is less than 1. </p>\n"
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: System.Collections.Specialized.BitVector32.CreateSection(System.Int16,System.Collections.Specialized.BitVector32.Section)
  commentId: M:System.Collections.Specialized.BitVector32.CreateSection(System.Int16,System.Collections.Specialized.BitVector32.Section)
  id: CreateSection(System.Int16,System.Collections.Specialized.BitVector32.Section)
  parent: System.Collections.Specialized.BitVector32
  langs:
  - csharp
  - vb
  name: CreateSection(Int16, BitVector32.Section)
  nameWithType: BitVector32.CreateSection(Int16, BitVector32.Section)
  fullName: System.Collections.Specialized.BitVector32.CreateSection(System.Int16, System.Collections.Specialized.BitVector32.Section)
  type: Method
  source:
    remote:
      path: src/System.Collections.Specialized/src/System/Collections/Specialized/BitVector32.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: CreateSection
    path: src/System.Collections.Specialized/src/System/Collections/Specialized/BitVector32.cs
    startLine: 161
  assemblies:
  - System.Collections.Specialized
  namespace: System.Collections.Specialized
  summary: "\n<p>Creates a new <xref href=\"System.Collections.Specialized.BitVector32.Section\" data-throw-if-not-resolved=\"false\"></xref> following the specified <xref href=\"System.Collections.Specialized.BitVector32.Section\" data-throw-if-not-resolved=\"false\"></xref> in a series of sections that contain small integers.</p>\n"
  syntax:
    content: public static BitVector32.Section CreateSection(short maxValue, BitVector32.Section previous)
    content.vb: Public Shared Function CreateSection(maxValue As Short, previous As BitVector32.Section) As BitVector32.Section
    parameters:
    - id: maxValue
      type: System.Int16
      description: "\n<p>A 16-bit signed integer that specifies the maximum value for the new <xref href=\"System.Collections.Specialized.BitVector32.Section\" data-throw-if-not-resolved=\"false\"></xref>. </p>\n"
    - id: previous
      type: System.Collections.Specialized.BitVector32.Section
      description: "\n<p>The previous <xref href=\"System.Collections.Specialized.BitVector32.Section\" data-throw-if-not-resolved=\"false\"></xref> in the <xref href=\"System.Collections.Specialized.BitVector32\" data-throw-if-not-resolved=\"false\"></xref>. </p>\n"
    return:
      type: System.Collections.Specialized.BitVector32.Section
      description: "\n<p>A <xref href=\"System.Collections.Specialized.BitVector32.Section\" data-throw-if-not-resolved=\"false\"></xref> that can hold a number from zero to <em>maxValue</em>.</p>\n"
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "\n<p>\n<em>maxValue</em> is less than 1. </p>\n"
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "\n<p>\n<em>previous</em> includes the final bit in the <xref href=\"System.Collections.Specialized.BitVector32\" data-throw-if-not-resolved=\"false\"></xref>.</p>\n<p>-or- </p>\n<p>\n<em>maxValue</em> is greater than the highest value that can be represented by the number of bits after <em>previous</em>. </p>\n"
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: System.Collections.Specialized.BitVector32.Equals(System.Object)
  commentId: M:System.Collections.Specialized.BitVector32.Equals(System.Object)
  id: Equals(System.Object)
  parent: System.Collections.Specialized.BitVector32
  langs:
  - csharp
  - vb
  name: Equals(Object)
  nameWithType: BitVector32.Equals(Object)
  fullName: System.Collections.Specialized.BitVector32.Equals(System.Object)
  type: Method
  source:
    remote:
      path: src/System.Collections.Specialized/src/System/Collections/Specialized/BitVector32.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: Equals
    path: src/System.Collections.Specialized/src/System/Collections/Specialized/BitVector32.cs
    startLine: 181
  assemblies:
  - System.Collections.Specialized
  namespace: System.Collections.Specialized
  summary: "\n<p>Determines whether the specified object is equal to the <xref href=\"System.Collections.Specialized.BitVector32\" data-throw-if-not-resolved=\"false\"></xref>.</p>\n"
  syntax:
    content: public override bool Equals(object o)
    content.vb: Public Overrides Function Equals(o As Object) As Boolean
    parameters:
    - id: o
      type: System.Object
      description: "\n<p>The object to compare with the current <xref href=\"System.Collections.Specialized.BitVector32\" data-throw-if-not-resolved=\"false\"></xref>. </p>\n"
    return:
      type: System.Boolean
      description: "\n<p>\n<strong>true</strong> if the specified object is equal to the <xref href=\"System.Collections.Specialized.BitVector32\" data-throw-if-not-resolved=\"false\"></xref>; otherwise, <strong>false</strong>.</p>\n"
  overridden: System.ValueType.Equals(System.Object)
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
- uid: System.Collections.Specialized.BitVector32.GetHashCode
  commentId: M:System.Collections.Specialized.BitVector32.GetHashCode
  id: GetHashCode
  parent: System.Collections.Specialized.BitVector32
  langs:
  - csharp
  - vb
  name: GetHashCode()
  nameWithType: BitVector32.GetHashCode()
  fullName: System.Collections.Specialized.BitVector32.GetHashCode()
  type: Method
  source:
    remote:
      path: src/System.Collections.Specialized/src/System/Collections/Specialized/BitVector32.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: GetHashCode
    path: src/System.Collections.Specialized/src/System/Collections/Specialized/BitVector32.cs
    startLine: 191
  assemblies:
  - System.Collections.Specialized
  namespace: System.Collections.Specialized
  summary: "\n<p>Serves as a hash function for the <xref href=\"System.Collections.Specialized.BitVector32\" data-throw-if-not-resolved=\"false\"></xref>.</p>\n"
  syntax:
    content: public override int GetHashCode()
    content.vb: Public Overrides Function GetHashCode As Integer
    return:
      type: System.Int32
      description: "\n<p>A hash code for the <xref href=\"System.Collections.Specialized.BitVector32\" data-throw-if-not-resolved=\"false\"></xref>.</p>\n"
  overridden: System.ValueType.GetHashCode
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
- uid: System.Collections.Specialized.BitVector32.ToString
  commentId: M:System.Collections.Specialized.BitVector32.ToString
  id: ToString
  parent: System.Collections.Specialized.BitVector32
  langs:
  - csharp
  - vb
  name: ToString()
  nameWithType: BitVector32.ToString()
  fullName: System.Collections.Specialized.BitVector32.ToString()
  type: Method
  source:
    remote:
      path: src/System.Collections.Specialized/src/System/Collections/Specialized/BitVector32.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: ToString
    path: src/System.Collections.Specialized/src/System/Collections/Specialized/BitVector32.cs
    startLine: 217
  assemblies:
  - System.Collections.Specialized
  namespace: System.Collections.Specialized
  summary: "\n<p>Returns a string that represents the current <xref href=\"System.Collections.Specialized.BitVector32\" data-throw-if-not-resolved=\"false\"></xref>.</p>\n"
  syntax:
    content: public override string ToString()
    content.vb: Public Overrides Function ToString As String
    return:
      type: System.String
      description: "\n<p>A string that represents the current <xref href=\"System.Collections.Specialized.BitVector32\" data-throw-if-not-resolved=\"false\"></xref>.</p>\n"
  overridden: System.ValueType.ToString
  seealso:
  - linkId: System.Object.ToString
    commentId: M:System.Object.ToString
  - linkId: System.String
    commentId: T:System.String
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
- uid: System.Collections.Specialized.BitVector32.ToString(System.Collections.Specialized.BitVector32)
  commentId: M:System.Collections.Specialized.BitVector32.ToString(System.Collections.Specialized.BitVector32)
  id: ToString(System.Collections.Specialized.BitVector32)
  parent: System.Collections.Specialized.BitVector32
  langs:
  - csharp
  - vb
  name: ToString(BitVector32)
  nameWithType: BitVector32.ToString(BitVector32)
  fullName: System.Collections.Specialized.BitVector32.ToString(System.Collections.Specialized.BitVector32)
  type: Method
  source:
    remote:
      path: src/System.Collections.Specialized/src/System/Collections/Specialized/BitVector32.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: ToString
    path: src/System.Collections.Specialized/src/System/Collections/Specialized/BitVector32.cs
    startLine: 196
  assemblies:
  - System.Collections.Specialized
  namespace: System.Collections.Specialized
  summary: "\n<p>Returns a string that represents the specified <xref href=\"System.Collections.Specialized.BitVector32\" data-throw-if-not-resolved=\"false\"></xref>.</p>\n"
  syntax:
    content: public static string ToString(BitVector32 value)
    content.vb: Public Shared Function ToString(value As BitVector32) As String
    parameters:
    - id: value
      type: System.Collections.Specialized.BitVector32
      description: "\n<p>The <xref href=\"System.Collections.Specialized.BitVector32\" data-throw-if-not-resolved=\"false\"></xref> to represent. </p>\n"
    return:
      type: System.String
      description: "\n<p>A string that represents the specified <xref href=\"System.Collections.Specialized.BitVector32\" data-throw-if-not-resolved=\"false\"></xref>.</p>\n"
  seealso:
  - linkId: System.String
    commentId: T:System.String
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
references:
- uid: System.Collections.Specialized
  commentId: N:System.Collections.Specialized
  isExternal: false
  name: System.Collections.Specialized
  nameWithType: System.Collections.Specialized
  fullName: System.Collections.Specialized
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: false
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: System.Collections.Specialized.BitVector32
  commentId: T:System.Collections.Specialized.BitVector32
  parent: System.Collections.Specialized
  isExternal: false
  name: BitVector32
  nameWithType: BitVector32
  fullName: System.Collections.Specialized.BitVector32
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: false
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Collections.Specialized.BitVector32.Section
  commentId: T:System.Collections.Specialized.BitVector32.Section
  parent: System.Collections.Specialized
  isExternal: false
  name: BitVector32.Section
  nameWithType: BitVector32.Section
  fullName: System.Collections.Specialized.BitVector32.Section
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: false
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Int16
  commentId: T:System.Int16
  parent: System
  isExternal: false
  name: Int16
  nameWithType: Int16
  fullName: System.Int16
- uid: System.ValueType.Equals(System.Object)
  commentId: M:System.ValueType.Equals(System.Object)
  parent: System.ValueType
  isExternal: true
  name: Equals(Object)
  nameWithType: ValueType.Equals(Object)
  fullName: System.ValueType.Equals(System.Object)
  spec.csharp:
  - uid: System.ValueType.Equals(System.Object)
    name: Equals
    nameWithType: ValueType.Equals
    fullName: System.ValueType.Equals
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.ValueType.Equals(System.Object)
    name: Equals
    nameWithType: ValueType.Equals
    fullName: System.ValueType.Equals
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.ValueType
  commentId: T:System.ValueType
  parent: System
  isExternal: false
  name: ValueType
  nameWithType: ValueType
  fullName: System.ValueType
- uid: System.ValueType.GetHashCode
  commentId: M:System.ValueType.GetHashCode
  parent: System.ValueType
  isExternal: false
  name: GetHashCode()
  nameWithType: ValueType.GetHashCode()
  fullName: System.ValueType.GetHashCode()
  spec.csharp:
  - uid: System.ValueType.GetHashCode
    name: GetHashCode
    nameWithType: ValueType.GetHashCode
    fullName: System.ValueType.GetHashCode
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.ValueType.GetHashCode
    name: GetHashCode
    nameWithType: ValueType.GetHashCode
    fullName: System.ValueType.GetHashCode
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.ValueType.ToString
  commentId: M:System.ValueType.ToString
  parent: System.ValueType
  isExternal: false
  name: ToString()
  nameWithType: ValueType.ToString()
  fullName: System.ValueType.ToString()
  spec.csharp:
  - uid: System.ValueType.ToString
    name: ToString
    nameWithType: ValueType.ToString
    fullName: System.ValueType.ToString
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.ValueType.ToString
    name: ToString
    nameWithType: ValueType.ToString
    fullName: System.ValueType.ToString
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: false
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.InvalidOperationException
  commentId: T:System.InvalidOperationException
  parent: System
  isExternal: false
  name: InvalidOperationException
  nameWithType: InvalidOperationException
  fullName: System.InvalidOperationException
- uid: System.ArgumentException
  commentId: T:System.ArgumentException
  parent: System
  isExternal: false
  name: ArgumentException
  nameWithType: ArgumentException
  fullName: System.ArgumentException
