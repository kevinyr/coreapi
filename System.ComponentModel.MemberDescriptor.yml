### YamlMime:ManagedReference
items:
- uid: System.ComponentModel.MemberDescriptor
  commentId: T:System.ComponentModel.MemberDescriptor
  id: MemberDescriptor
  parent: System.ComponentModel
  children:
  - System.ComponentModel.MemberDescriptor.#ctor(System.ComponentModel.MemberDescriptor)
  - System.ComponentModel.MemberDescriptor.#ctor(System.ComponentModel.MemberDescriptor,System.Attribute[])
  - System.ComponentModel.MemberDescriptor.#ctor(System.String)
  - System.ComponentModel.MemberDescriptor.#ctor(System.String,System.Attribute[])
  - System.ComponentModel.MemberDescriptor.AttributeArray
  - System.ComponentModel.MemberDescriptor.Attributes
  - System.ComponentModel.MemberDescriptor.Category
  - System.ComponentModel.MemberDescriptor.CreateAttributeCollection
  - System.ComponentModel.MemberDescriptor.Description
  - System.ComponentModel.MemberDescriptor.DesignTimeOnly
  - System.ComponentModel.MemberDescriptor.DisplayName
  - System.ComponentModel.MemberDescriptor.Equals(System.Object)
  - System.ComponentModel.MemberDescriptor.FillAttributes(System.Collections.IList)
  - System.ComponentModel.MemberDescriptor.FindMethod(System.Type,System.String,System.Type[],System.Type)
  - System.ComponentModel.MemberDescriptor.FindMethod(System.Type,System.String,System.Type[],System.Type,System.Boolean)
  - System.ComponentModel.MemberDescriptor.GetHashCode
  - System.ComponentModel.MemberDescriptor.GetInvocationTarget(System.Type,System.Object)
  - System.ComponentModel.MemberDescriptor.GetSite(System.Object)
  - System.ComponentModel.MemberDescriptor.IsBrowsable
  - System.ComponentModel.MemberDescriptor.Name
  - System.ComponentModel.MemberDescriptor.NameHashCode
  langs:
  - csharp
  - vb
  name: MemberDescriptor
  nameWithType: MemberDescriptor
  fullName: System.ComponentModel.MemberDescriptor
  type: Class
  source:
    remote:
      path: src/System.ComponentModel.TypeConverter/src/System/ComponentModel/MemberDescriptor.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: MemberDescriptor
    path: src/System.ComponentModel.TypeConverter/src/System/ComponentModel/MemberDescriptor.cs
    startLine: 18
  assemblies:
  - System.ComponentModel.TypeConverter
  namespace: System.ComponentModel
  summary: "\n<p>Represents a class member, such as a property or event. This is an abstract base class.</p>\n"
  syntax:
    content: public abstract class MemberDescriptor
    content.vb: Public MustInherit Class MemberDescriptor
  seealso:
  - linkId: System.ComponentModel.PropertyDescriptor
    commentId: T:System.ComponentModel.PropertyDescriptor
  - linkId: System.ComponentModel.EventDescriptor
    commentId: T:System.ComponentModel.EventDescriptor
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetType
  - System.Object.MemberwiseClone
  modifiers.csharp:
  - public
  - abstract
  - class
  modifiers.vb:
  - Public
  - MustInherit
  - Class
- uid: System.ComponentModel.MemberDescriptor.#ctor(System.ComponentModel.MemberDescriptor)
  commentId: M:System.ComponentModel.MemberDescriptor.#ctor(System.ComponentModel.MemberDescriptor)
  id: '#ctor(System.ComponentModel.MemberDescriptor)'
  parent: System.ComponentModel.MemberDescriptor
  langs:
  - csharp
  - vb
  name: MemberDescriptor(MemberDescriptor)
  nameWithType: MemberDescriptor.MemberDescriptor(MemberDescriptor)
  fullName: System.ComponentModel.MemberDescriptor.MemberDescriptor(System.ComponentModel.MemberDescriptor)
  type: Constructor
  source:
    remote:
      path: src/System.ComponentModel.TypeConverter/src/System/ComponentModel/MemberDescriptor.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: .ctor
    path: src/System.ComponentModel.TypeConverter/src/System/ComponentModel/MemberDescriptor.cs
    startLine: 72
  assemblies:
  - System.ComponentModel.TypeConverter
  namespace: System.ComponentModel
  summary: "\n<p>Initializes a new instance of the <xref href=\"System.ComponentModel.MemberDescriptor\" data-throw-if-not-resolved=\"false\"></xref> class with the specified <xref href=\"System.ComponentModel.MemberDescriptor\" data-throw-if-not-resolved=\"false\"></xref>.</p>\n"
  syntax:
    content: protected MemberDescriptor(MemberDescriptor descr)
    content.vb: Protected Sub New(descr As MemberDescriptor)
    parameters:
    - id: descr
      type: System.ComponentModel.MemberDescriptor
      description: "\n<p>A <xref href=\"System.ComponentModel.MemberDescriptor\" data-throw-if-not-resolved=\"false\"></xref> that contains the name of the member and its attributes. </p>\n"
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: System.ComponentModel.MemberDescriptor.#ctor(System.ComponentModel.MemberDescriptor,System.Attribute[])
  commentId: M:System.ComponentModel.MemberDescriptor.#ctor(System.ComponentModel.MemberDescriptor,System.Attribute[])
  id: '#ctor(System.ComponentModel.MemberDescriptor,System.Attribute[])'
  parent: System.ComponentModel.MemberDescriptor
  langs:
  - csharp
  - vb
  name: MemberDescriptor(MemberDescriptor, Attribute[])
  nameWithType: MemberDescriptor.MemberDescriptor(MemberDescriptor, Attribute[])
  fullName: System.ComponentModel.MemberDescriptor.MemberDescriptor(System.ComponentModel.MemberDescriptor, System.Attribute[])
  type: Constructor
  source:
    remote:
      path: src/System.ComponentModel.TypeConverter/src/System/ComponentModel/MemberDescriptor.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: .ctor
    path: src/System.ComponentModel.TypeConverter/src/System/ComponentModel/MemberDescriptor.cs
    startLine: 93
  assemblies:
  - System.ComponentModel.TypeConverter
  namespace: System.ComponentModel
  summary: "\n<p>Initializes a new instance of the <xref href=\"System.ComponentModel.MemberDescriptor\" data-throw-if-not-resolved=\"false\"></xref> class with the name in the specified <xref href=\"System.ComponentModel.MemberDescriptor\" data-throw-if-not-resolved=\"false\"></xref> and the attributes in both the old <xref href=\"System.ComponentModel.MemberDescriptor\" data-throw-if-not-resolved=\"false\"></xref> and the <xref href=\"System.Attribute\" data-throw-if-not-resolved=\"false\"></xref> array.</p>\n"
  syntax:
    content: protected MemberDescriptor(MemberDescriptor oldMemberDescriptor, Attribute[] newAttributes)
    content.vb: Protected Sub New(oldMemberDescriptor As MemberDescriptor, newAttributes As Attribute())
    parameters:
    - id: oldMemberDescriptor
      type: System.ComponentModel.MemberDescriptor
      description: "\n<p>A <xref href=\"System.ComponentModel.MemberDescriptor\" data-throw-if-not-resolved=\"false\"></xref> that has the name of the member and its attributes. </p>\n"
    - id: newAttributes
      type: System.Attribute[]
      description: "\n<p>An array of <xref href=\"System.Attribute\" data-throw-if-not-resolved=\"false\"></xref> objects with the attributes you want to add to the member. </p>\n"
  nameWithType.vb: MemberDescriptor.MemberDescriptor(MemberDescriptor, Attribute())
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
  fullName.vb: System.ComponentModel.MemberDescriptor.MemberDescriptor(System.ComponentModel.MemberDescriptor, System.Attribute())
  name.vb: MemberDescriptor(MemberDescriptor, Attribute())
- uid: System.ComponentModel.MemberDescriptor.#ctor(System.String)
  commentId: M:System.ComponentModel.MemberDescriptor.#ctor(System.String)
  id: '#ctor(System.String)'
  parent: System.ComponentModel.MemberDescriptor
  langs:
  - csharp
  - vb
  name: MemberDescriptor(String)
  nameWithType: MemberDescriptor.MemberDescriptor(String)
  fullName: System.ComponentModel.MemberDescriptor.MemberDescriptor(System.String)
  type: Constructor
  source:
    remote:
      path: src/System.ComponentModel.TypeConverter/src/System/ComponentModel/MemberDescriptor.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: .ctor
    path: src/System.ComponentModel.TypeConverter/src/System/ComponentModel/MemberDescriptor.cs
    startLine: 38
  assemblies:
  - System.ComponentModel.TypeConverter
  namespace: System.ComponentModel
  summary: "\n<p>Initializes a new instance of the <xref href=\"System.ComponentModel.MemberDescriptor\" data-throw-if-not-resolved=\"false\"></xref> class with the specified name of the member.</p>\n"
  syntax:
    content: protected MemberDescriptor(string name)
    content.vb: Protected Sub New(name As String)
    parameters:
    - id: name
      type: System.String
      description: "\n<p>The name of the member. </p>\n"
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "\n<p>The name is an empty string (\"\") or <strong>null</strong>.</p>\n"
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: System.ComponentModel.MemberDescriptor.#ctor(System.String,System.Attribute[])
  commentId: M:System.ComponentModel.MemberDescriptor.#ctor(System.String,System.Attribute[])
  id: '#ctor(System.String,System.Attribute[])'
  parent: System.ComponentModel.MemberDescriptor
  langs:
  - csharp
  - vb
  name: MemberDescriptor(String, Attribute[])
  nameWithType: MemberDescriptor.MemberDescriptor(String, Attribute[])
  fullName: System.ComponentModel.MemberDescriptor.MemberDescriptor(System.String, System.Attribute[])
  type: Constructor
  source:
    remote:
      path: src/System.ComponentModel.TypeConverter/src/System/ComponentModel/MemberDescriptor.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: .ctor
    path: src/System.ComponentModel.TypeConverter/src/System/ComponentModel/MemberDescriptor.cs
    startLine: 47
  assemblies:
  - System.ComponentModel.TypeConverter
  namespace: System.ComponentModel
  summary: "\n<p>Initializes a new instance of the <xref href=\"System.ComponentModel.MemberDescriptor\" data-throw-if-not-resolved=\"false\"></xref> class with the specified name of the member and an array of attributes.</p>\n"
  syntax:
    content: protected MemberDescriptor(string name, Attribute[] attributes)
    content.vb: Protected Sub New(name As String, attributes As Attribute())
    parameters:
    - id: name
      type: System.String
      description: "\n<p>The name of the member. </p>\n"
    - id: attributes
      type: System.Attribute[]
      description: "\n<p>An array of type <xref href=\"System.Attribute\" data-throw-if-not-resolved=\"false\"></xref> that contains the member attributes. </p>\n"
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "\n<p>The name is an empty string (\"\") or <strong>null</strong>. </p>\n"
  nameWithType.vb: MemberDescriptor.MemberDescriptor(String, Attribute())
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
  fullName.vb: System.ComponentModel.MemberDescriptor.MemberDescriptor(System.String, System.Attribute())
  name.vb: MemberDescriptor(String, Attribute())
- uid: System.ComponentModel.MemberDescriptor.AttributeArray
  commentId: P:System.ComponentModel.MemberDescriptor.AttributeArray
  id: AttributeArray
  parent: System.ComponentModel.MemberDescriptor
  langs:
  - csharp
  - vb
  name: AttributeArray
  nameWithType: MemberDescriptor.AttributeArray
  fullName: System.ComponentModel.MemberDescriptor.AttributeArray
  type: Property
  source:
    remote:
      path: src/System.ComponentModel.TypeConverter/src/System/ComponentModel/MemberDescriptor.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: AttributeArray
    path: src/System.ComponentModel.TypeConverter/src/System/ComponentModel/MemberDescriptor.cs
    startLine: 130
  assemblies:
  - System.ComponentModel.TypeConverter
  namespace: System.ComponentModel
  summary: "\n<p>Gets or sets an array of attributes.</p>\n"
  syntax:
    content: protected virtual Attribute[] AttributeArray { get; set; }
    content.vb: Protected Overridable Property AttributeArray As Attribute()
    parameters: []
    return:
      type: System.Attribute[]
      description: "\n<p>An array of type <xref href=\"System.Attribute\" data-throw-if-not-resolved=\"false\"></xref> that contains the attributes of this member. </p>\n"
  seealso:
  - linkId: System.ComponentModel.MemberDescriptor.Attributes
    commentId: P:System.ComponentModel.MemberDescriptor.Attributes
  modifiers.csharp:
  - protected
  - virtual
  - get
  - set
  modifiers.vb:
  - Protected
  - Overridable
- uid: System.ComponentModel.MemberDescriptor.Attributes
  commentId: P:System.ComponentModel.MemberDescriptor.Attributes
  id: Attributes
  parent: System.ComponentModel.MemberDescriptor
  langs:
  - csharp
  - vb
  name: Attributes
  nameWithType: MemberDescriptor.Attributes
  fullName: System.ComponentModel.MemberDescriptor.Attributes
  type: Property
  source:
    remote:
      path: src/System.ComponentModel.TypeConverter/src/System/ComponentModel/MemberDescriptor.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: Attributes
    path: src/System.ComponentModel.TypeConverter/src/System/ComponentModel/MemberDescriptor.cs
    startLine: 155
  assemblies:
  - System.ComponentModel.TypeConverter
  namespace: System.ComponentModel
  summary: "\n<p>Gets the collection of attributes for this member.</p>\n"
  syntax:
    content: public virtual AttributeCollection Attributes { get; }
    content.vb: Public Overridable ReadOnly Property Attributes As AttributeCollection
    parameters: []
    return:
      type: System.ComponentModel.AttributeCollection
      description: "\n<p>An <xref href=\"System.ComponentModel.AttributeCollection\" data-throw-if-not-resolved=\"false\"></xref> that provides the attributes for this member, or an empty collection if there are no attributes in the <xref href=\"System.ComponentModel.MemberDescriptor.AttributeArray\" data-throw-if-not-resolved=\"false\"></xref>.</p>\n"
  seealso:
  - linkId: System.ComponentModel.MemberDescriptor.AttributeArray
    commentId: P:System.ComponentModel.MemberDescriptor.AttributeArray
  modifiers.csharp:
  - public
  - virtual
  - get
  modifiers.vb:
  - Public
  - Overridable
  - ReadOnly
- uid: System.ComponentModel.MemberDescriptor.Category
  commentId: P:System.ComponentModel.MemberDescriptor.Category
  id: Category
  parent: System.ComponentModel.MemberDescriptor
  langs:
  - csharp
  - vb
  name: Category
  nameWithType: MemberDescriptor.Category
  fullName: System.ComponentModel.MemberDescriptor.Category
  type: Property
  source:
    remote:
      path: src/System.ComponentModel.TypeConverter/src/System/ComponentModel/MemberDescriptor.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: Category
    path: src/System.ComponentModel.TypeConverter/src/System/ComponentModel/MemberDescriptor.cs
    startLine: 179
  assemblies:
  - System.ComponentModel.TypeConverter
  namespace: System.ComponentModel
  summary: "\n<p>Gets the name of the category to which the member belongs, as specified in the <xref href=\"System.ComponentModel.CategoryAttribute\" data-throw-if-not-resolved=\"false\"></xref>.</p>\n"
  syntax:
    content: public virtual string Category { get; }
    content.vb: Public Overridable ReadOnly Property Category As String
    parameters: []
    return:
      type: System.String
      description: "\n<p>The name of the category to which the member belongs. If there is no <xref href=\"System.ComponentModel.CategoryAttribute\" data-throw-if-not-resolved=\"false\"></xref>, the category name is set to the default category, <strong>Misc</strong>.</p>\n"
  seealso:
  - linkId: System.ComponentModel.MemberDescriptor.Description
    commentId: P:System.ComponentModel.MemberDescriptor.Description
  - linkId: System.ComponentModel.MemberDescriptor.IsBrowsable
    commentId: P:System.ComponentModel.MemberDescriptor.IsBrowsable
  - linkId: System.ComponentModel.MemberDescriptor.Name
    commentId: P:System.ComponentModel.MemberDescriptor.Name
  modifiers.csharp:
  - public
  - virtual
  - get
  modifiers.vb:
  - Public
  - Overridable
  - ReadOnly
- uid: System.ComponentModel.MemberDescriptor.Description
  commentId: P:System.ComponentModel.MemberDescriptor.Description
  id: Description
  parent: System.ComponentModel.MemberDescriptor
  langs:
  - csharp
  - vb
  name: Description
  nameWithType: MemberDescriptor.Description
  fullName: System.ComponentModel.MemberDescriptor.Description
  type: Property
  source:
    remote:
      path: src/System.ComponentModel.TypeConverter/src/System/ComponentModel/MemberDescriptor.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: Description
    path: src/System.ComponentModel.TypeConverter/src/System/ComponentModel/MemberDescriptor.cs
    startLine: 197
  assemblies:
  - System.ComponentModel.TypeConverter
  namespace: System.ComponentModel
  summary: "\n<p>Gets the description of the member, as specified in the <xref href=\"System.ComponentModel.DescriptionAttribute\" data-throw-if-not-resolved=\"false\"></xref>.</p>\n"
  syntax:
    content: public virtual string Description { get; }
    content.vb: Public Overridable ReadOnly Property Description As String
    parameters: []
    return:
      type: System.String
      description: "\n<p>The description of the member. If there is no <xref href=\"System.ComponentModel.DescriptionAttribute\" data-throw-if-not-resolved=\"false\"></xref>, the property value is set to the default, which is an empty string (\"\").</p>\n"
  seealso:
  - linkId: System.ComponentModel.MemberDescriptor.Category
    commentId: P:System.ComponentModel.MemberDescriptor.Category
  - linkId: System.ComponentModel.MemberDescriptor.IsBrowsable
    commentId: P:System.ComponentModel.MemberDescriptor.IsBrowsable
  - linkId: System.ComponentModel.MemberDescriptor.Name
    commentId: P:System.ComponentModel.MemberDescriptor.Name
  modifiers.csharp:
  - public
  - virtual
  - get
  modifiers.vb:
  - Public
  - Overridable
  - ReadOnly
- uid: System.ComponentModel.MemberDescriptor.DesignTimeOnly
  commentId: P:System.ComponentModel.MemberDescriptor.DesignTimeOnly
  id: DesignTimeOnly
  parent: System.ComponentModel.MemberDescriptor
  langs:
  - csharp
  - vb
  name: DesignTimeOnly
  nameWithType: MemberDescriptor.DesignTimeOnly
  fullName: System.ComponentModel.MemberDescriptor.DesignTimeOnly
  type: Property
  source:
    remote:
      path: src/System.ComponentModel.TypeConverter/src/System/ComponentModel/MemberDescriptor.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: DesignTimeOnly
    path: src/System.ComponentModel.TypeConverter/src/System/ComponentModel/MemberDescriptor.cs
    startLine: 261
  assemblies:
  - System.ComponentModel.TypeConverter
  namespace: System.ComponentModel
  summary: "\n<p>Gets whether this member should be set only at design time, as specified in the <xref href=\"System.ComponentModel.DesignOnlyAttribute\" data-throw-if-not-resolved=\"false\"></xref>.</p>\n"
  syntax:
    content: public virtual bool DesignTimeOnly { get; }
    content.vb: Public Overridable ReadOnly Property DesignTimeOnly As Boolean
    parameters: []
    return:
      type: System.Boolean
      description: "\n<p>\n<strong>true</strong> if this member should be set only at design time; <strong>false</strong> if the member can be set during run time.</p>\n"
  seealso:
  - linkId: System.ComponentModel.MemberDescriptor.DisplayName
    commentId: P:System.ComponentModel.MemberDescriptor.DisplayName
  modifiers.csharp:
  - public
  - virtual
  - get
  modifiers.vb:
  - Public
  - Overridable
  - ReadOnly
- uid: System.ComponentModel.MemberDescriptor.DisplayName
  commentId: P:System.ComponentModel.MemberDescriptor.DisplayName
  id: DisplayName
  parent: System.ComponentModel.MemberDescriptor
  langs:
  - csharp
  - vb
  name: DisplayName
  nameWithType: MemberDescriptor.DisplayName
  fullName: System.ComponentModel.MemberDescriptor.DisplayName
  type: Property
  source:
    remote:
      path: src/System.ComponentModel.TypeConverter/src/System/ComponentModel/MemberDescriptor.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: DisplayName
    path: src/System.ComponentModel.TypeConverter/src/System/ComponentModel/MemberDescriptor.cs
    startLine: 275
  assemblies:
  - System.ComponentModel.TypeConverter
  namespace: System.ComponentModel
  summary: "\n<p>Gets the name that can be displayed in a window, such as a Properties window.</p>\n"
  syntax:
    content: public virtual string DisplayName { get; }
    content.vb: Public Overridable ReadOnly Property DisplayName As String
    parameters: []
    return:
      type: System.String
      description: "\n<p>The name to display for the member.</p>\n"
  seealso:
  - linkId: System.ComponentModel.MemberDescriptor.DesignTimeOnly
    commentId: P:System.ComponentModel.MemberDescriptor.DesignTimeOnly
  modifiers.csharp:
  - public
  - virtual
  - get
  modifiers.vb:
  - Public
  - Overridable
  - ReadOnly
- uid: System.ComponentModel.MemberDescriptor.IsBrowsable
  commentId: P:System.ComponentModel.MemberDescriptor.IsBrowsable
  id: IsBrowsable
  parent: System.ComponentModel.MemberDescriptor
  langs:
  - csharp
  - vb
  name: IsBrowsable
  nameWithType: MemberDescriptor.IsBrowsable
  fullName: System.ComponentModel.MemberDescriptor.IsBrowsable
  type: Property
  source:
    remote:
      path: src/System.ComponentModel.TypeConverter/src/System/ComponentModel/MemberDescriptor.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: IsBrowsable
    path: src/System.ComponentModel.TypeConverter/src/System/ComponentModel/MemberDescriptor.cs
    startLine: 215
  assemblies:
  - System.ComponentModel.TypeConverter
  namespace: System.ComponentModel
  summary: "\n<p>Gets a value indicating whether the member is browsable, as specified in the <xref href=\"System.ComponentModel.BrowsableAttribute\" data-throw-if-not-resolved=\"false\"></xref>.</p>\n"
  syntax:
    content: public virtual bool IsBrowsable { get; }
    content.vb: Public Overridable ReadOnly Property IsBrowsable As Boolean
    parameters: []
    return:
      type: System.Boolean
      description: "\n<p>\n<strong>true</strong> if the member is browsable; otherwise, <strong>false</strong>. If there is no <xref href=\"System.ComponentModel.BrowsableAttribute\" data-throw-if-not-resolved=\"false\"></xref>, the property value is set to the default, which is <strong>true</strong>.</p>\n"
  seealso:
  - linkId: System.ComponentModel.MemberDescriptor.Category
    commentId: P:System.ComponentModel.MemberDescriptor.Category
  - linkId: System.ComponentModel.MemberDescriptor.Description
    commentId: P:System.ComponentModel.MemberDescriptor.Description
  - linkId: System.ComponentModel.MemberDescriptor.Name
    commentId: P:System.ComponentModel.MemberDescriptor.Name
  modifiers.csharp:
  - public
  - virtual
  - get
  modifiers.vb:
  - Public
  - Overridable
  - ReadOnly
- uid: System.ComponentModel.MemberDescriptor.Name
  commentId: P:System.ComponentModel.MemberDescriptor.Name
  id: Name
  parent: System.ComponentModel.MemberDescriptor
  langs:
  - csharp
  - vb
  name: Name
  nameWithType: MemberDescriptor.Name
  fullName: System.ComponentModel.MemberDescriptor.Name
  type: Property
  source:
    remote:
      path: src/System.ComponentModel.TypeConverter/src/System/ComponentModel/MemberDescriptor.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: Name
    path: src/System.ComponentModel.TypeConverter/src/System/ComponentModel/MemberDescriptor.cs
    startLine: 229
  assemblies:
  - System.ComponentModel.TypeConverter
  namespace: System.ComponentModel
  summary: "\n<p>Gets the name of the member.</p>\n"
  syntax:
    content: public virtual string Name { get; }
    content.vb: Public Overridable ReadOnly Property Name As String
    parameters: []
    return:
      type: System.String
      description: "\n<p>The name of the member.</p>\n"
  seealso:
  - linkId: System.ComponentModel.MemberDescriptor.Category
    commentId: P:System.ComponentModel.MemberDescriptor.Category
  - linkId: System.ComponentModel.MemberDescriptor.Description
    commentId: P:System.ComponentModel.MemberDescriptor.Description
  - linkId: System.ComponentModel.MemberDescriptor.IsBrowsable
    commentId: P:System.ComponentModel.MemberDescriptor.IsBrowsable
  modifiers.csharp:
  - public
  - virtual
  - get
  modifiers.vb:
  - Public
  - Overridable
  - ReadOnly
- uid: System.ComponentModel.MemberDescriptor.NameHashCode
  commentId: P:System.ComponentModel.MemberDescriptor.NameHashCode
  id: NameHashCode
  parent: System.ComponentModel.MemberDescriptor
  langs:
  - csharp
  - vb
  name: NameHashCode
  nameWithType: MemberDescriptor.NameHashCode
  fullName: System.ComponentModel.MemberDescriptor.NameHashCode
  type: Property
  source:
    remote:
      path: src/System.ComponentModel.TypeConverter/src/System/ComponentModel/MemberDescriptor.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: NameHashCode
    path: src/System.ComponentModel.TypeConverter/src/System/ComponentModel/MemberDescriptor.cs
    startLine: 247
  assemblies:
  - System.ComponentModel.TypeConverter
  namespace: System.ComponentModel
  summary: "\n<p>Gets the hash code for the name of the member, as specified in <xref href=\"System.String.GetHashCode\" data-throw-if-not-resolved=\"false\"></xref>.</p>\n"
  syntax:
    content: protected virtual int NameHashCode { get; }
    content.vb: Protected Overridable ReadOnly Property NameHashCode As Integer
    parameters: []
    return:
      type: System.Int32
      description: "\n<p>The hash code for the name of the member.</p>\n"
  modifiers.csharp:
  - protected
  - virtual
  - get
  modifiers.vb:
  - Protected
  - Overridable
  - ReadOnly
- uid: System.ComponentModel.MemberDescriptor.CreateAttributeCollection
  commentId: M:System.ComponentModel.MemberDescriptor.CreateAttributeCollection
  id: CreateAttributeCollection
  parent: System.ComponentModel.MemberDescriptor
  langs:
  - csharp
  - vb
  name: CreateAttributeCollection()
  nameWithType: MemberDescriptor.CreateAttributeCollection()
  fullName: System.ComponentModel.MemberDescriptor.CreateAttributeCollection()
  type: Method
  source:
    remote:
      path: src/System.ComponentModel.TypeConverter/src/System/ComponentModel/MemberDescriptor.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: CreateAttributeCollection
    path: src/System.ComponentModel.TypeConverter/src/System/ComponentModel/MemberDescriptor.cs
    startLine: 313
  assemblies:
  - System.ComponentModel.TypeConverter
  namespace: System.ComponentModel
  summary: "\n<p>Creates a collection of attributes using the array of attributes passed to the constructor.</p>\n"
  syntax:
    content: protected virtual AttributeCollection CreateAttributeCollection()
    content.vb: Protected Overridable Function CreateAttributeCollection As AttributeCollection
    return:
      type: System.ComponentModel.AttributeCollection
      description: "\n<p>A new <xref href=\"System.ComponentModel.AttributeCollection\" data-throw-if-not-resolved=\"false\"></xref> that contains the <xref href=\"System.ComponentModel.MemberDescriptor.AttributeArray\" data-throw-if-not-resolved=\"false\"></xref> attributes.</p>\n"
  modifiers.csharp:
  - protected
  - virtual
  modifiers.vb:
  - Protected
  - Overridable
- uid: System.ComponentModel.MemberDescriptor.Equals(System.Object)
  commentId: M:System.ComponentModel.MemberDescriptor.Equals(System.Object)
  id: Equals(System.Object)
  parent: System.ComponentModel.MemberDescriptor
  langs:
  - csharp
  - vb
  name: Equals(Object)
  nameWithType: MemberDescriptor.Equals(Object)
  fullName: System.ComponentModel.MemberDescriptor.Equals(System.Object)
  type: Method
  source:
    remote:
      path: src/System.ComponentModel.TypeConverter/src/System/ComponentModel/MemberDescriptor.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: Equals
    path: src/System.ComponentModel.TypeConverter/src/System/ComponentModel/MemberDescriptor.cs
    startLine: 324
  assemblies:
  - System.ComponentModel.TypeConverter
  namespace: System.ComponentModel
  summary: "\n<p>Compares this instance to the given object to see if they are equivalent.</p>\n"
  syntax:
    content: public override bool Equals(object obj)
    content.vb: Public Overrides Function Equals(obj As Object) As Boolean
    parameters:
    - id: obj
      type: System.Object
      description: "\n<p>The object to compare to the current instance. </p>\n"
    return:
      type: System.Boolean
      description: "\n<p>\n<strong>true</strong> if equivalent; otherwise, <strong>false</strong>.</p>\n"
  overridden: System.Object.Equals(System.Object)
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
- uid: System.ComponentModel.MemberDescriptor.FillAttributes(System.Collections.IList)
  commentId: M:System.ComponentModel.MemberDescriptor.FillAttributes(System.Collections.IList)
  id: FillAttributes(System.Collections.IList)
  parent: System.ComponentModel.MemberDescriptor
  langs:
  - csharp
  - vb
  name: FillAttributes(IList)
  nameWithType: MemberDescriptor.FillAttributes(IList)
  fullName: System.ComponentModel.MemberDescriptor.FillAttributes(System.Collections.IList)
  type: Method
  source:
    remote:
      path: src/System.ComponentModel.TypeConverter/src/System/ComponentModel/MemberDescriptor.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: FillAttributes
    path: src/System.ComponentModel.TypeConverter/src/System/ComponentModel/MemberDescriptor.cs
    startLine: 393
  assemblies:
  - System.ComponentModel.TypeConverter
  namespace: System.ComponentModel
  summary: "\n<p>When overridden in a derived class, adds the attributes of the inheriting class to the specified list of attributes in the parent class.</p>\n"
  syntax:
    content: protected virtual void FillAttributes(IList attributeList)
    content.vb: Protected Overridable Sub FillAttributes(attributeList As IList)
    parameters:
    - id: attributeList
      type: System.Collections.IList
      description: "\n<p>An <xref href=\"System.Collections.IList\" data-throw-if-not-resolved=\"false\"></xref> that lists the attributes in the parent class. Initially, this is empty. </p>\n"
  modifiers.csharp:
  - protected
  - virtual
  modifiers.vb:
  - Protected
  - Overridable
- uid: System.ComponentModel.MemberDescriptor.FindMethod(System.Type,System.String,System.Type[],System.Type)
  commentId: M:System.ComponentModel.MemberDescriptor.FindMethod(System.Type,System.String,System.Type[],System.Type)
  id: FindMethod(System.Type,System.String,System.Type[],System.Type)
  parent: System.ComponentModel.MemberDescriptor
  langs:
  - csharp
  - vb
  name: FindMethod(Type, String, Type[], Type)
  nameWithType: MemberDescriptor.FindMethod(Type, String, Type[], Type)
  fullName: System.ComponentModel.MemberDescriptor.FindMethod(System.Type, System.String, System.Type[], System.Type)
  type: Method
  source:
    remote:
      path: src/System.ComponentModel.TypeConverter/src/System/ComponentModel/MemberDescriptor.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: FindMethod
    path: src/System.ComponentModel.TypeConverter/src/System/ComponentModel/MemberDescriptor.cs
    startLine: 458
  assemblies:
  - System.ComponentModel.TypeConverter
  namespace: System.ComponentModel
  summary: "\n<p>Finds the given method through reflection, searching only for public methods.</p>\n"
  syntax:
    content: protected static MethodInfo FindMethod(Type componentClass, string name, Type[] args, Type returnType)
    content.vb: Protected Shared Function FindMethod(componentClass As Type, name As String, args As Type(), returnType As Type) As MethodInfo
    parameters:
    - id: componentClass
      type: System.Type
      description: "\n<p>The component that contains the method. </p>\n"
    - id: name
      type: System.String
      description: "\n<p>The name of the method to find. </p>\n"
    - id: args
      type: System.Type[]
      description: "\n<p>An array of parameters for the method, used to choose between overloaded methods. </p>\n"
    - id: returnType
      type: System.Type
      description: "\n<p>The type to return for the method. </p>\n"
    return:
      type: System.Reflection.MethodInfo
      description: "\n<p>A <xref href=\"System.Reflection.MethodInfo\" data-throw-if-not-resolved=\"false\"></xref> that represents the method, or <strong>null</strong> if the method is not found.</p>\n"
  see:
  - linkId: System.Security.Permissions.ReflectionPermission
    commentId: T:System.Security.Permissions.ReflectionPermission
  nameWithType.vb: MemberDescriptor.FindMethod(Type, String, Type(), Type)
  modifiers.csharp:
  - protected
  - static
  modifiers.vb:
  - Protected
  - Shared
  fullName.vb: System.ComponentModel.MemberDescriptor.FindMethod(System.Type, System.String, System.Type(), System.Type)
  name.vb: FindMethod(Type, String, Type(), Type)
- uid: System.ComponentModel.MemberDescriptor.FindMethod(System.Type,System.String,System.Type[],System.Type,System.Boolean)
  commentId: M:System.ComponentModel.MemberDescriptor.FindMethod(System.Type,System.String,System.Type[],System.Type,System.Boolean)
  id: FindMethod(System.Type,System.String,System.Type[],System.Type,System.Boolean)
  parent: System.ComponentModel.MemberDescriptor
  langs:
  - csharp
  - vb
  name: FindMethod(Type, String, Type[], Type, Boolean)
  nameWithType: MemberDescriptor.FindMethod(Type, String, Type[], Type, Boolean)
  fullName: System.ComponentModel.MemberDescriptor.FindMethod(System.Type, System.String, System.Type[], System.Type, System.Boolean)
  type: Method
  source:
    remote:
      path: src/System.ComponentModel.TypeConverter/src/System/ComponentModel/MemberDescriptor.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: FindMethod
    path: src/System.ComponentModel.TypeConverter/src/System/ComponentModel/MemberDescriptor.cs
    startLine: 468
  assemblies:
  - System.ComponentModel.TypeConverter
  namespace: System.ComponentModel
  summary: "\n<p>Finds the given method through reflection, with an option to search only public methods.</p>\n"
  syntax:
    content: protected static MethodInfo FindMethod(Type componentClass, string name, Type[] args, Type returnType, bool publicOnly)
    content.vb: Protected Shared Function FindMethod(componentClass As Type, name As String, args As Type(), returnType As Type, publicOnly As Boolean) As MethodInfo
    parameters:
    - id: componentClass
      type: System.Type
      description: "\n<p>The component that contains the method. </p>\n"
    - id: name
      type: System.String
      description: "\n<p>The name of the method to find. </p>\n"
    - id: args
      type: System.Type[]
      description: "\n<p>An array of parameters for the method, used to choose between overloaded methods. </p>\n"
    - id: returnType
      type: System.Type
      description: "\n<p>The type to return for the method. </p>\n"
    - id: publicOnly
      type: System.Boolean
      description: "\n<p>Whether to restrict search to public methods. </p>\n"
    return:
      type: System.Reflection.MethodInfo
      description: "\n<p>A <xref href=\"System.Reflection.MethodInfo\" data-throw-if-not-resolved=\"false\"></xref> that represents the method, or <strong>null</strong> if the method is not found.</p>\n"
  see:
  - linkId: System.Security.Permissions.ReflectionPermission
    commentId: T:System.Security.Permissions.ReflectionPermission
  nameWithType.vb: MemberDescriptor.FindMethod(Type, String, Type(), Type, Boolean)
  modifiers.csharp:
  - protected
  - static
  modifiers.vb:
  - Protected
  - Shared
  fullName.vb: System.ComponentModel.MemberDescriptor.FindMethod(System.Type, System.String, System.Type(), System.Type, System.Boolean)
  name.vb: FindMethod(Type, String, Type(), Type, Boolean)
- uid: System.ComponentModel.MemberDescriptor.GetHashCode
  commentId: M:System.ComponentModel.MemberDescriptor.GetHashCode
  id: GetHashCode
  parent: System.ComponentModel.MemberDescriptor
  langs:
  - csharp
  - vb
  name: GetHashCode()
  nameWithType: MemberDescriptor.GetHashCode()
  fullName: System.ComponentModel.MemberDescriptor.GetHashCode()
  type: Method
  source:
    remote:
      path: src/System.ComponentModel.TypeConverter/src/System/ComponentModel/MemberDescriptor.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: GetHashCode
    path: src/System.ComponentModel.TypeConverter/src/System/ComponentModel/MemberDescriptor.cs
    startLine: 498
  assemblies:
  - System.ComponentModel.TypeConverter
  namespace: System.ComponentModel
  summary: "\n<p>Returns the hash code for this instance.</p>\n"
  syntax:
    content: public override int GetHashCode()
    content.vb: Public Overrides Function GetHashCode As Integer
    return:
      type: System.Int32
      description: "\n<p>A hash code for the current <xref href=\"System.ComponentModel.MemberDescriptor\" data-throw-if-not-resolved=\"false\"></xref>.</p>\n"
  overridden: System.Object.GetHashCode
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
- uid: System.ComponentModel.MemberDescriptor.GetInvocationTarget(System.Type,System.Object)
  commentId: M:System.ComponentModel.MemberDescriptor.GetInvocationTarget(System.Type,System.Object)
  id: GetInvocationTarget(System.Type,System.Object)
  parent: System.ComponentModel.MemberDescriptor
  langs:
  - csharp
  - vb
  name: GetInvocationTarget(Type, Object)
  nameWithType: MemberDescriptor.GetInvocationTarget(Type, Object)
  fullName: System.ComponentModel.MemberDescriptor.GetInvocationTarget(System.Type, System.Object)
  type: Method
  source:
    remote:
      path: src/System.ComponentModel.TypeConverter/src/System/ComponentModel/MemberDescriptor.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: GetInvocationTarget
    path: src/System.ComponentModel.TypeConverter/src/System/ComponentModel/MemberDescriptor.cs
    startLine: 509
  assemblies:
  - System.ComponentModel.TypeConverter
  namespace: System.ComponentModel
  summary: "\n<p>Retrieves the object that should be used during invocation of members.</p>\n"
  syntax:
    content: protected virtual object GetInvocationTarget(Type type, object instance)
    content.vb: Protected Overridable Function GetInvocationTarget(type As Type, instance As Object) As Object
    parameters:
    - id: type
      type: System.Type
      description: "\n<p>The <xref href=\"System.Type\" data-throw-if-not-resolved=\"false\"></xref> of the invocation target.</p>\n"
    - id: instance
      type: System.Object
      description: "\n<p>The potential invocation target.</p>\n"
    return:
      type: System.Object
      description: "\n<p>The object to be used during member invocations.</p>\n"
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "\n<p>\n<em>type</em> or <em>instance</em> is <strong>null</strong>.</p>\n"
  modifiers.csharp:
  - protected
  - virtual
  modifiers.vb:
  - Protected
  - Overridable
- uid: System.ComponentModel.MemberDescriptor.GetSite(System.Object)
  commentId: M:System.ComponentModel.MemberDescriptor.GetSite(System.Object)
  id: GetSite(System.Object)
  parent: System.ComponentModel.MemberDescriptor
  langs:
  - csharp
  - vb
  name: GetSite(Object)
  nameWithType: MemberDescriptor.GetSite(Object)
  fullName: System.ComponentModel.MemberDescriptor.GetSite(System.Object)
  type: Method
  source:
    remote:
      path: src/System.ComponentModel.TypeConverter/src/System/ComponentModel/MemberDescriptor.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: GetSite
    path: src/System.ComponentModel.TypeConverter/src/System/ComponentModel/MemberDescriptor.cs
    startLine: 530
  assemblies:
  - System.ComponentModel.TypeConverter
  namespace: System.ComponentModel
  summary: "\n<p>Gets a component site for the given component.</p>\n"
  syntax:
    content: protected static ISite GetSite(object component)
    content.vb: Protected Shared Function GetSite(component As Object) As ISite
    parameters:
    - id: component
      type: System.Object
      description: "\n<p>The component for which you want to find a site. </p>\n"
    return:
      type: ISite
      description: "\n<p>The site of the component, or <strong>null</strong> if a site does not exist.</p>\n"
  modifiers.csharp:
  - protected
  - static
  modifiers.vb:
  - Protected
  - Shared
references:
- uid: System.ComponentModel
  commentId: N:System.ComponentModel
  isExternal: false
  name: System.ComponentModel
  nameWithType: System.ComponentModel
  fullName: System.ComponentModel
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: false
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: System.ComponentModel.MemberDescriptor
  commentId: T:System.ComponentModel.MemberDescriptor
  parent: System.ComponentModel
  isExternal: false
  name: MemberDescriptor
  nameWithType: MemberDescriptor
  fullName: System.ComponentModel.MemberDescriptor
- uid: System.Attribute[]
  name: Attribute[]
  nameWithType: Attribute[]
  fullName: System.Attribute[]
  nameWithType.vb: Attribute()
  fullname.vb: System.Attribute()
  name.vb: Attribute()
  spec.csharp:
  - uid: System.Attribute
    name: Attribute
    nameWithType: Attribute
    fullName: System.Attribute
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  spec.vb:
  - uid: System.Attribute
    name: Attribute
    nameWithType: Attribute
    fullName: System.Attribute
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: false
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.ComponentModel.AttributeCollection
  commentId: T:System.ComponentModel.AttributeCollection
  parent: System.ComponentModel
  isExternal: false
  name: AttributeCollection
  nameWithType: AttributeCollection
  fullName: System.ComponentModel.AttributeCollection
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: false
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: false
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.IList
  commentId: T:System.Collections.IList
  parent: System.Collections
  isExternal: false
  name: IList
  nameWithType: IList
  fullName: System.Collections.IList
- uid: System.Collections
  commentId: N:System.Collections
  isExternal: false
  name: System.Collections
  nameWithType: System.Collections
  fullName: System.Collections
- uid: System.Type
  commentId: T:System.Type
  parent: System
  isExternal: false
  name: Type
  nameWithType: Type
  fullName: System.Type
- uid: System.Type[]
  name: Type[]
  nameWithType: Type[]
  fullName: System.Type[]
  nameWithType.vb: Type()
  fullname.vb: System.Type()
  name.vb: Type()
  spec.csharp:
  - uid: System.Type
    name: Type
    nameWithType: Type
    fullName: System.Type
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  spec.vb:
  - uid: System.Type
    name: Type
    nameWithType: Type
    fullName: System.Type
  - name: ()
    nameWithType: ()
    fullName: ()
- uid: System.Reflection.MethodInfo
  commentId: T:System.Reflection.MethodInfo
  parent: System.Reflection
  isExternal: false
  name: MethodInfo
  nameWithType: MethodInfo
  fullName: System.Reflection.MethodInfo
- uid: System.Reflection
  commentId: N:System.Reflection
  isExternal: false
  name: System.Reflection
  nameWithType: System.Reflection
  fullName: System.Reflection
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.ComponentModel.ISite
  commentId: T:System.ComponentModel.ISite
  parent: System.ComponentModel
  isExternal: false
  name: ISite
  nameWithType: ISite
  fullName: System.ComponentModel.ISite
- uid: System.ArgumentException
  commentId: T:System.ArgumentException
  parent: System
  isExternal: false
  name: ArgumentException
  nameWithType: ArgumentException
  fullName: System.ArgumentException
- uid: System.ArgumentNullException
  commentId: T:System.ArgumentNullException
  isExternal: false
  name: ArgumentNullException
  nameWithType: ArgumentNullException
  fullName: System.ArgumentNullException
