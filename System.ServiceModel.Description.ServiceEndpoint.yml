### YamlMime:ManagedReference
items:
- uid: System.ServiceModel.Description.ServiceEndpoint
  commentId: T:System.ServiceModel.Description.ServiceEndpoint
  id: ServiceEndpoint
  parent: System.ServiceModel.Description
  children:
  - System.ServiceModel.Description.ServiceEndpoint.#ctor(System.ServiceModel.Description.ContractDescription)
  - System.ServiceModel.Description.ServiceEndpoint.#ctor(System.ServiceModel.Description.ContractDescription,System.ServiceModel.Channels.Binding,System.ServiceModel.EndpointAddress)
  - System.ServiceModel.Description.ServiceEndpoint.Address
  - System.ServiceModel.Description.ServiceEndpoint.Binding
  - System.ServiceModel.Description.ServiceEndpoint.Contract
  - System.ServiceModel.Description.ServiceEndpoint.EndpointBehaviors
  - System.ServiceModel.Description.ServiceEndpoint.Name
  langs:
  - csharp
  - vb
  name: ServiceEndpoint
  nameWithType: ServiceEndpoint
  fullName: System.ServiceModel.Description.ServiceEndpoint
  type: Class
  source:
    remote:
      path: src/System.Private.ServiceModel/src/System/ServiceModel/Description/ServiceEndpoint.cs
      branch: master
      repo: https://github.com/dotnet/wcf.git
    id: ServiceEndpoint
    path: src/System.Private.ServiceModel/src/System/ServiceModel/Description/ServiceEndpoint.cs
    startLine: 14
  assemblies:
  - System.ServiceModel.Primitives
  namespace: System.ServiceModel.Description
  summary: "\n<p>Represents the endpoint for a service that allows clients of the service to find and communicate with the service.</p>\n"
  syntax:
    content: >-
      [DebuggerDisplay("Address={_address}")]

      [DebuggerDisplay("Name={_name}")]

      public class ServiceEndpoint
    content.vb: >-
      <DebuggerDisplay("Address={_address}")>

      <DebuggerDisplay("Name={_name}")>

      Public Class ServiceEndpoint
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: System.ServiceModel.Description.ServiceEndpoint.#ctor(System.ServiceModel.Description.ContractDescription)
  commentId: M:System.ServiceModel.Description.ServiceEndpoint.#ctor(System.ServiceModel.Description.ContractDescription)
  id: '#ctor(System.ServiceModel.Description.ContractDescription)'
  parent: System.ServiceModel.Description.ServiceEndpoint
  langs:
  - csharp
  - vb
  name: ServiceEndpoint(ContractDescription)
  nameWithType: ServiceEndpoint.ServiceEndpoint(ContractDescription)
  fullName: System.ServiceModel.Description.ServiceEndpoint.ServiceEndpoint(System.ServiceModel.Description.ContractDescription)
  type: Constructor
  source:
    remote:
      path: src/System.Private.ServiceModel/src/System/ServiceModel/Description/ServiceEndpoint.cs
      branch: master
      repo: https://github.com/dotnet/wcf.git
    id: .ctor
    path: src/System.Private.ServiceModel/src/System/ServiceModel/Description/ServiceEndpoint.cs
    startLine: 28
  assemblies:
  - System.ServiceModel.Primitives
  namespace: System.ServiceModel.Description
  summary: "\n<p>Initializes a new instance of the <xref href=\"System.ServiceModel.Description.ServiceEndpoint\" data-throw-if-not-resolved=\"false\"></xref> class for a specified contract.</p>\n"
  syntax:
    content: public ServiceEndpoint(ContractDescription contract)
    content.vb: Public Sub New(contract As ContractDescription)
    parameters:
    - id: contract
      type: System.ServiceModel.Description.ContractDescription
      description: "\n<p>The <xref href=\"System.ServiceModel.Description.ContractDescription\" data-throw-if-not-resolved=\"false\"></xref> for the service endpoint.</p>\n"
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: System.ServiceModel.Description.ServiceEndpoint.#ctor(System.ServiceModel.Description.ContractDescription,System.ServiceModel.Channels.Binding,System.ServiceModel.EndpointAddress)
  commentId: M:System.ServiceModel.Description.ServiceEndpoint.#ctor(System.ServiceModel.Description.ContractDescription,System.ServiceModel.Channels.Binding,System.ServiceModel.EndpointAddress)
  id: '#ctor(System.ServiceModel.Description.ContractDescription,System.ServiceModel.Channels.Binding,System.ServiceModel.EndpointAddress)'
  parent: System.ServiceModel.Description.ServiceEndpoint
  langs:
  - csharp
  - vb
  name: ServiceEndpoint(ContractDescription, Binding, EndpointAddress)
  nameWithType: ServiceEndpoint.ServiceEndpoint(ContractDescription, Binding, EndpointAddress)
  fullName: System.ServiceModel.Description.ServiceEndpoint.ServiceEndpoint(System.ServiceModel.Description.ContractDescription, System.ServiceModel.Channels.Binding, System.ServiceModel.EndpointAddress)
  type: Constructor
  source:
    remote:
      path: src/System.Private.ServiceModel/src/System/ServiceModel/Description/ServiceEndpoint.cs
      branch: master
      repo: https://github.com/dotnet/wcf.git
    id: .ctor
    path: src/System.Private.ServiceModel/src/System/ServiceModel/Description/ServiceEndpoint.cs
    startLine: 35
  assemblies:
  - System.ServiceModel.Primitives
  namespace: System.ServiceModel.Description
  summary: "\n<p>Initializes a new instance of the <xref href=\"System.ServiceModel.Description.ServiceEndpoint\" data-throw-if-not-resolved=\"false\"></xref> class with a specified contract, binding, and address.</p>\n"
  syntax:
    content: public ServiceEndpoint(ContractDescription contract, Binding binding, EndpointAddress address)
    content.vb: Public Sub New(contract As ContractDescription, binding As Binding, address As EndpointAddress)
    parameters:
    - id: contract
      type: System.ServiceModel.Description.ContractDescription
      description: "\n<p>The <xref href=\"System.ServiceModel.Description.ContractDescription\" data-throw-if-not-resolved=\"false\"></xref> for the service endpoint.</p>\n"
    - id: binding
      type: System.ServiceModel.Channels.Binding
      description: "\n<p>The <xref href=\"System.ServiceModel.Channels.Binding\" data-throw-if-not-resolved=\"false\"></xref> that specifies how the service endpoint communicates with the world.</p>\n"
    - id: address
      type: System.ServiceModel.EndpointAddress
      description: "\n<p>The <xref href=\"System.ServiceModel.EndpointAddress\" data-throw-if-not-resolved=\"false\"></xref> for the service endpoint.</p>\n"
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: System.ServiceModel.Description.ServiceEndpoint.Address
  commentId: P:System.ServiceModel.Description.ServiceEndpoint.Address
  id: Address
  parent: System.ServiceModel.Description.ServiceEndpoint
  langs:
  - csharp
  - vb
  name: Address
  nameWithType: ServiceEndpoint.Address
  fullName: System.ServiceModel.Description.ServiceEndpoint.Address
  type: Property
  source:
    remote:
      path: src/System.Private.ServiceModel/src/System/ServiceModel/Description/ServiceEndpoint.cs
      branch: master
      repo: https://github.com/dotnet/wcf.git
    id: Address
    path: src/System.Private.ServiceModel/src/System/ServiceModel/Description/ServiceEndpoint.cs
    startLine: 45
  assemblies:
  - System.ServiceModel.Primitives
  namespace: System.ServiceModel.Description
  summary: "\n<p>Gets or sets the endpoint address for the service endpoint.</p>\n"
  syntax:
    content: public EndpointAddress Address { get; set; }
    content.vb: Public Property Address As EndpointAddress
    parameters: []
    return:
      type: System.ServiceModel.EndpointAddress
      description: "\n<p>The <xref href=\"System.ServiceModel.EndpointAddress\" data-throw-if-not-resolved=\"false\"></xref> that specifies the location of the service endpoint.</p>\n"
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: System.ServiceModel.Description.ServiceEndpoint.Binding
  commentId: P:System.ServiceModel.Description.ServiceEndpoint.Binding
  id: Binding
  parent: System.ServiceModel.Description.ServiceEndpoint
  langs:
  - csharp
  - vb
  name: Binding
  nameWithType: ServiceEndpoint.Binding
  fullName: System.ServiceModel.Description.ServiceEndpoint.Binding
  type: Property
  source:
    remote:
      path: src/System.Private.ServiceModel/src/System/ServiceModel/Description/ServiceEndpoint.cs
      branch: master
      repo: https://github.com/dotnet/wcf.git
    id: Binding
    path: src/System.Private.ServiceModel/src/System/ServiceModel/Description/ServiceEndpoint.cs
    startLine: 70
  assemblies:
  - System.ServiceModel.Primitives
  namespace: System.ServiceModel.Description
  summary: "\n<p>Gets or sets the binding for the service endpoint.</p>\n"
  syntax:
    content: public Binding Binding { get; set; }
    content.vb: Public Property Binding As Binding
    parameters: []
    return:
      type: System.ServiceModel.Channels.Binding
      description: "\n<p>The <xref href=\"System.ServiceModel.Channels.Binding\" data-throw-if-not-resolved=\"false\"></xref> for the service endpoint.</p>\n"
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: System.ServiceModel.Description.ServiceEndpoint.Contract
  commentId: P:System.ServiceModel.Description.ServiceEndpoint.Contract
  id: Contract
  parent: System.ServiceModel.Description.ServiceEndpoint
  langs:
  - csharp
  - vb
  name: Contract
  nameWithType: ServiceEndpoint.Contract
  fullName: System.ServiceModel.Description.ServiceEndpoint.Contract
  type: Property
  source:
    remote:
      path: src/System.Private.ServiceModel/src/System/ServiceModel/Description/ServiceEndpoint.cs
      branch: master
      repo: https://github.com/dotnet/wcf.git
    id: Contract
    path: src/System.Private.ServiceModel/src/System/ServiceModel/Description/ServiceEndpoint.cs
    startLine: 76
  assemblies:
  - System.ServiceModel.Primitives
  namespace: System.ServiceModel.Description
  summary: "\n<p>Gets the contract for the service endpoint.</p>\n"
  syntax:
    content: public ContractDescription Contract { get; set; }
    content.vb: Public Property Contract As ContractDescription
    parameters: []
    return:
      type: System.ServiceModel.Description.ContractDescription
      description: "\n<p>The <xref href=\"System.ServiceModel.Description.ContractDescription\" data-throw-if-not-resolved=\"false\"></xref> that specifies the contract for the service endpoint.</p>\n"
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: System.ServiceModel.Description.ServiceEndpoint.EndpointBehaviors
  commentId: P:System.ServiceModel.Description.ServiceEndpoint.EndpointBehaviors
  id: EndpointBehaviors
  parent: System.ServiceModel.Description.ServiceEndpoint
  langs:
  - csharp
  - vb
  name: EndpointBehaviors
  nameWithType: ServiceEndpoint.EndpointBehaviors
  fullName: System.ServiceModel.Description.ServiceEndpoint.EndpointBehaviors
  type: Property
  source:
    remote:
      path: src/System.Private.ServiceModel/src/System/ServiceModel/Description/ServiceEndpoint.cs
      branch: master
      repo: https://github.com/dotnet/wcf.git
    id: EndpointBehaviors
    path: src/System.Private.ServiceModel/src/System/ServiceModel/Description/ServiceEndpoint.cs
    startLine: 51
  assemblies:
  - System.ServiceModel.Primitives
  namespace: System.ServiceModel.Description
  summary: "\n<p>Gets the endpoint behaviors for the service.</p>\n"
  syntax:
    content: public KeyedCollection<Type, IEndpointBehavior> EndpointBehaviors { get; }
    content.vb: Public ReadOnly Property EndpointBehaviors As KeyedCollection(Of Type, IEndpointBehavior)
    parameters: []
    return:
      type: System.Collections.ObjectModel.KeyedCollection{System.Type,System.ServiceModel.Description.IEndpointBehavior}
      description: "\n<p>The endpoint behaviors for the service.</p>\n"
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: System.ServiceModel.Description.ServiceEndpoint.Name
  commentId: P:System.ServiceModel.Description.ServiceEndpoint.Name
  id: Name
  parent: System.ServiceModel.Description.ServiceEndpoint
  langs:
  - csharp
  - vb
  name: Name
  nameWithType: ServiceEndpoint.Name
  fullName: System.ServiceModel.Description.ServiceEndpoint.Name
  type: Property
  source:
    remote:
      path: src/System.Private.ServiceModel/src/System/ServiceModel/Description/ServiceEndpoint.cs
      branch: master
      repo: https://github.com/dotnet/wcf.git
    id: Name
    path: src/System.Private.ServiceModel/src/System/ServiceModel/Description/ServiceEndpoint.cs
    startLine: 95
  assemblies:
  - System.ServiceModel.Primitives
  namespace: System.ServiceModel.Description
  summary: "\n<p>Gets or sets the name of the service endpoint.</p>\n"
  syntax:
    content: public string Name { get; set; }
    content.vb: Public Property Name As String
    parameters: []
    return:
      type: System.String
      description: "\n<p>The name the service endpoint. The default value is the concatenation of the binding name and the contract description name. For example, <xref href=\"System.ServiceModel.Channels.Binding.Name\" data-throw-if-not-resolved=\"false\"></xref> +'_' + <xref href=\"System.ServiceModel.Description.ContractDescription.Name\" data-throw-if-not-resolved=\"false\"></xref>.</p>\n"
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
references:
- uid: System.ServiceModel.Description
  commentId: N:System.ServiceModel.Description
  isExternal: false
  name: System.ServiceModel.Description
  nameWithType: System.ServiceModel.Description
  fullName: System.ServiceModel.Description
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: false
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: System.ServiceModel.Description.ContractDescription
  commentId: T:System.ServiceModel.Description.ContractDescription
  parent: System.ServiceModel.Description
  isExternal: false
  name: ContractDescription
  nameWithType: ContractDescription
  fullName: System.ServiceModel.Description.ContractDescription
- uid: System.ServiceModel.Channels.Binding
  commentId: T:System.ServiceModel.Channels.Binding
  parent: System.ServiceModel.Channels
  isExternal: false
  name: Binding
  nameWithType: Binding
  fullName: System.ServiceModel.Channels.Binding
- uid: System.ServiceModel.EndpointAddress
  commentId: T:System.ServiceModel.EndpointAddress
  parent: System.ServiceModel
  isExternal: false
  name: EndpointAddress
  nameWithType: EndpointAddress
  fullName: System.ServiceModel.EndpointAddress
- uid: System.ServiceModel.Channels
  commentId: N:System.ServiceModel.Channels
  isExternal: false
  name: System.ServiceModel.Channels
  nameWithType: System.ServiceModel.Channels
  fullName: System.ServiceModel.Channels
- uid: System.ServiceModel
  commentId: N:System.ServiceModel
  isExternal: false
  name: System.ServiceModel
  nameWithType: System.ServiceModel
  fullName: System.ServiceModel
- uid: System.Collections.ObjectModel.KeyedCollection{System.Type,System.ServiceModel.Description.IEndpointBehavior}
  commentId: T:System.Collections.ObjectModel.KeyedCollection{System.Type,System.ServiceModel.Description.IEndpointBehavior}
  parent: System.Collections.ObjectModel
  definition: System.Collections.ObjectModel.KeyedCollection`2
  name: KeyedCollection<Type, IEndpointBehavior>
  nameWithType: KeyedCollection<Type, IEndpointBehavior>
  fullName: System.Collections.ObjectModel.KeyedCollection<System.Type, System.ServiceModel.Description.IEndpointBehavior>
  nameWithType.vb: KeyedCollection(Of Type, IEndpointBehavior)
  fullname.vb: System.Collections.ObjectModel.KeyedCollection(Of System.Type, System.ServiceModel.Description.IEndpointBehavior)
  name.vb: KeyedCollection(Of Type, IEndpointBehavior)
  spec.csharp:
  - uid: System.Collections.ObjectModel.KeyedCollection`2
    name: KeyedCollection
    nameWithType: KeyedCollection
    fullName: System.Collections.ObjectModel.KeyedCollection
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Type
    name: Type
    nameWithType: Type
    fullName: System.Type
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.ServiceModel.Description.IEndpointBehavior
    name: IEndpointBehavior
    nameWithType: IEndpointBehavior
    fullName: System.ServiceModel.Description.IEndpointBehavior
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.ObjectModel.KeyedCollection`2
    name: KeyedCollection
    nameWithType: KeyedCollection
    fullName: System.Collections.ObjectModel.KeyedCollection
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Type
    name: Type
    nameWithType: Type
    fullName: System.Type
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.ServiceModel.Description.IEndpointBehavior
    name: IEndpointBehavior
    nameWithType: IEndpointBehavior
    fullName: System.ServiceModel.Description.IEndpointBehavior
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.ObjectModel.KeyedCollection`2
  commentId: T:System.Collections.ObjectModel.KeyedCollection`2
  isExternal: false
  name: KeyedCollection<TKey, TItem>
  nameWithType: KeyedCollection<TKey, TItem>
  fullName: System.Collections.ObjectModel.KeyedCollection<TKey, TItem>
  nameWithType.vb: KeyedCollection(Of TKey, TItem)
  fullname.vb: System.Collections.ObjectModel.KeyedCollection(Of TKey, TItem)
  name.vb: KeyedCollection(Of TKey, TItem)
  spec.csharp:
  - uid: System.Collections.ObjectModel.KeyedCollection`2
    name: KeyedCollection
    nameWithType: KeyedCollection
    fullName: System.Collections.ObjectModel.KeyedCollection
  - name: <
    nameWithType: <
    fullName: <
  - name: TKey
    nameWithType: TKey
    fullName: TKey
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TItem
    nameWithType: TItem
    fullName: TItem
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.ObjectModel.KeyedCollection`2
    name: KeyedCollection
    nameWithType: KeyedCollection
    fullName: System.Collections.ObjectModel.KeyedCollection
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TKey
    nameWithType: TKey
    fullName: TKey
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TItem
    nameWithType: TItem
    fullName: TItem
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.ObjectModel
  commentId: N:System.Collections.ObjectModel
  isExternal: false
  name: System.Collections.ObjectModel
  nameWithType: System.Collections.ObjectModel
  fullName: System.Collections.ObjectModel
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: false
  name: String
  nameWithType: String
  fullName: System.String
