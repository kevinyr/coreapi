### YamlMime:ManagedReference
items:
- uid: System.ServiceModel.FaultCode
  commentId: T:System.ServiceModel.FaultCode
  id: FaultCode
  parent: System.ServiceModel
  children:
  - System.ServiceModel.FaultCode.#ctor(System.String)
  - System.ServiceModel.FaultCode.#ctor(System.String,System.ServiceModel.FaultCode)
  - System.ServiceModel.FaultCode.#ctor(System.String,System.String)
  - System.ServiceModel.FaultCode.#ctor(System.String,System.String,System.ServiceModel.FaultCode)
  - System.ServiceModel.FaultCode.CreateSenderFaultCode(System.ServiceModel.FaultCode)
  - System.ServiceModel.FaultCode.IsPredefinedFault
  - System.ServiceModel.FaultCode.IsReceiverFault
  - System.ServiceModel.FaultCode.IsSenderFault
  - System.ServiceModel.FaultCode.Name
  - System.ServiceModel.FaultCode.Namespace
  - System.ServiceModel.FaultCode.SubCode
  langs:
  - csharp
  - vb
  name: FaultCode
  nameWithType: FaultCode
  fullName: System.ServiceModel.FaultCode
  type: Class
  source:
    remote:
      path: src/System.ServiceModel.Primitives/ref/System.ServiceModel.Primitives.cs
      branch: master
      repo: https://github.com/dotnet/wcf.git
    id: FaultCode
    path: src/System.ServiceModel.Primitives/ref/System.ServiceModel.Primitives.cs
    startLine: 254
  assemblies:
  - System.ServiceModel.Primitives
  namespace: System.ServiceModel
  summary: "\n<p>Represents a SOAP fault code. </p>\n"
  syntax:
    content: public class FaultCode
    content.vb: Public Class FaultCode
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: System.ServiceModel.FaultCode.#ctor(System.String)
  commentId: M:System.ServiceModel.FaultCode.#ctor(System.String)
  id: '#ctor(System.String)'
  parent: System.ServiceModel.FaultCode
  langs:
  - csharp
  - vb
  name: FaultCode(String)
  nameWithType: FaultCode.FaultCode(String)
  fullName: System.ServiceModel.FaultCode.FaultCode(System.String)
  type: Constructor
  source:
    remote:
      path: src/System.ServiceModel.Primitives/ref/System.ServiceModel.Primitives.cs
      branch: master
      repo: https://github.com/dotnet/wcf.git
    id: .ctor
    path: src/System.ServiceModel.Primitives/ref/System.ServiceModel.Primitives.cs
    startLine: 256
  assemblies:
  - System.ServiceModel.Primitives
  namespace: System.ServiceModel
  summary: "\n<p>Initializes a new instance of the <xref href=\"System.ServiceModel.FaultCode\" data-throw-if-not-resolved=\"false\"></xref> class.  </p>\n"
  syntax:
    content: public FaultCode(string name)
    content.vb: Public Sub New(name As String)
    parameters:
    - id: name
      type: System.String
      description: "\n<p>The name of the fault code.</p>\n"
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: System.ServiceModel.FaultCode.#ctor(System.String,System.ServiceModel.FaultCode)
  commentId: M:System.ServiceModel.FaultCode.#ctor(System.String,System.ServiceModel.FaultCode)
  id: '#ctor(System.String,System.ServiceModel.FaultCode)'
  parent: System.ServiceModel.FaultCode
  langs:
  - csharp
  - vb
  name: FaultCode(String, FaultCode)
  nameWithType: FaultCode.FaultCode(String, FaultCode)
  fullName: System.ServiceModel.FaultCode.FaultCode(System.String, System.ServiceModel.FaultCode)
  type: Constructor
  source:
    remote:
      path: src/System.ServiceModel.Primitives/ref/System.ServiceModel.Primitives.cs
      branch: master
      repo: https://github.com/dotnet/wcf.git
    id: .ctor
    path: src/System.ServiceModel.Primitives/ref/System.ServiceModel.Primitives.cs
    startLine: 257
  assemblies:
  - System.ServiceModel.Primitives
  namespace: System.ServiceModel
  summary: "\n<p>Initializes a new instance of the <xref href=\"System.ServiceModel.FaultCode\" data-throw-if-not-resolved=\"false\"></xref> class. </p>\n"
  syntax:
    content: public FaultCode(string name, FaultCode subCode)
    content.vb: Public Sub New(name As String, subCode As FaultCode)
    parameters:
    - id: name
      type: System.String
      description: "\n<p>The name of the fault code.</p>\n"
    - id: subCode
      type: System.ServiceModel.FaultCode
      description: "\n<p>The fault subcode.</p>\n"
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: System.ServiceModel.FaultCode.#ctor(System.String,System.String)
  commentId: M:System.ServiceModel.FaultCode.#ctor(System.String,System.String)
  id: '#ctor(System.String,System.String)'
  parent: System.ServiceModel.FaultCode
  langs:
  - csharp
  - vb
  name: FaultCode(String, String)
  nameWithType: FaultCode.FaultCode(String, String)
  fullName: System.ServiceModel.FaultCode.FaultCode(System.String, System.String)
  type: Constructor
  source:
    remote:
      path: src/System.ServiceModel.Primitives/ref/System.ServiceModel.Primitives.cs
      branch: master
      repo: https://github.com/dotnet/wcf.git
    id: .ctor
    path: src/System.ServiceModel.Primitives/ref/System.ServiceModel.Primitives.cs
    startLine: 258
  assemblies:
  - System.ServiceModel.Primitives
  namespace: System.ServiceModel
  summary: "\n<p>Initializes a new instance of the <xref href=\"System.ServiceModel.FaultCode\" data-throw-if-not-resolved=\"false\"></xref> class with the specified name and namespace. </p>\n"
  syntax:
    content: public FaultCode(string name, string ns)
    content.vb: Public Sub New(name As String, ns As String)
    parameters:
    - id: name
      type: System.String
      description: "\n<p>The local name of the fault code. </p>\n"
    - id: ns
      type: System.String
      description: "\n<p>The namespace name of the fault code. </p>\n"
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "\n<p>\n<em>name</em> or <em>ns</em> is <strong>null</strong>. </p>\n"
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "\n<p>\n<em>name</em> is an empty string. </p>\n"
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: System.ServiceModel.FaultCode.#ctor(System.String,System.String,System.ServiceModel.FaultCode)
  commentId: M:System.ServiceModel.FaultCode.#ctor(System.String,System.String,System.ServiceModel.FaultCode)
  id: '#ctor(System.String,System.String,System.ServiceModel.FaultCode)'
  parent: System.ServiceModel.FaultCode
  langs:
  - csharp
  - vb
  name: FaultCode(String, String, FaultCode)
  nameWithType: FaultCode.FaultCode(String, String, FaultCode)
  fullName: System.ServiceModel.FaultCode.FaultCode(System.String, System.String, System.ServiceModel.FaultCode)
  type: Constructor
  source:
    remote:
      path: src/System.ServiceModel.Primitives/ref/System.ServiceModel.Primitives.cs
      branch: master
      repo: https://github.com/dotnet/wcf.git
    id: .ctor
    path: src/System.ServiceModel.Primitives/ref/System.ServiceModel.Primitives.cs
    startLine: 259
  assemblies:
  - System.ServiceModel.Primitives
  namespace: System.ServiceModel
  summary: "\n<p>Initializes a new instance of the <xref href=\"System.ServiceModel.FaultCode\" data-throw-if-not-resolved=\"false\"></xref> class with the specified name, namespace, and fault subcode. </p>\n"
  syntax:
    content: public FaultCode(string name, string ns, FaultCode subCode)
    content.vb: Public Sub New(name As String, ns As String, subCode As FaultCode)
    parameters:
    - id: name
      type: System.String
      description: "\n<p>The local name of the fault code. </p>\n"
    - id: ns
      type: System.String
      description: "\n<p>The namespace name of the fault code. </p>\n"
    - id: subCode
      type: System.ServiceModel.FaultCode
      description: "\n<p>A <xref href=\"System.ServiceModel.FaultCode\" data-throw-if-not-resolved=\"false\"></xref> object that represents the fault subcode. </p>\n"
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "\n<p>\n<em>name</em> or <em>ns</em> is <strong>null</strong>. </p>\n"
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "\n<p>\n<em>name</em> is an empty string. </p>\n"
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: System.ServiceModel.FaultCode.IsPredefinedFault
  commentId: P:System.ServiceModel.FaultCode.IsPredefinedFault
  id: IsPredefinedFault
  parent: System.ServiceModel.FaultCode
  langs:
  - csharp
  - vb
  name: IsPredefinedFault
  nameWithType: FaultCode.IsPredefinedFault
  fullName: System.ServiceModel.FaultCode.IsPredefinedFault
  type: Property
  source:
    remote:
      path: src/System.ServiceModel.Primitives/ref/System.ServiceModel.Primitives.cs
      branch: master
      repo: https://github.com/dotnet/wcf.git
    id: IsPredefinedFault
    path: src/System.ServiceModel.Primitives/ref/System.ServiceModel.Primitives.cs
    startLine: 260
  assemblies:
  - System.ServiceModel.Primitives
  namespace: System.ServiceModel
  summary: "\n<p>Gets a value that indicates whether the fault is a SOAP 1.1 or SOAP 1.2 fault.</p>\n"
  syntax:
    content: public bool IsPredefinedFault { get; }
    content.vb: Public ReadOnly Property IsPredefinedFault As Boolean
    parameters: []
    return:
      type: System.Boolean
      description: "\n<p>\n<strong>true</strong> if the fault is a SOAP 1.1 or SOAP 1.2 fault; otherwise <strong>false</strong>.</p>\n"
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: System.ServiceModel.FaultCode.IsReceiverFault
  commentId: P:System.ServiceModel.FaultCode.IsReceiverFault
  id: IsReceiverFault
  parent: System.ServiceModel.FaultCode
  langs:
  - csharp
  - vb
  name: IsReceiverFault
  nameWithType: FaultCode.IsReceiverFault
  fullName: System.ServiceModel.FaultCode.IsReceiverFault
  type: Property
  source:
    remote:
      path: src/System.ServiceModel.Primitives/ref/System.ServiceModel.Primitives.cs
      branch: master
      repo: https://github.com/dotnet/wcf.git
    id: IsReceiverFault
    path: src/System.ServiceModel.Primitives/ref/System.ServiceModel.Primitives.cs
    startLine: 261
  assemblies:
  - System.ServiceModel.Primitives
  namespace: System.ServiceModel
  summary: "\n<p>Gets a value that indicates whether the fault is a SOAP 1.1 server fault or a SOAP 1.2 receiver fault.</p>\n"
  syntax:
    content: public bool IsReceiverFault { get; }
    content.vb: Public ReadOnly Property IsReceiverFault As Boolean
    parameters: []
    return:
      type: System.Boolean
      description: "\n<p>\n<strong>true</strong> if the fault is a SOAP 1.1 server fault or a SOAP 1.2 receiver fault; otherwise <strong>false</strong>.</p>\n"
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: System.ServiceModel.FaultCode.IsSenderFault
  commentId: P:System.ServiceModel.FaultCode.IsSenderFault
  id: IsSenderFault
  parent: System.ServiceModel.FaultCode
  langs:
  - csharp
  - vb
  name: IsSenderFault
  nameWithType: FaultCode.IsSenderFault
  fullName: System.ServiceModel.FaultCode.IsSenderFault
  type: Property
  source:
    remote:
      path: src/System.ServiceModel.Primitives/ref/System.ServiceModel.Primitives.cs
      branch: master
      repo: https://github.com/dotnet/wcf.git
    id: IsSenderFault
    path: src/System.ServiceModel.Primitives/ref/System.ServiceModel.Primitives.cs
    startLine: 262
  assemblies:
  - System.ServiceModel.Primitives
  namespace: System.ServiceModel
  summary: "\n<p>Gets a value that indicates whether the fault is a SOAP 1.1 client fault or a SOAP 1.2 sender fault.</p>\n"
  syntax:
    content: public bool IsSenderFault { get; }
    content.vb: Public ReadOnly Property IsSenderFault As Boolean
    parameters: []
    return:
      type: System.Boolean
      description: "\n<p>\n<strong>true</strong> if the fault is a SOAP 1.1 client fault or a SOAP 1.2 sender fault; otherwise <strong>false</strong>.</p>\n"
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: System.ServiceModel.FaultCode.Name
  commentId: P:System.ServiceModel.FaultCode.Name
  id: Name
  parent: System.ServiceModel.FaultCode
  langs:
  - csharp
  - vb
  name: Name
  nameWithType: FaultCode.Name
  fullName: System.ServiceModel.FaultCode.Name
  type: Property
  source:
    remote:
      path: src/System.ServiceModel.Primitives/ref/System.ServiceModel.Primitives.cs
      branch: master
      repo: https://github.com/dotnet/wcf.git
    id: Name
    path: src/System.ServiceModel.Primitives/ref/System.ServiceModel.Primitives.cs
    startLine: 263
  assemblies:
  - System.ServiceModel.Primitives
  namespace: System.ServiceModel
  summary: "\n<p>Gets the local name of the fault code. </p>\n"
  syntax:
    content: public string Name { get; }
    content.vb: Public ReadOnly Property Name As String
    parameters: []
    return:
      type: System.String
      description: "\n<p>The local name of the fault code. </p>\n"
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: System.ServiceModel.FaultCode.Namespace
  commentId: P:System.ServiceModel.FaultCode.Namespace
  id: Namespace
  parent: System.ServiceModel.FaultCode
  langs:
  - csharp
  - vb
  name: Namespace
  nameWithType: FaultCode.Namespace
  fullName: System.ServiceModel.FaultCode.Namespace
  type: Property
  source:
    remote:
      path: src/System.ServiceModel.Primitives/ref/System.ServiceModel.Primitives.cs
      branch: master
      repo: https://github.com/dotnet/wcf.git
    id: Namespace
    path: src/System.ServiceModel.Primitives/ref/System.ServiceModel.Primitives.cs
    startLine: 264
  assemblies:
  - System.ServiceModel.Primitives
  namespace: System.ServiceModel
  summary: "\n<p>Gets the namespace for the fault code. </p>\n"
  syntax:
    content: public string Namespace { get; }
    content.vb: Public ReadOnly Property Namespace As String
    parameters: []
    return:
      type: System.String
      description: "\n<p>A Uniform Resource Identifier (URI) for the namespace name. </p>\n"
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: System.ServiceModel.FaultCode.SubCode
  commentId: P:System.ServiceModel.FaultCode.SubCode
  id: SubCode
  parent: System.ServiceModel.FaultCode
  langs:
  - csharp
  - vb
  name: SubCode
  nameWithType: FaultCode.SubCode
  fullName: System.ServiceModel.FaultCode.SubCode
  type: Property
  source:
    remote:
      path: src/System.ServiceModel.Primitives/ref/System.ServiceModel.Primitives.cs
      branch: master
      repo: https://github.com/dotnet/wcf.git
    id: SubCode
    path: src/System.ServiceModel.Primitives/ref/System.ServiceModel.Primitives.cs
    startLine: 265
  assemblies:
  - System.ServiceModel.Primitives
  namespace: System.ServiceModel
  summary: "\n<p>Gets the fault subcode. </p>\n"
  syntax:
    content: public FaultCode SubCode { get; }
    content.vb: Public ReadOnly Property SubCode As FaultCode
    parameters: []
    return:
      type: System.ServiceModel.FaultCode
      description: "\n<p>A <xref href=\"System.ServiceModel.FaultCode\" data-throw-if-not-resolved=\"false\"></xref> object that represents the fault subcode. </p>\n"
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: System.ServiceModel.FaultCode.CreateSenderFaultCode(System.ServiceModel.FaultCode)
  commentId: M:System.ServiceModel.FaultCode.CreateSenderFaultCode(System.ServiceModel.FaultCode)
  id: CreateSenderFaultCode(System.ServiceModel.FaultCode)
  parent: System.ServiceModel.FaultCode
  langs:
  - csharp
  - vb
  name: CreateSenderFaultCode(FaultCode)
  nameWithType: FaultCode.CreateSenderFaultCode(FaultCode)
  fullName: System.ServiceModel.FaultCode.CreateSenderFaultCode(System.ServiceModel.FaultCode)
  type: Method
  source:
    remote:
      path: src/System.ServiceModel.Primitives/ref/System.ServiceModel.Primitives.cs
      branch: master
      repo: https://github.com/dotnet/wcf.git
    id: CreateSenderFaultCode
    path: src/System.ServiceModel.Primitives/ref/System.ServiceModel.Primitives.cs
    startLine: 266
  assemblies:
  - System.ServiceModel.Primitives
  namespace: System.ServiceModel
  summary: "\n<p>Creates a sender fault code with the specified subcode. </p>\n"
  syntax:
    content: public static FaultCode CreateSenderFaultCode(FaultCode subCode)
    content.vb: Public Shared Function CreateSenderFaultCode(subCode As FaultCode) As FaultCode
    parameters:
    - id: subCode
      type: System.ServiceModel.FaultCode
      description: "\n<p>A <xref href=\"System.ServiceModel.FaultCode\" data-throw-if-not-resolved=\"false\"></xref> object that represents the fault subcode. </p>\n"
    return:
      type: System.ServiceModel.FaultCode
      description: "\n<p>A <xref href=\"System.ServiceModel.FaultCode\" data-throw-if-not-resolved=\"false\"></xref> object with the created SOAP fault subcode in the <xref href=\"System.ServiceModel.FaultCode.SubCode\" data-throw-if-not-resolved=\"false\"></xref> property. </p>\n"
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "\n<p>\n<em>subCode</em> is <strong>null</strong>. </p>\n"
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
references:
- uid: System.ServiceModel
  commentId: N:System.ServiceModel
  isExternal: false
  name: System.ServiceModel
  nameWithType: System.ServiceModel
  fullName: System.ServiceModel
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: false
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: false
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.ServiceModel.FaultCode
  commentId: T:System.ServiceModel.FaultCode
  parent: System.ServiceModel
  isExternal: false
  name: FaultCode
  nameWithType: FaultCode
  fullName: System.ServiceModel.FaultCode
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: false
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.ArgumentNullException
  commentId: T:System.ArgumentNullException
  isExternal: false
  name: ArgumentNullException
  nameWithType: ArgumentNullException
  fullName: System.ArgumentNullException
- uid: System.ArgumentOutOfRangeException
  commentId: T:System.ArgumentOutOfRangeException
  isExternal: false
  name: ArgumentOutOfRangeException
  nameWithType: ArgumentOutOfRangeException
  fullName: System.ArgumentOutOfRangeException
