### YamlMime:ManagedReference
items:
- uid: System.ServiceModel.Channels.Binding
  commentId: T:System.ServiceModel.Channels.Binding
  id: Binding
  parent: System.ServiceModel.Channels
  children:
  - System.ServiceModel.Channels.Binding.#ctor
  - System.ServiceModel.Channels.Binding.#ctor(System.String,System.String)
  - System.ServiceModel.Channels.Binding.BuildChannelFactory``1(System.Object[])
  - System.ServiceModel.Channels.Binding.BuildChannelFactory``1(System.ServiceModel.Channels.BindingParameterCollection)
  - System.ServiceModel.Channels.Binding.CanBuildChannelFactory``1(System.Object[])
  - System.ServiceModel.Channels.Binding.CanBuildChannelFactory``1(System.ServiceModel.Channels.BindingParameterCollection)
  - System.ServiceModel.Channels.Binding.CloseTimeout
  - System.ServiceModel.Channels.Binding.CreateBindingElements
  - System.ServiceModel.Channels.Binding.GetProperty``1(System.ServiceModel.Channels.BindingParameterCollection)
  - System.ServiceModel.Channels.Binding.MessageVersion
  - System.ServiceModel.Channels.Binding.Name
  - System.ServiceModel.Channels.Binding.Namespace
  - System.ServiceModel.Channels.Binding.OpenTimeout
  - System.ServiceModel.Channels.Binding.ReceiveTimeout
  - System.ServiceModel.Channels.Binding.Scheme
  - System.ServiceModel.Channels.Binding.SendTimeout
  langs:
  - csharp
  - vb
  name: Binding
  nameWithType: Binding
  fullName: System.ServiceModel.Channels.Binding
  type: Class
  source:
    remote:
      path: src/System.Private.ServiceModel/src/System/ServiceModel/Channels/Binding.cs
      branch: master
      repo: https://github.com/dotnet/wcf.git
    id: Binding
    path: src/System.Private.ServiceModel/src/System/ServiceModel/Channels/Binding.cs
    startLine: 10
  assemblies:
  - System.ServiceModel.Primitives
  namespace: System.ServiceModel.Channels
  summary: "\n<p>Contains the binding elements that specify the protocols, transports, and message encoders used for communication between clients and services.</p>\n"
  syntax:
    content: 'public abstract class Binding : IDefaultCommunicationTimeouts'
    content.vb: >-
      Public MustInherit Class Binding
          Implements IDefaultCommunicationTimeouts
  inheritance:
  - System.Object
  implements:
  - System.ServiceModel.IDefaultCommunicationTimeouts
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  modifiers.csharp:
  - public
  - abstract
  - class
  modifiers.vb:
  - Public
  - MustInherit
  - Class
- uid: System.ServiceModel.Channels.Binding.#ctor
  commentId: M:System.ServiceModel.Channels.Binding.#ctor
  id: '#ctor'
  parent: System.ServiceModel.Channels.Binding
  langs:
  - csharp
  - vb
  name: Binding()
  nameWithType: Binding.Binding()
  fullName: System.ServiceModel.Channels.Binding.Binding()
  type: Constructor
  source:
    remote:
      path: src/System.Private.ServiceModel/src/System/ServiceModel/Channels/Binding.cs
      branch: master
      repo: https://github.com/dotnet/wcf.git
    id: .ctor
    path: src/System.Private.ServiceModel/src/System/ServiceModel/Channels/Binding.cs
    startLine: 20
  assemblies:
  - System.ServiceModel.Primitives
  namespace: System.ServiceModel.Channels
  summary: "\n<p>Initializes a new instance of the <xref href=\"System.ServiceModel.Channels.Binding\" data-throw-if-not-resolved=\"false\"></xref> class with a default name and namespace. </p>\n"
  syntax:
    content: protected Binding()
    content.vb: Protected Sub New
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: System.ServiceModel.Channels.Binding.#ctor(System.String,System.String)
  commentId: M:System.ServiceModel.Channels.Binding.#ctor(System.String,System.String)
  id: '#ctor(System.String,System.String)'
  parent: System.ServiceModel.Channels.Binding
  langs:
  - csharp
  - vb
  name: Binding(String, String)
  nameWithType: Binding.Binding(String, String)
  fullName: System.ServiceModel.Channels.Binding.Binding(System.String, System.String)
  type: Constructor
  source:
    remote:
      path: src/System.Private.ServiceModel/src/System/ServiceModel/Channels/Binding.cs
      branch: master
      repo: https://github.com/dotnet/wcf.git
    id: .ctor
    path: src/System.Private.ServiceModel/src/System/ServiceModel/Channels/Binding.cs
    startLine: 26
  assemblies:
  - System.ServiceModel.Primitives
  namespace: System.ServiceModel.Channels
  summary: "\n<p>Initializes a new instance of the <xref href=\"System.ServiceModel.Channels.Binding\" data-throw-if-not-resolved=\"false\"></xref> class from a specified binding of the service.</p>\n"
  syntax:
    content: protected Binding(string name, string ns)
    content.vb: Protected Sub New(name As String, ns As String)
    parameters:
    - id: name
      type: System.String
      description: "\n<p>The <xref href=\"System.ServiceModel.Channels.Binding.Name\" data-throw-if-not-resolved=\"false\"></xref> of the binding.</p>\n"
    - id: ns
      type: System.String
      description: "\n<p>The <xref href=\"System.ServiceModel.Channels.Binding.Namespace\" data-throw-if-not-resolved=\"false\"></xref> of the binding.</p>\n"
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "\n<p>\n<em>name</em> is <strong>null</strong> or an empty string.</p>\n"
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "\n<p>\n<em>ns</em> is <strong>null</strong>.</p>\n"
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: System.ServiceModel.Channels.Binding.CloseTimeout
  commentId: P:System.ServiceModel.Channels.Binding.CloseTimeout
  id: CloseTimeout
  parent: System.ServiceModel.Channels.Binding
  langs:
  - csharp
  - vb
  name: CloseTimeout
  nameWithType: Binding.CloseTimeout
  fullName: System.ServiceModel.Channels.Binding.CloseTimeout
  type: Property
  source:
    remote:
      path: src/System.Private.ServiceModel/src/System/ServiceModel/Channels/Binding.cs
      branch: master
      repo: https://github.com/dotnet/wcf.git
    id: CloseTimeout
    path: src/System.Private.ServiceModel/src/System/ServiceModel/Channels/Binding.cs
    startLine: 46
  assemblies:
  - System.ServiceModel.Primitives
  namespace: System.ServiceModel.Channels
  summary: "\n<p>Gets or sets the interval of time provided for a connection to close before the transport raises an exception.</p>\n"
  syntax:
    content: public TimeSpan CloseTimeout { get; set; }
    content.vb: Public Property CloseTimeout As TimeSpan
    parameters: []
    return:
      type: System.TimeSpan
      description: "\n<p>The <xref href=\"System.TimeSpan\" data-throw-if-not-resolved=\"false\"></xref> that specifies how long the close operation has to complete before timing out. The default value is 1 minute.</p>\n"
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "\n<p>The value is less than zero or too large.</p>\n"
  implements:
  - System.ServiceModel.IDefaultCommunicationTimeouts.CloseTimeout
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: System.ServiceModel.Channels.Binding.MessageVersion
  commentId: P:System.ServiceModel.Channels.Binding.MessageVersion
  id: MessageVersion
  parent: System.ServiceModel.Channels.Binding
  langs:
  - csharp
  - vb
  name: MessageVersion
  nameWithType: Binding.MessageVersion
  fullName: System.ServiceModel.Channels.Binding.MessageVersion
  type: Property
  source:
    remote:
      path: src/System.Private.ServiceModel/src/System/ServiceModel/Channels/Binding.cs
      branch: master
      repo: https://github.com/dotnet/wcf.git
    id: MessageVersion
    path: src/System.Private.ServiceModel/src/System/ServiceModel/Channels/Binding.cs
    startLine: 138
  assemblies:
  - System.ServiceModel.Primitives
  namespace: System.ServiceModel.Channels
  summary: "\n<p>Gets the message version used by clients and services configured with the binding.</p>\n"
  syntax:
    content: public MessageVersion MessageVersion { get; }
    content.vb: Public ReadOnly Property MessageVersion As MessageVersion
    parameters: []
    return:
      type: System.ServiceModel.Channels.MessageVersion
      description: "\n<p>The <xref href=\"System.ServiceModel.Channels.MessageVersion\" data-throw-if-not-resolved=\"false\"></xref> used by clients and services configured with the binding.</p>\n"
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: System.ServiceModel.Channels.Binding.Name
  commentId: P:System.ServiceModel.Channels.Binding.Name
  id: Name
  parent: System.ServiceModel.Channels.Binding
  langs:
  - csharp
  - vb
  name: Name
  nameWithType: Binding.Name
  fullName: System.ServiceModel.Channels.Binding.Name
  type: Property
  source:
    remote:
      path: src/System.Private.ServiceModel/src/System/ServiceModel/Channels/Binding.cs
      branch: master
      repo: https://github.com/dotnet/wcf.git
    id: Name
    path: src/System.Private.ServiceModel/src/System/ServiceModel/Channels/Binding.cs
    startLine: 64
  assemblies:
  - System.ServiceModel.Primitives
  namespace: System.ServiceModel.Channels
  summary: "\n<p>Gets or sets the name of the binding.</p>\n"
  syntax:
    content: public string Name { get; set; }
    content.vb: Public Property Name As String
    parameters: []
    return:
      type: System.String
      description: "\n<p>The name of the binding. The default name is <strong>null</strong>.</p>\n"
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "\n<p>The value set cannot be <strong>null</strong> or an empty string.</p>\n"
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: System.ServiceModel.Channels.Binding.Namespace
  commentId: P:System.ServiceModel.Channels.Binding.Namespace
  id: Namespace
  parent: System.ServiceModel.Channels.Binding
  langs:
  - csharp
  - vb
  name: Namespace
  nameWithType: Binding.Namespace
  fullName: System.ServiceModel.Channels.Binding.Namespace
  type: Property
  source:
    remote:
      path: src/System.Private.ServiceModel/src/System/ServiceModel/Channels/Binding.cs
      branch: master
      repo: https://github.com/dotnet/wcf.git
    id: Namespace
    path: src/System.Private.ServiceModel/src/System/ServiceModel/Channels/Binding.cs
    startLine: 82
  assemblies:
  - System.ServiceModel.Primitives
  namespace: System.ServiceModel.Channels
  summary: "\n<p>Gets or sets the XML namespace of the binding.</p>\n"
  syntax:
    content: public string Namespace { get; set; }
    content.vb: Public Property Namespace As String
    parameters: []
    return:
      type: System.String
      description: "\n<p>The XML namespace of the binding. The default value is \"http://tempuri.org/\".</p>\n"
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "\n<p>The value set cannot be <strong>null</strong>.</p>\n"
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: System.ServiceModel.Channels.Binding.OpenTimeout
  commentId: P:System.ServiceModel.Channels.Binding.OpenTimeout
  id: OpenTimeout
  parent: System.ServiceModel.Channels.Binding
  langs:
  - csharp
  - vb
  name: OpenTimeout
  nameWithType: Binding.OpenTimeout
  fullName: System.ServiceModel.Channels.Binding.OpenTimeout
  type: Property
  source:
    remote:
      path: src/System.Private.ServiceModel/src/System/ServiceModel/Channels/Binding.cs
      branch: master
      repo: https://github.com/dotnet/wcf.git
    id: OpenTimeout
    path: src/System.Private.ServiceModel/src/System/ServiceModel/Channels/Binding.cs
    startLine: 100
  assemblies:
  - System.ServiceModel.Primitives
  namespace: System.ServiceModel.Channels
  summary: "\n<p>Gets or sets the interval of time provided for a connection to open before the transport raises an exception.</p>\n"
  syntax:
    content: public TimeSpan OpenTimeout { get; set; }
    content.vb: Public Property OpenTimeout As TimeSpan
    parameters: []
    return:
      type: System.TimeSpan
      description: "\n<p>The <xref href=\"System.TimeSpan\" data-throw-if-not-resolved=\"false\"></xref> that specifies how long the open operation has to complete before timing out. The default value is 1 minute.</p>\n"
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "\n<p>The value is less than zero or too large.</p>\n"
  implements:
  - System.ServiceModel.IDefaultCommunicationTimeouts.OpenTimeout
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: System.ServiceModel.Channels.Binding.ReceiveTimeout
  commentId: P:System.ServiceModel.Channels.Binding.ReceiveTimeout
  id: ReceiveTimeout
  parent: System.ServiceModel.Channels.Binding
  langs:
  - csharp
  - vb
  name: ReceiveTimeout
  nameWithType: Binding.ReceiveTimeout
  fullName: System.ServiceModel.Channels.Binding.ReceiveTimeout
  type: Property
  source:
    remote:
      path: src/System.Private.ServiceModel/src/System/ServiceModel/Channels/Binding.cs
      branch: master
      repo: https://github.com/dotnet/wcf.git
    id: ReceiveTimeout
    path: src/System.Private.ServiceModel/src/System/ServiceModel/Channels/Binding.cs
    startLine: 118
  assemblies:
  - System.ServiceModel.Primitives
  namespace: System.ServiceModel.Channels
  summary: "\n<p>Gets or sets the interval of time that a connection can remain inactive, during which no application messages are received, before it is dropped.</p>\n"
  syntax:
    content: public TimeSpan ReceiveTimeout { get; set; }
    content.vb: Public Property ReceiveTimeout As TimeSpan
    parameters: []
    return:
      type: System.TimeSpan
      description: "\n<p>The <xref href=\"System.TimeSpan\" data-throw-if-not-resolved=\"false\"></xref> that specifies how long the application has to receive a message before timing out. The default value is 10 minute.</p>\n"
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "\n<p>The value is less than zero or too large.</p>\n"
  implements:
  - System.ServiceModel.IDefaultCommunicationTimeouts.ReceiveTimeout
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: System.ServiceModel.Channels.Binding.Scheme
  commentId: P:System.ServiceModel.Channels.Binding.Scheme
  id: Scheme
  parent: System.ServiceModel.Channels.Binding
  langs:
  - csharp
  - vb
  name: Scheme
  nameWithType: Binding.Scheme
  fullName: System.ServiceModel.Channels.Binding.Scheme
  type: Property
  source:
    remote:
      path: src/System.Private.ServiceModel/src/System/ServiceModel/Channels/Binding.cs
      branch: master
      repo: https://github.com/dotnet/wcf.git
    id: Scheme
    path: src/System.Private.ServiceModel/src/System/ServiceModel/Channels/Binding.cs
    startLine: 136
  assemblies:
  - System.ServiceModel.Primitives
  namespace: System.ServiceModel.Channels
  summary: "\n<p>When implemented in a derived class, sets the URI scheme that specifies the transport used by the channel and listener factories that are built by the bindings.</p>\n"
  syntax:
    content: public abstract string Scheme { get; }
    content.vb: Public MustOverride ReadOnly Property Scheme As String
    parameters: []
    return:
      type: System.String
      description: "\n<p>The URI scheme that is used by the channels or listeners that are created by the factories built by the current binding.</p>\n"
  modifiers.csharp:
  - public
  - abstract
  - get
  modifiers.vb:
  - Public
  - MustOverride
  - ReadOnly
- uid: System.ServiceModel.Channels.Binding.SendTimeout
  commentId: P:System.ServiceModel.Channels.Binding.SendTimeout
  id: SendTimeout
  parent: System.ServiceModel.Channels.Binding
  langs:
  - csharp
  - vb
  name: SendTimeout
  nameWithType: Binding.SendTimeout
  fullName: System.ServiceModel.Channels.Binding.SendTimeout
  type: Property
  source:
    remote:
      path: src/System.Private.ServiceModel/src/System/ServiceModel/Channels/Binding.cs
      branch: master
      repo: https://github.com/dotnet/wcf.git
    id: SendTimeout
    path: src/System.Private.ServiceModel/src/System/ServiceModel/Channels/Binding.cs
    startLine: 146
  assemblies:
  - System.ServiceModel.Primitives
  namespace: System.ServiceModel.Channels
  summary: "\n<p>Gets or sets the interval of time provided for a write operation to complete before the transport raises an exception.</p>\n"
  syntax:
    content: public TimeSpan SendTimeout { get; set; }
    content.vb: Public Property SendTimeout As TimeSpan
    parameters: []
    return:
      type: System.TimeSpan
      description: "\n<p>The <xref href=\"System.TimeSpan\" data-throw-if-not-resolved=\"false\"></xref> that specifies how long the write operation has to complete before timing out. The default value is 1 minute.</p>\n"
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "\n<p>The value is less than zero or too large.</p>\n"
  implements:
  - System.ServiceModel.IDefaultCommunicationTimeouts.SendTimeout
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: System.ServiceModel.Channels.Binding.BuildChannelFactory``1(System.Object[])
  commentId: M:System.ServiceModel.Channels.Binding.BuildChannelFactory``1(System.Object[])
  id: BuildChannelFactory``1(System.Object[])
  parent: System.ServiceModel.Channels.Binding
  langs:
  - csharp
  - vb
  name: BuildChannelFactory<TChannel>(Object[])
  nameWithType: Binding.BuildChannelFactory<TChannel>(Object[])
  fullName: System.ServiceModel.Channels.Binding.BuildChannelFactory<TChannel>(System.Object[])
  type: Method
  source:
    remote:
      path: src/System.Private.ServiceModel/src/System/ServiceModel/Channels/Binding.cs
      branch: master
      repo: https://github.com/dotnet/wcf.git
    id: BuildChannelFactory
    path: src/System.Private.ServiceModel/src/System/ServiceModel/Channels/Binding.cs
    startLine: 164
  assemblies:
  - System.ServiceModel.Primitives
  namespace: System.ServiceModel.Channels
  summary: "\n<p>Builds the channel factory stack on the client that creates a specified type of channel and that satisfies the features specified by an object array.</p>\n"
  syntax:
    content: public IChannelFactory<TChannel> BuildChannelFactory<TChannel>(params object[] parameters)
    content.vb: Public Function BuildChannelFactory(Of TChannel)(ParamArray parameters As Object()) As IChannelFactory(Of TChannel)
    parameters:
    - id: parameters
      type: System.Object[]
      description: "\n<p>The object array that specifies requirements for the channel factory that is built.</p>\n"
    typeParameters:
    - id: TChannel
      description: "\n<p>The type of channel the channel factory produces.</p>\n"
    return:
      type: System.ServiceModel.Channels.IChannelFactory{{TChannel}}
      description: "\n<p>An <xref href=\"System.ServiceModel.Channels.IChannelFactory`1\" data-throw-if-not-resolved=\"false\"></xref> of type <em>TChannel</em> that satisfies the features specified by the collection.</p>\n"
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "\n<p>Transport element is missing or out of order or scheme is invalid or the message version is not specified.</p>\n"
  nameWithType.vb: Binding.BuildChannelFactory(Of TChannel)(Object())
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: System.ServiceModel.Channels.Binding.BuildChannelFactory(Of TChannel)(System.Object())
  name.vb: BuildChannelFactory(Of TChannel)(Object())
- uid: System.ServiceModel.Channels.Binding.BuildChannelFactory``1(System.ServiceModel.Channels.BindingParameterCollection)
  commentId: M:System.ServiceModel.Channels.Binding.BuildChannelFactory``1(System.ServiceModel.Channels.BindingParameterCollection)
  id: BuildChannelFactory``1(System.ServiceModel.Channels.BindingParameterCollection)
  parent: System.ServiceModel.Channels.Binding
  langs:
  - csharp
  - vb
  name: BuildChannelFactory<TChannel>(BindingParameterCollection)
  nameWithType: Binding.BuildChannelFactory<TChannel>(BindingParameterCollection)
  fullName: System.ServiceModel.Channels.Binding.BuildChannelFactory<TChannel>(System.ServiceModel.Channels.BindingParameterCollection)
  type: Method
  source:
    remote:
      path: src/System.Private.ServiceModel/src/System/ServiceModel/Channels/Binding.cs
      branch: master
      repo: https://github.com/dotnet/wcf.git
    id: BuildChannelFactory
    path: src/System.Private.ServiceModel/src/System/ServiceModel/Channels/Binding.cs
    startLine: 169
  assemblies:
  - System.ServiceModel.Primitives
  namespace: System.ServiceModel.Channels
  summary: "\n<p>Builds the channel factory stack on the client that creates a specified type of channel and that satisfies the features specified by a collection of binding parameters.</p>\n"
  syntax:
    content: public virtual IChannelFactory<TChannel> BuildChannelFactory<TChannel>(BindingParameterCollection parameters)
    content.vb: Public Overridable Function BuildChannelFactory(Of TChannel)(parameters As BindingParameterCollection) As IChannelFactory(Of TChannel)
    parameters:
    - id: parameters
      type: System.ServiceModel.Channels.BindingParameterCollection
      description: "\n<p>The <xref href=\"System.ServiceModel.Channels.BindingParameterCollection\" data-throw-if-not-resolved=\"false\"></xref> that specifies requirements for the channel factory built.</p>\n"
    typeParameters:
    - id: TChannel
      description: "\n<p>The type of channel the channel factory produces.</p>\n"
    return:
      type: System.ServiceModel.Channels.IChannelFactory{{TChannel}}
      description: "\n<p>An <xref href=\"System.ServiceModel.Channels.IChannelFactory`1\" data-throw-if-not-resolved=\"false\"></xref> of type <em>TChannel</em> that satisfies the features specified by the collection.</p>\n"
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "\n<p>Transport element is missing or out of order or scheme is invalid or the message version is not specified.</p>\n"
  nameWithType.vb: Binding.BuildChannelFactory(Of TChannel)(BindingParameterCollection)
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
  fullName.vb: System.ServiceModel.Channels.Binding.BuildChannelFactory(Of TChannel)(System.ServiceModel.Channels.BindingParameterCollection)
  name.vb: BuildChannelFactory(Of TChannel)(BindingParameterCollection)
- uid: System.ServiceModel.Channels.Binding.CanBuildChannelFactory``1(System.Object[])
  commentId: M:System.ServiceModel.Channels.Binding.CanBuildChannelFactory``1(System.Object[])
  id: CanBuildChannelFactory``1(System.Object[])
  parent: System.ServiceModel.Channels.Binding
  langs:
  - csharp
  - vb
  name: CanBuildChannelFactory<TChannel>(Object[])
  nameWithType: Binding.CanBuildChannelFactory<TChannel>(Object[])
  fullName: System.ServiceModel.Channels.Binding.CanBuildChannelFactory<TChannel>(System.Object[])
  type: Method
  source:
    remote:
      path: src/System.Private.ServiceModel/src/System/ServiceModel/Channels/Binding.cs
      branch: master
      repo: https://github.com/dotnet/wcf.git
    id: CanBuildChannelFactory
    path: src/System.Private.ServiceModel/src/System/ServiceModel/Channels/Binding.cs
    startLine: 191
  assemblies:
  - System.ServiceModel.Primitives
  namespace: System.ServiceModel.Channels
  summary: "\n<p>Returns a value that indicates whether the current binding can build a channel factory stack on the client that satisfies the requirements specified by an object array.</p>\n"
  syntax:
    content: public bool CanBuildChannelFactory<TChannel>(params object[] parameters)
    content.vb: Public Function CanBuildChannelFactory(Of TChannel)(ParamArray parameters As Object()) As Boolean
    parameters:
    - id: parameters
      type: System.Object[]
      description: "\n<p>The object array that specifies requirements for the channel factory that is built.</p>\n"
    typeParameters:
    - id: TChannel
      description: "\n<p>The type of channel for which the factory is being tested.</p>\n"
    return:
      type: System.Boolean
      description: "\n<p>\n<strong>true</strong> if the specified channel factory stack can be build on the client; otherwise, <strong>false</strong>.</p>\n"
  nameWithType.vb: Binding.CanBuildChannelFactory(Of TChannel)(Object())
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: System.ServiceModel.Channels.Binding.CanBuildChannelFactory(Of TChannel)(System.Object())
  name.vb: CanBuildChannelFactory(Of TChannel)(Object())
- uid: System.ServiceModel.Channels.Binding.CanBuildChannelFactory``1(System.ServiceModel.Channels.BindingParameterCollection)
  commentId: M:System.ServiceModel.Channels.Binding.CanBuildChannelFactory``1(System.ServiceModel.Channels.BindingParameterCollection)
  id: CanBuildChannelFactory``1(System.ServiceModel.Channels.BindingParameterCollection)
  parent: System.ServiceModel.Channels.Binding
  langs:
  - csharp
  - vb
  name: CanBuildChannelFactory<TChannel>(BindingParameterCollection)
  nameWithType: Binding.CanBuildChannelFactory<TChannel>(BindingParameterCollection)
  fullName: System.ServiceModel.Channels.Binding.CanBuildChannelFactory<TChannel>(System.ServiceModel.Channels.BindingParameterCollection)
  type: Method
  source:
    remote:
      path: src/System.Private.ServiceModel/src/System/ServiceModel/Channels/Binding.cs
      branch: master
      repo: https://github.com/dotnet/wcf.git
    id: CanBuildChannelFactory
    path: src/System.Private.ServiceModel/src/System/ServiceModel/Channels/Binding.cs
    startLine: 196
  assemblies:
  - System.ServiceModel.Primitives
  namespace: System.ServiceModel.Channels
  summary: "\n<p>Returns a value that indicates whether the current binding can build a channel factory stack on the client that satisfies the collection of binding parameters specified.</p>\n"
  syntax:
    content: public virtual bool CanBuildChannelFactory<TChannel>(BindingParameterCollection parameters)
    content.vb: Public Overridable Function CanBuildChannelFactory(Of TChannel)(parameters As BindingParameterCollection) As Boolean
    parameters:
    - id: parameters
      type: System.ServiceModel.Channels.BindingParameterCollection
      description: "\n<p>The <xref href=\"System.ServiceModel.Channels.BindingParameterCollection\" data-throw-if-not-resolved=\"false\"></xref> that specifies requirements for the channel factory that is built.</p>\n"
    typeParameters:
    - id: TChannel
      description: "\n<p>The type of channel for which the factory is being tested.</p>\n"
    return:
      type: System.Boolean
      description: "\n<p>\n<strong>true</strong> if the specified channel factory stack can be build on the client; otherwise, <strong>false</strong>.</p>\n"
  nameWithType.vb: Binding.CanBuildChannelFactory(Of TChannel)(BindingParameterCollection)
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
  fullName.vb: System.ServiceModel.Channels.Binding.CanBuildChannelFactory(Of TChannel)(System.ServiceModel.Channels.BindingParameterCollection)
  name.vb: CanBuildChannelFactory(Of TChannel)(BindingParameterCollection)
- uid: System.ServiceModel.Channels.Binding.CreateBindingElements
  commentId: M:System.ServiceModel.Channels.Binding.CreateBindingElements
  id: CreateBindingElements
  parent: System.ServiceModel.Channels.Binding
  langs:
  - csharp
  - vb
  name: CreateBindingElements()
  nameWithType: Binding.CreateBindingElements()
  fullName: System.ServiceModel.Channels.Binding.CreateBindingElements()
  type: Method
  source:
    remote:
      path: src/System.Private.ServiceModel/src/System/ServiceModel/Channels/Binding.cs
      branch: master
      repo: https://github.com/dotnet/wcf.git
    id: CreateBindingElements
    path: src/System.Private.ServiceModel/src/System/ServiceModel/Channels/Binding.cs
    startLine: 203
  assemblies:
  - System.ServiceModel.Primitives
  namespace: System.ServiceModel.Channels
  summary: "\n<p>When overridden in a derived class, creates a collection that contains the binding elements that are part of the current binding. </p>\n"
  syntax:
    content: public abstract BindingElementCollection CreateBindingElements()
    content.vb: Public MustOverride Function CreateBindingElements As BindingElementCollection
    return:
      type: System.ServiceModel.Channels.BindingElementCollection
      description: "\n<p>A <xref href=\"System.Collections.Generic.ICollection`1\" data-throw-if-not-resolved=\"false\"></xref> object of type <xref href=\"System.ServiceModel.Channels.BindingElement\" data-throw-if-not-resolved=\"false\"></xref> that contains the binding elements from the current binding object in the correct order.</p>\n"
  modifiers.csharp:
  - public
  - abstract
  modifiers.vb:
  - Public
  - MustOverride
- uid: System.ServiceModel.Channels.Binding.GetProperty``1(System.ServiceModel.Channels.BindingParameterCollection)
  commentId: M:System.ServiceModel.Channels.Binding.GetProperty``1(System.ServiceModel.Channels.BindingParameterCollection)
  id: GetProperty``1(System.ServiceModel.Channels.BindingParameterCollection)
  parent: System.ServiceModel.Channels.Binding
  langs:
  - csharp
  - vb
  name: GetProperty<T>(BindingParameterCollection)
  nameWithType: Binding.GetProperty<T>(BindingParameterCollection)
  fullName: System.ServiceModel.Channels.Binding.GetProperty<T>(System.ServiceModel.Channels.BindingParameterCollection)
  type: Method
  source:
    remote:
      path: src/System.Private.ServiceModel/src/System/ServiceModel/Channels/Binding.cs
      branch: master
      repo: https://github.com/dotnet/wcf.git
    id: GetProperty
    path: src/System.Private.ServiceModel/src/System/ServiceModel/Channels/Binding.cs
    startLine: 205
  assemblies:
  - System.ServiceModel.Primitives
  namespace: System.ServiceModel.Channels
  summary: "\n<p>Returns a typed object requested, if present, from the appropriate layer in the binding stack.</p>\n"
  syntax:
    content: 'public T GetProperty<T>(BindingParameterCollection parameters)where T : class'
    content.vb: Public Function GetProperty(Of T As Class)(parameters As BindingParameterCollection) As T
    parameters:
    - id: parameters
      type: System.ServiceModel.Channels.BindingParameterCollection
      description: "\n<p>The <xref href=\"System.ServiceModel.Channels.BindingParameterCollection\" data-throw-if-not-resolved=\"false\"></xref> that specifies requirements for the channel listener that is built.</p>\n"
    typeParameters:
    - id: T
      description: "\n<p>The typed object for which the method is querying.</p>\n"
    return:
      type: '{T}'
      description: "\n<p>The typed object <em>T</em> requested if it is present or <strong>null</strong> if it is not.</p>\n"
  nameWithType.vb: Binding.GetProperty(Of T)(BindingParameterCollection)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: System.ServiceModel.Channels.Binding.GetProperty(Of T)(System.ServiceModel.Channels.BindingParameterCollection)
  name.vb: GetProperty(Of T)(BindingParameterCollection)
references:
- uid: System.ServiceModel.Channels
  commentId: N:System.ServiceModel.Channels
  isExternal: false
  name: System.ServiceModel.Channels
  nameWithType: System.ServiceModel.Channels
  fullName: System.ServiceModel.Channels
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: false
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.ServiceModel.IDefaultCommunicationTimeouts
  commentId: T:System.ServiceModel.IDefaultCommunicationTimeouts
  parent: System.ServiceModel
  isExternal: false
  name: IDefaultCommunicationTimeouts
  nameWithType: IDefaultCommunicationTimeouts
  fullName: System.ServiceModel.IDefaultCommunicationTimeouts
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: System.ServiceModel
  commentId: N:System.ServiceModel
  isExternal: false
  name: System.ServiceModel
  nameWithType: System.ServiceModel
  fullName: System.ServiceModel
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: false
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.ServiceModel.IDefaultCommunicationTimeouts.CloseTimeout
  commentId: P:System.ServiceModel.IDefaultCommunicationTimeouts.CloseTimeout
  parent: System.ServiceModel.IDefaultCommunicationTimeouts
  isExternal: false
  name: CloseTimeout
  nameWithType: IDefaultCommunicationTimeouts.CloseTimeout
  fullName: System.ServiceModel.IDefaultCommunicationTimeouts.CloseTimeout
- uid: System.TimeSpan
  commentId: T:System.TimeSpan
  parent: System
  isExternal: false
  name: TimeSpan
  nameWithType: TimeSpan
  fullName: System.TimeSpan
- uid: System.ServiceModel.Channels.MessageVersion
  commentId: T:System.ServiceModel.Channels.MessageVersion
  parent: System.ServiceModel.Channels
  isExternal: false
  name: MessageVersion
  nameWithType: MessageVersion
  fullName: System.ServiceModel.Channels.MessageVersion
- uid: System.ServiceModel.IDefaultCommunicationTimeouts.OpenTimeout
  commentId: P:System.ServiceModel.IDefaultCommunicationTimeouts.OpenTimeout
  parent: System.ServiceModel.IDefaultCommunicationTimeouts
  isExternal: false
  name: OpenTimeout
  nameWithType: IDefaultCommunicationTimeouts.OpenTimeout
  fullName: System.ServiceModel.IDefaultCommunicationTimeouts.OpenTimeout
- uid: System.ServiceModel.IDefaultCommunicationTimeouts.ReceiveTimeout
  commentId: P:System.ServiceModel.IDefaultCommunicationTimeouts.ReceiveTimeout
  parent: System.ServiceModel.IDefaultCommunicationTimeouts
  isExternal: false
  name: ReceiveTimeout
  nameWithType: IDefaultCommunicationTimeouts.ReceiveTimeout
  fullName: System.ServiceModel.IDefaultCommunicationTimeouts.ReceiveTimeout
- uid: System.ServiceModel.IDefaultCommunicationTimeouts.SendTimeout
  commentId: P:System.ServiceModel.IDefaultCommunicationTimeouts.SendTimeout
  parent: System.ServiceModel.IDefaultCommunicationTimeouts
  isExternal: false
  name: SendTimeout
  nameWithType: IDefaultCommunicationTimeouts.SendTimeout
  fullName: System.ServiceModel.IDefaultCommunicationTimeouts.SendTimeout
- uid: System.Object[]
  name: Object[]
  nameWithType: Object[]
  fullName: System.Object[]
  nameWithType.vb: Object()
  fullname.vb: System.Object()
  name.vb: Object()
  spec.csharp:
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  spec.vb:
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
- uid: System.ServiceModel.Channels.IChannelFactory{{TChannel}}
  commentId: '!:System.ServiceModel.Channels.IChannelFactory{``0}'
  parent: System.ServiceModel.Channels
  definition: System.ServiceModel.Channels.IChannelFactory`1
  name: IChannelFactory<TChannel>
  nameWithType: IChannelFactory<TChannel>
  fullName: System.ServiceModel.Channels.IChannelFactory<TChannel>
  nameWithType.vb: IChannelFactory(Of TChannel)
  fullname.vb: System.ServiceModel.Channels.IChannelFactory(Of TChannel)
  name.vb: IChannelFactory(Of TChannel)
  spec.csharp:
  - uid: System.ServiceModel.Channels.IChannelFactory`1
    name: IChannelFactory
    nameWithType: IChannelFactory
    fullName: System.ServiceModel.Channels.IChannelFactory
  - name: <
    nameWithType: <
    fullName: <
  - name: TChannel
    nameWithType: TChannel
    fullName: TChannel
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.ServiceModel.Channels.IChannelFactory`1
    name: IChannelFactory
    nameWithType: IChannelFactory
    fullName: System.ServiceModel.Channels.IChannelFactory
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TChannel
    nameWithType: TChannel
    fullName: TChannel
  - name: )
    nameWithType: )
    fullName: )
- uid: System.ServiceModel.Channels.IChannelFactory`1
  commentId: T:System.ServiceModel.Channels.IChannelFactory`1
  isExternal: false
  name: IChannelFactory<>
  nameWithType: IChannelFactory<>
  fullName: System.ServiceModel.Channels.IChannelFactory<>
  nameWithType.vb: IChannelFactory(Of )
  fullname.vb: System.ServiceModel.Channels.IChannelFactory(Of )
  name.vb: IChannelFactory(Of )
  spec.csharp:
  - uid: System.ServiceModel.Channels.IChannelFactory`1
    name: IChannelFactory
    nameWithType: IChannelFactory
    fullName: System.ServiceModel.Channels.IChannelFactory
  - name: <
    nameWithType: <
    fullName: <
  - {}
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.ServiceModel.Channels.IChannelFactory`1
    name: IChannelFactory
    nameWithType: IChannelFactory
    fullName: System.ServiceModel.Channels.IChannelFactory
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - {}
  - name: )
    nameWithType: )
    fullName: )
- uid: System.ServiceModel.Channels.BindingParameterCollection
  commentId: T:System.ServiceModel.Channels.BindingParameterCollection
  parent: System.ServiceModel.Channels
  isExternal: false
  name: BindingParameterCollection
  nameWithType: BindingParameterCollection
  fullName: System.ServiceModel.Channels.BindingParameterCollection
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: false
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.ServiceModel.Channels.BindingElementCollection
  commentId: T:System.ServiceModel.Channels.BindingElementCollection
  parent: System.ServiceModel.Channels
  isExternal: false
  name: BindingElementCollection
  nameWithType: BindingElementCollection
  fullName: System.ServiceModel.Channels.BindingElementCollection
- uid: '{T}'
  commentId: '!:T'
  definition: T
  name: T
  nameWithType: T
  fullName: T
- uid: T
  isExternal: false
  name: T
  nameWithType: T
  fullName: T
- uid: System.ArgumentException
  commentId: T:System.ArgumentException
  parent: System
  isExternal: false
  name: ArgumentException
  nameWithType: ArgumentException
  fullName: System.ArgumentException
- uid: System.ArgumentNullException
  commentId: T:System.ArgumentNullException
  isExternal: false
  name: ArgumentNullException
  nameWithType: ArgumentNullException
  fullName: System.ArgumentNullException
- uid: System.ArgumentOutOfRangeException
  commentId: T:System.ArgumentOutOfRangeException
  isExternal: false
  name: ArgumentOutOfRangeException
  nameWithType: ArgumentOutOfRangeException
  fullName: System.ArgumentOutOfRangeException
- uid: System.InvalidOperationException
  commentId: T:System.InvalidOperationException
  parent: System
  isExternal: false
  name: InvalidOperationException
  nameWithType: InvalidOperationException
  fullName: System.InvalidOperationException
