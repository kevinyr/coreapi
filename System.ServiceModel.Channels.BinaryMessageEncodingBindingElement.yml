items:
- uid: System.ServiceModel.Channels.BinaryMessageEncodingBindingElement
  commentId: T:System.ServiceModel.Channels.BinaryMessageEncodingBindingElement
  id: BinaryMessageEncodingBindingElement
  parent: System.ServiceModel.Channels
  children:
  - System.ServiceModel.Channels.BinaryMessageEncodingBindingElement.#ctor
  - System.ServiceModel.Channels.BinaryMessageEncodingBindingElement.BuildChannelFactory``1(System.ServiceModel.Channels.BindingContext)
  - System.ServiceModel.Channels.BinaryMessageEncodingBindingElement.Clone
  - System.ServiceModel.Channels.BinaryMessageEncodingBindingElement.CompressionFormat
  - System.ServiceModel.Channels.BinaryMessageEncodingBindingElement.CreateMessageEncoderFactory
  - System.ServiceModel.Channels.BinaryMessageEncodingBindingElement.GetProperty``1(System.ServiceModel.Channels.BindingContext)
  - System.ServiceModel.Channels.BinaryMessageEncodingBindingElement.MaxSessionSize
  - System.ServiceModel.Channels.BinaryMessageEncodingBindingElement.MessageVersion
  - System.ServiceModel.Channels.BinaryMessageEncodingBindingElement.ReaderQuotas
  langs:
  - csharp
  - vb
  name: BinaryMessageEncodingBindingElement
  fullName: System.ServiceModel.Channels.BinaryMessageEncodingBindingElement
  type: Class
  source:
    remote:
      path: src/System.ServiceModel.Primitives/ref/System.ServiceModel.Primitives.cs
      branch: master
      repo: https://github.com/dotnet/wcf.git
    id: BinaryMessageEncodingBindingElement
    path: src/System.ServiceModel.Primitives/ref/System.ServiceModel.Primitives.cs
    startLine: 582
  assemblies:
  - System.ServiceModel.Primitives
  namespace: System.ServiceModel.Channels
  summary: "\n<p>The binding element that specifies the .NET Binary Format for XML used to encode messages.</p>\n"
  syntax:
    content: 'public sealed class BinaryMessageEncodingBindingElement : MessageEncodingBindingElement'
    content.vb: >-
      Public NotInheritable Class BinaryMessageEncodingBindingElement
          Inherits MessageEncodingBindingElement
  inheritance:
  - System.Object
  - System.ServiceModel.Channels.BindingElement
  - System.ServiceModel.Channels.MessageEncodingBindingElement
  inheritedMembers:
  - System.ServiceModel.Channels.BindingElement.CanBuildChannelFactory``1(System.ServiceModel.Channels.BindingContext)
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  modifiers.csharp:
  - public
  - sealed
  - class
  modifiers.vb:
  - Public
  - NotInheritable
  - Class
  nameWithType: BinaryMessageEncodingBindingElement
- uid: System.ServiceModel.Channels.BinaryMessageEncodingBindingElement.#ctor
  commentId: M:System.ServiceModel.Channels.BinaryMessageEncodingBindingElement.#ctor
  id: '#ctor'
  parent: System.ServiceModel.Channels.BinaryMessageEncodingBindingElement
  langs:
  - csharp
  - vb
  name: BinaryMessageEncodingBindingElement()
  fullName: System.ServiceModel.Channels.BinaryMessageEncodingBindingElement.BinaryMessageEncodingBindingElement()
  type: Constructor
  source:
    remote:
      path: src/System.ServiceModel.Primitives/ref/System.ServiceModel.Primitives.cs
      branch: master
      repo: https://github.com/dotnet/wcf.git
    id: .ctor
    path: src/System.ServiceModel.Primitives/ref/System.ServiceModel.Primitives.cs
    startLine: 584
  assemblies:
  - System.ServiceModel.Primitives
  namespace: System.ServiceModel.Channels
  summary: "\n<p>Initializes a new instance of the <xref href=\"System.ServiceModel.Channels.BinaryMessageEncodingBindingElement\" data-throw-if-not-resolved=\"false\"></xref> class. </p>\n"
  syntax:
    content: public BinaryMessageEncodingBindingElement()
    content.vb: Public Sub New
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  nameWithType: BinaryMessageEncodingBindingElement.BinaryMessageEncodingBindingElement()
- uid: System.ServiceModel.Channels.BinaryMessageEncodingBindingElement.CompressionFormat
  commentId: P:System.ServiceModel.Channels.BinaryMessageEncodingBindingElement.CompressionFormat
  id: CompressionFormat
  parent: System.ServiceModel.Channels.BinaryMessageEncodingBindingElement
  langs:
  - csharp
  - vb
  name: CompressionFormat
  fullName: System.ServiceModel.Channels.BinaryMessageEncodingBindingElement.CompressionFormat
  type: Property
  source:
    remote:
      path: src/System.ServiceModel.Primitives/ref/System.ServiceModel.Primitives.cs
      branch: master
      repo: https://github.com/dotnet/wcf.git
    id: CompressionFormat
    path: src/System.ServiceModel.Primitives/ref/System.ServiceModel.Primitives.cs
    startLine: 585
  assemblies:
  - System.ServiceModel.Primitives
  namespace: System.ServiceModel.Channels
  summary: "\n<p>Gets or sets the compression format for the binding element.</p>\n"
  syntax:
    content: public CompressionFormat CompressionFormat { get; set; }
    content.vb: Public Property CompressionFormat As CompressionFormat
    parameters: []
    return:
      type: System.ServiceModel.Channels.CompressionFormat
      description: "\n<p>The compression format for the binding element.</p>\n"
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
  nameWithType: BinaryMessageEncodingBindingElement.CompressionFormat
- uid: System.ServiceModel.Channels.BinaryMessageEncodingBindingElement.MaxSessionSize
  commentId: P:System.ServiceModel.Channels.BinaryMessageEncodingBindingElement.MaxSessionSize
  id: MaxSessionSize
  parent: System.ServiceModel.Channels.BinaryMessageEncodingBindingElement
  langs:
  - csharp
  - vb
  name: MaxSessionSize
  fullName: System.ServiceModel.Channels.BinaryMessageEncodingBindingElement.MaxSessionSize
  type: Property
  source:
    remote:
      path: src/System.ServiceModel.Primitives/ref/System.ServiceModel.Primitives.cs
      branch: master
      repo: https://github.com/dotnet/wcf.git
    id: MaxSessionSize
    path: src/System.ServiceModel.Primitives/ref/System.ServiceModel.Primitives.cs
    startLine: 587
  assemblies:
  - System.ServiceModel.Primitives
  namespace: System.ServiceModel.Channels
  summary: "\n<p>Gets or sets the maximum amount of memory available within a session for optimizing transmission procedures.</p>\n"
  syntax:
    content: public int MaxSessionSize { get; set; }
    content.vb: Public Property MaxSessionSize As Integer
    parameters: []
    return:
      type: System.Int32
      description: "\n<p>The maximum size, in bytes, of a session. The default value is 2048 bytes.</p>\n"
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "\n<p>The value is less than or equal to zero.</p>\n"
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
  nameWithType: BinaryMessageEncodingBindingElement.MaxSessionSize
- uid: System.ServiceModel.Channels.BinaryMessageEncodingBindingElement.MessageVersion
  commentId: P:System.ServiceModel.Channels.BinaryMessageEncodingBindingElement.MessageVersion
  id: MessageVersion
  parent: System.ServiceModel.Channels.BinaryMessageEncodingBindingElement
  langs:
  - csharp
  - vb
  name: MessageVersion
  fullName: System.ServiceModel.Channels.BinaryMessageEncodingBindingElement.MessageVersion
  type: Property
  source:
    remote:
      path: src/System.ServiceModel.Primitives/ref/System.ServiceModel.Primitives.cs
      branch: master
      repo: https://github.com/dotnet/wcf.git
    id: MessageVersion
    path: src/System.ServiceModel.Primitives/ref/System.ServiceModel.Primitives.cs
    startLine: 589
  assemblies:
  - System.ServiceModel.Primitives
  namespace: System.ServiceModel.Channels
  summary: "\n<p>Gets or sets the SOAP message and WS-Addressing versions that are used or expected.</p>\n"
  syntax:
    content: public override MessageVersion MessageVersion { get; set; }
    content.vb: Public Overrides Property MessageVersion As MessageVersion
    parameters: []
    return:
      type: System.ServiceModel.Channels.MessageVersion
      description: "\n<p>The <xref href=\"System.ServiceModel.Channels.MessageVersion\" data-throw-if-not-resolved=\"false\"></xref> that is used or expected.</p>\n"
  overridden: System.ServiceModel.Channels.MessageEncodingBindingElement.MessageVersion
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "\n<p>The value set is <strong>null</strong>.</p>\n"
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "\n<p>The value set is an unsupported envelope version.</p>\n"
  modifiers.csharp:
  - public
  - override
  - get
  - set
  modifiers.vb:
  - Public
  - Overrides
  nameWithType: BinaryMessageEncodingBindingElement.MessageVersion
- uid: System.ServiceModel.Channels.BinaryMessageEncodingBindingElement.ReaderQuotas
  commentId: P:System.ServiceModel.Channels.BinaryMessageEncodingBindingElement.ReaderQuotas
  id: ReaderQuotas
  parent: System.ServiceModel.Channels.BinaryMessageEncodingBindingElement
  langs:
  - csharp
  - vb
  name: ReaderQuotas
  fullName: System.ServiceModel.Channels.BinaryMessageEncodingBindingElement.ReaderQuotas
  type: Property
  source:
    remote:
      path: src/System.ServiceModel.Primitives/ref/System.ServiceModel.Primitives.cs
      branch: master
      repo: https://github.com/dotnet/wcf.git
    id: ReaderQuotas
    path: src/System.ServiceModel.Primitives/ref/System.ServiceModel.Primitives.cs
    startLine: 590
  assemblies:
  - System.ServiceModel.Primitives
  namespace: System.ServiceModel.Channels
  summary: "\n<p>Gets constraints on the complexity of XML messages that can be processed by endpoints configured with this binding element.</p>\n"
  syntax:
    content: public Xml.XmlDictionaryReaderQuotas ReaderQuotas { get; set; }
    content.vb: Public Property ReaderQuotas As Xml.XmlDictionaryReaderQuotas
    parameters: []
    return:
      type: System.Xml.XmlDictionaryReaderQuotas
      description: "\n<p>The <xref href=\"System.Xml.XmlDictionaryReaderQuotas\" data-throw-if-not-resolved=\"false\"></xref> that specifies the complexity constraints on SOAP messages exchanged. The default values for these constraints are provided in the following remarks section.</p>\n"
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
  nameWithType: BinaryMessageEncodingBindingElement.ReaderQuotas
- uid: System.ServiceModel.Channels.BinaryMessageEncodingBindingElement.BuildChannelFactory``1(System.ServiceModel.Channels.BindingContext)
  commentId: M:System.ServiceModel.Channels.BinaryMessageEncodingBindingElement.BuildChannelFactory``1(System.ServiceModel.Channels.BindingContext)
  id: BuildChannelFactory``1(System.ServiceModel.Channels.BindingContext)
  parent: System.ServiceModel.Channels.BinaryMessageEncodingBindingElement
  langs:
  - csharp
  - vb
  name: BuildChannelFactory<TChannel>(BindingContext)
  fullName: System.ServiceModel.Channels.BinaryMessageEncodingBindingElement.BuildChannelFactory<TChannel>(System.ServiceModel.Channels.BindingContext)
  type: Method
  source:
    remote:
      path: src/System.ServiceModel.Primitives/ref/System.ServiceModel.Primitives.cs
      branch: master
      repo: https://github.com/dotnet/wcf.git
    id: BuildChannelFactory
    path: src/System.ServiceModel.Primitives/ref/System.ServiceModel.Primitives.cs
    startLine: 591
  assemblies:
  - System.ServiceModel.Primitives
  namespace: System.ServiceModel.Channels
  summary: "\n<p>Builds the channel factory stack on the client that creates a specified type of channel for a specified context.</p>\n"
  syntax:
    content: public override IChannelFactory<TChannel> BuildChannelFactory<TChannel>(BindingContext context)
    content.vb: Public Overrides Function BuildChannelFactory(Of TChannel)(context As BindingContext) As IChannelFactory(Of TChannel)
    parameters:
    - id: context
      type: System.ServiceModel.Channels.BindingContext
      description: "\n<p>The <xref href=\"System.ServiceModel.Channels.BindingContext\" data-throw-if-not-resolved=\"false\"></xref> for the channel.</p>\n"
    typeParameters:
    - id: TChannel
      description: "\n<p>The type of channel the channel factory produces.</p>\n"
    return:
      type: System.ServiceModel.Channels.IChannelFactory{{TChannel}}
      description: "\n<p>An <xref href=\"System.ServiceModel.Channels.IChannelFactory`1\" data-throw-if-not-resolved=\"false\"></xref> of type <em>TChannel</em> for the specified context.</p>\n"
  overridden: System.ServiceModel.Channels.BindingElement.BuildChannelFactory``1(System.ServiceModel.Channels.BindingContext)
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
  fullName.vb: System.ServiceModel.Channels.BinaryMessageEncodingBindingElement.BuildChannelFactory(Of TChannel)(System.ServiceModel.Channels.BindingContext)
  name.vb: BuildChannelFactory(Of TChannel)(BindingContext)
  nameWithType: BinaryMessageEncodingBindingElement.BuildChannelFactory<TChannel>(BindingContext)
  nameWithType.vb: BinaryMessageEncodingBindingElement.BuildChannelFactory(Of TChannel)(BindingContext)
- uid: System.ServiceModel.Channels.BinaryMessageEncodingBindingElement.Clone
  commentId: M:System.ServiceModel.Channels.BinaryMessageEncodingBindingElement.Clone
  id: Clone
  parent: System.ServiceModel.Channels.BinaryMessageEncodingBindingElement
  langs:
  - csharp
  - vb
  name: Clone()
  fullName: System.ServiceModel.Channels.BinaryMessageEncodingBindingElement.Clone()
  type: Method
  source:
    remote:
      path: src/System.ServiceModel.Primitives/ref/System.ServiceModel.Primitives.cs
      branch: master
      repo: https://github.com/dotnet/wcf.git
    id: Clone
    path: src/System.ServiceModel.Primitives/ref/System.ServiceModel.Primitives.cs
    startLine: 592
  assemblies:
  - System.ServiceModel.Primitives
  namespace: System.ServiceModel.Channels
  summary: "\n<p>Creates a new <xref href=\"System.ServiceModel.Channels.BinaryMessageEncodingBindingElement\" data-throw-if-not-resolved=\"false\"></xref> object initialized from the current one.</p>\n"
  syntax:
    content: public override BindingElement Clone()
    content.vb: Public Overrides Function Clone As BindingElement
    return:
      type: System.ServiceModel.Channels.BindingElement
      description: "\n<p>A <xref href=\"System.ServiceModel.Channels.BinaryMessageEncodingBindingElement\" data-throw-if-not-resolved=\"false\"></xref> object with property values equal to those of the current element.</p>\n"
  overridden: System.ServiceModel.Channels.BindingElement.Clone
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
  nameWithType: BinaryMessageEncodingBindingElement.Clone()
- uid: System.ServiceModel.Channels.BinaryMessageEncodingBindingElement.CreateMessageEncoderFactory
  commentId: M:System.ServiceModel.Channels.BinaryMessageEncodingBindingElement.CreateMessageEncoderFactory
  id: CreateMessageEncoderFactory
  parent: System.ServiceModel.Channels.BinaryMessageEncodingBindingElement
  langs:
  - csharp
  - vb
  name: CreateMessageEncoderFactory()
  fullName: System.ServiceModel.Channels.BinaryMessageEncodingBindingElement.CreateMessageEncoderFactory()
  type: Method
  source:
    remote:
      path: src/System.ServiceModel.Primitives/ref/System.ServiceModel.Primitives.cs
      branch: master
      repo: https://github.com/dotnet/wcf.git
    id: CreateMessageEncoderFactory
    path: src/System.ServiceModel.Primitives/ref/System.ServiceModel.Primitives.cs
    startLine: 593
  assemblies:
  - System.ServiceModel.Primitives
  namespace: System.ServiceModel.Channels
  summary: "\n<p>Creates a factory for binary message encoders that employ the SOAP and WS-Addressing versions and the character encoding specified by the current encoding binding element.</p>\n"
  syntax:
    content: public override MessageEncoderFactory CreateMessageEncoderFactory()
    content.vb: Public Overrides Function CreateMessageEncoderFactory As MessageEncoderFactory
    return:
      type: System.ServiceModel.Channels.MessageEncoderFactory
      description: "\n<p>The <xref href=\"System.ServiceModel.Channels.MessageEncoderFactory\" data-throw-if-not-resolved=\"false\"></xref> that this binding element creates.</p>\n"
  overridden: System.ServiceModel.Channels.MessageEncodingBindingElement.CreateMessageEncoderFactory
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
  nameWithType: BinaryMessageEncodingBindingElement.CreateMessageEncoderFactory()
- uid: System.ServiceModel.Channels.BinaryMessageEncodingBindingElement.GetProperty``1(System.ServiceModel.Channels.BindingContext)
  commentId: M:System.ServiceModel.Channels.BinaryMessageEncodingBindingElement.GetProperty``1(System.ServiceModel.Channels.BindingContext)
  id: GetProperty``1(System.ServiceModel.Channels.BindingContext)
  parent: System.ServiceModel.Channels.BinaryMessageEncodingBindingElement
  langs:
  - csharp
  - vb
  name: GetProperty<T>(BindingContext)
  fullName: System.ServiceModel.Channels.BinaryMessageEncodingBindingElement.GetProperty<T>(System.ServiceModel.Channels.BindingContext)
  type: Method
  source:
    remote:
      path: src/System.ServiceModel.Primitives/ref/System.ServiceModel.Primitives.cs
      branch: master
      repo: https://github.com/dotnet/wcf.git
    id: GetProperty
    path: src/System.ServiceModel.Primitives/ref/System.ServiceModel.Primitives.cs
    startLine: 594
  assemblies:
  - System.ServiceModel.Primitives
  namespace: System.ServiceModel.Channels
  summary: "\n<p>Returns a typed object requested, if present, from the appropriate layer in the binding element stack.</p>\n"
  syntax:
    content: 'public override T GetProperty<T>(BindingContext context)where T : class'
    content.vb: Public Overrides Function GetProperty(Of T As Class)(context As BindingContext) As T
    parameters:
    - id: context
      type: System.ServiceModel.Channels.BindingContext
      description: "\n<p>The <xref href=\"System.ServiceModel.Channels.BindingContext\" data-throw-if-not-resolved=\"false\"></xref> for the binding element.</p>\n"
    typeParameters:
    - id: T
      description: "\n<p>The typed object for which the method is querying.</p>\n"
    return:
      type: '{T}'
      description: "\n<p>The typed object <em>T</em> requested if it is present or <strong>null</strong> if it is not.</p>\n"
  overridden: System.ServiceModel.Channels.MessageEncodingBindingElement.GetProperty``1(System.ServiceModel.Channels.BindingContext)
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
  fullName.vb: System.ServiceModel.Channels.BinaryMessageEncodingBindingElement.GetProperty(Of T)(System.ServiceModel.Channels.BindingContext)
  name.vb: GetProperty(Of T)(BindingContext)
  nameWithType: BinaryMessageEncodingBindingElement.GetProperty<T>(BindingContext)
  nameWithType.vb: BinaryMessageEncodingBindingElement.GetProperty(Of T)(BindingContext)
references:
- uid: System.ServiceModel.Channels
  isExternal: false
  name: System.ServiceModel.Channels
  fullName: System.ServiceModel.Channels
  commentId: N:System.ServiceModel.Channels
  nameWithType: System.ServiceModel.Channels
- uid: System.Object
  parent: System
  isExternal: false
  name: Object
  fullName: System.Object
  commentId: T:System.Object
  nameWithType: Object
- uid: System.ServiceModel.Channels.BindingElement
  parent: System.ServiceModel.Channels
  isExternal: false
  name: BindingElement
  fullName: System.ServiceModel.Channels.BindingElement
  commentId: T:System.ServiceModel.Channels.BindingElement
  nameWithType: BindingElement
- uid: System.ServiceModel.Channels.MessageEncodingBindingElement
  parent: System.ServiceModel.Channels
  isExternal: false
  name: MessageEncodingBindingElement
  fullName: System.ServiceModel.Channels.MessageEncodingBindingElement
  commentId: T:System.ServiceModel.Channels.MessageEncodingBindingElement
  nameWithType: MessageEncodingBindingElement
- uid: System.ServiceModel.Channels.BindingElement.CanBuildChannelFactory``1(System.ServiceModel.Channels.BindingContext)
  parent: System.ServiceModel.Channels.BindingElement
  isExternal: false
  name: CanBuildChannelFactory<TChannel>(BindingContext)
  fullName: System.ServiceModel.Channels.BindingElement.CanBuildChannelFactory<TChannel>(System.ServiceModel.Channels.BindingContext)
  fullname.vb: System.ServiceModel.Channels.BindingElement.CanBuildChannelFactory(Of TChannel)(System.ServiceModel.Channels.BindingContext)
  name.vb: CanBuildChannelFactory(Of TChannel)(BindingContext)
  spec.csharp:
  - uid: System.ServiceModel.Channels.BindingElement.CanBuildChannelFactory``1(System.ServiceModel.Channels.BindingContext)
    name: CanBuildChannelFactory<TChannel>
    fullName: System.ServiceModel.Channels.BindingElement.CanBuildChannelFactory<TChannel>
  - name: (
    fullName: (
  - uid: System.ServiceModel.Channels.BindingContext
    name: BindingContext
    fullName: System.ServiceModel.Channels.BindingContext
  - name: )
    fullName: )
  spec.vb:
  - uid: System.ServiceModel.Channels.BindingElement.CanBuildChannelFactory``1(System.ServiceModel.Channels.BindingContext)
    name: CanBuildChannelFactory(Of TChannel)
    fullName: System.ServiceModel.Channels.BindingElement.CanBuildChannelFactory(Of TChannel)
  - name: (
    fullName: (
  - uid: System.ServiceModel.Channels.BindingContext
    name: BindingContext
    fullName: System.ServiceModel.Channels.BindingContext
  - name: )
    fullName: )
  commentId: M:System.ServiceModel.Channels.BindingElement.CanBuildChannelFactory``1(System.ServiceModel.Channels.BindingContext)
  nameWithType: BindingElement.CanBuildChannelFactory<TChannel>(BindingContext)
  nameWithType.vb: BindingElement.CanBuildChannelFactory(Of TChannel)(BindingContext)
- uid: System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  commentId: M:System.Object.ToString
  nameWithType: Object.ToString()
- uid: System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
  commentId: M:System.Object.Equals(System.Object)
  nameWithType: Object.Equals(Object)
- uid: System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
  commentId: M:System.Object.Equals(System.Object,System.Object)
  nameWithType: Object.Equals(Object, Object)
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
- uid: System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  commentId: M:System.Object.GetHashCode
  nameWithType: Object.GetHashCode()
- uid: System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  commentId: M:System.Object.GetType
  nameWithType: Object.GetType()
- uid: System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  commentId: M:System.Object.MemberwiseClone
  nameWithType: Object.MemberwiseClone()
- uid: System
  isExternal: false
  name: System
  fullName: System
  commentId: N:System
  nameWithType: System
- uid: System.ServiceModel.Channels.CompressionFormat
  parent: System.ServiceModel.Channels
  isExternal: false
  name: CompressionFormat
  fullName: System.ServiceModel.Channels.CompressionFormat
  commentId: T:System.ServiceModel.Channels.CompressionFormat
  nameWithType: CompressionFormat
- uid: System.Int32
  parent: System
  isExternal: false
  name: Int32
  fullName: System.Int32
  commentId: T:System.Int32
  nameWithType: Int32
- uid: System.ServiceModel.Channels.MessageEncodingBindingElement.MessageVersion
  parent: System.ServiceModel.Channels.MessageEncodingBindingElement
  isExternal: false
  name: MessageVersion
  fullName: System.ServiceModel.Channels.MessageEncodingBindingElement.MessageVersion
  commentId: P:System.ServiceModel.Channels.MessageEncodingBindingElement.MessageVersion
  nameWithType: MessageEncodingBindingElement.MessageVersion
- uid: System.ServiceModel.Channels.MessageVersion
  parent: System.ServiceModel.Channels
  isExternal: false
  name: MessageVersion
  fullName: System.ServiceModel.Channels.MessageVersion
  commentId: T:System.ServiceModel.Channels.MessageVersion
  nameWithType: MessageVersion
- uid: System.Xml.XmlDictionaryReaderQuotas
  parent: System.Xml
  isExternal: false
  name: XmlDictionaryReaderQuotas
  fullName: System.Xml.XmlDictionaryReaderQuotas
  commentId: T:System.Xml.XmlDictionaryReaderQuotas
  nameWithType: XmlDictionaryReaderQuotas
- uid: System.Xml
  isExternal: false
  name: System.Xml
  fullName: System.Xml
  commentId: N:System.Xml
  nameWithType: System.Xml
- uid: System.ServiceModel.Channels.BindingElement.BuildChannelFactory``1(System.ServiceModel.Channels.BindingContext)
  parent: System.ServiceModel.Channels.BindingElement
  isExternal: false
  name: BuildChannelFactory<TChannel>(BindingContext)
  fullName: System.ServiceModel.Channels.BindingElement.BuildChannelFactory<TChannel>(System.ServiceModel.Channels.BindingContext)
  fullname.vb: System.ServiceModel.Channels.BindingElement.BuildChannelFactory(Of TChannel)(System.ServiceModel.Channels.BindingContext)
  name.vb: BuildChannelFactory(Of TChannel)(BindingContext)
  spec.csharp:
  - uid: System.ServiceModel.Channels.BindingElement.BuildChannelFactory``1(System.ServiceModel.Channels.BindingContext)
    name: BuildChannelFactory<TChannel>
    fullName: System.ServiceModel.Channels.BindingElement.BuildChannelFactory<TChannel>
  - name: (
    fullName: (
  - uid: System.ServiceModel.Channels.BindingContext
    name: BindingContext
    fullName: System.ServiceModel.Channels.BindingContext
  - name: )
    fullName: )
  spec.vb:
  - uid: System.ServiceModel.Channels.BindingElement.BuildChannelFactory``1(System.ServiceModel.Channels.BindingContext)
    name: BuildChannelFactory(Of TChannel)
    fullName: System.ServiceModel.Channels.BindingElement.BuildChannelFactory(Of TChannel)
  - name: (
    fullName: (
  - uid: System.ServiceModel.Channels.BindingContext
    name: BindingContext
    fullName: System.ServiceModel.Channels.BindingContext
  - name: )
    fullName: )
  commentId: M:System.ServiceModel.Channels.BindingElement.BuildChannelFactory``1(System.ServiceModel.Channels.BindingContext)
  nameWithType: BindingElement.BuildChannelFactory<TChannel>(BindingContext)
  nameWithType.vb: BindingElement.BuildChannelFactory(Of TChannel)(BindingContext)
- uid: System.ServiceModel.Channels.BindingContext
  parent: System.ServiceModel.Channels
  isExternal: false
  name: BindingContext
  fullName: System.ServiceModel.Channels.BindingContext
  commentId: T:System.ServiceModel.Channels.BindingContext
  nameWithType: BindingContext
- uid: System.ServiceModel.Channels.IChannelFactory{{TChannel}}
  parent: System.ServiceModel.Channels
  definition: System.ServiceModel.Channels.IChannelFactory`1
  name: IChannelFactory<TChannel>
  fullName: System.ServiceModel.Channels.IChannelFactory<TChannel>
  fullname.vb: System.ServiceModel.Channels.IChannelFactory(Of TChannel)
  name.vb: IChannelFactory(Of TChannel)
  spec.csharp:
  - uid: System.ServiceModel.Channels.IChannelFactory`1
    name: IChannelFactory
    fullName: System.ServiceModel.Channels.IChannelFactory
  - name: <
    fullName: <
  - name: TChannel
    fullName: TChannel
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: System.ServiceModel.Channels.IChannelFactory`1
    name: IChannelFactory
    fullName: System.ServiceModel.Channels.IChannelFactory
  - name: '(Of '
    fullName: '(Of '
  - name: TChannel
    fullName: TChannel
  - name: )
    fullName: )
  commentId: '!:System.ServiceModel.Channels.IChannelFactory{``0}'
  nameWithType: IChannelFactory<TChannel>
  nameWithType.vb: IChannelFactory(Of TChannel)
- uid: System.ServiceModel.Channels.IChannelFactory`1
  isExternal: false
  name: IChannelFactory<>
  fullName: System.ServiceModel.Channels.IChannelFactory<>
  fullname.vb: System.ServiceModel.Channels.IChannelFactory(Of )
  name.vb: IChannelFactory(Of )
  spec.csharp:
  - uid: System.ServiceModel.Channels.IChannelFactory`1
    name: IChannelFactory
    fullName: System.ServiceModel.Channels.IChannelFactory
  - name: <
    fullName: <
  - {}
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: System.ServiceModel.Channels.IChannelFactory`1
    name: IChannelFactory
    fullName: System.ServiceModel.Channels.IChannelFactory
  - name: '(Of '
    fullName: '(Of '
  - {}
  - name: )
    fullName: )
  commentId: T:System.ServiceModel.Channels.IChannelFactory`1
  nameWithType: IChannelFactory<>
  nameWithType.vb: IChannelFactory(Of )
- uid: System.ServiceModel.Channels.BindingElement.Clone
  parent: System.ServiceModel.Channels.BindingElement
  isExternal: false
  name: Clone()
  fullName: System.ServiceModel.Channels.BindingElement.Clone()
  spec.csharp:
  - uid: System.ServiceModel.Channels.BindingElement.Clone
    name: Clone
    fullName: System.ServiceModel.Channels.BindingElement.Clone
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.ServiceModel.Channels.BindingElement.Clone
    name: Clone
    fullName: System.ServiceModel.Channels.BindingElement.Clone
  - name: (
    fullName: (
  - name: )
    fullName: )
  commentId: M:System.ServiceModel.Channels.BindingElement.Clone
  nameWithType: BindingElement.Clone()
- uid: System.ServiceModel.Channels.MessageEncodingBindingElement.CreateMessageEncoderFactory
  parent: System.ServiceModel.Channels.MessageEncodingBindingElement
  isExternal: false
  name: CreateMessageEncoderFactory()
  fullName: System.ServiceModel.Channels.MessageEncodingBindingElement.CreateMessageEncoderFactory()
  spec.csharp:
  - uid: System.ServiceModel.Channels.MessageEncodingBindingElement.CreateMessageEncoderFactory
    name: CreateMessageEncoderFactory
    fullName: System.ServiceModel.Channels.MessageEncodingBindingElement.CreateMessageEncoderFactory
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.ServiceModel.Channels.MessageEncodingBindingElement.CreateMessageEncoderFactory
    name: CreateMessageEncoderFactory
    fullName: System.ServiceModel.Channels.MessageEncodingBindingElement.CreateMessageEncoderFactory
  - name: (
    fullName: (
  - name: )
    fullName: )
  commentId: M:System.ServiceModel.Channels.MessageEncodingBindingElement.CreateMessageEncoderFactory
  nameWithType: MessageEncodingBindingElement.CreateMessageEncoderFactory()
- uid: System.ServiceModel.Channels.MessageEncoderFactory
  parent: System.ServiceModel.Channels
  isExternal: false
  name: MessageEncoderFactory
  fullName: System.ServiceModel.Channels.MessageEncoderFactory
  commentId: T:System.ServiceModel.Channels.MessageEncoderFactory
  nameWithType: MessageEncoderFactory
- uid: System.ServiceModel.Channels.MessageEncodingBindingElement.GetProperty``1(System.ServiceModel.Channels.BindingContext)
  parent: System.ServiceModel.Channels.MessageEncodingBindingElement
  isExternal: false
  name: GetProperty<T>(BindingContext)
  fullName: System.ServiceModel.Channels.MessageEncodingBindingElement.GetProperty<T>(System.ServiceModel.Channels.BindingContext)
  fullname.vb: System.ServiceModel.Channels.MessageEncodingBindingElement.GetProperty(Of T)(System.ServiceModel.Channels.BindingContext)
  name.vb: GetProperty(Of T)(BindingContext)
  spec.csharp:
  - uid: System.ServiceModel.Channels.MessageEncodingBindingElement.GetProperty``1(System.ServiceModel.Channels.BindingContext)
    name: GetProperty<T>
    fullName: System.ServiceModel.Channels.MessageEncodingBindingElement.GetProperty<T>
  - name: (
    fullName: (
  - uid: System.ServiceModel.Channels.BindingContext
    name: BindingContext
    fullName: System.ServiceModel.Channels.BindingContext
  - name: )
    fullName: )
  spec.vb:
  - uid: System.ServiceModel.Channels.MessageEncodingBindingElement.GetProperty``1(System.ServiceModel.Channels.BindingContext)
    name: GetProperty(Of T)
    fullName: System.ServiceModel.Channels.MessageEncodingBindingElement.GetProperty(Of T)
  - name: (
    fullName: (
  - uid: System.ServiceModel.Channels.BindingContext
    name: BindingContext
    fullName: System.ServiceModel.Channels.BindingContext
  - name: )
    fullName: )
  commentId: M:System.ServiceModel.Channels.MessageEncodingBindingElement.GetProperty``1(System.ServiceModel.Channels.BindingContext)
  nameWithType: MessageEncodingBindingElement.GetProperty<T>(BindingContext)
  nameWithType.vb: MessageEncodingBindingElement.GetProperty(Of T)(BindingContext)
- uid: '{T}'
  definition: T
  name: T
  fullName: T
  commentId: '!:T'
  nameWithType: T
- uid: T
  isExternal: false
  name: T
  fullName: T
  nameWithType: T
- uid: System.ArgumentOutOfRangeException
  isExternal: false
  name: ArgumentOutOfRangeException
  fullName: System.ArgumentOutOfRangeException
  nameWithType: ArgumentOutOfRangeException
  commentId: T:System.ArgumentOutOfRangeException
- uid: System.ArgumentNullException
  isExternal: false
  name: ArgumentNullException
  fullName: System.ArgumentNullException
  nameWithType: ArgumentNullException
  commentId: T:System.ArgumentNullException
