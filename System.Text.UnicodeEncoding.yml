### YamlMime:ManagedReference
items:
- uid: System.Text.UnicodeEncoding
  commentId: T:System.Text.UnicodeEncoding
  id: UnicodeEncoding
  parent: System.Text
  children:
  - System.Text.UnicodeEncoding.#ctor
  - System.Text.UnicodeEncoding.#ctor(System.Boolean,System.Boolean)
  - System.Text.UnicodeEncoding.#ctor(System.Boolean,System.Boolean,System.Boolean)
  - System.Text.UnicodeEncoding.Equals(System.Object)
  - System.Text.UnicodeEncoding.GetByteCount(System.Char[],System.Int32,System.Int32)
  - System.Text.UnicodeEncoding.GetByteCount(System.String)
  - System.Text.UnicodeEncoding.GetBytes(System.Char[],System.Int32,System.Int32,System.Byte[],System.Int32)
  - System.Text.UnicodeEncoding.GetBytes(System.String,System.Int32,System.Int32,System.Byte[],System.Int32)
  - System.Text.UnicodeEncoding.GetCharCount(System.Byte[],System.Int32,System.Int32)
  - System.Text.UnicodeEncoding.GetChars(System.Byte[],System.Int32,System.Int32,System.Char[],System.Int32)
  - System.Text.UnicodeEncoding.GetDecoder
  - System.Text.UnicodeEncoding.GetEncoder
  - System.Text.UnicodeEncoding.GetHashCode
  - System.Text.UnicodeEncoding.GetMaxByteCount(System.Int32)
  - System.Text.UnicodeEncoding.GetMaxCharCount(System.Int32)
  - System.Text.UnicodeEncoding.GetPreamble
  - System.Text.UnicodeEncoding.GetString(System.Byte[],System.Int32,System.Int32)
  langs:
  - csharp
  - vb
  name: UnicodeEncoding
  nameWithType: UnicodeEncoding
  fullName: System.Text.UnicodeEncoding
  type: Class
  source:
    remote:
      path: src/mscorlib/src/System/Text/UnicodeEncoding.cs
      branch: master
      repo: https://github.com/dotnet/coreclr.git
    id: UnicodeEncoding
    path: src/mscorlib/src/System/Text/UnicodeEncoding.cs
    startLine: 20
  assemblies:
  - System.Text.Encoding.Extensions
  namespace: System.Text
  summary: "\n<p>Represents a UTF-16 encoding of Unicode characters. </p>\n"
  syntax:
    content: >-
      [ComVisible(true)]

      public class UnicodeEncoding : Encoding, ICloneable
    content.vb: >-
      <ComVisible(True)>

      Public Class UnicodeEncoding
          Inherits Encoding
          Implements ICloneable
  seealso:
  - linkId: System.Text.Encoding
    commentId: T:System.Text.Encoding
  - linkId: System.Text.Encoder
    commentId: T:System.Text.Encoder
  - linkId: System.Text.Decoder
    commentId: T:System.Text.Decoder
  - linkId: System.Text.UTF32Encoding
    commentId: T:System.Text.UTF32Encoding
  - linkId: System.Text.UTF8Encoding
    commentId: T:System.Text.UTF8Encoding
  - linkId: System.Text.UTF7Encoding
    commentId: T:System.Text.UTF7Encoding
  - linkId: System.Text.ASCIIEncoding
    commentId: T:System.Text.ASCIIEncoding
  - linkId: System.Globalization.UnicodeCategory
    commentId: T:System.Globalization.UnicodeCategory
  - linkId: System.Globalization.CharUnicodeInfo
    commentId: T:System.Globalization.CharUnicodeInfo
  inheritance:
  - System.Object
  - System.Text.Encoding
  implements:
  - System.ICloneable
  inheritedMembers:
  - System.Text.Encoding.Convert(System.Text.Encoding,System.Text.Encoding,System.Byte[])
  - System.Text.Encoding.Convert(System.Text.Encoding,System.Text.Encoding,System.Byte[],System.Int32,System.Int32)
  - System.Text.Encoding.RegisterProvider(System.Text.EncodingProvider)
  - System.Text.Encoding.GetEncoding(System.Int32)
  - System.Text.Encoding.GetEncoding(System.Int32,System.Text.EncoderFallback,System.Text.DecoderFallback)
  - System.Text.Encoding.GetEncoding(System.String)
  - System.Text.Encoding.GetEncoding(System.String,System.Text.EncoderFallback,System.Text.DecoderFallback)
  - System.Text.Encoding.GetEncodings
  - System.Text.Encoding.Clone
  - System.Text.Encoding.GetByteCount(System.Char[])
  - System.Text.Encoding.GetByteCount(System.Char*,System.Int32)
  - System.Text.Encoding.GetBytes(System.Char[])
  - System.Text.Encoding.GetBytes(System.Char[],System.Int32,System.Int32)
  - System.Text.Encoding.GetBytes(System.String)
  - System.Text.Encoding.GetBytes(System.Char*,System.Int32,System.Byte*,System.Int32)
  - System.Text.Encoding.GetCharCount(System.Byte[])
  - System.Text.Encoding.GetCharCount(System.Byte*,System.Int32)
  - System.Text.Encoding.GetChars(System.Byte[])
  - System.Text.Encoding.GetChars(System.Byte[],System.Int32,System.Int32)
  - System.Text.Encoding.GetChars(System.Byte*,System.Int32,System.Char*,System.Int32)
  - System.Text.Encoding.GetString(System.Byte*,System.Int32)
  - System.Text.Encoding.IsAlwaysNormalized
  - System.Text.Encoding.IsAlwaysNormalized(System.Text.NormalizationForm)
  - System.Text.Encoding.GetString(System.Byte[])
  - System.Text.Encoding.BodyName
  - System.Text.Encoding.EncodingName
  - System.Text.Encoding.HeaderName
  - System.Text.Encoding.WebName
  - System.Text.Encoding.WindowsCodePage
  - System.Text.Encoding.IsBrowserDisplay
  - System.Text.Encoding.IsBrowserSave
  - System.Text.Encoding.IsMailNewsDisplay
  - System.Text.Encoding.IsMailNewsSave
  - System.Text.Encoding.IsSingleByte
  - System.Text.Encoding.EncoderFallback
  - System.Text.Encoding.DecoderFallback
  - System.Text.Encoding.IsReadOnly
  - System.Text.Encoding.ASCII
  - System.Text.Encoding.CodePage
  - System.Text.Encoding.Default
  - System.Text.Encoding.Unicode
  - System.Text.Encoding.BigEndianUnicode
  - System.Text.Encoding.UTF7
  - System.Text.Encoding.UTF8
  - System.Text.Encoding.UTF32
  - System.Object.ToString
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetType
  - System.Object.MemberwiseClone
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: System.Text.UnicodeEncoding.#ctor
  commentId: M:System.Text.UnicodeEncoding.#ctor
  id: '#ctor'
  parent: System.Text.UnicodeEncoding
  langs:
  - csharp
  - vb
  name: UnicodeEncoding()
  nameWithType: UnicodeEncoding.UnicodeEncoding()
  fullName: System.Text.UnicodeEncoding.UnicodeEncoding()
  type: Constructor
  source:
    remote:
      path: src/mscorlib/src/System/Text/UnicodeEncoding.cs
      branch: master
      repo: https://github.com/dotnet/coreclr.git
    id: .ctor
    path: src/mscorlib/src/System/Text/UnicodeEncoding.cs
    startLine: 33
  assemblies:
  - System.Text.Encoding.Extensions
  namespace: System.Text
  summary: "\n<p>Initializes a new instance of the <xref href=\"System.Text.UnicodeEncoding\" data-throw-if-not-resolved=\"false\"></xref> class.</p>\n"
  syntax:
    content: public UnicodeEncoding()
    content.vb: Public Sub New
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: System.Text.UnicodeEncoding.#ctor(System.Boolean,System.Boolean)
  commentId: M:System.Text.UnicodeEncoding.#ctor(System.Boolean,System.Boolean)
  id: '#ctor(System.Boolean,System.Boolean)'
  parent: System.Text.UnicodeEncoding
  langs:
  - csharp
  - vb
  name: UnicodeEncoding(Boolean, Boolean)
  nameWithType: UnicodeEncoding.UnicodeEncoding(Boolean, Boolean)
  fullName: System.Text.UnicodeEncoding.UnicodeEncoding(System.Boolean, System.Boolean)
  type: Constructor
  source:
    remote:
      path: src/mscorlib/src/System/Text/UnicodeEncoding.cs
      branch: master
      repo: https://github.com/dotnet/coreclr.git
    id: .ctor
    path: src/mscorlib/src/System/Text/UnicodeEncoding.cs
    startLine: 39
  assemblies:
  - System.Text.Encoding.Extensions
  namespace: System.Text
  summary: "\n<p>Initializes a new instance of the <xref href=\"System.Text.UnicodeEncoding\" data-throw-if-not-resolved=\"false\"></xref> class. Parameters specify whether to use the big endian byte order and whether the <xref href=\"System.Text.UnicodeEncoding.GetPreamble\" data-throw-if-not-resolved=\"false\"></xref> method returns a Unicode byte order mark. </p>\n"
  syntax:
    content: public UnicodeEncoding(bool bigEndian, bool byteOrderMark)
    content.vb: Public Sub New(bigEndian As Boolean, byteOrderMark As Boolean)
    parameters:
    - id: bigEndian
      type: System.Boolean
      description: "\n<p>\n<strong>true</strong> to use the big endian byte order (most significant byte first), or <strong>false</strong> to use the little endian byte order (least significant byte first). </p>\n"
    - id: byteOrderMark
      type: System.Boolean
      description: "\n<p>\n<strong>true</strong> to specify that the <xref href=\"System.Text.UnicodeEncoding.GetPreamble\" data-throw-if-not-resolved=\"false\"></xref> method returns a Unicode byte order mark; otherwise, <strong>false</strong>. See the Remarks section for more information. </p>\n"
  seealso:
  - linkId: System.Text.UnicodeEncoding.GetPreamble
    commentId: M:System.Text.UnicodeEncoding.GetPreamble
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: System.Text.UnicodeEncoding.#ctor(System.Boolean,System.Boolean,System.Boolean)
  commentId: M:System.Text.UnicodeEncoding.#ctor(System.Boolean,System.Boolean,System.Boolean)
  id: '#ctor(System.Boolean,System.Boolean,System.Boolean)'
  parent: System.Text.UnicodeEncoding
  langs:
  - csharp
  - vb
  name: UnicodeEncoding(Boolean, Boolean, Boolean)
  nameWithType: UnicodeEncoding.UnicodeEncoding(Boolean, Boolean, Boolean)
  fullName: System.Text.UnicodeEncoding.UnicodeEncoding(System.Boolean, System.Boolean, System.Boolean)
  type: Constructor
  source:
    remote:
      path: src/mscorlib/src/System/Text/UnicodeEncoding.cs
      branch: master
      repo: https://github.com/dotnet/coreclr.git
    id: .ctor
    path: src/mscorlib/src/System/Text/UnicodeEncoding.cs
    startLine: 45
  assemblies:
  - System.Text.Encoding.Extensions
  namespace: System.Text
  summary: "\n<p>Initializes a new instance of the <xref href=\"System.Text.UnicodeEncoding\" data-throw-if-not-resolved=\"false\"></xref> class. Parameters specify whether to use the big endian byte order, whether to provide a Unicode byte order mark, and whether to throw an exception when an invalid encoding is detected.</p>\n"
  syntax:
    content: public UnicodeEncoding(bool bigEndian, bool byteOrderMark, bool throwOnInvalidBytes)
    content.vb: Public Sub New(bigEndian As Boolean, byteOrderMark As Boolean, throwOnInvalidBytes As Boolean)
    parameters:
    - id: bigEndian
      type: System.Boolean
      description: "\n<p>\n<strong>true</strong> to use the big endian byte order (most significant byte first); <strong>false</strong> to use the little endian byte order (least significant byte first). </p>\n"
    - id: byteOrderMark
      type: System.Boolean
      description: "\n<p>\n<strong>true</strong> to specify that the <xref href=\"System.Text.UnicodeEncoding.GetPreamble\" data-throw-if-not-resolved=\"false\"></xref> method returns a Unicode byte order mark; otherwise, <strong>false</strong>. See the Remarks section for more information. </p>\n"
    - id: throwOnInvalidBytes
      type: System.Boolean
      description: "\n<p>\n<strong>true</strong> to specify that an exception should be thrown when an invalid encoding is detected; otherwise, <strong>false</strong>. </p>\n"
  seealso:
  - linkId: System.Text.UnicodeEncoding.GetPreamble
    commentId: M:System.Text.UnicodeEncoding.GetPreamble
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: System.Text.UnicodeEncoding.Equals(System.Object)
  commentId: M:System.Text.UnicodeEncoding.Equals(System.Object)
  id: Equals(System.Object)
  parent: System.Text.UnicodeEncoding
  langs:
  - csharp
  - vb
  name: Equals(Object)
  nameWithType: UnicodeEncoding.Equals(Object)
  fullName: System.Text.UnicodeEncoding.Equals(System.Object)
  type: Method
  source:
    remote:
      path: src/mscorlib/src/System/Text/UnicodeEncoding.cs
      branch: master
      repo: https://github.com/dotnet/coreclr.git
    id: Equals
    path: src/mscorlib/src/System/Text/UnicodeEncoding.cs
    startLine: 1740
  assemblies:
  - System.Text.Encoding.Extensions
  namespace: System.Text
  summary: "\n<p>Determines whether the specified <xref href=\"System.Object\" data-throw-if-not-resolved=\"false\"></xref> is equal to the current <xref href=\"System.Text.UnicodeEncoding\" data-throw-if-not-resolved=\"false\"></xref> object.</p>\n"
  syntax:
    content: public override bool Equals(object value)
    content.vb: Public Overrides Function Equals(value As Object) As Boolean
    parameters:
    - id: value
      type: System.Object
      description: "\n<p>The object to compare with the current object. </p>\n"
    return:
      type: System.Boolean
      description: "\n<p>\n<strong>true</strong> if <em>value</em> is an instance of <xref href=\"System.Text.UnicodeEncoding\" data-throw-if-not-resolved=\"false\"></xref> and is equal to the current object; otherwise, <strong>false</strong>.</p>\n"
  overridden: System.Text.Encoding.Equals(System.Object)
  seealso:
  - linkId: System.Text.UnicodeEncoding.#ctor
    commentId: M:System.Text.UnicodeEncoding.#ctor
  - linkId: System.Object.Equals(System.Object)
    commentId: M:System.Object.Equals(System.Object)
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
- uid: System.Text.UnicodeEncoding.GetByteCount(System.Char[],System.Int32,System.Int32)
  commentId: M:System.Text.UnicodeEncoding.GetByteCount(System.Char[],System.Int32,System.Int32)
  id: GetByteCount(System.Char[],System.Int32,System.Int32)
  parent: System.Text.UnicodeEncoding
  langs:
  - csharp
  - vb
  name: GetByteCount(Char[], Int32, Int32)
  nameWithType: UnicodeEncoding.GetByteCount(Char[], Int32, Int32)
  fullName: System.Text.UnicodeEncoding.GetByteCount(System.Char[], System.Int32, System.Int32)
  type: Method
  source:
    remote:
      path: src/mscorlib/src/System/Text/UnicodeEncoding.cs
      branch: master
      repo: https://github.com/dotnet/coreclr.git
    id: GetByteCount
    path: src/mscorlib/src/System/Text/UnicodeEncoding.cs
    startLine: 98
  assemblies:
  - System.Text.Encoding.Extensions
  namespace: System.Text
  summary: "\n<p>Calculates the number of bytes produced by encoding a set of characters from the specified character array.</p>\n"
  syntax:
    content: public override int GetByteCount(char[] chars, int index, int count)
    content.vb: Public Overrides Function GetByteCount(chars As Char(), index As Integer, count As Integer) As Integer
    parameters:
    - id: chars
      type: System.Char[]
      description: "\n<p>The character array containing the set of characters to encode. </p>\n"
    - id: index
      type: System.Int32
      description: "\n<p>The index of the first character to encode. </p>\n"
    - id: count
      type: System.Int32
      description: "\n<p>The number of characters to encode. </p>\n"
    return:
      type: System.Int32
      description: "\n<p>The number of bytes produced by encoding the specified characters.</p>\n"
  overridden: System.Text.Encoding.GetByteCount(System.Char[],System.Int32,System.Int32)
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "\n<p>\n<em>chars</em> is <strong>null </strong>(<strong>Nothing</strong>). </p>\n"
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "\n<p>\n<em>index</em> or <em>count</em> is less than zero.</p>\n<p>-or- </p>\n<p>\n<em>index</em> and <em>count</em> do not denote a valid range in <em>chars</em>.</p>\n<p>-or- </p>\n<p>The resulting number of bytes is greater than the maximum number that can be returned as an integer. </p>\n"
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "\n<p>Error detection is enabled, and <em>chars</em> contains an invalid sequence of characters. </p>\n"
  - type: System.Text.EncoderFallbackException
    commentId: T:System.Text.EncoderFallbackException
    description: "\n<p>A fallback occurred (see Character Encoding in the .NET Framework for fuller explanation)</p>\n<p>-and-</p>\n<p>\n<xref href=\"System.Text.Encoding.EncoderFallback\" data-throw-if-not-resolved=\"false\"></xref> is set to <xref href=\"System.Text.EncoderExceptionFallback\" data-throw-if-not-resolved=\"false\"></xref>.</p>\n"
  seealso:
  - linkId: System.Text.UnicodeEncoding.GetBytes(System.String,System.Int32,System.Int32,System.Byte[],System.Int32)
    commentId: M:System.Text.UnicodeEncoding.GetBytes(System.String,System.Int32,System.Int32,System.Byte[],System.Int32)
  - linkId: System.Text.UnicodeEncoding.GetMaxByteCount(System.Int32)
    commentId: M:System.Text.UnicodeEncoding.GetMaxByteCount(System.Int32)
  - linkId: System.Text.UnicodeEncoding.GetEncoder
    commentId: M:System.Text.UnicodeEncoding.GetEncoder
  nameWithType.vb: UnicodeEncoding.GetByteCount(Char(), Int32, Int32)
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
  fullName.vb: System.Text.UnicodeEncoding.GetByteCount(System.Char(), System.Int32, System.Int32)
  name.vb: GetByteCount(Char(), Int32, Int32)
- uid: System.Text.UnicodeEncoding.GetByteCount(System.String)
  commentId: M:System.Text.UnicodeEncoding.GetByteCount(System.String)
  id: GetByteCount(System.String)
  parent: System.Text.UnicodeEncoding
  langs:
  - csharp
  - vb
  name: GetByteCount(String)
  nameWithType: UnicodeEncoding.GetByteCount(String)
  fullName: System.Text.UnicodeEncoding.GetByteCount(System.String)
  type: Method
  source:
    remote:
      path: src/mscorlib/src/System/Text/UnicodeEncoding.cs
      branch: master
      repo: https://github.com/dotnet/coreclr.git
    id: GetByteCount
    path: src/mscorlib/src/System/Text/UnicodeEncoding.cs
    startLine: 103
  assemblies:
  - System.Text.Encoding.Extensions
  namespace: System.Text
  summary: "\n<p>Calculates the number of bytes produced by encoding the characters in the specified string.</p>\n"
  syntax:
    content: public override int GetByteCount(string s)
    content.vb: Public Overrides Function GetByteCount(s As String) As Integer
    parameters:
    - id: s
      type: System.String
      description: "\n<p>The string that contains the set of characters to encode. </p>\n"
    return:
      type: System.Int32
      description: "\n<p>The number of bytes produced by encoding the specified characters. </p>\n"
  overridden: System.Text.Encoding.GetByteCount(System.String)
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "\n<p>\n<em>s</em> is <strong>null </strong>. </p>\n"
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "\n<p>The resulting number of bytes is greater than the maximum number that can be returned as an integer. </p>\n"
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "\n<p>Error detection is enabled, and <em>s</em> contains an invalid sequence of characters. </p>\n"
  - type: System.Text.EncoderFallbackException
    commentId: T:System.Text.EncoderFallbackException
    description: "\n<p>A fallback occurred (see Character Encoding in the .NET Framework for fuller explanation)</p>\n<p>-and-</p>\n<p>\n<xref href=\"System.Text.Encoding.EncoderFallback\" data-throw-if-not-resolved=\"false\"></xref> is set to <xref href=\"System.Text.EncoderExceptionFallback\" data-throw-if-not-resolved=\"false\"></xref>.</p>\n"
  seealso:
  - linkId: System.Text.UnicodeEncoding.GetBytes(System.String,System.Int32,System.Int32,System.Byte[],System.Int32)
    commentId: M:System.Text.UnicodeEncoding.GetBytes(System.String,System.Int32,System.Int32,System.Byte[],System.Int32)
  - linkId: System.Text.UnicodeEncoding.GetMaxByteCount(System.Int32)
    commentId: M:System.Text.UnicodeEncoding.GetMaxByteCount(System.Int32)
  - linkId: System.Text.UnicodeEncoding.GetEncoder
    commentId: M:System.Text.UnicodeEncoding.GetEncoder
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
- uid: System.Text.UnicodeEncoding.GetBytes(System.Char[],System.Int32,System.Int32,System.Byte[],System.Int32)
  commentId: M:System.Text.UnicodeEncoding.GetBytes(System.Char[],System.Int32,System.Int32,System.Byte[],System.Int32)
  id: GetBytes(System.Char[],System.Int32,System.Int32,System.Byte[],System.Int32)
  parent: System.Text.UnicodeEncoding
  langs:
  - csharp
  - vb
  name: GetBytes(Char[], Int32, Int32, Byte[], Int32)
  nameWithType: UnicodeEncoding.GetBytes(Char[], Int32, Int32, Byte[], Int32)
  fullName: System.Text.UnicodeEncoding.GetBytes(System.Char[], System.Int32, System.Int32, System.Byte[], System.Int32)
  type: Method
  source:
    remote:
      path: src/mscorlib/src/System/Text/UnicodeEncoding.cs
      branch: master
      repo: https://github.com/dotnet/coreclr.git
    id: GetBytes
    path: src/mscorlib/src/System/Text/UnicodeEncoding.cs
    startLine: 131
  assemblies:
  - System.Text.Encoding.Extensions
  namespace: System.Text
  summary: "\n<p>Encodes a set of characters from the specified character array into the specified byte array.</p>\n"
  syntax:
    content: public override int GetBytes(char[] chars, int charIndex, int charCount, byte[] bytes, int byteIndex)
    content.vb: Public Overrides Function GetBytes(chars As Char(), charIndex As Integer, charCount As Integer, bytes As Byte(), byteIndex As Integer) As Integer
    parameters:
    - id: chars
      type: System.Char[]
      description: "\n<p>The character array containing the set of characters to encode. </p>\n"
    - id: charIndex
      type: System.Int32
      description: "\n<p>The index of the first character to encode. </p>\n"
    - id: charCount
      type: System.Int32
      description: "\n<p>The number of characters to encode. </p>\n"
    - id: bytes
      type: System.Byte[]
      description: "\n<p>The byte array to contain the resulting sequence of bytes. </p>\n"
    - id: byteIndex
      type: System.Int32
      description: "\n<p>The index at which to start writing the resulting sequence of bytes. </p>\n"
    return:
      type: System.Int32
      description: "\n<p>The actual number of bytes written into <em>bytes</em>.</p>\n"
  overridden: System.Text.Encoding.GetBytes(System.Char[],System.Int32,System.Int32,System.Byte[],System.Int32)
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "\n<p>\n<em>chars</em> is <strong>null </strong>(<strong>Nothing</strong>).</p>\n<p>-or- </p>\n<p>\n<em>bytes</em> is <strong>null </strong>(<strong>Nothing</strong>). </p>\n"
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "\n<p>\n<em>charIndex</em> or <em>charCount</em> or <em>byteIndex</em> is less than zero.</p>\n<p>-or- </p>\n<p>\n<em>charIndex</em> and <em>charCount</em> do not denote a valid range in <em>chars</em>.</p>\n<p>-or- </p>\n<p>\n<em>byteIndex</em> is not a valid index in <em>bytes</em>. </p>\n"
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "\n<p>Error detection is enabled, and <em>chars</em> contains an invalid sequence of characters.</p>\n<p>-or- </p>\n<p>\n<em>bytes</em> does not have enough capacity from <em>byteIndex</em> to the end of the array to accommodate the resulting bytes. </p>\n"
  - type: System.Text.EncoderFallbackException
    commentId: T:System.Text.EncoderFallbackException
    description: "\n<p>A fallback occurred (see Character Encoding in the .NET Framework for fuller explanation)</p>\n<p>-and-</p>\n<p>\n<xref href=\"System.Text.Encoding.EncoderFallback\" data-throw-if-not-resolved=\"false\"></xref> is set to <xref href=\"System.Text.EncoderExceptionFallback\" data-throw-if-not-resolved=\"false\"></xref>.</p>\n"
  seealso:
  - linkId: System.Text.UnicodeEncoding.GetEncoder
    commentId: M:System.Text.UnicodeEncoding.GetEncoder
  - linkId: System.Text.UnicodeEncoding.GetByteCount(System.Char[],System.Int32,System.Int32)
    commentId: M:System.Text.UnicodeEncoding.GetByteCount(System.Char[],System.Int32,System.Int32)
  - linkId: System.Text.UnicodeEncoding.GetMaxByteCount(System.Int32)
    commentId: M:System.Text.UnicodeEncoding.GetMaxByteCount(System.Int32)
  nameWithType.vb: UnicodeEncoding.GetBytes(Char(), Int32, Int32, Byte(), Int32)
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
  fullName.vb: System.Text.UnicodeEncoding.GetBytes(System.Char(), System.Int32, System.Int32, System.Byte(), System.Int32)
  name.vb: GetBytes(Char(), Int32, Int32, Byte(), Int32)
- uid: System.Text.UnicodeEncoding.GetBytes(System.String,System.Int32,System.Int32,System.Byte[],System.Int32)
  commentId: M:System.Text.UnicodeEncoding.GetBytes(System.String,System.Int32,System.Int32,System.Byte[],System.Int32)
  id: GetBytes(System.String,System.Int32,System.Int32,System.Byte[],System.Int32)
  parent: System.Text.UnicodeEncoding
  langs:
  - csharp
  - vb
  name: GetBytes(String, Int32, Int32, Byte[], Int32)
  nameWithType: UnicodeEncoding.GetBytes(String, Int32, Int32, Byte[], Int32)
  fullName: System.Text.UnicodeEncoding.GetBytes(System.String, System.Int32, System.Int32, System.Byte[], System.Int32)
  type: Method
  source:
    remote:
      path: src/mscorlib/src/System/Text/UnicodeEncoding.cs
      branch: master
      repo: https://github.com/dotnet/coreclr.git
    id: GetBytes
    path: src/mscorlib/src/System/Text/UnicodeEncoding.cs
    startLine: 116
  assemblies:
  - System.Text.Encoding.Extensions
  namespace: System.Text
  summary: "\n<p>Encodes a set of characters from the specified <xref href=\"System.String\" data-throw-if-not-resolved=\"false\"></xref> into the specified byte array.</p>\n"
  syntax:
    content: public override int GetBytes(string s, int charIndex, int charCount, byte[] bytes, int byteIndex)
    content.vb: Public Overrides Function GetBytes(s As String, charIndex As Integer, charCount As Integer, bytes As Byte(), byteIndex As Integer) As Integer
    parameters:
    - id: s
      type: System.String
      description: "\n<p>The string containing the set of characters to encode. </p>\n"
    - id: charIndex
      type: System.Int32
      description: "\n<p>The index of the first character to encode. </p>\n"
    - id: charCount
      type: System.Int32
      description: "\n<p>The number of characters to encode. </p>\n"
    - id: bytes
      type: System.Byte[]
      description: "\n<p>The byte array to contain the resulting sequence of bytes. </p>\n"
    - id: byteIndex
      type: System.Int32
      description: "\n<p>The index at which to start writing the resulting sequence of bytes. </p>\n"
    return:
      type: System.Int32
      description: "\n<p>The actual number of bytes written into <em>bytes</em>.</p>\n"
  overridden: System.Text.Encoding.GetBytes(System.String,System.Int32,System.Int32,System.Byte[],System.Int32)
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "\n<p>\n<em>s</em> is <strong>null </strong>.</p>\n<p>-or- </p>\n<p>\n<em>bytes</em> is <strong>null </strong>(<strong>Nothing</strong>). </p>\n"
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "\n<p>\n<em>charIndex</em> or <em>charCount</em> or <em>byteIndex</em> is less than zero.</p>\n<p>-or- </p>\n<p>\n<em>charIndex</em> and <em>charCount</em> do not denote a valid range in <em>chars</em>.</p>\n<p>-or- </p>\n<p>\n<em>byteIndex</em> is not a valid index in <em>bytes</em>. </p>\n"
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "\n<p>Error detection is enabled, and <em>s</em> contains an invalid sequence of characters.</p>\n<p>-or- </p>\n<p>\n<em>bytes</em> does not have enough capacity from <em>byteIndex</em> to the end of the array to accommodate the resulting bytes. </p>\n"
  - type: System.Text.EncoderFallbackException
    commentId: T:System.Text.EncoderFallbackException
    description: "\n<p>A fallback occurred (see Character Encoding in the .NET Framework for fuller explanation)</p>\n<p>-and-</p>\n<p>\n<xref href=\"System.Text.Encoding.EncoderFallback\" data-throw-if-not-resolved=\"false\"></xref> is set to <xref href=\"System.Text.EncoderExceptionFallback\" data-throw-if-not-resolved=\"false\"></xref>.</p>\n"
  seealso:
  - linkId: System.Text.UnicodeEncoding.GetEncoder
    commentId: M:System.Text.UnicodeEncoding.GetEncoder
  - linkId: System.Text.UnicodeEncoding.GetByteCount(System.Char[],System.Int32,System.Int32)
    commentId: M:System.Text.UnicodeEncoding.GetByteCount(System.Char[],System.Int32,System.Int32)
  - linkId: System.Text.UnicodeEncoding.GetMaxByteCount(System.Int32)
    commentId: M:System.Text.UnicodeEncoding.GetMaxByteCount(System.Int32)
  nameWithType.vb: UnicodeEncoding.GetBytes(String, Int32, Int32, Byte(), Int32)
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
  fullName.vb: System.Text.UnicodeEncoding.GetBytes(System.String, System.Int32, System.Int32, System.Byte(), System.Int32)
  name.vb: GetBytes(String, Int32, Int32, Byte(), Int32)
- uid: System.Text.UnicodeEncoding.GetCharCount(System.Byte[],System.Int32,System.Int32)
  commentId: M:System.Text.UnicodeEncoding.GetCharCount(System.Byte[],System.Int32,System.Int32)
  id: GetCharCount(System.Byte[],System.Int32,System.Int32)
  parent: System.Text.UnicodeEncoding
  langs:
  - csharp
  - vb
  name: GetCharCount(Byte[], Int32, Int32)
  nameWithType: UnicodeEncoding.GetCharCount(Byte[], Int32, Int32)
  fullName: System.Text.UnicodeEncoding.GetCharCount(System.Byte[], System.Int32, System.Int32)
  type: Method
  source:
    remote:
      path: src/mscorlib/src/System/Text/UnicodeEncoding.cs
      branch: master
      repo: https://github.com/dotnet/coreclr.git
    id: GetCharCount
    path: src/mscorlib/src/System/Text/UnicodeEncoding.cs
    startLine: 148
  assemblies:
  - System.Text.Encoding.Extensions
  namespace: System.Text
  summary: "\n<p>Calculates the number of characters produced by decoding a sequence of bytes from the specified byte array.</p>\n"
  syntax:
    content: public override int GetCharCount(byte[] bytes, int index, int count)
    content.vb: Public Overrides Function GetCharCount(bytes As Byte(), index As Integer, count As Integer) As Integer
    parameters:
    - id: bytes
      type: System.Byte[]
      description: "\n<p>The byte array containing the sequence of bytes to decode. </p>\n"
    - id: index
      type: System.Int32
      description: "\n<p>The index of the first byte to decode. </p>\n"
    - id: count
      type: System.Int32
      description: "\n<p>The number of bytes to decode. </p>\n"
    return:
      type: System.Int32
      description: "\n<p>The number of characters produced by decoding the specified sequence of bytes.</p>\n"
  overridden: System.Text.Encoding.GetCharCount(System.Byte[],System.Int32,System.Int32)
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "\n<p>\n<em>bytes</em> is <strong>null </strong>(<strong>Nothing</strong>). </p>\n"
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "\n<p>\n<em>index</em> or <em>count</em> is less than zero.</p>\n<p>-or- </p>\n<p>\n<em>index</em> and <em>count</em> do not denote a valid range in <em>bytes</em>.</p>\n<p>-or- </p>\n<p>The resulting number of bytes is greater than the maximum number that can be returned as an integer. </p>\n"
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "\n<p>Error detection is enabled, and <em>bytes</em> contains an invalid sequence of bytes. </p>\n"
  - type: System.Text.DecoderFallbackException
    commentId: T:System.Text.DecoderFallbackException
    description: "\n<p>A fallback occurred (see Character Encoding in the .NET Framework for fuller explanation)</p>\n<p>-and-</p>\n<p>\n<xref href=\"System.Text.Encoding.DecoderFallback\" data-throw-if-not-resolved=\"false\"></xref> is set to <xref href=\"System.Text.DecoderExceptionFallback\" data-throw-if-not-resolved=\"false\"></xref>.</p>\n"
  seealso:
  - linkId: System.Text.UnicodeEncoding.GetChars(System.Byte[],System.Int32,System.Int32,System.Char[],System.Int32)
    commentId: M:System.Text.UnicodeEncoding.GetChars(System.Byte[],System.Int32,System.Int32,System.Char[],System.Int32)
  - linkId: System.Text.UnicodeEncoding.GetMaxCharCount(System.Int32)
    commentId: M:System.Text.UnicodeEncoding.GetMaxCharCount(System.Int32)
  - linkId: System.Text.UnicodeEncoding.GetDecoder
    commentId: M:System.Text.UnicodeEncoding.GetDecoder
  nameWithType.vb: UnicodeEncoding.GetCharCount(Byte(), Int32, Int32)
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
  fullName.vb: System.Text.UnicodeEncoding.GetCharCount(System.Byte(), System.Int32, System.Int32)
  name.vb: GetCharCount(Byte(), Int32, Int32)
- uid: System.Text.UnicodeEncoding.GetChars(System.Byte[],System.Int32,System.Int32,System.Char[],System.Int32)
  commentId: M:System.Text.UnicodeEncoding.GetChars(System.Byte[],System.Int32,System.Int32,System.Char[],System.Int32)
  id: GetChars(System.Byte[],System.Int32,System.Int32,System.Char[],System.Int32)
  parent: System.Text.UnicodeEncoding
  langs:
  - csharp
  - vb
  name: GetChars(Byte[], Int32, Int32, Char[], Int32)
  nameWithType: UnicodeEncoding.GetChars(Byte[], Int32, Int32, Char[], Int32)
  fullName: System.Text.UnicodeEncoding.GetChars(System.Byte[], System.Int32, System.Int32, System.Char[], System.Int32)
  type: Method
  source:
    remote:
      path: src/mscorlib/src/System/Text/UnicodeEncoding.cs
      branch: master
      repo: https://github.com/dotnet/coreclr.git
    id: GetChars
    path: src/mscorlib/src/System/Text/UnicodeEncoding.cs
    startLine: 161
  assemblies:
  - System.Text.Encoding.Extensions
  namespace: System.Text
  summary: "\n<p>Decodes a sequence of bytes from the specified byte array into the specified character array.</p>\n"
  syntax:
    content: public override int GetChars(byte[] bytes, int byteIndex, int byteCount, char[] chars, int charIndex)
    content.vb: Public Overrides Function GetChars(bytes As Byte(), byteIndex As Integer, byteCount As Integer, chars As Char(), charIndex As Integer) As Integer
    parameters:
    - id: bytes
      type: System.Byte[]
      description: "\n<p>The byte array containing the sequence of bytes to decode. </p>\n"
    - id: byteIndex
      type: System.Int32
      description: "\n<p>The index of the first byte to decode. </p>\n"
    - id: byteCount
      type: System.Int32
      description: "\n<p>The number of bytes to decode. </p>\n"
    - id: chars
      type: System.Char[]
      description: "\n<p>The character array to contain the resulting set of characters. </p>\n"
    - id: charIndex
      type: System.Int32
      description: "\n<p>The index at which to start writing the resulting set of characters. </p>\n"
    return:
      type: System.Int32
      description: "\n<p>The actual number of characters written into <em>chars</em>.</p>\n"
  overridden: System.Text.Encoding.GetChars(System.Byte[],System.Int32,System.Int32,System.Char[],System.Int32)
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "\n<p>\n<em>bytes</em> is <strong>null </strong>(<strong>Nothing</strong>).</p>\n<p>-or- </p>\n<p>\n<em>chars</em> is <strong>null </strong>(<strong>Nothing</strong>). </p>\n"
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "\n<p>\n<em>byteIndex</em> or <em>byteCount</em> or <em>charIndex</em> is less than zero.</p>\n<p>-or- </p>\n<p>\n<em>byteindex</em> and <em>byteCount</em> do not denote a valid range in <em>bytes</em>.</p>\n<p>-or- </p>\n<p>\n<em>charIndex</em> is not a valid index in <em>chars</em>. </p>\n"
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "\n<p>Error detection is enabled, and <em>bytes</em> contains an invalid sequence of bytes.</p>\n<p>-or- </p>\n<p>\n<em>chars</em> does not have enough capacity from <em>charIndex</em> to the end of the array to accommodate the resulting characters. </p>\n"
  - type: System.Text.DecoderFallbackException
    commentId: T:System.Text.DecoderFallbackException
    description: "\n<p>A fallback occurred (see Character Encoding in the .NET Framework for fuller explanation)</p>\n<p>-and-</p>\n<p>\n<xref href=\"System.Text.Encoding.DecoderFallback\" data-throw-if-not-resolved=\"false\"></xref> is set to <xref href=\"System.Text.DecoderExceptionFallback\" data-throw-if-not-resolved=\"false\"></xref>.</p>\n"
  seealso:
  - linkId: System.Text.UnicodeEncoding.GetCharCount(System.Byte[],System.Int32,System.Int32)
    commentId: M:System.Text.UnicodeEncoding.GetCharCount(System.Byte[],System.Int32,System.Int32)
  - linkId: System.Text.UnicodeEncoding.GetMaxCharCount(System.Int32)
    commentId: M:System.Text.UnicodeEncoding.GetMaxCharCount(System.Int32)
  - linkId: System.Text.UnicodeEncoding.GetDecoder
    commentId: M:System.Text.UnicodeEncoding.GetDecoder
  - linkId: System.Text.UnicodeEncoding.GetString(System.Byte[],System.Int32,System.Int32)
    commentId: M:System.Text.UnicodeEncoding.GetString(System.Byte[],System.Int32,System.Int32)
  nameWithType.vb: UnicodeEncoding.GetChars(Byte(), Int32, Int32, Char(), Int32)
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
  fullName.vb: System.Text.UnicodeEncoding.GetChars(System.Byte(), System.Int32, System.Int32, System.Char(), System.Int32)
  name.vb: GetChars(Byte(), Int32, Int32, Char(), Int32)
- uid: System.Text.UnicodeEncoding.GetDecoder
  commentId: M:System.Text.UnicodeEncoding.GetDecoder
  id: GetDecoder
  parent: System.Text.UnicodeEncoding
  langs:
  - csharp
  - vb
  name: GetDecoder()
  nameWithType: UnicodeEncoding.GetDecoder()
  fullName: System.Text.UnicodeEncoding.GetDecoder()
  type: Method
  source:
    remote:
      path: src/mscorlib/src/System/Text/UnicodeEncoding.cs
      branch: master
      repo: https://github.com/dotnet/coreclr.git
    id: GetDecoder
    path: src/mscorlib/src/System/Text/UnicodeEncoding.cs
    startLine: 1672
  assemblies:
  - System.Text.Encoding.Extensions
  namespace: System.Text
  summary: "\n<p>Obtains a decoder that converts a UTF-16 encoded sequence of bytes into a sequence of Unicode characters.</p>\n"
  syntax:
    content: public override Decoder GetDecoder()
    content.vb: Public Overrides Function GetDecoder As Decoder
    return:
      type: System.Text.Decoder
      description: "\n<p>A <xref href=\"System.Text.Decoder\" data-throw-if-not-resolved=\"false\"></xref> that converts a UTF-16 encoded sequence of bytes into a sequence of Unicode characters.</p>\n"
  overridden: System.Text.Encoding.GetDecoder
  seealso:
  - linkId: System.Text.Decoder
    commentId: T:System.Text.Decoder
  - linkId: System.Text.UnicodeEncoding.GetChars(System.Byte[],System.Int32,System.Int32,System.Char[],System.Int32)
    commentId: M:System.Text.UnicodeEncoding.GetChars(System.Byte[],System.Int32,System.Int32,System.Char[],System.Int32)
  - linkId: System.Text.UnicodeEncoding.GetString(System.Byte[],System.Int32,System.Int32)
    commentId: M:System.Text.UnicodeEncoding.GetString(System.Byte[],System.Int32,System.Int32)
  - linkId: System.Text.UnicodeEncoding.GetCharCount(System.Byte[],System.Int32,System.Int32)
    commentId: M:System.Text.UnicodeEncoding.GetCharCount(System.Byte[],System.Int32,System.Int32)
  - linkId: System.Text.UnicodeEncoding.GetEncoder
    commentId: M:System.Text.UnicodeEncoding.GetEncoder
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
- uid: System.Text.UnicodeEncoding.GetEncoder
  commentId: M:System.Text.UnicodeEncoding.GetEncoder
  id: GetEncoder
  parent: System.Text.UnicodeEncoding
  langs:
  - csharp
  - vb
  name: GetEncoder()
  nameWithType: UnicodeEncoding.GetEncoder()
  fullName: System.Text.UnicodeEncoding.GetEncoder()
  type: Method
  source:
    remote:
      path: src/mscorlib/src/System/Text/UnicodeEncoding.cs
      branch: master
      repo: https://github.com/dotnet/coreclr.git
    id: GetEncoder
    path: src/mscorlib/src/System/Text/UnicodeEncoding.cs
    startLine: 1665
  assemblies:
  - System.Text.Encoding.Extensions
  namespace: System.Text
  summary: "\n<p>Obtains an encoder that converts a sequence of Unicode characters into a UTF-16 encoded sequence of bytes.</p>\n"
  syntax:
    content: >-
      [ComVisible(false)]

      public override Encoder GetEncoder()
    content.vb: >-
      <ComVisible(False)>

      Public Overrides Function GetEncoder As Encoder
    return:
      type: System.Text.Encoder
      description: "\n<p>A <xref href=\"System.Text.Encoder\" data-throw-if-not-resolved=\"false\"></xref> object that converts a sequence of Unicode characters into a UTF-16 encoded sequence of bytes.</p>\n"
  overridden: System.Text.Encoding.GetEncoder
  seealso:
  - linkId: System.Text.Encoder
    commentId: T:System.Text.Encoder
  - linkId: System.Text.UnicodeEncoding.GetBytes(System.String,System.Int32,System.Int32,System.Byte[],System.Int32)
    commentId: M:System.Text.UnicodeEncoding.GetBytes(System.String,System.Int32,System.Int32,System.Byte[],System.Int32)
  - linkId: System.Text.UnicodeEncoding.GetByteCount(System.Char[],System.Int32,System.Int32)
    commentId: M:System.Text.UnicodeEncoding.GetByteCount(System.Char[],System.Int32,System.Int32)
  - linkId: System.Text.UnicodeEncoding.GetDecoder
    commentId: M:System.Text.UnicodeEncoding.GetDecoder
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
- uid: System.Text.UnicodeEncoding.GetHashCode
  commentId: M:System.Text.UnicodeEncoding.GetHashCode
  id: GetHashCode
  parent: System.Text.UnicodeEncoding
  langs:
  - csharp
  - vb
  name: GetHashCode()
  nameWithType: UnicodeEncoding.GetHashCode()
  fullName: System.Text.UnicodeEncoding.GetHashCode()
  type: Method
  source:
    remote:
      path: src/mscorlib/src/System/Text/UnicodeEncoding.cs
      branch: master
      repo: https://github.com/dotnet/coreclr.git
    id: GetHashCode
    path: src/mscorlib/src/System/Text/UnicodeEncoding.cs
    startLine: 1759
  assemblies:
  - System.Text.Encoding.Extensions
  namespace: System.Text
  summary: "\n<p>Returns the hash code for the current instance.</p>\n"
  syntax:
    content: public override int GetHashCode()
    content.vb: Public Overrides Function GetHashCode As Integer
    return:
      type: System.Int32
      description: "\n<p>The hash code for the current <xref href=\"System.Text.UnicodeEncoding\" data-throw-if-not-resolved=\"false\"></xref> object.</p>\n"
  overridden: System.Text.Encoding.GetHashCode
  seealso:
  - linkId: System.Object.GetHashCode
    commentId: M:System.Object.GetHashCode
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
- uid: System.Text.UnicodeEncoding.GetMaxByteCount(System.Int32)
  commentId: M:System.Text.UnicodeEncoding.GetMaxByteCount(System.Int32)
  id: GetMaxByteCount(System.Int32)
  parent: System.Text.UnicodeEncoding
  langs:
  - csharp
  - vb
  name: GetMaxByteCount(Int32)
  nameWithType: UnicodeEncoding.GetMaxByteCount(Int32)
  fullName: System.Text.UnicodeEncoding.GetMaxByteCount(System.Int32)
  type: Method
  source:
    remote:
      path: src/mscorlib/src/System/Text/UnicodeEncoding.cs
      branch: master
      repo: https://github.com/dotnet/coreclr.git
    id: GetMaxByteCount
    path: src/mscorlib/src/System/Text/UnicodeEncoding.cs
    startLine: 1693
  assemblies:
  - System.Text.Encoding.Extensions
  namespace: System.Text
  summary: "\n<p>Calculates the maximum number of bytes produced by encoding the specified number of characters.</p>\n"
  syntax:
    content: public override int GetMaxByteCount(int charCount)
    content.vb: Public Overrides Function GetMaxByteCount(charCount As Integer) As Integer
    parameters:
    - id: charCount
      type: System.Int32
      description: "\n<p>The number of characters to encode. </p>\n"
    return:
      type: System.Int32
      description: "\n<p>The maximum number of bytes produced by encoding the specified number of characters.</p>\n"
  overridden: System.Text.Encoding.GetMaxByteCount(System.Int32)
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "\n<p>\n<em>charCount</em> is less than zero.</p>\n<p>-or- </p>\n<p>The resulting number of bytes is greater than the maximum number that can be returned as an integer. </p>\n"
  - type: System.Text.EncoderFallbackException
    commentId: T:System.Text.EncoderFallbackException
    description: "\n<p>A fallback occurred (see Character Encoding in the .NET Framework for fuller explanation)</p>\n<p>-and-</p>\n<p>\n<xref href=\"System.Text.Encoding.EncoderFallback\" data-throw-if-not-resolved=\"false\"></xref> is set to <xref href=\"System.Text.EncoderExceptionFallback\" data-throw-if-not-resolved=\"false\"></xref>.</p>\n"
  seealso:
  - linkId: System.Text.UnicodeEncoding.GetBytes(System.String,System.Int32,System.Int32,System.Byte[],System.Int32)
    commentId: M:System.Text.UnicodeEncoding.GetBytes(System.String,System.Int32,System.Int32,System.Byte[],System.Int32)
  - linkId: System.Text.UnicodeEncoding.GetByteCount(System.Char[],System.Int32,System.Int32)
    commentId: M:System.Text.UnicodeEncoding.GetByteCount(System.Char[],System.Int32,System.Int32)
  - linkId: System.Text.UnicodeEncoding.GetEncoder
    commentId: M:System.Text.UnicodeEncoding.GetEncoder
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
- uid: System.Text.UnicodeEncoding.GetMaxCharCount(System.Int32)
  commentId: M:System.Text.UnicodeEncoding.GetMaxCharCount(System.Int32)
  id: GetMaxCharCount(System.Int32)
  parent: System.Text.UnicodeEncoding
  langs:
  - csharp
  - vb
  name: GetMaxCharCount(Int32)
  nameWithType: UnicodeEncoding.GetMaxCharCount(Int32)
  fullName: System.Text.UnicodeEncoding.GetMaxCharCount(System.Int32)
  type: Method
  source:
    remote:
      path: src/mscorlib/src/System/Text/UnicodeEncoding.cs
      branch: master
      repo: https://github.com/dotnet/coreclr.git
    id: GetMaxCharCount
    path: src/mscorlib/src/System/Text/UnicodeEncoding.cs
    startLine: 1716
  assemblies:
  - System.Text.Encoding.Extensions
  namespace: System.Text
  summary: "\n<p>Calculates the maximum number of characters produced by decoding the specified number of bytes.</p>\n"
  syntax:
    content: public override int GetMaxCharCount(int byteCount)
    content.vb: Public Overrides Function GetMaxCharCount(byteCount As Integer) As Integer
    parameters:
    - id: byteCount
      type: System.Int32
      description: "\n<p>The number of bytes to decode. </p>\n"
    return:
      type: System.Int32
      description: "\n<p>The maximum number of characters produced by decoding the specified number of bytes.</p>\n"
  overridden: System.Text.Encoding.GetMaxCharCount(System.Int32)
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "\n<p>\n<em>byteCount</em> is less than zero.</p>\n<p>-or- </p>\n<p>The resulting number of bytes is greater than the maximum number that can be returned as an integer. </p>\n"
  - type: System.Text.DecoderFallbackException
    commentId: T:System.Text.DecoderFallbackException
    description: "\n<p>A fallback occurred (see Character Encoding in the .NET Framework for fuller explanation)</p>\n<p>-and-</p>\n<p>\n<xref href=\"System.Text.Encoding.DecoderFallback\" data-throw-if-not-resolved=\"false\"></xref> is set to <xref href=\"System.Text.DecoderExceptionFallback\" data-throw-if-not-resolved=\"false\"></xref>.</p>\n"
  seealso:
  - linkId: System.Text.UnicodeEncoding.GetChars(System.Byte[],System.Int32,System.Int32,System.Char[],System.Int32)
    commentId: M:System.Text.UnicodeEncoding.GetChars(System.Byte[],System.Int32,System.Int32,System.Char[],System.Int32)
  - linkId: System.Text.UnicodeEncoding.GetString(System.Byte[],System.Int32,System.Int32)
    commentId: M:System.Text.UnicodeEncoding.GetString(System.Byte[],System.Int32,System.Int32)
  - linkId: System.Text.UnicodeEncoding.GetCharCount(System.Byte[],System.Int32,System.Int32)
    commentId: M:System.Text.UnicodeEncoding.GetCharCount(System.Byte[],System.Int32,System.Int32)
  - linkId: System.Text.UnicodeEncoding.GetDecoder
    commentId: M:System.Text.UnicodeEncoding.GetDecoder
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
- uid: System.Text.UnicodeEncoding.GetPreamble
  commentId: M:System.Text.UnicodeEncoding.GetPreamble
  id: GetPreamble
  parent: System.Text.UnicodeEncoding
  langs:
  - csharp
  - vb
  name: GetPreamble()
  nameWithType: UnicodeEncoding.GetPreamble()
  fullName: System.Text.UnicodeEncoding.GetPreamble()
  type: Method
  source:
    remote:
      path: src/mscorlib/src/System/Text/UnicodeEncoding.cs
      branch: master
      repo: https://github.com/dotnet/coreclr.git
    id: GetPreamble
    path: src/mscorlib/src/System/Text/UnicodeEncoding.cs
    startLine: 1678
  assemblies:
  - System.Text.Encoding.Extensions
  namespace: System.Text
  summary: "\n<p>Returns a Unicode byte order mark encoded in UTF-16 format, if the constructor for this instance requests a byte order mark.</p>\n"
  syntax:
    content: public override byte[] GetPreamble()
    content.vb: Public Overrides Function GetPreamble As Byte()
    return:
      type: System.Byte[]
      description: "\n<p>A byte array containing the Unicode byte order mark, if the <xref href=\"System.Text.UnicodeEncoding\" data-throw-if-not-resolved=\"false\"></xref> object is configured to supply one. Otherwise, this method returns a zero-length byte array. </p>\n"
  overridden: System.Text.Encoding.GetPreamble
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
- uid: System.Text.UnicodeEncoding.GetString(System.Byte[],System.Int32,System.Int32)
  commentId: M:System.Text.UnicodeEncoding.GetString(System.Byte[],System.Int32,System.Int32)
  id: GetString(System.Byte[],System.Int32,System.Int32)
  parent: System.Text.UnicodeEncoding
  langs:
  - csharp
  - vb
  name: GetString(Byte[], Int32, Int32)
  nameWithType: UnicodeEncoding.GetString(Byte[], Int32, Int32)
  fullName: System.Text.UnicodeEncoding.GetString(System.Byte[], System.Int32, System.Int32)
  type: Method
  source:
    remote:
      path: src/mscorlib/src/System/Text/UnicodeEncoding.cs
      branch: master
      repo: https://github.com/dotnet/coreclr.git
    id: GetString
    path: src/mscorlib/src/System/Text/UnicodeEncoding.cs
    startLine: 178
  assemblies:
  - System.Text.Encoding.Extensions
  namespace: System.Text
  summary: "\n<p>Decodes a range of bytes from a byte array into a string.</p>\n"
  syntax:
    content: >-
      [ComVisible(false)]

      public override string GetString(byte[] bytes, int index, int count)
    content.vb: >-
      <ComVisible(False)>

      Public Overrides Function GetString(bytes As Byte(), index As Integer, count As Integer) As String
    parameters:
    - id: bytes
      type: System.Byte[]
      description: "\n<p>The byte array containing the sequence of bytes to decode. </p>\n"
    - id: index
      type: System.Int32
      description: "\n<p>The index of the first byte to decode. </p>\n"
    - id: count
      type: System.Int32
      description: "\n<p>The number of bytes to decode. </p>\n"
    return:
      type: System.String
      description: "\n<p>A <xref href=\"System.String\" data-throw-if-not-resolved=\"false\"></xref> object containing the results of decoding the specified sequence of bytes.</p>\n"
  overridden: System.Text.Encoding.GetString(System.Byte[],System.Int32,System.Int32)
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "\n<p>\n<em>bytes</em> is <strong>null </strong>(<strong>Nothing</strong>). </p>\n"
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "\n<p>\n<em>index</em> or <em>count</em> is less than zero.</p>\n<p>-or- </p>\n<p>\n<em>index</em> and <em>count</em> do not denote a valid range in <em>bytes</em>. </p>\n"
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "\n<p>Error detection is enabled, and <em>bytes</em> contains an invalid sequence of bytes. </p>\n"
  - type: System.Text.DecoderFallbackException
    commentId: T:System.Text.DecoderFallbackException
    description: "\n<p>A fallback occurred (see Character Encoding in the .NET Framework for fuller explanation)</p>\n<p>-and-</p>\n<p>\n<xref href=\"System.Text.Encoding.DecoderFallback\" data-throw-if-not-resolved=\"false\"></xref> is set to <xref href=\"System.Text.DecoderExceptionFallback\" data-throw-if-not-resolved=\"false\"></xref>.</p>\n"
  seealso:
  - linkId: System.Text.UnicodeEncoding.GetChars(System.Byte[],System.Int32,System.Int32,System.Char[],System.Int32)
    commentId: M:System.Text.UnicodeEncoding.GetChars(System.Byte[],System.Int32,System.Int32,System.Char[],System.Int32)
  - linkId: System.Text.UnicodeEncoding.GetDecoder
    commentId: M:System.Text.UnicodeEncoding.GetDecoder
  - linkId: System.Text.UnicodeEncoding.GetCharCount(System.Byte[],System.Int32,System.Int32)
    commentId: M:System.Text.UnicodeEncoding.GetCharCount(System.Byte[],System.Int32,System.Int32)
  - linkId: System.Text.UnicodeEncoding.GetMaxCharCount(System.Int32)
    commentId: M:System.Text.UnicodeEncoding.GetMaxCharCount(System.Int32)
  nameWithType.vb: UnicodeEncoding.GetString(Byte(), Int32, Int32)
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
  fullName.vb: System.Text.UnicodeEncoding.GetString(System.Byte(), System.Int32, System.Int32)
  name.vb: GetString(Byte(), Int32, Int32)
references:
- uid: System.Text
  commentId: N:System.Text
  isExternal: false
  name: System.Text
  nameWithType: System.Text
  fullName: System.Text
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: false
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Text.Encoding
  commentId: T:System.Text.Encoding
  parent: System.Text
  isExternal: false
  name: Encoding
  nameWithType: Encoding
  fullName: System.Text.Encoding
- uid: System.ICloneable
  commentId: T:System.ICloneable
  parent: System
  isExternal: true
  name: ICloneable
  nameWithType: ICloneable
  fullName: System.ICloneable
- uid: System.Text.Encoding.Convert(System.Text.Encoding,System.Text.Encoding,System.Byte[])
  commentId: M:System.Text.Encoding.Convert(System.Text.Encoding,System.Text.Encoding,System.Byte[])
  parent: System.Text.Encoding
  isExternal: true
  name: Convert(Encoding, Encoding, Byte[])
  nameWithType: Encoding.Convert(Encoding, Encoding, Byte[])
  fullName: System.Text.Encoding.Convert(System.Text.Encoding, System.Text.Encoding, System.Byte[])
  nameWithType.vb: Encoding.Convert(Encoding, Encoding, Byte())
  fullname.vb: System.Text.Encoding.Convert(System.Text.Encoding, System.Text.Encoding, System.Byte())
  name.vb: Convert(Encoding, Encoding, Byte())
  spec.csharp:
  - uid: System.Text.Encoding.Convert(System.Text.Encoding,System.Text.Encoding,System.Byte[])
    name: Convert
    nameWithType: Encoding.Convert
    fullName: System.Text.Encoding.Convert
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Text.Encoding
    name: Encoding
    nameWithType: Encoding
    fullName: System.Text.Encoding
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Text.Encoding
    name: Encoding
    nameWithType: Encoding
    fullName: System.Text.Encoding
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: System.Byte
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Text.Encoding.Convert(System.Text.Encoding,System.Text.Encoding,System.Byte[])
    name: Convert
    nameWithType: Encoding.Convert
    fullName: System.Text.Encoding.Convert
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Text.Encoding
    name: Encoding
    nameWithType: Encoding
    fullName: System.Text.Encoding
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Text.Encoding
    name: Encoding
    nameWithType: Encoding
    fullName: System.Text.Encoding
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: System.Byte
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Text.Encoding.Convert(System.Text.Encoding,System.Text.Encoding,System.Byte[],System.Int32,System.Int32)
  commentId: M:System.Text.Encoding.Convert(System.Text.Encoding,System.Text.Encoding,System.Byte[],System.Int32,System.Int32)
  parent: System.Text.Encoding
  isExternal: true
  name: Convert(Encoding, Encoding, Byte[], Int32, Int32)
  nameWithType: Encoding.Convert(Encoding, Encoding, Byte[], Int32, Int32)
  fullName: System.Text.Encoding.Convert(System.Text.Encoding, System.Text.Encoding, System.Byte[], System.Int32, System.Int32)
  nameWithType.vb: Encoding.Convert(Encoding, Encoding, Byte(), Int32, Int32)
  fullname.vb: System.Text.Encoding.Convert(System.Text.Encoding, System.Text.Encoding, System.Byte(), System.Int32, System.Int32)
  name.vb: Convert(Encoding, Encoding, Byte(), Int32, Int32)
  spec.csharp:
  - uid: System.Text.Encoding.Convert(System.Text.Encoding,System.Text.Encoding,System.Byte[],System.Int32,System.Int32)
    name: Convert
    nameWithType: Encoding.Convert
    fullName: System.Text.Encoding.Convert
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Text.Encoding
    name: Encoding
    nameWithType: Encoding
    fullName: System.Text.Encoding
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Text.Encoding
    name: Encoding
    nameWithType: Encoding
    fullName: System.Text.Encoding
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: System.Byte
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Text.Encoding.Convert(System.Text.Encoding,System.Text.Encoding,System.Byte[],System.Int32,System.Int32)
    name: Convert
    nameWithType: Encoding.Convert
    fullName: System.Text.Encoding.Convert
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Text.Encoding
    name: Encoding
    nameWithType: Encoding
    fullName: System.Text.Encoding
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Text.Encoding
    name: Encoding
    nameWithType: Encoding
    fullName: System.Text.Encoding
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: System.Byte
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Text.Encoding.RegisterProvider(System.Text.EncodingProvider)
  commentId: M:System.Text.Encoding.RegisterProvider(System.Text.EncodingProvider)
  parent: System.Text.Encoding
  isExternal: true
  name: RegisterProvider(EncodingProvider)
  nameWithType: Encoding.RegisterProvider(EncodingProvider)
  fullName: System.Text.Encoding.RegisterProvider(System.Text.EncodingProvider)
  spec.csharp:
  - uid: System.Text.Encoding.RegisterProvider(System.Text.EncodingProvider)
    name: RegisterProvider
    nameWithType: Encoding.RegisterProvider
    fullName: System.Text.Encoding.RegisterProvider
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Text.EncodingProvider
    name: EncodingProvider
    nameWithType: EncodingProvider
    fullName: System.Text.EncodingProvider
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Text.Encoding.RegisterProvider(System.Text.EncodingProvider)
    name: RegisterProvider
    nameWithType: Encoding.RegisterProvider
    fullName: System.Text.Encoding.RegisterProvider
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Text.EncodingProvider
    name: EncodingProvider
    nameWithType: EncodingProvider
    fullName: System.Text.EncodingProvider
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Text.Encoding.GetEncoding(System.Int32)
  commentId: M:System.Text.Encoding.GetEncoding(System.Int32)
  parent: System.Text.Encoding
  isExternal: true
  name: GetEncoding(Int32)
  nameWithType: Encoding.GetEncoding(Int32)
  fullName: System.Text.Encoding.GetEncoding(System.Int32)
  spec.csharp:
  - uid: System.Text.Encoding.GetEncoding(System.Int32)
    name: GetEncoding
    nameWithType: Encoding.GetEncoding
    fullName: System.Text.Encoding.GetEncoding
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Text.Encoding.GetEncoding(System.Int32)
    name: GetEncoding
    nameWithType: Encoding.GetEncoding
    fullName: System.Text.Encoding.GetEncoding
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Text.Encoding.GetEncoding(System.Int32,System.Text.EncoderFallback,System.Text.DecoderFallback)
  commentId: M:System.Text.Encoding.GetEncoding(System.Int32,System.Text.EncoderFallback,System.Text.DecoderFallback)
  parent: System.Text.Encoding
  isExternal: true
  name: GetEncoding(Int32, EncoderFallback, DecoderFallback)
  nameWithType: Encoding.GetEncoding(Int32, EncoderFallback, DecoderFallback)
  fullName: System.Text.Encoding.GetEncoding(System.Int32, System.Text.EncoderFallback, System.Text.DecoderFallback)
  spec.csharp:
  - uid: System.Text.Encoding.GetEncoding(System.Int32,System.Text.EncoderFallback,System.Text.DecoderFallback)
    name: GetEncoding
    nameWithType: Encoding.GetEncoding
    fullName: System.Text.Encoding.GetEncoding
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Text.EncoderFallback
    name: EncoderFallback
    nameWithType: EncoderFallback
    fullName: System.Text.EncoderFallback
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Text.DecoderFallback
    name: DecoderFallback
    nameWithType: DecoderFallback
    fullName: System.Text.DecoderFallback
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Text.Encoding.GetEncoding(System.Int32,System.Text.EncoderFallback,System.Text.DecoderFallback)
    name: GetEncoding
    nameWithType: Encoding.GetEncoding
    fullName: System.Text.Encoding.GetEncoding
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Text.EncoderFallback
    name: EncoderFallback
    nameWithType: EncoderFallback
    fullName: System.Text.EncoderFallback
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Text.DecoderFallback
    name: DecoderFallback
    nameWithType: DecoderFallback
    fullName: System.Text.DecoderFallback
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Text.Encoding.GetEncoding(System.String)
  commentId: M:System.Text.Encoding.GetEncoding(System.String)
  parent: System.Text.Encoding
  isExternal: true
  name: GetEncoding(String)
  nameWithType: Encoding.GetEncoding(String)
  fullName: System.Text.Encoding.GetEncoding(System.String)
  spec.csharp:
  - uid: System.Text.Encoding.GetEncoding(System.String)
    name: GetEncoding
    nameWithType: Encoding.GetEncoding
    fullName: System.Text.Encoding.GetEncoding
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Text.Encoding.GetEncoding(System.String)
    name: GetEncoding
    nameWithType: Encoding.GetEncoding
    fullName: System.Text.Encoding.GetEncoding
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Text.Encoding.GetEncoding(System.String,System.Text.EncoderFallback,System.Text.DecoderFallback)
  commentId: M:System.Text.Encoding.GetEncoding(System.String,System.Text.EncoderFallback,System.Text.DecoderFallback)
  parent: System.Text.Encoding
  isExternal: true
  name: GetEncoding(String, EncoderFallback, DecoderFallback)
  nameWithType: Encoding.GetEncoding(String, EncoderFallback, DecoderFallback)
  fullName: System.Text.Encoding.GetEncoding(System.String, System.Text.EncoderFallback, System.Text.DecoderFallback)
  spec.csharp:
  - uid: System.Text.Encoding.GetEncoding(System.String,System.Text.EncoderFallback,System.Text.DecoderFallback)
    name: GetEncoding
    nameWithType: Encoding.GetEncoding
    fullName: System.Text.Encoding.GetEncoding
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Text.EncoderFallback
    name: EncoderFallback
    nameWithType: EncoderFallback
    fullName: System.Text.EncoderFallback
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Text.DecoderFallback
    name: DecoderFallback
    nameWithType: DecoderFallback
    fullName: System.Text.DecoderFallback
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Text.Encoding.GetEncoding(System.String,System.Text.EncoderFallback,System.Text.DecoderFallback)
    name: GetEncoding
    nameWithType: Encoding.GetEncoding
    fullName: System.Text.Encoding.GetEncoding
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Text.EncoderFallback
    name: EncoderFallback
    nameWithType: EncoderFallback
    fullName: System.Text.EncoderFallback
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Text.DecoderFallback
    name: DecoderFallback
    nameWithType: DecoderFallback
    fullName: System.Text.DecoderFallback
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Text.Encoding.GetEncodings
  commentId: M:System.Text.Encoding.GetEncodings
  parent: System.Text.Encoding
  isExternal: true
  name: GetEncodings()
  nameWithType: Encoding.GetEncodings()
  fullName: System.Text.Encoding.GetEncodings()
  spec.csharp:
  - uid: System.Text.Encoding.GetEncodings
    name: GetEncodings
    nameWithType: Encoding.GetEncodings
    fullName: System.Text.Encoding.GetEncodings
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Text.Encoding.GetEncodings
    name: GetEncodings
    nameWithType: Encoding.GetEncodings
    fullName: System.Text.Encoding.GetEncodings
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Text.Encoding.Clone
  commentId: M:System.Text.Encoding.Clone
  parent: System.Text.Encoding
  isExternal: true
  name: Clone()
  nameWithType: Encoding.Clone()
  fullName: System.Text.Encoding.Clone()
  spec.csharp:
  - uid: System.Text.Encoding.Clone
    name: Clone
    nameWithType: Encoding.Clone
    fullName: System.Text.Encoding.Clone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Text.Encoding.Clone
    name: Clone
    nameWithType: Encoding.Clone
    fullName: System.Text.Encoding.Clone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Text.Encoding.GetByteCount(System.Char[])
  commentId: M:System.Text.Encoding.GetByteCount(System.Char[])
  parent: System.Text.Encoding
  isExternal: true
  name: GetByteCount(Char[])
  nameWithType: Encoding.GetByteCount(Char[])
  fullName: System.Text.Encoding.GetByteCount(System.Char[])
  nameWithType.vb: Encoding.GetByteCount(Char())
  fullname.vb: System.Text.Encoding.GetByteCount(System.Char())
  name.vb: GetByteCount(Char())
  spec.csharp:
  - uid: System.Text.Encoding.GetByteCount(System.Char[])
    name: GetByteCount
    nameWithType: Encoding.GetByteCount
    fullName: System.Text.Encoding.GetByteCount
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Char
    name: Char
    nameWithType: Char
    fullName: System.Char
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Text.Encoding.GetByteCount(System.Char[])
    name: GetByteCount
    nameWithType: Encoding.GetByteCount
    fullName: System.Text.Encoding.GetByteCount
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Char
    name: Char
    nameWithType: Char
    fullName: System.Char
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Text.Encoding.GetByteCount(System.Char*,System.Int32)
  commentId: M:System.Text.Encoding.GetByteCount(System.Char*,System.Int32)
  parent: System.Text.Encoding
  isExternal: true
  name: GetByteCount(Char*, Int32)
  nameWithType: Encoding.GetByteCount(Char*, Int32)
  fullName: System.Text.Encoding.GetByteCount(System.Char*, System.Int32)
  spec.csharp:
  - uid: System.Text.Encoding.GetByteCount(System.Char*,System.Int32)
    name: GetByteCount
    nameWithType: Encoding.GetByteCount
    fullName: System.Text.Encoding.GetByteCount
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Char
    name: Char
    nameWithType: Char
    fullName: System.Char
    isExternal: true
  - name: '*'
    nameWithType: '*'
    fullName: '*'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Text.Encoding.GetByteCount(System.Char*,System.Int32)
    name: GetByteCount
    nameWithType: Encoding.GetByteCount
    fullName: System.Text.Encoding.GetByteCount
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Char
    name: Char
    nameWithType: Char
    fullName: System.Char
    isExternal: true
  - name: '*'
    nameWithType: '*'
    fullName: '*'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Text.Encoding.GetBytes(System.Char[])
  commentId: M:System.Text.Encoding.GetBytes(System.Char[])
  parent: System.Text.Encoding
  isExternal: true
  name: GetBytes(Char[])
  nameWithType: Encoding.GetBytes(Char[])
  fullName: System.Text.Encoding.GetBytes(System.Char[])
  nameWithType.vb: Encoding.GetBytes(Char())
  fullname.vb: System.Text.Encoding.GetBytes(System.Char())
  name.vb: GetBytes(Char())
  spec.csharp:
  - uid: System.Text.Encoding.GetBytes(System.Char[])
    name: GetBytes
    nameWithType: Encoding.GetBytes
    fullName: System.Text.Encoding.GetBytes
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Char
    name: Char
    nameWithType: Char
    fullName: System.Char
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Text.Encoding.GetBytes(System.Char[])
    name: GetBytes
    nameWithType: Encoding.GetBytes
    fullName: System.Text.Encoding.GetBytes
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Char
    name: Char
    nameWithType: Char
    fullName: System.Char
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Text.Encoding.GetBytes(System.Char[],System.Int32,System.Int32)
  commentId: M:System.Text.Encoding.GetBytes(System.Char[],System.Int32,System.Int32)
  parent: System.Text.Encoding
  isExternal: true
  name: GetBytes(Char[], Int32, Int32)
  nameWithType: Encoding.GetBytes(Char[], Int32, Int32)
  fullName: System.Text.Encoding.GetBytes(System.Char[], System.Int32, System.Int32)
  nameWithType.vb: Encoding.GetBytes(Char(), Int32, Int32)
  fullname.vb: System.Text.Encoding.GetBytes(System.Char(), System.Int32, System.Int32)
  name.vb: GetBytes(Char(), Int32, Int32)
  spec.csharp:
  - uid: System.Text.Encoding.GetBytes(System.Char[],System.Int32,System.Int32)
    name: GetBytes
    nameWithType: Encoding.GetBytes
    fullName: System.Text.Encoding.GetBytes
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Char
    name: Char
    nameWithType: Char
    fullName: System.Char
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Text.Encoding.GetBytes(System.Char[],System.Int32,System.Int32)
    name: GetBytes
    nameWithType: Encoding.GetBytes
    fullName: System.Text.Encoding.GetBytes
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Char
    name: Char
    nameWithType: Char
    fullName: System.Char
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Text.Encoding.GetBytes(System.String)
  commentId: M:System.Text.Encoding.GetBytes(System.String)
  parent: System.Text.Encoding
  isExternal: true
  name: GetBytes(String)
  nameWithType: Encoding.GetBytes(String)
  fullName: System.Text.Encoding.GetBytes(System.String)
  spec.csharp:
  - uid: System.Text.Encoding.GetBytes(System.String)
    name: GetBytes
    nameWithType: Encoding.GetBytes
    fullName: System.Text.Encoding.GetBytes
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Text.Encoding.GetBytes(System.String)
    name: GetBytes
    nameWithType: Encoding.GetBytes
    fullName: System.Text.Encoding.GetBytes
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Text.Encoding.GetBytes(System.Char*,System.Int32,System.Byte*,System.Int32)
  commentId: M:System.Text.Encoding.GetBytes(System.Char*,System.Int32,System.Byte*,System.Int32)
  parent: System.Text.Encoding
  isExternal: true
  name: GetBytes(Char*, Int32, Byte*, Int32)
  nameWithType: Encoding.GetBytes(Char*, Int32, Byte*, Int32)
  fullName: System.Text.Encoding.GetBytes(System.Char*, System.Int32, System.Byte*, System.Int32)
  spec.csharp:
  - uid: System.Text.Encoding.GetBytes(System.Char*,System.Int32,System.Byte*,System.Int32)
    name: GetBytes
    nameWithType: Encoding.GetBytes
    fullName: System.Text.Encoding.GetBytes
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Char
    name: Char
    nameWithType: Char
    fullName: System.Char
    isExternal: true
  - name: '*'
    nameWithType: '*'
    fullName: '*'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: System.Byte
    isExternal: true
  - name: '*'
    nameWithType: '*'
    fullName: '*'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Text.Encoding.GetBytes(System.Char*,System.Int32,System.Byte*,System.Int32)
    name: GetBytes
    nameWithType: Encoding.GetBytes
    fullName: System.Text.Encoding.GetBytes
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Char
    name: Char
    nameWithType: Char
    fullName: System.Char
    isExternal: true
  - name: '*'
    nameWithType: '*'
    fullName: '*'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: System.Byte
    isExternal: true
  - name: '*'
    nameWithType: '*'
    fullName: '*'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Text.Encoding.GetCharCount(System.Byte[])
  commentId: M:System.Text.Encoding.GetCharCount(System.Byte[])
  parent: System.Text.Encoding
  isExternal: true
  name: GetCharCount(Byte[])
  nameWithType: Encoding.GetCharCount(Byte[])
  fullName: System.Text.Encoding.GetCharCount(System.Byte[])
  nameWithType.vb: Encoding.GetCharCount(Byte())
  fullname.vb: System.Text.Encoding.GetCharCount(System.Byte())
  name.vb: GetCharCount(Byte())
  spec.csharp:
  - uid: System.Text.Encoding.GetCharCount(System.Byte[])
    name: GetCharCount
    nameWithType: Encoding.GetCharCount
    fullName: System.Text.Encoding.GetCharCount
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: System.Byte
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Text.Encoding.GetCharCount(System.Byte[])
    name: GetCharCount
    nameWithType: Encoding.GetCharCount
    fullName: System.Text.Encoding.GetCharCount
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: System.Byte
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Text.Encoding.GetCharCount(System.Byte*,System.Int32)
  commentId: M:System.Text.Encoding.GetCharCount(System.Byte*,System.Int32)
  parent: System.Text.Encoding
  isExternal: true
  name: GetCharCount(Byte*, Int32)
  nameWithType: Encoding.GetCharCount(Byte*, Int32)
  fullName: System.Text.Encoding.GetCharCount(System.Byte*, System.Int32)
  spec.csharp:
  - uid: System.Text.Encoding.GetCharCount(System.Byte*,System.Int32)
    name: GetCharCount
    nameWithType: Encoding.GetCharCount
    fullName: System.Text.Encoding.GetCharCount
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: System.Byte
    isExternal: true
  - name: '*'
    nameWithType: '*'
    fullName: '*'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Text.Encoding.GetCharCount(System.Byte*,System.Int32)
    name: GetCharCount
    nameWithType: Encoding.GetCharCount
    fullName: System.Text.Encoding.GetCharCount
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: System.Byte
    isExternal: true
  - name: '*'
    nameWithType: '*'
    fullName: '*'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Text.Encoding.GetChars(System.Byte[])
  commentId: M:System.Text.Encoding.GetChars(System.Byte[])
  parent: System.Text.Encoding
  isExternal: true
  name: GetChars(Byte[])
  nameWithType: Encoding.GetChars(Byte[])
  fullName: System.Text.Encoding.GetChars(System.Byte[])
  nameWithType.vb: Encoding.GetChars(Byte())
  fullname.vb: System.Text.Encoding.GetChars(System.Byte())
  name.vb: GetChars(Byte())
  spec.csharp:
  - uid: System.Text.Encoding.GetChars(System.Byte[])
    name: GetChars
    nameWithType: Encoding.GetChars
    fullName: System.Text.Encoding.GetChars
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: System.Byte
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Text.Encoding.GetChars(System.Byte[])
    name: GetChars
    nameWithType: Encoding.GetChars
    fullName: System.Text.Encoding.GetChars
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: System.Byte
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Text.Encoding.GetChars(System.Byte[],System.Int32,System.Int32)
  commentId: M:System.Text.Encoding.GetChars(System.Byte[],System.Int32,System.Int32)
  parent: System.Text.Encoding
  isExternal: true
  name: GetChars(Byte[], Int32, Int32)
  nameWithType: Encoding.GetChars(Byte[], Int32, Int32)
  fullName: System.Text.Encoding.GetChars(System.Byte[], System.Int32, System.Int32)
  nameWithType.vb: Encoding.GetChars(Byte(), Int32, Int32)
  fullname.vb: System.Text.Encoding.GetChars(System.Byte(), System.Int32, System.Int32)
  name.vb: GetChars(Byte(), Int32, Int32)
  spec.csharp:
  - uid: System.Text.Encoding.GetChars(System.Byte[],System.Int32,System.Int32)
    name: GetChars
    nameWithType: Encoding.GetChars
    fullName: System.Text.Encoding.GetChars
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: System.Byte
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Text.Encoding.GetChars(System.Byte[],System.Int32,System.Int32)
    name: GetChars
    nameWithType: Encoding.GetChars
    fullName: System.Text.Encoding.GetChars
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: System.Byte
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Text.Encoding.GetChars(System.Byte*,System.Int32,System.Char*,System.Int32)
  commentId: M:System.Text.Encoding.GetChars(System.Byte*,System.Int32,System.Char*,System.Int32)
  parent: System.Text.Encoding
  isExternal: true
  name: GetChars(Byte*, Int32, Char*, Int32)
  nameWithType: Encoding.GetChars(Byte*, Int32, Char*, Int32)
  fullName: System.Text.Encoding.GetChars(System.Byte*, System.Int32, System.Char*, System.Int32)
  spec.csharp:
  - uid: System.Text.Encoding.GetChars(System.Byte*,System.Int32,System.Char*,System.Int32)
    name: GetChars
    nameWithType: Encoding.GetChars
    fullName: System.Text.Encoding.GetChars
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: System.Byte
    isExternal: true
  - name: '*'
    nameWithType: '*'
    fullName: '*'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Char
    name: Char
    nameWithType: Char
    fullName: System.Char
    isExternal: true
  - name: '*'
    nameWithType: '*'
    fullName: '*'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Text.Encoding.GetChars(System.Byte*,System.Int32,System.Char*,System.Int32)
    name: GetChars
    nameWithType: Encoding.GetChars
    fullName: System.Text.Encoding.GetChars
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: System.Byte
    isExternal: true
  - name: '*'
    nameWithType: '*'
    fullName: '*'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Char
    name: Char
    nameWithType: Char
    fullName: System.Char
    isExternal: true
  - name: '*'
    nameWithType: '*'
    fullName: '*'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Text.Encoding.GetString(System.Byte*,System.Int32)
  commentId: M:System.Text.Encoding.GetString(System.Byte*,System.Int32)
  parent: System.Text.Encoding
  isExternal: true
  name: GetString(Byte*, Int32)
  nameWithType: Encoding.GetString(Byte*, Int32)
  fullName: System.Text.Encoding.GetString(System.Byte*, System.Int32)
  spec.csharp:
  - uid: System.Text.Encoding.GetString(System.Byte*,System.Int32)
    name: GetString
    nameWithType: Encoding.GetString
    fullName: System.Text.Encoding.GetString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: System.Byte
    isExternal: true
  - name: '*'
    nameWithType: '*'
    fullName: '*'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Text.Encoding.GetString(System.Byte*,System.Int32)
    name: GetString
    nameWithType: Encoding.GetString
    fullName: System.Text.Encoding.GetString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: System.Byte
    isExternal: true
  - name: '*'
    nameWithType: '*'
    fullName: '*'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Text.Encoding.IsAlwaysNormalized
  commentId: M:System.Text.Encoding.IsAlwaysNormalized
  parent: System.Text.Encoding
  isExternal: true
  name: IsAlwaysNormalized()
  nameWithType: Encoding.IsAlwaysNormalized()
  fullName: System.Text.Encoding.IsAlwaysNormalized()
  spec.csharp:
  - uid: System.Text.Encoding.IsAlwaysNormalized
    name: IsAlwaysNormalized
    nameWithType: Encoding.IsAlwaysNormalized
    fullName: System.Text.Encoding.IsAlwaysNormalized
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Text.Encoding.IsAlwaysNormalized
    name: IsAlwaysNormalized
    nameWithType: Encoding.IsAlwaysNormalized
    fullName: System.Text.Encoding.IsAlwaysNormalized
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Text.Encoding.IsAlwaysNormalized(System.Text.NormalizationForm)
  commentId: M:System.Text.Encoding.IsAlwaysNormalized(System.Text.NormalizationForm)
  parent: System.Text.Encoding
  isExternal: true
  name: IsAlwaysNormalized(NormalizationForm)
  nameWithType: Encoding.IsAlwaysNormalized(NormalizationForm)
  fullName: System.Text.Encoding.IsAlwaysNormalized(System.Text.NormalizationForm)
  spec.csharp:
  - uid: System.Text.Encoding.IsAlwaysNormalized(System.Text.NormalizationForm)
    name: IsAlwaysNormalized
    nameWithType: Encoding.IsAlwaysNormalized
    fullName: System.Text.Encoding.IsAlwaysNormalized
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Text.NormalizationForm
    name: NormalizationForm
    nameWithType: NormalizationForm
    fullName: System.Text.NormalizationForm
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Text.Encoding.IsAlwaysNormalized(System.Text.NormalizationForm)
    name: IsAlwaysNormalized
    nameWithType: Encoding.IsAlwaysNormalized
    fullName: System.Text.Encoding.IsAlwaysNormalized
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Text.NormalizationForm
    name: NormalizationForm
    nameWithType: NormalizationForm
    fullName: System.Text.NormalizationForm
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Text.Encoding.GetString(System.Byte[])
  commentId: M:System.Text.Encoding.GetString(System.Byte[])
  parent: System.Text.Encoding
  isExternal: true
  name: GetString(Byte[])
  nameWithType: Encoding.GetString(Byte[])
  fullName: System.Text.Encoding.GetString(System.Byte[])
  nameWithType.vb: Encoding.GetString(Byte())
  fullname.vb: System.Text.Encoding.GetString(System.Byte())
  name.vb: GetString(Byte())
  spec.csharp:
  - uid: System.Text.Encoding.GetString(System.Byte[])
    name: GetString
    nameWithType: Encoding.GetString
    fullName: System.Text.Encoding.GetString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: System.Byte
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Text.Encoding.GetString(System.Byte[])
    name: GetString
    nameWithType: Encoding.GetString
    fullName: System.Text.Encoding.GetString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: System.Byte
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Text.Encoding.BodyName
  commentId: P:System.Text.Encoding.BodyName
  parent: System.Text.Encoding
  isExternal: true
  name: BodyName
  nameWithType: Encoding.BodyName
  fullName: System.Text.Encoding.BodyName
- uid: System.Text.Encoding.EncodingName
  commentId: P:System.Text.Encoding.EncodingName
  parent: System.Text.Encoding
  isExternal: true
  name: EncodingName
  nameWithType: Encoding.EncodingName
  fullName: System.Text.Encoding.EncodingName
- uid: System.Text.Encoding.HeaderName
  commentId: P:System.Text.Encoding.HeaderName
  parent: System.Text.Encoding
  isExternal: true
  name: HeaderName
  nameWithType: Encoding.HeaderName
  fullName: System.Text.Encoding.HeaderName
- uid: System.Text.Encoding.WebName
  commentId: P:System.Text.Encoding.WebName
  parent: System.Text.Encoding
  isExternal: true
  name: WebName
  nameWithType: Encoding.WebName
  fullName: System.Text.Encoding.WebName
- uid: System.Text.Encoding.WindowsCodePage
  commentId: P:System.Text.Encoding.WindowsCodePage
  parent: System.Text.Encoding
  isExternal: true
  name: WindowsCodePage
  nameWithType: Encoding.WindowsCodePage
  fullName: System.Text.Encoding.WindowsCodePage
- uid: System.Text.Encoding.IsBrowserDisplay
  commentId: P:System.Text.Encoding.IsBrowserDisplay
  parent: System.Text.Encoding
  isExternal: true
  name: IsBrowserDisplay
  nameWithType: Encoding.IsBrowserDisplay
  fullName: System.Text.Encoding.IsBrowserDisplay
- uid: System.Text.Encoding.IsBrowserSave
  commentId: P:System.Text.Encoding.IsBrowserSave
  parent: System.Text.Encoding
  isExternal: true
  name: IsBrowserSave
  nameWithType: Encoding.IsBrowserSave
  fullName: System.Text.Encoding.IsBrowserSave
- uid: System.Text.Encoding.IsMailNewsDisplay
  commentId: P:System.Text.Encoding.IsMailNewsDisplay
  parent: System.Text.Encoding
  isExternal: true
  name: IsMailNewsDisplay
  nameWithType: Encoding.IsMailNewsDisplay
  fullName: System.Text.Encoding.IsMailNewsDisplay
- uid: System.Text.Encoding.IsMailNewsSave
  commentId: P:System.Text.Encoding.IsMailNewsSave
  parent: System.Text.Encoding
  isExternal: true
  name: IsMailNewsSave
  nameWithType: Encoding.IsMailNewsSave
  fullName: System.Text.Encoding.IsMailNewsSave
- uid: System.Text.Encoding.IsSingleByte
  commentId: P:System.Text.Encoding.IsSingleByte
  parent: System.Text.Encoding
  isExternal: true
  name: IsSingleByte
  nameWithType: Encoding.IsSingleByte
  fullName: System.Text.Encoding.IsSingleByte
- uid: System.Text.Encoding.EncoderFallback
  commentId: P:System.Text.Encoding.EncoderFallback
  parent: System.Text.Encoding
  isExternal: true
  name: EncoderFallback
  nameWithType: Encoding.EncoderFallback
  fullName: System.Text.Encoding.EncoderFallback
- uid: System.Text.Encoding.DecoderFallback
  commentId: P:System.Text.Encoding.DecoderFallback
  parent: System.Text.Encoding
  isExternal: true
  name: DecoderFallback
  nameWithType: Encoding.DecoderFallback
  fullName: System.Text.Encoding.DecoderFallback
- uid: System.Text.Encoding.IsReadOnly
  commentId: P:System.Text.Encoding.IsReadOnly
  parent: System.Text.Encoding
  isExternal: true
  name: IsReadOnly
  nameWithType: Encoding.IsReadOnly
  fullName: System.Text.Encoding.IsReadOnly
- uid: System.Text.Encoding.ASCII
  commentId: P:System.Text.Encoding.ASCII
  parent: System.Text.Encoding
  isExternal: true
  name: ASCII
  nameWithType: Encoding.ASCII
  fullName: System.Text.Encoding.ASCII
- uid: System.Text.Encoding.CodePage
  commentId: P:System.Text.Encoding.CodePage
  parent: System.Text.Encoding
  isExternal: true
  name: CodePage
  nameWithType: Encoding.CodePage
  fullName: System.Text.Encoding.CodePage
- uid: System.Text.Encoding.Default
  commentId: P:System.Text.Encoding.Default
  parent: System.Text.Encoding
  isExternal: true
  name: Default
  nameWithType: Encoding.Default
  fullName: System.Text.Encoding.Default
- uid: System.Text.Encoding.Unicode
  commentId: P:System.Text.Encoding.Unicode
  parent: System.Text.Encoding
  isExternal: true
  name: Unicode
  nameWithType: Encoding.Unicode
  fullName: System.Text.Encoding.Unicode
- uid: System.Text.Encoding.BigEndianUnicode
  commentId: P:System.Text.Encoding.BigEndianUnicode
  parent: System.Text.Encoding
  isExternal: true
  name: BigEndianUnicode
  nameWithType: Encoding.BigEndianUnicode
  fullName: System.Text.Encoding.BigEndianUnicode
- uid: System.Text.Encoding.UTF7
  commentId: P:System.Text.Encoding.UTF7
  parent: System.Text.Encoding
  isExternal: true
  name: UTF7
  nameWithType: Encoding.UTF7
  fullName: System.Text.Encoding.UTF7
- uid: System.Text.Encoding.UTF8
  commentId: P:System.Text.Encoding.UTF8
  parent: System.Text.Encoding
  isExternal: true
  name: UTF8
  nameWithType: Encoding.UTF8
  fullName: System.Text.Encoding.UTF8
- uid: System.Text.Encoding.UTF32
  commentId: P:System.Text.Encoding.UTF32
  parent: System.Text.Encoding
  isExternal: true
  name: UTF32
  nameWithType: Encoding.UTF32
  fullName: System.Text.Encoding.UTF32
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: false
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Text.Encoding.Equals(System.Object)
  commentId: M:System.Text.Encoding.Equals(System.Object)
  parent: System.Text.Encoding
  isExternal: true
  name: Equals(Object)
  nameWithType: Encoding.Equals(Object)
  fullName: System.Text.Encoding.Equals(System.Object)
  spec.csharp:
  - uid: System.Text.Encoding.Equals(System.Object)
    name: Equals
    nameWithType: Encoding.Equals
    fullName: System.Text.Encoding.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Text.Encoding.Equals(System.Object)
    name: Equals
    nameWithType: Encoding.Equals
    fullName: System.Text.Encoding.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Text.Encoding.GetByteCount(System.Char[],System.Int32,System.Int32)
  commentId: M:System.Text.Encoding.GetByteCount(System.Char[],System.Int32,System.Int32)
  parent: System.Text.Encoding
  isExternal: true
  name: GetByteCount(Char[], Int32, Int32)
  nameWithType: Encoding.GetByteCount(Char[], Int32, Int32)
  fullName: System.Text.Encoding.GetByteCount(System.Char[], System.Int32, System.Int32)
  nameWithType.vb: Encoding.GetByteCount(Char(), Int32, Int32)
  fullname.vb: System.Text.Encoding.GetByteCount(System.Char(), System.Int32, System.Int32)
  name.vb: GetByteCount(Char(), Int32, Int32)
  spec.csharp:
  - uid: System.Text.Encoding.GetByteCount(System.Char[],System.Int32,System.Int32)
    name: GetByteCount
    nameWithType: Encoding.GetByteCount
    fullName: System.Text.Encoding.GetByteCount
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Char
    name: Char
    nameWithType: Char
    fullName: System.Char
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Text.Encoding.GetByteCount(System.Char[],System.Int32,System.Int32)
    name: GetByteCount
    nameWithType: Encoding.GetByteCount
    fullName: System.Text.Encoding.GetByteCount
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Char
    name: Char
    nameWithType: Char
    fullName: System.Char
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Char[]
  name: Char[]
  nameWithType: Char[]
  fullName: System.Char[]
  nameWithType.vb: Char()
  fullname.vb: System.Char()
  name.vb: Char()
  spec.csharp:
  - uid: System.Char
    name: Char
    nameWithType: Char
    fullName: System.Char
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  spec.vb:
  - uid: System.Char
    name: Char
    nameWithType: Char
    fullName: System.Char
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: false
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Text.Encoding.GetByteCount(System.String)
  commentId: M:System.Text.Encoding.GetByteCount(System.String)
  parent: System.Text.Encoding
  isExternal: true
  name: GetByteCount(String)
  nameWithType: Encoding.GetByteCount(String)
  fullName: System.Text.Encoding.GetByteCount(System.String)
  spec.csharp:
  - uid: System.Text.Encoding.GetByteCount(System.String)
    name: GetByteCount
    nameWithType: Encoding.GetByteCount
    fullName: System.Text.Encoding.GetByteCount
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Text.Encoding.GetByteCount(System.String)
    name: GetByteCount
    nameWithType: Encoding.GetByteCount
    fullName: System.Text.Encoding.GetByteCount
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: false
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Text.Encoding.GetBytes(System.Char[],System.Int32,System.Int32,System.Byte[],System.Int32)
  commentId: M:System.Text.Encoding.GetBytes(System.Char[],System.Int32,System.Int32,System.Byte[],System.Int32)
  parent: System.Text.Encoding
  isExternal: true
  name: GetBytes(Char[], Int32, Int32, Byte[], Int32)
  nameWithType: Encoding.GetBytes(Char[], Int32, Int32, Byte[], Int32)
  fullName: System.Text.Encoding.GetBytes(System.Char[], System.Int32, System.Int32, System.Byte[], System.Int32)
  nameWithType.vb: Encoding.GetBytes(Char(), Int32, Int32, Byte(), Int32)
  fullname.vb: System.Text.Encoding.GetBytes(System.Char(), System.Int32, System.Int32, System.Byte(), System.Int32)
  name.vb: GetBytes(Char(), Int32, Int32, Byte(), Int32)
  spec.csharp:
  - uid: System.Text.Encoding.GetBytes(System.Char[],System.Int32,System.Int32,System.Byte[],System.Int32)
    name: GetBytes
    nameWithType: Encoding.GetBytes
    fullName: System.Text.Encoding.GetBytes
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Char
    name: Char
    nameWithType: Char
    fullName: System.Char
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: System.Byte
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Text.Encoding.GetBytes(System.Char[],System.Int32,System.Int32,System.Byte[],System.Int32)
    name: GetBytes
    nameWithType: Encoding.GetBytes
    fullName: System.Text.Encoding.GetBytes
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Char
    name: Char
    nameWithType: Char
    fullName: System.Char
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: System.Byte
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Byte[]
  name: Byte[]
  nameWithType: Byte[]
  fullName: System.Byte[]
  nameWithType.vb: Byte()
  fullname.vb: System.Byte()
  name.vb: Byte()
  spec.csharp:
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: System.Byte
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  spec.vb:
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: System.Byte
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
- uid: System.Text.Encoding.GetBytes(System.String,System.Int32,System.Int32,System.Byte[],System.Int32)
  commentId: M:System.Text.Encoding.GetBytes(System.String,System.Int32,System.Int32,System.Byte[],System.Int32)
  parent: System.Text.Encoding
  isExternal: true
  name: GetBytes(String, Int32, Int32, Byte[], Int32)
  nameWithType: Encoding.GetBytes(String, Int32, Int32, Byte[], Int32)
  fullName: System.Text.Encoding.GetBytes(System.String, System.Int32, System.Int32, System.Byte[], System.Int32)
  nameWithType.vb: Encoding.GetBytes(String, Int32, Int32, Byte(), Int32)
  fullname.vb: System.Text.Encoding.GetBytes(System.String, System.Int32, System.Int32, System.Byte(), System.Int32)
  name.vb: GetBytes(String, Int32, Int32, Byte(), Int32)
  spec.csharp:
  - uid: System.Text.Encoding.GetBytes(System.String,System.Int32,System.Int32,System.Byte[],System.Int32)
    name: GetBytes
    nameWithType: Encoding.GetBytes
    fullName: System.Text.Encoding.GetBytes
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: System.Byte
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Text.Encoding.GetBytes(System.String,System.Int32,System.Int32,System.Byte[],System.Int32)
    name: GetBytes
    nameWithType: Encoding.GetBytes
    fullName: System.Text.Encoding.GetBytes
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: System.Byte
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Text.Encoding.GetCharCount(System.Byte[],System.Int32,System.Int32)
  commentId: M:System.Text.Encoding.GetCharCount(System.Byte[],System.Int32,System.Int32)
  parent: System.Text.Encoding
  isExternal: true
  name: GetCharCount(Byte[], Int32, Int32)
  nameWithType: Encoding.GetCharCount(Byte[], Int32, Int32)
  fullName: System.Text.Encoding.GetCharCount(System.Byte[], System.Int32, System.Int32)
  nameWithType.vb: Encoding.GetCharCount(Byte(), Int32, Int32)
  fullname.vb: System.Text.Encoding.GetCharCount(System.Byte(), System.Int32, System.Int32)
  name.vb: GetCharCount(Byte(), Int32, Int32)
  spec.csharp:
  - uid: System.Text.Encoding.GetCharCount(System.Byte[],System.Int32,System.Int32)
    name: GetCharCount
    nameWithType: Encoding.GetCharCount
    fullName: System.Text.Encoding.GetCharCount
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: System.Byte
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Text.Encoding.GetCharCount(System.Byte[],System.Int32,System.Int32)
    name: GetCharCount
    nameWithType: Encoding.GetCharCount
    fullName: System.Text.Encoding.GetCharCount
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: System.Byte
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Text.Encoding.GetChars(System.Byte[],System.Int32,System.Int32,System.Char[],System.Int32)
  commentId: M:System.Text.Encoding.GetChars(System.Byte[],System.Int32,System.Int32,System.Char[],System.Int32)
  parent: System.Text.Encoding
  isExternal: true
  name: GetChars(Byte[], Int32, Int32, Char[], Int32)
  nameWithType: Encoding.GetChars(Byte[], Int32, Int32, Char[], Int32)
  fullName: System.Text.Encoding.GetChars(System.Byte[], System.Int32, System.Int32, System.Char[], System.Int32)
  nameWithType.vb: Encoding.GetChars(Byte(), Int32, Int32, Char(), Int32)
  fullname.vb: System.Text.Encoding.GetChars(System.Byte(), System.Int32, System.Int32, System.Char(), System.Int32)
  name.vb: GetChars(Byte(), Int32, Int32, Char(), Int32)
  spec.csharp:
  - uid: System.Text.Encoding.GetChars(System.Byte[],System.Int32,System.Int32,System.Char[],System.Int32)
    name: GetChars
    nameWithType: Encoding.GetChars
    fullName: System.Text.Encoding.GetChars
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: System.Byte
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Char
    name: Char
    nameWithType: Char
    fullName: System.Char
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Text.Encoding.GetChars(System.Byte[],System.Int32,System.Int32,System.Char[],System.Int32)
    name: GetChars
    nameWithType: Encoding.GetChars
    fullName: System.Text.Encoding.GetChars
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: System.Byte
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Char
    name: Char
    nameWithType: Char
    fullName: System.Char
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Text.Encoding.GetDecoder
  commentId: M:System.Text.Encoding.GetDecoder
  parent: System.Text.Encoding
  isExternal: true
  name: GetDecoder()
  nameWithType: Encoding.GetDecoder()
  fullName: System.Text.Encoding.GetDecoder()
  spec.csharp:
  - uid: System.Text.Encoding.GetDecoder
    name: GetDecoder
    nameWithType: Encoding.GetDecoder
    fullName: System.Text.Encoding.GetDecoder
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Text.Encoding.GetDecoder
    name: GetDecoder
    nameWithType: Encoding.GetDecoder
    fullName: System.Text.Encoding.GetDecoder
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Text.Decoder
  commentId: T:System.Text.Decoder
  parent: System.Text
  isExternal: false
  name: Decoder
  nameWithType: Decoder
  fullName: System.Text.Decoder
- uid: System.Text.Encoding.GetEncoder
  commentId: M:System.Text.Encoding.GetEncoder
  parent: System.Text.Encoding
  isExternal: true
  name: GetEncoder()
  nameWithType: Encoding.GetEncoder()
  fullName: System.Text.Encoding.GetEncoder()
  spec.csharp:
  - uid: System.Text.Encoding.GetEncoder
    name: GetEncoder
    nameWithType: Encoding.GetEncoder
    fullName: System.Text.Encoding.GetEncoder
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Text.Encoding.GetEncoder
    name: GetEncoder
    nameWithType: Encoding.GetEncoder
    fullName: System.Text.Encoding.GetEncoder
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Text.Encoder
  commentId: T:System.Text.Encoder
  parent: System.Text
  isExternal: false
  name: Encoder
  nameWithType: Encoder
  fullName: System.Text.Encoder
- uid: System.Text.Encoding.GetHashCode
  commentId: M:System.Text.Encoding.GetHashCode
  parent: System.Text.Encoding
  isExternal: true
  name: GetHashCode()
  nameWithType: Encoding.GetHashCode()
  fullName: System.Text.Encoding.GetHashCode()
  spec.csharp:
  - uid: System.Text.Encoding.GetHashCode
    name: GetHashCode
    nameWithType: Encoding.GetHashCode
    fullName: System.Text.Encoding.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Text.Encoding.GetHashCode
    name: GetHashCode
    nameWithType: Encoding.GetHashCode
    fullName: System.Text.Encoding.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Text.Encoding.GetMaxByteCount(System.Int32)
  commentId: M:System.Text.Encoding.GetMaxByteCount(System.Int32)
  parent: System.Text.Encoding
  isExternal: true
  name: GetMaxByteCount(Int32)
  nameWithType: Encoding.GetMaxByteCount(Int32)
  fullName: System.Text.Encoding.GetMaxByteCount(System.Int32)
  spec.csharp:
  - uid: System.Text.Encoding.GetMaxByteCount(System.Int32)
    name: GetMaxByteCount
    nameWithType: Encoding.GetMaxByteCount
    fullName: System.Text.Encoding.GetMaxByteCount
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Text.Encoding.GetMaxByteCount(System.Int32)
    name: GetMaxByteCount
    nameWithType: Encoding.GetMaxByteCount
    fullName: System.Text.Encoding.GetMaxByteCount
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Text.Encoding.GetMaxCharCount(System.Int32)
  commentId: M:System.Text.Encoding.GetMaxCharCount(System.Int32)
  parent: System.Text.Encoding
  isExternal: true
  name: GetMaxCharCount(Int32)
  nameWithType: Encoding.GetMaxCharCount(Int32)
  fullName: System.Text.Encoding.GetMaxCharCount(System.Int32)
  spec.csharp:
  - uid: System.Text.Encoding.GetMaxCharCount(System.Int32)
    name: GetMaxCharCount
    nameWithType: Encoding.GetMaxCharCount
    fullName: System.Text.Encoding.GetMaxCharCount
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Text.Encoding.GetMaxCharCount(System.Int32)
    name: GetMaxCharCount
    nameWithType: Encoding.GetMaxCharCount
    fullName: System.Text.Encoding.GetMaxCharCount
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Text.Encoding.GetPreamble
  commentId: M:System.Text.Encoding.GetPreamble
  parent: System.Text.Encoding
  isExternal: true
  name: GetPreamble()
  nameWithType: Encoding.GetPreamble()
  fullName: System.Text.Encoding.GetPreamble()
  spec.csharp:
  - uid: System.Text.Encoding.GetPreamble
    name: GetPreamble
    nameWithType: Encoding.GetPreamble
    fullName: System.Text.Encoding.GetPreamble
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Text.Encoding.GetPreamble
    name: GetPreamble
    nameWithType: Encoding.GetPreamble
    fullName: System.Text.Encoding.GetPreamble
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Text.Encoding.GetString(System.Byte[],System.Int32,System.Int32)
  commentId: M:System.Text.Encoding.GetString(System.Byte[],System.Int32,System.Int32)
  parent: System.Text.Encoding
  isExternal: true
  name: GetString(Byte[], Int32, Int32)
  nameWithType: Encoding.GetString(Byte[], Int32, Int32)
  fullName: System.Text.Encoding.GetString(System.Byte[], System.Int32, System.Int32)
  nameWithType.vb: Encoding.GetString(Byte(), Int32, Int32)
  fullname.vb: System.Text.Encoding.GetString(System.Byte(), System.Int32, System.Int32)
  name.vb: GetString(Byte(), Int32, Int32)
  spec.csharp:
  - uid: System.Text.Encoding.GetString(System.Byte[],System.Int32,System.Int32)
    name: GetString
    nameWithType: Encoding.GetString
    fullName: System.Text.Encoding.GetString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: System.Byte
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Text.Encoding.GetString(System.Byte[],System.Int32,System.Int32)
    name: GetString
    nameWithType: Encoding.GetString
    fullName: System.Text.Encoding.GetString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: System.Byte
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.ArgumentNullException
  commentId: T:System.ArgumentNullException
  isExternal: false
  name: ArgumentNullException
  nameWithType: ArgumentNullException
  fullName: System.ArgumentNullException
- uid: System.ArgumentOutOfRangeException
  commentId: T:System.ArgumentOutOfRangeException
  isExternal: false
  name: ArgumentOutOfRangeException
  nameWithType: ArgumentOutOfRangeException
  fullName: System.ArgumentOutOfRangeException
- uid: System.ArgumentException
  commentId: T:System.ArgumentException
  parent: System
  isExternal: false
  name: ArgumentException
  nameWithType: ArgumentException
  fullName: System.ArgumentException
- uid: System.Text.EncoderFallbackException
  commentId: T:System.Text.EncoderFallbackException
  isExternal: false
  name: EncoderFallbackException
  nameWithType: EncoderFallbackException
  fullName: System.Text.EncoderFallbackException
- uid: System.Text.DecoderFallbackException
  commentId: T:System.Text.DecoderFallbackException
  isExternal: false
  name: DecoderFallbackException
  nameWithType: DecoderFallbackException
  fullName: System.Text.DecoderFallbackException
