items:
- uid: System.Runtime.CompilerServices.CallSiteHelpers
  commentId: T:System.Runtime.CompilerServices.CallSiteHelpers
  id: CallSiteHelpers
  parent: System.Runtime.CompilerServices
  children:
  - System.Runtime.CompilerServices.CallSiteHelpers.IsInternalFrame(System.Reflection.MethodBase)
  langs:
  - csharp
  - vb
  name: CallSiteHelpers
  fullName: System.Runtime.CompilerServices.CallSiteHelpers
  type: Class
  source:
    remote:
      path: src/System.Dynamic.Runtime/src/System/Runtime/CompilerServices/CallSiteHelpers.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: CallSiteHelpers
    path: src/System.Dynamic.Runtime/src/System/Runtime/CompilerServices/CallSiteHelpers.cs
    startLine: 12
  assemblies:
  - System.Dynamic.Runtime
  namespace: System.Runtime.CompilerServices
  summary: "\n<p>Class that contains helper methods for DLR CallSites.</p>\n"
  syntax:
    content: public static class CallSiteHelpers
    content.vb: Public Module CallSiteHelpers
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  modifiers.csharp:
  - public
  - static
  - class
  modifiers.vb:
  - Public
  - Module
  nameWithType: CallSiteHelpers
- uid: System.Runtime.CompilerServices.CallSiteHelpers.IsInternalFrame(System.Reflection.MethodBase)
  commentId: M:System.Runtime.CompilerServices.CallSiteHelpers.IsInternalFrame(System.Reflection.MethodBase)
  id: IsInternalFrame(System.Reflection.MethodBase)
  parent: System.Runtime.CompilerServices.CallSiteHelpers
  langs:
  - csharp
  - vb
  name: IsInternalFrame(MethodBase)
  fullName: System.Runtime.CompilerServices.CallSiteHelpers.IsInternalFrame(System.Reflection.MethodBase)
  type: Method
  source:
    remote:
      path: src/System.Dynamic.Runtime/src/System/Runtime/CompilerServices/CallSiteHelpers.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: IsInternalFrame
    path: src/System.Dynamic.Runtime/src/System/Runtime/CompilerServices/CallSiteHelpers.cs
    startLine: 25
  assemblies:
  - System.Dynamic.Runtime
  namespace: System.Runtime.CompilerServices
  summary: "\n<p>Checks if a <xref href=\"System.Reflection.MethodBase\" data-throw-if-not-resolved=\"false\"></xref> is internally used by DLR and should not be displayed on the language code's stack.</p>\n"
  syntax:
    content: >-
      [SuppressMessage("Microsoft.Design", "CA1011:ConsiderPassingBaseTypesAsParameters")]

      public static bool IsInternalFrame(MethodBase mb)
    content.vb: >-
      <SuppressMessage("Microsoft.Design", "CA1011:ConsiderPassingBaseTypesAsParameters")>

      Public Shared Function IsInternalFrame(mb As MethodBase) As Boolean
    parameters:
    - id: mb
      type: System.Reflection.MethodBase
      description: "\n<p>The input <xref href=\"System.Reflection.MethodBase\" data-throw-if-not-resolved=\"false\"></xref></p>\n"
    return:
      type: System.Boolean
      description: "\n<p>True if the input <xref href=\"System.Reflection.MethodBase\" data-throw-if-not-resolved=\"false\"></xref> is internally used by DLR and should not be displayed on the language code's stack. Otherwise, false.</p>\n"
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  nameWithType: CallSiteHelpers.IsInternalFrame(MethodBase)
references:
- uid: System.Runtime.CompilerServices
  isExternal: false
  name: System.Runtime.CompilerServices
  fullName: System.Runtime.CompilerServices
  nameWithType: System.Runtime.CompilerServices
  commentId: N:System.Runtime.CompilerServices
- uid: System.Object
  parent: System
  isExternal: false
  name: Object
  fullName: System.Object
  nameWithType: Object
  commentId: T:System.Object
- uid: System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  nameWithType: Object.ToString()
  commentId: M:System.Object.ToString
- uid: System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
  nameWithType: Object.Equals(Object)
  commentId: M:System.Object.Equals(System.Object)
- uid: System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
  nameWithType: Object.Equals(Object, Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
  nameWithType: Object.ReferenceEquals(Object, Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
- uid: System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  nameWithType: Object.GetHashCode()
  commentId: M:System.Object.GetHashCode
- uid: System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  nameWithType: Object.GetType()
  commentId: M:System.Object.GetType
- uid: System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  nameWithType: Object.MemberwiseClone()
  commentId: M:System.Object.MemberwiseClone
- uid: System
  isExternal: false
  name: System
  fullName: System
  nameWithType: System
  commentId: N:System
- uid: System.Reflection.MethodBase
  parent: System.Reflection
  isExternal: false
  name: MethodBase
  fullName: System.Reflection.MethodBase
  nameWithType: MethodBase
  commentId: T:System.Reflection.MethodBase
- uid: System.Boolean
  parent: System
  isExternal: false
  name: Boolean
  fullName: System.Boolean
  nameWithType: Boolean
  commentId: T:System.Boolean
- uid: System.Reflection
  isExternal: false
  name: System.Reflection
  fullName: System.Reflection
  nameWithType: System.Reflection
  commentId: N:System.Reflection
