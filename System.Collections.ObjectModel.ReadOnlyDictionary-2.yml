items:
- uid: System.Collections.ObjectModel.ReadOnlyDictionary`2
  commentId: T:System.Collections.ObjectModel.ReadOnlyDictionary`2
  id: ReadOnlyDictionary`2
  parent: System.Collections.ObjectModel
  children:
  - System.Collections.ObjectModel.ReadOnlyDictionary`2.#ctor(System.Collections.Generic.IDictionary{`0,`1})
  - System.Collections.ObjectModel.ReadOnlyDictionary`2.ContainsKey(`0)
  - System.Collections.ObjectModel.ReadOnlyDictionary`2.Count
  - System.Collections.ObjectModel.ReadOnlyDictionary`2.Dictionary
  - System.Collections.ObjectModel.ReadOnlyDictionary`2.GetEnumerator
  - System.Collections.ObjectModel.ReadOnlyDictionary`2.Item(`0)
  - System.Collections.ObjectModel.ReadOnlyDictionary`2.Keys
  - System.Collections.ObjectModel.ReadOnlyDictionary`2.System#Collections#Generic#ICollection{System#Collections#Generic#KeyValuePair{TKey,TValue}}#Add(System.Collections.Generic.KeyValuePair{`0,`1})
  - System.Collections.ObjectModel.ReadOnlyDictionary`2.System#Collections#Generic#ICollection{System#Collections#Generic#KeyValuePair{TKey,TValue}}#Clear
  - System.Collections.ObjectModel.ReadOnlyDictionary`2.System#Collections#Generic#ICollection{System#Collections#Generic#KeyValuePair{TKey,TValue}}#Contains(System.Collections.Generic.KeyValuePair{`0,`1})
  - System.Collections.ObjectModel.ReadOnlyDictionary`2.System#Collections#Generic#ICollection{System#Collections#Generic#KeyValuePair{TKey,TValue}}#CopyTo(System.Collections.Generic.KeyValuePair{`0,`1}[],System.Int32)
  - System.Collections.ObjectModel.ReadOnlyDictionary`2.System#Collections#Generic#ICollection{System#Collections#Generic#KeyValuePair{TKey,TValue}}#IsReadOnly
  - System.Collections.ObjectModel.ReadOnlyDictionary`2.System#Collections#Generic#ICollection{System#Collections#Generic#KeyValuePair{TKey,TValue}}#Remove(System.Collections.Generic.KeyValuePair{`0,`1})
  - System.Collections.ObjectModel.ReadOnlyDictionary`2.System#Collections#Generic#IDictionary{TKey,TValue}#Add(`0,`1)
  - System.Collections.ObjectModel.ReadOnlyDictionary`2.System#Collections#Generic#IDictionary{TKey,TValue}#Item(`0)
  - System.Collections.ObjectModel.ReadOnlyDictionary`2.System#Collections#Generic#IDictionary{TKey,TValue}#Keys
  - System.Collections.ObjectModel.ReadOnlyDictionary`2.System#Collections#Generic#IDictionary{TKey,TValue}#Remove(`0)
  - System.Collections.ObjectModel.ReadOnlyDictionary`2.System#Collections#Generic#IDictionary{TKey,TValue}#Values
  - System.Collections.ObjectModel.ReadOnlyDictionary`2.System#Collections#Generic#IReadOnlyDictionary{TKey,TValue}#Keys
  - System.Collections.ObjectModel.ReadOnlyDictionary`2.System#Collections#Generic#IReadOnlyDictionary{TKey,TValue}#Values
  - System.Collections.ObjectModel.ReadOnlyDictionary`2.System#Collections#ICollection#CopyTo(System.Array,System.Int32)
  - System.Collections.ObjectModel.ReadOnlyDictionary`2.System#Collections#ICollection#IsSynchronized
  - System.Collections.ObjectModel.ReadOnlyDictionary`2.System#Collections#ICollection#SyncRoot
  - System.Collections.ObjectModel.ReadOnlyDictionary`2.System#Collections#IDictionary#Add(System.Object,System.Object)
  - System.Collections.ObjectModel.ReadOnlyDictionary`2.System#Collections#IDictionary#Clear
  - System.Collections.ObjectModel.ReadOnlyDictionary`2.System#Collections#IDictionary#Contains(System.Object)
  - System.Collections.ObjectModel.ReadOnlyDictionary`2.System#Collections#IDictionary#GetEnumerator
  - System.Collections.ObjectModel.ReadOnlyDictionary`2.System#Collections#IDictionary#IsFixedSize
  - System.Collections.ObjectModel.ReadOnlyDictionary`2.System#Collections#IDictionary#IsReadOnly
  - System.Collections.ObjectModel.ReadOnlyDictionary`2.System#Collections#IDictionary#Item(System.Object)
  - System.Collections.ObjectModel.ReadOnlyDictionary`2.System#Collections#IDictionary#Keys
  - System.Collections.ObjectModel.ReadOnlyDictionary`2.System#Collections#IDictionary#Remove(System.Object)
  - System.Collections.ObjectModel.ReadOnlyDictionary`2.System#Collections#IDictionary#Values
  - System.Collections.ObjectModel.ReadOnlyDictionary`2.System#Collections#IEnumerable#GetEnumerator
  - System.Collections.ObjectModel.ReadOnlyDictionary`2.TryGetValue(`0,`1@)
  - System.Collections.ObjectModel.ReadOnlyDictionary`2.Values
  langs:
  - csharp
  - vb
  name: ReadOnlyDictionary<TKey, TValue>
  fullName: System.Collections.ObjectModel.ReadOnlyDictionary<TKey, TValue>
  type: Class
  source:
    remote:
      path: src/System.ObjectModel/src/System/Collections/ObjectModel/ReadOnlyDictionary.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: ReadOnlyDictionary
    path: src/System.ObjectModel/src/System/Collections/ObjectModel/ReadOnlyDictionary.cs
    startLine: 12
  assemblies:
  - System.ObjectModel
  namespace: System.Collections.ObjectModel
  summary: "\n<p>Represents a read-only, generic collection of key/value pairs.</p>\n"
  syntax:
    content: >-
      [DebuggerTypeProxy(typeof (DictionaryDebugView<, >))]

      [DebuggerDisplay("Count = {Count}")]

      public class ReadOnlyDictionary<TKey, TValue> : IDictionary<TKey, TValue>, ICollection<KeyValuePair<TKey, TValue>>, IDictionary, ICollection, IReadOnlyDictionary<TKey, TValue>, IReadOnlyCollection<KeyValuePair<TKey, TValue>>, IEnumerable<KeyValuePair<TKey, TValue>>, IEnumerable
    content.vb: >-
      <DebuggerTypeProxy(GetType(DictionaryDebugView(Of , )))>

      <DebuggerDisplay("Count = {Count}")>

      Public Class ReadOnlyDictionary(Of TKey, TValue)
          Implements IDictionary(Of TKey, TValue), ICollection(Of KeyValuePair(Of TKey, TValue)), IDictionary, ICollection, IReadOnlyDictionary(Of TKey, TValue), IReadOnlyCollection(Of KeyValuePair(Of TKey, TValue)), IEnumerable(Of KeyValuePair(Of TKey, TValue)), IEnumerable
    typeParameters:
    - id: TKey
      description: "\n<p>The type of keys in the dictionary.</p>\n"
    - id: TValue
      description: "\n<p>The type of values in the dictionary.</p>\n"
  inheritance:
  - System.Object
  implements:
  - System.Collections.Generic.IDictionary{{TKey},{TValue}}
  - System.Collections.Generic.ICollection{System.Collections.Generic.KeyValuePair{{TKey},{TValue}}}
  - System.Collections.Generic.IReadOnlyDictionary{{TKey},{TValue}}
  - System.Collections.Generic.IReadOnlyCollection{System.Collections.Generic.KeyValuePair{{TKey},{TValue}}}
  - System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{{TKey},{TValue}}}
  - System.Collections.IDictionary
  - System.Collections.ICollection
  - System.Collections.IEnumerable
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
  fullName.vb: System.Collections.ObjectModel.ReadOnlyDictionary(Of TKey, TValue)
  name.vb: ReadOnlyDictionary(Of TKey, TValue)
  nameWithType: ReadOnlyDictionary<TKey, TValue>
  extensionMethods:
  - System.Collections.IEnumerable.System.Linq.Queryable.AsQueryable
  - System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{`0,`1}}.System.Linq.Queryable.AsQueryable``1
  - System.Collections.IEnumerable.System.Linq.ParallelEnumerable.AsParallel
  - System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{`0,`1}}.System.Linq.ParallelEnumerable.AsParallel``1
  - System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{`0,`1}}.System.Linq.Enumerable.Aggregate``1(System.Func{System.Collections.Generic.KeyValuePair{{TKey},{TValue}},System.Collections.Generic.KeyValuePair{{TKey},{TValue}},System.Collections.Generic.KeyValuePair{{TKey},{TValue}}})
  - System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{`0,`1}}.System.Linq.Enumerable.Aggregate``2({TAccumulate},System.Func{{TAccumulate},System.Collections.Generic.KeyValuePair{{TKey},{TValue}},{TAccumulate}})
  - System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{`0,`1}}.System.Linq.Enumerable.Aggregate``3({TAccumulate},System.Func{{TAccumulate},System.Collections.Generic.KeyValuePair{{TKey},{TValue}},{TAccumulate}},System.Func{{TAccumulate},{TResult}})
  - System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{`0,`1}}.System.Linq.Enumerable.All``1(System.Func{System.Collections.Generic.KeyValuePair{{TKey},{TValue}},System.Boolean})
  - System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{`0,`1}}.System.Linq.Enumerable.Any``1
  - System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{`0,`1}}.System.Linq.Enumerable.Any``1(System.Func{System.Collections.Generic.KeyValuePair{{TKey},{TValue}},System.Boolean})
  - System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{`0,`1}}.System.Linq.Enumerable.AsEnumerable``1
  - System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{`0,`1}}.System.Linq.Enumerable.Average``1(System.Func{System.Collections.Generic.KeyValuePair{{TKey},{TValue}},System.Decimal})
  - System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{`0,`1}}.System.Linq.Enumerable.Average``1(System.Func{System.Collections.Generic.KeyValuePair{{TKey},{TValue}},System.Double})
  - System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{`0,`1}}.System.Linq.Enumerable.Average``1(System.Func{System.Collections.Generic.KeyValuePair{{TKey},{TValue}},System.Int32})
  - System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{`0,`1}}.System.Linq.Enumerable.Average``1(System.Func{System.Collections.Generic.KeyValuePair{{TKey},{TValue}},System.Int64})
  - System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{`0,`1}}.System.Linq.Enumerable.Average``1(System.Func{System.Collections.Generic.KeyValuePair{{TKey},{TValue}},System.Nullable{System.Decimal}})
  - System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{`0,`1}}.System.Linq.Enumerable.Average``1(System.Func{System.Collections.Generic.KeyValuePair{{TKey},{TValue}},System.Nullable{System.Double}})
  - System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{`0,`1}}.System.Linq.Enumerable.Average``1(System.Func{System.Collections.Generic.KeyValuePair{{TKey},{TValue}},System.Nullable{System.Int32}})
  - System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{`0,`1}}.System.Linq.Enumerable.Average``1(System.Func{System.Collections.Generic.KeyValuePair{{TKey},{TValue}},System.Nullable{System.Int64}})
  - System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{`0,`1}}.System.Linq.Enumerable.Average``1(System.Func{System.Collections.Generic.KeyValuePair{{TKey},{TValue}},System.Nullable{System.Single}})
  - System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{`0,`1}}.System.Linq.Enumerable.Average``1(System.Func{System.Collections.Generic.KeyValuePair{{TKey},{TValue}},System.Single})
  - System.Collections.IEnumerable.System.Linq.Enumerable.Cast``1
  - System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{`0,`1}}.System.Linq.Enumerable.Concat``1(System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{{TKey},{TValue}}})
  - System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{`0,`1}}.System.Linq.Enumerable.Append``1(System.Collections.Generic.KeyValuePair{{TKey},{TValue}})
  - System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{`0,`1}}.System.Linq.Enumerable.Prepend``1(System.Collections.Generic.KeyValuePair{{TKey},{TValue}})
  - System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{`0,`1}}.System.Linq.Enumerable.Contains``1(System.Collections.Generic.KeyValuePair{{TKey},{TValue}})
  - System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{`0,`1}}.System.Linq.Enumerable.Contains``1(System.Collections.Generic.KeyValuePair{{TKey},{TValue}},System.Collections.Generic.IEqualityComparer{System.Collections.Generic.KeyValuePair{{TKey},{TValue}}})
  - System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{`0,`1}}.System.Linq.Enumerable.Count``1
  - System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{`0,`1}}.System.Linq.Enumerable.Count``1(System.Func{System.Collections.Generic.KeyValuePair{{TKey},{TValue}},System.Boolean})
  - System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{`0,`1}}.System.Linq.Enumerable.DefaultIfEmpty``1
  - System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{`0,`1}}.System.Linq.Enumerable.DefaultIfEmpty``1(System.Collections.Generic.KeyValuePair{{TKey},{TValue}})
  - System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{`0,`1}}.System.Linq.Enumerable.Distinct``1
  - System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{`0,`1}}.System.Linq.Enumerable.Distinct``1(System.Collections.Generic.IEqualityComparer{System.Collections.Generic.KeyValuePair{{TKey},{TValue}}})
  - System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{`0,`1}}.System.Linq.Enumerable.ElementAt``1(System.Int32)
  - System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{`0,`1}}.System.Linq.Enumerable.ElementAtOrDefault``1(System.Int32)
  - System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{`0,`1}}.System.Linq.Enumerable.Except``1(System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{{TKey},{TValue}}})
  - System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{`0,`1}}.System.Linq.Enumerable.Except``1(System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{{TKey},{TValue}}},System.Collections.Generic.IEqualityComparer{System.Collections.Generic.KeyValuePair{{TKey},{TValue}}})
  - System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{`0,`1}}.System.Linq.Enumerable.First``1
  - System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{`0,`1}}.System.Linq.Enumerable.First``1(System.Func{System.Collections.Generic.KeyValuePair{{TKey},{TValue}},System.Boolean})
  - System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{`0,`1}}.System.Linq.Enumerable.FirstOrDefault``1
  - System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{`0,`1}}.System.Linq.Enumerable.FirstOrDefault``1(System.Func{System.Collections.Generic.KeyValuePair{{TKey},{TValue}},System.Boolean})
  - System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{`0,`1}}.System.Linq.Enumerable.GroupBy``2(System.Func{System.Collections.Generic.KeyValuePair{{TKey},{TValue}},{TKey}})
  - System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{`0,`1}}.System.Linq.Enumerable.GroupBy``2(System.Func{System.Collections.Generic.KeyValuePair{{TKey},{TValue}},{TKey}},System.Collections.Generic.IEqualityComparer{{TKey}})
  - System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{`0,`1}}.System.Linq.Enumerable.GroupBy``3(System.Func{System.Collections.Generic.KeyValuePair{{TKey},{TValue}},{TKey}},System.Func{System.Collections.Generic.KeyValuePair{{TKey},{TValue}},{TElement}})
  - System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{`0,`1}}.System.Linq.Enumerable.GroupBy``3(System.Func{System.Collections.Generic.KeyValuePair{{TKey},{TValue}},{TKey}},System.Func{System.Collections.Generic.KeyValuePair{{TKey},{TValue}},{TElement}},System.Collections.Generic.IEqualityComparer{{TKey}})
  - System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{`0,`1}}.System.Linq.Enumerable.GroupBy``3(System.Func{System.Collections.Generic.KeyValuePair{{TKey},{TValue}},{TKey}},System.Func{{TKey},System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{{TKey},{TValue}}},{TResult}})
  - System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{`0,`1}}.System.Linq.Enumerable.GroupBy``3(System.Func{System.Collections.Generic.KeyValuePair{{TKey},{TValue}},{TKey}},System.Func{{TKey},System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{{TKey},{TValue}}},{TResult}},System.Collections.Generic.IEqualityComparer{{TKey}})
  - System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{`0,`1}}.System.Linq.Enumerable.GroupBy``4(System.Func{System.Collections.Generic.KeyValuePair{{TKey},{TValue}},{TKey}},System.Func{System.Collections.Generic.KeyValuePair{{TKey},{TValue}},{TElement}},System.Func{{TKey},System.Collections.Generic.IEnumerable{{TElement}},{TResult}})
  - System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{`0,`1}}.System.Linq.Enumerable.GroupBy``4(System.Func{System.Collections.Generic.KeyValuePair{{TKey},{TValue}},{TKey}},System.Func{System.Collections.Generic.KeyValuePair{{TKey},{TValue}},{TElement}},System.Func{{TKey},System.Collections.Generic.IEnumerable{{TElement}},{TResult}},System.Collections.Generic.IEqualityComparer{{TKey}})
  - System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{`0,`1}}.System.Linq.Enumerable.GroupJoin``4(System.Collections.Generic.IEnumerable{{TInner}},System.Func{System.Collections.Generic.KeyValuePair{{TKey},{TValue}},{TKey}},System.Func{{TInner},{TKey}},System.Func{System.Collections.Generic.KeyValuePair{{TKey},{TValue}},System.Collections.Generic.IEnumerable{{TInner}},{TResult}})
  - System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{`0,`1}}.System.Linq.Enumerable.GroupJoin``4(System.Collections.Generic.IEnumerable{{TInner}},System.Func{System.Collections.Generic.KeyValuePair{{TKey},{TValue}},{TKey}},System.Func{{TInner},{TKey}},System.Func{System.Collections.Generic.KeyValuePair{{TKey},{TValue}},System.Collections.Generic.IEnumerable{{TInner}},{TResult}},System.Collections.Generic.IEqualityComparer{{TKey}})
  - System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{`0,`1}}.System.Linq.Enumerable.Intersect``1(System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{{TKey},{TValue}}})
  - System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{`0,`1}}.System.Linq.Enumerable.Intersect``1(System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{{TKey},{TValue}}},System.Collections.Generic.IEqualityComparer{System.Collections.Generic.KeyValuePair{{TKey},{TValue}}})
  - System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{`0,`1}}.System.Linq.Enumerable.Join``4(System.Collections.Generic.IEnumerable{{TInner}},System.Func{System.Collections.Generic.KeyValuePair{{TKey},{TValue}},{TKey}},System.Func{{TInner},{TKey}},System.Func{System.Collections.Generic.KeyValuePair{{TKey},{TValue}},{TInner},{TResult}})
  - System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{`0,`1}}.System.Linq.Enumerable.Join``4(System.Collections.Generic.IEnumerable{{TInner}},System.Func{System.Collections.Generic.KeyValuePair{{TKey},{TValue}},{TKey}},System.Func{{TInner},{TKey}},System.Func{System.Collections.Generic.KeyValuePair{{TKey},{TValue}},{TInner},{TResult}},System.Collections.Generic.IEqualityComparer{{TKey}})
  - System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{`0,`1}}.System.Linq.Enumerable.Last``1
  - System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{`0,`1}}.System.Linq.Enumerable.Last``1(System.Func{System.Collections.Generic.KeyValuePair{{TKey},{TValue}},System.Boolean})
  - System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{`0,`1}}.System.Linq.Enumerable.LastOrDefault``1
  - System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{`0,`1}}.System.Linq.Enumerable.LastOrDefault``1(System.Func{System.Collections.Generic.KeyValuePair{{TKey},{TValue}},System.Boolean})
  - System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{`0,`1}}.System.Linq.Enumerable.LongCount``1
  - System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{`0,`1}}.System.Linq.Enumerable.LongCount``1(System.Func{System.Collections.Generic.KeyValuePair{{TKey},{TValue}},System.Boolean})
  - System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{`0,`1}}.System.Linq.Enumerable.Max``1
  - System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{`0,`1}}.System.Linq.Enumerable.Max``1(System.Func{System.Collections.Generic.KeyValuePair{{TKey},{TValue}},System.Decimal})
  - System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{`0,`1}}.System.Linq.Enumerable.Max``1(System.Func{System.Collections.Generic.KeyValuePair{{TKey},{TValue}},System.Double})
  - System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{`0,`1}}.System.Linq.Enumerable.Max``1(System.Func{System.Collections.Generic.KeyValuePair{{TKey},{TValue}},System.Int32})
  - System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{`0,`1}}.System.Linq.Enumerable.Max``1(System.Func{System.Collections.Generic.KeyValuePair{{TKey},{TValue}},System.Int64})
  - System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{`0,`1}}.System.Linq.Enumerable.Max``1(System.Func{System.Collections.Generic.KeyValuePair{{TKey},{TValue}},System.Nullable{System.Decimal}})
  - System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{`0,`1}}.System.Linq.Enumerable.Max``1(System.Func{System.Collections.Generic.KeyValuePair{{TKey},{TValue}},System.Nullable{System.Double}})
  - System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{`0,`1}}.System.Linq.Enumerable.Max``1(System.Func{System.Collections.Generic.KeyValuePair{{TKey},{TValue}},System.Nullable{System.Int32}})
  - System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{`0,`1}}.System.Linq.Enumerable.Max``1(System.Func{System.Collections.Generic.KeyValuePair{{TKey},{TValue}},System.Nullable{System.Int64}})
  - System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{`0,`1}}.System.Linq.Enumerable.Max``1(System.Func{System.Collections.Generic.KeyValuePair{{TKey},{TValue}},System.Nullable{System.Single}})
  - System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{`0,`1}}.System.Linq.Enumerable.Max``1(System.Func{System.Collections.Generic.KeyValuePair{{TKey},{TValue}},System.Single})
  - System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{`0,`1}}.System.Linq.Enumerable.Max``2(System.Func{System.Collections.Generic.KeyValuePair{{TKey},{TValue}},{TResult}})
  - System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{`0,`1}}.System.Linq.Enumerable.Min``1
  - System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{`0,`1}}.System.Linq.Enumerable.Min``1(System.Func{System.Collections.Generic.KeyValuePair{{TKey},{TValue}},System.Decimal})
  - System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{`0,`1}}.System.Linq.Enumerable.Min``1(System.Func{System.Collections.Generic.KeyValuePair{{TKey},{TValue}},System.Double})
  - System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{`0,`1}}.System.Linq.Enumerable.Min``1(System.Func{System.Collections.Generic.KeyValuePair{{TKey},{TValue}},System.Int32})
  - System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{`0,`1}}.System.Linq.Enumerable.Min``1(System.Func{System.Collections.Generic.KeyValuePair{{TKey},{TValue}},System.Int64})
  - System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{`0,`1}}.System.Linq.Enumerable.Min``1(System.Func{System.Collections.Generic.KeyValuePair{{TKey},{TValue}},System.Nullable{System.Decimal}})
  - System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{`0,`1}}.System.Linq.Enumerable.Min``1(System.Func{System.Collections.Generic.KeyValuePair{{TKey},{TValue}},System.Nullable{System.Double}})
  - System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{`0,`1}}.System.Linq.Enumerable.Min``1(System.Func{System.Collections.Generic.KeyValuePair{{TKey},{TValue}},System.Nullable{System.Int32}})
  - System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{`0,`1}}.System.Linq.Enumerable.Min``1(System.Func{System.Collections.Generic.KeyValuePair{{TKey},{TValue}},System.Nullable{System.Int64}})
  - System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{`0,`1}}.System.Linq.Enumerable.Min``1(System.Func{System.Collections.Generic.KeyValuePair{{TKey},{TValue}},System.Nullable{System.Single}})
  - System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{`0,`1}}.System.Linq.Enumerable.Min``1(System.Func{System.Collections.Generic.KeyValuePair{{TKey},{TValue}},System.Single})
  - System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{`0,`1}}.System.Linq.Enumerable.Min``2(System.Func{System.Collections.Generic.KeyValuePair{{TKey},{TValue}},{TResult}})
  - System.Collections.IEnumerable.System.Linq.Enumerable.OfType``1
  - System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{`0,`1}}.System.Linq.Enumerable.OrderBy``2(System.Func{System.Collections.Generic.KeyValuePair{{TKey},{TValue}},{TKey}})
  - System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{`0,`1}}.System.Linq.Enumerable.OrderBy``2(System.Func{System.Collections.Generic.KeyValuePair{{TKey},{TValue}},{TKey}},System.Collections.Generic.IComparer{{TKey}})
  - System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{`0,`1}}.System.Linq.Enumerable.OrderByDescending``2(System.Func{System.Collections.Generic.KeyValuePair{{TKey},{TValue}},{TKey}})
  - System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{`0,`1}}.System.Linq.Enumerable.OrderByDescending``2(System.Func{System.Collections.Generic.KeyValuePair{{TKey},{TValue}},{TKey}},System.Collections.Generic.IComparer{{TKey}})
  - System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{`0,`1}}.System.Linq.Enumerable.Reverse``1
  - System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{`0,`1}}.System.Linq.Enumerable.Select``2(System.Func{System.Collections.Generic.KeyValuePair{{TKey},{TValue}},{TResult}})
  - System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{`0,`1}}.System.Linq.Enumerable.Select``2(System.Func{System.Collections.Generic.KeyValuePair{{TKey},{TValue}},System.Int32,{TResult}})
  - System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{`0,`1}}.System.Linq.Enumerable.SelectMany``2(System.Func{System.Collections.Generic.KeyValuePair{{TKey},{TValue}},System.Collections.Generic.IEnumerable{{TResult}}})
  - System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{`0,`1}}.System.Linq.Enumerable.SelectMany``2(System.Func{System.Collections.Generic.KeyValuePair{{TKey},{TValue}},System.Int32,System.Collections.Generic.IEnumerable{{TResult}}})
  - System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{`0,`1}}.System.Linq.Enumerable.SelectMany``3(System.Func{System.Collections.Generic.KeyValuePair{{TKey},{TValue}},System.Collections.Generic.IEnumerable{{TCollection}}},System.Func{System.Collections.Generic.KeyValuePair{{TKey},{TValue}},{TCollection},{TResult}})
  - System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{`0,`1}}.System.Linq.Enumerable.SelectMany``3(System.Func{System.Collections.Generic.KeyValuePair{{TKey},{TValue}},System.Int32,System.Collections.Generic.IEnumerable{{TCollection}}},System.Func{System.Collections.Generic.KeyValuePair{{TKey},{TValue}},{TCollection},{TResult}})
  - System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{`0,`1}}.System.Linq.Enumerable.SequenceEqual``1(System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{{TKey},{TValue}}})
  - System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{`0,`1}}.System.Linq.Enumerable.SequenceEqual``1(System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{{TKey},{TValue}}},System.Collections.Generic.IEqualityComparer{System.Collections.Generic.KeyValuePair{{TKey},{TValue}}})
  - System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{`0,`1}}.System.Linq.Enumerable.Single``1
  - System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{`0,`1}}.System.Linq.Enumerable.Single``1(System.Func{System.Collections.Generic.KeyValuePair{{TKey},{TValue}},System.Boolean})
  - System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{`0,`1}}.System.Linq.Enumerable.SingleOrDefault``1
  - System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{`0,`1}}.System.Linq.Enumerable.SingleOrDefault``1(System.Func{System.Collections.Generic.KeyValuePair{{TKey},{TValue}},System.Boolean})
  - System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{`0,`1}}.System.Linq.Enumerable.Skip``1(System.Int32)
  - System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{`0,`1}}.System.Linq.Enumerable.SkipWhile``1(System.Func{System.Collections.Generic.KeyValuePair{{TKey},{TValue}},System.Boolean})
  - System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{`0,`1}}.System.Linq.Enumerable.SkipWhile``1(System.Func{System.Collections.Generic.KeyValuePair{{TKey},{TValue}},System.Int32,System.Boolean})
  - System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{`0,`1}}.System.Linq.Enumerable.Sum``1(System.Func{System.Collections.Generic.KeyValuePair{{TKey},{TValue}},System.Decimal})
  - System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{`0,`1}}.System.Linq.Enumerable.Sum``1(System.Func{System.Collections.Generic.KeyValuePair{{TKey},{TValue}},System.Double})
  - System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{`0,`1}}.System.Linq.Enumerable.Sum``1(System.Func{System.Collections.Generic.KeyValuePair{{TKey},{TValue}},System.Int32})
  - System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{`0,`1}}.System.Linq.Enumerable.Sum``1(System.Func{System.Collections.Generic.KeyValuePair{{TKey},{TValue}},System.Int64})
  - System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{`0,`1}}.System.Linq.Enumerable.Sum``1(System.Func{System.Collections.Generic.KeyValuePair{{TKey},{TValue}},System.Nullable{System.Decimal}})
  - System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{`0,`1}}.System.Linq.Enumerable.Sum``1(System.Func{System.Collections.Generic.KeyValuePair{{TKey},{TValue}},System.Nullable{System.Double}})
  - System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{`0,`1}}.System.Linq.Enumerable.Sum``1(System.Func{System.Collections.Generic.KeyValuePair{{TKey},{TValue}},System.Nullable{System.Int32}})
  - System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{`0,`1}}.System.Linq.Enumerable.Sum``1(System.Func{System.Collections.Generic.KeyValuePair{{TKey},{TValue}},System.Nullable{System.Int64}})
  - System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{`0,`1}}.System.Linq.Enumerable.Sum``1(System.Func{System.Collections.Generic.KeyValuePair{{TKey},{TValue}},System.Nullable{System.Single}})
  - System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{`0,`1}}.System.Linq.Enumerable.Sum``1(System.Func{System.Collections.Generic.KeyValuePair{{TKey},{TValue}},System.Single})
  - System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{`0,`1}}.System.Linq.Enumerable.Take``1(System.Int32)
  - System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{`0,`1}}.System.Linq.Enumerable.TakeWhile``1(System.Func{System.Collections.Generic.KeyValuePair{{TKey},{TValue}},System.Boolean})
  - System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{`0,`1}}.System.Linq.Enumerable.TakeWhile``1(System.Func{System.Collections.Generic.KeyValuePair{{TKey},{TValue}},System.Int32,System.Boolean})
  - System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{`0,`1}}.System.Linq.Enumerable.ToArray``1
  - System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{`0,`1}}.System.Linq.Enumerable.ToDictionary``2(System.Func{System.Collections.Generic.KeyValuePair{{TKey},{TValue}},{TKey}})
  - System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{`0,`1}}.System.Linq.Enumerable.ToDictionary``2(System.Func{System.Collections.Generic.KeyValuePair{{TKey},{TValue}},{TKey}},System.Collections.Generic.IEqualityComparer{{TKey}})
  - System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{`0,`1}}.System.Linq.Enumerable.ToDictionary``3(System.Func{System.Collections.Generic.KeyValuePair{{TKey},{TValue}},{TKey}},System.Func{System.Collections.Generic.KeyValuePair{{TKey},{TValue}},{TElement}})
  - System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{`0,`1}}.System.Linq.Enumerable.ToDictionary``3(System.Func{System.Collections.Generic.KeyValuePair{{TKey},{TValue}},{TKey}},System.Func{System.Collections.Generic.KeyValuePair{{TKey},{TValue}},{TElement}},System.Collections.Generic.IEqualityComparer{{TKey}})
  - System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{`0,`1}}.System.Linq.Enumerable.ToList``1
  - System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{`0,`1}}.System.Linq.Enumerable.ToLookup``2(System.Func{System.Collections.Generic.KeyValuePair{{TKey},{TValue}},{TKey}})
  - System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{`0,`1}}.System.Linq.Enumerable.ToLookup``2(System.Func{System.Collections.Generic.KeyValuePair{{TKey},{TValue}},{TKey}},System.Collections.Generic.IEqualityComparer{{TKey}})
  - System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{`0,`1}}.System.Linq.Enumerable.ToLookup``3(System.Func{System.Collections.Generic.KeyValuePair{{TKey},{TValue}},{TKey}},System.Func{System.Collections.Generic.KeyValuePair{{TKey},{TValue}},{TElement}})
  - System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{`0,`1}}.System.Linq.Enumerable.ToLookup``3(System.Func{System.Collections.Generic.KeyValuePair{{TKey},{TValue}},{TKey}},System.Func{System.Collections.Generic.KeyValuePair{{TKey},{TValue}},{TElement}},System.Collections.Generic.IEqualityComparer{{TKey}})
  - System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{`0,`1}}.System.Linq.Enumerable.Union``1(System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{{TKey},{TValue}}})
  - System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{`0,`1}}.System.Linq.Enumerable.Union``1(System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{{TKey},{TValue}}},System.Collections.Generic.IEqualityComparer{System.Collections.Generic.KeyValuePair{{TKey},{TValue}}})
  - System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{`0,`1}}.System.Linq.Enumerable.Where``1(System.Func{System.Collections.Generic.KeyValuePair{{TKey},{TValue}},System.Boolean})
  - System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{`0,`1}}.System.Linq.Enumerable.Where``1(System.Func{System.Collections.Generic.KeyValuePair{{TKey},{TValue}},System.Int32,System.Boolean})
  - System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{`0,`1}}.System.Linq.Enumerable.Zip``3(System.Collections.Generic.IEnumerable{{TSecond}},System.Func{System.Collections.Generic.KeyValuePair{{TKey},{TValue}},{TSecond},{TResult}})
  nameWithType.vb: ReadOnlyDictionary(Of TKey, TValue)
- uid: System.Collections.ObjectModel.ReadOnlyDictionary`2.#ctor(System.Collections.Generic.IDictionary{`0,`1})
  commentId: M:System.Collections.ObjectModel.ReadOnlyDictionary`2.#ctor(System.Collections.Generic.IDictionary{`0,`1})
  id: '#ctor(System.Collections.Generic.IDictionary{`0,`1})'
  parent: System.Collections.ObjectModel.ReadOnlyDictionary`2
  langs:
  - csharp
  - vb
  name: ReadOnlyDictionary(IDictionary<TKey, TValue>)
  fullName: System.Collections.ObjectModel.ReadOnlyDictionary<TKey, TValue>.ReadOnlyDictionary(System.Collections.Generic.IDictionary<TKey, TValue>)
  type: Constructor
  source:
    remote:
      path: src/System.ObjectModel/src/System/Collections/ObjectModel/ReadOnlyDictionary.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: .ctor
    path: src/System.ObjectModel/src/System/Collections/ObjectModel/ReadOnlyDictionary.cs
    startLine: 21
  assemblies:
  - System.ObjectModel
  namespace: System.Collections.ObjectModel
  summary: "\n<p>Initializes a new instance of the <xref href=\"System.Collections.ObjectModel.ReadOnlyDictionary`2\" data-throw-if-not-resolved=\"false\"></xref> class that is a wrapper around the specified dictionary.</p>\n"
  syntax:
    content: public ReadOnlyDictionary(IDictionary<TKey, TValue> dictionary)
    content.vb: Public Sub New(dictionary As IDictionary(Of TKey, TValue))
    parameters:
    - id: dictionary
      type: System.Collections.Generic.IDictionary{{TKey},{TValue}}
      description: "\n<p>The dictionary to wrap.</p>\n"
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: System.Collections.ObjectModel.ReadOnlyDictionary(Of TKey, TValue).ReadOnlyDictionary(System.Collections.Generic.IDictionary(Of TKey, TValue))
  name.vb: ReadOnlyDictionary(IDictionary(Of TKey, TValue))
  nameWithType: ReadOnlyDictionary<TKey, TValue>.ReadOnlyDictionary(IDictionary<TKey, TValue>)
  nameWithType.vb: ReadOnlyDictionary(Of TKey, TValue).ReadOnlyDictionary(IDictionary(Of TKey, TValue))
- uid: System.Collections.ObjectModel.ReadOnlyDictionary`2.Count
  commentId: P:System.Collections.ObjectModel.ReadOnlyDictionary`2.Count
  id: Count
  parent: System.Collections.ObjectModel.ReadOnlyDictionary`2
  langs:
  - csharp
  - vb
  name: Count
  fullName: System.Collections.ObjectModel.ReadOnlyDictionary<TKey, TValue>.Count
  type: Property
  source:
    remote:
      path: src/System.ObjectModel/src/System/Collections/ObjectModel/ReadOnlyDictionary.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: Count
    path: src/System.ObjectModel/src/System/Collections/ObjectModel/ReadOnlyDictionary.cs
    startLine: 124
  assemblies:
  - System.ObjectModel
  namespace: System.Collections.ObjectModel
  summary: "\n<p>Gets the number of items in the dictionary.</p>\n"
  syntax:
    content: public int Count { get; }
    content.vb: Public ReadOnly Property Count As Integer
    parameters: []
    return:
      type: System.Int32
      description: "\n<p>The number of items in the dictionary.</p>\n"
  implements:
  - System.Collections.Generic.ICollection{System.Collections.Generic.KeyValuePair{{TKey},{TValue}}}.Count
  - System.Collections.Generic.IReadOnlyCollection{System.Collections.Generic.KeyValuePair{{TKey},{TValue}}}.Count
  - System.Collections.ICollection.Count
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
  fullName.vb: System.Collections.ObjectModel.ReadOnlyDictionary(Of TKey, TValue).Count
  nameWithType: ReadOnlyDictionary<TKey, TValue>.Count
  nameWithType.vb: ReadOnlyDictionary(Of TKey, TValue).Count
- uid: System.Collections.ObjectModel.ReadOnlyDictionary`2.Dictionary
  commentId: P:System.Collections.ObjectModel.ReadOnlyDictionary`2.Dictionary
  id: Dictionary
  parent: System.Collections.ObjectModel.ReadOnlyDictionary`2
  langs:
  - csharp
  - vb
  name: Dictionary
  fullName: System.Collections.ObjectModel.ReadOnlyDictionary<TKey, TValue>.Dictionary
  type: Property
  source:
    remote:
      path: src/System.ObjectModel/src/System/Collections/ObjectModel/ReadOnlyDictionary.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: Dictionary
    path: src/System.ObjectModel/src/System/Collections/ObjectModel/ReadOnlyDictionary.cs
    startLine: 31
  assemblies:
  - System.ObjectModel
  namespace: System.Collections.ObjectModel
  summary: "\n<p>Gets the dictionary that is wrapped by this <xref href=\"System.Collections.ObjectModel.ReadOnlyDictionary`2\" data-throw-if-not-resolved=\"false\"></xref> object.</p>\n"
  syntax:
    content: protected IDictionary<TKey, TValue> Dictionary { get; }
    content.vb: Protected ReadOnly Property Dictionary As IDictionary(Of TKey, TValue)
    parameters: []
    return:
      type: System.Collections.Generic.IDictionary{{TKey},{TValue}}
      description: "\n<p>The dictionary that is wrapped by this object.</p>\n"
  modifiers.csharp:
  - protected
  - get
  modifiers.vb:
  - Protected
  - ReadOnly
  fullName.vb: System.Collections.ObjectModel.ReadOnlyDictionary(Of TKey, TValue).Dictionary
  nameWithType: ReadOnlyDictionary<TKey, TValue>.Dictionary
  nameWithType.vb: ReadOnlyDictionary(Of TKey, TValue).Dictionary
- uid: System.Collections.ObjectModel.ReadOnlyDictionary`2.Item(`0)
  commentId: P:System.Collections.ObjectModel.ReadOnlyDictionary`2.Item(`0)
  id: Item(`0)
  parent: System.Collections.ObjectModel.ReadOnlyDictionary`2
  langs:
  - csharp
  - vb
  name: Item[TKey]
  fullName: System.Collections.ObjectModel.ReadOnlyDictionary<TKey, TValue>.Item[TKey]
  type: Property
  source:
    remote:
      path: src/System.ObjectModel/src/System/Collections/ObjectModel/ReadOnlyDictionary.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: this[]
    path: src/System.ObjectModel/src/System/Collections/ObjectModel/ReadOnlyDictionary.cs
    startLine: 90
  assemblies:
  - System.ObjectModel
  namespace: System.Collections.ObjectModel
  summary: "\n<p>Gets the element that has the specified key.</p>\n"
  syntax:
    content: public TValue this[TKey key] { get; }
    content.vb: Public ReadOnly Property Item(key As TKey) As TValue
    parameters:
    - id: key
      type: '{TKey}'
      description: "\n<p>The key of the element to get.</p>\n"
    return:
      type: '{TValue}'
      description: "\n<p>The element that has the specified key.</p>\n"
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "\n<p>\n<em>key</em> is <strong>null</strong>.</p>\n"
  - type: System.Collections.Generic.KeyNotFoundException
    commentId: T:System.Collections.Generic.KeyNotFoundException
    description: "\n<p>The property is retrieved and <em>key</em> is not found.</p>\n"
  implements:
  - System.Collections.Generic.IReadOnlyDictionary{{TKey},{TValue}}.Item({TKey})
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
  fullName.vb: System.Collections.ObjectModel.ReadOnlyDictionary(Of TKey, TValue).Item(TKey)
  name.vb: Item(TKey)
  nameWithType: ReadOnlyDictionary<TKey, TValue>.Item[TKey]
  nameWithType.vb: ReadOnlyDictionary(Of TKey, TValue).Item(TKey)
- uid: System.Collections.ObjectModel.ReadOnlyDictionary`2.Keys
  commentId: P:System.Collections.ObjectModel.ReadOnlyDictionary`2.Keys
  id: Keys
  parent: System.Collections.ObjectModel.ReadOnlyDictionary`2
  langs:
  - csharp
  - vb
  name: Keys
  fullName: System.Collections.ObjectModel.ReadOnlyDictionary<TKey, TValue>.Keys
  type: Property
  source:
    remote:
      path: src/System.ObjectModel/src/System/Collections/ObjectModel/ReadOnlyDictionary.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: Keys
    path: src/System.ObjectModel/src/System/Collections/ObjectModel/ReadOnlyDictionary.cs
    startLine: 36
  assemblies:
  - System.ObjectModel
  namespace: System.Collections.ObjectModel
  summary: "\n<p>Gets a key collection that contains the keys of the dictionary.</p>\n"
  syntax:
    content: public ReadOnlyDictionary<TKey, TValue>.KeyCollection Keys { get; }
    content.vb: Public ReadOnly Property Keys As ReadOnlyDictionary(Of TKey, TValue).KeyCollection
    parameters: []
    return:
      type: System.Collections.ObjectModel.ReadOnlyDictionary`2.KeyCollection
      description: "\n<p>A key collection that contains the keys of the dictionary.</p>\n"
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
  fullName.vb: System.Collections.ObjectModel.ReadOnlyDictionary(Of TKey, TValue).Keys
  nameWithType: ReadOnlyDictionary<TKey, TValue>.Keys
  nameWithType.vb: ReadOnlyDictionary(Of TKey, TValue).Keys
- uid: System.Collections.ObjectModel.ReadOnlyDictionary`2.System#Collections#Generic#ICollection{System#Collections#Generic#KeyValuePair{TKey,TValue}}#IsReadOnly
  commentId: P:System.Collections.ObjectModel.ReadOnlyDictionary`2.System#Collections#Generic#ICollection{System#Collections#Generic#KeyValuePair{TKey,TValue}}#IsReadOnly
  id: System#Collections#Generic#ICollection{System#Collections#Generic#KeyValuePair{TKey,TValue}}#IsReadOnly
  isEii: true
  parent: System.Collections.ObjectModel.ReadOnlyDictionary`2
  langs:
  - csharp
  - vb
  name: ICollection<KeyValuePair<TKey, TValue>>.IsReadOnly
  fullName: System.Collections.ObjectModel.ReadOnlyDictionary<TKey, TValue>.System.Collections.Generic.ICollection<System.Collections.Generic.KeyValuePair<TKey, TValue>>.IsReadOnly
  type: Property
  source:
    remote:
      path: src/System.ObjectModel/src/System/Collections/ObjectModel/ReadOnlyDictionary.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: System.Collections.Generic.ICollection<System.Collections.Generic.KeyValuePair<TKey,TValue>>.IsReadOnly
    path: src/System.ObjectModel/src/System/Collections/ObjectModel/ReadOnlyDictionary.cs
    startLine: 139
  assemblies:
  - System.ObjectModel
  namespace: System.Collections.ObjectModel
  syntax:
    content: bool ICollection<KeyValuePair<TKey, TValue>>.IsReadOnly { get; }
    content.vb: ReadOnly WriteOnly Property System.Collections.Generic.ICollection<System.Collections.Generic.KeyValuePair<TKey,TValue>>.IsReadOnly As Boolean Implements ICollection(Of KeyValuePair(Of TKey, TValue)).IsReadOnly
    parameters: []
    return:
      type: System.Boolean
  implements:
  - System.Collections.Generic.ICollection{System.Collections.Generic.KeyValuePair{{TKey},{TValue}}}.IsReadOnly
  modifiers.csharp:
  - get
  modifiers.vb:
  - ReadOnly
  fullName.vb: System.Collections.ObjectModel.ReadOnlyDictionary(Of TKey, TValue).System.Collections.Generic.ICollection<System.Collections.Generic.KeyValuePair<TKey,TValue>>.IsReadOnly
  name.vb: System.Collections.Generic.ICollection<System.Collections.Generic.KeyValuePair<TKey,TValue>>.IsReadOnly
  nameWithType: ReadOnlyDictionary<TKey, TValue>.ICollection<KeyValuePair<TKey, TValue>>.IsReadOnly
  nameWithType.vb: ReadOnlyDictionary(Of TKey, TValue).System.Collections.Generic.ICollection<System.Collections.Generic.KeyValuePair<TKey,TValue>>.IsReadOnly
- uid: System.Collections.ObjectModel.ReadOnlyDictionary`2.System#Collections#Generic#IDictionary{TKey,TValue}#Item(`0)
  commentId: P:System.Collections.ObjectModel.ReadOnlyDictionary`2.System#Collections#Generic#IDictionary{TKey,TValue}#Item(`0)
  id: System#Collections#Generic#IDictionary{TKey,TValue}#Item(`0)
  isEii: true
  parent: System.Collections.ObjectModel.ReadOnlyDictionary`2
  langs:
  - csharp
  - vb
  name: IDictionary<TKey, TValue>.Item[TKey]
  fullName: System.Collections.ObjectModel.ReadOnlyDictionary<TKey, TValue>.System.Collections.Generic.IDictionary<TKey, TValue>.Item[TKey]
  type: Property
  source:
    remote:
      path: src/System.ObjectModel/src/System/Collections/ObjectModel/ReadOnlyDictionary.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: System.Collections.Generic.IDictionary<TKey,TValue>.this[]
    path: src/System.ObjectModel/src/System/Collections/ObjectModel/ReadOnlyDictionary.cs
    startLine: 108
  assemblies:
  - System.ObjectModel
  namespace: System.Collections.ObjectModel
  syntax:
    content: TValue IDictionary<TKey, TValue>.this[TKey key] { get; set; }
    content.vb: ReadOnly WriteOnly Property System.Collections.Generic.IDictionary<TKey,TValue>.Item(key As TKey) As TValue Implements IDictionary(Of TKey, TValue).this
    parameters:
    - id: key
      type: '{TKey}'
    return:
      type: '{TValue}'
  implements:
  - System.Collections.Generic.IDictionary{{TKey},{TValue}}.Item({TKey})
  modifiers.csharp:
  - get
  - set
  fullName.vb: System.Collections.ObjectModel.ReadOnlyDictionary(Of TKey, TValue).System.Collections.Generic.IDictionary<TKey,TValue>.Item(TKey)
  name.vb: System.Collections.Generic.IDictionary<TKey,TValue>.Item(TKey)
  nameWithType: ReadOnlyDictionary<TKey, TValue>.IDictionary<TKey, TValue>.Item[TKey]
  nameWithType.vb: ReadOnlyDictionary(Of TKey, TValue).System.Collections.Generic.IDictionary<TKey,TValue>.Item(TKey)
- uid: System.Collections.ObjectModel.ReadOnlyDictionary`2.System#Collections#Generic#IDictionary{TKey,TValue}#Keys
  commentId: P:System.Collections.ObjectModel.ReadOnlyDictionary`2.System#Collections#Generic#IDictionary{TKey,TValue}#Keys
  id: System#Collections#Generic#IDictionary{TKey,TValue}#Keys
  isEii: true
  parent: System.Collections.ObjectModel.ReadOnlyDictionary`2
  langs:
  - csharp
  - vb
  name: IDictionary<TKey, TValue>.Keys
  fullName: System.Collections.ObjectModel.ReadOnlyDictionary<TKey, TValue>.System.Collections.Generic.IDictionary<TKey, TValue>.Keys
  type: Property
  source:
    remote:
      path: src/System.ObjectModel/src/System/Collections/ObjectModel/ReadOnlyDictionary.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: System.Collections.Generic.IDictionary<TKey,TValue>.Keys
    path: src/System.ObjectModel/src/System/Collections/ObjectModel/ReadOnlyDictionary.cs
    startLine: 69
  assemblies:
  - System.ObjectModel
  namespace: System.Collections.ObjectModel
  syntax:
    content: ICollection<TKey> IDictionary<TKey, TValue>.Keys { get; }
    content.vb: ReadOnly WriteOnly Property System.Collections.Generic.IDictionary<TKey,TValue>.Keys As ICollection(Of TKey) Implements IDictionary(Of TKey, TValue).Keys
    parameters: []
    return:
      type: System.Collections.Generic.ICollection{{TKey}}
  implements:
  - System.Collections.Generic.IDictionary{{TKey},{TValue}}.Keys
  modifiers.csharp:
  - get
  modifiers.vb:
  - ReadOnly
  fullName.vb: System.Collections.ObjectModel.ReadOnlyDictionary(Of TKey, TValue).System.Collections.Generic.IDictionary<TKey,TValue>.Keys
  name.vb: System.Collections.Generic.IDictionary<TKey,TValue>.Keys
  nameWithType: ReadOnlyDictionary<TKey, TValue>.IDictionary<TKey, TValue>.Keys
  nameWithType.vb: ReadOnlyDictionary(Of TKey, TValue).System.Collections.Generic.IDictionary<TKey,TValue>.Keys
- uid: System.Collections.ObjectModel.ReadOnlyDictionary`2.System#Collections#Generic#IDictionary{TKey,TValue}#Values
  commentId: P:System.Collections.ObjectModel.ReadOnlyDictionary`2.System#Collections#Generic#IDictionary{TKey,TValue}#Values
  id: System#Collections#Generic#IDictionary{TKey,TValue}#Values
  isEii: true
  parent: System.Collections.ObjectModel.ReadOnlyDictionary`2
  langs:
  - csharp
  - vb
  name: IDictionary<TKey, TValue>.Values
  fullName: System.Collections.ObjectModel.ReadOnlyDictionary<TKey, TValue>.System.Collections.Generic.IDictionary<TKey, TValue>.Values
  type: Property
  source:
    remote:
      path: src/System.ObjectModel/src/System/Collections/ObjectModel/ReadOnlyDictionary.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: System.Collections.Generic.IDictionary<TKey,TValue>.Values
    path: src/System.ObjectModel/src/System/Collections/ObjectModel/ReadOnlyDictionary.cs
    startLine: 82
  assemblies:
  - System.ObjectModel
  namespace: System.Collections.ObjectModel
  syntax:
    content: ICollection<TValue> IDictionary<TKey, TValue>.Values { get; }
    content.vb: ReadOnly WriteOnly Property System.Collections.Generic.IDictionary<TKey,TValue>.Values As ICollection(Of TValue) Implements IDictionary(Of TKey, TValue).Values
    parameters: []
    return:
      type: System.Collections.Generic.ICollection{{TValue}}
  implements:
  - System.Collections.Generic.IDictionary{{TKey},{TValue}}.Values
  modifiers.csharp:
  - get
  modifiers.vb:
  - ReadOnly
  fullName.vb: System.Collections.ObjectModel.ReadOnlyDictionary(Of TKey, TValue).System.Collections.Generic.IDictionary<TKey,TValue>.Values
  name.vb: System.Collections.Generic.IDictionary<TKey,TValue>.Values
  nameWithType: ReadOnlyDictionary<TKey, TValue>.IDictionary<TKey, TValue>.Values
  nameWithType.vb: ReadOnlyDictionary(Of TKey, TValue).System.Collections.Generic.IDictionary<TKey,TValue>.Values
- uid: System.Collections.ObjectModel.ReadOnlyDictionary`2.System#Collections#Generic#IReadOnlyDictionary{TKey,TValue}#Keys
  commentId: P:System.Collections.ObjectModel.ReadOnlyDictionary`2.System#Collections#Generic#IReadOnlyDictionary{TKey,TValue}#Keys
  id: System#Collections#Generic#IReadOnlyDictionary{TKey,TValue}#Keys
  isEii: true
  parent: System.Collections.ObjectModel.ReadOnlyDictionary`2
  langs:
  - csharp
  - vb
  name: IReadOnlyDictionary<TKey, TValue>.Keys
  fullName: System.Collections.ObjectModel.ReadOnlyDictionary<TKey, TValue>.System.Collections.Generic.IReadOnlyDictionary<TKey, TValue>.Keys
  type: Property
  source:
    remote:
      path: src/System.ObjectModel/src/System/Collections/ObjectModel/ReadOnlyDictionary.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: System.Collections.Generic.IReadOnlyDictionary<TKey,TValue>.Keys
    path: src/System.ObjectModel/src/System/Collections/ObjectModel/ReadOnlyDictionary.cs
    startLine: 398
  assemblies:
  - System.ObjectModel
  namespace: System.Collections.ObjectModel
  syntax:
    content: IEnumerable<TKey> IReadOnlyDictionary<TKey, TValue>.Keys { get; }
    content.vb: ReadOnly WriteOnly Property System.Collections.Generic.IReadOnlyDictionary<TKey,TValue>.Keys As IEnumerable(Of TKey) Implements IReadOnlyDictionary(Of TKey, TValue).Keys
    parameters: []
    return:
      type: System.Collections.Generic.IEnumerable{{TKey}}
  implements:
  - System.Collections.Generic.IReadOnlyDictionary{{TKey},{TValue}}.Keys
  modifiers.csharp:
  - get
  modifiers.vb:
  - ReadOnly
  fullName.vb: System.Collections.ObjectModel.ReadOnlyDictionary(Of TKey, TValue).System.Collections.Generic.IReadOnlyDictionary<TKey,TValue>.Keys
  name.vb: System.Collections.Generic.IReadOnlyDictionary<TKey,TValue>.Keys
  nameWithType: ReadOnlyDictionary<TKey, TValue>.IReadOnlyDictionary<TKey, TValue>.Keys
  nameWithType.vb: ReadOnlyDictionary(Of TKey, TValue).System.Collections.Generic.IReadOnlyDictionary<TKey,TValue>.Keys
- uid: System.Collections.ObjectModel.ReadOnlyDictionary`2.System#Collections#Generic#IReadOnlyDictionary{TKey,TValue}#Values
  commentId: P:System.Collections.ObjectModel.ReadOnlyDictionary`2.System#Collections#Generic#IReadOnlyDictionary{TKey,TValue}#Values
  id: System#Collections#Generic#IReadOnlyDictionary{TKey,TValue}#Values
  isEii: true
  parent: System.Collections.ObjectModel.ReadOnlyDictionary`2
  langs:
  - csharp
  - vb
  name: IReadOnlyDictionary<TKey, TValue>.Values
  fullName: System.Collections.ObjectModel.ReadOnlyDictionary<TKey, TValue>.System.Collections.Generic.IReadOnlyDictionary<TKey, TValue>.Values
  type: Property
  source:
    remote:
      path: src/System.ObjectModel/src/System/Collections/ObjectModel/ReadOnlyDictionary.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: System.Collections.Generic.IReadOnlyDictionary<TKey,TValue>.Values
    path: src/System.ObjectModel/src/System/Collections/ObjectModel/ReadOnlyDictionary.cs
    startLine: 406
  assemblies:
  - System.ObjectModel
  namespace: System.Collections.ObjectModel
  syntax:
    content: IEnumerable<TValue> IReadOnlyDictionary<TKey, TValue>.Values { get; }
    content.vb: ReadOnly WriteOnly Property System.Collections.Generic.IReadOnlyDictionary<TKey,TValue>.Values As IEnumerable(Of TValue) Implements IReadOnlyDictionary(Of TKey, TValue).Values
    parameters: []
    return:
      type: System.Collections.Generic.IEnumerable{{TValue}}
  implements:
  - System.Collections.Generic.IReadOnlyDictionary{{TKey},{TValue}}.Values
  modifiers.csharp:
  - get
  modifiers.vb:
  - ReadOnly
  fullName.vb: System.Collections.ObjectModel.ReadOnlyDictionary(Of TKey, TValue).System.Collections.Generic.IReadOnlyDictionary<TKey,TValue>.Values
  name.vb: System.Collections.Generic.IReadOnlyDictionary<TKey,TValue>.Values
  nameWithType: ReadOnlyDictionary<TKey, TValue>.IReadOnlyDictionary<TKey, TValue>.Values
  nameWithType.vb: ReadOnlyDictionary(Of TKey, TValue).System.Collections.Generic.IReadOnlyDictionary<TKey,TValue>.Values
- uid: System.Collections.ObjectModel.ReadOnlyDictionary`2.System#Collections#ICollection#IsSynchronized
  commentId: P:System.Collections.ObjectModel.ReadOnlyDictionary`2.System#Collections#ICollection#IsSynchronized
  id: System#Collections#ICollection#IsSynchronized
  isEii: true
  parent: System.Collections.ObjectModel.ReadOnlyDictionary`2
  langs:
  - csharp
  - vb
  name: ICollection.IsSynchronized
  fullName: System.Collections.ObjectModel.ReadOnlyDictionary<TKey, TValue>.System.Collections.ICollection.IsSynchronized
  type: Property
  source:
    remote:
      path: src/System.ObjectModel/src/System/Collections/ObjectModel/ReadOnlyDictionary.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: System.Collections.ICollection.IsSynchronized
    path: src/System.ObjectModel/src/System/Collections/ObjectModel/ReadOnlyDictionary.cs
    startLine: 327
  assemblies:
  - System.ObjectModel
  namespace: System.Collections.ObjectModel
  summary: "\n<p>Gets a value that indicates whether access to the dictionary is synchronized (thread safe).</p>\n"
  syntax:
    content: bool ICollection.IsSynchronized { get; }
    content.vb: ReadOnly WriteOnly Property System.Collections.ICollection.IsSynchronized As Boolean Implements ICollection.IsSynchronized
    parameters: []
    return:
      type: System.Boolean
      description: "\n<p>\n<strong>true</strong> if access to the dictionary is synchronized (thread safe); otherwise, <strong>false</strong>.</p>\n"
  implements:
  - System.Collections.ICollection.IsSynchronized
  modifiers.csharp:
  - get
  modifiers.vb:
  - ReadOnly
  fullName.vb: System.Collections.ObjectModel.ReadOnlyDictionary(Of TKey, TValue).System.Collections.ICollection.IsSynchronized
  name.vb: System.Collections.ICollection.IsSynchronized
  nameWithType: ReadOnlyDictionary<TKey, TValue>.ICollection.IsSynchronized
  nameWithType.vb: ReadOnlyDictionary(Of TKey, TValue).System.Collections.ICollection.IsSynchronized
- uid: System.Collections.ObjectModel.ReadOnlyDictionary`2.System#Collections#ICollection#SyncRoot
  commentId: P:System.Collections.ObjectModel.ReadOnlyDictionary`2.System#Collections#ICollection#SyncRoot
  id: System#Collections#ICollection#SyncRoot
  isEii: true
  parent: System.Collections.ObjectModel.ReadOnlyDictionary`2
  langs:
  - csharp
  - vb
  name: ICollection.SyncRoot
  fullName: System.Collections.ObjectModel.ReadOnlyDictionary<TKey, TValue>.System.Collections.ICollection.SyncRoot
  type: Property
  source:
    remote:
      path: src/System.ObjectModel/src/System/Collections/ObjectModel/ReadOnlyDictionary.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: System.Collections.ICollection.SyncRoot
    path: src/System.ObjectModel/src/System/Collections/ObjectModel/ReadOnlyDictionary.cs
    startLine: 332
  assemblies:
  - System.ObjectModel
  namespace: System.Collections.ObjectModel
  summary: "\n<p>Gets an object that can be used to synchronize access to the dictionary.</p>\n"
  syntax:
    content: object ICollection.SyncRoot { get; }
    content.vb: ReadOnly WriteOnly Property System.Collections.ICollection.SyncRoot As Object Implements ICollection.SyncRoot
    parameters: []
    return:
      type: System.Object
      description: "\n<p>An object that can be used to synchronize access to the dictionary.</p>\n"
  implements:
  - System.Collections.ICollection.SyncRoot
  modifiers.csharp:
  - get
  modifiers.vb:
  - ReadOnly
  fullName.vb: System.Collections.ObjectModel.ReadOnlyDictionary(Of TKey, TValue).System.Collections.ICollection.SyncRoot
  name.vb: System.Collections.ICollection.SyncRoot
  nameWithType: ReadOnlyDictionary<TKey, TValue>.ICollection.SyncRoot
  nameWithType.vb: ReadOnlyDictionary(Of TKey, TValue).System.Collections.ICollection.SyncRoot
- uid: System.Collections.ObjectModel.ReadOnlyDictionary`2.System#Collections#IDictionary#IsFixedSize
  commentId: P:System.Collections.ObjectModel.ReadOnlyDictionary`2.System#Collections#IDictionary#IsFixedSize
  id: System#Collections#IDictionary#IsFixedSize
  isEii: true
  parent: System.Collections.ObjectModel.ReadOnlyDictionary`2
  langs:
  - csharp
  - vb
  name: IDictionary.IsFixedSize
  fullName: System.Collections.ObjectModel.ReadOnlyDictionary<TKey, TValue>.System.Collections.IDictionary.IsFixedSize
  type: Property
  source:
    remote:
      path: src/System.ObjectModel/src/System/Collections/ObjectModel/ReadOnlyDictionary.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: System.Collections.IDictionary.IsFixedSize
    path: src/System.ObjectModel/src/System/Collections/ObjectModel/ReadOnlyDictionary.cs
    startLine: 215
  assemblies:
  - System.ObjectModel
  namespace: System.Collections.ObjectModel
  summary: "\n<p>Gets a value that indicates whether the dictionary has a fixed size.</p>\n"
  syntax:
    content: bool IDictionary.IsFixedSize { get; }
    content.vb: ReadOnly WriteOnly Property System.Collections.IDictionary.IsFixedSize As Boolean Implements IDictionary.IsFixedSize
    parameters: []
    return:
      type: System.Boolean
      description: "\n<p>\n<strong>true</strong> if the dictionary has a fixed size; otherwise, <strong>false</strong>.</p>\n"
  implements:
  - System.Collections.IDictionary.IsFixedSize
  modifiers.csharp:
  - get
  modifiers.vb:
  - ReadOnly
  fullName.vb: System.Collections.ObjectModel.ReadOnlyDictionary(Of TKey, TValue).System.Collections.IDictionary.IsFixedSize
  name.vb: System.Collections.IDictionary.IsFixedSize
  nameWithType: ReadOnlyDictionary<TKey, TValue>.IDictionary.IsFixedSize
  nameWithType.vb: ReadOnlyDictionary(Of TKey, TValue).System.Collections.IDictionary.IsFixedSize
- uid: System.Collections.ObjectModel.ReadOnlyDictionary`2.System#Collections#IDictionary#IsReadOnly
  commentId: P:System.Collections.ObjectModel.ReadOnlyDictionary`2.System#Collections#IDictionary#IsReadOnly
  id: System#Collections#IDictionary#IsReadOnly
  isEii: true
  parent: System.Collections.ObjectModel.ReadOnlyDictionary`2
  langs:
  - csharp
  - vb
  name: IDictionary.IsReadOnly
  fullName: System.Collections.ObjectModel.ReadOnlyDictionary<TKey, TValue>.System.Collections.IDictionary.IsReadOnly
  type: Property
  source:
    remote:
      path: src/System.ObjectModel/src/System/Collections/ObjectModel/ReadOnlyDictionary.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: System.Collections.IDictionary.IsReadOnly
    path: src/System.ObjectModel/src/System/Collections/ObjectModel/ReadOnlyDictionary.cs
    startLine: 220
  assemblies:
  - System.ObjectModel
  namespace: System.Collections.ObjectModel
  summary: "\n<p>Gets a value that indicates whether the dictionary is read-only.</p>\n"
  syntax:
    content: bool IDictionary.IsReadOnly { get; }
    content.vb: ReadOnly WriteOnly Property System.Collections.IDictionary.IsReadOnly As Boolean Implements IDictionary.IsReadOnly
    parameters: []
    return:
      type: System.Boolean
      description: "\n<p>\n<strong>true</strong> in all cases.</p>\n"
  implements:
  - System.Collections.IDictionary.IsReadOnly
  modifiers.csharp:
  - get
  modifiers.vb:
  - ReadOnly
  fullName.vb: System.Collections.ObjectModel.ReadOnlyDictionary(Of TKey, TValue).System.Collections.IDictionary.IsReadOnly
  name.vb: System.Collections.IDictionary.IsReadOnly
  nameWithType: ReadOnlyDictionary<TKey, TValue>.IDictionary.IsReadOnly
  nameWithType.vb: ReadOnlyDictionary(Of TKey, TValue).System.Collections.IDictionary.IsReadOnly
- uid: System.Collections.ObjectModel.ReadOnlyDictionary`2.System#Collections#IDictionary#Item(System.Object)
  commentId: P:System.Collections.ObjectModel.ReadOnlyDictionary`2.System#Collections#IDictionary#Item(System.Object)
  id: System#Collections#IDictionary#Item(System.Object)
  isEii: true
  parent: System.Collections.ObjectModel.ReadOnlyDictionary`2
  langs:
  - csharp
  - vb
  name: IDictionary.Item[Object]
  fullName: System.Collections.ObjectModel.ReadOnlyDictionary<TKey, TValue>.System.Collections.IDictionary.Item[System.Object]
  type: Property
  source:
    remote:
      path: src/System.ObjectModel/src/System/Collections/ObjectModel/ReadOnlyDictionary.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: System.Collections.IDictionary.this[]
    path: src/System.ObjectModel/src/System/Collections/ObjectModel/ReadOnlyDictionary.cs
    startLine: 246
  assemblies:
  - System.ObjectModel
  namespace: System.Collections.ObjectModel
  summary: "\n<p>Gets the element that has the specified key.</p>\n"
  syntax:
    content: object IDictionary.this[object key] { get; set; }
    content.vb: ReadOnly WriteOnly Property System.Collections.IDictionary.Item(key As Object) As Object Implements IDictionary.this
    parameters:
    - id: key
      type: System.Object
      description: "\n<p>The key of the element to get or set. </p>\n"
    return:
      type: System.Object
      description: "\n<p>The element that has the specified key.</p>\n"
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "\n<p>\n<em>key</em> is <strong>null</strong>. </p>\n"
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "\n<p>The property is set.</p>\n<p>-or- </p>\n<p>The property is set, <em>key</em> does not exist in the collection, and the dictionary has a fixed size. </p>\n"
  implements:
  - System.Collections.IDictionary.Item(System.Object)
  modifiers.csharp:
  - get
  - set
  fullName.vb: System.Collections.ObjectModel.ReadOnlyDictionary(Of TKey, TValue).System.Collections.IDictionary.Item(System.Object)
  name.vb: System.Collections.IDictionary.Item(Object)
  nameWithType: ReadOnlyDictionary<TKey, TValue>.IDictionary.Item[Object]
  nameWithType.vb: ReadOnlyDictionary(Of TKey, TValue).System.Collections.IDictionary.Item(Object)
- uid: System.Collections.ObjectModel.ReadOnlyDictionary`2.System#Collections#IDictionary#Keys
  commentId: P:System.Collections.ObjectModel.ReadOnlyDictionary`2.System#Collections#IDictionary#Keys
  id: System#Collections#IDictionary#Keys
  isEii: true
  parent: System.Collections.ObjectModel.ReadOnlyDictionary`2
  langs:
  - csharp
  - vb
  name: IDictionary.Keys
  fullName: System.Collections.ObjectModel.ReadOnlyDictionary<TKey, TValue>.System.Collections.IDictionary.Keys
  type: Property
  source:
    remote:
      path: src/System.ObjectModel/src/System/Collections/ObjectModel/ReadOnlyDictionary.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: System.Collections.IDictionary.Keys
    path: src/System.ObjectModel/src/System/Collections/ObjectModel/ReadOnlyDictionary.cs
    startLine: 225
  assemblies:
  - System.ObjectModel
  namespace: System.Collections.ObjectModel
  summary: "\n<p>Gets a collection that contains the keys of the dictionary.</p>\n"
  syntax:
    content: ICollection IDictionary.Keys { get; }
    content.vb: ReadOnly WriteOnly Property System.Collections.IDictionary.Keys As ICollection Implements IDictionary.Keys
    parameters: []
    return:
      type: System.Collections.ICollection
      description: "\n<p>A collection that contains the keys of the dictionary.</p>\n"
  implements:
  - System.Collections.IDictionary.Keys
  modifiers.csharp:
  - get
  modifiers.vb:
  - ReadOnly
  fullName.vb: System.Collections.ObjectModel.ReadOnlyDictionary(Of TKey, TValue).System.Collections.IDictionary.Keys
  name.vb: System.Collections.IDictionary.Keys
  nameWithType: ReadOnlyDictionary<TKey, TValue>.IDictionary.Keys
  nameWithType.vb: ReadOnlyDictionary(Of TKey, TValue).System.Collections.IDictionary.Keys
- uid: System.Collections.ObjectModel.ReadOnlyDictionary`2.System#Collections#IDictionary#Values
  commentId: P:System.Collections.ObjectModel.ReadOnlyDictionary`2.System#Collections#IDictionary#Values
  id: System#Collections#IDictionary#Values
  isEii: true
  parent: System.Collections.ObjectModel.ReadOnlyDictionary`2
  langs:
  - csharp
  - vb
  name: IDictionary.Values
  fullName: System.Collections.ObjectModel.ReadOnlyDictionary<TKey, TValue>.System.Collections.IDictionary.Values
  type: Property
  source:
    remote:
      path: src/System.ObjectModel/src/System/Collections/ObjectModel/ReadOnlyDictionary.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: System.Collections.IDictionary.Values
    path: src/System.ObjectModel/src/System/Collections/ObjectModel/ReadOnlyDictionary.cs
    startLine: 238
  assemblies:
  - System.ObjectModel
  namespace: System.Collections.ObjectModel
  summary: "\n<p>Gets a collection that contains the values in the dictionary.</p>\n"
  syntax:
    content: ICollection IDictionary.Values { get; }
    content.vb: ReadOnly WriteOnly Property System.Collections.IDictionary.Values As ICollection Implements IDictionary.Values
    parameters: []
    return:
      type: System.Collections.ICollection
      description: "\n<p>A collection that contains the values in the dictionary.</p>\n"
  implements:
  - System.Collections.IDictionary.Values
  modifiers.csharp:
  - get
  modifiers.vb:
  - ReadOnly
  fullName.vb: System.Collections.ObjectModel.ReadOnlyDictionary(Of TKey, TValue).System.Collections.IDictionary.Values
  name.vb: System.Collections.IDictionary.Values
  nameWithType: ReadOnlyDictionary<TKey, TValue>.IDictionary.Values
  nameWithType.vb: ReadOnlyDictionary(Of TKey, TValue).System.Collections.IDictionary.Values
- uid: System.Collections.ObjectModel.ReadOnlyDictionary`2.Values
  commentId: P:System.Collections.ObjectModel.ReadOnlyDictionary`2.Values
  id: Values
  parent: System.Collections.ObjectModel.ReadOnlyDictionary`2
  langs:
  - csharp
  - vb
  name: Values
  fullName: System.Collections.ObjectModel.ReadOnlyDictionary<TKey, TValue>.Values
  type: Property
  source:
    remote:
      path: src/System.ObjectModel/src/System/Collections/ObjectModel/ReadOnlyDictionary.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: Values
    path: src/System.ObjectModel/src/System/Collections/ObjectModel/ReadOnlyDictionary.cs
    startLine: 49
  assemblies:
  - System.ObjectModel
  namespace: System.Collections.ObjectModel
  summary: "\n<p>Gets a collection that contains the values in the dictionary.</p>\n"
  syntax:
    content: public ReadOnlyDictionary<TKey, TValue>.ValueCollection Values { get; }
    content.vb: Public ReadOnly Property Values As ReadOnlyDictionary(Of TKey, TValue).ValueCollection
    parameters: []
    return:
      type: System.Collections.ObjectModel.ReadOnlyDictionary`2.ValueCollection
      description: "\n<p>A collection that contains the values in the object that implements <xref href=\"System.Collections.ObjectModel.ReadOnlyDictionary`2\" data-throw-if-not-resolved=\"false\"></xref>.</p>\n"
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
  fullName.vb: System.Collections.ObjectModel.ReadOnlyDictionary(Of TKey, TValue).Values
  nameWithType: ReadOnlyDictionary<TKey, TValue>.Values
  nameWithType.vb: ReadOnlyDictionary(Of TKey, TValue).Values
- uid: System.Collections.ObjectModel.ReadOnlyDictionary`2.ContainsKey(`0)
  commentId: M:System.Collections.ObjectModel.ReadOnlyDictionary`2.ContainsKey(`0)
  id: ContainsKey(`0)
  parent: System.Collections.ObjectModel.ReadOnlyDictionary`2
  langs:
  - csharp
  - vb
  name: ContainsKey(TKey)
  fullName: System.Collections.ObjectModel.ReadOnlyDictionary<TKey, TValue>.ContainsKey(TKey)
  type: Method
  source:
    remote:
      path: src/System.ObjectModel/src/System/Collections/ObjectModel/ReadOnlyDictionary.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: ContainsKey
    path: src/System.ObjectModel/src/System/Collections/ObjectModel/ReadOnlyDictionary.cs
    startLine: 64
  assemblies:
  - System.ObjectModel
  namespace: System.Collections.ObjectModel
  summary: "\n<p>Determines whether the dictionary contains an element that has the specified key.</p>\n"
  syntax:
    content: public bool ContainsKey(TKey key)
    content.vb: Public Function ContainsKey(key As TKey) As Boolean
    parameters:
    - id: key
      type: '{TKey}'
      description: "\n<p>The key to locate in the dictionary.</p>\n"
    return:
      type: System.Boolean
      description: "\n<p>\n<strong>true</strong> if the dictionary contains an element that has the specified key; otherwise, <strong>false</strong>.</p>\n"
  implements:
  - System.Collections.Generic.IDictionary{{TKey},{TValue}}.ContainsKey({TKey})
  - System.Collections.Generic.IReadOnlyDictionary{{TKey},{TValue}}.ContainsKey({TKey})
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: System.Collections.ObjectModel.ReadOnlyDictionary(Of TKey, TValue).ContainsKey(TKey)
  nameWithType: ReadOnlyDictionary<TKey, TValue>.ContainsKey(TKey)
  nameWithType.vb: ReadOnlyDictionary(Of TKey, TValue).ContainsKey(TKey)
- uid: System.Collections.ObjectModel.ReadOnlyDictionary`2.GetEnumerator
  commentId: M:System.Collections.ObjectModel.ReadOnlyDictionary`2.GetEnumerator
  id: GetEnumerator
  parent: System.Collections.ObjectModel.ReadOnlyDictionary`2
  langs:
  - csharp
  - vb
  name: GetEnumerator()
  fullName: System.Collections.ObjectModel.ReadOnlyDictionary<TKey, TValue>.GetEnumerator()
  type: Method
  source:
    remote:
      path: src/System.ObjectModel/src/System/Collections/ObjectModel/ReadOnlyDictionary.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: GetEnumerator
    path: src/System.ObjectModel/src/System/Collections/ObjectModel/ReadOnlyDictionary.cs
    startLine: 163
  assemblies:
  - System.ObjectModel
  namespace: System.Collections.ObjectModel
  summary: "\n<p>Returns an enumerator that iterates through the <xref href=\"System.Collections.ObjectModel.ReadOnlyDictionary`2\" data-throw-if-not-resolved=\"false\"></xref>.</p>\n"
  syntax:
    content: public IEnumerator<KeyValuePair<TKey, TValue>> GetEnumerator()
    content.vb: Public Function GetEnumerator As IEnumerator(Of KeyValuePair(Of TKey, TValue))
    return:
      type: System.Collections.Generic.IEnumerator{System.Collections.Generic.KeyValuePair{{TKey},{TValue}}}
      description: "\n<p>An enumerator that can be used to iterate through the collection.</p>\n"
  implements:
  - System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{{TKey},{TValue}}}.GetEnumerator
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: System.Collections.ObjectModel.ReadOnlyDictionary(Of TKey, TValue).GetEnumerator()
  nameWithType: ReadOnlyDictionary<TKey, TValue>.GetEnumerator()
  nameWithType.vb: ReadOnlyDictionary(Of TKey, TValue).GetEnumerator()
- uid: System.Collections.ObjectModel.ReadOnlyDictionary`2.System#Collections#Generic#ICollection{System#Collections#Generic#KeyValuePair{TKey,TValue}}#Add(System.Collections.Generic.KeyValuePair{`0,`1})
  commentId: M:System.Collections.ObjectModel.ReadOnlyDictionary`2.System#Collections#Generic#ICollection{System#Collections#Generic#KeyValuePair{TKey,TValue}}#Add(System.Collections.Generic.KeyValuePair{`0,`1})
  id: System#Collections#Generic#ICollection{System#Collections#Generic#KeyValuePair{TKey,TValue}}#Add(System.Collections.Generic.KeyValuePair{`0,`1})
  isEii: true
  parent: System.Collections.ObjectModel.ReadOnlyDictionary`2
  langs:
  - csharp
  - vb
  name: ICollection<KeyValuePair<TKey, TValue>>.Add(KeyValuePair<TKey, TValue>)
  fullName: System.Collections.ObjectModel.ReadOnlyDictionary<TKey, TValue>.System.Collections.Generic.ICollection<System.Collections.Generic.KeyValuePair<TKey, TValue>>.Add(System.Collections.Generic.KeyValuePair<TKey, TValue>)
  type: Method
  source:
    remote:
      path: src/System.ObjectModel/src/System/Collections/ObjectModel/ReadOnlyDictionary.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: System.Collections.Generic.ICollection<System.Collections.Generic.KeyValuePair<TKey,TValue>>.Add
    path: src/System.ObjectModel/src/System/Collections/ObjectModel/ReadOnlyDictionary.cs
    startLine: 144
  assemblies:
  - System.ObjectModel
  namespace: System.Collections.ObjectModel
  syntax:
    content: void ICollection<KeyValuePair<TKey, TValue>>.Add(KeyValuePair<TKey, TValue> item)
    content.vb: Sub System.Collections.Generic.ICollection<System.Collections.Generic.KeyValuePair<TKey,TValue>>.Add(item As KeyValuePair(Of TKey, TValue)) Implements ICollection(Of KeyValuePair(Of TKey, TValue)).Add
    parameters:
    - id: item
      type: System.Collections.Generic.KeyValuePair{{TKey},{TValue}}
  implements:
  - System.Collections.Generic.ICollection{System.Collections.Generic.KeyValuePair{{TKey},{TValue}}}.Add(System.Collections.Generic.KeyValuePair{{TKey},{TValue}})
  fullName.vb: System.Collections.ObjectModel.ReadOnlyDictionary(Of TKey, TValue).System.Collections.Generic.ICollection<System.Collections.Generic.KeyValuePair<TKey,TValue>>.Add(System.Collections.Generic.KeyValuePair(Of TKey, TValue))
  name.vb: System.Collections.Generic.ICollection<System.Collections.Generic.KeyValuePair<TKey,TValue>>.Add(KeyValuePair(Of TKey, TValue))
  nameWithType: ReadOnlyDictionary<TKey, TValue>.ICollection<KeyValuePair<TKey, TValue>>.Add(KeyValuePair<TKey, TValue>)
  nameWithType.vb: ReadOnlyDictionary(Of TKey, TValue).System.Collections.Generic.ICollection<System.Collections.Generic.KeyValuePair<TKey,TValue>>.Add(KeyValuePair(Of TKey, TValue))
- uid: System.Collections.ObjectModel.ReadOnlyDictionary`2.System#Collections#Generic#ICollection{System#Collections#Generic#KeyValuePair{TKey,TValue}}#Clear
  commentId: M:System.Collections.ObjectModel.ReadOnlyDictionary`2.System#Collections#Generic#ICollection{System#Collections#Generic#KeyValuePair{TKey,TValue}}#Clear
  id: System#Collections#Generic#ICollection{System#Collections#Generic#KeyValuePair{TKey,TValue}}#Clear
  isEii: true
  parent: System.Collections.ObjectModel.ReadOnlyDictionary`2
  langs:
  - csharp
  - vb
  name: ICollection<KeyValuePair<TKey, TValue>>.Clear()
  fullName: System.Collections.ObjectModel.ReadOnlyDictionary<TKey, TValue>.System.Collections.Generic.ICollection<System.Collections.Generic.KeyValuePair<TKey, TValue>>.Clear()
  type: Method
  source:
    remote:
      path: src/System.ObjectModel/src/System/Collections/ObjectModel/ReadOnlyDictionary.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: System.Collections.Generic.ICollection<System.Collections.Generic.KeyValuePair<TKey,TValue>>.Clear
    path: src/System.ObjectModel/src/System/Collections/ObjectModel/ReadOnlyDictionary.cs
    startLine: 149
  assemblies:
  - System.ObjectModel
  namespace: System.Collections.ObjectModel
  syntax:
    content: void ICollection<KeyValuePair<TKey, TValue>>.Clear()
    content.vb: Sub System.Collections.Generic.ICollection<System.Collections.Generic.KeyValuePair<TKey,TValue>>.Clear Implements ICollection(Of KeyValuePair(Of TKey, TValue)).Clear
  implements:
  - System.Collections.Generic.ICollection{System.Collections.Generic.KeyValuePair{{TKey},{TValue}}}.Clear
  fullName.vb: System.Collections.ObjectModel.ReadOnlyDictionary(Of TKey, TValue).System.Collections.Generic.ICollection<System.Collections.Generic.KeyValuePair<TKey,TValue>>.Clear()
  name.vb: System.Collections.Generic.ICollection<System.Collections.Generic.KeyValuePair<TKey,TValue>>.Clear()
  nameWithType: ReadOnlyDictionary<TKey, TValue>.ICollection<KeyValuePair<TKey, TValue>>.Clear()
  nameWithType.vb: ReadOnlyDictionary(Of TKey, TValue).System.Collections.Generic.ICollection<System.Collections.Generic.KeyValuePair<TKey,TValue>>.Clear()
- uid: System.Collections.ObjectModel.ReadOnlyDictionary`2.System#Collections#Generic#ICollection{System#Collections#Generic#KeyValuePair{TKey,TValue}}#Contains(System.Collections.Generic.KeyValuePair{`0,`1})
  commentId: M:System.Collections.ObjectModel.ReadOnlyDictionary`2.System#Collections#Generic#ICollection{System#Collections#Generic#KeyValuePair{TKey,TValue}}#Contains(System.Collections.Generic.KeyValuePair{`0,`1})
  id: System#Collections#Generic#ICollection{System#Collections#Generic#KeyValuePair{TKey,TValue}}#Contains(System.Collections.Generic.KeyValuePair{`0,`1})
  isEii: true
  parent: System.Collections.ObjectModel.ReadOnlyDictionary`2
  langs:
  - csharp
  - vb
  name: ICollection<KeyValuePair<TKey, TValue>>.Contains(KeyValuePair<TKey, TValue>)
  fullName: System.Collections.ObjectModel.ReadOnlyDictionary<TKey, TValue>.System.Collections.Generic.ICollection<System.Collections.Generic.KeyValuePair<TKey, TValue>>.Contains(System.Collections.Generic.KeyValuePair<TKey, TValue>)
  type: Method
  source:
    remote:
      path: src/System.ObjectModel/src/System/Collections/ObjectModel/ReadOnlyDictionary.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: System.Collections.Generic.ICollection<System.Collections.Generic.KeyValuePair<TKey,TValue>>.Contains
    path: src/System.ObjectModel/src/System/Collections/ObjectModel/ReadOnlyDictionary.cs
    startLine: 129
  assemblies:
  - System.ObjectModel
  namespace: System.Collections.ObjectModel
  syntax:
    content: bool ICollection<KeyValuePair<TKey, TValue>>.Contains(KeyValuePair<TKey, TValue> item)
    content.vb: Function System.Collections.Generic.ICollection<System.Collections.Generic.KeyValuePair<TKey,TValue>>.Contains(item As KeyValuePair(Of TKey, TValue)) As Boolean Implements ICollection(Of KeyValuePair(Of TKey, TValue)).Contains
    parameters:
    - id: item
      type: System.Collections.Generic.KeyValuePair{{TKey},{TValue}}
    return:
      type: System.Boolean
  implements:
  - System.Collections.Generic.ICollection{System.Collections.Generic.KeyValuePair{{TKey},{TValue}}}.Contains(System.Collections.Generic.KeyValuePair{{TKey},{TValue}})
  fullName.vb: System.Collections.ObjectModel.ReadOnlyDictionary(Of TKey, TValue).System.Collections.Generic.ICollection<System.Collections.Generic.KeyValuePair<TKey,TValue>>.Contains(System.Collections.Generic.KeyValuePair(Of TKey, TValue))
  name.vb: System.Collections.Generic.ICollection<System.Collections.Generic.KeyValuePair<TKey,TValue>>.Contains(KeyValuePair(Of TKey, TValue))
  nameWithType: ReadOnlyDictionary<TKey, TValue>.ICollection<KeyValuePair<TKey, TValue>>.Contains(KeyValuePair<TKey, TValue>)
  nameWithType.vb: ReadOnlyDictionary(Of TKey, TValue).System.Collections.Generic.ICollection<System.Collections.Generic.KeyValuePair<TKey,TValue>>.Contains(KeyValuePair(Of TKey, TValue))
- uid: System.Collections.ObjectModel.ReadOnlyDictionary`2.System#Collections#Generic#ICollection{System#Collections#Generic#KeyValuePair{TKey,TValue}}#CopyTo(System.Collections.Generic.KeyValuePair{`0,`1}[],System.Int32)
  commentId: M:System.Collections.ObjectModel.ReadOnlyDictionary`2.System#Collections#Generic#ICollection{System#Collections#Generic#KeyValuePair{TKey,TValue}}#CopyTo(System.Collections.Generic.KeyValuePair{`0,`1}[],System.Int32)
  id: System#Collections#Generic#ICollection{System#Collections#Generic#KeyValuePair{TKey,TValue}}#CopyTo(System.Collections.Generic.KeyValuePair{`0,`1}[],System.Int32)
  isEii: true
  parent: System.Collections.ObjectModel.ReadOnlyDictionary`2
  langs:
  - csharp
  - vb
  name: ICollection<KeyValuePair<TKey, TValue>>.CopyTo(KeyValuePair<TKey, TValue>[], Int32)
  fullName: System.Collections.ObjectModel.ReadOnlyDictionary<TKey, TValue>.System.Collections.Generic.ICollection<System.Collections.Generic.KeyValuePair<TKey, TValue>>.CopyTo(System.Collections.Generic.KeyValuePair<TKey, TValue>[], System.Int32)
  type: Method
  source:
    remote:
      path: src/System.ObjectModel/src/System/Collections/ObjectModel/ReadOnlyDictionary.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: System.Collections.Generic.ICollection<System.Collections.Generic.KeyValuePair<TKey,TValue>>.CopyTo
    path: src/System.ObjectModel/src/System/Collections/ObjectModel/ReadOnlyDictionary.cs
    startLine: 134
  assemblies:
  - System.ObjectModel
  namespace: System.Collections.ObjectModel
  syntax:
    content: void ICollection<KeyValuePair<TKey, TValue>>.CopyTo(KeyValuePair<TKey, TValue>[] array, int arrayIndex)
    content.vb: Sub System.Collections.Generic.ICollection<System.Collections.Generic.KeyValuePair<TKey,TValue>>.CopyTo(array As KeyValuePair(Of TKey, TValue)(), arrayIndex As Integer) Implements ICollection(Of KeyValuePair(Of TKey, TValue)).CopyTo
    parameters:
    - id: array
      type: System.Collections.Generic.KeyValuePair{{TKey},{TValue}}[]
    - id: arrayIndex
      type: System.Int32
  implements:
  - System.Collections.Generic.ICollection{System.Collections.Generic.KeyValuePair{{TKey},{TValue}}}.CopyTo(System.Collections.Generic.KeyValuePair{{TKey},{TValue}}[],System.Int32)
  fullName.vb: System.Collections.ObjectModel.ReadOnlyDictionary(Of TKey, TValue).System.Collections.Generic.ICollection<System.Collections.Generic.KeyValuePair<TKey,TValue>>.CopyTo(System.Collections.Generic.KeyValuePair(Of TKey, TValue)(), System.Int32)
  name.vb: System.Collections.Generic.ICollection<System.Collections.Generic.KeyValuePair<TKey,TValue>>.CopyTo(KeyValuePair(Of TKey, TValue)(), Int32)
  nameWithType: ReadOnlyDictionary<TKey, TValue>.ICollection<KeyValuePair<TKey, TValue>>.CopyTo(KeyValuePair<TKey, TValue>[], Int32)
  nameWithType.vb: ReadOnlyDictionary(Of TKey, TValue).System.Collections.Generic.ICollection<System.Collections.Generic.KeyValuePair<TKey,TValue>>.CopyTo(KeyValuePair(Of TKey, TValue)(), Int32)
- uid: System.Collections.ObjectModel.ReadOnlyDictionary`2.System#Collections#Generic#ICollection{System#Collections#Generic#KeyValuePair{TKey,TValue}}#Remove(System.Collections.Generic.KeyValuePair{`0,`1})
  commentId: M:System.Collections.ObjectModel.ReadOnlyDictionary`2.System#Collections#Generic#ICollection{System#Collections#Generic#KeyValuePair{TKey,TValue}}#Remove(System.Collections.Generic.KeyValuePair{`0,`1})
  id: System#Collections#Generic#ICollection{System#Collections#Generic#KeyValuePair{TKey,TValue}}#Remove(System.Collections.Generic.KeyValuePair{`0,`1})
  isEii: true
  parent: System.Collections.ObjectModel.ReadOnlyDictionary`2
  langs:
  - csharp
  - vb
  name: ICollection<KeyValuePair<TKey, TValue>>.Remove(KeyValuePair<TKey, TValue>)
  fullName: System.Collections.ObjectModel.ReadOnlyDictionary<TKey, TValue>.System.Collections.Generic.ICollection<System.Collections.Generic.KeyValuePair<TKey, TValue>>.Remove(System.Collections.Generic.KeyValuePair<TKey, TValue>)
  type: Method
  source:
    remote:
      path: src/System.ObjectModel/src/System/Collections/ObjectModel/ReadOnlyDictionary.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: System.Collections.Generic.ICollection<System.Collections.Generic.KeyValuePair<TKey,TValue>>.Remove
    path: src/System.ObjectModel/src/System/Collections/ObjectModel/ReadOnlyDictionary.cs
    startLine: 154
  assemblies:
  - System.ObjectModel
  namespace: System.Collections.ObjectModel
  syntax:
    content: bool ICollection<KeyValuePair<TKey, TValue>>.Remove(KeyValuePair<TKey, TValue> item)
    content.vb: Function System.Collections.Generic.ICollection<System.Collections.Generic.KeyValuePair<TKey,TValue>>.Remove(item As KeyValuePair(Of TKey, TValue)) As Boolean Implements ICollection(Of KeyValuePair(Of TKey, TValue)).Remove
    parameters:
    - id: item
      type: System.Collections.Generic.KeyValuePair{{TKey},{TValue}}
    return:
      type: System.Boolean
  implements:
  - System.Collections.Generic.ICollection{System.Collections.Generic.KeyValuePair{{TKey},{TValue}}}.Remove(System.Collections.Generic.KeyValuePair{{TKey},{TValue}})
  fullName.vb: System.Collections.ObjectModel.ReadOnlyDictionary(Of TKey, TValue).System.Collections.Generic.ICollection<System.Collections.Generic.KeyValuePair<TKey,TValue>>.Remove(System.Collections.Generic.KeyValuePair(Of TKey, TValue))
  name.vb: System.Collections.Generic.ICollection<System.Collections.Generic.KeyValuePair<TKey,TValue>>.Remove(KeyValuePair(Of TKey, TValue))
  nameWithType: ReadOnlyDictionary<TKey, TValue>.ICollection<KeyValuePair<TKey, TValue>>.Remove(KeyValuePair<TKey, TValue>)
  nameWithType.vb: ReadOnlyDictionary(Of TKey, TValue).System.Collections.Generic.ICollection<System.Collections.Generic.KeyValuePair<TKey,TValue>>.Remove(KeyValuePair(Of TKey, TValue))
- uid: System.Collections.ObjectModel.ReadOnlyDictionary`2.System#Collections#Generic#IDictionary{TKey,TValue}#Add(`0,`1)
  commentId: M:System.Collections.ObjectModel.ReadOnlyDictionary`2.System#Collections#Generic#IDictionary{TKey,TValue}#Add(`0,`1)
  id: System#Collections#Generic#IDictionary{TKey,TValue}#Add(`0,`1)
  isEii: true
  parent: System.Collections.ObjectModel.ReadOnlyDictionary`2
  langs:
  - csharp
  - vb
  name: IDictionary<TKey, TValue>.Add(TKey, TValue)
  fullName: System.Collections.ObjectModel.ReadOnlyDictionary<TKey, TValue>.System.Collections.Generic.IDictionary<TKey, TValue>.Add(TKey, TValue)
  type: Method
  source:
    remote:
      path: src/System.ObjectModel/src/System/Collections/ObjectModel/ReadOnlyDictionary.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: System.Collections.Generic.IDictionary<TKey,TValue>.Add
    path: src/System.ObjectModel/src/System/Collections/ObjectModel/ReadOnlyDictionary.cs
    startLine: 98
  assemblies:
  - System.ObjectModel
  namespace: System.Collections.ObjectModel
  syntax:
    content: void IDictionary<TKey, TValue>.Add(TKey key, TValue value)
    content.vb: Sub System.Collections.Generic.IDictionary<TKey,TValue>.Add(key As TKey, value As TValue) Implements IDictionary(Of TKey, TValue).Add
    parameters:
    - id: key
      type: '{TKey}'
    - id: value
      type: '{TValue}'
  implements:
  - System.Collections.Generic.IDictionary{{TKey},{TValue}}.Add({TKey},{TValue})
  fullName.vb: System.Collections.ObjectModel.ReadOnlyDictionary(Of TKey, TValue).System.Collections.Generic.IDictionary<TKey,TValue>.Add(TKey, TValue)
  name.vb: System.Collections.Generic.IDictionary<TKey,TValue>.Add(TKey, TValue)
  nameWithType: ReadOnlyDictionary<TKey, TValue>.IDictionary<TKey, TValue>.Add(TKey, TValue)
  nameWithType.vb: ReadOnlyDictionary(Of TKey, TValue).System.Collections.Generic.IDictionary<TKey,TValue>.Add(TKey, TValue)
- uid: System.Collections.ObjectModel.ReadOnlyDictionary`2.System#Collections#Generic#IDictionary{TKey,TValue}#Remove(`0)
  commentId: M:System.Collections.ObjectModel.ReadOnlyDictionary`2.System#Collections#Generic#IDictionary{TKey,TValue}#Remove(`0)
  id: System#Collections#Generic#IDictionary{TKey,TValue}#Remove(`0)
  isEii: true
  parent: System.Collections.ObjectModel.ReadOnlyDictionary`2
  langs:
  - csharp
  - vb
  name: IDictionary<TKey, TValue>.Remove(TKey)
  fullName: System.Collections.ObjectModel.ReadOnlyDictionary<TKey, TValue>.System.Collections.Generic.IDictionary<TKey, TValue>.Remove(TKey)
  type: Method
  source:
    remote:
      path: src/System.ObjectModel/src/System/Collections/ObjectModel/ReadOnlyDictionary.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: System.Collections.Generic.IDictionary<TKey,TValue>.Remove
    path: src/System.ObjectModel/src/System/Collections/ObjectModel/ReadOnlyDictionary.cs
    startLine: 103
  assemblies:
  - System.ObjectModel
  namespace: System.Collections.ObjectModel
  syntax:
    content: bool IDictionary<TKey, TValue>.Remove(TKey key)
    content.vb: Function System.Collections.Generic.IDictionary<TKey,TValue>.Remove(key As TKey) As Boolean Implements IDictionary(Of TKey, TValue).Remove
    parameters:
    - id: key
      type: '{TKey}'
    return:
      type: System.Boolean
  implements:
  - System.Collections.Generic.IDictionary{{TKey},{TValue}}.Remove({TKey})
  fullName.vb: System.Collections.ObjectModel.ReadOnlyDictionary(Of TKey, TValue).System.Collections.Generic.IDictionary<TKey,TValue>.Remove(TKey)
  name.vb: System.Collections.Generic.IDictionary<TKey,TValue>.Remove(TKey)
  nameWithType: ReadOnlyDictionary<TKey, TValue>.IDictionary<TKey, TValue>.Remove(TKey)
  nameWithType.vb: ReadOnlyDictionary(Of TKey, TValue).System.Collections.Generic.IDictionary<TKey,TValue>.Remove(TKey)
- uid: System.Collections.ObjectModel.ReadOnlyDictionary`2.System#Collections#ICollection#CopyTo(System.Array,System.Int32)
  commentId: M:System.Collections.ObjectModel.ReadOnlyDictionary`2.System#Collections#ICollection#CopyTo(System.Array,System.Int32)
  id: System#Collections#ICollection#CopyTo(System.Array,System.Int32)
  isEii: true
  parent: System.Collections.ObjectModel.ReadOnlyDictionary`2
  langs:
  - csharp
  - vb
  name: ICollection.CopyTo(Array, Int32)
  fullName: System.Collections.ObjectModel.ReadOnlyDictionary<TKey, TValue>.System.Collections.ICollection.CopyTo(System.Array, System.Int32)
  type: Method
  source:
    remote:
      path: src/System.ObjectModel/src/System/Collections/ObjectModel/ReadOnlyDictionary.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: System.Collections.ICollection.CopyTo
    path: src/System.ObjectModel/src/System/Collections/ObjectModel/ReadOnlyDictionary.cs
    startLine: 262
  assemblies:
  - System.ObjectModel
  namespace: System.Collections.ObjectModel
  summary: "\n<p>Copies the elements of the dictionary to an array, starting at the specified array index.</p>\n"
  syntax:
    content: void ICollection.CopyTo(Array array, int index)
    content.vb: Sub System.Collections.ICollection.CopyTo(array As Array, index As Integer) Implements ICollection.CopyTo
    parameters:
    - id: array
      type: System.Array
      description: "\n<p>The one-dimensional array that is the destination of the elements copied from the dictionary. The array must have zero-based indexing. </p>\n"
    - id: index
      type: System.Int32
      description: "\n<p>The zero-based index in <em>array</em> at which copying begins. </p>\n"
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "\n<p>\n<em>array</em> is <strong>null</strong>. </p>\n"
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "\n<p>\n<em>index</em> is less than zero. </p>\n"
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "\n<p>\n<em>array</em> is multidimensional.</p>\n<p>-or- </p>\n<p>The number of elements in the source dictionary is greater than the available space from <em>index</em> to the end of the destination <em>array</em>.</p>\n<p>-or-</p>\n<p> The type of the source dictionary cannot be cast automatically to the type of the destination <em>array</em><em>.</em></p>\n"
  implements:
  - System.Collections.ICollection.CopyTo(System.Array,System.Int32)
  fullName.vb: System.Collections.ObjectModel.ReadOnlyDictionary(Of TKey, TValue).System.Collections.ICollection.CopyTo(System.Array, System.Int32)
  name.vb: System.Collections.ICollection.CopyTo(Array, Int32)
  nameWithType: ReadOnlyDictionary<TKey, TValue>.ICollection.CopyTo(Array, Int32)
  nameWithType.vb: ReadOnlyDictionary(Of TKey, TValue).System.Collections.ICollection.CopyTo(Array, Int32)
- uid: System.Collections.ObjectModel.ReadOnlyDictionary`2.System#Collections#IDictionary#Add(System.Object,System.Object)
  commentId: M:System.Collections.ObjectModel.ReadOnlyDictionary`2.System#Collections#IDictionary#Add(System.Object,System.Object)
  id: System#Collections#IDictionary#Add(System.Object,System.Object)
  isEii: true
  parent: System.Collections.ObjectModel.ReadOnlyDictionary`2
  langs:
  - csharp
  - vb
  name: IDictionary.Add(Object, Object)
  fullName: System.Collections.ObjectModel.ReadOnlyDictionary<TKey, TValue>.System.Collections.IDictionary.Add(System.Object, System.Object)
  type: Method
  source:
    remote:
      path: src/System.ObjectModel/src/System/Collections/ObjectModel/ReadOnlyDictionary.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: System.Collections.IDictionary.Add
    path: src/System.ObjectModel/src/System/Collections/ObjectModel/ReadOnlyDictionary.cs
    startLine: 190
  assemblies:
  - System.ObjectModel
  namespace: System.Collections.ObjectModel
  summary: "\n<p>Throws a <xref href=\"System.NotSupportedException\" data-throw-if-not-resolved=\"false\"></xref> exception in all cases.</p>\n"
  syntax:
    content: void IDictionary.Add(object key, object value)
    content.vb: Sub System.Collections.IDictionary.Add(key As Object, value As Object) Implements IDictionary.Add
    parameters:
    - id: key
      type: System.Object
      description: "\n<p>The key of the element to add. </p>\n"
    - id: value
      type: System.Object
      description: "\n<p>The value of the element to add. </p>\n"
  exceptions:
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "\n<p>In all cases.</p>\n"
  implements:
  - System.Collections.IDictionary.Add(System.Object,System.Object)
  fullName.vb: System.Collections.ObjectModel.ReadOnlyDictionary(Of TKey, TValue).System.Collections.IDictionary.Add(System.Object, System.Object)
  name.vb: System.Collections.IDictionary.Add(Object, Object)
  nameWithType: ReadOnlyDictionary<TKey, TValue>.IDictionary.Add(Object, Object)
  nameWithType.vb: ReadOnlyDictionary(Of TKey, TValue).System.Collections.IDictionary.Add(Object, Object)
- uid: System.Collections.ObjectModel.ReadOnlyDictionary`2.System#Collections#IDictionary#Clear
  commentId: M:System.Collections.ObjectModel.ReadOnlyDictionary`2.System#Collections#IDictionary#Clear
  id: System#Collections#IDictionary#Clear
  isEii: true
  parent: System.Collections.ObjectModel.ReadOnlyDictionary`2
  langs:
  - csharp
  - vb
  name: IDictionary.Clear()
  fullName: System.Collections.ObjectModel.ReadOnlyDictionary<TKey, TValue>.System.Collections.IDictionary.Clear()
  type: Method
  source:
    remote:
      path: src/System.ObjectModel/src/System/Collections/ObjectModel/ReadOnlyDictionary.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: System.Collections.IDictionary.Clear
    path: src/System.ObjectModel/src/System/Collections/ObjectModel/ReadOnlyDictionary.cs
    startLine: 195
  assemblies:
  - System.ObjectModel
  namespace: System.Collections.ObjectModel
  summary: "\n<p>Throws a <xref href=\"System.NotSupportedException\" data-throw-if-not-resolved=\"false\"></xref> exception in all cases.</p>\n"
  syntax:
    content: void IDictionary.Clear()
    content.vb: Sub System.Collections.IDictionary.Clear Implements IDictionary.Clear
  exceptions:
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "\n<p>In all cases.</p>\n"
  implements:
  - System.Collections.IDictionary.Clear
  fullName.vb: System.Collections.ObjectModel.ReadOnlyDictionary(Of TKey, TValue).System.Collections.IDictionary.Clear()
  name.vb: System.Collections.IDictionary.Clear()
  nameWithType: ReadOnlyDictionary<TKey, TValue>.IDictionary.Clear()
  nameWithType.vb: ReadOnlyDictionary(Of TKey, TValue).System.Collections.IDictionary.Clear()
- uid: System.Collections.ObjectModel.ReadOnlyDictionary`2.System#Collections#IDictionary#Contains(System.Object)
  commentId: M:System.Collections.ObjectModel.ReadOnlyDictionary`2.System#Collections#IDictionary#Contains(System.Object)
  id: System#Collections#IDictionary#Contains(System.Object)
  isEii: true
  parent: System.Collections.ObjectModel.ReadOnlyDictionary`2
  langs:
  - csharp
  - vb
  name: IDictionary.Contains(Object)
  fullName: System.Collections.ObjectModel.ReadOnlyDictionary<TKey, TValue>.System.Collections.IDictionary.Contains(System.Object)
  type: Method
  source:
    remote:
      path: src/System.ObjectModel/src/System/Collections/ObjectModel/ReadOnlyDictionary.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: System.Collections.IDictionary.Contains
    path: src/System.ObjectModel/src/System/Collections/ObjectModel/ReadOnlyDictionary.cs
    startLine: 200
  assemblies:
  - System.ObjectModel
  namespace: System.Collections.ObjectModel
  summary: "\n<p>Determines whether the dictionary contains an element that has the specified key.</p>\n"
  syntax:
    content: bool IDictionary.Contains(object key)
    content.vb: Function System.Collections.IDictionary.Contains(key As Object) As Boolean Implements IDictionary.Contains
    parameters:
    - id: key
      type: System.Object
      description: "\n<p>The key to locate in the dictionary.</p>\n"
    return:
      type: System.Boolean
      description: "\n<p>\n<strong>true</strong> if the dictionary contains an element that has the specified key; otherwise, <strong>false</strong>.</p>\n"
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "\n<p>\n<em>key</em> is <strong>null</strong>. </p>\n"
  implements:
  - System.Collections.IDictionary.Contains(System.Object)
  fullName.vb: System.Collections.ObjectModel.ReadOnlyDictionary(Of TKey, TValue).System.Collections.IDictionary.Contains(System.Object)
  name.vb: System.Collections.IDictionary.Contains(Object)
  nameWithType: ReadOnlyDictionary<TKey, TValue>.IDictionary.Contains(Object)
  nameWithType.vb: ReadOnlyDictionary(Of TKey, TValue).System.Collections.IDictionary.Contains(Object)
- uid: System.Collections.ObjectModel.ReadOnlyDictionary`2.System#Collections#IDictionary#GetEnumerator
  commentId: M:System.Collections.ObjectModel.ReadOnlyDictionary`2.System#Collections#IDictionary#GetEnumerator
  id: System#Collections#IDictionary#GetEnumerator
  isEii: true
  parent: System.Collections.ObjectModel.ReadOnlyDictionary`2
  langs:
  - csharp
  - vb
  name: IDictionary.GetEnumerator()
  fullName: System.Collections.ObjectModel.ReadOnlyDictionary<TKey, TValue>.System.Collections.IDictionary.GetEnumerator()
  type: Method
  source:
    remote:
      path: src/System.ObjectModel/src/System/Collections/ObjectModel/ReadOnlyDictionary.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: System.Collections.IDictionary.GetEnumerator
    path: src/System.ObjectModel/src/System/Collections/ObjectModel/ReadOnlyDictionary.cs
    startLine: 205
  assemblies:
  - System.ObjectModel
  namespace: System.Collections.ObjectModel
  summary: "\n<p>Returns an enumerator for the dictionary.</p>\n"
  syntax:
    content: IDictionaryEnumerator IDictionary.GetEnumerator()
    content.vb: Function System.Collections.IDictionary.GetEnumerator As IDictionaryEnumerator Implements IDictionary.GetEnumerator
    return:
      type: System.Collections.IDictionaryEnumerator
      description: "\n<p>An enumerator for the dictionary.</p>\n"
  implements:
  - System.Collections.IDictionary.GetEnumerator
  fullName.vb: System.Collections.ObjectModel.ReadOnlyDictionary(Of TKey, TValue).System.Collections.IDictionary.GetEnumerator()
  name.vb: System.Collections.IDictionary.GetEnumerator()
  nameWithType: ReadOnlyDictionary<TKey, TValue>.IDictionary.GetEnumerator()
  nameWithType.vb: ReadOnlyDictionary(Of TKey, TValue).System.Collections.IDictionary.GetEnumerator()
- uid: System.Collections.ObjectModel.ReadOnlyDictionary`2.System#Collections#IDictionary#Remove(System.Object)
  commentId: M:System.Collections.ObjectModel.ReadOnlyDictionary`2.System#Collections#IDictionary#Remove(System.Object)
  id: System#Collections#IDictionary#Remove(System.Object)
  isEii: true
  parent: System.Collections.ObjectModel.ReadOnlyDictionary`2
  langs:
  - csharp
  - vb
  name: IDictionary.Remove(Object)
  fullName: System.Collections.ObjectModel.ReadOnlyDictionary<TKey, TValue>.System.Collections.IDictionary.Remove(System.Object)
  type: Method
  source:
    remote:
      path: src/System.ObjectModel/src/System/Collections/ObjectModel/ReadOnlyDictionary.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: System.Collections.IDictionary.Remove
    path: src/System.ObjectModel/src/System/Collections/ObjectModel/ReadOnlyDictionary.cs
    startLine: 233
  assemblies:
  - System.ObjectModel
  namespace: System.Collections.ObjectModel
  summary: "\n<p>Throws a <xref href=\"System.NotSupportedException\" data-throw-if-not-resolved=\"false\"></xref> exception in all cases.</p>\n"
  syntax:
    content: void IDictionary.Remove(object key)
    content.vb: Sub System.Collections.IDictionary.Remove(key As Object) Implements IDictionary.Remove
    parameters:
    - id: key
      type: System.Object
      description: "\n<p>The key of the element to remove. </p>\n"
  exceptions:
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "\n<p>In all cases.</p>\n"
  implements:
  - System.Collections.IDictionary.Remove(System.Object)
  fullName.vb: System.Collections.ObjectModel.ReadOnlyDictionary(Of TKey, TValue).System.Collections.IDictionary.Remove(System.Object)
  name.vb: System.Collections.IDictionary.Remove(Object)
  nameWithType: ReadOnlyDictionary<TKey, TValue>.IDictionary.Remove(Object)
  nameWithType.vb: ReadOnlyDictionary(Of TKey, TValue).System.Collections.IDictionary.Remove(Object)
- uid: System.Collections.ObjectModel.ReadOnlyDictionary`2.System#Collections#IEnumerable#GetEnumerator
  commentId: M:System.Collections.ObjectModel.ReadOnlyDictionary`2.System#Collections#IEnumerable#GetEnumerator
  id: System#Collections#IEnumerable#GetEnumerator
  isEii: true
  parent: System.Collections.ObjectModel.ReadOnlyDictionary`2
  langs:
  - csharp
  - vb
  name: IEnumerable.GetEnumerator()
  fullName: System.Collections.ObjectModel.ReadOnlyDictionary<TKey, TValue>.System.Collections.IEnumerable.GetEnumerator()
  type: Method
  source:
    remote:
      path: src/System.ObjectModel/src/System/Collections/ObjectModel/ReadOnlyDictionary.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: System.Collections.IEnumerable.GetEnumerator
    path: src/System.ObjectModel/src/System/Collections/ObjectModel/ReadOnlyDictionary.cs
    startLine: 172
  assemblies:
  - System.ObjectModel
  namespace: System.Collections.ObjectModel
  summary: "\n<p>Returns an enumerator that iterates through a collection.</p>\n"
  syntax:
    content: IEnumerator IEnumerable.GetEnumerator()
    content.vb: Function System.Collections.IEnumerable.GetEnumerator As IEnumerator Implements IEnumerable.GetEnumerator
    return:
      type: System.Collections.IEnumerator
      description: "\n<p>An enumerator that can be used to iterate through the collection.</p>\n"
  implements:
  - System.Collections.IEnumerable.GetEnumerator
  fullName.vb: System.Collections.ObjectModel.ReadOnlyDictionary(Of TKey, TValue).System.Collections.IEnumerable.GetEnumerator()
  name.vb: System.Collections.IEnumerable.GetEnumerator()
  nameWithType: ReadOnlyDictionary<TKey, TValue>.IEnumerable.GetEnumerator()
  nameWithType.vb: ReadOnlyDictionary(Of TKey, TValue).System.Collections.IEnumerable.GetEnumerator()
- uid: System.Collections.ObjectModel.ReadOnlyDictionary`2.TryGetValue(`0,`1@)
  commentId: M:System.Collections.ObjectModel.ReadOnlyDictionary`2.TryGetValue(`0,`1@)
  id: TryGetValue(`0,`1@)
  parent: System.Collections.ObjectModel.ReadOnlyDictionary`2
  langs:
  - csharp
  - vb
  name: TryGetValue(TKey, out TValue)
  fullName: System.Collections.ObjectModel.ReadOnlyDictionary<TKey, TValue>.TryGetValue(TKey, out TValue)
  type: Method
  source:
    remote:
      path: src/System.ObjectModel/src/System/Collections/ObjectModel/ReadOnlyDictionary.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: TryGetValue
    path: src/System.ObjectModel/src/System/Collections/ObjectModel/ReadOnlyDictionary.cs
    startLine: 77
  assemblies:
  - System.ObjectModel
  namespace: System.Collections.ObjectModel
  summary: "\n<p>Retrieves the value that is associated with the specified key.</p>\n"
  syntax:
    content: public bool TryGetValue(TKey key, out TValue value)
    content.vb: Public Function TryGetValue(key As TKey, ByRef value As TValue) As Boolean
    parameters:
    - id: key
      type: '{TKey}'
      description: "\n<p>The key whose value will be retrieved.</p>\n"
    - id: value
      type: '{TValue}'
      description: "\n<p>When this method returns, the value associated with the specified key, if the key is found; otherwise, the default value for the type of the <em>value</em> parameter. This parameter is passed uninitialized.</p>\n"
    return:
      type: System.Boolean
      description: "\n<p>\n<strong>true</strong> if the object that implements <xref href=\"System.Collections.ObjectModel.ReadOnlyDictionary`2\" data-throw-if-not-resolved=\"false\"></xref> contains an element with the specified key; otherwise, <strong>false</strong>.</p>\n"
  implements:
  - System.Collections.Generic.IDictionary{{TKey},{TValue}}.TryGetValue({TKey},{TValue}@)
  - System.Collections.Generic.IReadOnlyDictionary{{TKey},{TValue}}.TryGetValue({TKey},{TValue}@)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: System.Collections.ObjectModel.ReadOnlyDictionary(Of TKey, TValue).TryGetValue(TKey, ByRef TValue)
  name.vb: TryGetValue(TKey, ByRef TValue)
  nameWithType: ReadOnlyDictionary<TKey, TValue>.TryGetValue(TKey, out TValue)
  nameWithType.vb: ReadOnlyDictionary(Of TKey, TValue).TryGetValue(TKey, ByRef TValue)
references:
- uid: System.Collections.ObjectModel
  isExternal: false
  name: System.Collections.ObjectModel
  fullName: System.Collections.ObjectModel
  nameWithType: System.Collections.ObjectModel
  commentId: N:System.Collections.ObjectModel
- uid: System.Object
  parent: System
  isExternal: false
  name: Object
  fullName: System.Object
  nameWithType: Object
  commentId: T:System.Object
- uid: System.Collections.Generic.IDictionary{{TKey},{TValue}}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IDictionary`2
  name: IDictionary<TKey, TValue>
  fullName: System.Collections.Generic.IDictionary<TKey, TValue>
  fullname.vb: System.Collections.Generic.IDictionary(Of TKey, TValue)
  name.vb: IDictionary(Of TKey, TValue)
  spec.csharp:
  - uid: System.Collections.Generic.IDictionary`2
    name: IDictionary
    fullName: System.Collections.Generic.IDictionary
    isExternal: true
  - name: <
    fullName: <
  - name: TKey
    fullName: TKey
  - name: ', '
    fullName: ', '
  - name: TValue
    fullName: TValue
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IDictionary`2
    name: IDictionary
    fullName: System.Collections.Generic.IDictionary
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - name: TKey
    fullName: TKey
  - name: ', '
    fullName: ', '
  - name: TValue
    fullName: TValue
  - name: )
    fullName: )
  nameWithType: IDictionary<TKey, TValue>
  nameWithType.vb: IDictionary(Of TKey, TValue)
  commentId: T:System.Collections.Generic.IDictionary{`0,`1}
- uid: System.Collections.Generic.ICollection{System.Collections.Generic.KeyValuePair{{TKey},{TValue}}}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.ICollection`1
  name: ICollection<KeyValuePair<TKey, TValue>>
  fullName: System.Collections.Generic.ICollection<System.Collections.Generic.KeyValuePair<TKey, TValue>>
  fullname.vb: System.Collections.Generic.ICollection(Of System.Collections.Generic.KeyValuePair(Of TKey, TValue))
  name.vb: ICollection(Of KeyValuePair(Of TKey, TValue))
  spec.csharp:
  - uid: System.Collections.Generic.ICollection`1
    name: ICollection
    fullName: System.Collections.Generic.ICollection
  - name: <
    fullName: <
  - uid: System.Collections.Generic.KeyValuePair`2
    name: KeyValuePair
    fullName: System.Collections.Generic.KeyValuePair
  - name: <
    fullName: <
  - name: TKey
    fullName: TKey
  - name: ', '
    fullName: ', '
  - name: TValue
    fullName: TValue
  - name: '>'
    fullName: '>'
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.ICollection`1
    name: ICollection
    fullName: System.Collections.Generic.ICollection
  - name: '(Of '
    fullName: '(Of '
  - uid: System.Collections.Generic.KeyValuePair`2
    name: KeyValuePair
    fullName: System.Collections.Generic.KeyValuePair
  - name: '(Of '
    fullName: '(Of '
  - name: TKey
    fullName: TKey
  - name: ', '
    fullName: ', '
  - name: TValue
    fullName: TValue
  - name: )
    fullName: )
  - name: )
    fullName: )
  nameWithType: ICollection<KeyValuePair<TKey, TValue>>
  nameWithType.vb: ICollection(Of KeyValuePair(Of TKey, TValue))
  commentId: T:System.Collections.Generic.ICollection{System.Collections.Generic.KeyValuePair{`0,`1}}
- uid: System.Collections.Generic.IReadOnlyDictionary{{TKey},{TValue}}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IReadOnlyDictionary`2
  name: IReadOnlyDictionary<TKey, TValue>
  fullName: System.Collections.Generic.IReadOnlyDictionary<TKey, TValue>
  fullname.vb: System.Collections.Generic.IReadOnlyDictionary(Of TKey, TValue)
  name.vb: IReadOnlyDictionary(Of TKey, TValue)
  spec.csharp:
  - uid: System.Collections.Generic.IReadOnlyDictionary`2
    name: IReadOnlyDictionary
    fullName: System.Collections.Generic.IReadOnlyDictionary
    isExternal: true
  - name: <
    fullName: <
  - name: TKey
    fullName: TKey
  - name: ', '
    fullName: ', '
  - name: TValue
    fullName: TValue
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IReadOnlyDictionary`2
    name: IReadOnlyDictionary
    fullName: System.Collections.Generic.IReadOnlyDictionary
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - name: TKey
    fullName: TKey
  - name: ', '
    fullName: ', '
  - name: TValue
    fullName: TValue
  - name: )
    fullName: )
  nameWithType: IReadOnlyDictionary<TKey, TValue>
  nameWithType.vb: IReadOnlyDictionary(Of TKey, TValue)
  commentId: T:System.Collections.Generic.IReadOnlyDictionary{`0,`1}
- uid: System.Collections.Generic.IReadOnlyCollection{System.Collections.Generic.KeyValuePair{{TKey},{TValue}}}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IReadOnlyCollection`1
  name: IReadOnlyCollection<KeyValuePair<TKey, TValue>>
  fullName: System.Collections.Generic.IReadOnlyCollection<System.Collections.Generic.KeyValuePair<TKey, TValue>>
  fullname.vb: System.Collections.Generic.IReadOnlyCollection(Of System.Collections.Generic.KeyValuePair(Of TKey, TValue))
  name.vb: IReadOnlyCollection(Of KeyValuePair(Of TKey, TValue))
  spec.csharp:
  - uid: System.Collections.Generic.IReadOnlyCollection`1
    name: IReadOnlyCollection
    fullName: System.Collections.Generic.IReadOnlyCollection
  - name: <
    fullName: <
  - uid: System.Collections.Generic.KeyValuePair`2
    name: KeyValuePair
    fullName: System.Collections.Generic.KeyValuePair
  - name: <
    fullName: <
  - name: TKey
    fullName: TKey
  - name: ', '
    fullName: ', '
  - name: TValue
    fullName: TValue
  - name: '>'
    fullName: '>'
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IReadOnlyCollection`1
    name: IReadOnlyCollection
    fullName: System.Collections.Generic.IReadOnlyCollection
  - name: '(Of '
    fullName: '(Of '
  - uid: System.Collections.Generic.KeyValuePair`2
    name: KeyValuePair
    fullName: System.Collections.Generic.KeyValuePair
  - name: '(Of '
    fullName: '(Of '
  - name: TKey
    fullName: TKey
  - name: ', '
    fullName: ', '
  - name: TValue
    fullName: TValue
  - name: )
    fullName: )
  - name: )
    fullName: )
  nameWithType: IReadOnlyCollection<KeyValuePair<TKey, TValue>>
  nameWithType.vb: IReadOnlyCollection(Of KeyValuePair(Of TKey, TValue))
  commentId: T:System.Collections.Generic.IReadOnlyCollection{System.Collections.Generic.KeyValuePair{`0,`1}}
- uid: System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{{TKey},{TValue}}}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IEnumerable`1
  name: IEnumerable<KeyValuePair<TKey, TValue>>
  fullName: System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<TKey, TValue>>
  fullname.vb: System.Collections.Generic.IEnumerable(Of System.Collections.Generic.KeyValuePair(Of TKey, TValue))
  name.vb: IEnumerable(Of KeyValuePair(Of TKey, TValue))
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
  - name: <
    fullName: <
  - uid: System.Collections.Generic.KeyValuePair`2
    name: KeyValuePair
    fullName: System.Collections.Generic.KeyValuePair
  - name: <
    fullName: <
  - name: TKey
    fullName: TKey
  - name: ', '
    fullName: ', '
  - name: TValue
    fullName: TValue
  - name: '>'
    fullName: '>'
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
  - name: '(Of '
    fullName: '(Of '
  - uid: System.Collections.Generic.KeyValuePair`2
    name: KeyValuePair
    fullName: System.Collections.Generic.KeyValuePair
  - name: '(Of '
    fullName: '(Of '
  - name: TKey
    fullName: TKey
  - name: ', '
    fullName: ', '
  - name: TValue
    fullName: TValue
  - name: )
    fullName: )
  - name: )
    fullName: )
  nameWithType: IEnumerable<KeyValuePair<TKey, TValue>>
  nameWithType.vb: IEnumerable(Of KeyValuePair(Of TKey, TValue))
  commentId: T:System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{`0,`1}}
- uid: System.Collections.IDictionary
  parent: System.Collections
  isExternal: false
  name: IDictionary
  fullName: System.Collections.IDictionary
  nameWithType: IDictionary
  commentId: T:System.Collections.IDictionary
- uid: System.Collections.ICollection
  parent: System.Collections
  isExternal: false
  name: ICollection
  fullName: System.Collections.ICollection
  nameWithType: ICollection
  commentId: T:System.Collections.ICollection
- uid: System.Collections.IEnumerable
  parent: System.Collections
  isExternal: false
  name: IEnumerable
  fullName: System.Collections.IEnumerable
  nameWithType: IEnumerable
  commentId: T:System.Collections.IEnumerable
- uid: System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  nameWithType: Object.ToString()
  commentId: M:System.Object.ToString
- uid: System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
  nameWithType: Object.Equals(Object)
  commentId: M:System.Object.Equals(System.Object)
- uid: System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
  nameWithType: Object.Equals(Object, Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
  nameWithType: Object.ReferenceEquals(Object, Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
- uid: System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  nameWithType: Object.GetHashCode()
  commentId: M:System.Object.GetHashCode
- uid: System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  nameWithType: Object.GetType()
  commentId: M:System.Object.GetType
- uid: System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  nameWithType: Object.MemberwiseClone()
  commentId: M:System.Object.MemberwiseClone
- uid: System.Collections.IEnumerable.System.Linq.Queryable.AsQueryable
  parent: System.Linq.Queryable
  definition: System.Linq.Queryable.AsQueryable(System.Collections.IEnumerable)
  name: AsQueryable()
  fullName: System.Linq.Queryable.AsQueryable()
  spec.csharp:
  - uid: System.Linq.Queryable.AsQueryable
    name: AsQueryable
    fullName: System.Linq.Queryable.AsQueryable
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Linq.Queryable.AsQueryable
    name: AsQueryable
    fullName: System.Linq.Queryable.AsQueryable
  - name: (
    fullName: (
  - name: )
    fullName: )
  nameWithType: Queryable.AsQueryable()
  commentId: M:System.Linq.Queryable.AsQueryable(System.Collections.IEnumerable)
- uid: System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{`0,`1}}.System.Linq.Queryable.AsQueryable``1
  parent: System.Linq.Queryable
  definition: System.Linq.Queryable.AsQueryable``1(System.Collections.Generic.IEnumerable{``0})
  name: AsQueryable<KeyValuePair<TKey, TValue>>()
  fullName: System.Linq.Queryable.AsQueryable<System.Collections.Generic.KeyValuePair<TKey, TValue>>()
  fullname.vb: System.Linq.Queryable.AsQueryable(Of System.Collections.Generic.KeyValuePair(Of TKey, TValue))()
  name.vb: AsQueryable(Of KeyValuePair(Of TKey, TValue))()
  spec.csharp:
  - uid: System.Linq.Queryable.AsQueryable``1
    name: AsQueryable<KeyValuePair<TKey, TValue>>
    fullName: System.Linq.Queryable.AsQueryable<System.Collections.Generic.KeyValuePair<TKey, TValue>>
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Linq.Queryable.AsQueryable``1
    name: AsQueryable(Of KeyValuePair(Of TKey, TValue))
    fullName: System.Linq.Queryable.AsQueryable(Of System.Collections.Generic.KeyValuePair(Of TKey, TValue))
  - name: (
    fullName: (
  - name: )
    fullName: )
  nameWithType: Queryable.AsQueryable<KeyValuePair<TKey, TValue>>()
  nameWithType.vb: Queryable.AsQueryable(Of KeyValuePair(Of TKey, TValue))()
  commentId: M:System.Linq.Queryable.AsQueryable``1(System.Collections.Generic.IEnumerable{``0})
- uid: System.Collections.IEnumerable.System.Linq.ParallelEnumerable.AsParallel
  parent: System.Linq.ParallelEnumerable
  definition: System.Linq.ParallelEnumerable.AsParallel(System.Collections.IEnumerable)
  name: AsParallel()
  fullName: System.Linq.ParallelEnumerable.AsParallel()
  spec.csharp:
  - uid: System.Linq.ParallelEnumerable.AsParallel
    name: AsParallel
    fullName: System.Linq.ParallelEnumerable.AsParallel
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Linq.ParallelEnumerable.AsParallel
    name: AsParallel
    fullName: System.Linq.ParallelEnumerable.AsParallel
  - name: (
    fullName: (
  - name: )
    fullName: )
  nameWithType: ParallelEnumerable.AsParallel()
  commentId: M:System.Linq.ParallelEnumerable.AsParallel(System.Collections.IEnumerable)
- uid: System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{`0,`1}}.System.Linq.ParallelEnumerable.AsParallel``1
  parent: System.Linq.ParallelEnumerable
  definition: System.Linq.ParallelEnumerable.AsParallel``1(System.Collections.Generic.IEnumerable{``0})
  name: AsParallel<KeyValuePair<TKey, TValue>>()
  fullName: System.Linq.ParallelEnumerable.AsParallel<System.Collections.Generic.KeyValuePair<TKey, TValue>>()
  fullname.vb: System.Linq.ParallelEnumerable.AsParallel(Of System.Collections.Generic.KeyValuePair(Of TKey, TValue))()
  name.vb: AsParallel(Of KeyValuePair(Of TKey, TValue))()
  spec.csharp:
  - uid: System.Linq.ParallelEnumerable.AsParallel``1
    name: AsParallel<KeyValuePair<TKey, TValue>>
    fullName: System.Linq.ParallelEnumerable.AsParallel<System.Collections.Generic.KeyValuePair<TKey, TValue>>
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Linq.ParallelEnumerable.AsParallel``1
    name: AsParallel(Of KeyValuePair(Of TKey, TValue))
    fullName: System.Linq.ParallelEnumerable.AsParallel(Of System.Collections.Generic.KeyValuePair(Of TKey, TValue))
  - name: (
    fullName: (
  - name: )
    fullName: )
  nameWithType: ParallelEnumerable.AsParallel<KeyValuePair<TKey, TValue>>()
  nameWithType.vb: ParallelEnumerable.AsParallel(Of KeyValuePair(Of TKey, TValue))()
  commentId: M:System.Linq.ParallelEnumerable.AsParallel``1(System.Collections.Generic.IEnumerable{``0})
- uid: System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{`0,`1}}.System.Linq.Enumerable.Aggregate``1(System.Func{System.Collections.Generic.KeyValuePair{{TKey},{TValue}},System.Collections.Generic.KeyValuePair{{TKey},{TValue}},System.Collections.Generic.KeyValuePair{{TKey},{TValue}}})
  parent: System.Linq.Enumerable
  definition: System.Linq.Enumerable.Aggregate``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``0,``0})
  name: Aggregate<KeyValuePair<TKey, TValue>>(Func<KeyValuePair<TKey, TValue>, KeyValuePair<TKey, TValue>, KeyValuePair<TKey, TValue>>)
  fullName: System.Linq.Enumerable.Aggregate<System.Collections.Generic.KeyValuePair<TKey, TValue>>(System.Func<System.Collections.Generic.KeyValuePair<TKey, TValue>, System.Collections.Generic.KeyValuePair<TKey, TValue>, System.Collections.Generic.KeyValuePair<TKey, TValue>>)
  fullname.vb: System.Linq.Enumerable.Aggregate(Of System.Collections.Generic.KeyValuePair(Of TKey, TValue))(System.Func(Of System.Collections.Generic.KeyValuePair(Of TKey, TValue), System.Collections.Generic.KeyValuePair(Of TKey, TValue), System.Collections.Generic.KeyValuePair(Of TKey, TValue)))
  name.vb: Aggregate(Of KeyValuePair(Of TKey, TValue))(Func(Of KeyValuePair(Of TKey, TValue), KeyValuePair(Of TKey, TValue), KeyValuePair(Of TKey, TValue)))
  spec.csharp:
  - uid: System.Linq.Enumerable.Aggregate``1(System.Func{``0,``0,``0})
    name: Aggregate<KeyValuePair<TKey, TValue>>
    fullName: System.Linq.Enumerable.Aggregate<System.Collections.Generic.KeyValuePair<TKey, TValue>>
  - name: (
    fullName: (
  - uid: System.Func`3
    name: Func
    fullName: System.Func
    isExternal: true
  - name: <
    fullName: <
  - uid: System.Collections.Generic.KeyValuePair`2
    name: KeyValuePair
    fullName: System.Collections.Generic.KeyValuePair
    isExternal: true
  - name: <
    fullName: <
  - name: TKey
    fullName: TKey
  - name: ', '
    fullName: ', '
  - name: TValue
    fullName: TValue
  - name: '>'
    fullName: '>'
  - name: ', '
    fullName: ', '
  - uid: System.Collections.Generic.KeyValuePair`2
    name: KeyValuePair
    fullName: System.Collections.Generic.KeyValuePair
    isExternal: true
  - name: <
    fullName: <
  - name: TKey
    fullName: TKey
  - name: ', '
    fullName: ', '
  - name: TValue
    fullName: TValue
  - name: '>'
    fullName: '>'
  - name: ', '
    fullName: ', '
  - uid: System.Collections.Generic.KeyValuePair`2
    name: KeyValuePair
    fullName: System.Collections.Generic.KeyValuePair
    isExternal: true
  - name: <
    fullName: <
  - name: TKey
    fullName: TKey
  - name: ', '
    fullName: ', '
  - name: TValue
    fullName: TValue
  - name: '>'
    fullName: '>'
  - name: '>'
    fullName: '>'
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Linq.Enumerable.Aggregate``1(System.Func{``0,``0,``0})
    name: Aggregate(Of KeyValuePair(Of TKey, TValue))
    fullName: System.Linq.Enumerable.Aggregate(Of System.Collections.Generic.KeyValuePair(Of TKey, TValue))
  - name: (
    fullName: (
  - uid: System.Func`3
    name: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - uid: System.Collections.Generic.KeyValuePair`2
    name: KeyValuePair
    fullName: System.Collections.Generic.KeyValuePair
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - name: TKey
    fullName: TKey
  - name: ', '
    fullName: ', '
  - name: TValue
    fullName: TValue
  - name: )
    fullName: )
  - name: ', '
    fullName: ', '
  - uid: System.Collections.Generic.KeyValuePair`2
    name: KeyValuePair
    fullName: System.Collections.Generic.KeyValuePair
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - name: TKey
    fullName: TKey
  - name: ', '
    fullName: ', '
  - name: TValue
    fullName: TValue
  - name: )
    fullName: )
  - name: ', '
    fullName: ', '
  - uid: System.Collections.Generic.KeyValuePair`2
    name: KeyValuePair
    fullName: System.Collections.Generic.KeyValuePair
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - name: TKey
    fullName: TKey
  - name: ', '
    fullName: ', '
  - name: TValue
    fullName: TValue
  - name: )
    fullName: )
  - name: )
    fullName: )
  - name: )
    fullName: )
  nameWithType: Enumerable.Aggregate<KeyValuePair<TKey, TValue>>(Func<KeyValuePair<TKey, TValue>, KeyValuePair<TKey, TValue>, KeyValuePair<TKey, TValue>>)
  nameWithType.vb: Enumerable.Aggregate(Of KeyValuePair(Of TKey, TValue))(Func(Of KeyValuePair(Of TKey, TValue), KeyValuePair(Of TKey, TValue), KeyValuePair(Of TKey, TValue)))
  commentId: M:System.Linq.Enumerable.Aggregate``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``0,``0})
- uid: System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{`0,`1}}.System.Linq.Enumerable.Aggregate``2({TAccumulate},System.Func{{TAccumulate},System.Collections.Generic.KeyValuePair{{TKey},{TValue}},{TAccumulate}})
  parent: System.Linq.Enumerable
  definition: System.Linq.Enumerable.Aggregate``2(System.Collections.Generic.IEnumerable{``0},``1,System.Func{``1,``0,``1})
  name: Aggregate<KeyValuePair<TKey, TValue>, TAccumulate>(TAccumulate, Func<TAccumulate, KeyValuePair<TKey, TValue>, TAccumulate>)
  fullName: System.Linq.Enumerable.Aggregate<System.Collections.Generic.KeyValuePair<TKey, TValue>, TAccumulate>(TAccumulate, System.Func<TAccumulate, System.Collections.Generic.KeyValuePair<TKey, TValue>, TAccumulate>)
  fullname.vb: System.Linq.Enumerable.Aggregate(Of System.Collections.Generic.KeyValuePair(Of TKey, TValue), TAccumulate)(TAccumulate, System.Func(Of TAccumulate, System.Collections.Generic.KeyValuePair(Of TKey, TValue), TAccumulate))
  name.vb: Aggregate(Of KeyValuePair(Of TKey, TValue), TAccumulate)(TAccumulate, Func(Of TAccumulate, KeyValuePair(Of TKey, TValue), TAccumulate))
  spec.csharp:
  - uid: System.Linq.Enumerable.Aggregate``2(``1,System.Func{``1,``0,``1})
    name: Aggregate<KeyValuePair<TKey, TValue>, TAccumulate>
    fullName: System.Linq.Enumerable.Aggregate<System.Collections.Generic.KeyValuePair<TKey, TValue>, TAccumulate>
  - name: (
    fullName: (
  - name: TAccumulate
    fullName: TAccumulate
  - name: ', '
    fullName: ', '
  - uid: System.Func`3
    name: Func
    fullName: System.Func
    isExternal: true
  - name: <
    fullName: <
  - name: TAccumulate
    fullName: TAccumulate
  - name: ', '
    fullName: ', '
  - uid: System.Collections.Generic.KeyValuePair`2
    name: KeyValuePair
    fullName: System.Collections.Generic.KeyValuePair
    isExternal: true
  - name: <
    fullName: <
  - name: TKey
    fullName: TKey
  - name: ', '
    fullName: ', '
  - name: TValue
    fullName: TValue
  - name: '>'
    fullName: '>'
  - name: ', '
    fullName: ', '
  - name: TAccumulate
    fullName: TAccumulate
  - name: '>'
    fullName: '>'
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Linq.Enumerable.Aggregate``2(``1,System.Func{``1,``0,``1})
    name: Aggregate(Of KeyValuePair(Of TKey, TValue), TAccumulate)
    fullName: System.Linq.Enumerable.Aggregate(Of System.Collections.Generic.KeyValuePair(Of TKey, TValue), TAccumulate)
  - name: (
    fullName: (
  - name: TAccumulate
    fullName: TAccumulate
  - name: ', '
    fullName: ', '
  - uid: System.Func`3
    name: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - name: TAccumulate
    fullName: TAccumulate
  - name: ', '
    fullName: ', '
  - uid: System.Collections.Generic.KeyValuePair`2
    name: KeyValuePair
    fullName: System.Collections.Generic.KeyValuePair
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - name: TKey
    fullName: TKey
  - name: ', '
    fullName: ', '
  - name: TValue
    fullName: TValue
  - name: )
    fullName: )
  - name: ', '
    fullName: ', '
  - name: TAccumulate
    fullName: TAccumulate
  - name: )
    fullName: )
  - name: )
    fullName: )
  nameWithType: Enumerable.Aggregate<KeyValuePair<TKey, TValue>, TAccumulate>(TAccumulate, Func<TAccumulate, KeyValuePair<TKey, TValue>, TAccumulate>)
  nameWithType.vb: Enumerable.Aggregate(Of KeyValuePair(Of TKey, TValue), TAccumulate)(TAccumulate, Func(Of TAccumulate, KeyValuePair(Of TKey, TValue), TAccumulate))
  commentId: M:System.Linq.Enumerable.Aggregate``2(System.Collections.Generic.IEnumerable{``0},``1,System.Func{``1,``0,``1})
- uid: System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{`0,`1}}.System.Linq.Enumerable.Aggregate``3({TAccumulate},System.Func{{TAccumulate},System.Collections.Generic.KeyValuePair{{TKey},{TValue}},{TAccumulate}},System.Func{{TAccumulate},{TResult}})
  parent: System.Linq.Enumerable
  definition: System.Linq.Enumerable.Aggregate``3(System.Collections.Generic.IEnumerable{``0},``1,System.Func{``1,``0,``1},System.Func{``1,``2})
  name: Aggregate<KeyValuePair<TKey, TValue>, TAccumulate, TResult>(TAccumulate, Func<TAccumulate, KeyValuePair<TKey, TValue>, TAccumulate>, Func<TAccumulate, TResult>)
  fullName: System.Linq.Enumerable.Aggregate<System.Collections.Generic.KeyValuePair<TKey, TValue>, TAccumulate, TResult>(TAccumulate, System.Func<TAccumulate, System.Collections.Generic.KeyValuePair<TKey, TValue>, TAccumulate>, System.Func<TAccumulate, TResult>)
  fullname.vb: System.Linq.Enumerable.Aggregate(Of System.Collections.Generic.KeyValuePair(Of TKey, TValue), TAccumulate, TResult)(TAccumulate, System.Func(Of TAccumulate, System.Collections.Generic.KeyValuePair(Of TKey, TValue), TAccumulate), System.Func(Of TAccumulate, TResult))
  name.vb: Aggregate(Of KeyValuePair(Of TKey, TValue), TAccumulate, TResult)(TAccumulate, Func(Of TAccumulate, KeyValuePair(Of TKey, TValue), TAccumulate), Func(Of TAccumulate, TResult))
  spec.csharp:
  - uid: System.Linq.Enumerable.Aggregate``3(``1,System.Func{``1,``0,``1},System.Func{``1,``2})
    name: Aggregate<KeyValuePair<TKey, TValue>, TAccumulate, TResult>
    fullName: System.Linq.Enumerable.Aggregate<System.Collections.Generic.KeyValuePair<TKey, TValue>, TAccumulate, TResult>
  - name: (
    fullName: (
  - name: TAccumulate
    fullName: TAccumulate
  - name: ', '
    fullName: ', '
  - uid: System.Func`3
    name: Func
    fullName: System.Func
    isExternal: true
  - name: <
    fullName: <
  - name: TAccumulate
    fullName: TAccumulate
  - name: ', '
    fullName: ', '
  - uid: System.Collections.Generic.KeyValuePair`2
    name: KeyValuePair
    fullName: System.Collections.Generic.KeyValuePair
    isExternal: true
  - name: <
    fullName: <
  - name: TKey
    fullName: TKey
  - name: ', '
    fullName: ', '
  - name: TValue
    fullName: TValue
  - name: '>'
    fullName: '>'
  - name: ', '
    fullName: ', '
  - name: TAccumulate
    fullName: TAccumulate
  - name: '>'
    fullName: '>'
  - name: ', '
    fullName: ', '
  - uid: System.Func`2
    name: Func
    fullName: System.Func
    isExternal: true
  - name: <
    fullName: <
  - name: TAccumulate
    fullName: TAccumulate
  - name: ', '
    fullName: ', '
  - name: TResult
    fullName: TResult
  - name: '>'
    fullName: '>'
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Linq.Enumerable.Aggregate``3(``1,System.Func{``1,``0,``1},System.Func{``1,``2})
    name: Aggregate(Of KeyValuePair(Of TKey, TValue), TAccumulate, TResult)
    fullName: System.Linq.Enumerable.Aggregate(Of System.Collections.Generic.KeyValuePair(Of TKey, TValue), TAccumulate, TResult)
  - name: (
    fullName: (
  - name: TAccumulate
    fullName: TAccumulate
  - name: ', '
    fullName: ', '
  - uid: System.Func`3
    name: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - name: TAccumulate
    fullName: TAccumulate
  - name: ', '
    fullName: ', '
  - uid: System.Collections.Generic.KeyValuePair`2
    name: KeyValuePair
    fullName: System.Collections.Generic.KeyValuePair
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - name: TKey
    fullName: TKey
  - name: ', '
    fullName: ', '
  - name: TValue
    fullName: TValue
  - name: )
    fullName: )
  - name: ', '
    fullName: ', '
  - name: TAccumulate
    fullName: TAccumulate
  - name: )
    fullName: )
  - name: ', '
    fullName: ', '
  - uid: System.Func`2
    name: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - name: TAccumulate
    fullName: TAccumulate
  - name: ', '
    fullName: ', '
  - name: TResult
    fullName: TResult
  - name: )
    fullName: )
  - name: )
    fullName: )
  nameWithType: Enumerable.Aggregate<KeyValuePair<TKey, TValue>, TAccumulate, TResult>(TAccumulate, Func<TAccumulate, KeyValuePair<TKey, TValue>, TAccumulate>, Func<TAccumulate, TResult>)
  nameWithType.vb: Enumerable.Aggregate(Of KeyValuePair(Of TKey, TValue), TAccumulate, TResult)(TAccumulate, Func(Of TAccumulate, KeyValuePair(Of TKey, TValue), TAccumulate), Func(Of TAccumulate, TResult))
  commentId: M:System.Linq.Enumerable.Aggregate``3(System.Collections.Generic.IEnumerable{``0},``1,System.Func{``1,``0,``1},System.Func{``1,``2})
- uid: System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{`0,`1}}.System.Linq.Enumerable.All``1(System.Func{System.Collections.Generic.KeyValuePair{{TKey},{TValue}},System.Boolean})
  parent: System.Linq.Enumerable
  definition: System.Linq.Enumerable.All``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})
  name: All<KeyValuePair<TKey, TValue>>(Func<KeyValuePair<TKey, TValue>, Boolean>)
  fullName: System.Linq.Enumerable.All<System.Collections.Generic.KeyValuePair<TKey, TValue>>(System.Func<System.Collections.Generic.KeyValuePair<TKey, TValue>, System.Boolean>)
  fullname.vb: System.Linq.Enumerable.All(Of System.Collections.Generic.KeyValuePair(Of TKey, TValue))(System.Func(Of System.Collections.Generic.KeyValuePair(Of TKey, TValue), System.Boolean))
  name.vb: All(Of KeyValuePair(Of TKey, TValue))(Func(Of KeyValuePair(Of TKey, TValue), Boolean))
  spec.csharp:
  - uid: System.Linq.Enumerable.All``1(System.Func{``0,System.Boolean})
    name: All<KeyValuePair<TKey, TValue>>
    fullName: System.Linq.Enumerable.All<System.Collections.Generic.KeyValuePair<TKey, TValue>>
  - name: (
    fullName: (
  - uid: System.Func`2
    name: Func
    fullName: System.Func
    isExternal: true
  - name: <
    fullName: <
  - uid: System.Collections.Generic.KeyValuePair`2
    name: KeyValuePair
    fullName: System.Collections.Generic.KeyValuePair
    isExternal: true
  - name: <
    fullName: <
  - name: TKey
    fullName: TKey
  - name: ', '
    fullName: ', '
  - name: TValue
    fullName: TValue
  - name: '>'
    fullName: '>'
  - name: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: '>'
    fullName: '>'
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Linq.Enumerable.All``1(System.Func{``0,System.Boolean})
    name: All(Of KeyValuePair(Of TKey, TValue))
    fullName: System.Linq.Enumerable.All(Of System.Collections.Generic.KeyValuePair(Of TKey, TValue))
  - name: (
    fullName: (
  - uid: System.Func`2
    name: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - uid: System.Collections.Generic.KeyValuePair`2
    name: KeyValuePair
    fullName: System.Collections.Generic.KeyValuePair
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - name: TKey
    fullName: TKey
  - name: ', '
    fullName: ', '
  - name: TValue
    fullName: TValue
  - name: )
    fullName: )
  - name: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    fullName: )
  - name: )
    fullName: )
  nameWithType: Enumerable.All<KeyValuePair<TKey, TValue>>(Func<KeyValuePair<TKey, TValue>, Boolean>)
  nameWithType.vb: Enumerable.All(Of KeyValuePair(Of TKey, TValue))(Func(Of KeyValuePair(Of TKey, TValue), Boolean))
  commentId: M:System.Linq.Enumerable.All``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})
- uid: System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{`0,`1}}.System.Linq.Enumerable.Any``1
  parent: System.Linq.Enumerable
  definition: System.Linq.Enumerable.Any``1(System.Collections.Generic.IEnumerable{``0})
  name: Any<KeyValuePair<TKey, TValue>>()
  fullName: System.Linq.Enumerable.Any<System.Collections.Generic.KeyValuePair<TKey, TValue>>()
  fullname.vb: System.Linq.Enumerable.Any(Of System.Collections.Generic.KeyValuePair(Of TKey, TValue))()
  name.vb: Any(Of KeyValuePair(Of TKey, TValue))()
  spec.csharp:
  - uid: System.Linq.Enumerable.Any``1
    name: Any<KeyValuePair<TKey, TValue>>
    fullName: System.Linq.Enumerable.Any<System.Collections.Generic.KeyValuePair<TKey, TValue>>
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Linq.Enumerable.Any``1
    name: Any(Of KeyValuePair(Of TKey, TValue))
    fullName: System.Linq.Enumerable.Any(Of System.Collections.Generic.KeyValuePair(Of TKey, TValue))
  - name: (
    fullName: (
  - name: )
    fullName: )
  nameWithType: Enumerable.Any<KeyValuePair<TKey, TValue>>()
  nameWithType.vb: Enumerable.Any(Of KeyValuePair(Of TKey, TValue))()
  commentId: M:System.Linq.Enumerable.Any``1(System.Collections.Generic.IEnumerable{``0})
- uid: System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{`0,`1}}.System.Linq.Enumerable.Any``1(System.Func{System.Collections.Generic.KeyValuePair{{TKey},{TValue}},System.Boolean})
  parent: System.Linq.Enumerable
  definition: System.Linq.Enumerable.Any``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})
  name: Any<KeyValuePair<TKey, TValue>>(Func<KeyValuePair<TKey, TValue>, Boolean>)
  fullName: System.Linq.Enumerable.Any<System.Collections.Generic.KeyValuePair<TKey, TValue>>(System.Func<System.Collections.Generic.KeyValuePair<TKey, TValue>, System.Boolean>)
  fullname.vb: System.Linq.Enumerable.Any(Of System.Collections.Generic.KeyValuePair(Of TKey, TValue))(System.Func(Of System.Collections.Generic.KeyValuePair(Of TKey, TValue), System.Boolean))
  name.vb: Any(Of KeyValuePair(Of TKey, TValue))(Func(Of KeyValuePair(Of TKey, TValue), Boolean))
  spec.csharp:
  - uid: System.Linq.Enumerable.Any``1(System.Func{``0,System.Boolean})
    name: Any<KeyValuePair<TKey, TValue>>
    fullName: System.Linq.Enumerable.Any<System.Collections.Generic.KeyValuePair<TKey, TValue>>
  - name: (
    fullName: (
  - uid: System.Func`2
    name: Func
    fullName: System.Func
    isExternal: true
  - name: <
    fullName: <
  - uid: System.Collections.Generic.KeyValuePair`2
    name: KeyValuePair
    fullName: System.Collections.Generic.KeyValuePair
    isExternal: true
  - name: <
    fullName: <
  - name: TKey
    fullName: TKey
  - name: ', '
    fullName: ', '
  - name: TValue
    fullName: TValue
  - name: '>'
    fullName: '>'
  - name: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: '>'
    fullName: '>'
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Linq.Enumerable.Any``1(System.Func{``0,System.Boolean})
    name: Any(Of KeyValuePair(Of TKey, TValue))
    fullName: System.Linq.Enumerable.Any(Of System.Collections.Generic.KeyValuePair(Of TKey, TValue))
  - name: (
    fullName: (
  - uid: System.Func`2
    name: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - uid: System.Collections.Generic.KeyValuePair`2
    name: KeyValuePair
    fullName: System.Collections.Generic.KeyValuePair
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - name: TKey
    fullName: TKey
  - name: ', '
    fullName: ', '
  - name: TValue
    fullName: TValue
  - name: )
    fullName: )
  - name: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    fullName: )
  - name: )
    fullName: )
  nameWithType: Enumerable.Any<KeyValuePair<TKey, TValue>>(Func<KeyValuePair<TKey, TValue>, Boolean>)
  nameWithType.vb: Enumerable.Any(Of KeyValuePair(Of TKey, TValue))(Func(Of KeyValuePair(Of TKey, TValue), Boolean))
  commentId: M:System.Linq.Enumerable.Any``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})
- uid: System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{`0,`1}}.System.Linq.Enumerable.AsEnumerable``1
  parent: System.Linq.Enumerable
  definition: System.Linq.Enumerable.AsEnumerable``1(System.Collections.Generic.IEnumerable{``0})
  name: AsEnumerable<KeyValuePair<TKey, TValue>>()
  fullName: System.Linq.Enumerable.AsEnumerable<System.Collections.Generic.KeyValuePair<TKey, TValue>>()
  fullname.vb: System.Linq.Enumerable.AsEnumerable(Of System.Collections.Generic.KeyValuePair(Of TKey, TValue))()
  name.vb: AsEnumerable(Of KeyValuePair(Of TKey, TValue))()
  spec.csharp:
  - uid: System.Linq.Enumerable.AsEnumerable``1
    name: AsEnumerable<KeyValuePair<TKey, TValue>>
    fullName: System.Linq.Enumerable.AsEnumerable<System.Collections.Generic.KeyValuePair<TKey, TValue>>
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Linq.Enumerable.AsEnumerable``1
    name: AsEnumerable(Of KeyValuePair(Of TKey, TValue))
    fullName: System.Linq.Enumerable.AsEnumerable(Of System.Collections.Generic.KeyValuePair(Of TKey, TValue))
  - name: (
    fullName: (
  - name: )
    fullName: )
  nameWithType: Enumerable.AsEnumerable<KeyValuePair<TKey, TValue>>()
  nameWithType.vb: Enumerable.AsEnumerable(Of KeyValuePair(Of TKey, TValue))()
  commentId: M:System.Linq.Enumerable.AsEnumerable``1(System.Collections.Generic.IEnumerable{``0})
- uid: System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{`0,`1}}.System.Linq.Enumerable.Average``1(System.Func{System.Collections.Generic.KeyValuePair{{TKey},{TValue}},System.Decimal})
  parent: System.Linq.Enumerable
  definition: System.Linq.Enumerable.Average``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Decimal})
  name: Average<KeyValuePair<TKey, TValue>>(Func<KeyValuePair<TKey, TValue>, Decimal>)
  fullName: System.Linq.Enumerable.Average<System.Collections.Generic.KeyValuePair<TKey, TValue>>(System.Func<System.Collections.Generic.KeyValuePair<TKey, TValue>, System.Decimal>)
  fullname.vb: System.Linq.Enumerable.Average(Of System.Collections.Generic.KeyValuePair(Of TKey, TValue))(System.Func(Of System.Collections.Generic.KeyValuePair(Of TKey, TValue), System.Decimal))
  name.vb: Average(Of KeyValuePair(Of TKey, TValue))(Func(Of KeyValuePair(Of TKey, TValue), Decimal))
  spec.csharp:
  - uid: System.Linq.Enumerable.Average``1(System.Func{``0,System.Decimal})
    name: Average<KeyValuePair<TKey, TValue>>
    fullName: System.Linq.Enumerable.Average<System.Collections.Generic.KeyValuePair<TKey, TValue>>
  - name: (
    fullName: (
  - uid: System.Func`2
    name: Func
    fullName: System.Func
    isExternal: true
  - name: <
    fullName: <
  - uid: System.Collections.Generic.KeyValuePair`2
    name: KeyValuePair
    fullName: System.Collections.Generic.KeyValuePair
    isExternal: true
  - name: <
    fullName: <
  - name: TKey
    fullName: TKey
  - name: ', '
    fullName: ', '
  - name: TValue
    fullName: TValue
  - name: '>'
    fullName: '>'
  - name: ', '
    fullName: ', '
  - uid: System.Decimal
    name: Decimal
    fullName: System.Decimal
    isExternal: true
  - name: '>'
    fullName: '>'
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Linq.Enumerable.Average``1(System.Func{``0,System.Decimal})
    name: Average(Of KeyValuePair(Of TKey, TValue))
    fullName: System.Linq.Enumerable.Average(Of System.Collections.Generic.KeyValuePair(Of TKey, TValue))
  - name: (
    fullName: (
  - uid: System.Func`2
    name: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - uid: System.Collections.Generic.KeyValuePair`2
    name: KeyValuePair
    fullName: System.Collections.Generic.KeyValuePair
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - name: TKey
    fullName: TKey
  - name: ', '
    fullName: ', '
  - name: TValue
    fullName: TValue
  - name: )
    fullName: )
  - name: ', '
    fullName: ', '
  - uid: System.Decimal
    name: Decimal
    fullName: System.Decimal
    isExternal: true
  - name: )
    fullName: )
  - name: )
    fullName: )
  nameWithType: Enumerable.Average<KeyValuePair<TKey, TValue>>(Func<KeyValuePair<TKey, TValue>, Decimal>)
  nameWithType.vb: Enumerable.Average(Of KeyValuePair(Of TKey, TValue))(Func(Of KeyValuePair(Of TKey, TValue), Decimal))
  commentId: M:System.Linq.Enumerable.Average``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Decimal})
- uid: System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{`0,`1}}.System.Linq.Enumerable.Average``1(System.Func{System.Collections.Generic.KeyValuePair{{TKey},{TValue}},System.Double})
  parent: System.Linq.Enumerable
  definition: System.Linq.Enumerable.Average``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Double})
  name: Average<KeyValuePair<TKey, TValue>>(Func<KeyValuePair<TKey, TValue>, Double>)
  fullName: System.Linq.Enumerable.Average<System.Collections.Generic.KeyValuePair<TKey, TValue>>(System.Func<System.Collections.Generic.KeyValuePair<TKey, TValue>, System.Double>)
  fullname.vb: System.Linq.Enumerable.Average(Of System.Collections.Generic.KeyValuePair(Of TKey, TValue))(System.Func(Of System.Collections.Generic.KeyValuePair(Of TKey, TValue), System.Double))
  name.vb: Average(Of KeyValuePair(Of TKey, TValue))(Func(Of KeyValuePair(Of TKey, TValue), Double))
  spec.csharp:
  - uid: System.Linq.Enumerable.Average``1(System.Func{``0,System.Double})
    name: Average<KeyValuePair<TKey, TValue>>
    fullName: System.Linq.Enumerable.Average<System.Collections.Generic.KeyValuePair<TKey, TValue>>
  - name: (
    fullName: (
  - uid: System.Func`2
    name: Func
    fullName: System.Func
    isExternal: true
  - name: <
    fullName: <
  - uid: System.Collections.Generic.KeyValuePair`2
    name: KeyValuePair
    fullName: System.Collections.Generic.KeyValuePair
    isExternal: true
  - name: <
    fullName: <
  - name: TKey
    fullName: TKey
  - name: ', '
    fullName: ', '
  - name: TValue
    fullName: TValue
  - name: '>'
    fullName: '>'
  - name: ', '
    fullName: ', '
  - uid: System.Double
    name: Double
    fullName: System.Double
    isExternal: true
  - name: '>'
    fullName: '>'
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Linq.Enumerable.Average``1(System.Func{``0,System.Double})
    name: Average(Of KeyValuePair(Of TKey, TValue))
    fullName: System.Linq.Enumerable.Average(Of System.Collections.Generic.KeyValuePair(Of TKey, TValue))
  - name: (
    fullName: (
  - uid: System.Func`2
    name: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - uid: System.Collections.Generic.KeyValuePair`2
    name: KeyValuePair
    fullName: System.Collections.Generic.KeyValuePair
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - name: TKey
    fullName: TKey
  - name: ', '
    fullName: ', '
  - name: TValue
    fullName: TValue
  - name: )
    fullName: )
  - name: ', '
    fullName: ', '
  - uid: System.Double
    name: Double
    fullName: System.Double
    isExternal: true
  - name: )
    fullName: )
  - name: )
    fullName: )
  nameWithType: Enumerable.Average<KeyValuePair<TKey, TValue>>(Func<KeyValuePair<TKey, TValue>, Double>)
  nameWithType.vb: Enumerable.Average(Of KeyValuePair(Of TKey, TValue))(Func(Of KeyValuePair(Of TKey, TValue), Double))
  commentId: M:System.Linq.Enumerable.Average``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Double})
- uid: System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{`0,`1}}.System.Linq.Enumerable.Average``1(System.Func{System.Collections.Generic.KeyValuePair{{TKey},{TValue}},System.Int32})
  parent: System.Linq.Enumerable
  definition: System.Linq.Enumerable.Average``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32})
  name: Average<KeyValuePair<TKey, TValue>>(Func<KeyValuePair<TKey, TValue>, Int32>)
  fullName: System.Linq.Enumerable.Average<System.Collections.Generic.KeyValuePair<TKey, TValue>>(System.Func<System.Collections.Generic.KeyValuePair<TKey, TValue>, System.Int32>)
  fullname.vb: System.Linq.Enumerable.Average(Of System.Collections.Generic.KeyValuePair(Of TKey, TValue))(System.Func(Of System.Collections.Generic.KeyValuePair(Of TKey, TValue), System.Int32))
  name.vb: Average(Of KeyValuePair(Of TKey, TValue))(Func(Of KeyValuePair(Of TKey, TValue), Int32))
  spec.csharp:
  - uid: System.Linq.Enumerable.Average``1(System.Func{``0,System.Int32})
    name: Average<KeyValuePair<TKey, TValue>>
    fullName: System.Linq.Enumerable.Average<System.Collections.Generic.KeyValuePair<TKey, TValue>>
  - name: (
    fullName: (
  - uid: System.Func`2
    name: Func
    fullName: System.Func
    isExternal: true
  - name: <
    fullName: <
  - uid: System.Collections.Generic.KeyValuePair`2
    name: KeyValuePair
    fullName: System.Collections.Generic.KeyValuePair
    isExternal: true
  - name: <
    fullName: <
  - name: TKey
    fullName: TKey
  - name: ', '
    fullName: ', '
  - name: TValue
    fullName: TValue
  - name: '>'
    fullName: '>'
  - name: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    fullName: System.Int32
    isExternal: true
  - name: '>'
    fullName: '>'
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Linq.Enumerable.Average``1(System.Func{``0,System.Int32})
    name: Average(Of KeyValuePair(Of TKey, TValue))
    fullName: System.Linq.Enumerable.Average(Of System.Collections.Generic.KeyValuePair(Of TKey, TValue))
  - name: (
    fullName: (
  - uid: System.Func`2
    name: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - uid: System.Collections.Generic.KeyValuePair`2
    name: KeyValuePair
    fullName: System.Collections.Generic.KeyValuePair
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - name: TKey
    fullName: TKey
  - name: ', '
    fullName: ', '
  - name: TValue
    fullName: TValue
  - name: )
    fullName: )
  - name: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    fullName: )
  - name: )
    fullName: )
  nameWithType: Enumerable.Average<KeyValuePair<TKey, TValue>>(Func<KeyValuePair<TKey, TValue>, Int32>)
  nameWithType.vb: Enumerable.Average(Of KeyValuePair(Of TKey, TValue))(Func(Of KeyValuePair(Of TKey, TValue), Int32))
  commentId: M:System.Linq.Enumerable.Average``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32})
- uid: System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{`0,`1}}.System.Linq.Enumerable.Average``1(System.Func{System.Collections.Generic.KeyValuePair{{TKey},{TValue}},System.Int64})
  parent: System.Linq.Enumerable
  definition: System.Linq.Enumerable.Average``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int64})
  name: Average<KeyValuePair<TKey, TValue>>(Func<KeyValuePair<TKey, TValue>, Int64>)
  fullName: System.Linq.Enumerable.Average<System.Collections.Generic.KeyValuePair<TKey, TValue>>(System.Func<System.Collections.Generic.KeyValuePair<TKey, TValue>, System.Int64>)
  fullname.vb: System.Linq.Enumerable.Average(Of System.Collections.Generic.KeyValuePair(Of TKey, TValue))(System.Func(Of System.Collections.Generic.KeyValuePair(Of TKey, TValue), System.Int64))
  name.vb: Average(Of KeyValuePair(Of TKey, TValue))(Func(Of KeyValuePair(Of TKey, TValue), Int64))
  spec.csharp:
  - uid: System.Linq.Enumerable.Average``1(System.Func{``0,System.Int64})
    name: Average<KeyValuePair<TKey, TValue>>
    fullName: System.Linq.Enumerable.Average<System.Collections.Generic.KeyValuePair<TKey, TValue>>
  - name: (
    fullName: (
  - uid: System.Func`2
    name: Func
    fullName: System.Func
    isExternal: true
  - name: <
    fullName: <
  - uid: System.Collections.Generic.KeyValuePair`2
    name: KeyValuePair
    fullName: System.Collections.Generic.KeyValuePair
    isExternal: true
  - name: <
    fullName: <
  - name: TKey
    fullName: TKey
  - name: ', '
    fullName: ', '
  - name: TValue
    fullName: TValue
  - name: '>'
    fullName: '>'
  - name: ', '
    fullName: ', '
  - uid: System.Int64
    name: Int64
    fullName: System.Int64
    isExternal: true
  - name: '>'
    fullName: '>'
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Linq.Enumerable.Average``1(System.Func{``0,System.Int64})
    name: Average(Of KeyValuePair(Of TKey, TValue))
    fullName: System.Linq.Enumerable.Average(Of System.Collections.Generic.KeyValuePair(Of TKey, TValue))
  - name: (
    fullName: (
  - uid: System.Func`2
    name: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - uid: System.Collections.Generic.KeyValuePair`2
    name: KeyValuePair
    fullName: System.Collections.Generic.KeyValuePair
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - name: TKey
    fullName: TKey
  - name: ', '
    fullName: ', '
  - name: TValue
    fullName: TValue
  - name: )
    fullName: )
  - name: ', '
    fullName: ', '
  - uid: System.Int64
    name: Int64
    fullName: System.Int64
    isExternal: true
  - name: )
    fullName: )
  - name: )
    fullName: )
  nameWithType: Enumerable.Average<KeyValuePair<TKey, TValue>>(Func<KeyValuePair<TKey, TValue>, Int64>)
  nameWithType.vb: Enumerable.Average(Of KeyValuePair(Of TKey, TValue))(Func(Of KeyValuePair(Of TKey, TValue), Int64))
  commentId: M:System.Linq.Enumerable.Average``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int64})
- uid: System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{`0,`1}}.System.Linq.Enumerable.Average``1(System.Func{System.Collections.Generic.KeyValuePair{{TKey},{TValue}},System.Nullable{System.Decimal}})
  parent: System.Linq.Enumerable
  definition: System.Linq.Enumerable.Average``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Decimal}})
  name: Average<KeyValuePair<TKey, TValue>>(Func<KeyValuePair<TKey, TValue>, Nullable<Decimal>>)
  fullName: System.Linq.Enumerable.Average<System.Collections.Generic.KeyValuePair<TKey, TValue>>(System.Func<System.Collections.Generic.KeyValuePair<TKey, TValue>, System.Nullable<System.Decimal>>)
  fullname.vb: System.Linq.Enumerable.Average(Of System.Collections.Generic.KeyValuePair(Of TKey, TValue))(System.Func(Of System.Collections.Generic.KeyValuePair(Of TKey, TValue), System.Nullable(Of System.Decimal)))
  name.vb: Average(Of KeyValuePair(Of TKey, TValue))(Func(Of KeyValuePair(Of TKey, TValue), Nullable(Of Decimal)))
  spec.csharp:
  - uid: System.Linq.Enumerable.Average``1(System.Func{``0,System.Nullable{System.Decimal}})
    name: Average<KeyValuePair<TKey, TValue>>
    fullName: System.Linq.Enumerable.Average<System.Collections.Generic.KeyValuePair<TKey, TValue>>
  - name: (
    fullName: (
  - uid: System.Func`2
    name: Func
    fullName: System.Func
    isExternal: true
  - name: <
    fullName: <
  - uid: System.Collections.Generic.KeyValuePair`2
    name: KeyValuePair
    fullName: System.Collections.Generic.KeyValuePair
    isExternal: true
  - name: <
    fullName: <
  - name: TKey
    fullName: TKey
  - name: ', '
    fullName: ', '
  - name: TValue
    fullName: TValue
  - name: '>'
    fullName: '>'
  - name: ', '
    fullName: ', '
  - uid: System.Nullable`1
    name: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    fullName: <
  - uid: System.Decimal
    name: Decimal
    fullName: System.Decimal
    isExternal: true
  - name: '>'
    fullName: '>'
  - name: '>'
    fullName: '>'
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Linq.Enumerable.Average``1(System.Func{``0,System.Nullable{System.Decimal}})
    name: Average(Of KeyValuePair(Of TKey, TValue))
    fullName: System.Linq.Enumerable.Average(Of System.Collections.Generic.KeyValuePair(Of TKey, TValue))
  - name: (
    fullName: (
  - uid: System.Func`2
    name: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - uid: System.Collections.Generic.KeyValuePair`2
    name: KeyValuePair
    fullName: System.Collections.Generic.KeyValuePair
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - name: TKey
    fullName: TKey
  - name: ', '
    fullName: ', '
  - name: TValue
    fullName: TValue
  - name: )
    fullName: )
  - name: ', '
    fullName: ', '
  - uid: System.Nullable`1
    name: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - uid: System.Decimal
    name: Decimal
    fullName: System.Decimal
    isExternal: true
  - name: )
    fullName: )
  - name: )
    fullName: )
  - name: )
    fullName: )
  nameWithType: Enumerable.Average<KeyValuePair<TKey, TValue>>(Func<KeyValuePair<TKey, TValue>, Nullable<Decimal>>)
  nameWithType.vb: Enumerable.Average(Of KeyValuePair(Of TKey, TValue))(Func(Of KeyValuePair(Of TKey, TValue), Nullable(Of Decimal)))
  commentId: M:System.Linq.Enumerable.Average``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Decimal}})
- uid: System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{`0,`1}}.System.Linq.Enumerable.Average``1(System.Func{System.Collections.Generic.KeyValuePair{{TKey},{TValue}},System.Nullable{System.Double}})
  parent: System.Linq.Enumerable
  definition: System.Linq.Enumerable.Average``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Double}})
  name: Average<KeyValuePair<TKey, TValue>>(Func<KeyValuePair<TKey, TValue>, Nullable<Double>>)
  fullName: System.Linq.Enumerable.Average<System.Collections.Generic.KeyValuePair<TKey, TValue>>(System.Func<System.Collections.Generic.KeyValuePair<TKey, TValue>, System.Nullable<System.Double>>)
  fullname.vb: System.Linq.Enumerable.Average(Of System.Collections.Generic.KeyValuePair(Of TKey, TValue))(System.Func(Of System.Collections.Generic.KeyValuePair(Of TKey, TValue), System.Nullable(Of System.Double)))
  name.vb: Average(Of KeyValuePair(Of TKey, TValue))(Func(Of KeyValuePair(Of TKey, TValue), Nullable(Of Double)))
  spec.csharp:
  - uid: System.Linq.Enumerable.Average``1(System.Func{``0,System.Nullable{System.Double}})
    name: Average<KeyValuePair<TKey, TValue>>
    fullName: System.Linq.Enumerable.Average<System.Collections.Generic.KeyValuePair<TKey, TValue>>
  - name: (
    fullName: (
  - uid: System.Func`2
    name: Func
    fullName: System.Func
    isExternal: true
  - name: <
    fullName: <
  - uid: System.Collections.Generic.KeyValuePair`2
    name: KeyValuePair
    fullName: System.Collections.Generic.KeyValuePair
    isExternal: true
  - name: <
    fullName: <
  - name: TKey
    fullName: TKey
  - name: ', '
    fullName: ', '
  - name: TValue
    fullName: TValue
  - name: '>'
    fullName: '>'
  - name: ', '
    fullName: ', '
  - uid: System.Nullable`1
    name: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    fullName: <
  - uid: System.Double
    name: Double
    fullName: System.Double
    isExternal: true
  - name: '>'
    fullName: '>'
  - name: '>'
    fullName: '>'
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Linq.Enumerable.Average``1(System.Func{``0,System.Nullable{System.Double}})
    name: Average(Of KeyValuePair(Of TKey, TValue))
    fullName: System.Linq.Enumerable.Average(Of System.Collections.Generic.KeyValuePair(Of TKey, TValue))
  - name: (
    fullName: (
  - uid: System.Func`2
    name: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - uid: System.Collections.Generic.KeyValuePair`2
    name: KeyValuePair
    fullName: System.Collections.Generic.KeyValuePair
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - name: TKey
    fullName: TKey
  - name: ', '
    fullName: ', '
  - name: TValue
    fullName: TValue
  - name: )
    fullName: )
  - name: ', '
    fullName: ', '
  - uid: System.Nullable`1
    name: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - uid: System.Double
    name: Double
    fullName: System.Double
    isExternal: true
  - name: )
    fullName: )
  - name: )
    fullName: )
  - name: )
    fullName: )
  nameWithType: Enumerable.Average<KeyValuePair<TKey, TValue>>(Func<KeyValuePair<TKey, TValue>, Nullable<Double>>)
  nameWithType.vb: Enumerable.Average(Of KeyValuePair(Of TKey, TValue))(Func(Of KeyValuePair(Of TKey, TValue), Nullable(Of Double)))
  commentId: M:System.Linq.Enumerable.Average``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Double}})
- uid: System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{`0,`1}}.System.Linq.Enumerable.Average``1(System.Func{System.Collections.Generic.KeyValuePair{{TKey},{TValue}},System.Nullable{System.Int32}})
  parent: System.Linq.Enumerable
  definition: System.Linq.Enumerable.Average``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Int32}})
  name: Average<KeyValuePair<TKey, TValue>>(Func<KeyValuePair<TKey, TValue>, Nullable<Int32>>)
  fullName: System.Linq.Enumerable.Average<System.Collections.Generic.KeyValuePair<TKey, TValue>>(System.Func<System.Collections.Generic.KeyValuePair<TKey, TValue>, System.Nullable<System.Int32>>)
  fullname.vb: System.Linq.Enumerable.Average(Of System.Collections.Generic.KeyValuePair(Of TKey, TValue))(System.Func(Of System.Collections.Generic.KeyValuePair(Of TKey, TValue), System.Nullable(Of System.Int32)))
  name.vb: Average(Of KeyValuePair(Of TKey, TValue))(Func(Of KeyValuePair(Of TKey, TValue), Nullable(Of Int32)))
  spec.csharp:
  - uid: System.Linq.Enumerable.Average``1(System.Func{``0,System.Nullable{System.Int32}})
    name: Average<KeyValuePair<TKey, TValue>>
    fullName: System.Linq.Enumerable.Average<System.Collections.Generic.KeyValuePair<TKey, TValue>>
  - name: (
    fullName: (
  - uid: System.Func`2
    name: Func
    fullName: System.Func
    isExternal: true
  - name: <
    fullName: <
  - uid: System.Collections.Generic.KeyValuePair`2
    name: KeyValuePair
    fullName: System.Collections.Generic.KeyValuePair
    isExternal: true
  - name: <
    fullName: <
  - name: TKey
    fullName: TKey
  - name: ', '
    fullName: ', '
  - name: TValue
    fullName: TValue
  - name: '>'
    fullName: '>'
  - name: ', '
    fullName: ', '
  - uid: System.Nullable`1
    name: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    fullName: <
  - uid: System.Int32
    name: Int32
    fullName: System.Int32
    isExternal: true
  - name: '>'
    fullName: '>'
  - name: '>'
    fullName: '>'
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Linq.Enumerable.Average``1(System.Func{``0,System.Nullable{System.Int32}})
    name: Average(Of KeyValuePair(Of TKey, TValue))
    fullName: System.Linq.Enumerable.Average(Of System.Collections.Generic.KeyValuePair(Of TKey, TValue))
  - name: (
    fullName: (
  - uid: System.Func`2
    name: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - uid: System.Collections.Generic.KeyValuePair`2
    name: KeyValuePair
    fullName: System.Collections.Generic.KeyValuePair
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - name: TKey
    fullName: TKey
  - name: ', '
    fullName: ', '
  - name: TValue
    fullName: TValue
  - name: )
    fullName: )
  - name: ', '
    fullName: ', '
  - uid: System.Nullable`1
    name: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - uid: System.Int32
    name: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    fullName: )
  - name: )
    fullName: )
  - name: )
    fullName: )
  nameWithType: Enumerable.Average<KeyValuePair<TKey, TValue>>(Func<KeyValuePair<TKey, TValue>, Nullable<Int32>>)
  nameWithType.vb: Enumerable.Average(Of KeyValuePair(Of TKey, TValue))(Func(Of KeyValuePair(Of TKey, TValue), Nullable(Of Int32)))
  commentId: M:System.Linq.Enumerable.Average``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Int32}})
- uid: System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{`0,`1}}.System.Linq.Enumerable.Average``1(System.Func{System.Collections.Generic.KeyValuePair{{TKey},{TValue}},System.Nullable{System.Int64}})
  parent: System.Linq.Enumerable
  definition: System.Linq.Enumerable.Average``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Int64}})
  name: Average<KeyValuePair<TKey, TValue>>(Func<KeyValuePair<TKey, TValue>, Nullable<Int64>>)
  fullName: System.Linq.Enumerable.Average<System.Collections.Generic.KeyValuePair<TKey, TValue>>(System.Func<System.Collections.Generic.KeyValuePair<TKey, TValue>, System.Nullable<System.Int64>>)
  fullname.vb: System.Linq.Enumerable.Average(Of System.Collections.Generic.KeyValuePair(Of TKey, TValue))(System.Func(Of System.Collections.Generic.KeyValuePair(Of TKey, TValue), System.Nullable(Of System.Int64)))
  name.vb: Average(Of KeyValuePair(Of TKey, TValue))(Func(Of KeyValuePair(Of TKey, TValue), Nullable(Of Int64)))
  spec.csharp:
  - uid: System.Linq.Enumerable.Average``1(System.Func{``0,System.Nullable{System.Int64}})
    name: Average<KeyValuePair<TKey, TValue>>
    fullName: System.Linq.Enumerable.Average<System.Collections.Generic.KeyValuePair<TKey, TValue>>
  - name: (
    fullName: (
  - uid: System.Func`2
    name: Func
    fullName: System.Func
    isExternal: true
  - name: <
    fullName: <
  - uid: System.Collections.Generic.KeyValuePair`2
    name: KeyValuePair
    fullName: System.Collections.Generic.KeyValuePair
    isExternal: true
  - name: <
    fullName: <
  - name: TKey
    fullName: TKey
  - name: ', '
    fullName: ', '
  - name: TValue
    fullName: TValue
  - name: '>'
    fullName: '>'
  - name: ', '
    fullName: ', '
  - uid: System.Nullable`1
    name: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    fullName: <
  - uid: System.Int64
    name: Int64
    fullName: System.Int64
    isExternal: true
  - name: '>'
    fullName: '>'
  - name: '>'
    fullName: '>'
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Linq.Enumerable.Average``1(System.Func{``0,System.Nullable{System.Int64}})
    name: Average(Of KeyValuePair(Of TKey, TValue))
    fullName: System.Linq.Enumerable.Average(Of System.Collections.Generic.KeyValuePair(Of TKey, TValue))
  - name: (
    fullName: (
  - uid: System.Func`2
    name: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - uid: System.Collections.Generic.KeyValuePair`2
    name: KeyValuePair
    fullName: System.Collections.Generic.KeyValuePair
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - name: TKey
    fullName: TKey
  - name: ', '
    fullName: ', '
  - name: TValue
    fullName: TValue
  - name: )
    fullName: )
  - name: ', '
    fullName: ', '
  - uid: System.Nullable`1
    name: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - uid: System.Int64
    name: Int64
    fullName: System.Int64
    isExternal: true
  - name: )
    fullName: )
  - name: )
    fullName: )
  - name: )
    fullName: )
  nameWithType: Enumerable.Average<KeyValuePair<TKey, TValue>>(Func<KeyValuePair<TKey, TValue>, Nullable<Int64>>)
  nameWithType.vb: Enumerable.Average(Of KeyValuePair(Of TKey, TValue))(Func(Of KeyValuePair(Of TKey, TValue), Nullable(Of Int64)))
  commentId: M:System.Linq.Enumerable.Average``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Int64}})
- uid: System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{`0,`1}}.System.Linq.Enumerable.Average``1(System.Func{System.Collections.Generic.KeyValuePair{{TKey},{TValue}},System.Nullable{System.Single}})
  parent: System.Linq.Enumerable
  definition: System.Linq.Enumerable.Average``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Single}})
  name: Average<KeyValuePair<TKey, TValue>>(Func<KeyValuePair<TKey, TValue>, Nullable<Single>>)
  fullName: System.Linq.Enumerable.Average<System.Collections.Generic.KeyValuePair<TKey, TValue>>(System.Func<System.Collections.Generic.KeyValuePair<TKey, TValue>, System.Nullable<System.Single>>)
  fullname.vb: System.Linq.Enumerable.Average(Of System.Collections.Generic.KeyValuePair(Of TKey, TValue))(System.Func(Of System.Collections.Generic.KeyValuePair(Of TKey, TValue), System.Nullable(Of System.Single)))
  name.vb: Average(Of KeyValuePair(Of TKey, TValue))(Func(Of KeyValuePair(Of TKey, TValue), Nullable(Of Single)))
  spec.csharp:
  - uid: System.Linq.Enumerable.Average``1(System.Func{``0,System.Nullable{System.Single}})
    name: Average<KeyValuePair<TKey, TValue>>
    fullName: System.Linq.Enumerable.Average<System.Collections.Generic.KeyValuePair<TKey, TValue>>
  - name: (
    fullName: (
  - uid: System.Func`2
    name: Func
    fullName: System.Func
    isExternal: true
  - name: <
    fullName: <
  - uid: System.Collections.Generic.KeyValuePair`2
    name: KeyValuePair
    fullName: System.Collections.Generic.KeyValuePair
    isExternal: true
  - name: <
    fullName: <
  - name: TKey
    fullName: TKey
  - name: ', '
    fullName: ', '
  - name: TValue
    fullName: TValue
  - name: '>'
    fullName: '>'
  - name: ', '
    fullName: ', '
  - uid: System.Nullable`1
    name: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    fullName: <
  - uid: System.Single
    name: Single
    fullName: System.Single
    isExternal: true
  - name: '>'
    fullName: '>'
  - name: '>'
    fullName: '>'
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Linq.Enumerable.Average``1(System.Func{``0,System.Nullable{System.Single}})
    name: Average(Of KeyValuePair(Of TKey, TValue))
    fullName: System.Linq.Enumerable.Average(Of System.Collections.Generic.KeyValuePair(Of TKey, TValue))
  - name: (
    fullName: (
  - uid: System.Func`2
    name: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - uid: System.Collections.Generic.KeyValuePair`2
    name: KeyValuePair
    fullName: System.Collections.Generic.KeyValuePair
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - name: TKey
    fullName: TKey
  - name: ', '
    fullName: ', '
  - name: TValue
    fullName: TValue
  - name: )
    fullName: )
  - name: ', '
    fullName: ', '
  - uid: System.Nullable`1
    name: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - uid: System.Single
    name: Single
    fullName: System.Single
    isExternal: true
  - name: )
    fullName: )
  - name: )
    fullName: )
  - name: )
    fullName: )
  nameWithType: Enumerable.Average<KeyValuePair<TKey, TValue>>(Func<KeyValuePair<TKey, TValue>, Nullable<Single>>)
  nameWithType.vb: Enumerable.Average(Of KeyValuePair(Of TKey, TValue))(Func(Of KeyValuePair(Of TKey, TValue), Nullable(Of Single)))
  commentId: M:System.Linq.Enumerable.Average``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Single}})
- uid: System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{`0,`1}}.System.Linq.Enumerable.Average``1(System.Func{System.Collections.Generic.KeyValuePair{{TKey},{TValue}},System.Single})
  parent: System.Linq.Enumerable
  definition: System.Linq.Enumerable.Average``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Single})
  name: Average<KeyValuePair<TKey, TValue>>(Func<KeyValuePair<TKey, TValue>, Single>)
  fullName: System.Linq.Enumerable.Average<System.Collections.Generic.KeyValuePair<TKey, TValue>>(System.Func<System.Collections.Generic.KeyValuePair<TKey, TValue>, System.Single>)
  fullname.vb: System.Linq.Enumerable.Average(Of System.Collections.Generic.KeyValuePair(Of TKey, TValue))(System.Func(Of System.Collections.Generic.KeyValuePair(Of TKey, TValue), System.Single))
  name.vb: Average(Of KeyValuePair(Of TKey, TValue))(Func(Of KeyValuePair(Of TKey, TValue), Single))
  spec.csharp:
  - uid: System.Linq.Enumerable.Average``1(System.Func{``0,System.Single})
    name: Average<KeyValuePair<TKey, TValue>>
    fullName: System.Linq.Enumerable.Average<System.Collections.Generic.KeyValuePair<TKey, TValue>>
  - name: (
    fullName: (
  - uid: System.Func`2
    name: Func
    fullName: System.Func
    isExternal: true
  - name: <
    fullName: <
  - uid: System.Collections.Generic.KeyValuePair`2
    name: KeyValuePair
    fullName: System.Collections.Generic.KeyValuePair
    isExternal: true
  - name: <
    fullName: <
  - name: TKey
    fullName: TKey
  - name: ', '
    fullName: ', '
  - name: TValue
    fullName: TValue
  - name: '>'
    fullName: '>'
  - name: ', '
    fullName: ', '
  - uid: System.Single
    name: Single
    fullName: System.Single
    isExternal: true
  - name: '>'
    fullName: '>'
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Linq.Enumerable.Average``1(System.Func{``0,System.Single})
    name: Average(Of KeyValuePair(Of TKey, TValue))
    fullName: System.Linq.Enumerable.Average(Of System.Collections.Generic.KeyValuePair(Of TKey, TValue))
  - name: (
    fullName: (
  - uid: System.Func`2
    name: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - uid: System.Collections.Generic.KeyValuePair`2
    name: KeyValuePair
    fullName: System.Collections.Generic.KeyValuePair
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - name: TKey
    fullName: TKey
  - name: ', '
    fullName: ', '
  - name: TValue
    fullName: TValue
  - name: )
    fullName: )
  - name: ', '
    fullName: ', '
  - uid: System.Single
    name: Single
    fullName: System.Single
    isExternal: true
  - name: )
    fullName: )
  - name: )
    fullName: )
  nameWithType: Enumerable.Average<KeyValuePair<TKey, TValue>>(Func<KeyValuePair<TKey, TValue>, Single>)
  nameWithType.vb: Enumerable.Average(Of KeyValuePair(Of TKey, TValue))(Func(Of KeyValuePair(Of TKey, TValue), Single))
  commentId: M:System.Linq.Enumerable.Average``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Single})
- uid: System.Collections.IEnumerable.System.Linq.Enumerable.Cast``1
  parent: System.Linq.Enumerable
  definition: System.Linq.Enumerable.Cast``1(System.Collections.IEnumerable)
  name: Cast<TResult>()
  fullName: System.Linq.Enumerable.Cast<TResult>()
  fullname.vb: System.Linq.Enumerable.Cast(Of TResult)()
  name.vb: Cast(Of TResult)()
  spec.csharp:
  - uid: System.Linq.Enumerable.Cast``1
    name: Cast<TResult>
    fullName: System.Linq.Enumerable.Cast<TResult>
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Linq.Enumerable.Cast``1
    name: Cast(Of TResult)
    fullName: System.Linq.Enumerable.Cast(Of TResult)
  - name: (
    fullName: (
  - name: )
    fullName: )
  nameWithType: Enumerable.Cast<TResult>()
  nameWithType.vb: Enumerable.Cast(Of TResult)()
  commentId: M:System.Linq.Enumerable.Cast``1(System.Collections.IEnumerable)
- uid: System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{`0,`1}}.System.Linq.Enumerable.Concat``1(System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{{TKey},{TValue}}})
  parent: System.Linq.Enumerable
  definition: System.Linq.Enumerable.Concat``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0})
  name: Concat<KeyValuePair<TKey, TValue>>(IEnumerable<KeyValuePair<TKey, TValue>>)
  fullName: System.Linq.Enumerable.Concat<System.Collections.Generic.KeyValuePair<TKey, TValue>>(System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<TKey, TValue>>)
  fullname.vb: System.Linq.Enumerable.Concat(Of System.Collections.Generic.KeyValuePair(Of TKey, TValue))(System.Collections.Generic.IEnumerable(Of System.Collections.Generic.KeyValuePair(Of TKey, TValue)))
  name.vb: Concat(Of KeyValuePair(Of TKey, TValue))(IEnumerable(Of KeyValuePair(Of TKey, TValue)))
  spec.csharp:
  - uid: System.Linq.Enumerable.Concat``1(System.Collections.Generic.IEnumerable{``0})
    name: Concat<KeyValuePair<TKey, TValue>>
    fullName: System.Linq.Enumerable.Concat<System.Collections.Generic.KeyValuePair<TKey, TValue>>
  - name: (
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    fullName: <
  - uid: System.Collections.Generic.KeyValuePair`2
    name: KeyValuePair
    fullName: System.Collections.Generic.KeyValuePair
    isExternal: true
  - name: <
    fullName: <
  - name: TKey
    fullName: TKey
  - name: ', '
    fullName: ', '
  - name: TValue
    fullName: TValue
  - name: '>'
    fullName: '>'
  - name: '>'
    fullName: '>'
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Linq.Enumerable.Concat``1(System.Collections.Generic.IEnumerable{``0})
    name: Concat(Of KeyValuePair(Of TKey, TValue))
    fullName: System.Linq.Enumerable.Concat(Of System.Collections.Generic.KeyValuePair(Of TKey, TValue))
  - name: (
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - uid: System.Collections.Generic.KeyValuePair`2
    name: KeyValuePair
    fullName: System.Collections.Generic.KeyValuePair
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - name: TKey
    fullName: TKey
  - name: ', '
    fullName: ', '
  - name: TValue
    fullName: TValue
  - name: )
    fullName: )
  - name: )
    fullName: )
  - name: )
    fullName: )
  nameWithType: Enumerable.Concat<KeyValuePair<TKey, TValue>>(IEnumerable<KeyValuePair<TKey, TValue>>)
  nameWithType.vb: Enumerable.Concat(Of KeyValuePair(Of TKey, TValue))(IEnumerable(Of KeyValuePair(Of TKey, TValue)))
  commentId: M:System.Linq.Enumerable.Concat``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0})
- uid: System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{`0,`1}}.System.Linq.Enumerable.Append``1(System.Collections.Generic.KeyValuePair{{TKey},{TValue}})
  parent: System.Linq.Enumerable
  definition: System.Linq.Enumerable.Append``1(System.Collections.Generic.IEnumerable{``0},``0)
  name: Append<KeyValuePair<TKey, TValue>>(KeyValuePair<TKey, TValue>)
  fullName: System.Linq.Enumerable.Append<System.Collections.Generic.KeyValuePair<TKey, TValue>>(System.Collections.Generic.KeyValuePair<TKey, TValue>)
  fullname.vb: System.Linq.Enumerable.Append(Of System.Collections.Generic.KeyValuePair(Of TKey, TValue))(System.Collections.Generic.KeyValuePair(Of TKey, TValue))
  name.vb: Append(Of KeyValuePair(Of TKey, TValue))(KeyValuePair(Of TKey, TValue))
  spec.csharp:
  - uid: System.Linq.Enumerable.Append``1(``0)
    name: Append<KeyValuePair<TKey, TValue>>
    fullName: System.Linq.Enumerable.Append<System.Collections.Generic.KeyValuePair<TKey, TValue>>
  - name: (
    fullName: (
  - uid: System.Collections.Generic.KeyValuePair`2
    name: KeyValuePair
    fullName: System.Collections.Generic.KeyValuePair
    isExternal: true
  - name: <
    fullName: <
  - name: TKey
    fullName: TKey
  - name: ', '
    fullName: ', '
  - name: TValue
    fullName: TValue
  - name: '>'
    fullName: '>'
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Linq.Enumerable.Append``1(``0)
    name: Append(Of KeyValuePair(Of TKey, TValue))
    fullName: System.Linq.Enumerable.Append(Of System.Collections.Generic.KeyValuePair(Of TKey, TValue))
  - name: (
    fullName: (
  - uid: System.Collections.Generic.KeyValuePair`2
    name: KeyValuePair
    fullName: System.Collections.Generic.KeyValuePair
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - name: TKey
    fullName: TKey
  - name: ', '
    fullName: ', '
  - name: TValue
    fullName: TValue
  - name: )
    fullName: )
  - name: )
    fullName: )
  nameWithType: Enumerable.Append<KeyValuePair<TKey, TValue>>(KeyValuePair<TKey, TValue>)
  nameWithType.vb: Enumerable.Append(Of KeyValuePair(Of TKey, TValue))(KeyValuePair(Of TKey, TValue))
  commentId: M:System.Linq.Enumerable.Append``1(System.Collections.Generic.IEnumerable{``0},``0)
- uid: System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{`0,`1}}.System.Linq.Enumerable.Prepend``1(System.Collections.Generic.KeyValuePair{{TKey},{TValue}})
  parent: System.Linq.Enumerable
  definition: System.Linq.Enumerable.Prepend``1(System.Collections.Generic.IEnumerable{``0},``0)
  name: Prepend<KeyValuePair<TKey, TValue>>(KeyValuePair<TKey, TValue>)
  fullName: System.Linq.Enumerable.Prepend<System.Collections.Generic.KeyValuePair<TKey, TValue>>(System.Collections.Generic.KeyValuePair<TKey, TValue>)
  fullname.vb: System.Linq.Enumerable.Prepend(Of System.Collections.Generic.KeyValuePair(Of TKey, TValue))(System.Collections.Generic.KeyValuePair(Of TKey, TValue))
  name.vb: Prepend(Of KeyValuePair(Of TKey, TValue))(KeyValuePair(Of TKey, TValue))
  spec.csharp:
  - uid: System.Linq.Enumerable.Prepend``1(``0)
    name: Prepend<KeyValuePair<TKey, TValue>>
    fullName: System.Linq.Enumerable.Prepend<System.Collections.Generic.KeyValuePair<TKey, TValue>>
  - name: (
    fullName: (
  - uid: System.Collections.Generic.KeyValuePair`2
    name: KeyValuePair
    fullName: System.Collections.Generic.KeyValuePair
    isExternal: true
  - name: <
    fullName: <
  - name: TKey
    fullName: TKey
  - name: ', '
    fullName: ', '
  - name: TValue
    fullName: TValue
  - name: '>'
    fullName: '>'
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Linq.Enumerable.Prepend``1(``0)
    name: Prepend(Of KeyValuePair(Of TKey, TValue))
    fullName: System.Linq.Enumerable.Prepend(Of System.Collections.Generic.KeyValuePair(Of TKey, TValue))
  - name: (
    fullName: (
  - uid: System.Collections.Generic.KeyValuePair`2
    name: KeyValuePair
    fullName: System.Collections.Generic.KeyValuePair
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - name: TKey
    fullName: TKey
  - name: ', '
    fullName: ', '
  - name: TValue
    fullName: TValue
  - name: )
    fullName: )
  - name: )
    fullName: )
  nameWithType: Enumerable.Prepend<KeyValuePair<TKey, TValue>>(KeyValuePair<TKey, TValue>)
  nameWithType.vb: Enumerable.Prepend(Of KeyValuePair(Of TKey, TValue))(KeyValuePair(Of TKey, TValue))
  commentId: M:System.Linq.Enumerable.Prepend``1(System.Collections.Generic.IEnumerable{``0},``0)
- uid: System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{`0,`1}}.System.Linq.Enumerable.Contains``1(System.Collections.Generic.KeyValuePair{{TKey},{TValue}})
  parent: System.Linq.Enumerable
  definition: System.Linq.Enumerable.Contains``1(System.Collections.Generic.IEnumerable{``0},``0)
  name: Contains<KeyValuePair<TKey, TValue>>(KeyValuePair<TKey, TValue>)
  fullName: System.Linq.Enumerable.Contains<System.Collections.Generic.KeyValuePair<TKey, TValue>>(System.Collections.Generic.KeyValuePair<TKey, TValue>)
  fullname.vb: System.Linq.Enumerable.Contains(Of System.Collections.Generic.KeyValuePair(Of TKey, TValue))(System.Collections.Generic.KeyValuePair(Of TKey, TValue))
  name.vb: Contains(Of KeyValuePair(Of TKey, TValue))(KeyValuePair(Of TKey, TValue))
  spec.csharp:
  - uid: System.Linq.Enumerable.Contains``1(``0)
    name: Contains<KeyValuePair<TKey, TValue>>
    fullName: System.Linq.Enumerable.Contains<System.Collections.Generic.KeyValuePair<TKey, TValue>>
  - name: (
    fullName: (
  - uid: System.Collections.Generic.KeyValuePair`2
    name: KeyValuePair
    fullName: System.Collections.Generic.KeyValuePair
    isExternal: true
  - name: <
    fullName: <
  - name: TKey
    fullName: TKey
  - name: ', '
    fullName: ', '
  - name: TValue
    fullName: TValue
  - name: '>'
    fullName: '>'
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Linq.Enumerable.Contains``1(``0)
    name: Contains(Of KeyValuePair(Of TKey, TValue))
    fullName: System.Linq.Enumerable.Contains(Of System.Collections.Generic.KeyValuePair(Of TKey, TValue))
  - name: (
    fullName: (
  - uid: System.Collections.Generic.KeyValuePair`2
    name: KeyValuePair
    fullName: System.Collections.Generic.KeyValuePair
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - name: TKey
    fullName: TKey
  - name: ', '
    fullName: ', '
  - name: TValue
    fullName: TValue
  - name: )
    fullName: )
  - name: )
    fullName: )
  nameWithType: Enumerable.Contains<KeyValuePair<TKey, TValue>>(KeyValuePair<TKey, TValue>)
  nameWithType.vb: Enumerable.Contains(Of KeyValuePair(Of TKey, TValue))(KeyValuePair(Of TKey, TValue))
  commentId: M:System.Linq.Enumerable.Contains``1(System.Collections.Generic.IEnumerable{``0},``0)
- uid: System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{`0,`1}}.System.Linq.Enumerable.Contains``1(System.Collections.Generic.KeyValuePair{{TKey},{TValue}},System.Collections.Generic.IEqualityComparer{System.Collections.Generic.KeyValuePair{{TKey},{TValue}}})
  parent: System.Linq.Enumerable
  definition: System.Linq.Enumerable.Contains``1(System.Collections.Generic.IEnumerable{``0},``0,System.Collections.Generic.IEqualityComparer{``0})
  name: Contains<KeyValuePair<TKey, TValue>>(KeyValuePair<TKey, TValue>, IEqualityComparer<KeyValuePair<TKey, TValue>>)
  fullName: System.Linq.Enumerable.Contains<System.Collections.Generic.KeyValuePair<TKey, TValue>>(System.Collections.Generic.KeyValuePair<TKey, TValue>, System.Collections.Generic.IEqualityComparer<System.Collections.Generic.KeyValuePair<TKey, TValue>>)
  fullname.vb: System.Linq.Enumerable.Contains(Of System.Collections.Generic.KeyValuePair(Of TKey, TValue))(System.Collections.Generic.KeyValuePair(Of TKey, TValue), System.Collections.Generic.IEqualityComparer(Of System.Collections.Generic.KeyValuePair(Of TKey, TValue)))
  name.vb: Contains(Of KeyValuePair(Of TKey, TValue))(KeyValuePair(Of TKey, TValue), IEqualityComparer(Of KeyValuePair(Of TKey, TValue)))
  spec.csharp:
  - uid: System.Linq.Enumerable.Contains``1(``0,System.Collections.Generic.IEqualityComparer{``0})
    name: Contains<KeyValuePair<TKey, TValue>>
    fullName: System.Linq.Enumerable.Contains<System.Collections.Generic.KeyValuePair<TKey, TValue>>
  - name: (
    fullName: (
  - uid: System.Collections.Generic.KeyValuePair`2
    name: KeyValuePair
    fullName: System.Collections.Generic.KeyValuePair
    isExternal: true
  - name: <
    fullName: <
  - name: TKey
    fullName: TKey
  - name: ', '
    fullName: ', '
  - name: TValue
    fullName: TValue
  - name: '>'
    fullName: '>'
  - name: ', '
    fullName: ', '
  - uid: System.Collections.Generic.IEqualityComparer`1
    name: IEqualityComparer
    fullName: System.Collections.Generic.IEqualityComparer
    isExternal: true
  - name: <
    fullName: <
  - uid: System.Collections.Generic.KeyValuePair`2
    name: KeyValuePair
    fullName: System.Collections.Generic.KeyValuePair
    isExternal: true
  - name: <
    fullName: <
  - name: TKey
    fullName: TKey
  - name: ', '
    fullName: ', '
  - name: TValue
    fullName: TValue
  - name: '>'
    fullName: '>'
  - name: '>'
    fullName: '>'
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Linq.Enumerable.Contains``1(``0,System.Collections.Generic.IEqualityComparer{``0})
    name: Contains(Of KeyValuePair(Of TKey, TValue))
    fullName: System.Linq.Enumerable.Contains(Of System.Collections.Generic.KeyValuePair(Of TKey, TValue))
  - name: (
    fullName: (
  - uid: System.Collections.Generic.KeyValuePair`2
    name: KeyValuePair
    fullName: System.Collections.Generic.KeyValuePair
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - name: TKey
    fullName: TKey
  - name: ', '
    fullName: ', '
  - name: TValue
    fullName: TValue
  - name: )
    fullName: )
  - name: ', '
    fullName: ', '
  - uid: System.Collections.Generic.IEqualityComparer`1
    name: IEqualityComparer
    fullName: System.Collections.Generic.IEqualityComparer
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - uid: System.Collections.Generic.KeyValuePair`2
    name: KeyValuePair
    fullName: System.Collections.Generic.KeyValuePair
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - name: TKey
    fullName: TKey
  - name: ', '
    fullName: ', '
  - name: TValue
    fullName: TValue
  - name: )
    fullName: )
  - name: )
    fullName: )
  - name: )
    fullName: )
  nameWithType: Enumerable.Contains<KeyValuePair<TKey, TValue>>(KeyValuePair<TKey, TValue>, IEqualityComparer<KeyValuePair<TKey, TValue>>)
  nameWithType.vb: Enumerable.Contains(Of KeyValuePair(Of TKey, TValue))(KeyValuePair(Of TKey, TValue), IEqualityComparer(Of KeyValuePair(Of TKey, TValue)))
  commentId: M:System.Linq.Enumerable.Contains``1(System.Collections.Generic.IEnumerable{``0},``0,System.Collections.Generic.IEqualityComparer{``0})
- uid: System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{`0,`1}}.System.Linq.Enumerable.Count``1
  parent: System.Linq.Enumerable
  definition: System.Linq.Enumerable.Count``1(System.Collections.Generic.IEnumerable{``0})
  name: Count<KeyValuePair<TKey, TValue>>()
  fullName: System.Linq.Enumerable.Count<System.Collections.Generic.KeyValuePair<TKey, TValue>>()
  fullname.vb: System.Linq.Enumerable.Count(Of System.Collections.Generic.KeyValuePair(Of TKey, TValue))()
  name.vb: Count(Of KeyValuePair(Of TKey, TValue))()
  spec.csharp:
  - uid: System.Linq.Enumerable.Count``1
    name: Count<KeyValuePair<TKey, TValue>>
    fullName: System.Linq.Enumerable.Count<System.Collections.Generic.KeyValuePair<TKey, TValue>>
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Linq.Enumerable.Count``1
    name: Count(Of KeyValuePair(Of TKey, TValue))
    fullName: System.Linq.Enumerable.Count(Of System.Collections.Generic.KeyValuePair(Of TKey, TValue))
  - name: (
    fullName: (
  - name: )
    fullName: )
  nameWithType: Enumerable.Count<KeyValuePair<TKey, TValue>>()
  nameWithType.vb: Enumerable.Count(Of KeyValuePair(Of TKey, TValue))()
  commentId: M:System.Linq.Enumerable.Count``1(System.Collections.Generic.IEnumerable{``0})
- uid: System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{`0,`1}}.System.Linq.Enumerable.Count``1(System.Func{System.Collections.Generic.KeyValuePair{{TKey},{TValue}},System.Boolean})
  parent: System.Linq.Enumerable
  definition: System.Linq.Enumerable.Count``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})
  name: Count<KeyValuePair<TKey, TValue>>(Func<KeyValuePair<TKey, TValue>, Boolean>)
  fullName: System.Linq.Enumerable.Count<System.Collections.Generic.KeyValuePair<TKey, TValue>>(System.Func<System.Collections.Generic.KeyValuePair<TKey, TValue>, System.Boolean>)
  fullname.vb: System.Linq.Enumerable.Count(Of System.Collections.Generic.KeyValuePair(Of TKey, TValue))(System.Func(Of System.Collections.Generic.KeyValuePair(Of TKey, TValue), System.Boolean))
  name.vb: Count(Of KeyValuePair(Of TKey, TValue))(Func(Of KeyValuePair(Of TKey, TValue), Boolean))
  spec.csharp:
  - uid: System.Linq.Enumerable.Count``1(System.Func{``0,System.Boolean})
    name: Count<KeyValuePair<TKey, TValue>>
    fullName: System.Linq.Enumerable.Count<System.Collections.Generic.KeyValuePair<TKey, TValue>>
  - name: (
    fullName: (
  - uid: System.Func`2
    name: Func
    fullName: System.Func
    isExternal: true
  - name: <
    fullName: <
  - uid: System.Collections.Generic.KeyValuePair`2
    name: KeyValuePair
    fullName: System.Collections.Generic.KeyValuePair
    isExternal: true
  - name: <
    fullName: <
  - name: TKey
    fullName: TKey
  - name: ', '
    fullName: ', '
  - name: TValue
    fullName: TValue
  - name: '>'
    fullName: '>'
  - name: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: '>'
    fullName: '>'
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Linq.Enumerable.Count``1(System.Func{``0,System.Boolean})
    name: Count(Of KeyValuePair(Of TKey, TValue))
    fullName: System.Linq.Enumerable.Count(Of System.Collections.Generic.KeyValuePair(Of TKey, TValue))
  - name: (
    fullName: (
  - uid: System.Func`2
    name: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - uid: System.Collections.Generic.KeyValuePair`2
    name: KeyValuePair
    fullName: System.Collections.Generic.KeyValuePair
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - name: TKey
    fullName: TKey
  - name: ', '
    fullName: ', '
  - name: TValue
    fullName: TValue
  - name: )
    fullName: )
  - name: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    fullName: )
  - name: )
    fullName: )
  nameWithType: Enumerable.Count<KeyValuePair<TKey, TValue>>(Func<KeyValuePair<TKey, TValue>, Boolean>)
  nameWithType.vb: Enumerable.Count(Of KeyValuePair(Of TKey, TValue))(Func(Of KeyValuePair(Of TKey, TValue), Boolean))
  commentId: M:System.Linq.Enumerable.Count``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})
- uid: System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{`0,`1}}.System.Linq.Enumerable.DefaultIfEmpty``1
  parent: System.Linq.Enumerable
  definition: System.Linq.Enumerable.DefaultIfEmpty``1(System.Collections.Generic.IEnumerable{``0})
  name: DefaultIfEmpty<KeyValuePair<TKey, TValue>>()
  fullName: System.Linq.Enumerable.DefaultIfEmpty<System.Collections.Generic.KeyValuePair<TKey, TValue>>()
  fullname.vb: System.Linq.Enumerable.DefaultIfEmpty(Of System.Collections.Generic.KeyValuePair(Of TKey, TValue))()
  name.vb: DefaultIfEmpty(Of KeyValuePair(Of TKey, TValue))()
  spec.csharp:
  - uid: System.Linq.Enumerable.DefaultIfEmpty``1
    name: DefaultIfEmpty<KeyValuePair<TKey, TValue>>
    fullName: System.Linq.Enumerable.DefaultIfEmpty<System.Collections.Generic.KeyValuePair<TKey, TValue>>
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Linq.Enumerable.DefaultIfEmpty``1
    name: DefaultIfEmpty(Of KeyValuePair(Of TKey, TValue))
    fullName: System.Linq.Enumerable.DefaultIfEmpty(Of System.Collections.Generic.KeyValuePair(Of TKey, TValue))
  - name: (
    fullName: (
  - name: )
    fullName: )
  nameWithType: Enumerable.DefaultIfEmpty<KeyValuePair<TKey, TValue>>()
  nameWithType.vb: Enumerable.DefaultIfEmpty(Of KeyValuePair(Of TKey, TValue))()
  commentId: M:System.Linq.Enumerable.DefaultIfEmpty``1(System.Collections.Generic.IEnumerable{``0})
- uid: System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{`0,`1}}.System.Linq.Enumerable.DefaultIfEmpty``1(System.Collections.Generic.KeyValuePair{{TKey},{TValue}})
  parent: System.Linq.Enumerable
  definition: System.Linq.Enumerable.DefaultIfEmpty``1(System.Collections.Generic.IEnumerable{``0},``0)
  name: DefaultIfEmpty<KeyValuePair<TKey, TValue>>(KeyValuePair<TKey, TValue>)
  fullName: System.Linq.Enumerable.DefaultIfEmpty<System.Collections.Generic.KeyValuePair<TKey, TValue>>(System.Collections.Generic.KeyValuePair<TKey, TValue>)
  fullname.vb: System.Linq.Enumerable.DefaultIfEmpty(Of System.Collections.Generic.KeyValuePair(Of TKey, TValue))(System.Collections.Generic.KeyValuePair(Of TKey, TValue))
  name.vb: DefaultIfEmpty(Of KeyValuePair(Of TKey, TValue))(KeyValuePair(Of TKey, TValue))
  spec.csharp:
  - uid: System.Linq.Enumerable.DefaultIfEmpty``1(``0)
    name: DefaultIfEmpty<KeyValuePair<TKey, TValue>>
    fullName: System.Linq.Enumerable.DefaultIfEmpty<System.Collections.Generic.KeyValuePair<TKey, TValue>>
  - name: (
    fullName: (
  - uid: System.Collections.Generic.KeyValuePair`2
    name: KeyValuePair
    fullName: System.Collections.Generic.KeyValuePair
    isExternal: true
  - name: <
    fullName: <
  - name: TKey
    fullName: TKey
  - name: ', '
    fullName: ', '
  - name: TValue
    fullName: TValue
  - name: '>'
    fullName: '>'
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Linq.Enumerable.DefaultIfEmpty``1(``0)
    name: DefaultIfEmpty(Of KeyValuePair(Of TKey, TValue))
    fullName: System.Linq.Enumerable.DefaultIfEmpty(Of System.Collections.Generic.KeyValuePair(Of TKey, TValue))
  - name: (
    fullName: (
  - uid: System.Collections.Generic.KeyValuePair`2
    name: KeyValuePair
    fullName: System.Collections.Generic.KeyValuePair
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - name: TKey
    fullName: TKey
  - name: ', '
    fullName: ', '
  - name: TValue
    fullName: TValue
  - name: )
    fullName: )
  - name: )
    fullName: )
  nameWithType: Enumerable.DefaultIfEmpty<KeyValuePair<TKey, TValue>>(KeyValuePair<TKey, TValue>)
  nameWithType.vb: Enumerable.DefaultIfEmpty(Of KeyValuePair(Of TKey, TValue))(KeyValuePair(Of TKey, TValue))
  commentId: M:System.Linq.Enumerable.DefaultIfEmpty``1(System.Collections.Generic.IEnumerable{``0},``0)
- uid: System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{`0,`1}}.System.Linq.Enumerable.Distinct``1
  parent: System.Linq.Enumerable
  definition: System.Linq.Enumerable.Distinct``1(System.Collections.Generic.IEnumerable{``0})
  name: Distinct<KeyValuePair<TKey, TValue>>()
  fullName: System.Linq.Enumerable.Distinct<System.Collections.Generic.KeyValuePair<TKey, TValue>>()
  fullname.vb: System.Linq.Enumerable.Distinct(Of System.Collections.Generic.KeyValuePair(Of TKey, TValue))()
  name.vb: Distinct(Of KeyValuePair(Of TKey, TValue))()
  spec.csharp:
  - uid: System.Linq.Enumerable.Distinct``1
    name: Distinct<KeyValuePair<TKey, TValue>>
    fullName: System.Linq.Enumerable.Distinct<System.Collections.Generic.KeyValuePair<TKey, TValue>>
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Linq.Enumerable.Distinct``1
    name: Distinct(Of KeyValuePair(Of TKey, TValue))
    fullName: System.Linq.Enumerable.Distinct(Of System.Collections.Generic.KeyValuePair(Of TKey, TValue))
  - name: (
    fullName: (
  - name: )
    fullName: )
  nameWithType: Enumerable.Distinct<KeyValuePair<TKey, TValue>>()
  nameWithType.vb: Enumerable.Distinct(Of KeyValuePair(Of TKey, TValue))()
  commentId: M:System.Linq.Enumerable.Distinct``1(System.Collections.Generic.IEnumerable{``0})
- uid: System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{`0,`1}}.System.Linq.Enumerable.Distinct``1(System.Collections.Generic.IEqualityComparer{System.Collections.Generic.KeyValuePair{{TKey},{TValue}}})
  parent: System.Linq.Enumerable
  definition: System.Linq.Enumerable.Distinct``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEqualityComparer{``0})
  name: Distinct<KeyValuePair<TKey, TValue>>(IEqualityComparer<KeyValuePair<TKey, TValue>>)
  fullName: System.Linq.Enumerable.Distinct<System.Collections.Generic.KeyValuePair<TKey, TValue>>(System.Collections.Generic.IEqualityComparer<System.Collections.Generic.KeyValuePair<TKey, TValue>>)
  fullname.vb: System.Linq.Enumerable.Distinct(Of System.Collections.Generic.KeyValuePair(Of TKey, TValue))(System.Collections.Generic.IEqualityComparer(Of System.Collections.Generic.KeyValuePair(Of TKey, TValue)))
  name.vb: Distinct(Of KeyValuePair(Of TKey, TValue))(IEqualityComparer(Of KeyValuePair(Of TKey, TValue)))
  spec.csharp:
  - uid: System.Linq.Enumerable.Distinct``1(System.Collections.Generic.IEqualityComparer{``0})
    name: Distinct<KeyValuePair<TKey, TValue>>
    fullName: System.Linq.Enumerable.Distinct<System.Collections.Generic.KeyValuePair<TKey, TValue>>
  - name: (
    fullName: (
  - uid: System.Collections.Generic.IEqualityComparer`1
    name: IEqualityComparer
    fullName: System.Collections.Generic.IEqualityComparer
    isExternal: true
  - name: <
    fullName: <
  - uid: System.Collections.Generic.KeyValuePair`2
    name: KeyValuePair
    fullName: System.Collections.Generic.KeyValuePair
    isExternal: true
  - name: <
    fullName: <
  - name: TKey
    fullName: TKey
  - name: ', '
    fullName: ', '
  - name: TValue
    fullName: TValue
  - name: '>'
    fullName: '>'
  - name: '>'
    fullName: '>'
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Linq.Enumerable.Distinct``1(System.Collections.Generic.IEqualityComparer{``0})
    name: Distinct(Of KeyValuePair(Of TKey, TValue))
    fullName: System.Linq.Enumerable.Distinct(Of System.Collections.Generic.KeyValuePair(Of TKey, TValue))
  - name: (
    fullName: (
  - uid: System.Collections.Generic.IEqualityComparer`1
    name: IEqualityComparer
    fullName: System.Collections.Generic.IEqualityComparer
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - uid: System.Collections.Generic.KeyValuePair`2
    name: KeyValuePair
    fullName: System.Collections.Generic.KeyValuePair
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - name: TKey
    fullName: TKey
  - name: ', '
    fullName: ', '
  - name: TValue
    fullName: TValue
  - name: )
    fullName: )
  - name: )
    fullName: )
  - name: )
    fullName: )
  nameWithType: Enumerable.Distinct<KeyValuePair<TKey, TValue>>(IEqualityComparer<KeyValuePair<TKey, TValue>>)
  nameWithType.vb: Enumerable.Distinct(Of KeyValuePair(Of TKey, TValue))(IEqualityComparer(Of KeyValuePair(Of TKey, TValue)))
  commentId: M:System.Linq.Enumerable.Distinct``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEqualityComparer{``0})
- uid: System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{`0,`1}}.System.Linq.Enumerable.ElementAt``1(System.Int32)
  parent: System.Linq.Enumerable
  definition: System.Linq.Enumerable.ElementAt``1(System.Collections.Generic.IEnumerable{``0},System.Int32)
  name: ElementAt<KeyValuePair<TKey, TValue>>(Int32)
  fullName: System.Linq.Enumerable.ElementAt<System.Collections.Generic.KeyValuePair<TKey, TValue>>(System.Int32)
  fullname.vb: System.Linq.Enumerable.ElementAt(Of System.Collections.Generic.KeyValuePair(Of TKey, TValue))(System.Int32)
  name.vb: ElementAt(Of KeyValuePair(Of TKey, TValue))(Int32)
  spec.csharp:
  - uid: System.Linq.Enumerable.ElementAt``1(System.Int32)
    name: ElementAt<KeyValuePair<TKey, TValue>>
    fullName: System.Linq.Enumerable.ElementAt<System.Collections.Generic.KeyValuePair<TKey, TValue>>
  - name: (
    fullName: (
  - uid: System.Int32
    name: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Linq.Enumerable.ElementAt``1(System.Int32)
    name: ElementAt(Of KeyValuePair(Of TKey, TValue))
    fullName: System.Linq.Enumerable.ElementAt(Of System.Collections.Generic.KeyValuePair(Of TKey, TValue))
  - name: (
    fullName: (
  - uid: System.Int32
    name: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    fullName: )
  nameWithType: Enumerable.ElementAt<KeyValuePair<TKey, TValue>>(Int32)
  nameWithType.vb: Enumerable.ElementAt(Of KeyValuePair(Of TKey, TValue))(Int32)
  commentId: M:System.Linq.Enumerable.ElementAt``1(System.Collections.Generic.IEnumerable{``0},System.Int32)
- uid: System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{`0,`1}}.System.Linq.Enumerable.ElementAtOrDefault``1(System.Int32)
  parent: System.Linq.Enumerable
  definition: System.Linq.Enumerable.ElementAtOrDefault``1(System.Collections.Generic.IEnumerable{``0},System.Int32)
  name: ElementAtOrDefault<KeyValuePair<TKey, TValue>>(Int32)
  fullName: System.Linq.Enumerable.ElementAtOrDefault<System.Collections.Generic.KeyValuePair<TKey, TValue>>(System.Int32)
  fullname.vb: System.Linq.Enumerable.ElementAtOrDefault(Of System.Collections.Generic.KeyValuePair(Of TKey, TValue))(System.Int32)
  name.vb: ElementAtOrDefault(Of KeyValuePair(Of TKey, TValue))(Int32)
  spec.csharp:
  - uid: System.Linq.Enumerable.ElementAtOrDefault``1(System.Int32)
    name: ElementAtOrDefault<KeyValuePair<TKey, TValue>>
    fullName: System.Linq.Enumerable.ElementAtOrDefault<System.Collections.Generic.KeyValuePair<TKey, TValue>>
  - name: (
    fullName: (
  - uid: System.Int32
    name: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Linq.Enumerable.ElementAtOrDefault``1(System.Int32)
    name: ElementAtOrDefault(Of KeyValuePair(Of TKey, TValue))
    fullName: System.Linq.Enumerable.ElementAtOrDefault(Of System.Collections.Generic.KeyValuePair(Of TKey, TValue))
  - name: (
    fullName: (
  - uid: System.Int32
    name: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    fullName: )
  nameWithType: Enumerable.ElementAtOrDefault<KeyValuePair<TKey, TValue>>(Int32)
  nameWithType.vb: Enumerable.ElementAtOrDefault(Of KeyValuePair(Of TKey, TValue))(Int32)
  commentId: M:System.Linq.Enumerable.ElementAtOrDefault``1(System.Collections.Generic.IEnumerable{``0},System.Int32)
- uid: System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{`0,`1}}.System.Linq.Enumerable.Except``1(System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{{TKey},{TValue}}})
  parent: System.Linq.Enumerable
  definition: System.Linq.Enumerable.Except``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0})
  name: Except<KeyValuePair<TKey, TValue>>(IEnumerable<KeyValuePair<TKey, TValue>>)
  fullName: System.Linq.Enumerable.Except<System.Collections.Generic.KeyValuePair<TKey, TValue>>(System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<TKey, TValue>>)
  fullname.vb: System.Linq.Enumerable.Except(Of System.Collections.Generic.KeyValuePair(Of TKey, TValue))(System.Collections.Generic.IEnumerable(Of System.Collections.Generic.KeyValuePair(Of TKey, TValue)))
  name.vb: Except(Of KeyValuePair(Of TKey, TValue))(IEnumerable(Of KeyValuePair(Of TKey, TValue)))
  spec.csharp:
  - uid: System.Linq.Enumerable.Except``1(System.Collections.Generic.IEnumerable{``0})
    name: Except<KeyValuePair<TKey, TValue>>
    fullName: System.Linq.Enumerable.Except<System.Collections.Generic.KeyValuePair<TKey, TValue>>
  - name: (
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    fullName: <
  - uid: System.Collections.Generic.KeyValuePair`2
    name: KeyValuePair
    fullName: System.Collections.Generic.KeyValuePair
    isExternal: true
  - name: <
    fullName: <
  - name: TKey
    fullName: TKey
  - name: ', '
    fullName: ', '
  - name: TValue
    fullName: TValue
  - name: '>'
    fullName: '>'
  - name: '>'
    fullName: '>'
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Linq.Enumerable.Except``1(System.Collections.Generic.IEnumerable{``0})
    name: Except(Of KeyValuePair(Of TKey, TValue))
    fullName: System.Linq.Enumerable.Except(Of System.Collections.Generic.KeyValuePair(Of TKey, TValue))
  - name: (
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - uid: System.Collections.Generic.KeyValuePair`2
    name: KeyValuePair
    fullName: System.Collections.Generic.KeyValuePair
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - name: TKey
    fullName: TKey
  - name: ', '
    fullName: ', '
  - name: TValue
    fullName: TValue
  - name: )
    fullName: )
  - name: )
    fullName: )
  - name: )
    fullName: )
  nameWithType: Enumerable.Except<KeyValuePair<TKey, TValue>>(IEnumerable<KeyValuePair<TKey, TValue>>)
  nameWithType.vb: Enumerable.Except(Of KeyValuePair(Of TKey, TValue))(IEnumerable(Of KeyValuePair(Of TKey, TValue)))
  commentId: M:System.Linq.Enumerable.Except``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0})
- uid: System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{`0,`1}}.System.Linq.Enumerable.Except``1(System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{{TKey},{TValue}}},System.Collections.Generic.IEqualityComparer{System.Collections.Generic.KeyValuePair{{TKey},{TValue}}})
  parent: System.Linq.Enumerable
  definition: System.Linq.Enumerable.Except``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEqualityComparer{``0})
  name: Except<KeyValuePair<TKey, TValue>>(IEnumerable<KeyValuePair<TKey, TValue>>, IEqualityComparer<KeyValuePair<TKey, TValue>>)
  fullName: System.Linq.Enumerable.Except<System.Collections.Generic.KeyValuePair<TKey, TValue>>(System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<TKey, TValue>>, System.Collections.Generic.IEqualityComparer<System.Collections.Generic.KeyValuePair<TKey, TValue>>)
  fullname.vb: System.Linq.Enumerable.Except(Of System.Collections.Generic.KeyValuePair(Of TKey, TValue))(System.Collections.Generic.IEnumerable(Of System.Collections.Generic.KeyValuePair(Of TKey, TValue)), System.Collections.Generic.IEqualityComparer(Of System.Collections.Generic.KeyValuePair(Of TKey, TValue)))
  name.vb: Except(Of KeyValuePair(Of TKey, TValue))(IEnumerable(Of KeyValuePair(Of TKey, TValue)), IEqualityComparer(Of KeyValuePair(Of TKey, TValue)))
  spec.csharp:
  - uid: System.Linq.Enumerable.Except``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEqualityComparer{``0})
    name: Except<KeyValuePair<TKey, TValue>>
    fullName: System.Linq.Enumerable.Except<System.Collections.Generic.KeyValuePair<TKey, TValue>>
  - name: (
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    fullName: <
  - uid: System.Collections.Generic.KeyValuePair`2
    name: KeyValuePair
    fullName: System.Collections.Generic.KeyValuePair
    isExternal: true
  - name: <
    fullName: <
  - name: TKey
    fullName: TKey
  - name: ', '
    fullName: ', '
  - name: TValue
    fullName: TValue
  - name: '>'
    fullName: '>'
  - name: '>'
    fullName: '>'
  - name: ', '
    fullName: ', '
  - uid: System.Collections.Generic.IEqualityComparer`1
    name: IEqualityComparer
    fullName: System.Collections.Generic.IEqualityComparer
    isExternal: true
  - name: <
    fullName: <
  - uid: System.Collections.Generic.KeyValuePair`2
    name: KeyValuePair
    fullName: System.Collections.Generic.KeyValuePair
    isExternal: true
  - name: <
    fullName: <
  - name: TKey
    fullName: TKey
  - name: ', '
    fullName: ', '
  - name: TValue
    fullName: TValue
  - name: '>'
    fullName: '>'
  - name: '>'
    fullName: '>'
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Linq.Enumerable.Except``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEqualityComparer{``0})
    name: Except(Of KeyValuePair(Of TKey, TValue))
    fullName: System.Linq.Enumerable.Except(Of System.Collections.Generic.KeyValuePair(Of TKey, TValue))
  - name: (
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - uid: System.Collections.Generic.KeyValuePair`2
    name: KeyValuePair
    fullName: System.Collections.Generic.KeyValuePair
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - name: TKey
    fullName: TKey
  - name: ', '
    fullName: ', '
  - name: TValue
    fullName: TValue
  - name: )
    fullName: )
  - name: )
    fullName: )
  - name: ', '
    fullName: ', '
  - uid: System.Collections.Generic.IEqualityComparer`1
    name: IEqualityComparer
    fullName: System.Collections.Generic.IEqualityComparer
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - uid: System.Collections.Generic.KeyValuePair`2
    name: KeyValuePair
    fullName: System.Collections.Generic.KeyValuePair
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - name: TKey
    fullName: TKey
  - name: ', '
    fullName: ', '
  - name: TValue
    fullName: TValue
  - name: )
    fullName: )
  - name: )
    fullName: )
  - name: )
    fullName: )
  nameWithType: Enumerable.Except<KeyValuePair<TKey, TValue>>(IEnumerable<KeyValuePair<TKey, TValue>>, IEqualityComparer<KeyValuePair<TKey, TValue>>)
  nameWithType.vb: Enumerable.Except(Of KeyValuePair(Of TKey, TValue))(IEnumerable(Of KeyValuePair(Of TKey, TValue)), IEqualityComparer(Of KeyValuePair(Of TKey, TValue)))
  commentId: M:System.Linq.Enumerable.Except``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEqualityComparer{``0})
- uid: System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{`0,`1}}.System.Linq.Enumerable.First``1
  parent: System.Linq.Enumerable
  definition: System.Linq.Enumerable.First``1(System.Collections.Generic.IEnumerable{``0})
  name: First<KeyValuePair<TKey, TValue>>()
  fullName: System.Linq.Enumerable.First<System.Collections.Generic.KeyValuePair<TKey, TValue>>()
  fullname.vb: System.Linq.Enumerable.First(Of System.Collections.Generic.KeyValuePair(Of TKey, TValue))()
  name.vb: First(Of KeyValuePair(Of TKey, TValue))()
  spec.csharp:
  - uid: System.Linq.Enumerable.First``1
    name: First<KeyValuePair<TKey, TValue>>
    fullName: System.Linq.Enumerable.First<System.Collections.Generic.KeyValuePair<TKey, TValue>>
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Linq.Enumerable.First``1
    name: First(Of KeyValuePair(Of TKey, TValue))
    fullName: System.Linq.Enumerable.First(Of System.Collections.Generic.KeyValuePair(Of TKey, TValue))
  - name: (
    fullName: (
  - name: )
    fullName: )
  nameWithType: Enumerable.First<KeyValuePair<TKey, TValue>>()
  nameWithType.vb: Enumerable.First(Of KeyValuePair(Of TKey, TValue))()
  commentId: M:System.Linq.Enumerable.First``1(System.Collections.Generic.IEnumerable{``0})
- uid: System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{`0,`1}}.System.Linq.Enumerable.First``1(System.Func{System.Collections.Generic.KeyValuePair{{TKey},{TValue}},System.Boolean})
  parent: System.Linq.Enumerable
  definition: System.Linq.Enumerable.First``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})
  name: First<KeyValuePair<TKey, TValue>>(Func<KeyValuePair<TKey, TValue>, Boolean>)
  fullName: System.Linq.Enumerable.First<System.Collections.Generic.KeyValuePair<TKey, TValue>>(System.Func<System.Collections.Generic.KeyValuePair<TKey, TValue>, System.Boolean>)
  fullname.vb: System.Linq.Enumerable.First(Of System.Collections.Generic.KeyValuePair(Of TKey, TValue))(System.Func(Of System.Collections.Generic.KeyValuePair(Of TKey, TValue), System.Boolean))
  name.vb: First(Of KeyValuePair(Of TKey, TValue))(Func(Of KeyValuePair(Of TKey, TValue), Boolean))
  spec.csharp:
  - uid: System.Linq.Enumerable.First``1(System.Func{``0,System.Boolean})
    name: First<KeyValuePair<TKey, TValue>>
    fullName: System.Linq.Enumerable.First<System.Collections.Generic.KeyValuePair<TKey, TValue>>
  - name: (
    fullName: (
  - uid: System.Func`2
    name: Func
    fullName: System.Func
    isExternal: true
  - name: <
    fullName: <
  - uid: System.Collections.Generic.KeyValuePair`2
    name: KeyValuePair
    fullName: System.Collections.Generic.KeyValuePair
    isExternal: true
  - name: <
    fullName: <
  - name: TKey
    fullName: TKey
  - name: ', '
    fullName: ', '
  - name: TValue
    fullName: TValue
  - name: '>'
    fullName: '>'
  - name: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: '>'
    fullName: '>'
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Linq.Enumerable.First``1(System.Func{``0,System.Boolean})
    name: First(Of KeyValuePair(Of TKey, TValue))
    fullName: System.Linq.Enumerable.First(Of System.Collections.Generic.KeyValuePair(Of TKey, TValue))
  - name: (
    fullName: (
  - uid: System.Func`2
    name: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - uid: System.Collections.Generic.KeyValuePair`2
    name: KeyValuePair
    fullName: System.Collections.Generic.KeyValuePair
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - name: TKey
    fullName: TKey
  - name: ', '
    fullName: ', '
  - name: TValue
    fullName: TValue
  - name: )
    fullName: )
  - name: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    fullName: )
  - name: )
    fullName: )
  nameWithType: Enumerable.First<KeyValuePair<TKey, TValue>>(Func<KeyValuePair<TKey, TValue>, Boolean>)
  nameWithType.vb: Enumerable.First(Of KeyValuePair(Of TKey, TValue))(Func(Of KeyValuePair(Of TKey, TValue), Boolean))
  commentId: M:System.Linq.Enumerable.First``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})
- uid: System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{`0,`1}}.System.Linq.Enumerable.FirstOrDefault``1
  parent: System.Linq.Enumerable
  definition: System.Linq.Enumerable.FirstOrDefault``1(System.Collections.Generic.IEnumerable{``0})
  name: FirstOrDefault<KeyValuePair<TKey, TValue>>()
  fullName: System.Linq.Enumerable.FirstOrDefault<System.Collections.Generic.KeyValuePair<TKey, TValue>>()
  fullname.vb: System.Linq.Enumerable.FirstOrDefault(Of System.Collections.Generic.KeyValuePair(Of TKey, TValue))()
  name.vb: FirstOrDefault(Of KeyValuePair(Of TKey, TValue))()
  spec.csharp:
  - uid: System.Linq.Enumerable.FirstOrDefault``1
    name: FirstOrDefault<KeyValuePair<TKey, TValue>>
    fullName: System.Linq.Enumerable.FirstOrDefault<System.Collections.Generic.KeyValuePair<TKey, TValue>>
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Linq.Enumerable.FirstOrDefault``1
    name: FirstOrDefault(Of KeyValuePair(Of TKey, TValue))
    fullName: System.Linq.Enumerable.FirstOrDefault(Of System.Collections.Generic.KeyValuePair(Of TKey, TValue))
  - name: (
    fullName: (
  - name: )
    fullName: )
  nameWithType: Enumerable.FirstOrDefault<KeyValuePair<TKey, TValue>>()
  nameWithType.vb: Enumerable.FirstOrDefault(Of KeyValuePair(Of TKey, TValue))()
  commentId: M:System.Linq.Enumerable.FirstOrDefault``1(System.Collections.Generic.IEnumerable{``0})
- uid: System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{`0,`1}}.System.Linq.Enumerable.FirstOrDefault``1(System.Func{System.Collections.Generic.KeyValuePair{{TKey},{TValue}},System.Boolean})
  parent: System.Linq.Enumerable
  definition: System.Linq.Enumerable.FirstOrDefault``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})
  name: FirstOrDefault<KeyValuePair<TKey, TValue>>(Func<KeyValuePair<TKey, TValue>, Boolean>)
  fullName: System.Linq.Enumerable.FirstOrDefault<System.Collections.Generic.KeyValuePair<TKey, TValue>>(System.Func<System.Collections.Generic.KeyValuePair<TKey, TValue>, System.Boolean>)
  fullname.vb: System.Linq.Enumerable.FirstOrDefault(Of System.Collections.Generic.KeyValuePair(Of TKey, TValue))(System.Func(Of System.Collections.Generic.KeyValuePair(Of TKey, TValue), System.Boolean))
  name.vb: FirstOrDefault(Of KeyValuePair(Of TKey, TValue))(Func(Of KeyValuePair(Of TKey, TValue), Boolean))
  spec.csharp:
  - uid: System.Linq.Enumerable.FirstOrDefault``1(System.Func{``0,System.Boolean})
    name: FirstOrDefault<KeyValuePair<TKey, TValue>>
    fullName: System.Linq.Enumerable.FirstOrDefault<System.Collections.Generic.KeyValuePair<TKey, TValue>>
  - name: (
    fullName: (
  - uid: System.Func`2
    name: Func
    fullName: System.Func
    isExternal: true
  - name: <
    fullName: <
  - uid: System.Collections.Generic.KeyValuePair`2
    name: KeyValuePair
    fullName: System.Collections.Generic.KeyValuePair
    isExternal: true
  - name: <
    fullName: <
  - name: TKey
    fullName: TKey
  - name: ', '
    fullName: ', '
  - name: TValue
    fullName: TValue
  - name: '>'
    fullName: '>'
  - name: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: '>'
    fullName: '>'
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Linq.Enumerable.FirstOrDefault``1(System.Func{``0,System.Boolean})
    name: FirstOrDefault(Of KeyValuePair(Of TKey, TValue))
    fullName: System.Linq.Enumerable.FirstOrDefault(Of System.Collections.Generic.KeyValuePair(Of TKey, TValue))
  - name: (
    fullName: (
  - uid: System.Func`2
    name: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - uid: System.Collections.Generic.KeyValuePair`2
    name: KeyValuePair
    fullName: System.Collections.Generic.KeyValuePair
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - name: TKey
    fullName: TKey
  - name: ', '
    fullName: ', '
  - name: TValue
    fullName: TValue
  - name: )
    fullName: )
  - name: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    fullName: )
  - name: )
    fullName: )
  nameWithType: Enumerable.FirstOrDefault<KeyValuePair<TKey, TValue>>(Func<KeyValuePair<TKey, TValue>, Boolean>)
  nameWithType.vb: Enumerable.FirstOrDefault(Of KeyValuePair(Of TKey, TValue))(Func(Of KeyValuePair(Of TKey, TValue), Boolean))
  commentId: M:System.Linq.Enumerable.FirstOrDefault``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})
- uid: System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{`0,`1}}.System.Linq.Enumerable.GroupBy``2(System.Func{System.Collections.Generic.KeyValuePair{{TKey},{TValue}},{TKey}})
  parent: System.Linq.Enumerable
  definition: System.Linq.Enumerable.GroupBy``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})
  name: GroupBy<KeyValuePair<TKey, TValue>, TKey>(Func<KeyValuePair<TKey, TValue>, TKey>)
  fullName: System.Linq.Enumerable.GroupBy<System.Collections.Generic.KeyValuePair<TKey, TValue>, TKey>(System.Func<System.Collections.Generic.KeyValuePair<TKey, TValue>, TKey>)
  fullname.vb: System.Linq.Enumerable.GroupBy(Of System.Collections.Generic.KeyValuePair(Of TKey, TValue), TKey)(System.Func(Of System.Collections.Generic.KeyValuePair(Of TKey, TValue), TKey))
  name.vb: GroupBy(Of KeyValuePair(Of TKey, TValue), TKey)(Func(Of KeyValuePair(Of TKey, TValue), TKey))
  spec.csharp:
  - uid: System.Linq.Enumerable.GroupBy``2(System.Func{``0,``1})
    name: GroupBy<KeyValuePair<TKey, TValue>, TKey>
    fullName: System.Linq.Enumerable.GroupBy<System.Collections.Generic.KeyValuePair<TKey, TValue>, TKey>
  - name: (
    fullName: (
  - uid: System.Func`2
    name: Func
    fullName: System.Func
    isExternal: true
  - name: <
    fullName: <
  - uid: System.Collections.Generic.KeyValuePair`2
    name: KeyValuePair
    fullName: System.Collections.Generic.KeyValuePair
    isExternal: true
  - name: <
    fullName: <
  - name: TKey
    fullName: TKey
  - name: ', '
    fullName: ', '
  - name: TValue
    fullName: TValue
  - name: '>'
    fullName: '>'
  - name: ', '
    fullName: ', '
  - name: TKey
    fullName: TKey
  - name: '>'
    fullName: '>'
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Linq.Enumerable.GroupBy``2(System.Func{``0,``1})
    name: GroupBy(Of KeyValuePair(Of TKey, TValue), TKey)
    fullName: System.Linq.Enumerable.GroupBy(Of System.Collections.Generic.KeyValuePair(Of TKey, TValue), TKey)
  - name: (
    fullName: (
  - uid: System.Func`2
    name: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - uid: System.Collections.Generic.KeyValuePair`2
    name: KeyValuePair
    fullName: System.Collections.Generic.KeyValuePair
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - name: TKey
    fullName: TKey
  - name: ', '
    fullName: ', '
  - name: TValue
    fullName: TValue
  - name: )
    fullName: )
  - name: ', '
    fullName: ', '
  - name: TKey
    fullName: TKey
  - name: )
    fullName: )
  - name: )
    fullName: )
  nameWithType: Enumerable.GroupBy<KeyValuePair<TKey, TValue>, TKey>(Func<KeyValuePair<TKey, TValue>, TKey>)
  nameWithType.vb: Enumerable.GroupBy(Of KeyValuePair(Of TKey, TValue), TKey)(Func(Of KeyValuePair(Of TKey, TValue), TKey))
  commentId: M:System.Linq.Enumerable.GroupBy``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})
- uid: System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{`0,`1}}.System.Linq.Enumerable.GroupBy``2(System.Func{System.Collections.Generic.KeyValuePair{{TKey},{TValue}},{TKey}},System.Collections.Generic.IEqualityComparer{{TKey}})
  parent: System.Linq.Enumerable
  definition: System.Linq.Enumerable.GroupBy``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IEqualityComparer{``1})
  name: GroupBy<KeyValuePair<TKey, TValue>, TKey>(Func<KeyValuePair<TKey, TValue>, TKey>, IEqualityComparer<TKey>)
  fullName: System.Linq.Enumerable.GroupBy<System.Collections.Generic.KeyValuePair<TKey, TValue>, TKey>(System.Func<System.Collections.Generic.KeyValuePair<TKey, TValue>, TKey>, System.Collections.Generic.IEqualityComparer<TKey>)
  fullname.vb: System.Linq.Enumerable.GroupBy(Of System.Collections.Generic.KeyValuePair(Of TKey, TValue), TKey)(System.Func(Of System.Collections.Generic.KeyValuePair(Of TKey, TValue), TKey), System.Collections.Generic.IEqualityComparer(Of TKey))
  name.vb: GroupBy(Of KeyValuePair(Of TKey, TValue), TKey)(Func(Of KeyValuePair(Of TKey, TValue), TKey), IEqualityComparer(Of TKey))
  spec.csharp:
  - uid: System.Linq.Enumerable.GroupBy``2(System.Func{``0,``1},System.Collections.Generic.IEqualityComparer{``1})
    name: GroupBy<KeyValuePair<TKey, TValue>, TKey>
    fullName: System.Linq.Enumerable.GroupBy<System.Collections.Generic.KeyValuePair<TKey, TValue>, TKey>
  - name: (
    fullName: (
  - uid: System.Func`2
    name: Func
    fullName: System.Func
    isExternal: true
  - name: <
    fullName: <
  - uid: System.Collections.Generic.KeyValuePair`2
    name: KeyValuePair
    fullName: System.Collections.Generic.KeyValuePair
    isExternal: true
  - name: <
    fullName: <
  - name: TKey
    fullName: TKey
  - name: ', '
    fullName: ', '
  - name: TValue
    fullName: TValue
  - name: '>'
    fullName: '>'
  - name: ', '
    fullName: ', '
  - name: TKey
    fullName: TKey
  - name: '>'
    fullName: '>'
  - name: ', '
    fullName: ', '
  - uid: System.Collections.Generic.IEqualityComparer`1
    name: IEqualityComparer
    fullName: System.Collections.Generic.IEqualityComparer
    isExternal: true
  - name: <
    fullName: <
  - name: TKey
    fullName: TKey
  - name: '>'
    fullName: '>'
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Linq.Enumerable.GroupBy``2(System.Func{``0,``1},System.Collections.Generic.IEqualityComparer{``1})
    name: GroupBy(Of KeyValuePair(Of TKey, TValue), TKey)
    fullName: System.Linq.Enumerable.GroupBy(Of System.Collections.Generic.KeyValuePair(Of TKey, TValue), TKey)
  - name: (
    fullName: (
  - uid: System.Func`2
    name: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - uid: System.Collections.Generic.KeyValuePair`2
    name: KeyValuePair
    fullName: System.Collections.Generic.KeyValuePair
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - name: TKey
    fullName: TKey
  - name: ', '
    fullName: ', '
  - name: TValue
    fullName: TValue
  - name: )
    fullName: )
  - name: ', '
    fullName: ', '
  - name: TKey
    fullName: TKey
  - name: )
    fullName: )
  - name: ', '
    fullName: ', '
  - uid: System.Collections.Generic.IEqualityComparer`1
    name: IEqualityComparer
    fullName: System.Collections.Generic.IEqualityComparer
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - name: TKey
    fullName: TKey
  - name: )
    fullName: )
  - name: )
    fullName: )
  nameWithType: Enumerable.GroupBy<KeyValuePair<TKey, TValue>, TKey>(Func<KeyValuePair<TKey, TValue>, TKey>, IEqualityComparer<TKey>)
  nameWithType.vb: Enumerable.GroupBy(Of KeyValuePair(Of TKey, TValue), TKey)(Func(Of KeyValuePair(Of TKey, TValue), TKey), IEqualityComparer(Of TKey))
  commentId: M:System.Linq.Enumerable.GroupBy``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IEqualityComparer{``1})
- uid: System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{`0,`1}}.System.Linq.Enumerable.GroupBy``3(System.Func{System.Collections.Generic.KeyValuePair{{TKey},{TValue}},{TKey}},System.Func{System.Collections.Generic.KeyValuePair{{TKey},{TValue}},{TElement}})
  parent: System.Linq.Enumerable
  definition: System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2})
  name: GroupBy<KeyValuePair<TKey, TValue>, TKey, TElement>(Func<KeyValuePair<TKey, TValue>, TKey>, Func<KeyValuePair<TKey, TValue>, TElement>)
  fullName: System.Linq.Enumerable.GroupBy<System.Collections.Generic.KeyValuePair<TKey, TValue>, TKey, TElement>(System.Func<System.Collections.Generic.KeyValuePair<TKey, TValue>, TKey>, System.Func<System.Collections.Generic.KeyValuePair<TKey, TValue>, TElement>)
  fullname.vb: System.Linq.Enumerable.GroupBy(Of System.Collections.Generic.KeyValuePair(Of TKey, TValue), TKey, TElement)(System.Func(Of System.Collections.Generic.KeyValuePair(Of TKey, TValue), TKey), System.Func(Of System.Collections.Generic.KeyValuePair(Of TKey, TValue), TElement))
  name.vb: GroupBy(Of KeyValuePair(Of TKey, TValue), TKey, TElement)(Func(Of KeyValuePair(Of TKey, TValue), TKey), Func(Of KeyValuePair(Of TKey, TValue), TElement))
  spec.csharp:
  - uid: System.Linq.Enumerable.GroupBy``3(System.Func{``0,``1},System.Func{``0,``2})
    name: GroupBy<KeyValuePair<TKey, TValue>, TKey, TElement>
    fullName: System.Linq.Enumerable.GroupBy<System.Collections.Generic.KeyValuePair<TKey, TValue>, TKey, TElement>
  - name: (
    fullName: (
  - uid: System.Func`2
    name: Func
    fullName: System.Func
    isExternal: true
  - name: <
    fullName: <
  - uid: System.Collections.Generic.KeyValuePair`2
    name: KeyValuePair
    fullName: System.Collections.Generic.KeyValuePair
    isExternal: true
  - name: <
    fullName: <
  - name: TKey
    fullName: TKey
  - name: ', '
    fullName: ', '
  - name: TValue
    fullName: TValue
  - name: '>'
    fullName: '>'
  - name: ', '
    fullName: ', '
  - name: TKey
    fullName: TKey
  - name: '>'
    fullName: '>'
  - name: ', '
    fullName: ', '
  - uid: System.Func`2
    name: Func
    fullName: System.Func
    isExternal: true
  - name: <
    fullName: <
  - uid: System.Collections.Generic.KeyValuePair`2
    name: KeyValuePair
    fullName: System.Collections.Generic.KeyValuePair
    isExternal: true
  - name: <
    fullName: <
  - name: TKey
    fullName: TKey
  - name: ', '
    fullName: ', '
  - name: TValue
    fullName: TValue
  - name: '>'
    fullName: '>'
  - name: ', '
    fullName: ', '
  - name: TElement
    fullName: TElement
  - name: '>'
    fullName: '>'
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Linq.Enumerable.GroupBy``3(System.Func{``0,``1},System.Func{``0,``2})
    name: GroupBy(Of KeyValuePair(Of TKey, TValue), TKey, TElement)
    fullName: System.Linq.Enumerable.GroupBy(Of System.Collections.Generic.KeyValuePair(Of TKey, TValue), TKey, TElement)
  - name: (
    fullName: (
  - uid: System.Func`2
    name: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - uid: System.Collections.Generic.KeyValuePair`2
    name: KeyValuePair
    fullName: System.Collections.Generic.KeyValuePair
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - name: TKey
    fullName: TKey
  - name: ', '
    fullName: ', '
  - name: TValue
    fullName: TValue
  - name: )
    fullName: )
  - name: ', '
    fullName: ', '
  - name: TKey
    fullName: TKey
  - name: )
    fullName: )
  - name: ', '
    fullName: ', '
  - uid: System.Func`2
    name: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - uid: System.Collections.Generic.KeyValuePair`2
    name: KeyValuePair
    fullName: System.Collections.Generic.KeyValuePair
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - name: TKey
    fullName: TKey
  - name: ', '
    fullName: ', '
  - name: TValue
    fullName: TValue
  - name: )
    fullName: )
  - name: ', '
    fullName: ', '
  - name: TElement
    fullName: TElement
  - name: )
    fullName: )
  - name: )
    fullName: )
  nameWithType: Enumerable.GroupBy<KeyValuePair<TKey, TValue>, TKey, TElement>(Func<KeyValuePair<TKey, TValue>, TKey>, Func<KeyValuePair<TKey, TValue>, TElement>)
  nameWithType.vb: Enumerable.GroupBy(Of KeyValuePair(Of TKey, TValue), TKey, TElement)(Func(Of KeyValuePair(Of TKey, TValue), TKey), Func(Of KeyValuePair(Of TKey, TValue), TElement))
  commentId: M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2})
- uid: System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{`0,`1}}.System.Linq.Enumerable.GroupBy``3(System.Func{System.Collections.Generic.KeyValuePair{{TKey},{TValue}},{TKey}},System.Func{System.Collections.Generic.KeyValuePair{{TKey},{TValue}},{TElement}},System.Collections.Generic.IEqualityComparer{{TKey}})
  parent: System.Linq.Enumerable
  definition: System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})
  name: GroupBy<KeyValuePair<TKey, TValue>, TKey, TElement>(Func<KeyValuePair<TKey, TValue>, TKey>, Func<KeyValuePair<TKey, TValue>, TElement>, IEqualityComparer<TKey>)
  fullName: System.Linq.Enumerable.GroupBy<System.Collections.Generic.KeyValuePair<TKey, TValue>, TKey, TElement>(System.Func<System.Collections.Generic.KeyValuePair<TKey, TValue>, TKey>, System.Func<System.Collections.Generic.KeyValuePair<TKey, TValue>, TElement>, System.Collections.Generic.IEqualityComparer<TKey>)
  fullname.vb: System.Linq.Enumerable.GroupBy(Of System.Collections.Generic.KeyValuePair(Of TKey, TValue), TKey, TElement)(System.Func(Of System.Collections.Generic.KeyValuePair(Of TKey, TValue), TKey), System.Func(Of System.Collections.Generic.KeyValuePair(Of TKey, TValue), TElement), System.Collections.Generic.IEqualityComparer(Of TKey))
  name.vb: GroupBy(Of KeyValuePair(Of TKey, TValue), TKey, TElement)(Func(Of KeyValuePair(Of TKey, TValue), TKey), Func(Of KeyValuePair(Of TKey, TValue), TElement), IEqualityComparer(Of TKey))
  spec.csharp:
  - uid: System.Linq.Enumerable.GroupBy``3(System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})
    name: GroupBy<KeyValuePair<TKey, TValue>, TKey, TElement>
    fullName: System.Linq.Enumerable.GroupBy<System.Collections.Generic.KeyValuePair<TKey, TValue>, TKey, TElement>
  - name: (
    fullName: (
  - uid: System.Func`2
    name: Func
    fullName: System.Func
    isExternal: true
  - name: <
    fullName: <
  - uid: System.Collections.Generic.KeyValuePair`2
    name: KeyValuePair
    fullName: System.Collections.Generic.KeyValuePair
    isExternal: true
  - name: <
    fullName: <
  - name: TKey
    fullName: TKey
  - name: ', '
    fullName: ', '
  - name: TValue
    fullName: TValue
  - name: '>'
    fullName: '>'
  - name: ', '
    fullName: ', '
  - name: TKey
    fullName: TKey
  - name: '>'
    fullName: '>'
  - name: ', '
    fullName: ', '
  - uid: System.Func`2
    name: Func
    fullName: System.Func
    isExternal: true
  - name: <
    fullName: <
  - uid: System.Collections.Generic.KeyValuePair`2
    name: KeyValuePair
    fullName: System.Collections.Generic.KeyValuePair
    isExternal: true
  - name: <
    fullName: <
  - name: TKey
    fullName: TKey
  - name: ', '
    fullName: ', '
  - name: TValue
    fullName: TValue
  - name: '>'
    fullName: '>'
  - name: ', '
    fullName: ', '
  - name: TElement
    fullName: TElement
  - name: '>'
    fullName: '>'
  - name: ', '
    fullName: ', '
  - uid: System.Collections.Generic.IEqualityComparer`1
    name: IEqualityComparer
    fullName: System.Collections.Generic.IEqualityComparer
    isExternal: true
  - name: <
    fullName: <
  - name: TKey
    fullName: TKey
  - name: '>'
    fullName: '>'
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Linq.Enumerable.GroupBy``3(System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})
    name: GroupBy(Of KeyValuePair(Of TKey, TValue), TKey, TElement)
    fullName: System.Linq.Enumerable.GroupBy(Of System.Collections.Generic.KeyValuePair(Of TKey, TValue), TKey, TElement)
  - name: (
    fullName: (
  - uid: System.Func`2
    name: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - uid: System.Collections.Generic.KeyValuePair`2
    name: KeyValuePair
    fullName: System.Collections.Generic.KeyValuePair
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - name: TKey
    fullName: TKey
  - name: ', '
    fullName: ', '
  - name: TValue
    fullName: TValue
  - name: )
    fullName: )
  - name: ', '
    fullName: ', '
  - name: TKey
    fullName: TKey
  - name: )
    fullName: )
  - name: ', '
    fullName: ', '
  - uid: System.Func`2
    name: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - uid: System.Collections.Generic.KeyValuePair`2
    name: KeyValuePair
    fullName: System.Collections.Generic.KeyValuePair
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - name: TKey
    fullName: TKey
  - name: ', '
    fullName: ', '
  - name: TValue
    fullName: TValue
  - name: )
    fullName: )
  - name: ', '
    fullName: ', '
  - name: TElement
    fullName: TElement
  - name: )
    fullName: )
  - name: ', '
    fullName: ', '
  - uid: System.Collections.Generic.IEqualityComparer`1
    name: IEqualityComparer
    fullName: System.Collections.Generic.IEqualityComparer
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - name: TKey
    fullName: TKey
  - name: )
    fullName: )
  - name: )
    fullName: )
  nameWithType: Enumerable.GroupBy<KeyValuePair<TKey, TValue>, TKey, TElement>(Func<KeyValuePair<TKey, TValue>, TKey>, Func<KeyValuePair<TKey, TValue>, TElement>, IEqualityComparer<TKey>)
  nameWithType.vb: Enumerable.GroupBy(Of KeyValuePair(Of TKey, TValue), TKey, TElement)(Func(Of KeyValuePair(Of TKey, TValue), TKey), Func(Of KeyValuePair(Of TKey, TValue), TElement), IEqualityComparer(Of TKey))
  commentId: M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})
- uid: System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{`0,`1}}.System.Linq.Enumerable.GroupBy``3(System.Func{System.Collections.Generic.KeyValuePair{{TKey},{TValue}},{TKey}},System.Func{{TKey},System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{{TKey},{TValue}}},{TResult}})
  parent: System.Linq.Enumerable
  definition: System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``1,System.Collections.Generic.IEnumerable{``0},``2})
  name: GroupBy<KeyValuePair<TKey, TValue>, TKey, TResult>(Func<KeyValuePair<TKey, TValue>, TKey>, Func<TKey, IEnumerable<KeyValuePair<TKey, TValue>>, TResult>)
  fullName: System.Linq.Enumerable.GroupBy<System.Collections.Generic.KeyValuePair<TKey, TValue>, TKey, TResult>(System.Func<System.Collections.Generic.KeyValuePair<TKey, TValue>, TKey>, System.Func<TKey, System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<TKey, TValue>>, TResult>)
  fullname.vb: System.Linq.Enumerable.GroupBy(Of System.Collections.Generic.KeyValuePair(Of TKey, TValue), TKey, TResult)(System.Func(Of System.Collections.Generic.KeyValuePair(Of TKey, TValue), TKey), System.Func(Of TKey, System.Collections.Generic.IEnumerable(Of System.Collections.Generic.KeyValuePair(Of TKey, TValue)), TResult))
  name.vb: GroupBy(Of KeyValuePair(Of TKey, TValue), TKey, TResult)(Func(Of KeyValuePair(Of TKey, TValue), TKey), Func(Of TKey, IEnumerable(Of KeyValuePair(Of TKey, TValue)), TResult))
  spec.csharp:
  - uid: System.Linq.Enumerable.GroupBy``3(System.Func{``0,``1},System.Func{``1,System.Collections.Generic.IEnumerable{``0},``2})
    name: GroupBy<KeyValuePair<TKey, TValue>, TKey, TResult>
    fullName: System.Linq.Enumerable.GroupBy<System.Collections.Generic.KeyValuePair<TKey, TValue>, TKey, TResult>
  - name: (
    fullName: (
  - uid: System.Func`2
    name: Func
    fullName: System.Func
    isExternal: true
  - name: <
    fullName: <
  - uid: System.Collections.Generic.KeyValuePair`2
    name: KeyValuePair
    fullName: System.Collections.Generic.KeyValuePair
    isExternal: true
  - name: <
    fullName: <
  - name: TKey
    fullName: TKey
  - name: ', '
    fullName: ', '
  - name: TValue
    fullName: TValue
  - name: '>'
    fullName: '>'
  - name: ', '
    fullName: ', '
  - name: TKey
    fullName: TKey
  - name: '>'
    fullName: '>'
  - name: ', '
    fullName: ', '
  - uid: System.Func`3
    name: Func
    fullName: System.Func
    isExternal: true
  - name: <
    fullName: <
  - name: TKey
    fullName: TKey
  - name: ', '
    fullName: ', '
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    fullName: <
  - uid: System.Collections.Generic.KeyValuePair`2
    name: KeyValuePair
    fullName: System.Collections.Generic.KeyValuePair
    isExternal: true
  - name: <
    fullName: <
  - name: TKey
    fullName: TKey
  - name: ', '
    fullName: ', '
  - name: TValue
    fullName: TValue
  - name: '>'
    fullName: '>'
  - name: '>'
    fullName: '>'
  - name: ', '
    fullName: ', '
  - name: TResult
    fullName: TResult
  - name: '>'
    fullName: '>'
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Linq.Enumerable.GroupBy``3(System.Func{``0,``1},System.Func{``1,System.Collections.Generic.IEnumerable{``0},``2})
    name: GroupBy(Of KeyValuePair(Of TKey, TValue), TKey, TResult)
    fullName: System.Linq.Enumerable.GroupBy(Of System.Collections.Generic.KeyValuePair(Of TKey, TValue), TKey, TResult)
  - name: (
    fullName: (
  - uid: System.Func`2
    name: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - uid: System.Collections.Generic.KeyValuePair`2
    name: KeyValuePair
    fullName: System.Collections.Generic.KeyValuePair
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - name: TKey
    fullName: TKey
  - name: ', '
    fullName: ', '
  - name: TValue
    fullName: TValue
  - name: )
    fullName: )
  - name: ', '
    fullName: ', '
  - name: TKey
    fullName: TKey
  - name: )
    fullName: )
  - name: ', '
    fullName: ', '
  - uid: System.Func`3
    name: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - name: TKey
    fullName: TKey
  - name: ', '
    fullName: ', '
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - uid: System.Collections.Generic.KeyValuePair`2
    name: KeyValuePair
    fullName: System.Collections.Generic.KeyValuePair
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - name: TKey
    fullName: TKey
  - name: ', '
    fullName: ', '
  - name: TValue
    fullName: TValue
  - name: )
    fullName: )
  - name: )
    fullName: )
  - name: ', '
    fullName: ', '
  - name: TResult
    fullName: TResult
  - name: )
    fullName: )
  - name: )
    fullName: )
  nameWithType: Enumerable.GroupBy<KeyValuePair<TKey, TValue>, TKey, TResult>(Func<KeyValuePair<TKey, TValue>, TKey>, Func<TKey, IEnumerable<KeyValuePair<TKey, TValue>>, TResult>)
  nameWithType.vb: Enumerable.GroupBy(Of KeyValuePair(Of TKey, TValue), TKey, TResult)(Func(Of KeyValuePair(Of TKey, TValue), TKey), Func(Of TKey, IEnumerable(Of KeyValuePair(Of TKey, TValue)), TResult))
  commentId: M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``1,System.Collections.Generic.IEnumerable{``0},``2})
- uid: System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{`0,`1}}.System.Linq.Enumerable.GroupBy``3(System.Func{System.Collections.Generic.KeyValuePair{{TKey},{TValue}},{TKey}},System.Func{{TKey},System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{{TKey},{TValue}}},{TResult}},System.Collections.Generic.IEqualityComparer{{TKey}})
  parent: System.Linq.Enumerable
  definition: System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``1,System.Collections.Generic.IEnumerable{``0},``2},System.Collections.Generic.IEqualityComparer{``1})
  name: GroupBy<KeyValuePair<TKey, TValue>, TKey, TResult>(Func<KeyValuePair<TKey, TValue>, TKey>, Func<TKey, IEnumerable<KeyValuePair<TKey, TValue>>, TResult>, IEqualityComparer<TKey>)
  fullName: System.Linq.Enumerable.GroupBy<System.Collections.Generic.KeyValuePair<TKey, TValue>, TKey, TResult>(System.Func<System.Collections.Generic.KeyValuePair<TKey, TValue>, TKey>, System.Func<TKey, System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<TKey, TValue>>, TResult>, System.Collections.Generic.IEqualityComparer<TKey>)
  fullname.vb: System.Linq.Enumerable.GroupBy(Of System.Collections.Generic.KeyValuePair(Of TKey, TValue), TKey, TResult)(System.Func(Of System.Collections.Generic.KeyValuePair(Of TKey, TValue), TKey), System.Func(Of TKey, System.Collections.Generic.IEnumerable(Of System.Collections.Generic.KeyValuePair(Of TKey, TValue)), TResult), System.Collections.Generic.IEqualityComparer(Of TKey))
  name.vb: GroupBy(Of KeyValuePair(Of TKey, TValue), TKey, TResult)(Func(Of KeyValuePair(Of TKey, TValue), TKey), Func(Of TKey, IEnumerable(Of KeyValuePair(Of TKey, TValue)), TResult), IEqualityComparer(Of TKey))
  spec.csharp:
  - uid: System.Linq.Enumerable.GroupBy``3(System.Func{``0,``1},System.Func{``1,System.Collections.Generic.IEnumerable{``0},``2},System.Collections.Generic.IEqualityComparer{``1})
    name: GroupBy<KeyValuePair<TKey, TValue>, TKey, TResult>
    fullName: System.Linq.Enumerable.GroupBy<System.Collections.Generic.KeyValuePair<TKey, TValue>, TKey, TResult>
  - name: (
    fullName: (
  - uid: System.Func`2
    name: Func
    fullName: System.Func
    isExternal: true
  - name: <
    fullName: <
  - uid: System.Collections.Generic.KeyValuePair`2
    name: KeyValuePair
    fullName: System.Collections.Generic.KeyValuePair
    isExternal: true
  - name: <
    fullName: <
  - name: TKey
    fullName: TKey
  - name: ', '
    fullName: ', '
  - name: TValue
    fullName: TValue
  - name: '>'
    fullName: '>'
  - name: ', '
    fullName: ', '
  - name: TKey
    fullName: TKey
  - name: '>'
    fullName: '>'
  - name: ', '
    fullName: ', '
  - uid: System.Func`3
    name: Func
    fullName: System.Func
    isExternal: true
  - name: <
    fullName: <
  - name: TKey
    fullName: TKey
  - name: ', '
    fullName: ', '
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    fullName: <
  - uid: System.Collections.Generic.KeyValuePair`2
    name: KeyValuePair
    fullName: System.Collections.Generic.KeyValuePair
    isExternal: true
  - name: <
    fullName: <
  - name: TKey
    fullName: TKey
  - name: ', '
    fullName: ', '
  - name: TValue
    fullName: TValue
  - name: '>'
    fullName: '>'
  - name: '>'
    fullName: '>'
  - name: ', '
    fullName: ', '
  - name: TResult
    fullName: TResult
  - name: '>'
    fullName: '>'
  - name: ', '
    fullName: ', '
  - uid: System.Collections.Generic.IEqualityComparer`1
    name: IEqualityComparer
    fullName: System.Collections.Generic.IEqualityComparer
    isExternal: true
  - name: <
    fullName: <
  - name: TKey
    fullName: TKey
  - name: '>'
    fullName: '>'
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Linq.Enumerable.GroupBy``3(System.Func{``0,``1},System.Func{``1,System.Collections.Generic.IEnumerable{``0},``2},System.Collections.Generic.IEqualityComparer{``1})
    name: GroupBy(Of KeyValuePair(Of TKey, TValue), TKey, TResult)
    fullName: System.Linq.Enumerable.GroupBy(Of System.Collections.Generic.KeyValuePair(Of TKey, TValue), TKey, TResult)
  - name: (
    fullName: (
  - uid: System.Func`2
    name: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - uid: System.Collections.Generic.KeyValuePair`2
    name: KeyValuePair
    fullName: System.Collections.Generic.KeyValuePair
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - name: TKey
    fullName: TKey
  - name: ', '
    fullName: ', '
  - name: TValue
    fullName: TValue
  - name: )
    fullName: )
  - name: ', '
    fullName: ', '
  - name: TKey
    fullName: TKey
  - name: )
    fullName: )
  - name: ', '
    fullName: ', '
  - uid: System.Func`3
    name: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - name: TKey
    fullName: TKey
  - name: ', '
    fullName: ', '
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - uid: System.Collections.Generic.KeyValuePair`2
    name: KeyValuePair
    fullName: System.Collections.Generic.KeyValuePair
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - name: TKey
    fullName: TKey
  - name: ', '
    fullName: ', '
  - name: TValue
    fullName: TValue
  - name: )
    fullName: )
  - name: )
    fullName: )
  - name: ', '
    fullName: ', '
  - name: TResult
    fullName: TResult
  - name: )
    fullName: )
  - name: ', '
    fullName: ', '
  - uid: System.Collections.Generic.IEqualityComparer`1
    name: IEqualityComparer
    fullName: System.Collections.Generic.IEqualityComparer
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - name: TKey
    fullName: TKey
  - name: )
    fullName: )
  - name: )
    fullName: )
  nameWithType: Enumerable.GroupBy<KeyValuePair<TKey, TValue>, TKey, TResult>(Func<KeyValuePair<TKey, TValue>, TKey>, Func<TKey, IEnumerable<KeyValuePair<TKey, TValue>>, TResult>, IEqualityComparer<TKey>)
  nameWithType.vb: Enumerable.GroupBy(Of KeyValuePair(Of TKey, TValue), TKey, TResult)(Func(Of KeyValuePair(Of TKey, TValue), TKey), Func(Of TKey, IEnumerable(Of KeyValuePair(Of TKey, TValue)), TResult), IEqualityComparer(Of TKey))
  commentId: M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``1,System.Collections.Generic.IEnumerable{``0},``2},System.Collections.Generic.IEqualityComparer{``1})
- uid: System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{`0,`1}}.System.Linq.Enumerable.GroupBy``4(System.Func{System.Collections.Generic.KeyValuePair{{TKey},{TValue}},{TKey}},System.Func{System.Collections.Generic.KeyValuePair{{TKey},{TValue}},{TElement}},System.Func{{TKey},System.Collections.Generic.IEnumerable{{TElement}},{TResult}})
  parent: System.Linq.Enumerable
  definition: System.Linq.Enumerable.GroupBy``4(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Func{``1,System.Collections.Generic.IEnumerable{``2},``3})
  name: GroupBy<KeyValuePair<TKey, TValue>, TKey, TElement, TResult>(Func<KeyValuePair<TKey, TValue>, TKey>, Func<KeyValuePair<TKey, TValue>, TElement>, Func<TKey, IEnumerable<TElement>, TResult>)
  fullName: System.Linq.Enumerable.GroupBy<System.Collections.Generic.KeyValuePair<TKey, TValue>, TKey, TElement, TResult>(System.Func<System.Collections.Generic.KeyValuePair<TKey, TValue>, TKey>, System.Func<System.Collections.Generic.KeyValuePair<TKey, TValue>, TElement>, System.Func<TKey, System.Collections.Generic.IEnumerable<TElement>, TResult>)
  fullname.vb: System.Linq.Enumerable.GroupBy(Of System.Collections.Generic.KeyValuePair(Of TKey, TValue), TKey, TElement, TResult)(System.Func(Of System.Collections.Generic.KeyValuePair(Of TKey, TValue), TKey), System.Func(Of System.Collections.Generic.KeyValuePair(Of TKey, TValue), TElement), System.Func(Of TKey, System.Collections.Generic.IEnumerable(Of TElement), TResult))
  name.vb: GroupBy(Of KeyValuePair(Of TKey, TValue), TKey, TElement, TResult)(Func(Of KeyValuePair(Of TKey, TValue), TKey), Func(Of KeyValuePair(Of TKey, TValue), TElement), Func(Of TKey, IEnumerable(Of TElement), TResult))
  spec.csharp:
  - uid: System.Linq.Enumerable.GroupBy``4(System.Func{``0,``1},System.Func{``0,``2},System.Func{``1,System.Collections.Generic.IEnumerable{``2},``3})
    name: GroupBy<KeyValuePair<TKey, TValue>, TKey, TElement, TResult>
    fullName: System.Linq.Enumerable.GroupBy<System.Collections.Generic.KeyValuePair<TKey, TValue>, TKey, TElement, TResult>
  - name: (
    fullName: (
  - uid: System.Func`2
    name: Func
    fullName: System.Func
    isExternal: true
  - name: <
    fullName: <
  - uid: System.Collections.Generic.KeyValuePair`2
    name: KeyValuePair
    fullName: System.Collections.Generic.KeyValuePair
    isExternal: true
  - name: <
    fullName: <
  - name: TKey
    fullName: TKey
  - name: ', '
    fullName: ', '
  - name: TValue
    fullName: TValue
  - name: '>'
    fullName: '>'
  - name: ', '
    fullName: ', '
  - name: TKey
    fullName: TKey
  - name: '>'
    fullName: '>'
  - name: ', '
    fullName: ', '
  - uid: System.Func`2
    name: Func
    fullName: System.Func
    isExternal: true
  - name: <
    fullName: <
  - uid: System.Collections.Generic.KeyValuePair`2
    name: KeyValuePair
    fullName: System.Collections.Generic.KeyValuePair
    isExternal: true
  - name: <
    fullName: <
  - name: TKey
    fullName: TKey
  - name: ', '
    fullName: ', '
  - name: TValue
    fullName: TValue
  - name: '>'
    fullName: '>'
  - name: ', '
    fullName: ', '
  - name: TElement
    fullName: TElement
  - name: '>'
    fullName: '>'
  - name: ', '
    fullName: ', '
  - uid: System.Func`3
    name: Func
    fullName: System.Func
    isExternal: true
  - name: <
    fullName: <
  - name: TKey
    fullName: TKey
  - name: ', '
    fullName: ', '
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    fullName: <
  - name: TElement
    fullName: TElement
  - name: '>'
    fullName: '>'
  - name: ', '
    fullName: ', '
  - name: TResult
    fullName: TResult
  - name: '>'
    fullName: '>'
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Linq.Enumerable.GroupBy``4(System.Func{``0,``1},System.Func{``0,``2},System.Func{``1,System.Collections.Generic.IEnumerable{``2},``3})
    name: GroupBy(Of KeyValuePair(Of TKey, TValue), TKey, TElement, TResult)
    fullName: System.Linq.Enumerable.GroupBy(Of System.Collections.Generic.KeyValuePair(Of TKey, TValue), TKey, TElement, TResult)
  - name: (
    fullName: (
  - uid: System.Func`2
    name: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - uid: System.Collections.Generic.KeyValuePair`2
    name: KeyValuePair
    fullName: System.Collections.Generic.KeyValuePair
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - name: TKey
    fullName: TKey
  - name: ', '
    fullName: ', '
  - name: TValue
    fullName: TValue
  - name: )
    fullName: )
  - name: ', '
    fullName: ', '
  - name: TKey
    fullName: TKey
  - name: )
    fullName: )
  - name: ', '
    fullName: ', '
  - uid: System.Func`2
    name: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - uid: System.Collections.Generic.KeyValuePair`2
    name: KeyValuePair
    fullName: System.Collections.Generic.KeyValuePair
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - name: TKey
    fullName: TKey
  - name: ', '
    fullName: ', '
  - name: TValue
    fullName: TValue
  - name: )
    fullName: )
  - name: ', '
    fullName: ', '
  - name: TElement
    fullName: TElement
  - name: )
    fullName: )
  - name: ', '
    fullName: ', '
  - uid: System.Func`3
    name: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - name: TKey
    fullName: TKey
  - name: ', '
    fullName: ', '
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - name: TElement
    fullName: TElement
  - name: )
    fullName: )
  - name: ', '
    fullName: ', '
  - name: TResult
    fullName: TResult
  - name: )
    fullName: )
  - name: )
    fullName: )
  nameWithType: Enumerable.GroupBy<KeyValuePair<TKey, TValue>, TKey, TElement, TResult>(Func<KeyValuePair<TKey, TValue>, TKey>, Func<KeyValuePair<TKey, TValue>, TElement>, Func<TKey, IEnumerable<TElement>, TResult>)
  nameWithType.vb: Enumerable.GroupBy(Of KeyValuePair(Of TKey, TValue), TKey, TElement, TResult)(Func(Of KeyValuePair(Of TKey, TValue), TKey), Func(Of KeyValuePair(Of TKey, TValue), TElement), Func(Of TKey, IEnumerable(Of TElement), TResult))
  commentId: M:System.Linq.Enumerable.GroupBy``4(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Func{``1,System.Collections.Generic.IEnumerable{``2},``3})
- uid: System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{`0,`1}}.System.Linq.Enumerable.GroupBy``4(System.Func{System.Collections.Generic.KeyValuePair{{TKey},{TValue}},{TKey}},System.Func{System.Collections.Generic.KeyValuePair{{TKey},{TValue}},{TElement}},System.Func{{TKey},System.Collections.Generic.IEnumerable{{TElement}},{TResult}},System.Collections.Generic.IEqualityComparer{{TKey}})
  parent: System.Linq.Enumerable
  definition: System.Linq.Enumerable.GroupBy``4(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Func{``1,System.Collections.Generic.IEnumerable{``2},``3},System.Collections.Generic.IEqualityComparer{``1})
  name: GroupBy<KeyValuePair<TKey, TValue>, TKey, TElement, TResult>(Func<KeyValuePair<TKey, TValue>, TKey>, Func<KeyValuePair<TKey, TValue>, TElement>, Func<TKey, IEnumerable<TElement>, TResult>, IEqualityComparer<TKey>)
  fullName: System.Linq.Enumerable.GroupBy<System.Collections.Generic.KeyValuePair<TKey, TValue>, TKey, TElement, TResult>(System.Func<System.Collections.Generic.KeyValuePair<TKey, TValue>, TKey>, System.Func<System.Collections.Generic.KeyValuePair<TKey, TValue>, TElement>, System.Func<TKey, System.Collections.Generic.IEnumerable<TElement>, TResult>, System.Collections.Generic.IEqualityComparer<TKey>)
  fullname.vb: System.Linq.Enumerable.GroupBy(Of System.Collections.Generic.KeyValuePair(Of TKey, TValue), TKey, TElement, TResult)(System.Func(Of System.Collections.Generic.KeyValuePair(Of TKey, TValue), TKey), System.Func(Of System.Collections.Generic.KeyValuePair(Of TKey, TValue), TElement), System.Func(Of TKey, System.Collections.Generic.IEnumerable(Of TElement), TResult), System.Collections.Generic.IEqualityComparer(Of TKey))
  name.vb: GroupBy(Of KeyValuePair(Of TKey, TValue), TKey, TElement, TResult)(Func(Of KeyValuePair(Of TKey, TValue), TKey), Func(Of KeyValuePair(Of TKey, TValue), TElement), Func(Of TKey, IEnumerable(Of TElement), TResult), IEqualityComparer(Of TKey))
  spec.csharp:
  - uid: System.Linq.Enumerable.GroupBy``4(System.Func{``0,``1},System.Func{``0,``2},System.Func{``1,System.Collections.Generic.IEnumerable{``2},``3},System.Collections.Generic.IEqualityComparer{``1})
    name: GroupBy<KeyValuePair<TKey, TValue>, TKey, TElement, TResult>
    fullName: System.Linq.Enumerable.GroupBy<System.Collections.Generic.KeyValuePair<TKey, TValue>, TKey, TElement, TResult>
  - name: (
    fullName: (
  - uid: System.Func`2
    name: Func
    fullName: System.Func
    isExternal: true
  - name: <
    fullName: <
  - uid: System.Collections.Generic.KeyValuePair`2
    name: KeyValuePair
    fullName: System.Collections.Generic.KeyValuePair
    isExternal: true
  - name: <
    fullName: <
  - name: TKey
    fullName: TKey
  - name: ', '
    fullName: ', '
  - name: TValue
    fullName: TValue
  - name: '>'
    fullName: '>'
  - name: ', '
    fullName: ', '
  - name: TKey
    fullName: TKey
  - name: '>'
    fullName: '>'
  - name: ', '
    fullName: ', '
  - uid: System.Func`2
    name: Func
    fullName: System.Func
    isExternal: true
  - name: <
    fullName: <
  - uid: System.Collections.Generic.KeyValuePair`2
    name: KeyValuePair
    fullName: System.Collections.Generic.KeyValuePair
    isExternal: true
  - name: <
    fullName: <
  - name: TKey
    fullName: TKey
  - name: ', '
    fullName: ', '
  - name: TValue
    fullName: TValue
  - name: '>'
    fullName: '>'
  - name: ', '
    fullName: ', '
  - name: TElement
    fullName: TElement
  - name: '>'
    fullName: '>'
  - name: ', '
    fullName: ', '
  - uid: System.Func`3
    name: Func
    fullName: System.Func
    isExternal: true
  - name: <
    fullName: <
  - name: TKey
    fullName: TKey
  - name: ', '
    fullName: ', '
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    fullName: <
  - name: TElement
    fullName: TElement
  - name: '>'
    fullName: '>'
  - name: ', '
    fullName: ', '
  - name: TResult
    fullName: TResult
  - name: '>'
    fullName: '>'
  - name: ', '
    fullName: ', '
  - uid: System.Collections.Generic.IEqualityComparer`1
    name: IEqualityComparer
    fullName: System.Collections.Generic.IEqualityComparer
    isExternal: true
  - name: <
    fullName: <
  - name: TKey
    fullName: TKey
  - name: '>'
    fullName: '>'
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Linq.Enumerable.GroupBy``4(System.Func{``0,``1},System.Func{``0,``2},System.Func{``1,System.Collections.Generic.IEnumerable{``2},``3},System.Collections.Generic.IEqualityComparer{``1})
    name: GroupBy(Of KeyValuePair(Of TKey, TValue), TKey, TElement, TResult)
    fullName: System.Linq.Enumerable.GroupBy(Of System.Collections.Generic.KeyValuePair(Of TKey, TValue), TKey, TElement, TResult)
  - name: (
    fullName: (
  - uid: System.Func`2
    name: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - uid: System.Collections.Generic.KeyValuePair`2
    name: KeyValuePair
    fullName: System.Collections.Generic.KeyValuePair
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - name: TKey
    fullName: TKey
  - name: ', '
    fullName: ', '
  - name: TValue
    fullName: TValue
  - name: )
    fullName: )
  - name: ', '
    fullName: ', '
  - name: TKey
    fullName: TKey
  - name: )
    fullName: )
  - name: ', '
    fullName: ', '
  - uid: System.Func`2
    name: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - uid: System.Collections.Generic.KeyValuePair`2
    name: KeyValuePair
    fullName: System.Collections.Generic.KeyValuePair
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - name: TKey
    fullName: TKey
  - name: ', '
    fullName: ', '
  - name: TValue
    fullName: TValue
  - name: )
    fullName: )
  - name: ', '
    fullName: ', '
  - name: TElement
    fullName: TElement
  - name: )
    fullName: )
  - name: ', '
    fullName: ', '
  - uid: System.Func`3
    name: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - name: TKey
    fullName: TKey
  - name: ', '
    fullName: ', '
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - name: TElement
    fullName: TElement
  - name: )
    fullName: )
  - name: ', '
    fullName: ', '
  - name: TResult
    fullName: TResult
  - name: )
    fullName: )
  - name: ', '
    fullName: ', '
  - uid: System.Collections.Generic.IEqualityComparer`1
    name: IEqualityComparer
    fullName: System.Collections.Generic.IEqualityComparer
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - name: TKey
    fullName: TKey
  - name: )
    fullName: )
  - name: )
    fullName: )
  nameWithType: Enumerable.GroupBy<KeyValuePair<TKey, TValue>, TKey, TElement, TResult>(Func<KeyValuePair<TKey, TValue>, TKey>, Func<KeyValuePair<TKey, TValue>, TElement>, Func<TKey, IEnumerable<TElement>, TResult>, IEqualityComparer<TKey>)
  nameWithType.vb: Enumerable.GroupBy(Of KeyValuePair(Of TKey, TValue), TKey, TElement, TResult)(Func(Of KeyValuePair(Of TKey, TValue), TKey), Func(Of KeyValuePair(Of TKey, TValue), TElement), Func(Of TKey, IEnumerable(Of TElement), TResult), IEqualityComparer(Of TKey))
  commentId: M:System.Linq.Enumerable.GroupBy``4(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Func{``1,System.Collections.Generic.IEnumerable{``2},``3},System.Collections.Generic.IEqualityComparer{``1})
- uid: System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{`0,`1}}.System.Linq.Enumerable.GroupJoin``4(System.Collections.Generic.IEnumerable{{TInner}},System.Func{System.Collections.Generic.KeyValuePair{{TKey},{TValue}},{TKey}},System.Func{{TInner},{TKey}},System.Func{System.Collections.Generic.KeyValuePair{{TKey},{TValue}},System.Collections.Generic.IEnumerable{{TInner}},{TResult}})
  parent: System.Linq.Enumerable
  definition: System.Linq.Enumerable.GroupJoin``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3})
  name: GroupJoin<KeyValuePair<TKey, TValue>, TInner, TKey, TResult>(IEnumerable<TInner>, Func<KeyValuePair<TKey, TValue>, TKey>, Func<TInner, TKey>, Func<KeyValuePair<TKey, TValue>, IEnumerable<TInner>, TResult>)
  fullName: System.Linq.Enumerable.GroupJoin<System.Collections.Generic.KeyValuePair<TKey, TValue>, TInner, TKey, TResult>(System.Collections.Generic.IEnumerable<TInner>, System.Func<System.Collections.Generic.KeyValuePair<TKey, TValue>, TKey>, System.Func<TInner, TKey>, System.Func<System.Collections.Generic.KeyValuePair<TKey, TValue>, System.Collections.Generic.IEnumerable<TInner>, TResult>)
  fullname.vb: System.Linq.Enumerable.GroupJoin(Of System.Collections.Generic.KeyValuePair(Of TKey, TValue), TInner, TKey, TResult)(System.Collections.Generic.IEnumerable(Of TInner), System.Func(Of System.Collections.Generic.KeyValuePair(Of TKey, TValue), TKey), System.Func(Of TInner, TKey), System.Func(Of System.Collections.Generic.KeyValuePair(Of TKey, TValue), System.Collections.Generic.IEnumerable(Of TInner), TResult))
  name.vb: GroupJoin(Of KeyValuePair(Of TKey, TValue), TInner, TKey, TResult)(IEnumerable(Of TInner), Func(Of KeyValuePair(Of TKey, TValue), TKey), Func(Of TInner, TKey), Func(Of KeyValuePair(Of TKey, TValue), IEnumerable(Of TInner), TResult))
  spec.csharp:
  - uid: System.Linq.Enumerable.GroupJoin``4(System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3})
    name: GroupJoin<KeyValuePair<TKey, TValue>, TInner, TKey, TResult>
    fullName: System.Linq.Enumerable.GroupJoin<System.Collections.Generic.KeyValuePair<TKey, TValue>, TInner, TKey, TResult>
  - name: (
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    fullName: <
  - name: TInner
    fullName: TInner
  - name: '>'
    fullName: '>'
  - name: ', '
    fullName: ', '
  - uid: System.Func`2
    name: Func
    fullName: System.Func
    isExternal: true
  - name: <
    fullName: <
  - uid: System.Collections.Generic.KeyValuePair`2
    name: KeyValuePair
    fullName: System.Collections.Generic.KeyValuePair
    isExternal: true
  - name: <
    fullName: <
  - name: TKey
    fullName: TKey
  - name: ', '
    fullName: ', '
  - name: TValue
    fullName: TValue
  - name: '>'
    fullName: '>'
  - name: ', '
    fullName: ', '
  - name: TKey
    fullName: TKey
  - name: '>'
    fullName: '>'
  - name: ', '
    fullName: ', '
  - uid: System.Func`2
    name: Func
    fullName: System.Func
    isExternal: true
  - name: <
    fullName: <
  - name: TInner
    fullName: TInner
  - name: ', '
    fullName: ', '
  - name: TKey
    fullName: TKey
  - name: '>'
    fullName: '>'
  - name: ', '
    fullName: ', '
  - uid: System.Func`3
    name: Func
    fullName: System.Func
    isExternal: true
  - name: <
    fullName: <
  - uid: System.Collections.Generic.KeyValuePair`2
    name: KeyValuePair
    fullName: System.Collections.Generic.KeyValuePair
    isExternal: true
  - name: <
    fullName: <
  - name: TKey
    fullName: TKey
  - name: ', '
    fullName: ', '
  - name: TValue
    fullName: TValue
  - name: '>'
    fullName: '>'
  - name: ', '
    fullName: ', '
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    fullName: <
  - name: TInner
    fullName: TInner
  - name: '>'
    fullName: '>'
  - name: ', '
    fullName: ', '
  - name: TResult
    fullName: TResult
  - name: '>'
    fullName: '>'
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Linq.Enumerable.GroupJoin``4(System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3})
    name: GroupJoin(Of KeyValuePair(Of TKey, TValue), TInner, TKey, TResult)
    fullName: System.Linq.Enumerable.GroupJoin(Of System.Collections.Generic.KeyValuePair(Of TKey, TValue), TInner, TKey, TResult)
  - name: (
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - name: TInner
    fullName: TInner
  - name: )
    fullName: )
  - name: ', '
    fullName: ', '
  - uid: System.Func`2
    name: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - uid: System.Collections.Generic.KeyValuePair`2
    name: KeyValuePair
    fullName: System.Collections.Generic.KeyValuePair
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - name: TKey
    fullName: TKey
  - name: ', '
    fullName: ', '
  - name: TValue
    fullName: TValue
  - name: )
    fullName: )
  - name: ', '
    fullName: ', '
  - name: TKey
    fullName: TKey
  - name: )
    fullName: )
  - name: ', '
    fullName: ', '
  - uid: System.Func`2
    name: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - name: TInner
    fullName: TInner
  - name: ', '
    fullName: ', '
  - name: TKey
    fullName: TKey
  - name: )
    fullName: )
  - name: ', '
    fullName: ', '
  - uid: System.Func`3
    name: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - uid: System.Collections.Generic.KeyValuePair`2
    name: KeyValuePair
    fullName: System.Collections.Generic.KeyValuePair
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - name: TKey
    fullName: TKey
  - name: ', '
    fullName: ', '
  - name: TValue
    fullName: TValue
  - name: )
    fullName: )
  - name: ', '
    fullName: ', '
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - name: TInner
    fullName: TInner
  - name: )
    fullName: )
  - name: ', '
    fullName: ', '
  - name: TResult
    fullName: TResult
  - name: )
    fullName: )
  - name: )
    fullName: )
  nameWithType: Enumerable.GroupJoin<KeyValuePair<TKey, TValue>, TInner, TKey, TResult>(IEnumerable<TInner>, Func<KeyValuePair<TKey, TValue>, TKey>, Func<TInner, TKey>, Func<KeyValuePair<TKey, TValue>, IEnumerable<TInner>, TResult>)
  nameWithType.vb: Enumerable.GroupJoin(Of KeyValuePair(Of TKey, TValue), TInner, TKey, TResult)(IEnumerable(Of TInner), Func(Of KeyValuePair(Of TKey, TValue), TKey), Func(Of TInner, TKey), Func(Of KeyValuePair(Of TKey, TValue), IEnumerable(Of TInner), TResult))
  commentId: M:System.Linq.Enumerable.GroupJoin``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3})
- uid: System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{`0,`1}}.System.Linq.Enumerable.GroupJoin``4(System.Collections.Generic.IEnumerable{{TInner}},System.Func{System.Collections.Generic.KeyValuePair{{TKey},{TValue}},{TKey}},System.Func{{TInner},{TKey}},System.Func{System.Collections.Generic.KeyValuePair{{TKey},{TValue}},System.Collections.Generic.IEnumerable{{TInner}},{TResult}},System.Collections.Generic.IEqualityComparer{{TKey}})
  parent: System.Linq.Enumerable
  definition: System.Linq.Enumerable.GroupJoin``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3},System.Collections.Generic.IEqualityComparer{``2})
  name: GroupJoin<KeyValuePair<TKey, TValue>, TInner, TKey, TResult>(IEnumerable<TInner>, Func<KeyValuePair<TKey, TValue>, TKey>, Func<TInner, TKey>, Func<KeyValuePair<TKey, TValue>, IEnumerable<TInner>, TResult>, IEqualityComparer<TKey>)
  fullName: System.Linq.Enumerable.GroupJoin<System.Collections.Generic.KeyValuePair<TKey, TValue>, TInner, TKey, TResult>(System.Collections.Generic.IEnumerable<TInner>, System.Func<System.Collections.Generic.KeyValuePair<TKey, TValue>, TKey>, System.Func<TInner, TKey>, System.Func<System.Collections.Generic.KeyValuePair<TKey, TValue>, System.Collections.Generic.IEnumerable<TInner>, TResult>, System.Collections.Generic.IEqualityComparer<TKey>)
  fullname.vb: System.Linq.Enumerable.GroupJoin(Of System.Collections.Generic.KeyValuePair(Of TKey, TValue), TInner, TKey, TResult)(System.Collections.Generic.IEnumerable(Of TInner), System.Func(Of System.Collections.Generic.KeyValuePair(Of TKey, TValue), TKey), System.Func(Of TInner, TKey), System.Func(Of System.Collections.Generic.KeyValuePair(Of TKey, TValue), System.Collections.Generic.IEnumerable(Of TInner), TResult), System.Collections.Generic.IEqualityComparer(Of TKey))
  name.vb: GroupJoin(Of KeyValuePair(Of TKey, TValue), TInner, TKey, TResult)(IEnumerable(Of TInner), Func(Of KeyValuePair(Of TKey, TValue), TKey), Func(Of TInner, TKey), Func(Of KeyValuePair(Of TKey, TValue), IEnumerable(Of TInner), TResult), IEqualityComparer(Of TKey))
  spec.csharp:
  - uid: System.Linq.Enumerable.GroupJoin``4(System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3},System.Collections.Generic.IEqualityComparer{``2})
    name: GroupJoin<KeyValuePair<TKey, TValue>, TInner, TKey, TResult>
    fullName: System.Linq.Enumerable.GroupJoin<System.Collections.Generic.KeyValuePair<TKey, TValue>, TInner, TKey, TResult>
  - name: (
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    fullName: <
  - name: TInner
    fullName: TInner
  - name: '>'
    fullName: '>'
  - name: ', '
    fullName: ', '
  - uid: System.Func`2
    name: Func
    fullName: System.Func
    isExternal: true
  - name: <
    fullName: <
  - uid: System.Collections.Generic.KeyValuePair`2
    name: KeyValuePair
    fullName: System.Collections.Generic.KeyValuePair
    isExternal: true
  - name: <
    fullName: <
  - name: TKey
    fullName: TKey
  - name: ', '
    fullName: ', '
  - name: TValue
    fullName: TValue
  - name: '>'
    fullName: '>'
  - name: ', '
    fullName: ', '
  - name: TKey
    fullName: TKey
  - name: '>'
    fullName: '>'
  - name: ', '
    fullName: ', '
  - uid: System.Func`2
    name: Func
    fullName: System.Func
    isExternal: true
  - name: <
    fullName: <
  - name: TInner
    fullName: TInner
  - name: ', '
    fullName: ', '
  - name: TKey
    fullName: TKey
  - name: '>'
    fullName: '>'
  - name: ', '
    fullName: ', '
  - uid: System.Func`3
    name: Func
    fullName: System.Func
    isExternal: true
  - name: <
    fullName: <
  - uid: System.Collections.Generic.KeyValuePair`2
    name: KeyValuePair
    fullName: System.Collections.Generic.KeyValuePair
    isExternal: true
  - name: <
    fullName: <
  - name: TKey
    fullName: TKey
  - name: ', '
    fullName: ', '
  - name: TValue
    fullName: TValue
  - name: '>'
    fullName: '>'
  - name: ', '
    fullName: ', '
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    fullName: <
  - name: TInner
    fullName: TInner
  - name: '>'
    fullName: '>'
  - name: ', '
    fullName: ', '
  - name: TResult
    fullName: TResult
  - name: '>'
    fullName: '>'
  - name: ', '
    fullName: ', '
  - uid: System.Collections.Generic.IEqualityComparer`1
    name: IEqualityComparer
    fullName: System.Collections.Generic.IEqualityComparer
    isExternal: true
  - name: <
    fullName: <
  - name: TKey
    fullName: TKey
  - name: '>'
    fullName: '>'
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Linq.Enumerable.GroupJoin``4(System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3},System.Collections.Generic.IEqualityComparer{``2})
    name: GroupJoin(Of KeyValuePair(Of TKey, TValue), TInner, TKey, TResult)
    fullName: System.Linq.Enumerable.GroupJoin(Of System.Collections.Generic.KeyValuePair(Of TKey, TValue), TInner, TKey, TResult)
  - name: (
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - name: TInner
    fullName: TInner
  - name: )
    fullName: )
  - name: ', '
    fullName: ', '
  - uid: System.Func`2
    name: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - uid: System.Collections.Generic.KeyValuePair`2
    name: KeyValuePair
    fullName: System.Collections.Generic.KeyValuePair
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - name: TKey
    fullName: TKey
  - name: ', '
    fullName: ', '
  - name: TValue
    fullName: TValue
  - name: )
    fullName: )
  - name: ', '
    fullName: ', '
  - name: TKey
    fullName: TKey
  - name: )
    fullName: )
  - name: ', '
    fullName: ', '
  - uid: System.Func`2
    name: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - name: TInner
    fullName: TInner
  - name: ', '
    fullName: ', '
  - name: TKey
    fullName: TKey
  - name: )
    fullName: )
  - name: ', '
    fullName: ', '
  - uid: System.Func`3
    name: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - uid: System.Collections.Generic.KeyValuePair`2
    name: KeyValuePair
    fullName: System.Collections.Generic.KeyValuePair
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - name: TKey
    fullName: TKey
  - name: ', '
    fullName: ', '
  - name: TValue
    fullName: TValue
  - name: )
    fullName: )
  - name: ', '
    fullName: ', '
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - name: TInner
    fullName: TInner
  - name: )
    fullName: )
  - name: ', '
    fullName: ', '
  - name: TResult
    fullName: TResult
  - name: )
    fullName: )
  - name: ', '
    fullName: ', '
  - uid: System.Collections.Generic.IEqualityComparer`1
    name: IEqualityComparer
    fullName: System.Collections.Generic.IEqualityComparer
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - name: TKey
    fullName: TKey
  - name: )
    fullName: )
  - name: )
    fullName: )
  nameWithType: Enumerable.GroupJoin<KeyValuePair<TKey, TValue>, TInner, TKey, TResult>(IEnumerable<TInner>, Func<KeyValuePair<TKey, TValue>, TKey>, Func<TInner, TKey>, Func<KeyValuePair<TKey, TValue>, IEnumerable<TInner>, TResult>, IEqualityComparer<TKey>)
  nameWithType.vb: Enumerable.GroupJoin(Of KeyValuePair(Of TKey, TValue), TInner, TKey, TResult)(IEnumerable(Of TInner), Func(Of KeyValuePair(Of TKey, TValue), TKey), Func(Of TInner, TKey), Func(Of KeyValuePair(Of TKey, TValue), IEnumerable(Of TInner), TResult), IEqualityComparer(Of TKey))
  commentId: M:System.Linq.Enumerable.GroupJoin``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3},System.Collections.Generic.IEqualityComparer{``2})
- uid: System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{`0,`1}}.System.Linq.Enumerable.Intersect``1(System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{{TKey},{TValue}}})
  parent: System.Linq.Enumerable
  definition: System.Linq.Enumerable.Intersect``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0})
  name: Intersect<KeyValuePair<TKey, TValue>>(IEnumerable<KeyValuePair<TKey, TValue>>)
  fullName: System.Linq.Enumerable.Intersect<System.Collections.Generic.KeyValuePair<TKey, TValue>>(System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<TKey, TValue>>)
  fullname.vb: System.Linq.Enumerable.Intersect(Of System.Collections.Generic.KeyValuePair(Of TKey, TValue))(System.Collections.Generic.IEnumerable(Of System.Collections.Generic.KeyValuePair(Of TKey, TValue)))
  name.vb: Intersect(Of KeyValuePair(Of TKey, TValue))(IEnumerable(Of KeyValuePair(Of TKey, TValue)))
  spec.csharp:
  - uid: System.Linq.Enumerable.Intersect``1(System.Collections.Generic.IEnumerable{``0})
    name: Intersect<KeyValuePair<TKey, TValue>>
    fullName: System.Linq.Enumerable.Intersect<System.Collections.Generic.KeyValuePair<TKey, TValue>>
  - name: (
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    fullName: <
  - uid: System.Collections.Generic.KeyValuePair`2
    name: KeyValuePair
    fullName: System.Collections.Generic.KeyValuePair
    isExternal: true
  - name: <
    fullName: <
  - name: TKey
    fullName: TKey
  - name: ', '
    fullName: ', '
  - name: TValue
    fullName: TValue
  - name: '>'
    fullName: '>'
  - name: '>'
    fullName: '>'
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Linq.Enumerable.Intersect``1(System.Collections.Generic.IEnumerable{``0})
    name: Intersect(Of KeyValuePair(Of TKey, TValue))
    fullName: System.Linq.Enumerable.Intersect(Of System.Collections.Generic.KeyValuePair(Of TKey, TValue))
  - name: (
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - uid: System.Collections.Generic.KeyValuePair`2
    name: KeyValuePair
    fullName: System.Collections.Generic.KeyValuePair
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - name: TKey
    fullName: TKey
  - name: ', '
    fullName: ', '
  - name: TValue
    fullName: TValue
  - name: )
    fullName: )
  - name: )
    fullName: )
  - name: )
    fullName: )
  nameWithType: Enumerable.Intersect<KeyValuePair<TKey, TValue>>(IEnumerable<KeyValuePair<TKey, TValue>>)
  nameWithType.vb: Enumerable.Intersect(Of KeyValuePair(Of TKey, TValue))(IEnumerable(Of KeyValuePair(Of TKey, TValue)))
  commentId: M:System.Linq.Enumerable.Intersect``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0})
- uid: System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{`0,`1}}.System.Linq.Enumerable.Intersect``1(System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{{TKey},{TValue}}},System.Collections.Generic.IEqualityComparer{System.Collections.Generic.KeyValuePair{{TKey},{TValue}}})
  parent: System.Linq.Enumerable
  definition: System.Linq.Enumerable.Intersect``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEqualityComparer{``0})
  name: Intersect<KeyValuePair<TKey, TValue>>(IEnumerable<KeyValuePair<TKey, TValue>>, IEqualityComparer<KeyValuePair<TKey, TValue>>)
  fullName: System.Linq.Enumerable.Intersect<System.Collections.Generic.KeyValuePair<TKey, TValue>>(System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<TKey, TValue>>, System.Collections.Generic.IEqualityComparer<System.Collections.Generic.KeyValuePair<TKey, TValue>>)
  fullname.vb: System.Linq.Enumerable.Intersect(Of System.Collections.Generic.KeyValuePair(Of TKey, TValue))(System.Collections.Generic.IEnumerable(Of System.Collections.Generic.KeyValuePair(Of TKey, TValue)), System.Collections.Generic.IEqualityComparer(Of System.Collections.Generic.KeyValuePair(Of TKey, TValue)))
  name.vb: Intersect(Of KeyValuePair(Of TKey, TValue))(IEnumerable(Of KeyValuePair(Of TKey, TValue)), IEqualityComparer(Of KeyValuePair(Of TKey, TValue)))
  spec.csharp:
  - uid: System.Linq.Enumerable.Intersect``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEqualityComparer{``0})
    name: Intersect<KeyValuePair<TKey, TValue>>
    fullName: System.Linq.Enumerable.Intersect<System.Collections.Generic.KeyValuePair<TKey, TValue>>
  - name: (
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    fullName: <
  - uid: System.Collections.Generic.KeyValuePair`2
    name: KeyValuePair
    fullName: System.Collections.Generic.KeyValuePair
    isExternal: true
  - name: <
    fullName: <
  - name: TKey
    fullName: TKey
  - name: ', '
    fullName: ', '
  - name: TValue
    fullName: TValue
  - name: '>'
    fullName: '>'
  - name: '>'
    fullName: '>'
  - name: ', '
    fullName: ', '
  - uid: System.Collections.Generic.IEqualityComparer`1
    name: IEqualityComparer
    fullName: System.Collections.Generic.IEqualityComparer
    isExternal: true
  - name: <
    fullName: <
  - uid: System.Collections.Generic.KeyValuePair`2
    name: KeyValuePair
    fullName: System.Collections.Generic.KeyValuePair
    isExternal: true
  - name: <
    fullName: <
  - name: TKey
    fullName: TKey
  - name: ', '
    fullName: ', '
  - name: TValue
    fullName: TValue
  - name: '>'
    fullName: '>'
  - name: '>'
    fullName: '>'
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Linq.Enumerable.Intersect``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEqualityComparer{``0})
    name: Intersect(Of KeyValuePair(Of TKey, TValue))
    fullName: System.Linq.Enumerable.Intersect(Of System.Collections.Generic.KeyValuePair(Of TKey, TValue))
  - name: (
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - uid: System.Collections.Generic.KeyValuePair`2
    name: KeyValuePair
    fullName: System.Collections.Generic.KeyValuePair
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - name: TKey
    fullName: TKey
  - name: ', '
    fullName: ', '
  - name: TValue
    fullName: TValue
  - name: )
    fullName: )
  - name: )
    fullName: )
  - name: ', '
    fullName: ', '
  - uid: System.Collections.Generic.IEqualityComparer`1
    name: IEqualityComparer
    fullName: System.Collections.Generic.IEqualityComparer
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - uid: System.Collections.Generic.KeyValuePair`2
    name: KeyValuePair
    fullName: System.Collections.Generic.KeyValuePair
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - name: TKey
    fullName: TKey
  - name: ', '
    fullName: ', '
  - name: TValue
    fullName: TValue
  - name: )
    fullName: )
  - name: )
    fullName: )
  - name: )
    fullName: )
  nameWithType: Enumerable.Intersect<KeyValuePair<TKey, TValue>>(IEnumerable<KeyValuePair<TKey, TValue>>, IEqualityComparer<KeyValuePair<TKey, TValue>>)
  nameWithType.vb: Enumerable.Intersect(Of KeyValuePair(Of TKey, TValue))(IEnumerable(Of KeyValuePair(Of TKey, TValue)), IEqualityComparer(Of KeyValuePair(Of TKey, TValue)))
  commentId: M:System.Linq.Enumerable.Intersect``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEqualityComparer{``0})
- uid: System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{`0,`1}}.System.Linq.Enumerable.Join``4(System.Collections.Generic.IEnumerable{{TInner}},System.Func{System.Collections.Generic.KeyValuePair{{TKey},{TValue}},{TKey}},System.Func{{TInner},{TKey}},System.Func{System.Collections.Generic.KeyValuePair{{TKey},{TValue}},{TInner},{TResult}})
  parent: System.Linq.Enumerable
  definition: System.Linq.Enumerable.Join``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3})
  name: Join<KeyValuePair<TKey, TValue>, TInner, TKey, TResult>(IEnumerable<TInner>, Func<KeyValuePair<TKey, TValue>, TKey>, Func<TInner, TKey>, Func<KeyValuePair<TKey, TValue>, TInner, TResult>)
  fullName: System.Linq.Enumerable.Join<System.Collections.Generic.KeyValuePair<TKey, TValue>, TInner, TKey, TResult>(System.Collections.Generic.IEnumerable<TInner>, System.Func<System.Collections.Generic.KeyValuePair<TKey, TValue>, TKey>, System.Func<TInner, TKey>, System.Func<System.Collections.Generic.KeyValuePair<TKey, TValue>, TInner, TResult>)
  fullname.vb: System.Linq.Enumerable.Join(Of System.Collections.Generic.KeyValuePair(Of TKey, TValue), TInner, TKey, TResult)(System.Collections.Generic.IEnumerable(Of TInner), System.Func(Of System.Collections.Generic.KeyValuePair(Of TKey, TValue), TKey), System.Func(Of TInner, TKey), System.Func(Of System.Collections.Generic.KeyValuePair(Of TKey, TValue), TInner, TResult))
  name.vb: Join(Of KeyValuePair(Of TKey, TValue), TInner, TKey, TResult)(IEnumerable(Of TInner), Func(Of KeyValuePair(Of TKey, TValue), TKey), Func(Of TInner, TKey), Func(Of KeyValuePair(Of TKey, TValue), TInner, TResult))
  spec.csharp:
  - uid: System.Linq.Enumerable.Join``4(System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3})
    name: Join<KeyValuePair<TKey, TValue>, TInner, TKey, TResult>
    fullName: System.Linq.Enumerable.Join<System.Collections.Generic.KeyValuePair<TKey, TValue>, TInner, TKey, TResult>
  - name: (
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    fullName: <
  - name: TInner
    fullName: TInner
  - name: '>'
    fullName: '>'
  - name: ', '
    fullName: ', '
  - uid: System.Func`2
    name: Func
    fullName: System.Func
    isExternal: true
  - name: <
    fullName: <
  - uid: System.Collections.Generic.KeyValuePair`2
    name: KeyValuePair
    fullName: System.Collections.Generic.KeyValuePair
    isExternal: true
  - name: <
    fullName: <
  - name: TKey
    fullName: TKey
  - name: ', '
    fullName: ', '
  - name: TValue
    fullName: TValue
  - name: '>'
    fullName: '>'
  - name: ', '
    fullName: ', '
  - name: TKey
    fullName: TKey
  - name: '>'
    fullName: '>'
  - name: ', '
    fullName: ', '
  - uid: System.Func`2
    name: Func
    fullName: System.Func
    isExternal: true
  - name: <
    fullName: <
  - name: TInner
    fullName: TInner
  - name: ', '
    fullName: ', '
  - name: TKey
    fullName: TKey
  - name: '>'
    fullName: '>'
  - name: ', '
    fullName: ', '
  - uid: System.Func`3
    name: Func
    fullName: System.Func
    isExternal: true
  - name: <
    fullName: <
  - uid: System.Collections.Generic.KeyValuePair`2
    name: KeyValuePair
    fullName: System.Collections.Generic.KeyValuePair
    isExternal: true
  - name: <
    fullName: <
  - name: TKey
    fullName: TKey
  - name: ', '
    fullName: ', '
  - name: TValue
    fullName: TValue
  - name: '>'
    fullName: '>'
  - name: ', '
    fullName: ', '
  - name: TInner
    fullName: TInner
  - name: ', '
    fullName: ', '
  - name: TResult
    fullName: TResult
  - name: '>'
    fullName: '>'
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Linq.Enumerable.Join``4(System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3})
    name: Join(Of KeyValuePair(Of TKey, TValue), TInner, TKey, TResult)
    fullName: System.Linq.Enumerable.Join(Of System.Collections.Generic.KeyValuePair(Of TKey, TValue), TInner, TKey, TResult)
  - name: (
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - name: TInner
    fullName: TInner
  - name: )
    fullName: )
  - name: ', '
    fullName: ', '
  - uid: System.Func`2
    name: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - uid: System.Collections.Generic.KeyValuePair`2
    name: KeyValuePair
    fullName: System.Collections.Generic.KeyValuePair
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - name: TKey
    fullName: TKey
  - name: ', '
    fullName: ', '
  - name: TValue
    fullName: TValue
  - name: )
    fullName: )
  - name: ', '
    fullName: ', '
  - name: TKey
    fullName: TKey
  - name: )
    fullName: )
  - name: ', '
    fullName: ', '
  - uid: System.Func`2
    name: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - name: TInner
    fullName: TInner
  - name: ', '
    fullName: ', '
  - name: TKey
    fullName: TKey
  - name: )
    fullName: )
  - name: ', '
    fullName: ', '
  - uid: System.Func`3
    name: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - uid: System.Collections.Generic.KeyValuePair`2
    name: KeyValuePair
    fullName: System.Collections.Generic.KeyValuePair
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - name: TKey
    fullName: TKey
  - name: ', '
    fullName: ', '
  - name: TValue
    fullName: TValue
  - name: )
    fullName: )
  - name: ', '
    fullName: ', '
  - name: TInner
    fullName: TInner
  - name: ', '
    fullName: ', '
  - name: TResult
    fullName: TResult
  - name: )
    fullName: )
  - name: )
    fullName: )
  nameWithType: Enumerable.Join<KeyValuePair<TKey, TValue>, TInner, TKey, TResult>(IEnumerable<TInner>, Func<KeyValuePair<TKey, TValue>, TKey>, Func<TInner, TKey>, Func<KeyValuePair<TKey, TValue>, TInner, TResult>)
  nameWithType.vb: Enumerable.Join(Of KeyValuePair(Of TKey, TValue), TInner, TKey, TResult)(IEnumerable(Of TInner), Func(Of KeyValuePair(Of TKey, TValue), TKey), Func(Of TInner, TKey), Func(Of KeyValuePair(Of TKey, TValue), TInner, TResult))
  commentId: M:System.Linq.Enumerable.Join``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3})
- uid: System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{`0,`1}}.System.Linq.Enumerable.Join``4(System.Collections.Generic.IEnumerable{{TInner}},System.Func{System.Collections.Generic.KeyValuePair{{TKey},{TValue}},{TKey}},System.Func{{TInner},{TKey}},System.Func{System.Collections.Generic.KeyValuePair{{TKey},{TValue}},{TInner},{TResult}},System.Collections.Generic.IEqualityComparer{{TKey}})
  parent: System.Linq.Enumerable
  definition: System.Linq.Enumerable.Join``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3},System.Collections.Generic.IEqualityComparer{``2})
  name: Join<KeyValuePair<TKey, TValue>, TInner, TKey, TResult>(IEnumerable<TInner>, Func<KeyValuePair<TKey, TValue>, TKey>, Func<TInner, TKey>, Func<KeyValuePair<TKey, TValue>, TInner, TResult>, IEqualityComparer<TKey>)
  fullName: System.Linq.Enumerable.Join<System.Collections.Generic.KeyValuePair<TKey, TValue>, TInner, TKey, TResult>(System.Collections.Generic.IEnumerable<TInner>, System.Func<System.Collections.Generic.KeyValuePair<TKey, TValue>, TKey>, System.Func<TInner, TKey>, System.Func<System.Collections.Generic.KeyValuePair<TKey, TValue>, TInner, TResult>, System.Collections.Generic.IEqualityComparer<TKey>)
  fullname.vb: System.Linq.Enumerable.Join(Of System.Collections.Generic.KeyValuePair(Of TKey, TValue), TInner, TKey, TResult)(System.Collections.Generic.IEnumerable(Of TInner), System.Func(Of System.Collections.Generic.KeyValuePair(Of TKey, TValue), TKey), System.Func(Of TInner, TKey), System.Func(Of System.Collections.Generic.KeyValuePair(Of TKey, TValue), TInner, TResult), System.Collections.Generic.IEqualityComparer(Of TKey))
  name.vb: Join(Of KeyValuePair(Of TKey, TValue), TInner, TKey, TResult)(IEnumerable(Of TInner), Func(Of KeyValuePair(Of TKey, TValue), TKey), Func(Of TInner, TKey), Func(Of KeyValuePair(Of TKey, TValue), TInner, TResult), IEqualityComparer(Of TKey))
  spec.csharp:
  - uid: System.Linq.Enumerable.Join``4(System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3},System.Collections.Generic.IEqualityComparer{``2})
    name: Join<KeyValuePair<TKey, TValue>, TInner, TKey, TResult>
    fullName: System.Linq.Enumerable.Join<System.Collections.Generic.KeyValuePair<TKey, TValue>, TInner, TKey, TResult>
  - name: (
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    fullName: <
  - name: TInner
    fullName: TInner
  - name: '>'
    fullName: '>'
  - name: ', '
    fullName: ', '
  - uid: System.Func`2
    name: Func
    fullName: System.Func
    isExternal: true
  - name: <
    fullName: <
  - uid: System.Collections.Generic.KeyValuePair`2
    name: KeyValuePair
    fullName: System.Collections.Generic.KeyValuePair
    isExternal: true
  - name: <
    fullName: <
  - name: TKey
    fullName: TKey
  - name: ', '
    fullName: ', '
  - name: TValue
    fullName: TValue
  - name: '>'
    fullName: '>'
  - name: ', '
    fullName: ', '
  - name: TKey
    fullName: TKey
  - name: '>'
    fullName: '>'
  - name: ', '
    fullName: ', '
  - uid: System.Func`2
    name: Func
    fullName: System.Func
    isExternal: true
  - name: <
    fullName: <
  - name: TInner
    fullName: TInner
  - name: ', '
    fullName: ', '
  - name: TKey
    fullName: TKey
  - name: '>'
    fullName: '>'
  - name: ', '
    fullName: ', '
  - uid: System.Func`3
    name: Func
    fullName: System.Func
    isExternal: true
  - name: <
    fullName: <
  - uid: System.Collections.Generic.KeyValuePair`2
    name: KeyValuePair
    fullName: System.Collections.Generic.KeyValuePair
    isExternal: true
  - name: <
    fullName: <
  - name: TKey
    fullName: TKey
  - name: ', '
    fullName: ', '
  - name: TValue
    fullName: TValue
  - name: '>'
    fullName: '>'
  - name: ', '
    fullName: ', '
  - name: TInner
    fullName: TInner
  - name: ', '
    fullName: ', '
  - name: TResult
    fullName: TResult
  - name: '>'
    fullName: '>'
  - name: ', '
    fullName: ', '
  - uid: System.Collections.Generic.IEqualityComparer`1
    name: IEqualityComparer
    fullName: System.Collections.Generic.IEqualityComparer
    isExternal: true
  - name: <
    fullName: <
  - name: TKey
    fullName: TKey
  - name: '>'
    fullName: '>'
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Linq.Enumerable.Join``4(System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3},System.Collections.Generic.IEqualityComparer{``2})
    name: Join(Of KeyValuePair(Of TKey, TValue), TInner, TKey, TResult)
    fullName: System.Linq.Enumerable.Join(Of System.Collections.Generic.KeyValuePair(Of TKey, TValue), TInner, TKey, TResult)
  - name: (
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - name: TInner
    fullName: TInner
  - name: )
    fullName: )
  - name: ', '
    fullName: ', '
  - uid: System.Func`2
    name: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - uid: System.Collections.Generic.KeyValuePair`2
    name: KeyValuePair
    fullName: System.Collections.Generic.KeyValuePair
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - name: TKey
    fullName: TKey
  - name: ', '
    fullName: ', '
  - name: TValue
    fullName: TValue
  - name: )
    fullName: )
  - name: ', '
    fullName: ', '
  - name: TKey
    fullName: TKey
  - name: )
    fullName: )
  - name: ', '
    fullName: ', '
  - uid: System.Func`2
    name: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - name: TInner
    fullName: TInner
  - name: ', '
    fullName: ', '
  - name: TKey
    fullName: TKey
  - name: )
    fullName: )
  - name: ', '
    fullName: ', '
  - uid: System.Func`3
    name: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - uid: System.Collections.Generic.KeyValuePair`2
    name: KeyValuePair
    fullName: System.Collections.Generic.KeyValuePair
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - name: TKey
    fullName: TKey
  - name: ', '
    fullName: ', '
  - name: TValue
    fullName: TValue
  - name: )
    fullName: )
  - name: ', '
    fullName: ', '
  - name: TInner
    fullName: TInner
  - name: ', '
    fullName: ', '
  - name: TResult
    fullName: TResult
  - name: )
    fullName: )
  - name: ', '
    fullName: ', '
  - uid: System.Collections.Generic.IEqualityComparer`1
    name: IEqualityComparer
    fullName: System.Collections.Generic.IEqualityComparer
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - name: TKey
    fullName: TKey
  - name: )
    fullName: )
  - name: )
    fullName: )
  nameWithType: Enumerable.Join<KeyValuePair<TKey, TValue>, TInner, TKey, TResult>(IEnumerable<TInner>, Func<KeyValuePair<TKey, TValue>, TKey>, Func<TInner, TKey>, Func<KeyValuePair<TKey, TValue>, TInner, TResult>, IEqualityComparer<TKey>)
  nameWithType.vb: Enumerable.Join(Of KeyValuePair(Of TKey, TValue), TInner, TKey, TResult)(IEnumerable(Of TInner), Func(Of KeyValuePair(Of TKey, TValue), TKey), Func(Of TInner, TKey), Func(Of KeyValuePair(Of TKey, TValue), TInner, TResult), IEqualityComparer(Of TKey))
  commentId: M:System.Linq.Enumerable.Join``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3},System.Collections.Generic.IEqualityComparer{``2})
- uid: System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{`0,`1}}.System.Linq.Enumerable.Last``1
  parent: System.Linq.Enumerable
  definition: System.Linq.Enumerable.Last``1(System.Collections.Generic.IEnumerable{``0})
  name: Last<KeyValuePair<TKey, TValue>>()
  fullName: System.Linq.Enumerable.Last<System.Collections.Generic.KeyValuePair<TKey, TValue>>()
  fullname.vb: System.Linq.Enumerable.Last(Of System.Collections.Generic.KeyValuePair(Of TKey, TValue))()
  name.vb: Last(Of KeyValuePair(Of TKey, TValue))()
  spec.csharp:
  - uid: System.Linq.Enumerable.Last``1
    name: Last<KeyValuePair<TKey, TValue>>
    fullName: System.Linq.Enumerable.Last<System.Collections.Generic.KeyValuePair<TKey, TValue>>
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Linq.Enumerable.Last``1
    name: Last(Of KeyValuePair(Of TKey, TValue))
    fullName: System.Linq.Enumerable.Last(Of System.Collections.Generic.KeyValuePair(Of TKey, TValue))
  - name: (
    fullName: (
  - name: )
    fullName: )
  nameWithType: Enumerable.Last<KeyValuePair<TKey, TValue>>()
  nameWithType.vb: Enumerable.Last(Of KeyValuePair(Of TKey, TValue))()
  commentId: M:System.Linq.Enumerable.Last``1(System.Collections.Generic.IEnumerable{``0})
- uid: System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{`0,`1}}.System.Linq.Enumerable.Last``1(System.Func{System.Collections.Generic.KeyValuePair{{TKey},{TValue}},System.Boolean})
  parent: System.Linq.Enumerable
  definition: System.Linq.Enumerable.Last``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})
  name: Last<KeyValuePair<TKey, TValue>>(Func<KeyValuePair<TKey, TValue>, Boolean>)
  fullName: System.Linq.Enumerable.Last<System.Collections.Generic.KeyValuePair<TKey, TValue>>(System.Func<System.Collections.Generic.KeyValuePair<TKey, TValue>, System.Boolean>)
  fullname.vb: System.Linq.Enumerable.Last(Of System.Collections.Generic.KeyValuePair(Of TKey, TValue))(System.Func(Of System.Collections.Generic.KeyValuePair(Of TKey, TValue), System.Boolean))
  name.vb: Last(Of KeyValuePair(Of TKey, TValue))(Func(Of KeyValuePair(Of TKey, TValue), Boolean))
  spec.csharp:
  - uid: System.Linq.Enumerable.Last``1(System.Func{``0,System.Boolean})
    name: Last<KeyValuePair<TKey, TValue>>
    fullName: System.Linq.Enumerable.Last<System.Collections.Generic.KeyValuePair<TKey, TValue>>
  - name: (
    fullName: (
  - uid: System.Func`2
    name: Func
    fullName: System.Func
    isExternal: true
  - name: <
    fullName: <
  - uid: System.Collections.Generic.KeyValuePair`2
    name: KeyValuePair
    fullName: System.Collections.Generic.KeyValuePair
    isExternal: true
  - name: <
    fullName: <
  - name: TKey
    fullName: TKey
  - name: ', '
    fullName: ', '
  - name: TValue
    fullName: TValue
  - name: '>'
    fullName: '>'
  - name: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: '>'
    fullName: '>'
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Linq.Enumerable.Last``1(System.Func{``0,System.Boolean})
    name: Last(Of KeyValuePair(Of TKey, TValue))
    fullName: System.Linq.Enumerable.Last(Of System.Collections.Generic.KeyValuePair(Of TKey, TValue))
  - name: (
    fullName: (
  - uid: System.Func`2
    name: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - uid: System.Collections.Generic.KeyValuePair`2
    name: KeyValuePair
    fullName: System.Collections.Generic.KeyValuePair
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - name: TKey
    fullName: TKey
  - name: ', '
    fullName: ', '
  - name: TValue
    fullName: TValue
  - name: )
    fullName: )
  - name: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    fullName: )
  - name: )
    fullName: )
  nameWithType: Enumerable.Last<KeyValuePair<TKey, TValue>>(Func<KeyValuePair<TKey, TValue>, Boolean>)
  nameWithType.vb: Enumerable.Last(Of KeyValuePair(Of TKey, TValue))(Func(Of KeyValuePair(Of TKey, TValue), Boolean))
  commentId: M:System.Linq.Enumerable.Last``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})
- uid: System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{`0,`1}}.System.Linq.Enumerable.LastOrDefault``1
  parent: System.Linq.Enumerable
  definition: System.Linq.Enumerable.LastOrDefault``1(System.Collections.Generic.IEnumerable{``0})
  name: LastOrDefault<KeyValuePair<TKey, TValue>>()
  fullName: System.Linq.Enumerable.LastOrDefault<System.Collections.Generic.KeyValuePair<TKey, TValue>>()
  fullname.vb: System.Linq.Enumerable.LastOrDefault(Of System.Collections.Generic.KeyValuePair(Of TKey, TValue))()
  name.vb: LastOrDefault(Of KeyValuePair(Of TKey, TValue))()
  spec.csharp:
  - uid: System.Linq.Enumerable.LastOrDefault``1
    name: LastOrDefault<KeyValuePair<TKey, TValue>>
    fullName: System.Linq.Enumerable.LastOrDefault<System.Collections.Generic.KeyValuePair<TKey, TValue>>
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Linq.Enumerable.LastOrDefault``1
    name: LastOrDefault(Of KeyValuePair(Of TKey, TValue))
    fullName: System.Linq.Enumerable.LastOrDefault(Of System.Collections.Generic.KeyValuePair(Of TKey, TValue))
  - name: (
    fullName: (
  - name: )
    fullName: )
  nameWithType: Enumerable.LastOrDefault<KeyValuePair<TKey, TValue>>()
  nameWithType.vb: Enumerable.LastOrDefault(Of KeyValuePair(Of TKey, TValue))()
  commentId: M:System.Linq.Enumerable.LastOrDefault``1(System.Collections.Generic.IEnumerable{``0})
- uid: System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{`0,`1}}.System.Linq.Enumerable.LastOrDefault``1(System.Func{System.Collections.Generic.KeyValuePair{{TKey},{TValue}},System.Boolean})
  parent: System.Linq.Enumerable
  definition: System.Linq.Enumerable.LastOrDefault``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})
  name: LastOrDefault<KeyValuePair<TKey, TValue>>(Func<KeyValuePair<TKey, TValue>, Boolean>)
  fullName: System.Linq.Enumerable.LastOrDefault<System.Collections.Generic.KeyValuePair<TKey, TValue>>(System.Func<System.Collections.Generic.KeyValuePair<TKey, TValue>, System.Boolean>)
  fullname.vb: System.Linq.Enumerable.LastOrDefault(Of System.Collections.Generic.KeyValuePair(Of TKey, TValue))(System.Func(Of System.Collections.Generic.KeyValuePair(Of TKey, TValue), System.Boolean))
  name.vb: LastOrDefault(Of KeyValuePair(Of TKey, TValue))(Func(Of KeyValuePair(Of TKey, TValue), Boolean))
  spec.csharp:
  - uid: System.Linq.Enumerable.LastOrDefault``1(System.Func{``0,System.Boolean})
    name: LastOrDefault<KeyValuePair<TKey, TValue>>
    fullName: System.Linq.Enumerable.LastOrDefault<System.Collections.Generic.KeyValuePair<TKey, TValue>>
  - name: (
    fullName: (
  - uid: System.Func`2
    name: Func
    fullName: System.Func
    isExternal: true
  - name: <
    fullName: <
  - uid: System.Collections.Generic.KeyValuePair`2
    name: KeyValuePair
    fullName: System.Collections.Generic.KeyValuePair
    isExternal: true
  - name: <
    fullName: <
  - name: TKey
    fullName: TKey
  - name: ', '
    fullName: ', '
  - name: TValue
    fullName: TValue
  - name: '>'
    fullName: '>'
  - name: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: '>'
    fullName: '>'
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Linq.Enumerable.LastOrDefault``1(System.Func{``0,System.Boolean})
    name: LastOrDefault(Of KeyValuePair(Of TKey, TValue))
    fullName: System.Linq.Enumerable.LastOrDefault(Of System.Collections.Generic.KeyValuePair(Of TKey, TValue))
  - name: (
    fullName: (
  - uid: System.Func`2
    name: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - uid: System.Collections.Generic.KeyValuePair`2
    name: KeyValuePair
    fullName: System.Collections.Generic.KeyValuePair
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - name: TKey
    fullName: TKey
  - name: ', '
    fullName: ', '
  - name: TValue
    fullName: TValue
  - name: )
    fullName: )
  - name: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    fullName: )
  - name: )
    fullName: )
  nameWithType: Enumerable.LastOrDefault<KeyValuePair<TKey, TValue>>(Func<KeyValuePair<TKey, TValue>, Boolean>)
  nameWithType.vb: Enumerable.LastOrDefault(Of KeyValuePair(Of TKey, TValue))(Func(Of KeyValuePair(Of TKey, TValue), Boolean))
  commentId: M:System.Linq.Enumerable.LastOrDefault``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})
- uid: System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{`0,`1}}.System.Linq.Enumerable.LongCount``1
  parent: System.Linq.Enumerable
  definition: System.Linq.Enumerable.LongCount``1(System.Collections.Generic.IEnumerable{``0})
  name: LongCount<KeyValuePair<TKey, TValue>>()
  fullName: System.Linq.Enumerable.LongCount<System.Collections.Generic.KeyValuePair<TKey, TValue>>()
  fullname.vb: System.Linq.Enumerable.LongCount(Of System.Collections.Generic.KeyValuePair(Of TKey, TValue))()
  name.vb: LongCount(Of KeyValuePair(Of TKey, TValue))()
  spec.csharp:
  - uid: System.Linq.Enumerable.LongCount``1
    name: LongCount<KeyValuePair<TKey, TValue>>
    fullName: System.Linq.Enumerable.LongCount<System.Collections.Generic.KeyValuePair<TKey, TValue>>
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Linq.Enumerable.LongCount``1
    name: LongCount(Of KeyValuePair(Of TKey, TValue))
    fullName: System.Linq.Enumerable.LongCount(Of System.Collections.Generic.KeyValuePair(Of TKey, TValue))
  - name: (
    fullName: (
  - name: )
    fullName: )
  nameWithType: Enumerable.LongCount<KeyValuePair<TKey, TValue>>()
  nameWithType.vb: Enumerable.LongCount(Of KeyValuePair(Of TKey, TValue))()
  commentId: M:System.Linq.Enumerable.LongCount``1(System.Collections.Generic.IEnumerable{``0})
- uid: System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{`0,`1}}.System.Linq.Enumerable.LongCount``1(System.Func{System.Collections.Generic.KeyValuePair{{TKey},{TValue}},System.Boolean})
  parent: System.Linq.Enumerable
  definition: System.Linq.Enumerable.LongCount``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})
  name: LongCount<KeyValuePair<TKey, TValue>>(Func<KeyValuePair<TKey, TValue>, Boolean>)
  fullName: System.Linq.Enumerable.LongCount<System.Collections.Generic.KeyValuePair<TKey, TValue>>(System.Func<System.Collections.Generic.KeyValuePair<TKey, TValue>, System.Boolean>)
  fullname.vb: System.Linq.Enumerable.LongCount(Of System.Collections.Generic.KeyValuePair(Of TKey, TValue))(System.Func(Of System.Collections.Generic.KeyValuePair(Of TKey, TValue), System.Boolean))
  name.vb: LongCount(Of KeyValuePair(Of TKey, TValue))(Func(Of KeyValuePair(Of TKey, TValue), Boolean))
  spec.csharp:
  - uid: System.Linq.Enumerable.LongCount``1(System.Func{``0,System.Boolean})
    name: LongCount<KeyValuePair<TKey, TValue>>
    fullName: System.Linq.Enumerable.LongCount<System.Collections.Generic.KeyValuePair<TKey, TValue>>
  - name: (
    fullName: (
  - uid: System.Func`2
    name: Func
    fullName: System.Func
    isExternal: true
  - name: <
    fullName: <
  - uid: System.Collections.Generic.KeyValuePair`2
    name: KeyValuePair
    fullName: System.Collections.Generic.KeyValuePair
    isExternal: true
  - name: <
    fullName: <
  - name: TKey
    fullName: TKey
  - name: ', '
    fullName: ', '
  - name: TValue
    fullName: TValue
  - name: '>'
    fullName: '>'
  - name: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: '>'
    fullName: '>'
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Linq.Enumerable.LongCount``1(System.Func{``0,System.Boolean})
    name: LongCount(Of KeyValuePair(Of TKey, TValue))
    fullName: System.Linq.Enumerable.LongCount(Of System.Collections.Generic.KeyValuePair(Of TKey, TValue))
  - name: (
    fullName: (
  - uid: System.Func`2
    name: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - uid: System.Collections.Generic.KeyValuePair`2
    name: KeyValuePair
    fullName: System.Collections.Generic.KeyValuePair
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - name: TKey
    fullName: TKey
  - name: ', '
    fullName: ', '
  - name: TValue
    fullName: TValue
  - name: )
    fullName: )
  - name: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    fullName: )
  - name: )
    fullName: )
  nameWithType: Enumerable.LongCount<KeyValuePair<TKey, TValue>>(Func<KeyValuePair<TKey, TValue>, Boolean>)
  nameWithType.vb: Enumerable.LongCount(Of KeyValuePair(Of TKey, TValue))(Func(Of KeyValuePair(Of TKey, TValue), Boolean))
  commentId: M:System.Linq.Enumerable.LongCount``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})
- uid: System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{`0,`1}}.System.Linq.Enumerable.Max``1
  parent: System.Linq.Enumerable
  definition: System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0})
  name: Max<KeyValuePair<TKey, TValue>>()
  fullName: System.Linq.Enumerable.Max<System.Collections.Generic.KeyValuePair<TKey, TValue>>()
  fullname.vb: System.Linq.Enumerable.Max(Of System.Collections.Generic.KeyValuePair(Of TKey, TValue))()
  name.vb: Max(Of KeyValuePair(Of TKey, TValue))()
  spec.csharp:
  - uid: System.Linq.Enumerable.Max``1
    name: Max<KeyValuePair<TKey, TValue>>
    fullName: System.Linq.Enumerable.Max<System.Collections.Generic.KeyValuePair<TKey, TValue>>
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Linq.Enumerable.Max``1
    name: Max(Of KeyValuePair(Of TKey, TValue))
    fullName: System.Linq.Enumerable.Max(Of System.Collections.Generic.KeyValuePair(Of TKey, TValue))
  - name: (
    fullName: (
  - name: )
    fullName: )
  nameWithType: Enumerable.Max<KeyValuePair<TKey, TValue>>()
  nameWithType.vb: Enumerable.Max(Of KeyValuePair(Of TKey, TValue))()
  commentId: M:System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0})
- uid: System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{`0,`1}}.System.Linq.Enumerable.Max``1(System.Func{System.Collections.Generic.KeyValuePair{{TKey},{TValue}},System.Decimal})
  parent: System.Linq.Enumerable
  definition: System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Decimal})
  name: Max<KeyValuePair<TKey, TValue>>(Func<KeyValuePair<TKey, TValue>, Decimal>)
  fullName: System.Linq.Enumerable.Max<System.Collections.Generic.KeyValuePair<TKey, TValue>>(System.Func<System.Collections.Generic.KeyValuePair<TKey, TValue>, System.Decimal>)
  fullname.vb: System.Linq.Enumerable.Max(Of System.Collections.Generic.KeyValuePair(Of TKey, TValue))(System.Func(Of System.Collections.Generic.KeyValuePair(Of TKey, TValue), System.Decimal))
  name.vb: Max(Of KeyValuePair(Of TKey, TValue))(Func(Of KeyValuePair(Of TKey, TValue), Decimal))
  spec.csharp:
  - uid: System.Linq.Enumerable.Max``1(System.Func{``0,System.Decimal})
    name: Max<KeyValuePair<TKey, TValue>>
    fullName: System.Linq.Enumerable.Max<System.Collections.Generic.KeyValuePair<TKey, TValue>>
  - name: (
    fullName: (
  - uid: System.Func`2
    name: Func
    fullName: System.Func
    isExternal: true
  - name: <
    fullName: <
  - uid: System.Collections.Generic.KeyValuePair`2
    name: KeyValuePair
    fullName: System.Collections.Generic.KeyValuePair
    isExternal: true
  - name: <
    fullName: <
  - name: TKey
    fullName: TKey
  - name: ', '
    fullName: ', '
  - name: TValue
    fullName: TValue
  - name: '>'
    fullName: '>'
  - name: ', '
    fullName: ', '
  - uid: System.Decimal
    name: Decimal
    fullName: System.Decimal
    isExternal: true
  - name: '>'
    fullName: '>'
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Linq.Enumerable.Max``1(System.Func{``0,System.Decimal})
    name: Max(Of KeyValuePair(Of TKey, TValue))
    fullName: System.Linq.Enumerable.Max(Of System.Collections.Generic.KeyValuePair(Of TKey, TValue))
  - name: (
    fullName: (
  - uid: System.Func`2
    name: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - uid: System.Collections.Generic.KeyValuePair`2
    name: KeyValuePair
    fullName: System.Collections.Generic.KeyValuePair
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - name: TKey
    fullName: TKey
  - name: ', '
    fullName: ', '
  - name: TValue
    fullName: TValue
  - name: )
    fullName: )
  - name: ', '
    fullName: ', '
  - uid: System.Decimal
    name: Decimal
    fullName: System.Decimal
    isExternal: true
  - name: )
    fullName: )
  - name: )
    fullName: )
  nameWithType: Enumerable.Max<KeyValuePair<TKey, TValue>>(Func<KeyValuePair<TKey, TValue>, Decimal>)
  nameWithType.vb: Enumerable.Max(Of KeyValuePair(Of TKey, TValue))(Func(Of KeyValuePair(Of TKey, TValue), Decimal))
  commentId: M:System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Decimal})
- uid: System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{`0,`1}}.System.Linq.Enumerable.Max``1(System.Func{System.Collections.Generic.KeyValuePair{{TKey},{TValue}},System.Double})
  parent: System.Linq.Enumerable
  definition: System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Double})
  name: Max<KeyValuePair<TKey, TValue>>(Func<KeyValuePair<TKey, TValue>, Double>)
  fullName: System.Linq.Enumerable.Max<System.Collections.Generic.KeyValuePair<TKey, TValue>>(System.Func<System.Collections.Generic.KeyValuePair<TKey, TValue>, System.Double>)
  fullname.vb: System.Linq.Enumerable.Max(Of System.Collections.Generic.KeyValuePair(Of TKey, TValue))(System.Func(Of System.Collections.Generic.KeyValuePair(Of TKey, TValue), System.Double))
  name.vb: Max(Of KeyValuePair(Of TKey, TValue))(Func(Of KeyValuePair(Of TKey, TValue), Double))
  spec.csharp:
  - uid: System.Linq.Enumerable.Max``1(System.Func{``0,System.Double})
    name: Max<KeyValuePair<TKey, TValue>>
    fullName: System.Linq.Enumerable.Max<System.Collections.Generic.KeyValuePair<TKey, TValue>>
  - name: (
    fullName: (
  - uid: System.Func`2
    name: Func
    fullName: System.Func
    isExternal: true
  - name: <
    fullName: <
  - uid: System.Collections.Generic.KeyValuePair`2
    name: KeyValuePair
    fullName: System.Collections.Generic.KeyValuePair
    isExternal: true
  - name: <
    fullName: <
  - name: TKey
    fullName: TKey
  - name: ', '
    fullName: ', '
  - name: TValue
    fullName: TValue
  - name: '>'
    fullName: '>'
  - name: ', '
    fullName: ', '
  - uid: System.Double
    name: Double
    fullName: System.Double
    isExternal: true
  - name: '>'
    fullName: '>'
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Linq.Enumerable.Max``1(System.Func{``0,System.Double})
    name: Max(Of KeyValuePair(Of TKey, TValue))
    fullName: System.Linq.Enumerable.Max(Of System.Collections.Generic.KeyValuePair(Of TKey, TValue))
  - name: (
    fullName: (
  - uid: System.Func`2
    name: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - uid: System.Collections.Generic.KeyValuePair`2
    name: KeyValuePair
    fullName: System.Collections.Generic.KeyValuePair
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - name: TKey
    fullName: TKey
  - name: ', '
    fullName: ', '
  - name: TValue
    fullName: TValue
  - name: )
    fullName: )
  - name: ', '
    fullName: ', '
  - uid: System.Double
    name: Double
    fullName: System.Double
    isExternal: true
  - name: )
    fullName: )
  - name: )
    fullName: )
  nameWithType: Enumerable.Max<KeyValuePair<TKey, TValue>>(Func<KeyValuePair<TKey, TValue>, Double>)
  nameWithType.vb: Enumerable.Max(Of KeyValuePair(Of TKey, TValue))(Func(Of KeyValuePair(Of TKey, TValue), Double))
  commentId: M:System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Double})
- uid: System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{`0,`1}}.System.Linq.Enumerable.Max``1(System.Func{System.Collections.Generic.KeyValuePair{{TKey},{TValue}},System.Int32})
  parent: System.Linq.Enumerable
  definition: System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32})
  name: Max<KeyValuePair<TKey, TValue>>(Func<KeyValuePair<TKey, TValue>, Int32>)
  fullName: System.Linq.Enumerable.Max<System.Collections.Generic.KeyValuePair<TKey, TValue>>(System.Func<System.Collections.Generic.KeyValuePair<TKey, TValue>, System.Int32>)
  fullname.vb: System.Linq.Enumerable.Max(Of System.Collections.Generic.KeyValuePair(Of TKey, TValue))(System.Func(Of System.Collections.Generic.KeyValuePair(Of TKey, TValue), System.Int32))
  name.vb: Max(Of KeyValuePair(Of TKey, TValue))(Func(Of KeyValuePair(Of TKey, TValue), Int32))
  spec.csharp:
  - uid: System.Linq.Enumerable.Max``1(System.Func{``0,System.Int32})
    name: Max<KeyValuePair<TKey, TValue>>
    fullName: System.Linq.Enumerable.Max<System.Collections.Generic.KeyValuePair<TKey, TValue>>
  - name: (
    fullName: (
  - uid: System.Func`2
    name: Func
    fullName: System.Func
    isExternal: true
  - name: <
    fullName: <
  - uid: System.Collections.Generic.KeyValuePair`2
    name: KeyValuePair
    fullName: System.Collections.Generic.KeyValuePair
    isExternal: true
  - name: <
    fullName: <
  - name: TKey
    fullName: TKey
  - name: ', '
    fullName: ', '
  - name: TValue
    fullName: TValue
  - name: '>'
    fullName: '>'
  - name: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    fullName: System.Int32
    isExternal: true
  - name: '>'
    fullName: '>'
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Linq.Enumerable.Max``1(System.Func{``0,System.Int32})
    name: Max(Of KeyValuePair(Of TKey, TValue))
    fullName: System.Linq.Enumerable.Max(Of System.Collections.Generic.KeyValuePair(Of TKey, TValue))
  - name: (
    fullName: (
  - uid: System.Func`2
    name: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - uid: System.Collections.Generic.KeyValuePair`2
    name: KeyValuePair
    fullName: System.Collections.Generic.KeyValuePair
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - name: TKey
    fullName: TKey
  - name: ', '
    fullName: ', '
  - name: TValue
    fullName: TValue
  - name: )
    fullName: )
  - name: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    fullName: )
  - name: )
    fullName: )
  nameWithType: Enumerable.Max<KeyValuePair<TKey, TValue>>(Func<KeyValuePair<TKey, TValue>, Int32>)
  nameWithType.vb: Enumerable.Max(Of KeyValuePair(Of TKey, TValue))(Func(Of KeyValuePair(Of TKey, TValue), Int32))
  commentId: M:System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32})
- uid: System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{`0,`1}}.System.Linq.Enumerable.Max``1(System.Func{System.Collections.Generic.KeyValuePair{{TKey},{TValue}},System.Int64})
  parent: System.Linq.Enumerable
  definition: System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int64})
  name: Max<KeyValuePair<TKey, TValue>>(Func<KeyValuePair<TKey, TValue>, Int64>)
  fullName: System.Linq.Enumerable.Max<System.Collections.Generic.KeyValuePair<TKey, TValue>>(System.Func<System.Collections.Generic.KeyValuePair<TKey, TValue>, System.Int64>)
  fullname.vb: System.Linq.Enumerable.Max(Of System.Collections.Generic.KeyValuePair(Of TKey, TValue))(System.Func(Of System.Collections.Generic.KeyValuePair(Of TKey, TValue), System.Int64))
  name.vb: Max(Of KeyValuePair(Of TKey, TValue))(Func(Of KeyValuePair(Of TKey, TValue), Int64))
  spec.csharp:
  - uid: System.Linq.Enumerable.Max``1(System.Func{``0,System.Int64})
    name: Max<KeyValuePair<TKey, TValue>>
    fullName: System.Linq.Enumerable.Max<System.Collections.Generic.KeyValuePair<TKey, TValue>>
  - name: (
    fullName: (
  - uid: System.Func`2
    name: Func
    fullName: System.Func
    isExternal: true
  - name: <
    fullName: <
  - uid: System.Collections.Generic.KeyValuePair`2
    name: KeyValuePair
    fullName: System.Collections.Generic.KeyValuePair
    isExternal: true
  - name: <
    fullName: <
  - name: TKey
    fullName: TKey
  - name: ', '
    fullName: ', '
  - name: TValue
    fullName: TValue
  - name: '>'
    fullName: '>'
  - name: ', '
    fullName: ', '
  - uid: System.Int64
    name: Int64
    fullName: System.Int64
    isExternal: true
  - name: '>'
    fullName: '>'
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Linq.Enumerable.Max``1(System.Func{``0,System.Int64})
    name: Max(Of KeyValuePair(Of TKey, TValue))
    fullName: System.Linq.Enumerable.Max(Of System.Collections.Generic.KeyValuePair(Of TKey, TValue))
  - name: (
    fullName: (
  - uid: System.Func`2
    name: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - uid: System.Collections.Generic.KeyValuePair`2
    name: KeyValuePair
    fullName: System.Collections.Generic.KeyValuePair
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - name: TKey
    fullName: TKey
  - name: ', '
    fullName: ', '
  - name: TValue
    fullName: TValue
  - name: )
    fullName: )
  - name: ', '
    fullName: ', '
  - uid: System.Int64
    name: Int64
    fullName: System.Int64
    isExternal: true
  - name: )
    fullName: )
  - name: )
    fullName: )
  nameWithType: Enumerable.Max<KeyValuePair<TKey, TValue>>(Func<KeyValuePair<TKey, TValue>, Int64>)
  nameWithType.vb: Enumerable.Max(Of KeyValuePair(Of TKey, TValue))(Func(Of KeyValuePair(Of TKey, TValue), Int64))
  commentId: M:System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int64})
- uid: System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{`0,`1}}.System.Linq.Enumerable.Max``1(System.Func{System.Collections.Generic.KeyValuePair{{TKey},{TValue}},System.Nullable{System.Decimal}})
  parent: System.Linq.Enumerable
  definition: System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Decimal}})
  name: Max<KeyValuePair<TKey, TValue>>(Func<KeyValuePair<TKey, TValue>, Nullable<Decimal>>)
  fullName: System.Linq.Enumerable.Max<System.Collections.Generic.KeyValuePair<TKey, TValue>>(System.Func<System.Collections.Generic.KeyValuePair<TKey, TValue>, System.Nullable<System.Decimal>>)
  fullname.vb: System.Linq.Enumerable.Max(Of System.Collections.Generic.KeyValuePair(Of TKey, TValue))(System.Func(Of System.Collections.Generic.KeyValuePair(Of TKey, TValue), System.Nullable(Of System.Decimal)))
  name.vb: Max(Of KeyValuePair(Of TKey, TValue))(Func(Of KeyValuePair(Of TKey, TValue), Nullable(Of Decimal)))
  spec.csharp:
  - uid: System.Linq.Enumerable.Max``1(System.Func{``0,System.Nullable{System.Decimal}})
    name: Max<KeyValuePair<TKey, TValue>>
    fullName: System.Linq.Enumerable.Max<System.Collections.Generic.KeyValuePair<TKey, TValue>>
  - name: (
    fullName: (
  - uid: System.Func`2
    name: Func
    fullName: System.Func
    isExternal: true
  - name: <
    fullName: <
  - uid: System.Collections.Generic.KeyValuePair`2
    name: KeyValuePair
    fullName: System.Collections.Generic.KeyValuePair
    isExternal: true
  - name: <
    fullName: <
  - name: TKey
    fullName: TKey
  - name: ', '
    fullName: ', '
  - name: TValue
    fullName: TValue
  - name: '>'
    fullName: '>'
  - name: ', '
    fullName: ', '
  - uid: System.Nullable`1
    name: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    fullName: <
  - uid: System.Decimal
    name: Decimal
    fullName: System.Decimal
    isExternal: true
  - name: '>'
    fullName: '>'
  - name: '>'
    fullName: '>'
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Linq.Enumerable.Max``1(System.Func{``0,System.Nullable{System.Decimal}})
    name: Max(Of KeyValuePair(Of TKey, TValue))
    fullName: System.Linq.Enumerable.Max(Of System.Collections.Generic.KeyValuePair(Of TKey, TValue))
  - name: (
    fullName: (
  - uid: System.Func`2
    name: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - uid: System.Collections.Generic.KeyValuePair`2
    name: KeyValuePair
    fullName: System.Collections.Generic.KeyValuePair
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - name: TKey
    fullName: TKey
  - name: ', '
    fullName: ', '
  - name: TValue
    fullName: TValue
  - name: )
    fullName: )
  - name: ', '
    fullName: ', '
  - uid: System.Nullable`1
    name: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - uid: System.Decimal
    name: Decimal
    fullName: System.Decimal
    isExternal: true
  - name: )
    fullName: )
  - name: )
    fullName: )
  - name: )
    fullName: )
  nameWithType: Enumerable.Max<KeyValuePair<TKey, TValue>>(Func<KeyValuePair<TKey, TValue>, Nullable<Decimal>>)
  nameWithType.vb: Enumerable.Max(Of KeyValuePair(Of TKey, TValue))(Func(Of KeyValuePair(Of TKey, TValue), Nullable(Of Decimal)))
  commentId: M:System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Decimal}})
- uid: System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{`0,`1}}.System.Linq.Enumerable.Max``1(System.Func{System.Collections.Generic.KeyValuePair{{TKey},{TValue}},System.Nullable{System.Double}})
  parent: System.Linq.Enumerable
  definition: System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Double}})
  name: Max<KeyValuePair<TKey, TValue>>(Func<KeyValuePair<TKey, TValue>, Nullable<Double>>)
  fullName: System.Linq.Enumerable.Max<System.Collections.Generic.KeyValuePair<TKey, TValue>>(System.Func<System.Collections.Generic.KeyValuePair<TKey, TValue>, System.Nullable<System.Double>>)
  fullname.vb: System.Linq.Enumerable.Max(Of System.Collections.Generic.KeyValuePair(Of TKey, TValue))(System.Func(Of System.Collections.Generic.KeyValuePair(Of TKey, TValue), System.Nullable(Of System.Double)))
  name.vb: Max(Of KeyValuePair(Of TKey, TValue))(Func(Of KeyValuePair(Of TKey, TValue), Nullable(Of Double)))
  spec.csharp:
  - uid: System.Linq.Enumerable.Max``1(System.Func{``0,System.Nullable{System.Double}})
    name: Max<KeyValuePair<TKey, TValue>>
    fullName: System.Linq.Enumerable.Max<System.Collections.Generic.KeyValuePair<TKey, TValue>>
  - name: (
    fullName: (
  - uid: System.Func`2
    name: Func
    fullName: System.Func
    isExternal: true
  - name: <
    fullName: <
  - uid: System.Collections.Generic.KeyValuePair`2
    name: KeyValuePair
    fullName: System.Collections.Generic.KeyValuePair
    isExternal: true
  - name: <
    fullName: <
  - name: TKey
    fullName: TKey
  - name: ', '
    fullName: ', '
  - name: TValue
    fullName: TValue
  - name: '>'
    fullName: '>'
  - name: ', '
    fullName: ', '
  - uid: System.Nullable`1
    name: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    fullName: <
  - uid: System.Double
    name: Double
    fullName: System.Double
    isExternal: true
  - name: '>'
    fullName: '>'
  - name: '>'
    fullName: '>'
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Linq.Enumerable.Max``1(System.Func{``0,System.Nullable{System.Double}})
    name: Max(Of KeyValuePair(Of TKey, TValue))
    fullName: System.Linq.Enumerable.Max(Of System.Collections.Generic.KeyValuePair(Of TKey, TValue))
  - name: (
    fullName: (
  - uid: System.Func`2
    name: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - uid: System.Collections.Generic.KeyValuePair`2
    name: KeyValuePair
    fullName: System.Collections.Generic.KeyValuePair
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - name: TKey
    fullName: TKey
  - name: ', '
    fullName: ', '
  - name: TValue
    fullName: TValue
  - name: )
    fullName: )
  - name: ', '
    fullName: ', '
  - uid: System.Nullable`1
    name: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - uid: System.Double
    name: Double
    fullName: System.Double
    isExternal: true
  - name: )
    fullName: )
  - name: )
    fullName: )
  - name: )
    fullName: )
  nameWithType: Enumerable.Max<KeyValuePair<TKey, TValue>>(Func<KeyValuePair<TKey, TValue>, Nullable<Double>>)
  nameWithType.vb: Enumerable.Max(Of KeyValuePair(Of TKey, TValue))(Func(Of KeyValuePair(Of TKey, TValue), Nullable(Of Double)))
  commentId: M:System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Double}})
- uid: System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{`0,`1}}.System.Linq.Enumerable.Max``1(System.Func{System.Collections.Generic.KeyValuePair{{TKey},{TValue}},System.Nullable{System.Int32}})
  parent: System.Linq.Enumerable
  definition: System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Int32}})
  name: Max<KeyValuePair<TKey, TValue>>(Func<KeyValuePair<TKey, TValue>, Nullable<Int32>>)
  fullName: System.Linq.Enumerable.Max<System.Collections.Generic.KeyValuePair<TKey, TValue>>(System.Func<System.Collections.Generic.KeyValuePair<TKey, TValue>, System.Nullable<System.Int32>>)
  fullname.vb: System.Linq.Enumerable.Max(Of System.Collections.Generic.KeyValuePair(Of TKey, TValue))(System.Func(Of System.Collections.Generic.KeyValuePair(Of TKey, TValue), System.Nullable(Of System.Int32)))
  name.vb: Max(Of KeyValuePair(Of TKey, TValue))(Func(Of KeyValuePair(Of TKey, TValue), Nullable(Of Int32)))
  spec.csharp:
  - uid: System.Linq.Enumerable.Max``1(System.Func{``0,System.Nullable{System.Int32}})
    name: Max<KeyValuePair<TKey, TValue>>
    fullName: System.Linq.Enumerable.Max<System.Collections.Generic.KeyValuePair<TKey, TValue>>
  - name: (
    fullName: (
  - uid: System.Func`2
    name: Func
    fullName: System.Func
    isExternal: true
  - name: <
    fullName: <
  - uid: System.Collections.Generic.KeyValuePair`2
    name: KeyValuePair
    fullName: System.Collections.Generic.KeyValuePair
    isExternal: true
  - name: <
    fullName: <
  - name: TKey
    fullName: TKey
  - name: ', '
    fullName: ', '
  - name: TValue
    fullName: TValue
  - name: '>'
    fullName: '>'
  - name: ', '
    fullName: ', '
  - uid: System.Nullable`1
    name: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    fullName: <
  - uid: System.Int32
    name: Int32
    fullName: System.Int32
    isExternal: true
  - name: '>'
    fullName: '>'
  - name: '>'
    fullName: '>'
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Linq.Enumerable.Max``1(System.Func{``0,System.Nullable{System.Int32}})
    name: Max(Of KeyValuePair(Of TKey, TValue))
    fullName: System.Linq.Enumerable.Max(Of System.Collections.Generic.KeyValuePair(Of TKey, TValue))
  - name: (
    fullName: (
  - uid: System.Func`2
    name: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - uid: System.Collections.Generic.KeyValuePair`2
    name: KeyValuePair
    fullName: System.Collections.Generic.KeyValuePair
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - name: TKey
    fullName: TKey
  - name: ', '
    fullName: ', '
  - name: TValue
    fullName: TValue
  - name: )
    fullName: )
  - name: ', '
    fullName: ', '
  - uid: System.Nullable`1
    name: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - uid: System.Int32
    name: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    fullName: )
  - name: )
    fullName: )
  - name: )
    fullName: )
  nameWithType: Enumerable.Max<KeyValuePair<TKey, TValue>>(Func<KeyValuePair<TKey, TValue>, Nullable<Int32>>)
  nameWithType.vb: Enumerable.Max(Of KeyValuePair(Of TKey, TValue))(Func(Of KeyValuePair(Of TKey, TValue), Nullable(Of Int32)))
  commentId: M:System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Int32}})
- uid: System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{`0,`1}}.System.Linq.Enumerable.Max``1(System.Func{System.Collections.Generic.KeyValuePair{{TKey},{TValue}},System.Nullable{System.Int64}})
  parent: System.Linq.Enumerable
  definition: System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Int64}})
  name: Max<KeyValuePair<TKey, TValue>>(Func<KeyValuePair<TKey, TValue>, Nullable<Int64>>)
  fullName: System.Linq.Enumerable.Max<System.Collections.Generic.KeyValuePair<TKey, TValue>>(System.Func<System.Collections.Generic.KeyValuePair<TKey, TValue>, System.Nullable<System.Int64>>)
  fullname.vb: System.Linq.Enumerable.Max(Of System.Collections.Generic.KeyValuePair(Of TKey, TValue))(System.Func(Of System.Collections.Generic.KeyValuePair(Of TKey, TValue), System.Nullable(Of System.Int64)))
  name.vb: Max(Of KeyValuePair(Of TKey, TValue))(Func(Of KeyValuePair(Of TKey, TValue), Nullable(Of Int64)))
  spec.csharp:
  - uid: System.Linq.Enumerable.Max``1(System.Func{``0,System.Nullable{System.Int64}})
    name: Max<KeyValuePair<TKey, TValue>>
    fullName: System.Linq.Enumerable.Max<System.Collections.Generic.KeyValuePair<TKey, TValue>>
  - name: (
    fullName: (
  - uid: System.Func`2
    name: Func
    fullName: System.Func
    isExternal: true
  - name: <
    fullName: <
  - uid: System.Collections.Generic.KeyValuePair`2
    name: KeyValuePair
    fullName: System.Collections.Generic.KeyValuePair
    isExternal: true
  - name: <
    fullName: <
  - name: TKey
    fullName: TKey
  - name: ', '
    fullName: ', '
  - name: TValue
    fullName: TValue
  - name: '>'
    fullName: '>'
  - name: ', '
    fullName: ', '
  - uid: System.Nullable`1
    name: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    fullName: <
  - uid: System.Int64
    name: Int64
    fullName: System.Int64
    isExternal: true
  - name: '>'
    fullName: '>'
  - name: '>'
    fullName: '>'
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Linq.Enumerable.Max``1(System.Func{``0,System.Nullable{System.Int64}})
    name: Max(Of KeyValuePair(Of TKey, TValue))
    fullName: System.Linq.Enumerable.Max(Of System.Collections.Generic.KeyValuePair(Of TKey, TValue))
  - name: (
    fullName: (
  - uid: System.Func`2
    name: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - uid: System.Collections.Generic.KeyValuePair`2
    name: KeyValuePair
    fullName: System.Collections.Generic.KeyValuePair
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - name: TKey
    fullName: TKey
  - name: ', '
    fullName: ', '
  - name: TValue
    fullName: TValue
  - name: )
    fullName: )
  - name: ', '
    fullName: ', '
  - uid: System.Nullable`1
    name: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - uid: System.Int64
    name: Int64
    fullName: System.Int64
    isExternal: true
  - name: )
    fullName: )
  - name: )
    fullName: )
  - name: )
    fullName: )
  nameWithType: Enumerable.Max<KeyValuePair<TKey, TValue>>(Func<KeyValuePair<TKey, TValue>, Nullable<Int64>>)
  nameWithType.vb: Enumerable.Max(Of KeyValuePair(Of TKey, TValue))(Func(Of KeyValuePair(Of TKey, TValue), Nullable(Of Int64)))
  commentId: M:System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Int64}})
- uid: System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{`0,`1}}.System.Linq.Enumerable.Max``1(System.Func{System.Collections.Generic.KeyValuePair{{TKey},{TValue}},System.Nullable{System.Single}})
  parent: System.Linq.Enumerable
  definition: System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Single}})
  name: Max<KeyValuePair<TKey, TValue>>(Func<KeyValuePair<TKey, TValue>, Nullable<Single>>)
  fullName: System.Linq.Enumerable.Max<System.Collections.Generic.KeyValuePair<TKey, TValue>>(System.Func<System.Collections.Generic.KeyValuePair<TKey, TValue>, System.Nullable<System.Single>>)
  fullname.vb: System.Linq.Enumerable.Max(Of System.Collections.Generic.KeyValuePair(Of TKey, TValue))(System.Func(Of System.Collections.Generic.KeyValuePair(Of TKey, TValue), System.Nullable(Of System.Single)))
  name.vb: Max(Of KeyValuePair(Of TKey, TValue))(Func(Of KeyValuePair(Of TKey, TValue), Nullable(Of Single)))
  spec.csharp:
  - uid: System.Linq.Enumerable.Max``1(System.Func{``0,System.Nullable{System.Single}})
    name: Max<KeyValuePair<TKey, TValue>>
    fullName: System.Linq.Enumerable.Max<System.Collections.Generic.KeyValuePair<TKey, TValue>>
  - name: (
    fullName: (
  - uid: System.Func`2
    name: Func
    fullName: System.Func
    isExternal: true
  - name: <
    fullName: <
  - uid: System.Collections.Generic.KeyValuePair`2
    name: KeyValuePair
    fullName: System.Collections.Generic.KeyValuePair
    isExternal: true
  - name: <
    fullName: <
  - name: TKey
    fullName: TKey
  - name: ', '
    fullName: ', '
  - name: TValue
    fullName: TValue
  - name: '>'
    fullName: '>'
  - name: ', '
    fullName: ', '
  - uid: System.Nullable`1
    name: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    fullName: <
  - uid: System.Single
    name: Single
    fullName: System.Single
    isExternal: true
  - name: '>'
    fullName: '>'
  - name: '>'
    fullName: '>'
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Linq.Enumerable.Max``1(System.Func{``0,System.Nullable{System.Single}})
    name: Max(Of KeyValuePair(Of TKey, TValue))
    fullName: System.Linq.Enumerable.Max(Of System.Collections.Generic.KeyValuePair(Of TKey, TValue))
  - name: (
    fullName: (
  - uid: System.Func`2
    name: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - uid: System.Collections.Generic.KeyValuePair`2
    name: KeyValuePair
    fullName: System.Collections.Generic.KeyValuePair
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - name: TKey
    fullName: TKey
  - name: ', '
    fullName: ', '
  - name: TValue
    fullName: TValue
  - name: )
    fullName: )
  - name: ', '
    fullName: ', '
  - uid: System.Nullable`1
    name: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - uid: System.Single
    name: Single
    fullName: System.Single
    isExternal: true
  - name: )
    fullName: )
  - name: )
    fullName: )
  - name: )
    fullName: )
  nameWithType: Enumerable.Max<KeyValuePair<TKey, TValue>>(Func<KeyValuePair<TKey, TValue>, Nullable<Single>>)
  nameWithType.vb: Enumerable.Max(Of KeyValuePair(Of TKey, TValue))(Func(Of KeyValuePair(Of TKey, TValue), Nullable(Of Single)))
  commentId: M:System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Single}})
- uid: System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{`0,`1}}.System.Linq.Enumerable.Max``1(System.Func{System.Collections.Generic.KeyValuePair{{TKey},{TValue}},System.Single})
  parent: System.Linq.Enumerable
  definition: System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Single})
  name: Max<KeyValuePair<TKey, TValue>>(Func<KeyValuePair<TKey, TValue>, Single>)
  fullName: System.Linq.Enumerable.Max<System.Collections.Generic.KeyValuePair<TKey, TValue>>(System.Func<System.Collections.Generic.KeyValuePair<TKey, TValue>, System.Single>)
  fullname.vb: System.Linq.Enumerable.Max(Of System.Collections.Generic.KeyValuePair(Of TKey, TValue))(System.Func(Of System.Collections.Generic.KeyValuePair(Of TKey, TValue), System.Single))
  name.vb: Max(Of KeyValuePair(Of TKey, TValue))(Func(Of KeyValuePair(Of TKey, TValue), Single))
  spec.csharp:
  - uid: System.Linq.Enumerable.Max``1(System.Func{``0,System.Single})
    name: Max<KeyValuePair<TKey, TValue>>
    fullName: System.Linq.Enumerable.Max<System.Collections.Generic.KeyValuePair<TKey, TValue>>
  - name: (
    fullName: (
  - uid: System.Func`2
    name: Func
    fullName: System.Func
    isExternal: true
  - name: <
    fullName: <
  - uid: System.Collections.Generic.KeyValuePair`2
    name: KeyValuePair
    fullName: System.Collections.Generic.KeyValuePair
    isExternal: true
  - name: <
    fullName: <
  - name: TKey
    fullName: TKey
  - name: ', '
    fullName: ', '
  - name: TValue
    fullName: TValue
  - name: '>'
    fullName: '>'
  - name: ', '
    fullName: ', '
  - uid: System.Single
    name: Single
    fullName: System.Single
    isExternal: true
  - name: '>'
    fullName: '>'
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Linq.Enumerable.Max``1(System.Func{``0,System.Single})
    name: Max(Of KeyValuePair(Of TKey, TValue))
    fullName: System.Linq.Enumerable.Max(Of System.Collections.Generic.KeyValuePair(Of TKey, TValue))
  - name: (
    fullName: (
  - uid: System.Func`2
    name: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - uid: System.Collections.Generic.KeyValuePair`2
    name: KeyValuePair
    fullName: System.Collections.Generic.KeyValuePair
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - name: TKey
    fullName: TKey
  - name: ', '
    fullName: ', '
  - name: TValue
    fullName: TValue
  - name: )
    fullName: )
  - name: ', '
    fullName: ', '
  - uid: System.Single
    name: Single
    fullName: System.Single
    isExternal: true
  - name: )
    fullName: )
  - name: )
    fullName: )
  nameWithType: Enumerable.Max<KeyValuePair<TKey, TValue>>(Func<KeyValuePair<TKey, TValue>, Single>)
  nameWithType.vb: Enumerable.Max(Of KeyValuePair(Of TKey, TValue))(Func(Of KeyValuePair(Of TKey, TValue), Single))
  commentId: M:System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Single})
- uid: System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{`0,`1}}.System.Linq.Enumerable.Max``2(System.Func{System.Collections.Generic.KeyValuePair{{TKey},{TValue}},{TResult}})
  parent: System.Linq.Enumerable
  definition: System.Linq.Enumerable.Max``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})
  name: Max<KeyValuePair<TKey, TValue>, TResult>(Func<KeyValuePair<TKey, TValue>, TResult>)
  fullName: System.Linq.Enumerable.Max<System.Collections.Generic.KeyValuePair<TKey, TValue>, TResult>(System.Func<System.Collections.Generic.KeyValuePair<TKey, TValue>, TResult>)
  fullname.vb: System.Linq.Enumerable.Max(Of System.Collections.Generic.KeyValuePair(Of TKey, TValue), TResult)(System.Func(Of System.Collections.Generic.KeyValuePair(Of TKey, TValue), TResult))
  name.vb: Max(Of KeyValuePair(Of TKey, TValue), TResult)(Func(Of KeyValuePair(Of TKey, TValue), TResult))
  spec.csharp:
  - uid: System.Linq.Enumerable.Max``2(System.Func{``0,``1})
    name: Max<KeyValuePair<TKey, TValue>, TResult>
    fullName: System.Linq.Enumerable.Max<System.Collections.Generic.KeyValuePair<TKey, TValue>, TResult>
  - name: (
    fullName: (
  - uid: System.Func`2
    name: Func
    fullName: System.Func
    isExternal: true
  - name: <
    fullName: <
  - uid: System.Collections.Generic.KeyValuePair`2
    name: KeyValuePair
    fullName: System.Collections.Generic.KeyValuePair
    isExternal: true
  - name: <
    fullName: <
  - name: TKey
    fullName: TKey
  - name: ', '
    fullName: ', '
  - name: TValue
    fullName: TValue
  - name: '>'
    fullName: '>'
  - name: ', '
    fullName: ', '
  - name: TResult
    fullName: TResult
  - name: '>'
    fullName: '>'
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Linq.Enumerable.Max``2(System.Func{``0,``1})
    name: Max(Of KeyValuePair(Of TKey, TValue), TResult)
    fullName: System.Linq.Enumerable.Max(Of System.Collections.Generic.KeyValuePair(Of TKey, TValue), TResult)
  - name: (
    fullName: (
  - uid: System.Func`2
    name: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - uid: System.Collections.Generic.KeyValuePair`2
    name: KeyValuePair
    fullName: System.Collections.Generic.KeyValuePair
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - name: TKey
    fullName: TKey
  - name: ', '
    fullName: ', '
  - name: TValue
    fullName: TValue
  - name: )
    fullName: )
  - name: ', '
    fullName: ', '
  - name: TResult
    fullName: TResult
  - name: )
    fullName: )
  - name: )
    fullName: )
  nameWithType: Enumerable.Max<KeyValuePair<TKey, TValue>, TResult>(Func<KeyValuePair<TKey, TValue>, TResult>)
  nameWithType.vb: Enumerable.Max(Of KeyValuePair(Of TKey, TValue), TResult)(Func(Of KeyValuePair(Of TKey, TValue), TResult))
  commentId: M:System.Linq.Enumerable.Max``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})
- uid: System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{`0,`1}}.System.Linq.Enumerable.Min``1
  parent: System.Linq.Enumerable
  definition: System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0})
  name: Min<KeyValuePair<TKey, TValue>>()
  fullName: System.Linq.Enumerable.Min<System.Collections.Generic.KeyValuePair<TKey, TValue>>()
  fullname.vb: System.Linq.Enumerable.Min(Of System.Collections.Generic.KeyValuePair(Of TKey, TValue))()
  name.vb: Min(Of KeyValuePair(Of TKey, TValue))()
  spec.csharp:
  - uid: System.Linq.Enumerable.Min``1
    name: Min<KeyValuePair<TKey, TValue>>
    fullName: System.Linq.Enumerable.Min<System.Collections.Generic.KeyValuePair<TKey, TValue>>
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Linq.Enumerable.Min``1
    name: Min(Of KeyValuePair(Of TKey, TValue))
    fullName: System.Linq.Enumerable.Min(Of System.Collections.Generic.KeyValuePair(Of TKey, TValue))
  - name: (
    fullName: (
  - name: )
    fullName: )
  nameWithType: Enumerable.Min<KeyValuePair<TKey, TValue>>()
  nameWithType.vb: Enumerable.Min(Of KeyValuePair(Of TKey, TValue))()
  commentId: M:System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0})
- uid: System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{`0,`1}}.System.Linq.Enumerable.Min``1(System.Func{System.Collections.Generic.KeyValuePair{{TKey},{TValue}},System.Decimal})
  parent: System.Linq.Enumerable
  definition: System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Decimal})
  name: Min<KeyValuePair<TKey, TValue>>(Func<KeyValuePair<TKey, TValue>, Decimal>)
  fullName: System.Linq.Enumerable.Min<System.Collections.Generic.KeyValuePair<TKey, TValue>>(System.Func<System.Collections.Generic.KeyValuePair<TKey, TValue>, System.Decimal>)
  fullname.vb: System.Linq.Enumerable.Min(Of System.Collections.Generic.KeyValuePair(Of TKey, TValue))(System.Func(Of System.Collections.Generic.KeyValuePair(Of TKey, TValue), System.Decimal))
  name.vb: Min(Of KeyValuePair(Of TKey, TValue))(Func(Of KeyValuePair(Of TKey, TValue), Decimal))
  spec.csharp:
  - uid: System.Linq.Enumerable.Min``1(System.Func{``0,System.Decimal})
    name: Min<KeyValuePair<TKey, TValue>>
    fullName: System.Linq.Enumerable.Min<System.Collections.Generic.KeyValuePair<TKey, TValue>>
  - name: (
    fullName: (
  - uid: System.Func`2
    name: Func
    fullName: System.Func
    isExternal: true
  - name: <
    fullName: <
  - uid: System.Collections.Generic.KeyValuePair`2
    name: KeyValuePair
    fullName: System.Collections.Generic.KeyValuePair
    isExternal: true
  - name: <
    fullName: <
  - name: TKey
    fullName: TKey
  - name: ', '
    fullName: ', '
  - name: TValue
    fullName: TValue
  - name: '>'
    fullName: '>'
  - name: ', '
    fullName: ', '
  - uid: System.Decimal
    name: Decimal
    fullName: System.Decimal
    isExternal: true
  - name: '>'
    fullName: '>'
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Linq.Enumerable.Min``1(System.Func{``0,System.Decimal})
    name: Min(Of KeyValuePair(Of TKey, TValue))
    fullName: System.Linq.Enumerable.Min(Of System.Collections.Generic.KeyValuePair(Of TKey, TValue))
  - name: (
    fullName: (
  - uid: System.Func`2
    name: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - uid: System.Collections.Generic.KeyValuePair`2
    name: KeyValuePair
    fullName: System.Collections.Generic.KeyValuePair
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - name: TKey
    fullName: TKey
  - name: ', '
    fullName: ', '
  - name: TValue
    fullName: TValue
  - name: )
    fullName: )
  - name: ', '
    fullName: ', '
  - uid: System.Decimal
    name: Decimal
    fullName: System.Decimal
    isExternal: true
  - name: )
    fullName: )
  - name: )
    fullName: )
  nameWithType: Enumerable.Min<KeyValuePair<TKey, TValue>>(Func<KeyValuePair<TKey, TValue>, Decimal>)
  nameWithType.vb: Enumerable.Min(Of KeyValuePair(Of TKey, TValue))(Func(Of KeyValuePair(Of TKey, TValue), Decimal))
  commentId: M:System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Decimal})
- uid: System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{`0,`1}}.System.Linq.Enumerable.Min``1(System.Func{System.Collections.Generic.KeyValuePair{{TKey},{TValue}},System.Double})
  parent: System.Linq.Enumerable
  definition: System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Double})
  name: Min<KeyValuePair<TKey, TValue>>(Func<KeyValuePair<TKey, TValue>, Double>)
  fullName: System.Linq.Enumerable.Min<System.Collections.Generic.KeyValuePair<TKey, TValue>>(System.Func<System.Collections.Generic.KeyValuePair<TKey, TValue>, System.Double>)
  fullname.vb: System.Linq.Enumerable.Min(Of System.Collections.Generic.KeyValuePair(Of TKey, TValue))(System.Func(Of System.Collections.Generic.KeyValuePair(Of TKey, TValue), System.Double))
  name.vb: Min(Of KeyValuePair(Of TKey, TValue))(Func(Of KeyValuePair(Of TKey, TValue), Double))
  spec.csharp:
  - uid: System.Linq.Enumerable.Min``1(System.Func{``0,System.Double})
    name: Min<KeyValuePair<TKey, TValue>>
    fullName: System.Linq.Enumerable.Min<System.Collections.Generic.KeyValuePair<TKey, TValue>>
  - name: (
    fullName: (
  - uid: System.Func`2
    name: Func
    fullName: System.Func
    isExternal: true
  - name: <
    fullName: <
  - uid: System.Collections.Generic.KeyValuePair`2
    name: KeyValuePair
    fullName: System.Collections.Generic.KeyValuePair
    isExternal: true
  - name: <
    fullName: <
  - name: TKey
    fullName: TKey
  - name: ', '
    fullName: ', '
  - name: TValue
    fullName: TValue
  - name: '>'
    fullName: '>'
  - name: ', '
    fullName: ', '
  - uid: System.Double
    name: Double
    fullName: System.Double
    isExternal: true
  - name: '>'
    fullName: '>'
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Linq.Enumerable.Min``1(System.Func{``0,System.Double})
    name: Min(Of KeyValuePair(Of TKey, TValue))
    fullName: System.Linq.Enumerable.Min(Of System.Collections.Generic.KeyValuePair(Of TKey, TValue))
  - name: (
    fullName: (
  - uid: System.Func`2
    name: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - uid: System.Collections.Generic.KeyValuePair`2
    name: KeyValuePair
    fullName: System.Collections.Generic.KeyValuePair
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - name: TKey
    fullName: TKey
  - name: ', '
    fullName: ', '
  - name: TValue
    fullName: TValue
  - name: )
    fullName: )
  - name: ', '
    fullName: ', '
  - uid: System.Double
    name: Double
    fullName: System.Double
    isExternal: true
  - name: )
    fullName: )
  - name: )
    fullName: )
  nameWithType: Enumerable.Min<KeyValuePair<TKey, TValue>>(Func<KeyValuePair<TKey, TValue>, Double>)
  nameWithType.vb: Enumerable.Min(Of KeyValuePair(Of TKey, TValue))(Func(Of KeyValuePair(Of TKey, TValue), Double))
  commentId: M:System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Double})
- uid: System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{`0,`1}}.System.Linq.Enumerable.Min``1(System.Func{System.Collections.Generic.KeyValuePair{{TKey},{TValue}},System.Int32})
  parent: System.Linq.Enumerable
  definition: System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32})
  name: Min<KeyValuePair<TKey, TValue>>(Func<KeyValuePair<TKey, TValue>, Int32>)
  fullName: System.Linq.Enumerable.Min<System.Collections.Generic.KeyValuePair<TKey, TValue>>(System.Func<System.Collections.Generic.KeyValuePair<TKey, TValue>, System.Int32>)
  fullname.vb: System.Linq.Enumerable.Min(Of System.Collections.Generic.KeyValuePair(Of TKey, TValue))(System.Func(Of System.Collections.Generic.KeyValuePair(Of TKey, TValue), System.Int32))
  name.vb: Min(Of KeyValuePair(Of TKey, TValue))(Func(Of KeyValuePair(Of TKey, TValue), Int32))
  spec.csharp:
  - uid: System.Linq.Enumerable.Min``1(System.Func{``0,System.Int32})
    name: Min<KeyValuePair<TKey, TValue>>
    fullName: System.Linq.Enumerable.Min<System.Collections.Generic.KeyValuePair<TKey, TValue>>
  - name: (
    fullName: (
  - uid: System.Func`2
    name: Func
    fullName: System.Func
    isExternal: true
  - name: <
    fullName: <
  - uid: System.Collections.Generic.KeyValuePair`2
    name: KeyValuePair
    fullName: System.Collections.Generic.KeyValuePair
    isExternal: true
  - name: <
    fullName: <
  - name: TKey
    fullName: TKey
  - name: ', '
    fullName: ', '
  - name: TValue
    fullName: TValue
  - name: '>'
    fullName: '>'
  - name: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    fullName: System.Int32
    isExternal: true
  - name: '>'
    fullName: '>'
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Linq.Enumerable.Min``1(System.Func{``0,System.Int32})
    name: Min(Of KeyValuePair(Of TKey, TValue))
    fullName: System.Linq.Enumerable.Min(Of System.Collections.Generic.KeyValuePair(Of TKey, TValue))
  - name: (
    fullName: (
  - uid: System.Func`2
    name: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - uid: System.Collections.Generic.KeyValuePair`2
    name: KeyValuePair
    fullName: System.Collections.Generic.KeyValuePair
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - name: TKey
    fullName: TKey
  - name: ', '
    fullName: ', '
  - name: TValue
    fullName: TValue
  - name: )
    fullName: )
  - name: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    fullName: )
  - name: )
    fullName: )
  nameWithType: Enumerable.Min<KeyValuePair<TKey, TValue>>(Func<KeyValuePair<TKey, TValue>, Int32>)
  nameWithType.vb: Enumerable.Min(Of KeyValuePair(Of TKey, TValue))(Func(Of KeyValuePair(Of TKey, TValue), Int32))
  commentId: M:System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32})
- uid: System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{`0,`1}}.System.Linq.Enumerable.Min``1(System.Func{System.Collections.Generic.KeyValuePair{{TKey},{TValue}},System.Int64})
  parent: System.Linq.Enumerable
  definition: System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int64})
  name: Min<KeyValuePair<TKey, TValue>>(Func<KeyValuePair<TKey, TValue>, Int64>)
  fullName: System.Linq.Enumerable.Min<System.Collections.Generic.KeyValuePair<TKey, TValue>>(System.Func<System.Collections.Generic.KeyValuePair<TKey, TValue>, System.Int64>)
  fullname.vb: System.Linq.Enumerable.Min(Of System.Collections.Generic.KeyValuePair(Of TKey, TValue))(System.Func(Of System.Collections.Generic.KeyValuePair(Of TKey, TValue), System.Int64))
  name.vb: Min(Of KeyValuePair(Of TKey, TValue))(Func(Of KeyValuePair(Of TKey, TValue), Int64))
  spec.csharp:
  - uid: System.Linq.Enumerable.Min``1(System.Func{``0,System.Int64})
    name: Min<KeyValuePair<TKey, TValue>>
    fullName: System.Linq.Enumerable.Min<System.Collections.Generic.KeyValuePair<TKey, TValue>>
  - name: (
    fullName: (
  - uid: System.Func`2
    name: Func
    fullName: System.Func
    isExternal: true
  - name: <
    fullName: <
  - uid: System.Collections.Generic.KeyValuePair`2
    name: KeyValuePair
    fullName: System.Collections.Generic.KeyValuePair
    isExternal: true
  - name: <
    fullName: <
  - name: TKey
    fullName: TKey
  - name: ', '
    fullName: ', '
  - name: TValue
    fullName: TValue
  - name: '>'
    fullName: '>'
  - name: ', '
    fullName: ', '
  - uid: System.Int64
    name: Int64
    fullName: System.Int64
    isExternal: true
  - name: '>'
    fullName: '>'
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Linq.Enumerable.Min``1(System.Func{``0,System.Int64})
    name: Min(Of KeyValuePair(Of TKey, TValue))
    fullName: System.Linq.Enumerable.Min(Of System.Collections.Generic.KeyValuePair(Of TKey, TValue))
  - name: (
    fullName: (
  - uid: System.Func`2
    name: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - uid: System.Collections.Generic.KeyValuePair`2
    name: KeyValuePair
    fullName: System.Collections.Generic.KeyValuePair
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - name: TKey
    fullName: TKey
  - name: ', '
    fullName: ', '
  - name: TValue
    fullName: TValue
  - name: )
    fullName: )
  - name: ', '
    fullName: ', '
  - uid: System.Int64
    name: Int64
    fullName: System.Int64
    isExternal: true
  - name: )
    fullName: )
  - name: )
    fullName: )
  nameWithType: Enumerable.Min<KeyValuePair<TKey, TValue>>(Func<KeyValuePair<TKey, TValue>, Int64>)
  nameWithType.vb: Enumerable.Min(Of KeyValuePair(Of TKey, TValue))(Func(Of KeyValuePair(Of TKey, TValue), Int64))
  commentId: M:System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int64})
- uid: System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{`0,`1}}.System.Linq.Enumerable.Min``1(System.Func{System.Collections.Generic.KeyValuePair{{TKey},{TValue}},System.Nullable{System.Decimal}})
  parent: System.Linq.Enumerable
  definition: System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Decimal}})
  name: Min<KeyValuePair<TKey, TValue>>(Func<KeyValuePair<TKey, TValue>, Nullable<Decimal>>)
  fullName: System.Linq.Enumerable.Min<System.Collections.Generic.KeyValuePair<TKey, TValue>>(System.Func<System.Collections.Generic.KeyValuePair<TKey, TValue>, System.Nullable<System.Decimal>>)
  fullname.vb: System.Linq.Enumerable.Min(Of System.Collections.Generic.KeyValuePair(Of TKey, TValue))(System.Func(Of System.Collections.Generic.KeyValuePair(Of TKey, TValue), System.Nullable(Of System.Decimal)))
  name.vb: Min(Of KeyValuePair(Of TKey, TValue))(Func(Of KeyValuePair(Of TKey, TValue), Nullable(Of Decimal)))
  spec.csharp:
  - uid: System.Linq.Enumerable.Min``1(System.Func{``0,System.Nullable{System.Decimal}})
    name: Min<KeyValuePair<TKey, TValue>>
    fullName: System.Linq.Enumerable.Min<System.Collections.Generic.KeyValuePair<TKey, TValue>>
  - name: (
    fullName: (
  - uid: System.Func`2
    name: Func
    fullName: System.Func
    isExternal: true
  - name: <
    fullName: <
  - uid: System.Collections.Generic.KeyValuePair`2
    name: KeyValuePair
    fullName: System.Collections.Generic.KeyValuePair
    isExternal: true
  - name: <
    fullName: <
  - name: TKey
    fullName: TKey
  - name: ', '
    fullName: ', '
  - name: TValue
    fullName: TValue
  - name: '>'
    fullName: '>'
  - name: ', '
    fullName: ', '
  - uid: System.Nullable`1
    name: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    fullName: <
  - uid: System.Decimal
    name: Decimal
    fullName: System.Decimal
    isExternal: true
  - name: '>'
    fullName: '>'
  - name: '>'
    fullName: '>'
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Linq.Enumerable.Min``1(System.Func{``0,System.Nullable{System.Decimal}})
    name: Min(Of KeyValuePair(Of TKey, TValue))
    fullName: System.Linq.Enumerable.Min(Of System.Collections.Generic.KeyValuePair(Of TKey, TValue))
  - name: (
    fullName: (
  - uid: System.Func`2
    name: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - uid: System.Collections.Generic.KeyValuePair`2
    name: KeyValuePair
    fullName: System.Collections.Generic.KeyValuePair
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - name: TKey
    fullName: TKey
  - name: ', '
    fullName: ', '
  - name: TValue
    fullName: TValue
  - name: )
    fullName: )
  - name: ', '
    fullName: ', '
  - uid: System.Nullable`1
    name: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - uid: System.Decimal
    name: Decimal
    fullName: System.Decimal
    isExternal: true
  - name: )
    fullName: )
  - name: )
    fullName: )
  - name: )
    fullName: )
  nameWithType: Enumerable.Min<KeyValuePair<TKey, TValue>>(Func<KeyValuePair<TKey, TValue>, Nullable<Decimal>>)
  nameWithType.vb: Enumerable.Min(Of KeyValuePair(Of TKey, TValue))(Func(Of KeyValuePair(Of TKey, TValue), Nullable(Of Decimal)))
  commentId: M:System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Decimal}})
- uid: System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{`0,`1}}.System.Linq.Enumerable.Min``1(System.Func{System.Collections.Generic.KeyValuePair{{TKey},{TValue}},System.Nullable{System.Double}})
  parent: System.Linq.Enumerable
  definition: System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Double}})
  name: Min<KeyValuePair<TKey, TValue>>(Func<KeyValuePair<TKey, TValue>, Nullable<Double>>)
  fullName: System.Linq.Enumerable.Min<System.Collections.Generic.KeyValuePair<TKey, TValue>>(System.Func<System.Collections.Generic.KeyValuePair<TKey, TValue>, System.Nullable<System.Double>>)
  fullname.vb: System.Linq.Enumerable.Min(Of System.Collections.Generic.KeyValuePair(Of TKey, TValue))(System.Func(Of System.Collections.Generic.KeyValuePair(Of TKey, TValue), System.Nullable(Of System.Double)))
  name.vb: Min(Of KeyValuePair(Of TKey, TValue))(Func(Of KeyValuePair(Of TKey, TValue), Nullable(Of Double)))
  spec.csharp:
  - uid: System.Linq.Enumerable.Min``1(System.Func{``0,System.Nullable{System.Double}})
    name: Min<KeyValuePair<TKey, TValue>>
    fullName: System.Linq.Enumerable.Min<System.Collections.Generic.KeyValuePair<TKey, TValue>>
  - name: (
    fullName: (
  - uid: System.Func`2
    name: Func
    fullName: System.Func
    isExternal: true
  - name: <
    fullName: <
  - uid: System.Collections.Generic.KeyValuePair`2
    name: KeyValuePair
    fullName: System.Collections.Generic.KeyValuePair
    isExternal: true
  - name: <
    fullName: <
  - name: TKey
    fullName: TKey
  - name: ', '
    fullName: ', '
  - name: TValue
    fullName: TValue
  - name: '>'
    fullName: '>'
  - name: ', '
    fullName: ', '
  - uid: System.Nullable`1
    name: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    fullName: <
  - uid: System.Double
    name: Double
    fullName: System.Double
    isExternal: true
  - name: '>'
    fullName: '>'
  - name: '>'
    fullName: '>'
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Linq.Enumerable.Min``1(System.Func{``0,System.Nullable{System.Double}})
    name: Min(Of KeyValuePair(Of TKey, TValue))
    fullName: System.Linq.Enumerable.Min(Of System.Collections.Generic.KeyValuePair(Of TKey, TValue))
  - name: (
    fullName: (
  - uid: System.Func`2
    name: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - uid: System.Collections.Generic.KeyValuePair`2
    name: KeyValuePair
    fullName: System.Collections.Generic.KeyValuePair
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - name: TKey
    fullName: TKey
  - name: ', '
    fullName: ', '
  - name: TValue
    fullName: TValue
  - name: )
    fullName: )
  - name: ', '
    fullName: ', '
  - uid: System.Nullable`1
    name: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - uid: System.Double
    name: Double
    fullName: System.Double
    isExternal: true
  - name: )
    fullName: )
  - name: )
    fullName: )
  - name: )
    fullName: )
  nameWithType: Enumerable.Min<KeyValuePair<TKey, TValue>>(Func<KeyValuePair<TKey, TValue>, Nullable<Double>>)
  nameWithType.vb: Enumerable.Min(Of KeyValuePair(Of TKey, TValue))(Func(Of KeyValuePair(Of TKey, TValue), Nullable(Of Double)))
  commentId: M:System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Double}})
- uid: System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{`0,`1}}.System.Linq.Enumerable.Min``1(System.Func{System.Collections.Generic.KeyValuePair{{TKey},{TValue}},System.Nullable{System.Int32}})
  parent: System.Linq.Enumerable
  definition: System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Int32}})
  name: Min<KeyValuePair<TKey, TValue>>(Func<KeyValuePair<TKey, TValue>, Nullable<Int32>>)
  fullName: System.Linq.Enumerable.Min<System.Collections.Generic.KeyValuePair<TKey, TValue>>(System.Func<System.Collections.Generic.KeyValuePair<TKey, TValue>, System.Nullable<System.Int32>>)
  fullname.vb: System.Linq.Enumerable.Min(Of System.Collections.Generic.KeyValuePair(Of TKey, TValue))(System.Func(Of System.Collections.Generic.KeyValuePair(Of TKey, TValue), System.Nullable(Of System.Int32)))
  name.vb: Min(Of KeyValuePair(Of TKey, TValue))(Func(Of KeyValuePair(Of TKey, TValue), Nullable(Of Int32)))
  spec.csharp:
  - uid: System.Linq.Enumerable.Min``1(System.Func{``0,System.Nullable{System.Int32}})
    name: Min<KeyValuePair<TKey, TValue>>
    fullName: System.Linq.Enumerable.Min<System.Collections.Generic.KeyValuePair<TKey, TValue>>
  - name: (
    fullName: (
  - uid: System.Func`2
    name: Func
    fullName: System.Func
    isExternal: true
  - name: <
    fullName: <
  - uid: System.Collections.Generic.KeyValuePair`2
    name: KeyValuePair
    fullName: System.Collections.Generic.KeyValuePair
    isExternal: true
  - name: <
    fullName: <
  - name: TKey
    fullName: TKey
  - name: ', '
    fullName: ', '
  - name: TValue
    fullName: TValue
  - name: '>'
    fullName: '>'
  - name: ', '
    fullName: ', '
  - uid: System.Nullable`1
    name: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    fullName: <
  - uid: System.Int32
    name: Int32
    fullName: System.Int32
    isExternal: true
  - name: '>'
    fullName: '>'
  - name: '>'
    fullName: '>'
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Linq.Enumerable.Min``1(System.Func{``0,System.Nullable{System.Int32}})
    name: Min(Of KeyValuePair(Of TKey, TValue))
    fullName: System.Linq.Enumerable.Min(Of System.Collections.Generic.KeyValuePair(Of TKey, TValue))
  - name: (
    fullName: (
  - uid: System.Func`2
    name: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - uid: System.Collections.Generic.KeyValuePair`2
    name: KeyValuePair
    fullName: System.Collections.Generic.KeyValuePair
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - name: TKey
    fullName: TKey
  - name: ', '
    fullName: ', '
  - name: TValue
    fullName: TValue
  - name: )
    fullName: )
  - name: ', '
    fullName: ', '
  - uid: System.Nullable`1
    name: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - uid: System.Int32
    name: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    fullName: )
  - name: )
    fullName: )
  - name: )
    fullName: )
  nameWithType: Enumerable.Min<KeyValuePair<TKey, TValue>>(Func<KeyValuePair<TKey, TValue>, Nullable<Int32>>)
  nameWithType.vb: Enumerable.Min(Of KeyValuePair(Of TKey, TValue))(Func(Of KeyValuePair(Of TKey, TValue), Nullable(Of Int32)))
  commentId: M:System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Int32}})
- uid: System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{`0,`1}}.System.Linq.Enumerable.Min``1(System.Func{System.Collections.Generic.KeyValuePair{{TKey},{TValue}},System.Nullable{System.Int64}})
  parent: System.Linq.Enumerable
  definition: System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Int64}})
  name: Min<KeyValuePair<TKey, TValue>>(Func<KeyValuePair<TKey, TValue>, Nullable<Int64>>)
  fullName: System.Linq.Enumerable.Min<System.Collections.Generic.KeyValuePair<TKey, TValue>>(System.Func<System.Collections.Generic.KeyValuePair<TKey, TValue>, System.Nullable<System.Int64>>)
  fullname.vb: System.Linq.Enumerable.Min(Of System.Collections.Generic.KeyValuePair(Of TKey, TValue))(System.Func(Of System.Collections.Generic.KeyValuePair(Of TKey, TValue), System.Nullable(Of System.Int64)))
  name.vb: Min(Of KeyValuePair(Of TKey, TValue))(Func(Of KeyValuePair(Of TKey, TValue), Nullable(Of Int64)))
  spec.csharp:
  - uid: System.Linq.Enumerable.Min``1(System.Func{``0,System.Nullable{System.Int64}})
    name: Min<KeyValuePair<TKey, TValue>>
    fullName: System.Linq.Enumerable.Min<System.Collections.Generic.KeyValuePair<TKey, TValue>>
  - name: (
    fullName: (
  - uid: System.Func`2
    name: Func
    fullName: System.Func
    isExternal: true
  - name: <
    fullName: <
  - uid: System.Collections.Generic.KeyValuePair`2
    name: KeyValuePair
    fullName: System.Collections.Generic.KeyValuePair
    isExternal: true
  - name: <
    fullName: <
  - name: TKey
    fullName: TKey
  - name: ', '
    fullName: ', '
  - name: TValue
    fullName: TValue
  - name: '>'
    fullName: '>'
  - name: ', '
    fullName: ', '
  - uid: System.Nullable`1
    name: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    fullName: <
  - uid: System.Int64
    name: Int64
    fullName: System.Int64
    isExternal: true
  - name: '>'
    fullName: '>'
  - name: '>'
    fullName: '>'
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Linq.Enumerable.Min``1(System.Func{``0,System.Nullable{System.Int64}})
    name: Min(Of KeyValuePair(Of TKey, TValue))
    fullName: System.Linq.Enumerable.Min(Of System.Collections.Generic.KeyValuePair(Of TKey, TValue))
  - name: (
    fullName: (
  - uid: System.Func`2
    name: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - uid: System.Collections.Generic.KeyValuePair`2
    name: KeyValuePair
    fullName: System.Collections.Generic.KeyValuePair
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - name: TKey
    fullName: TKey
  - name: ', '
    fullName: ', '
  - name: TValue
    fullName: TValue
  - name: )
    fullName: )
  - name: ', '
    fullName: ', '
  - uid: System.Nullable`1
    name: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - uid: System.Int64
    name: Int64
    fullName: System.Int64
    isExternal: true
  - name: )
    fullName: )
  - name: )
    fullName: )
  - name: )
    fullName: )
  nameWithType: Enumerable.Min<KeyValuePair<TKey, TValue>>(Func<KeyValuePair<TKey, TValue>, Nullable<Int64>>)
  nameWithType.vb: Enumerable.Min(Of KeyValuePair(Of TKey, TValue))(Func(Of KeyValuePair(Of TKey, TValue), Nullable(Of Int64)))
  commentId: M:System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Int64}})
- uid: System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{`0,`1}}.System.Linq.Enumerable.Min``1(System.Func{System.Collections.Generic.KeyValuePair{{TKey},{TValue}},System.Nullable{System.Single}})
  parent: System.Linq.Enumerable
  definition: System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Single}})
  name: Min<KeyValuePair<TKey, TValue>>(Func<KeyValuePair<TKey, TValue>, Nullable<Single>>)
  fullName: System.Linq.Enumerable.Min<System.Collections.Generic.KeyValuePair<TKey, TValue>>(System.Func<System.Collections.Generic.KeyValuePair<TKey, TValue>, System.Nullable<System.Single>>)
  fullname.vb: System.Linq.Enumerable.Min(Of System.Collections.Generic.KeyValuePair(Of TKey, TValue))(System.Func(Of System.Collections.Generic.KeyValuePair(Of TKey, TValue), System.Nullable(Of System.Single)))
  name.vb: Min(Of KeyValuePair(Of TKey, TValue))(Func(Of KeyValuePair(Of TKey, TValue), Nullable(Of Single)))
  spec.csharp:
  - uid: System.Linq.Enumerable.Min``1(System.Func{``0,System.Nullable{System.Single}})
    name: Min<KeyValuePair<TKey, TValue>>
    fullName: System.Linq.Enumerable.Min<System.Collections.Generic.KeyValuePair<TKey, TValue>>
  - name: (
    fullName: (
  - uid: System.Func`2
    name: Func
    fullName: System.Func
    isExternal: true
  - name: <
    fullName: <
  - uid: System.Collections.Generic.KeyValuePair`2
    name: KeyValuePair
    fullName: System.Collections.Generic.KeyValuePair
    isExternal: true
  - name: <
    fullName: <
  - name: TKey
    fullName: TKey
  - name: ', '
    fullName: ', '
  - name: TValue
    fullName: TValue
  - name: '>'
    fullName: '>'
  - name: ', '
    fullName: ', '
  - uid: System.Nullable`1
    name: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    fullName: <
  - uid: System.Single
    name: Single
    fullName: System.Single
    isExternal: true
  - name: '>'
    fullName: '>'
  - name: '>'
    fullName: '>'
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Linq.Enumerable.Min``1(System.Func{``0,System.Nullable{System.Single}})
    name: Min(Of KeyValuePair(Of TKey, TValue))
    fullName: System.Linq.Enumerable.Min(Of System.Collections.Generic.KeyValuePair(Of TKey, TValue))
  - name: (
    fullName: (
  - uid: System.Func`2
    name: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - uid: System.Collections.Generic.KeyValuePair`2
    name: KeyValuePair
    fullName: System.Collections.Generic.KeyValuePair
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - name: TKey
    fullName: TKey
  - name: ', '
    fullName: ', '
  - name: TValue
    fullName: TValue
  - name: )
    fullName: )
  - name: ', '
    fullName: ', '
  - uid: System.Nullable`1
    name: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - uid: System.Single
    name: Single
    fullName: System.Single
    isExternal: true
  - name: )
    fullName: )
  - name: )
    fullName: )
  - name: )
    fullName: )
  nameWithType: Enumerable.Min<KeyValuePair<TKey, TValue>>(Func<KeyValuePair<TKey, TValue>, Nullable<Single>>)
  nameWithType.vb: Enumerable.Min(Of KeyValuePair(Of TKey, TValue))(Func(Of KeyValuePair(Of TKey, TValue), Nullable(Of Single)))
  commentId: M:System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Single}})
- uid: System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{`0,`1}}.System.Linq.Enumerable.Min``1(System.Func{System.Collections.Generic.KeyValuePair{{TKey},{TValue}},System.Single})
  parent: System.Linq.Enumerable
  definition: System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Single})
  name: Min<KeyValuePair<TKey, TValue>>(Func<KeyValuePair<TKey, TValue>, Single>)
  fullName: System.Linq.Enumerable.Min<System.Collections.Generic.KeyValuePair<TKey, TValue>>(System.Func<System.Collections.Generic.KeyValuePair<TKey, TValue>, System.Single>)
  fullname.vb: System.Linq.Enumerable.Min(Of System.Collections.Generic.KeyValuePair(Of TKey, TValue))(System.Func(Of System.Collections.Generic.KeyValuePair(Of TKey, TValue), System.Single))
  name.vb: Min(Of KeyValuePair(Of TKey, TValue))(Func(Of KeyValuePair(Of TKey, TValue), Single))
  spec.csharp:
  - uid: System.Linq.Enumerable.Min``1(System.Func{``0,System.Single})
    name: Min<KeyValuePair<TKey, TValue>>
    fullName: System.Linq.Enumerable.Min<System.Collections.Generic.KeyValuePair<TKey, TValue>>
  - name: (
    fullName: (
  - uid: System.Func`2
    name: Func
    fullName: System.Func
    isExternal: true
  - name: <
    fullName: <
  - uid: System.Collections.Generic.KeyValuePair`2
    name: KeyValuePair
    fullName: System.Collections.Generic.KeyValuePair
    isExternal: true
  - name: <
    fullName: <
  - name: TKey
    fullName: TKey
  - name: ', '
    fullName: ', '
  - name: TValue
    fullName: TValue
  - name: '>'
    fullName: '>'
  - name: ', '
    fullName: ', '
  - uid: System.Single
    name: Single
    fullName: System.Single
    isExternal: true
  - name: '>'
    fullName: '>'
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Linq.Enumerable.Min``1(System.Func{``0,System.Single})
    name: Min(Of KeyValuePair(Of TKey, TValue))
    fullName: System.Linq.Enumerable.Min(Of System.Collections.Generic.KeyValuePair(Of TKey, TValue))
  - name: (
    fullName: (
  - uid: System.Func`2
    name: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - uid: System.Collections.Generic.KeyValuePair`2
    name: KeyValuePair
    fullName: System.Collections.Generic.KeyValuePair
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - name: TKey
    fullName: TKey
  - name: ', '
    fullName: ', '
  - name: TValue
    fullName: TValue
  - name: )
    fullName: )
  - name: ', '
    fullName: ', '
  - uid: System.Single
    name: Single
    fullName: System.Single
    isExternal: true
  - name: )
    fullName: )
  - name: )
    fullName: )
  nameWithType: Enumerable.Min<KeyValuePair<TKey, TValue>>(Func<KeyValuePair<TKey, TValue>, Single>)
  nameWithType.vb: Enumerable.Min(Of KeyValuePair(Of TKey, TValue))(Func(Of KeyValuePair(Of TKey, TValue), Single))
  commentId: M:System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Single})
- uid: System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{`0,`1}}.System.Linq.Enumerable.Min``2(System.Func{System.Collections.Generic.KeyValuePair{{TKey},{TValue}},{TResult}})
  parent: System.Linq.Enumerable
  definition: System.Linq.Enumerable.Min``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})
  name: Min<KeyValuePair<TKey, TValue>, TResult>(Func<KeyValuePair<TKey, TValue>, TResult>)
  fullName: System.Linq.Enumerable.Min<System.Collections.Generic.KeyValuePair<TKey, TValue>, TResult>(System.Func<System.Collections.Generic.KeyValuePair<TKey, TValue>, TResult>)
  fullname.vb: System.Linq.Enumerable.Min(Of System.Collections.Generic.KeyValuePair(Of TKey, TValue), TResult)(System.Func(Of System.Collections.Generic.KeyValuePair(Of TKey, TValue), TResult))
  name.vb: Min(Of KeyValuePair(Of TKey, TValue), TResult)(Func(Of KeyValuePair(Of TKey, TValue), TResult))
  spec.csharp:
  - uid: System.Linq.Enumerable.Min``2(System.Func{``0,``1})
    name: Min<KeyValuePair<TKey, TValue>, TResult>
    fullName: System.Linq.Enumerable.Min<System.Collections.Generic.KeyValuePair<TKey, TValue>, TResult>
  - name: (
    fullName: (
  - uid: System.Func`2
    name: Func
    fullName: System.Func
    isExternal: true
  - name: <
    fullName: <
  - uid: System.Collections.Generic.KeyValuePair`2
    name: KeyValuePair
    fullName: System.Collections.Generic.KeyValuePair
    isExternal: true
  - name: <
    fullName: <
  - name: TKey
    fullName: TKey
  - name: ', '
    fullName: ', '
  - name: TValue
    fullName: TValue
  - name: '>'
    fullName: '>'
  - name: ', '
    fullName: ', '
  - name: TResult
    fullName: TResult
  - name: '>'
    fullName: '>'
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Linq.Enumerable.Min``2(System.Func{``0,``1})
    name: Min(Of KeyValuePair(Of TKey, TValue), TResult)
    fullName: System.Linq.Enumerable.Min(Of System.Collections.Generic.KeyValuePair(Of TKey, TValue), TResult)
  - name: (
    fullName: (
  - uid: System.Func`2
    name: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - uid: System.Collections.Generic.KeyValuePair`2
    name: KeyValuePair
    fullName: System.Collections.Generic.KeyValuePair
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - name: TKey
    fullName: TKey
  - name: ', '
    fullName: ', '
  - name: TValue
    fullName: TValue
  - name: )
    fullName: )
  - name: ', '
    fullName: ', '
  - name: TResult
    fullName: TResult
  - name: )
    fullName: )
  - name: )
    fullName: )
  nameWithType: Enumerable.Min<KeyValuePair<TKey, TValue>, TResult>(Func<KeyValuePair<TKey, TValue>, TResult>)
  nameWithType.vb: Enumerable.Min(Of KeyValuePair(Of TKey, TValue), TResult)(Func(Of KeyValuePair(Of TKey, TValue), TResult))
  commentId: M:System.Linq.Enumerable.Min``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})
- uid: System.Collections.IEnumerable.System.Linq.Enumerable.OfType``1
  parent: System.Linq.Enumerable
  definition: System.Linq.Enumerable.OfType``1(System.Collections.IEnumerable)
  name: OfType<TResult>()
  fullName: System.Linq.Enumerable.OfType<TResult>()
  fullname.vb: System.Linq.Enumerable.OfType(Of TResult)()
  name.vb: OfType(Of TResult)()
  spec.csharp:
  - uid: System.Linq.Enumerable.OfType``1
    name: OfType<TResult>
    fullName: System.Linq.Enumerable.OfType<TResult>
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Linq.Enumerable.OfType``1
    name: OfType(Of TResult)
    fullName: System.Linq.Enumerable.OfType(Of TResult)
  - name: (
    fullName: (
  - name: )
    fullName: )
  nameWithType: Enumerable.OfType<TResult>()
  nameWithType.vb: Enumerable.OfType(Of TResult)()
  commentId: M:System.Linq.Enumerable.OfType``1(System.Collections.IEnumerable)
- uid: System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{`0,`1}}.System.Linq.Enumerable.OrderBy``2(System.Func{System.Collections.Generic.KeyValuePair{{TKey},{TValue}},{TKey}})
  parent: System.Linq.Enumerable
  definition: System.Linq.Enumerable.OrderBy``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})
  name: OrderBy<KeyValuePair<TKey, TValue>, TKey>(Func<KeyValuePair<TKey, TValue>, TKey>)
  fullName: System.Linq.Enumerable.OrderBy<System.Collections.Generic.KeyValuePair<TKey, TValue>, TKey>(System.Func<System.Collections.Generic.KeyValuePair<TKey, TValue>, TKey>)
  fullname.vb: System.Linq.Enumerable.OrderBy(Of System.Collections.Generic.KeyValuePair(Of TKey, TValue), TKey)(System.Func(Of System.Collections.Generic.KeyValuePair(Of TKey, TValue), TKey))
  name.vb: OrderBy(Of KeyValuePair(Of TKey, TValue), TKey)(Func(Of KeyValuePair(Of TKey, TValue), TKey))
  spec.csharp:
  - uid: System.Linq.Enumerable.OrderBy``2(System.Func{``0,``1})
    name: OrderBy<KeyValuePair<TKey, TValue>, TKey>
    fullName: System.Linq.Enumerable.OrderBy<System.Collections.Generic.KeyValuePair<TKey, TValue>, TKey>
  - name: (
    fullName: (
  - uid: System.Func`2
    name: Func
    fullName: System.Func
    isExternal: true
  - name: <
    fullName: <
  - uid: System.Collections.Generic.KeyValuePair`2
    name: KeyValuePair
    fullName: System.Collections.Generic.KeyValuePair
    isExternal: true
  - name: <
    fullName: <
  - name: TKey
    fullName: TKey
  - name: ', '
    fullName: ', '
  - name: TValue
    fullName: TValue
  - name: '>'
    fullName: '>'
  - name: ', '
    fullName: ', '
  - name: TKey
    fullName: TKey
  - name: '>'
    fullName: '>'
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Linq.Enumerable.OrderBy``2(System.Func{``0,``1})
    name: OrderBy(Of KeyValuePair(Of TKey, TValue), TKey)
    fullName: System.Linq.Enumerable.OrderBy(Of System.Collections.Generic.KeyValuePair(Of TKey, TValue), TKey)
  - name: (
    fullName: (
  - uid: System.Func`2
    name: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - uid: System.Collections.Generic.KeyValuePair`2
    name: KeyValuePair
    fullName: System.Collections.Generic.KeyValuePair
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - name: TKey
    fullName: TKey
  - name: ', '
    fullName: ', '
  - name: TValue
    fullName: TValue
  - name: )
    fullName: )
  - name: ', '
    fullName: ', '
  - name: TKey
    fullName: TKey
  - name: )
    fullName: )
  - name: )
    fullName: )
  nameWithType: Enumerable.OrderBy<KeyValuePair<TKey, TValue>, TKey>(Func<KeyValuePair<TKey, TValue>, TKey>)
  nameWithType.vb: Enumerable.OrderBy(Of KeyValuePair(Of TKey, TValue), TKey)(Func(Of KeyValuePair(Of TKey, TValue), TKey))
  commentId: M:System.Linq.Enumerable.OrderBy``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})
- uid: System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{`0,`1}}.System.Linq.Enumerable.OrderBy``2(System.Func{System.Collections.Generic.KeyValuePair{{TKey},{TValue}},{TKey}},System.Collections.Generic.IComparer{{TKey}})
  parent: System.Linq.Enumerable
  definition: System.Linq.Enumerable.OrderBy``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IComparer{``1})
  name: OrderBy<KeyValuePair<TKey, TValue>, TKey>(Func<KeyValuePair<TKey, TValue>, TKey>, IComparer<TKey>)
  fullName: System.Linq.Enumerable.OrderBy<System.Collections.Generic.KeyValuePair<TKey, TValue>, TKey>(System.Func<System.Collections.Generic.KeyValuePair<TKey, TValue>, TKey>, System.Collections.Generic.IComparer<TKey>)
  fullname.vb: System.Linq.Enumerable.OrderBy(Of System.Collections.Generic.KeyValuePair(Of TKey, TValue), TKey)(System.Func(Of System.Collections.Generic.KeyValuePair(Of TKey, TValue), TKey), System.Collections.Generic.IComparer(Of TKey))
  name.vb: OrderBy(Of KeyValuePair(Of TKey, TValue), TKey)(Func(Of KeyValuePair(Of TKey, TValue), TKey), IComparer(Of TKey))
  spec.csharp:
  - uid: System.Linq.Enumerable.OrderBy``2(System.Func{``0,``1},System.Collections.Generic.IComparer{``1})
    name: OrderBy<KeyValuePair<TKey, TValue>, TKey>
    fullName: System.Linq.Enumerable.OrderBy<System.Collections.Generic.KeyValuePair<TKey, TValue>, TKey>
  - name: (
    fullName: (
  - uid: System.Func`2
    name: Func
    fullName: System.Func
    isExternal: true
  - name: <
    fullName: <
  - uid: System.Collections.Generic.KeyValuePair`2
    name: KeyValuePair
    fullName: System.Collections.Generic.KeyValuePair
    isExternal: true
  - name: <
    fullName: <
  - name: TKey
    fullName: TKey
  - name: ', '
    fullName: ', '
  - name: TValue
    fullName: TValue
  - name: '>'
    fullName: '>'
  - name: ', '
    fullName: ', '
  - name: TKey
    fullName: TKey
  - name: '>'
    fullName: '>'
  - name: ', '
    fullName: ', '
  - uid: System.Collections.Generic.IComparer`1
    name: IComparer
    fullName: System.Collections.Generic.IComparer
    isExternal: true
  - name: <
    fullName: <
  - name: TKey
    fullName: TKey
  - name: '>'
    fullName: '>'
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Linq.Enumerable.OrderBy``2(System.Func{``0,``1},System.Collections.Generic.IComparer{``1})
    name: OrderBy(Of KeyValuePair(Of TKey, TValue), TKey)
    fullName: System.Linq.Enumerable.OrderBy(Of System.Collections.Generic.KeyValuePair(Of TKey, TValue), TKey)
  - name: (
    fullName: (
  - uid: System.Func`2
    name: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - uid: System.Collections.Generic.KeyValuePair`2
    name: KeyValuePair
    fullName: System.Collections.Generic.KeyValuePair
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - name: TKey
    fullName: TKey
  - name: ', '
    fullName: ', '
  - name: TValue
    fullName: TValue
  - name: )
    fullName: )
  - name: ', '
    fullName: ', '
  - name: TKey
    fullName: TKey
  - name: )
    fullName: )
  - name: ', '
    fullName: ', '
  - uid: System.Collections.Generic.IComparer`1
    name: IComparer
    fullName: System.Collections.Generic.IComparer
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - name: TKey
    fullName: TKey
  - name: )
    fullName: )
  - name: )
    fullName: )
  nameWithType: Enumerable.OrderBy<KeyValuePair<TKey, TValue>, TKey>(Func<KeyValuePair<TKey, TValue>, TKey>, IComparer<TKey>)
  nameWithType.vb: Enumerable.OrderBy(Of KeyValuePair(Of TKey, TValue), TKey)(Func(Of KeyValuePair(Of TKey, TValue), TKey), IComparer(Of TKey))
  commentId: M:System.Linq.Enumerable.OrderBy``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IComparer{``1})
- uid: System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{`0,`1}}.System.Linq.Enumerable.OrderByDescending``2(System.Func{System.Collections.Generic.KeyValuePair{{TKey},{TValue}},{TKey}})
  parent: System.Linq.Enumerable
  definition: System.Linq.Enumerable.OrderByDescending``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})
  name: OrderByDescending<KeyValuePair<TKey, TValue>, TKey>(Func<KeyValuePair<TKey, TValue>, TKey>)
  fullName: System.Linq.Enumerable.OrderByDescending<System.Collections.Generic.KeyValuePair<TKey, TValue>, TKey>(System.Func<System.Collections.Generic.KeyValuePair<TKey, TValue>, TKey>)
  fullname.vb: System.Linq.Enumerable.OrderByDescending(Of System.Collections.Generic.KeyValuePair(Of TKey, TValue), TKey)(System.Func(Of System.Collections.Generic.KeyValuePair(Of TKey, TValue), TKey))
  name.vb: OrderByDescending(Of KeyValuePair(Of TKey, TValue), TKey)(Func(Of KeyValuePair(Of TKey, TValue), TKey))
  spec.csharp:
  - uid: System.Linq.Enumerable.OrderByDescending``2(System.Func{``0,``1})
    name: OrderByDescending<KeyValuePair<TKey, TValue>, TKey>
    fullName: System.Linq.Enumerable.OrderByDescending<System.Collections.Generic.KeyValuePair<TKey, TValue>, TKey>
  - name: (
    fullName: (
  - uid: System.Func`2
    name: Func
    fullName: System.Func
    isExternal: true
  - name: <
    fullName: <
  - uid: System.Collections.Generic.KeyValuePair`2
    name: KeyValuePair
    fullName: System.Collections.Generic.KeyValuePair
    isExternal: true
  - name: <
    fullName: <
  - name: TKey
    fullName: TKey
  - name: ', '
    fullName: ', '
  - name: TValue
    fullName: TValue
  - name: '>'
    fullName: '>'
  - name: ', '
    fullName: ', '
  - name: TKey
    fullName: TKey
  - name: '>'
    fullName: '>'
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Linq.Enumerable.OrderByDescending``2(System.Func{``0,``1})
    name: OrderByDescending(Of KeyValuePair(Of TKey, TValue), TKey)
    fullName: System.Linq.Enumerable.OrderByDescending(Of System.Collections.Generic.KeyValuePair(Of TKey, TValue), TKey)
  - name: (
    fullName: (
  - uid: System.Func`2
    name: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - uid: System.Collections.Generic.KeyValuePair`2
    name: KeyValuePair
    fullName: System.Collections.Generic.KeyValuePair
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - name: TKey
    fullName: TKey
  - name: ', '
    fullName: ', '
  - name: TValue
    fullName: TValue
  - name: )
    fullName: )
  - name: ', '
    fullName: ', '
  - name: TKey
    fullName: TKey
  - name: )
    fullName: )
  - name: )
    fullName: )
  nameWithType: Enumerable.OrderByDescending<KeyValuePair<TKey, TValue>, TKey>(Func<KeyValuePair<TKey, TValue>, TKey>)
  nameWithType.vb: Enumerable.OrderByDescending(Of KeyValuePair(Of TKey, TValue), TKey)(Func(Of KeyValuePair(Of TKey, TValue), TKey))
  commentId: M:System.Linq.Enumerable.OrderByDescending``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})
- uid: System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{`0,`1}}.System.Linq.Enumerable.OrderByDescending``2(System.Func{System.Collections.Generic.KeyValuePair{{TKey},{TValue}},{TKey}},System.Collections.Generic.IComparer{{TKey}})
  parent: System.Linq.Enumerable
  definition: System.Linq.Enumerable.OrderByDescending``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IComparer{``1})
  name: OrderByDescending<KeyValuePair<TKey, TValue>, TKey>(Func<KeyValuePair<TKey, TValue>, TKey>, IComparer<TKey>)
  fullName: System.Linq.Enumerable.OrderByDescending<System.Collections.Generic.KeyValuePair<TKey, TValue>, TKey>(System.Func<System.Collections.Generic.KeyValuePair<TKey, TValue>, TKey>, System.Collections.Generic.IComparer<TKey>)
  fullname.vb: System.Linq.Enumerable.OrderByDescending(Of System.Collections.Generic.KeyValuePair(Of TKey, TValue), TKey)(System.Func(Of System.Collections.Generic.KeyValuePair(Of TKey, TValue), TKey), System.Collections.Generic.IComparer(Of TKey))
  name.vb: OrderByDescending(Of KeyValuePair(Of TKey, TValue), TKey)(Func(Of KeyValuePair(Of TKey, TValue), TKey), IComparer(Of TKey))
  spec.csharp:
  - uid: System.Linq.Enumerable.OrderByDescending``2(System.Func{``0,``1},System.Collections.Generic.IComparer{``1})
    name: OrderByDescending<KeyValuePair<TKey, TValue>, TKey>
    fullName: System.Linq.Enumerable.OrderByDescending<System.Collections.Generic.KeyValuePair<TKey, TValue>, TKey>
  - name: (
    fullName: (
  - uid: System.Func`2
    name: Func
    fullName: System.Func
    isExternal: true
  - name: <
    fullName: <
  - uid: System.Collections.Generic.KeyValuePair`2
    name: KeyValuePair
    fullName: System.Collections.Generic.KeyValuePair
    isExternal: true
  - name: <
    fullName: <
  - name: TKey
    fullName: TKey
  - name: ', '
    fullName: ', '
  - name: TValue
    fullName: TValue
  - name: '>'
    fullName: '>'
  - name: ', '
    fullName: ', '
  - name: TKey
    fullName: TKey
  - name: '>'
    fullName: '>'
  - name: ', '
    fullName: ', '
  - uid: System.Collections.Generic.IComparer`1
    name: IComparer
    fullName: System.Collections.Generic.IComparer
    isExternal: true
  - name: <
    fullName: <
  - name: TKey
    fullName: TKey
  - name: '>'
    fullName: '>'
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Linq.Enumerable.OrderByDescending``2(System.Func{``0,``1},System.Collections.Generic.IComparer{``1})
    name: OrderByDescending(Of KeyValuePair(Of TKey, TValue), TKey)
    fullName: System.Linq.Enumerable.OrderByDescending(Of System.Collections.Generic.KeyValuePair(Of TKey, TValue), TKey)
  - name: (
    fullName: (
  - uid: System.Func`2
    name: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - uid: System.Collections.Generic.KeyValuePair`2
    name: KeyValuePair
    fullName: System.Collections.Generic.KeyValuePair
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - name: TKey
    fullName: TKey
  - name: ', '
    fullName: ', '
  - name: TValue
    fullName: TValue
  - name: )
    fullName: )
  - name: ', '
    fullName: ', '
  - name: TKey
    fullName: TKey
  - name: )
    fullName: )
  - name: ', '
    fullName: ', '
  - uid: System.Collections.Generic.IComparer`1
    name: IComparer
    fullName: System.Collections.Generic.IComparer
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - name: TKey
    fullName: TKey
  - name: )
    fullName: )
  - name: )
    fullName: )
  nameWithType: Enumerable.OrderByDescending<KeyValuePair<TKey, TValue>, TKey>(Func<KeyValuePair<TKey, TValue>, TKey>, IComparer<TKey>)
  nameWithType.vb: Enumerable.OrderByDescending(Of KeyValuePair(Of TKey, TValue), TKey)(Func(Of KeyValuePair(Of TKey, TValue), TKey), IComparer(Of TKey))
  commentId: M:System.Linq.Enumerable.OrderByDescending``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IComparer{``1})
- uid: System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{`0,`1}}.System.Linq.Enumerable.Reverse``1
  parent: System.Linq.Enumerable
  definition: System.Linq.Enumerable.Reverse``1(System.Collections.Generic.IEnumerable{``0})
  name: Reverse<KeyValuePair<TKey, TValue>>()
  fullName: System.Linq.Enumerable.Reverse<System.Collections.Generic.KeyValuePair<TKey, TValue>>()
  fullname.vb: System.Linq.Enumerable.Reverse(Of System.Collections.Generic.KeyValuePair(Of TKey, TValue))()
  name.vb: Reverse(Of KeyValuePair(Of TKey, TValue))()
  spec.csharp:
  - uid: System.Linq.Enumerable.Reverse``1
    name: Reverse<KeyValuePair<TKey, TValue>>
    fullName: System.Linq.Enumerable.Reverse<System.Collections.Generic.KeyValuePair<TKey, TValue>>
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Linq.Enumerable.Reverse``1
    name: Reverse(Of KeyValuePair(Of TKey, TValue))
    fullName: System.Linq.Enumerable.Reverse(Of System.Collections.Generic.KeyValuePair(Of TKey, TValue))
  - name: (
    fullName: (
  - name: )
    fullName: )
  nameWithType: Enumerable.Reverse<KeyValuePair<TKey, TValue>>()
  nameWithType.vb: Enumerable.Reverse(Of KeyValuePair(Of TKey, TValue))()
  commentId: M:System.Linq.Enumerable.Reverse``1(System.Collections.Generic.IEnumerable{``0})
- uid: System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{`0,`1}}.System.Linq.Enumerable.Select``2(System.Func{System.Collections.Generic.KeyValuePair{{TKey},{TValue}},{TResult}})
  parent: System.Linq.Enumerable
  definition: System.Linq.Enumerable.Select``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})
  name: Select<KeyValuePair<TKey, TValue>, TResult>(Func<KeyValuePair<TKey, TValue>, TResult>)
  fullName: System.Linq.Enumerable.Select<System.Collections.Generic.KeyValuePair<TKey, TValue>, TResult>(System.Func<System.Collections.Generic.KeyValuePair<TKey, TValue>, TResult>)
  fullname.vb: System.Linq.Enumerable.Select(Of System.Collections.Generic.KeyValuePair(Of TKey, TValue), TResult)(System.Func(Of System.Collections.Generic.KeyValuePair(Of TKey, TValue), TResult))
  name.vb: Select(Of KeyValuePair(Of TKey, TValue), TResult)(Func(Of KeyValuePair(Of TKey, TValue), TResult))
  spec.csharp:
  - uid: System.Linq.Enumerable.Select``2(System.Func{``0,``1})
    name: Select<KeyValuePair<TKey, TValue>, TResult>
    fullName: System.Linq.Enumerable.Select<System.Collections.Generic.KeyValuePair<TKey, TValue>, TResult>
  - name: (
    fullName: (
  - uid: System.Func`2
    name: Func
    fullName: System.Func
    isExternal: true
  - name: <
    fullName: <
  - uid: System.Collections.Generic.KeyValuePair`2
    name: KeyValuePair
    fullName: System.Collections.Generic.KeyValuePair
    isExternal: true
  - name: <
    fullName: <
  - name: TKey
    fullName: TKey
  - name: ', '
    fullName: ', '
  - name: TValue
    fullName: TValue
  - name: '>'
    fullName: '>'
  - name: ', '
    fullName: ', '
  - name: TResult
    fullName: TResult
  - name: '>'
    fullName: '>'
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Linq.Enumerable.Select``2(System.Func{``0,``1})
    name: Select(Of KeyValuePair(Of TKey, TValue), TResult)
    fullName: System.Linq.Enumerable.Select(Of System.Collections.Generic.KeyValuePair(Of TKey, TValue), TResult)
  - name: (
    fullName: (
  - uid: System.Func`2
    name: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - uid: System.Collections.Generic.KeyValuePair`2
    name: KeyValuePair
    fullName: System.Collections.Generic.KeyValuePair
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - name: TKey
    fullName: TKey
  - name: ', '
    fullName: ', '
  - name: TValue
    fullName: TValue
  - name: )
    fullName: )
  - name: ', '
    fullName: ', '
  - name: TResult
    fullName: TResult
  - name: )
    fullName: )
  - name: )
    fullName: )
  nameWithType: Enumerable.Select<KeyValuePair<TKey, TValue>, TResult>(Func<KeyValuePair<TKey, TValue>, TResult>)
  nameWithType.vb: Enumerable.Select(Of KeyValuePair(Of TKey, TValue), TResult)(Func(Of KeyValuePair(Of TKey, TValue), TResult))
  commentId: M:System.Linq.Enumerable.Select``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})
- uid: System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{`0,`1}}.System.Linq.Enumerable.Select``2(System.Func{System.Collections.Generic.KeyValuePair{{TKey},{TValue}},System.Int32,{TResult}})
  parent: System.Linq.Enumerable
  definition: System.Linq.Enumerable.Select``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32,``1})
  name: Select<KeyValuePair<TKey, TValue>, TResult>(Func<KeyValuePair<TKey, TValue>, Int32, TResult>)
  fullName: System.Linq.Enumerable.Select<System.Collections.Generic.KeyValuePair<TKey, TValue>, TResult>(System.Func<System.Collections.Generic.KeyValuePair<TKey, TValue>, System.Int32, TResult>)
  fullname.vb: System.Linq.Enumerable.Select(Of System.Collections.Generic.KeyValuePair(Of TKey, TValue), TResult)(System.Func(Of System.Collections.Generic.KeyValuePair(Of TKey, TValue), System.Int32, TResult))
  name.vb: Select(Of KeyValuePair(Of TKey, TValue), TResult)(Func(Of KeyValuePair(Of TKey, TValue), Int32, TResult))
  spec.csharp:
  - uid: System.Linq.Enumerable.Select``2(System.Func{``0,System.Int32,``1})
    name: Select<KeyValuePair<TKey, TValue>, TResult>
    fullName: System.Linq.Enumerable.Select<System.Collections.Generic.KeyValuePair<TKey, TValue>, TResult>
  - name: (
    fullName: (
  - uid: System.Func`3
    name: Func
    fullName: System.Func
    isExternal: true
  - name: <
    fullName: <
  - uid: System.Collections.Generic.KeyValuePair`2
    name: KeyValuePair
    fullName: System.Collections.Generic.KeyValuePair
    isExternal: true
  - name: <
    fullName: <
  - name: TKey
    fullName: TKey
  - name: ', '
    fullName: ', '
  - name: TValue
    fullName: TValue
  - name: '>'
    fullName: '>'
  - name: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    fullName: ', '
  - name: TResult
    fullName: TResult
  - name: '>'
    fullName: '>'
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Linq.Enumerable.Select``2(System.Func{``0,System.Int32,``1})
    name: Select(Of KeyValuePair(Of TKey, TValue), TResult)
    fullName: System.Linq.Enumerable.Select(Of System.Collections.Generic.KeyValuePair(Of TKey, TValue), TResult)
  - name: (
    fullName: (
  - uid: System.Func`3
    name: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - uid: System.Collections.Generic.KeyValuePair`2
    name: KeyValuePair
    fullName: System.Collections.Generic.KeyValuePair
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - name: TKey
    fullName: TKey
  - name: ', '
    fullName: ', '
  - name: TValue
    fullName: TValue
  - name: )
    fullName: )
  - name: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    fullName: ', '
  - name: TResult
    fullName: TResult
  - name: )
    fullName: )
  - name: )
    fullName: )
  nameWithType: Enumerable.Select<KeyValuePair<TKey, TValue>, TResult>(Func<KeyValuePair<TKey, TValue>, Int32, TResult>)
  nameWithType.vb: Enumerable.Select(Of KeyValuePair(Of TKey, TValue), TResult)(Func(Of KeyValuePair(Of TKey, TValue), Int32, TResult))
  commentId: M:System.Linq.Enumerable.Select``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32,``1})
- uid: System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{`0,`1}}.System.Linq.Enumerable.SelectMany``2(System.Func{System.Collections.Generic.KeyValuePair{{TKey},{TValue}},System.Collections.Generic.IEnumerable{{TResult}}})
  parent: System.Linq.Enumerable
  definition: System.Linq.Enumerable.SelectMany``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Collections.Generic.IEnumerable{``1}})
  name: SelectMany<KeyValuePair<TKey, TValue>, TResult>(Func<KeyValuePair<TKey, TValue>, IEnumerable<TResult>>)
  fullName: System.Linq.Enumerable.SelectMany<System.Collections.Generic.KeyValuePair<TKey, TValue>, TResult>(System.Func<System.Collections.Generic.KeyValuePair<TKey, TValue>, System.Collections.Generic.IEnumerable<TResult>>)
  fullname.vb: System.Linq.Enumerable.SelectMany(Of System.Collections.Generic.KeyValuePair(Of TKey, TValue), TResult)(System.Func(Of System.Collections.Generic.KeyValuePair(Of TKey, TValue), System.Collections.Generic.IEnumerable(Of TResult)))
  name.vb: SelectMany(Of KeyValuePair(Of TKey, TValue), TResult)(Func(Of KeyValuePair(Of TKey, TValue), IEnumerable(Of TResult)))
  spec.csharp:
  - uid: System.Linq.Enumerable.SelectMany``2(System.Func{``0,System.Collections.Generic.IEnumerable{``1}})
    name: SelectMany<KeyValuePair<TKey, TValue>, TResult>
    fullName: System.Linq.Enumerable.SelectMany<System.Collections.Generic.KeyValuePair<TKey, TValue>, TResult>
  - name: (
    fullName: (
  - uid: System.Func`2
    name: Func
    fullName: System.Func
    isExternal: true
  - name: <
    fullName: <
  - uid: System.Collections.Generic.KeyValuePair`2
    name: KeyValuePair
    fullName: System.Collections.Generic.KeyValuePair
    isExternal: true
  - name: <
    fullName: <
  - name: TKey
    fullName: TKey
  - name: ', '
    fullName: ', '
  - name: TValue
    fullName: TValue
  - name: '>'
    fullName: '>'
  - name: ', '
    fullName: ', '
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    fullName: <
  - name: TResult
    fullName: TResult
  - name: '>'
    fullName: '>'
  - name: '>'
    fullName: '>'
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Linq.Enumerable.SelectMany``2(System.Func{``0,System.Collections.Generic.IEnumerable{``1}})
    name: SelectMany(Of KeyValuePair(Of TKey, TValue), TResult)
    fullName: System.Linq.Enumerable.SelectMany(Of System.Collections.Generic.KeyValuePair(Of TKey, TValue), TResult)
  - name: (
    fullName: (
  - uid: System.Func`2
    name: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - uid: System.Collections.Generic.KeyValuePair`2
    name: KeyValuePair
    fullName: System.Collections.Generic.KeyValuePair
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - name: TKey
    fullName: TKey
  - name: ', '
    fullName: ', '
  - name: TValue
    fullName: TValue
  - name: )
    fullName: )
  - name: ', '
    fullName: ', '
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - name: TResult
    fullName: TResult
  - name: )
    fullName: )
  - name: )
    fullName: )
  - name: )
    fullName: )
  nameWithType: Enumerable.SelectMany<KeyValuePair<TKey, TValue>, TResult>(Func<KeyValuePair<TKey, TValue>, IEnumerable<TResult>>)
  nameWithType.vb: Enumerable.SelectMany(Of KeyValuePair(Of TKey, TValue), TResult)(Func(Of KeyValuePair(Of TKey, TValue), IEnumerable(Of TResult)))
  commentId: M:System.Linq.Enumerable.SelectMany``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Collections.Generic.IEnumerable{``1}})
- uid: System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{`0,`1}}.System.Linq.Enumerable.SelectMany``2(System.Func{System.Collections.Generic.KeyValuePair{{TKey},{TValue}},System.Int32,System.Collections.Generic.IEnumerable{{TResult}}})
  parent: System.Linq.Enumerable
  definition: System.Linq.Enumerable.SelectMany``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32,System.Collections.Generic.IEnumerable{``1}})
  name: SelectMany<KeyValuePair<TKey, TValue>, TResult>(Func<KeyValuePair<TKey, TValue>, Int32, IEnumerable<TResult>>)
  fullName: System.Linq.Enumerable.SelectMany<System.Collections.Generic.KeyValuePair<TKey, TValue>, TResult>(System.Func<System.Collections.Generic.KeyValuePair<TKey, TValue>, System.Int32, System.Collections.Generic.IEnumerable<TResult>>)
  fullname.vb: System.Linq.Enumerable.SelectMany(Of System.Collections.Generic.KeyValuePair(Of TKey, TValue), TResult)(System.Func(Of System.Collections.Generic.KeyValuePair(Of TKey, TValue), System.Int32, System.Collections.Generic.IEnumerable(Of TResult)))
  name.vb: SelectMany(Of KeyValuePair(Of TKey, TValue), TResult)(Func(Of KeyValuePair(Of TKey, TValue), Int32, IEnumerable(Of TResult)))
  spec.csharp:
  - uid: System.Linq.Enumerable.SelectMany``2(System.Func{``0,System.Int32,System.Collections.Generic.IEnumerable{``1}})
    name: SelectMany<KeyValuePair<TKey, TValue>, TResult>
    fullName: System.Linq.Enumerable.SelectMany<System.Collections.Generic.KeyValuePair<TKey, TValue>, TResult>
  - name: (
    fullName: (
  - uid: System.Func`3
    name: Func
    fullName: System.Func
    isExternal: true
  - name: <
    fullName: <
  - uid: System.Collections.Generic.KeyValuePair`2
    name: KeyValuePair
    fullName: System.Collections.Generic.KeyValuePair
    isExternal: true
  - name: <
    fullName: <
  - name: TKey
    fullName: TKey
  - name: ', '
    fullName: ', '
  - name: TValue
    fullName: TValue
  - name: '>'
    fullName: '>'
  - name: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    fullName: <
  - name: TResult
    fullName: TResult
  - name: '>'
    fullName: '>'
  - name: '>'
    fullName: '>'
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Linq.Enumerable.SelectMany``2(System.Func{``0,System.Int32,System.Collections.Generic.IEnumerable{``1}})
    name: SelectMany(Of KeyValuePair(Of TKey, TValue), TResult)
    fullName: System.Linq.Enumerable.SelectMany(Of System.Collections.Generic.KeyValuePair(Of TKey, TValue), TResult)
  - name: (
    fullName: (
  - uid: System.Func`3
    name: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - uid: System.Collections.Generic.KeyValuePair`2
    name: KeyValuePair
    fullName: System.Collections.Generic.KeyValuePair
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - name: TKey
    fullName: TKey
  - name: ', '
    fullName: ', '
  - name: TValue
    fullName: TValue
  - name: )
    fullName: )
  - name: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - name: TResult
    fullName: TResult
  - name: )
    fullName: )
  - name: )
    fullName: )
  - name: )
    fullName: )
  nameWithType: Enumerable.SelectMany<KeyValuePair<TKey, TValue>, TResult>(Func<KeyValuePair<TKey, TValue>, Int32, IEnumerable<TResult>>)
  nameWithType.vb: Enumerable.SelectMany(Of KeyValuePair(Of TKey, TValue), TResult)(Func(Of KeyValuePair(Of TKey, TValue), Int32, IEnumerable(Of TResult)))
  commentId: M:System.Linq.Enumerable.SelectMany``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32,System.Collections.Generic.IEnumerable{``1}})
- uid: System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{`0,`1}}.System.Linq.Enumerable.SelectMany``3(System.Func{System.Collections.Generic.KeyValuePair{{TKey},{TValue}},System.Collections.Generic.IEnumerable{{TCollection}}},System.Func{System.Collections.Generic.KeyValuePair{{TKey},{TValue}},{TCollection},{TResult}})
  parent: System.Linq.Enumerable
  definition: System.Linq.Enumerable.SelectMany``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Collections.Generic.IEnumerable{``1}},System.Func{``0,``1,``2})
  name: SelectMany<KeyValuePair<TKey, TValue>, TCollection, TResult>(Func<KeyValuePair<TKey, TValue>, IEnumerable<TCollection>>, Func<KeyValuePair<TKey, TValue>, TCollection, TResult>)
  fullName: System.Linq.Enumerable.SelectMany<System.Collections.Generic.KeyValuePair<TKey, TValue>, TCollection, TResult>(System.Func<System.Collections.Generic.KeyValuePair<TKey, TValue>, System.Collections.Generic.IEnumerable<TCollection>>, System.Func<System.Collections.Generic.KeyValuePair<TKey, TValue>, TCollection, TResult>)
  fullname.vb: System.Linq.Enumerable.SelectMany(Of System.Collections.Generic.KeyValuePair(Of TKey, TValue), TCollection, TResult)(System.Func(Of System.Collections.Generic.KeyValuePair(Of TKey, TValue), System.Collections.Generic.IEnumerable(Of TCollection)), System.Func(Of System.Collections.Generic.KeyValuePair(Of TKey, TValue), TCollection, TResult))
  name.vb: SelectMany(Of KeyValuePair(Of TKey, TValue), TCollection, TResult)(Func(Of KeyValuePair(Of TKey, TValue), IEnumerable(Of TCollection)), Func(Of KeyValuePair(Of TKey, TValue), TCollection, TResult))
  spec.csharp:
  - uid: System.Linq.Enumerable.SelectMany``3(System.Func{``0,System.Collections.Generic.IEnumerable{``1}},System.Func{``0,``1,``2})
    name: SelectMany<KeyValuePair<TKey, TValue>, TCollection, TResult>
    fullName: System.Linq.Enumerable.SelectMany<System.Collections.Generic.KeyValuePair<TKey, TValue>, TCollection, TResult>
  - name: (
    fullName: (
  - uid: System.Func`2
    name: Func
    fullName: System.Func
    isExternal: true
  - name: <
    fullName: <
  - uid: System.Collections.Generic.KeyValuePair`2
    name: KeyValuePair
    fullName: System.Collections.Generic.KeyValuePair
    isExternal: true
  - name: <
    fullName: <
  - name: TKey
    fullName: TKey
  - name: ', '
    fullName: ', '
  - name: TValue
    fullName: TValue
  - name: '>'
    fullName: '>'
  - name: ', '
    fullName: ', '
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    fullName: <
  - name: TCollection
    fullName: TCollection
  - name: '>'
    fullName: '>'
  - name: '>'
    fullName: '>'
  - name: ', '
    fullName: ', '
  - uid: System.Func`3
    name: Func
    fullName: System.Func
    isExternal: true
  - name: <
    fullName: <
  - uid: System.Collections.Generic.KeyValuePair`2
    name: KeyValuePair
    fullName: System.Collections.Generic.KeyValuePair
    isExternal: true
  - name: <
    fullName: <
  - name: TKey
    fullName: TKey
  - name: ', '
    fullName: ', '
  - name: TValue
    fullName: TValue
  - name: '>'
    fullName: '>'
  - name: ', '
    fullName: ', '
  - name: TCollection
    fullName: TCollection
  - name: ', '
    fullName: ', '
  - name: TResult
    fullName: TResult
  - name: '>'
    fullName: '>'
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Linq.Enumerable.SelectMany``3(System.Func{``0,System.Collections.Generic.IEnumerable{``1}},System.Func{``0,``1,``2})
    name: SelectMany(Of KeyValuePair(Of TKey, TValue), TCollection, TResult)
    fullName: System.Linq.Enumerable.SelectMany(Of System.Collections.Generic.KeyValuePair(Of TKey, TValue), TCollection, TResult)
  - name: (
    fullName: (
  - uid: System.Func`2
    name: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - uid: System.Collections.Generic.KeyValuePair`2
    name: KeyValuePair
    fullName: System.Collections.Generic.KeyValuePair
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - name: TKey
    fullName: TKey
  - name: ', '
    fullName: ', '
  - name: TValue
    fullName: TValue
  - name: )
    fullName: )
  - name: ', '
    fullName: ', '
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - name: TCollection
    fullName: TCollection
  - name: )
    fullName: )
  - name: )
    fullName: )
  - name: ', '
    fullName: ', '
  - uid: System.Func`3
    name: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - uid: System.Collections.Generic.KeyValuePair`2
    name: KeyValuePair
    fullName: System.Collections.Generic.KeyValuePair
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - name: TKey
    fullName: TKey
  - name: ', '
    fullName: ', '
  - name: TValue
    fullName: TValue
  - name: )
    fullName: )
  - name: ', '
    fullName: ', '
  - name: TCollection
    fullName: TCollection
  - name: ', '
    fullName: ', '
  - name: TResult
    fullName: TResult
  - name: )
    fullName: )
  - name: )
    fullName: )
  nameWithType: Enumerable.SelectMany<KeyValuePair<TKey, TValue>, TCollection, TResult>(Func<KeyValuePair<TKey, TValue>, IEnumerable<TCollection>>, Func<KeyValuePair<TKey, TValue>, TCollection, TResult>)
  nameWithType.vb: Enumerable.SelectMany(Of KeyValuePair(Of TKey, TValue), TCollection, TResult)(Func(Of KeyValuePair(Of TKey, TValue), IEnumerable(Of TCollection)), Func(Of KeyValuePair(Of TKey, TValue), TCollection, TResult))
  commentId: M:System.Linq.Enumerable.SelectMany``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Collections.Generic.IEnumerable{``1}},System.Func{``0,``1,``2})
- uid: System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{`0,`1}}.System.Linq.Enumerable.SelectMany``3(System.Func{System.Collections.Generic.KeyValuePair{{TKey},{TValue}},System.Int32,System.Collections.Generic.IEnumerable{{TCollection}}},System.Func{System.Collections.Generic.KeyValuePair{{TKey},{TValue}},{TCollection},{TResult}})
  parent: System.Linq.Enumerable
  definition: System.Linq.Enumerable.SelectMany``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32,System.Collections.Generic.IEnumerable{``1}},System.Func{``0,``1,``2})
  name: SelectMany<KeyValuePair<TKey, TValue>, TCollection, TResult>(Func<KeyValuePair<TKey, TValue>, Int32, IEnumerable<TCollection>>, Func<KeyValuePair<TKey, TValue>, TCollection, TResult>)
  fullName: System.Linq.Enumerable.SelectMany<System.Collections.Generic.KeyValuePair<TKey, TValue>, TCollection, TResult>(System.Func<System.Collections.Generic.KeyValuePair<TKey, TValue>, System.Int32, System.Collections.Generic.IEnumerable<TCollection>>, System.Func<System.Collections.Generic.KeyValuePair<TKey, TValue>, TCollection, TResult>)
  fullname.vb: System.Linq.Enumerable.SelectMany(Of System.Collections.Generic.KeyValuePair(Of TKey, TValue), TCollection, TResult)(System.Func(Of System.Collections.Generic.KeyValuePair(Of TKey, TValue), System.Int32, System.Collections.Generic.IEnumerable(Of TCollection)), System.Func(Of System.Collections.Generic.KeyValuePair(Of TKey, TValue), TCollection, TResult))
  name.vb: SelectMany(Of KeyValuePair(Of TKey, TValue), TCollection, TResult)(Func(Of KeyValuePair(Of TKey, TValue), Int32, IEnumerable(Of TCollection)), Func(Of KeyValuePair(Of TKey, TValue), TCollection, TResult))
  spec.csharp:
  - uid: System.Linq.Enumerable.SelectMany``3(System.Func{``0,System.Int32,System.Collections.Generic.IEnumerable{``1}},System.Func{``0,``1,``2})
    name: SelectMany<KeyValuePair<TKey, TValue>, TCollection, TResult>
    fullName: System.Linq.Enumerable.SelectMany<System.Collections.Generic.KeyValuePair<TKey, TValue>, TCollection, TResult>
  - name: (
    fullName: (
  - uid: System.Func`3
    name: Func
    fullName: System.Func
    isExternal: true
  - name: <
    fullName: <
  - uid: System.Collections.Generic.KeyValuePair`2
    name: KeyValuePair
    fullName: System.Collections.Generic.KeyValuePair
    isExternal: true
  - name: <
    fullName: <
  - name: TKey
    fullName: TKey
  - name: ', '
    fullName: ', '
  - name: TValue
    fullName: TValue
  - name: '>'
    fullName: '>'
  - name: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    fullName: <
  - name: TCollection
    fullName: TCollection
  - name: '>'
    fullName: '>'
  - name: '>'
    fullName: '>'
  - name: ', '
    fullName: ', '
  - uid: System.Func`3
    name: Func
    fullName: System.Func
    isExternal: true
  - name: <
    fullName: <
  - uid: System.Collections.Generic.KeyValuePair`2
    name: KeyValuePair
    fullName: System.Collections.Generic.KeyValuePair
    isExternal: true
  - name: <
    fullName: <
  - name: TKey
    fullName: TKey
  - name: ', '
    fullName: ', '
  - name: TValue
    fullName: TValue
  - name: '>'
    fullName: '>'
  - name: ', '
    fullName: ', '
  - name: TCollection
    fullName: TCollection
  - name: ', '
    fullName: ', '
  - name: TResult
    fullName: TResult
  - name: '>'
    fullName: '>'
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Linq.Enumerable.SelectMany``3(System.Func{``0,System.Int32,System.Collections.Generic.IEnumerable{``1}},System.Func{``0,``1,``2})
    name: SelectMany(Of KeyValuePair(Of TKey, TValue), TCollection, TResult)
    fullName: System.Linq.Enumerable.SelectMany(Of System.Collections.Generic.KeyValuePair(Of TKey, TValue), TCollection, TResult)
  - name: (
    fullName: (
  - uid: System.Func`3
    name: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - uid: System.Collections.Generic.KeyValuePair`2
    name: KeyValuePair
    fullName: System.Collections.Generic.KeyValuePair
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - name: TKey
    fullName: TKey
  - name: ', '
    fullName: ', '
  - name: TValue
    fullName: TValue
  - name: )
    fullName: )
  - name: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - name: TCollection
    fullName: TCollection
  - name: )
    fullName: )
  - name: )
    fullName: )
  - name: ', '
    fullName: ', '
  - uid: System.Func`3
    name: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - uid: System.Collections.Generic.KeyValuePair`2
    name: KeyValuePair
    fullName: System.Collections.Generic.KeyValuePair
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - name: TKey
    fullName: TKey
  - name: ', '
    fullName: ', '
  - name: TValue
    fullName: TValue
  - name: )
    fullName: )
  - name: ', '
    fullName: ', '
  - name: TCollection
    fullName: TCollection
  - name: ', '
    fullName: ', '
  - name: TResult
    fullName: TResult
  - name: )
    fullName: )
  - name: )
    fullName: )
  nameWithType: Enumerable.SelectMany<KeyValuePair<TKey, TValue>, TCollection, TResult>(Func<KeyValuePair<TKey, TValue>, Int32, IEnumerable<TCollection>>, Func<KeyValuePair<TKey, TValue>, TCollection, TResult>)
  nameWithType.vb: Enumerable.SelectMany(Of KeyValuePair(Of TKey, TValue), TCollection, TResult)(Func(Of KeyValuePair(Of TKey, TValue), Int32, IEnumerable(Of TCollection)), Func(Of KeyValuePair(Of TKey, TValue), TCollection, TResult))
  commentId: M:System.Linq.Enumerable.SelectMany``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32,System.Collections.Generic.IEnumerable{``1}},System.Func{``0,``1,``2})
- uid: System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{`0,`1}}.System.Linq.Enumerable.SequenceEqual``1(System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{{TKey},{TValue}}})
  parent: System.Linq.Enumerable
  definition: System.Linq.Enumerable.SequenceEqual``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0})
  name: SequenceEqual<KeyValuePair<TKey, TValue>>(IEnumerable<KeyValuePair<TKey, TValue>>)
  fullName: System.Linq.Enumerable.SequenceEqual<System.Collections.Generic.KeyValuePair<TKey, TValue>>(System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<TKey, TValue>>)
  fullname.vb: System.Linq.Enumerable.SequenceEqual(Of System.Collections.Generic.KeyValuePair(Of TKey, TValue))(System.Collections.Generic.IEnumerable(Of System.Collections.Generic.KeyValuePair(Of TKey, TValue)))
  name.vb: SequenceEqual(Of KeyValuePair(Of TKey, TValue))(IEnumerable(Of KeyValuePair(Of TKey, TValue)))
  spec.csharp:
  - uid: System.Linq.Enumerable.SequenceEqual``1(System.Collections.Generic.IEnumerable{``0})
    name: SequenceEqual<KeyValuePair<TKey, TValue>>
    fullName: System.Linq.Enumerable.SequenceEqual<System.Collections.Generic.KeyValuePair<TKey, TValue>>
  - name: (
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    fullName: <
  - uid: System.Collections.Generic.KeyValuePair`2
    name: KeyValuePair
    fullName: System.Collections.Generic.KeyValuePair
    isExternal: true
  - name: <
    fullName: <
  - name: TKey
    fullName: TKey
  - name: ', '
    fullName: ', '
  - name: TValue
    fullName: TValue
  - name: '>'
    fullName: '>'
  - name: '>'
    fullName: '>'
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Linq.Enumerable.SequenceEqual``1(System.Collections.Generic.IEnumerable{``0})
    name: SequenceEqual(Of KeyValuePair(Of TKey, TValue))
    fullName: System.Linq.Enumerable.SequenceEqual(Of System.Collections.Generic.KeyValuePair(Of TKey, TValue))
  - name: (
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - uid: System.Collections.Generic.KeyValuePair`2
    name: KeyValuePair
    fullName: System.Collections.Generic.KeyValuePair
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - name: TKey
    fullName: TKey
  - name: ', '
    fullName: ', '
  - name: TValue
    fullName: TValue
  - name: )
    fullName: )
  - name: )
    fullName: )
  - name: )
    fullName: )
  nameWithType: Enumerable.SequenceEqual<KeyValuePair<TKey, TValue>>(IEnumerable<KeyValuePair<TKey, TValue>>)
  nameWithType.vb: Enumerable.SequenceEqual(Of KeyValuePair(Of TKey, TValue))(IEnumerable(Of KeyValuePair(Of TKey, TValue)))
  commentId: M:System.Linq.Enumerable.SequenceEqual``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0})
- uid: System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{`0,`1}}.System.Linq.Enumerable.SequenceEqual``1(System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{{TKey},{TValue}}},System.Collections.Generic.IEqualityComparer{System.Collections.Generic.KeyValuePair{{TKey},{TValue}}})
  parent: System.Linq.Enumerable
  definition: System.Linq.Enumerable.SequenceEqual``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEqualityComparer{``0})
  name: SequenceEqual<KeyValuePair<TKey, TValue>>(IEnumerable<KeyValuePair<TKey, TValue>>, IEqualityComparer<KeyValuePair<TKey, TValue>>)
  fullName: System.Linq.Enumerable.SequenceEqual<System.Collections.Generic.KeyValuePair<TKey, TValue>>(System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<TKey, TValue>>, System.Collections.Generic.IEqualityComparer<System.Collections.Generic.KeyValuePair<TKey, TValue>>)
  fullname.vb: System.Linq.Enumerable.SequenceEqual(Of System.Collections.Generic.KeyValuePair(Of TKey, TValue))(System.Collections.Generic.IEnumerable(Of System.Collections.Generic.KeyValuePair(Of TKey, TValue)), System.Collections.Generic.IEqualityComparer(Of System.Collections.Generic.KeyValuePair(Of TKey, TValue)))
  name.vb: SequenceEqual(Of KeyValuePair(Of TKey, TValue))(IEnumerable(Of KeyValuePair(Of TKey, TValue)), IEqualityComparer(Of KeyValuePair(Of TKey, TValue)))
  spec.csharp:
  - uid: System.Linq.Enumerable.SequenceEqual``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEqualityComparer{``0})
    name: SequenceEqual<KeyValuePair<TKey, TValue>>
    fullName: System.Linq.Enumerable.SequenceEqual<System.Collections.Generic.KeyValuePair<TKey, TValue>>
  - name: (
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    fullName: <
  - uid: System.Collections.Generic.KeyValuePair`2
    name: KeyValuePair
    fullName: System.Collections.Generic.KeyValuePair
    isExternal: true
  - name: <
    fullName: <
  - name: TKey
    fullName: TKey
  - name: ', '
    fullName: ', '
  - name: TValue
    fullName: TValue
  - name: '>'
    fullName: '>'
  - name: '>'
    fullName: '>'
  - name: ', '
    fullName: ', '
  - uid: System.Collections.Generic.IEqualityComparer`1
    name: IEqualityComparer
    fullName: System.Collections.Generic.IEqualityComparer
    isExternal: true
  - name: <
    fullName: <
  - uid: System.Collections.Generic.KeyValuePair`2
    name: KeyValuePair
    fullName: System.Collections.Generic.KeyValuePair
    isExternal: true
  - name: <
    fullName: <
  - name: TKey
    fullName: TKey
  - name: ', '
    fullName: ', '
  - name: TValue
    fullName: TValue
  - name: '>'
    fullName: '>'
  - name: '>'
    fullName: '>'
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Linq.Enumerable.SequenceEqual``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEqualityComparer{``0})
    name: SequenceEqual(Of KeyValuePair(Of TKey, TValue))
    fullName: System.Linq.Enumerable.SequenceEqual(Of System.Collections.Generic.KeyValuePair(Of TKey, TValue))
  - name: (
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - uid: System.Collections.Generic.KeyValuePair`2
    name: KeyValuePair
    fullName: System.Collections.Generic.KeyValuePair
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - name: TKey
    fullName: TKey
  - name: ', '
    fullName: ', '
  - name: TValue
    fullName: TValue
  - name: )
    fullName: )
  - name: )
    fullName: )
  - name: ', '
    fullName: ', '
  - uid: System.Collections.Generic.IEqualityComparer`1
    name: IEqualityComparer
    fullName: System.Collections.Generic.IEqualityComparer
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - uid: System.Collections.Generic.KeyValuePair`2
    name: KeyValuePair
    fullName: System.Collections.Generic.KeyValuePair
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - name: TKey
    fullName: TKey
  - name: ', '
    fullName: ', '
  - name: TValue
    fullName: TValue
  - name: )
    fullName: )
  - name: )
    fullName: )
  - name: )
    fullName: )
  nameWithType: Enumerable.SequenceEqual<KeyValuePair<TKey, TValue>>(IEnumerable<KeyValuePair<TKey, TValue>>, IEqualityComparer<KeyValuePair<TKey, TValue>>)
  nameWithType.vb: Enumerable.SequenceEqual(Of KeyValuePair(Of TKey, TValue))(IEnumerable(Of KeyValuePair(Of TKey, TValue)), IEqualityComparer(Of KeyValuePair(Of TKey, TValue)))
  commentId: M:System.Linq.Enumerable.SequenceEqual``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEqualityComparer{``0})
- uid: System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{`0,`1}}.System.Linq.Enumerable.Single``1
  parent: System.Linq.Enumerable
  definition: System.Linq.Enumerable.Single``1(System.Collections.Generic.IEnumerable{``0})
  name: Single<KeyValuePair<TKey, TValue>>()
  fullName: System.Linq.Enumerable.Single<System.Collections.Generic.KeyValuePair<TKey, TValue>>()
  fullname.vb: System.Linq.Enumerable.Single(Of System.Collections.Generic.KeyValuePair(Of TKey, TValue))()
  name.vb: Single(Of KeyValuePair(Of TKey, TValue))()
  spec.csharp:
  - uid: System.Linq.Enumerable.Single``1
    name: Single<KeyValuePair<TKey, TValue>>
    fullName: System.Linq.Enumerable.Single<System.Collections.Generic.KeyValuePair<TKey, TValue>>
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Linq.Enumerable.Single``1
    name: Single(Of KeyValuePair(Of TKey, TValue))
    fullName: System.Linq.Enumerable.Single(Of System.Collections.Generic.KeyValuePair(Of TKey, TValue))
  - name: (
    fullName: (
  - name: )
    fullName: )
  nameWithType: Enumerable.Single<KeyValuePair<TKey, TValue>>()
  nameWithType.vb: Enumerable.Single(Of KeyValuePair(Of TKey, TValue))()
  commentId: M:System.Linq.Enumerable.Single``1(System.Collections.Generic.IEnumerable{``0})
- uid: System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{`0,`1}}.System.Linq.Enumerable.Single``1(System.Func{System.Collections.Generic.KeyValuePair{{TKey},{TValue}},System.Boolean})
  parent: System.Linq.Enumerable
  definition: System.Linq.Enumerable.Single``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})
  name: Single<KeyValuePair<TKey, TValue>>(Func<KeyValuePair<TKey, TValue>, Boolean>)
  fullName: System.Linq.Enumerable.Single<System.Collections.Generic.KeyValuePair<TKey, TValue>>(System.Func<System.Collections.Generic.KeyValuePair<TKey, TValue>, System.Boolean>)
  fullname.vb: System.Linq.Enumerable.Single(Of System.Collections.Generic.KeyValuePair(Of TKey, TValue))(System.Func(Of System.Collections.Generic.KeyValuePair(Of TKey, TValue), System.Boolean))
  name.vb: Single(Of KeyValuePair(Of TKey, TValue))(Func(Of KeyValuePair(Of TKey, TValue), Boolean))
  spec.csharp:
  - uid: System.Linq.Enumerable.Single``1(System.Func{``0,System.Boolean})
    name: Single<KeyValuePair<TKey, TValue>>
    fullName: System.Linq.Enumerable.Single<System.Collections.Generic.KeyValuePair<TKey, TValue>>
  - name: (
    fullName: (
  - uid: System.Func`2
    name: Func
    fullName: System.Func
    isExternal: true
  - name: <
    fullName: <
  - uid: System.Collections.Generic.KeyValuePair`2
    name: KeyValuePair
    fullName: System.Collections.Generic.KeyValuePair
    isExternal: true
  - name: <
    fullName: <
  - name: TKey
    fullName: TKey
  - name: ', '
    fullName: ', '
  - name: TValue
    fullName: TValue
  - name: '>'
    fullName: '>'
  - name: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: '>'
    fullName: '>'
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Linq.Enumerable.Single``1(System.Func{``0,System.Boolean})
    name: Single(Of KeyValuePair(Of TKey, TValue))
    fullName: System.Linq.Enumerable.Single(Of System.Collections.Generic.KeyValuePair(Of TKey, TValue))
  - name: (
    fullName: (
  - uid: System.Func`2
    name: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - uid: System.Collections.Generic.KeyValuePair`2
    name: KeyValuePair
    fullName: System.Collections.Generic.KeyValuePair
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - name: TKey
    fullName: TKey
  - name: ', '
    fullName: ', '
  - name: TValue
    fullName: TValue
  - name: )
    fullName: )
  - name: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    fullName: )
  - name: )
    fullName: )
  nameWithType: Enumerable.Single<KeyValuePair<TKey, TValue>>(Func<KeyValuePair<TKey, TValue>, Boolean>)
  nameWithType.vb: Enumerable.Single(Of KeyValuePair(Of TKey, TValue))(Func(Of KeyValuePair(Of TKey, TValue), Boolean))
  commentId: M:System.Linq.Enumerable.Single``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})
- uid: System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{`0,`1}}.System.Linq.Enumerable.SingleOrDefault``1
  parent: System.Linq.Enumerable
  definition: System.Linq.Enumerable.SingleOrDefault``1(System.Collections.Generic.IEnumerable{``0})
  name: SingleOrDefault<KeyValuePair<TKey, TValue>>()
  fullName: System.Linq.Enumerable.SingleOrDefault<System.Collections.Generic.KeyValuePair<TKey, TValue>>()
  fullname.vb: System.Linq.Enumerable.SingleOrDefault(Of System.Collections.Generic.KeyValuePair(Of TKey, TValue))()
  name.vb: SingleOrDefault(Of KeyValuePair(Of TKey, TValue))()
  spec.csharp:
  - uid: System.Linq.Enumerable.SingleOrDefault``1
    name: SingleOrDefault<KeyValuePair<TKey, TValue>>
    fullName: System.Linq.Enumerable.SingleOrDefault<System.Collections.Generic.KeyValuePair<TKey, TValue>>
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Linq.Enumerable.SingleOrDefault``1
    name: SingleOrDefault(Of KeyValuePair(Of TKey, TValue))
    fullName: System.Linq.Enumerable.SingleOrDefault(Of System.Collections.Generic.KeyValuePair(Of TKey, TValue))
  - name: (
    fullName: (
  - name: )
    fullName: )
  nameWithType: Enumerable.SingleOrDefault<KeyValuePair<TKey, TValue>>()
  nameWithType.vb: Enumerable.SingleOrDefault(Of KeyValuePair(Of TKey, TValue))()
  commentId: M:System.Linq.Enumerable.SingleOrDefault``1(System.Collections.Generic.IEnumerable{``0})
- uid: System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{`0,`1}}.System.Linq.Enumerable.SingleOrDefault``1(System.Func{System.Collections.Generic.KeyValuePair{{TKey},{TValue}},System.Boolean})
  parent: System.Linq.Enumerable
  definition: System.Linq.Enumerable.SingleOrDefault``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})
  name: SingleOrDefault<KeyValuePair<TKey, TValue>>(Func<KeyValuePair<TKey, TValue>, Boolean>)
  fullName: System.Linq.Enumerable.SingleOrDefault<System.Collections.Generic.KeyValuePair<TKey, TValue>>(System.Func<System.Collections.Generic.KeyValuePair<TKey, TValue>, System.Boolean>)
  fullname.vb: System.Linq.Enumerable.SingleOrDefault(Of System.Collections.Generic.KeyValuePair(Of TKey, TValue))(System.Func(Of System.Collections.Generic.KeyValuePair(Of TKey, TValue), System.Boolean))
  name.vb: SingleOrDefault(Of KeyValuePair(Of TKey, TValue))(Func(Of KeyValuePair(Of TKey, TValue), Boolean))
  spec.csharp:
  - uid: System.Linq.Enumerable.SingleOrDefault``1(System.Func{``0,System.Boolean})
    name: SingleOrDefault<KeyValuePair<TKey, TValue>>
    fullName: System.Linq.Enumerable.SingleOrDefault<System.Collections.Generic.KeyValuePair<TKey, TValue>>
  - name: (
    fullName: (
  - uid: System.Func`2
    name: Func
    fullName: System.Func
    isExternal: true
  - name: <
    fullName: <
  - uid: System.Collections.Generic.KeyValuePair`2
    name: KeyValuePair
    fullName: System.Collections.Generic.KeyValuePair
    isExternal: true
  - name: <
    fullName: <
  - name: TKey
    fullName: TKey
  - name: ', '
    fullName: ', '
  - name: TValue
    fullName: TValue
  - name: '>'
    fullName: '>'
  - name: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: '>'
    fullName: '>'
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Linq.Enumerable.SingleOrDefault``1(System.Func{``0,System.Boolean})
    name: SingleOrDefault(Of KeyValuePair(Of TKey, TValue))
    fullName: System.Linq.Enumerable.SingleOrDefault(Of System.Collections.Generic.KeyValuePair(Of TKey, TValue))
  - name: (
    fullName: (
  - uid: System.Func`2
    name: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - uid: System.Collections.Generic.KeyValuePair`2
    name: KeyValuePair
    fullName: System.Collections.Generic.KeyValuePair
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - name: TKey
    fullName: TKey
  - name: ', '
    fullName: ', '
  - name: TValue
    fullName: TValue
  - name: )
    fullName: )
  - name: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    fullName: )
  - name: )
    fullName: )
  nameWithType: Enumerable.SingleOrDefault<KeyValuePair<TKey, TValue>>(Func<KeyValuePair<TKey, TValue>, Boolean>)
  nameWithType.vb: Enumerable.SingleOrDefault(Of KeyValuePair(Of TKey, TValue))(Func(Of KeyValuePair(Of TKey, TValue), Boolean))
  commentId: M:System.Linq.Enumerable.SingleOrDefault``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})
- uid: System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{`0,`1}}.System.Linq.Enumerable.Skip``1(System.Int32)
  parent: System.Linq.Enumerable
  definition: System.Linq.Enumerable.Skip``1(System.Collections.Generic.IEnumerable{``0},System.Int32)
  name: Skip<KeyValuePair<TKey, TValue>>(Int32)
  fullName: System.Linq.Enumerable.Skip<System.Collections.Generic.KeyValuePair<TKey, TValue>>(System.Int32)
  fullname.vb: System.Linq.Enumerable.Skip(Of System.Collections.Generic.KeyValuePair(Of TKey, TValue))(System.Int32)
  name.vb: Skip(Of KeyValuePair(Of TKey, TValue))(Int32)
  spec.csharp:
  - uid: System.Linq.Enumerable.Skip``1(System.Int32)
    name: Skip<KeyValuePair<TKey, TValue>>
    fullName: System.Linq.Enumerable.Skip<System.Collections.Generic.KeyValuePair<TKey, TValue>>
  - name: (
    fullName: (
  - uid: System.Int32
    name: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Linq.Enumerable.Skip``1(System.Int32)
    name: Skip(Of KeyValuePair(Of TKey, TValue))
    fullName: System.Linq.Enumerable.Skip(Of System.Collections.Generic.KeyValuePair(Of TKey, TValue))
  - name: (
    fullName: (
  - uid: System.Int32
    name: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    fullName: )
  nameWithType: Enumerable.Skip<KeyValuePair<TKey, TValue>>(Int32)
  nameWithType.vb: Enumerable.Skip(Of KeyValuePair(Of TKey, TValue))(Int32)
  commentId: M:System.Linq.Enumerable.Skip``1(System.Collections.Generic.IEnumerable{``0},System.Int32)
- uid: System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{`0,`1}}.System.Linq.Enumerable.SkipWhile``1(System.Func{System.Collections.Generic.KeyValuePair{{TKey},{TValue}},System.Boolean})
  parent: System.Linq.Enumerable
  definition: System.Linq.Enumerable.SkipWhile``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})
  name: SkipWhile<KeyValuePair<TKey, TValue>>(Func<KeyValuePair<TKey, TValue>, Boolean>)
  fullName: System.Linq.Enumerable.SkipWhile<System.Collections.Generic.KeyValuePair<TKey, TValue>>(System.Func<System.Collections.Generic.KeyValuePair<TKey, TValue>, System.Boolean>)
  fullname.vb: System.Linq.Enumerable.SkipWhile(Of System.Collections.Generic.KeyValuePair(Of TKey, TValue))(System.Func(Of System.Collections.Generic.KeyValuePair(Of TKey, TValue), System.Boolean))
  name.vb: SkipWhile(Of KeyValuePair(Of TKey, TValue))(Func(Of KeyValuePair(Of TKey, TValue), Boolean))
  spec.csharp:
  - uid: System.Linq.Enumerable.SkipWhile``1(System.Func{``0,System.Boolean})
    name: SkipWhile<KeyValuePair<TKey, TValue>>
    fullName: System.Linq.Enumerable.SkipWhile<System.Collections.Generic.KeyValuePair<TKey, TValue>>
  - name: (
    fullName: (
  - uid: System.Func`2
    name: Func
    fullName: System.Func
    isExternal: true
  - name: <
    fullName: <
  - uid: System.Collections.Generic.KeyValuePair`2
    name: KeyValuePair
    fullName: System.Collections.Generic.KeyValuePair
    isExternal: true
  - name: <
    fullName: <
  - name: TKey
    fullName: TKey
  - name: ', '
    fullName: ', '
  - name: TValue
    fullName: TValue
  - name: '>'
    fullName: '>'
  - name: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: '>'
    fullName: '>'
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Linq.Enumerable.SkipWhile``1(System.Func{``0,System.Boolean})
    name: SkipWhile(Of KeyValuePair(Of TKey, TValue))
    fullName: System.Linq.Enumerable.SkipWhile(Of System.Collections.Generic.KeyValuePair(Of TKey, TValue))
  - name: (
    fullName: (
  - uid: System.Func`2
    name: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - uid: System.Collections.Generic.KeyValuePair`2
    name: KeyValuePair
    fullName: System.Collections.Generic.KeyValuePair
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - name: TKey
    fullName: TKey
  - name: ', '
    fullName: ', '
  - name: TValue
    fullName: TValue
  - name: )
    fullName: )
  - name: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    fullName: )
  - name: )
    fullName: )
  nameWithType: Enumerable.SkipWhile<KeyValuePair<TKey, TValue>>(Func<KeyValuePair<TKey, TValue>, Boolean>)
  nameWithType.vb: Enumerable.SkipWhile(Of KeyValuePair(Of TKey, TValue))(Func(Of KeyValuePair(Of TKey, TValue), Boolean))
  commentId: M:System.Linq.Enumerable.SkipWhile``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})
- uid: System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{`0,`1}}.System.Linq.Enumerable.SkipWhile``1(System.Func{System.Collections.Generic.KeyValuePair{{TKey},{TValue}},System.Int32,System.Boolean})
  parent: System.Linq.Enumerable
  definition: System.Linq.Enumerable.SkipWhile``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32,System.Boolean})
  name: SkipWhile<KeyValuePair<TKey, TValue>>(Func<KeyValuePair<TKey, TValue>, Int32, Boolean>)
  fullName: System.Linq.Enumerable.SkipWhile<System.Collections.Generic.KeyValuePair<TKey, TValue>>(System.Func<System.Collections.Generic.KeyValuePair<TKey, TValue>, System.Int32, System.Boolean>)
  fullname.vb: System.Linq.Enumerable.SkipWhile(Of System.Collections.Generic.KeyValuePair(Of TKey, TValue))(System.Func(Of System.Collections.Generic.KeyValuePair(Of TKey, TValue), System.Int32, System.Boolean))
  name.vb: SkipWhile(Of KeyValuePair(Of TKey, TValue))(Func(Of KeyValuePair(Of TKey, TValue), Int32, Boolean))
  spec.csharp:
  - uid: System.Linq.Enumerable.SkipWhile``1(System.Func{``0,System.Int32,System.Boolean})
    name: SkipWhile<KeyValuePair<TKey, TValue>>
    fullName: System.Linq.Enumerable.SkipWhile<System.Collections.Generic.KeyValuePair<TKey, TValue>>
  - name: (
    fullName: (
  - uid: System.Func`3
    name: Func
    fullName: System.Func
    isExternal: true
  - name: <
    fullName: <
  - uid: System.Collections.Generic.KeyValuePair`2
    name: KeyValuePair
    fullName: System.Collections.Generic.KeyValuePair
    isExternal: true
  - name: <
    fullName: <
  - name: TKey
    fullName: TKey
  - name: ', '
    fullName: ', '
  - name: TValue
    fullName: TValue
  - name: '>'
    fullName: '>'
  - name: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: '>'
    fullName: '>'
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Linq.Enumerable.SkipWhile``1(System.Func{``0,System.Int32,System.Boolean})
    name: SkipWhile(Of KeyValuePair(Of TKey, TValue))
    fullName: System.Linq.Enumerable.SkipWhile(Of System.Collections.Generic.KeyValuePair(Of TKey, TValue))
  - name: (
    fullName: (
  - uid: System.Func`3
    name: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - uid: System.Collections.Generic.KeyValuePair`2
    name: KeyValuePair
    fullName: System.Collections.Generic.KeyValuePair
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - name: TKey
    fullName: TKey
  - name: ', '
    fullName: ', '
  - name: TValue
    fullName: TValue
  - name: )
    fullName: )
  - name: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    fullName: )
  - name: )
    fullName: )
  nameWithType: Enumerable.SkipWhile<KeyValuePair<TKey, TValue>>(Func<KeyValuePair<TKey, TValue>, Int32, Boolean>)
  nameWithType.vb: Enumerable.SkipWhile(Of KeyValuePair(Of TKey, TValue))(Func(Of KeyValuePair(Of TKey, TValue), Int32, Boolean))
  commentId: M:System.Linq.Enumerable.SkipWhile``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32,System.Boolean})
- uid: System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{`0,`1}}.System.Linq.Enumerable.Sum``1(System.Func{System.Collections.Generic.KeyValuePair{{TKey},{TValue}},System.Decimal})
  parent: System.Linq.Enumerable
  definition: System.Linq.Enumerable.Sum``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Decimal})
  name: Sum<KeyValuePair<TKey, TValue>>(Func<KeyValuePair<TKey, TValue>, Decimal>)
  fullName: System.Linq.Enumerable.Sum<System.Collections.Generic.KeyValuePair<TKey, TValue>>(System.Func<System.Collections.Generic.KeyValuePair<TKey, TValue>, System.Decimal>)
  fullname.vb: System.Linq.Enumerable.Sum(Of System.Collections.Generic.KeyValuePair(Of TKey, TValue))(System.Func(Of System.Collections.Generic.KeyValuePair(Of TKey, TValue), System.Decimal))
  name.vb: Sum(Of KeyValuePair(Of TKey, TValue))(Func(Of KeyValuePair(Of TKey, TValue), Decimal))
  spec.csharp:
  - uid: System.Linq.Enumerable.Sum``1(System.Func{``0,System.Decimal})
    name: Sum<KeyValuePair<TKey, TValue>>
    fullName: System.Linq.Enumerable.Sum<System.Collections.Generic.KeyValuePair<TKey, TValue>>
  - name: (
    fullName: (
  - uid: System.Func`2
    name: Func
    fullName: System.Func
    isExternal: true
  - name: <
    fullName: <
  - uid: System.Collections.Generic.KeyValuePair`2
    name: KeyValuePair
    fullName: System.Collections.Generic.KeyValuePair
    isExternal: true
  - name: <
    fullName: <
  - name: TKey
    fullName: TKey
  - name: ', '
    fullName: ', '
  - name: TValue
    fullName: TValue
  - name: '>'
    fullName: '>'
  - name: ', '
    fullName: ', '
  - uid: System.Decimal
    name: Decimal
    fullName: System.Decimal
    isExternal: true
  - name: '>'
    fullName: '>'
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Linq.Enumerable.Sum``1(System.Func{``0,System.Decimal})
    name: Sum(Of KeyValuePair(Of TKey, TValue))
    fullName: System.Linq.Enumerable.Sum(Of System.Collections.Generic.KeyValuePair(Of TKey, TValue))
  - name: (
    fullName: (
  - uid: System.Func`2
    name: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - uid: System.Collections.Generic.KeyValuePair`2
    name: KeyValuePair
    fullName: System.Collections.Generic.KeyValuePair
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - name: TKey
    fullName: TKey
  - name: ', '
    fullName: ', '
  - name: TValue
    fullName: TValue
  - name: )
    fullName: )
  - name: ', '
    fullName: ', '
  - uid: System.Decimal
    name: Decimal
    fullName: System.Decimal
    isExternal: true
  - name: )
    fullName: )
  - name: )
    fullName: )
  nameWithType: Enumerable.Sum<KeyValuePair<TKey, TValue>>(Func<KeyValuePair<TKey, TValue>, Decimal>)
  nameWithType.vb: Enumerable.Sum(Of KeyValuePair(Of TKey, TValue))(Func(Of KeyValuePair(Of TKey, TValue), Decimal))
  commentId: M:System.Linq.Enumerable.Sum``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Decimal})
- uid: System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{`0,`1}}.System.Linq.Enumerable.Sum``1(System.Func{System.Collections.Generic.KeyValuePair{{TKey},{TValue}},System.Double})
  parent: System.Linq.Enumerable
  definition: System.Linq.Enumerable.Sum``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Double})
  name: Sum<KeyValuePair<TKey, TValue>>(Func<KeyValuePair<TKey, TValue>, Double>)
  fullName: System.Linq.Enumerable.Sum<System.Collections.Generic.KeyValuePair<TKey, TValue>>(System.Func<System.Collections.Generic.KeyValuePair<TKey, TValue>, System.Double>)
  fullname.vb: System.Linq.Enumerable.Sum(Of System.Collections.Generic.KeyValuePair(Of TKey, TValue))(System.Func(Of System.Collections.Generic.KeyValuePair(Of TKey, TValue), System.Double))
  name.vb: Sum(Of KeyValuePair(Of TKey, TValue))(Func(Of KeyValuePair(Of TKey, TValue), Double))
  spec.csharp:
  - uid: System.Linq.Enumerable.Sum``1(System.Func{``0,System.Double})
    name: Sum<KeyValuePair<TKey, TValue>>
    fullName: System.Linq.Enumerable.Sum<System.Collections.Generic.KeyValuePair<TKey, TValue>>
  - name: (
    fullName: (
  - uid: System.Func`2
    name: Func
    fullName: System.Func
    isExternal: true
  - name: <
    fullName: <
  - uid: System.Collections.Generic.KeyValuePair`2
    name: KeyValuePair
    fullName: System.Collections.Generic.KeyValuePair
    isExternal: true
  - name: <
    fullName: <
  - name: TKey
    fullName: TKey
  - name: ', '
    fullName: ', '
  - name: TValue
    fullName: TValue
  - name: '>'
    fullName: '>'
  - name: ', '
    fullName: ', '
  - uid: System.Double
    name: Double
    fullName: System.Double
    isExternal: true
  - name: '>'
    fullName: '>'
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Linq.Enumerable.Sum``1(System.Func{``0,System.Double})
    name: Sum(Of KeyValuePair(Of TKey, TValue))
    fullName: System.Linq.Enumerable.Sum(Of System.Collections.Generic.KeyValuePair(Of TKey, TValue))
  - name: (
    fullName: (
  - uid: System.Func`2
    name: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - uid: System.Collections.Generic.KeyValuePair`2
    name: KeyValuePair
    fullName: System.Collections.Generic.KeyValuePair
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - name: TKey
    fullName: TKey
  - name: ', '
    fullName: ', '
  - name: TValue
    fullName: TValue
  - name: )
    fullName: )
  - name: ', '
    fullName: ', '
  - uid: System.Double
    name: Double
    fullName: System.Double
    isExternal: true
  - name: )
    fullName: )
  - name: )
    fullName: )
  nameWithType: Enumerable.Sum<KeyValuePair<TKey, TValue>>(Func<KeyValuePair<TKey, TValue>, Double>)
  nameWithType.vb: Enumerable.Sum(Of KeyValuePair(Of TKey, TValue))(Func(Of KeyValuePair(Of TKey, TValue), Double))
  commentId: M:System.Linq.Enumerable.Sum``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Double})
- uid: System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{`0,`1}}.System.Linq.Enumerable.Sum``1(System.Func{System.Collections.Generic.KeyValuePair{{TKey},{TValue}},System.Int32})
  parent: System.Linq.Enumerable
  definition: System.Linq.Enumerable.Sum``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32})
  name: Sum<KeyValuePair<TKey, TValue>>(Func<KeyValuePair<TKey, TValue>, Int32>)
  fullName: System.Linq.Enumerable.Sum<System.Collections.Generic.KeyValuePair<TKey, TValue>>(System.Func<System.Collections.Generic.KeyValuePair<TKey, TValue>, System.Int32>)
  fullname.vb: System.Linq.Enumerable.Sum(Of System.Collections.Generic.KeyValuePair(Of TKey, TValue))(System.Func(Of System.Collections.Generic.KeyValuePair(Of TKey, TValue), System.Int32))
  name.vb: Sum(Of KeyValuePair(Of TKey, TValue))(Func(Of KeyValuePair(Of TKey, TValue), Int32))
  spec.csharp:
  - uid: System.Linq.Enumerable.Sum``1(System.Func{``0,System.Int32})
    name: Sum<KeyValuePair<TKey, TValue>>
    fullName: System.Linq.Enumerable.Sum<System.Collections.Generic.KeyValuePair<TKey, TValue>>
  - name: (
    fullName: (
  - uid: System.Func`2
    name: Func
    fullName: System.Func
    isExternal: true
  - name: <
    fullName: <
  - uid: System.Collections.Generic.KeyValuePair`2
    name: KeyValuePair
    fullName: System.Collections.Generic.KeyValuePair
    isExternal: true
  - name: <
    fullName: <
  - name: TKey
    fullName: TKey
  - name: ', '
    fullName: ', '
  - name: TValue
    fullName: TValue
  - name: '>'
    fullName: '>'
  - name: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    fullName: System.Int32
    isExternal: true
  - name: '>'
    fullName: '>'
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Linq.Enumerable.Sum``1(System.Func{``0,System.Int32})
    name: Sum(Of KeyValuePair(Of TKey, TValue))
    fullName: System.Linq.Enumerable.Sum(Of System.Collections.Generic.KeyValuePair(Of TKey, TValue))
  - name: (
    fullName: (
  - uid: System.Func`2
    name: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - uid: System.Collections.Generic.KeyValuePair`2
    name: KeyValuePair
    fullName: System.Collections.Generic.KeyValuePair
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - name: TKey
    fullName: TKey
  - name: ', '
    fullName: ', '
  - name: TValue
    fullName: TValue
  - name: )
    fullName: )
  - name: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    fullName: )
  - name: )
    fullName: )
  nameWithType: Enumerable.Sum<KeyValuePair<TKey, TValue>>(Func<KeyValuePair<TKey, TValue>, Int32>)
  nameWithType.vb: Enumerable.Sum(Of KeyValuePair(Of TKey, TValue))(Func(Of KeyValuePair(Of TKey, TValue), Int32))
  commentId: M:System.Linq.Enumerable.Sum``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32})
- uid: System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{`0,`1}}.System.Linq.Enumerable.Sum``1(System.Func{System.Collections.Generic.KeyValuePair{{TKey},{TValue}},System.Int64})
  parent: System.Linq.Enumerable
  definition: System.Linq.Enumerable.Sum``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int64})
  name: Sum<KeyValuePair<TKey, TValue>>(Func<KeyValuePair<TKey, TValue>, Int64>)
  fullName: System.Linq.Enumerable.Sum<System.Collections.Generic.KeyValuePair<TKey, TValue>>(System.Func<System.Collections.Generic.KeyValuePair<TKey, TValue>, System.Int64>)
  fullname.vb: System.Linq.Enumerable.Sum(Of System.Collections.Generic.KeyValuePair(Of TKey, TValue))(System.Func(Of System.Collections.Generic.KeyValuePair(Of TKey, TValue), System.Int64))
  name.vb: Sum(Of KeyValuePair(Of TKey, TValue))(Func(Of KeyValuePair(Of TKey, TValue), Int64))
  spec.csharp:
  - uid: System.Linq.Enumerable.Sum``1(System.Func{``0,System.Int64})
    name: Sum<KeyValuePair<TKey, TValue>>
    fullName: System.Linq.Enumerable.Sum<System.Collections.Generic.KeyValuePair<TKey, TValue>>
  - name: (
    fullName: (
  - uid: System.Func`2
    name: Func
    fullName: System.Func
    isExternal: true
  - name: <
    fullName: <
  - uid: System.Collections.Generic.KeyValuePair`2
    name: KeyValuePair
    fullName: System.Collections.Generic.KeyValuePair
    isExternal: true
  - name: <
    fullName: <
  - name: TKey
    fullName: TKey
  - name: ', '
    fullName: ', '
  - name: TValue
    fullName: TValue
  - name: '>'
    fullName: '>'
  - name: ', '
    fullName: ', '
  - uid: System.Int64
    name: Int64
    fullName: System.Int64
    isExternal: true
  - name: '>'
    fullName: '>'
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Linq.Enumerable.Sum``1(System.Func{``0,System.Int64})
    name: Sum(Of KeyValuePair(Of TKey, TValue))
    fullName: System.Linq.Enumerable.Sum(Of System.Collections.Generic.KeyValuePair(Of TKey, TValue))
  - name: (
    fullName: (
  - uid: System.Func`2
    name: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - uid: System.Collections.Generic.KeyValuePair`2
    name: KeyValuePair
    fullName: System.Collections.Generic.KeyValuePair
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - name: TKey
    fullName: TKey
  - name: ', '
    fullName: ', '
  - name: TValue
    fullName: TValue
  - name: )
    fullName: )
  - name: ', '
    fullName: ', '
  - uid: System.Int64
    name: Int64
    fullName: System.Int64
    isExternal: true
  - name: )
    fullName: )
  - name: )
    fullName: )
  nameWithType: Enumerable.Sum<KeyValuePair<TKey, TValue>>(Func<KeyValuePair<TKey, TValue>, Int64>)
  nameWithType.vb: Enumerable.Sum(Of KeyValuePair(Of TKey, TValue))(Func(Of KeyValuePair(Of TKey, TValue), Int64))
  commentId: M:System.Linq.Enumerable.Sum``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int64})
- uid: System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{`0,`1}}.System.Linq.Enumerable.Sum``1(System.Func{System.Collections.Generic.KeyValuePair{{TKey},{TValue}},System.Nullable{System.Decimal}})
  parent: System.Linq.Enumerable
  definition: System.Linq.Enumerable.Sum``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Decimal}})
  name: Sum<KeyValuePair<TKey, TValue>>(Func<KeyValuePair<TKey, TValue>, Nullable<Decimal>>)
  fullName: System.Linq.Enumerable.Sum<System.Collections.Generic.KeyValuePair<TKey, TValue>>(System.Func<System.Collections.Generic.KeyValuePair<TKey, TValue>, System.Nullable<System.Decimal>>)
  fullname.vb: System.Linq.Enumerable.Sum(Of System.Collections.Generic.KeyValuePair(Of TKey, TValue))(System.Func(Of System.Collections.Generic.KeyValuePair(Of TKey, TValue), System.Nullable(Of System.Decimal)))
  name.vb: Sum(Of KeyValuePair(Of TKey, TValue))(Func(Of KeyValuePair(Of TKey, TValue), Nullable(Of Decimal)))
  spec.csharp:
  - uid: System.Linq.Enumerable.Sum``1(System.Func{``0,System.Nullable{System.Decimal}})
    name: Sum<KeyValuePair<TKey, TValue>>
    fullName: System.Linq.Enumerable.Sum<System.Collections.Generic.KeyValuePair<TKey, TValue>>
  - name: (
    fullName: (
  - uid: System.Func`2
    name: Func
    fullName: System.Func
    isExternal: true
  - name: <
    fullName: <
  - uid: System.Collections.Generic.KeyValuePair`2
    name: KeyValuePair
    fullName: System.Collections.Generic.KeyValuePair
    isExternal: true
  - name: <
    fullName: <
  - name: TKey
    fullName: TKey
  - name: ', '
    fullName: ', '
  - name: TValue
    fullName: TValue
  - name: '>'
    fullName: '>'
  - name: ', '
    fullName: ', '
  - uid: System.Nullable`1
    name: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    fullName: <
  - uid: System.Decimal
    name: Decimal
    fullName: System.Decimal
    isExternal: true
  - name: '>'
    fullName: '>'
  - name: '>'
    fullName: '>'
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Linq.Enumerable.Sum``1(System.Func{``0,System.Nullable{System.Decimal}})
    name: Sum(Of KeyValuePair(Of TKey, TValue))
    fullName: System.Linq.Enumerable.Sum(Of System.Collections.Generic.KeyValuePair(Of TKey, TValue))
  - name: (
    fullName: (
  - uid: System.Func`2
    name: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - uid: System.Collections.Generic.KeyValuePair`2
    name: KeyValuePair
    fullName: System.Collections.Generic.KeyValuePair
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - name: TKey
    fullName: TKey
  - name: ', '
    fullName: ', '
  - name: TValue
    fullName: TValue
  - name: )
    fullName: )
  - name: ', '
    fullName: ', '
  - uid: System.Nullable`1
    name: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - uid: System.Decimal
    name: Decimal
    fullName: System.Decimal
    isExternal: true
  - name: )
    fullName: )
  - name: )
    fullName: )
  - name: )
    fullName: )
  nameWithType: Enumerable.Sum<KeyValuePair<TKey, TValue>>(Func<KeyValuePair<TKey, TValue>, Nullable<Decimal>>)
  nameWithType.vb: Enumerable.Sum(Of KeyValuePair(Of TKey, TValue))(Func(Of KeyValuePair(Of TKey, TValue), Nullable(Of Decimal)))
  commentId: M:System.Linq.Enumerable.Sum``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Decimal}})
- uid: System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{`0,`1}}.System.Linq.Enumerable.Sum``1(System.Func{System.Collections.Generic.KeyValuePair{{TKey},{TValue}},System.Nullable{System.Double}})
  parent: System.Linq.Enumerable
  definition: System.Linq.Enumerable.Sum``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Double}})
  name: Sum<KeyValuePair<TKey, TValue>>(Func<KeyValuePair<TKey, TValue>, Nullable<Double>>)
  fullName: System.Linq.Enumerable.Sum<System.Collections.Generic.KeyValuePair<TKey, TValue>>(System.Func<System.Collections.Generic.KeyValuePair<TKey, TValue>, System.Nullable<System.Double>>)
  fullname.vb: System.Linq.Enumerable.Sum(Of System.Collections.Generic.KeyValuePair(Of TKey, TValue))(System.Func(Of System.Collections.Generic.KeyValuePair(Of TKey, TValue), System.Nullable(Of System.Double)))
  name.vb: Sum(Of KeyValuePair(Of TKey, TValue))(Func(Of KeyValuePair(Of TKey, TValue), Nullable(Of Double)))
  spec.csharp:
  - uid: System.Linq.Enumerable.Sum``1(System.Func{``0,System.Nullable{System.Double}})
    name: Sum<KeyValuePair<TKey, TValue>>
    fullName: System.Linq.Enumerable.Sum<System.Collections.Generic.KeyValuePair<TKey, TValue>>
  - name: (
    fullName: (
  - uid: System.Func`2
    name: Func
    fullName: System.Func
    isExternal: true
  - name: <
    fullName: <
  - uid: System.Collections.Generic.KeyValuePair`2
    name: KeyValuePair
    fullName: System.Collections.Generic.KeyValuePair
    isExternal: true
  - name: <
    fullName: <
  - name: TKey
    fullName: TKey
  - name: ', '
    fullName: ', '
  - name: TValue
    fullName: TValue
  - name: '>'
    fullName: '>'
  - name: ', '
    fullName: ', '
  - uid: System.Nullable`1
    name: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    fullName: <
  - uid: System.Double
    name: Double
    fullName: System.Double
    isExternal: true
  - name: '>'
    fullName: '>'
  - name: '>'
    fullName: '>'
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Linq.Enumerable.Sum``1(System.Func{``0,System.Nullable{System.Double}})
    name: Sum(Of KeyValuePair(Of TKey, TValue))
    fullName: System.Linq.Enumerable.Sum(Of System.Collections.Generic.KeyValuePair(Of TKey, TValue))
  - name: (
    fullName: (
  - uid: System.Func`2
    name: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - uid: System.Collections.Generic.KeyValuePair`2
    name: KeyValuePair
    fullName: System.Collections.Generic.KeyValuePair
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - name: TKey
    fullName: TKey
  - name: ', '
    fullName: ', '
  - name: TValue
    fullName: TValue
  - name: )
    fullName: )
  - name: ', '
    fullName: ', '
  - uid: System.Nullable`1
    name: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - uid: System.Double
    name: Double
    fullName: System.Double
    isExternal: true
  - name: )
    fullName: )
  - name: )
    fullName: )
  - name: )
    fullName: )
  nameWithType: Enumerable.Sum<KeyValuePair<TKey, TValue>>(Func<KeyValuePair<TKey, TValue>, Nullable<Double>>)
  nameWithType.vb: Enumerable.Sum(Of KeyValuePair(Of TKey, TValue))(Func(Of KeyValuePair(Of TKey, TValue), Nullable(Of Double)))
  commentId: M:System.Linq.Enumerable.Sum``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Double}})
- uid: System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{`0,`1}}.System.Linq.Enumerable.Sum``1(System.Func{System.Collections.Generic.KeyValuePair{{TKey},{TValue}},System.Nullable{System.Int32}})
  parent: System.Linq.Enumerable
  definition: System.Linq.Enumerable.Sum``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Int32}})
  name: Sum<KeyValuePair<TKey, TValue>>(Func<KeyValuePair<TKey, TValue>, Nullable<Int32>>)
  fullName: System.Linq.Enumerable.Sum<System.Collections.Generic.KeyValuePair<TKey, TValue>>(System.Func<System.Collections.Generic.KeyValuePair<TKey, TValue>, System.Nullable<System.Int32>>)
  fullname.vb: System.Linq.Enumerable.Sum(Of System.Collections.Generic.KeyValuePair(Of TKey, TValue))(System.Func(Of System.Collections.Generic.KeyValuePair(Of TKey, TValue), System.Nullable(Of System.Int32)))
  name.vb: Sum(Of KeyValuePair(Of TKey, TValue))(Func(Of KeyValuePair(Of TKey, TValue), Nullable(Of Int32)))
  spec.csharp:
  - uid: System.Linq.Enumerable.Sum``1(System.Func{``0,System.Nullable{System.Int32}})
    name: Sum<KeyValuePair<TKey, TValue>>
    fullName: System.Linq.Enumerable.Sum<System.Collections.Generic.KeyValuePair<TKey, TValue>>
  - name: (
    fullName: (
  - uid: System.Func`2
    name: Func
    fullName: System.Func
    isExternal: true
  - name: <
    fullName: <
  - uid: System.Collections.Generic.KeyValuePair`2
    name: KeyValuePair
    fullName: System.Collections.Generic.KeyValuePair
    isExternal: true
  - name: <
    fullName: <
  - name: TKey
    fullName: TKey
  - name: ', '
    fullName: ', '
  - name: TValue
    fullName: TValue
  - name: '>'
    fullName: '>'
  - name: ', '
    fullName: ', '
  - uid: System.Nullable`1
    name: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    fullName: <
  - uid: System.Int32
    name: Int32
    fullName: System.Int32
    isExternal: true
  - name: '>'
    fullName: '>'
  - name: '>'
    fullName: '>'
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Linq.Enumerable.Sum``1(System.Func{``0,System.Nullable{System.Int32}})
    name: Sum(Of KeyValuePair(Of TKey, TValue))
    fullName: System.Linq.Enumerable.Sum(Of System.Collections.Generic.KeyValuePair(Of TKey, TValue))
  - name: (
    fullName: (
  - uid: System.Func`2
    name: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - uid: System.Collections.Generic.KeyValuePair`2
    name: KeyValuePair
    fullName: System.Collections.Generic.KeyValuePair
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - name: TKey
    fullName: TKey
  - name: ', '
    fullName: ', '
  - name: TValue
    fullName: TValue
  - name: )
    fullName: )
  - name: ', '
    fullName: ', '
  - uid: System.Nullable`1
    name: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - uid: System.Int32
    name: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    fullName: )
  - name: )
    fullName: )
  - name: )
    fullName: )
  nameWithType: Enumerable.Sum<KeyValuePair<TKey, TValue>>(Func<KeyValuePair<TKey, TValue>, Nullable<Int32>>)
  nameWithType.vb: Enumerable.Sum(Of KeyValuePair(Of TKey, TValue))(Func(Of KeyValuePair(Of TKey, TValue), Nullable(Of Int32)))
  commentId: M:System.Linq.Enumerable.Sum``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Int32}})
- uid: System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{`0,`1}}.System.Linq.Enumerable.Sum``1(System.Func{System.Collections.Generic.KeyValuePair{{TKey},{TValue}},System.Nullable{System.Int64}})
  parent: System.Linq.Enumerable
  definition: System.Linq.Enumerable.Sum``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Int64}})
  name: Sum<KeyValuePair<TKey, TValue>>(Func<KeyValuePair<TKey, TValue>, Nullable<Int64>>)
  fullName: System.Linq.Enumerable.Sum<System.Collections.Generic.KeyValuePair<TKey, TValue>>(System.Func<System.Collections.Generic.KeyValuePair<TKey, TValue>, System.Nullable<System.Int64>>)
  fullname.vb: System.Linq.Enumerable.Sum(Of System.Collections.Generic.KeyValuePair(Of TKey, TValue))(System.Func(Of System.Collections.Generic.KeyValuePair(Of TKey, TValue), System.Nullable(Of System.Int64)))
  name.vb: Sum(Of KeyValuePair(Of TKey, TValue))(Func(Of KeyValuePair(Of TKey, TValue), Nullable(Of Int64)))
  spec.csharp:
  - uid: System.Linq.Enumerable.Sum``1(System.Func{``0,System.Nullable{System.Int64}})
    name: Sum<KeyValuePair<TKey, TValue>>
    fullName: System.Linq.Enumerable.Sum<System.Collections.Generic.KeyValuePair<TKey, TValue>>
  - name: (
    fullName: (
  - uid: System.Func`2
    name: Func
    fullName: System.Func
    isExternal: true
  - name: <
    fullName: <
  - uid: System.Collections.Generic.KeyValuePair`2
    name: KeyValuePair
    fullName: System.Collections.Generic.KeyValuePair
    isExternal: true
  - name: <
    fullName: <
  - name: TKey
    fullName: TKey
  - name: ', '
    fullName: ', '
  - name: TValue
    fullName: TValue
  - name: '>'
    fullName: '>'
  - name: ', '
    fullName: ', '
  - uid: System.Nullable`1
    name: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    fullName: <
  - uid: System.Int64
    name: Int64
    fullName: System.Int64
    isExternal: true
  - name: '>'
    fullName: '>'
  - name: '>'
    fullName: '>'
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Linq.Enumerable.Sum``1(System.Func{``0,System.Nullable{System.Int64}})
    name: Sum(Of KeyValuePair(Of TKey, TValue))
    fullName: System.Linq.Enumerable.Sum(Of System.Collections.Generic.KeyValuePair(Of TKey, TValue))
  - name: (
    fullName: (
  - uid: System.Func`2
    name: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - uid: System.Collections.Generic.KeyValuePair`2
    name: KeyValuePair
    fullName: System.Collections.Generic.KeyValuePair
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - name: TKey
    fullName: TKey
  - name: ', '
    fullName: ', '
  - name: TValue
    fullName: TValue
  - name: )
    fullName: )
  - name: ', '
    fullName: ', '
  - uid: System.Nullable`1
    name: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - uid: System.Int64
    name: Int64
    fullName: System.Int64
    isExternal: true
  - name: )
    fullName: )
  - name: )
    fullName: )
  - name: )
    fullName: )
  nameWithType: Enumerable.Sum<KeyValuePair<TKey, TValue>>(Func<KeyValuePair<TKey, TValue>, Nullable<Int64>>)
  nameWithType.vb: Enumerable.Sum(Of KeyValuePair(Of TKey, TValue))(Func(Of KeyValuePair(Of TKey, TValue), Nullable(Of Int64)))
  commentId: M:System.Linq.Enumerable.Sum``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Int64}})
- uid: System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{`0,`1}}.System.Linq.Enumerable.Sum``1(System.Func{System.Collections.Generic.KeyValuePair{{TKey},{TValue}},System.Nullable{System.Single}})
  parent: System.Linq.Enumerable
  definition: System.Linq.Enumerable.Sum``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Single}})
  name: Sum<KeyValuePair<TKey, TValue>>(Func<KeyValuePair<TKey, TValue>, Nullable<Single>>)
  fullName: System.Linq.Enumerable.Sum<System.Collections.Generic.KeyValuePair<TKey, TValue>>(System.Func<System.Collections.Generic.KeyValuePair<TKey, TValue>, System.Nullable<System.Single>>)
  fullname.vb: System.Linq.Enumerable.Sum(Of System.Collections.Generic.KeyValuePair(Of TKey, TValue))(System.Func(Of System.Collections.Generic.KeyValuePair(Of TKey, TValue), System.Nullable(Of System.Single)))
  name.vb: Sum(Of KeyValuePair(Of TKey, TValue))(Func(Of KeyValuePair(Of TKey, TValue), Nullable(Of Single)))
  spec.csharp:
  - uid: System.Linq.Enumerable.Sum``1(System.Func{``0,System.Nullable{System.Single}})
    name: Sum<KeyValuePair<TKey, TValue>>
    fullName: System.Linq.Enumerable.Sum<System.Collections.Generic.KeyValuePair<TKey, TValue>>
  - name: (
    fullName: (
  - uid: System.Func`2
    name: Func
    fullName: System.Func
    isExternal: true
  - name: <
    fullName: <
  - uid: System.Collections.Generic.KeyValuePair`2
    name: KeyValuePair
    fullName: System.Collections.Generic.KeyValuePair
    isExternal: true
  - name: <
    fullName: <
  - name: TKey
    fullName: TKey
  - name: ', '
    fullName: ', '
  - name: TValue
    fullName: TValue
  - name: '>'
    fullName: '>'
  - name: ', '
    fullName: ', '
  - uid: System.Nullable`1
    name: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    fullName: <
  - uid: System.Single
    name: Single
    fullName: System.Single
    isExternal: true
  - name: '>'
    fullName: '>'
  - name: '>'
    fullName: '>'
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Linq.Enumerable.Sum``1(System.Func{``0,System.Nullable{System.Single}})
    name: Sum(Of KeyValuePair(Of TKey, TValue))
    fullName: System.Linq.Enumerable.Sum(Of System.Collections.Generic.KeyValuePair(Of TKey, TValue))
  - name: (
    fullName: (
  - uid: System.Func`2
    name: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - uid: System.Collections.Generic.KeyValuePair`2
    name: KeyValuePair
    fullName: System.Collections.Generic.KeyValuePair
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - name: TKey
    fullName: TKey
  - name: ', '
    fullName: ', '
  - name: TValue
    fullName: TValue
  - name: )
    fullName: )
  - name: ', '
    fullName: ', '
  - uid: System.Nullable`1
    name: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - uid: System.Single
    name: Single
    fullName: System.Single
    isExternal: true
  - name: )
    fullName: )
  - name: )
    fullName: )
  - name: )
    fullName: )
  nameWithType: Enumerable.Sum<KeyValuePair<TKey, TValue>>(Func<KeyValuePair<TKey, TValue>, Nullable<Single>>)
  nameWithType.vb: Enumerable.Sum(Of KeyValuePair(Of TKey, TValue))(Func(Of KeyValuePair(Of TKey, TValue), Nullable(Of Single)))
  commentId: M:System.Linq.Enumerable.Sum``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Single}})
- uid: System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{`0,`1}}.System.Linq.Enumerable.Sum``1(System.Func{System.Collections.Generic.KeyValuePair{{TKey},{TValue}},System.Single})
  parent: System.Linq.Enumerable
  definition: System.Linq.Enumerable.Sum``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Single})
  name: Sum<KeyValuePair<TKey, TValue>>(Func<KeyValuePair<TKey, TValue>, Single>)
  fullName: System.Linq.Enumerable.Sum<System.Collections.Generic.KeyValuePair<TKey, TValue>>(System.Func<System.Collections.Generic.KeyValuePair<TKey, TValue>, System.Single>)
  fullname.vb: System.Linq.Enumerable.Sum(Of System.Collections.Generic.KeyValuePair(Of TKey, TValue))(System.Func(Of System.Collections.Generic.KeyValuePair(Of TKey, TValue), System.Single))
  name.vb: Sum(Of KeyValuePair(Of TKey, TValue))(Func(Of KeyValuePair(Of TKey, TValue), Single))
  spec.csharp:
  - uid: System.Linq.Enumerable.Sum``1(System.Func{``0,System.Single})
    name: Sum<KeyValuePair<TKey, TValue>>
    fullName: System.Linq.Enumerable.Sum<System.Collections.Generic.KeyValuePair<TKey, TValue>>
  - name: (
    fullName: (
  - uid: System.Func`2
    name: Func
    fullName: System.Func
    isExternal: true
  - name: <
    fullName: <
  - uid: System.Collections.Generic.KeyValuePair`2
    name: KeyValuePair
    fullName: System.Collections.Generic.KeyValuePair
    isExternal: true
  - name: <
    fullName: <
  - name: TKey
    fullName: TKey
  - name: ', '
    fullName: ', '
  - name: TValue
    fullName: TValue
  - name: '>'
    fullName: '>'
  - name: ', '
    fullName: ', '
  - uid: System.Single
    name: Single
    fullName: System.Single
    isExternal: true
  - name: '>'
    fullName: '>'
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Linq.Enumerable.Sum``1(System.Func{``0,System.Single})
    name: Sum(Of KeyValuePair(Of TKey, TValue))
    fullName: System.Linq.Enumerable.Sum(Of System.Collections.Generic.KeyValuePair(Of TKey, TValue))
  - name: (
    fullName: (
  - uid: System.Func`2
    name: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - uid: System.Collections.Generic.KeyValuePair`2
    name: KeyValuePair
    fullName: System.Collections.Generic.KeyValuePair
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - name: TKey
    fullName: TKey
  - name: ', '
    fullName: ', '
  - name: TValue
    fullName: TValue
  - name: )
    fullName: )
  - name: ', '
    fullName: ', '
  - uid: System.Single
    name: Single
    fullName: System.Single
    isExternal: true
  - name: )
    fullName: )
  - name: )
    fullName: )
  nameWithType: Enumerable.Sum<KeyValuePair<TKey, TValue>>(Func<KeyValuePair<TKey, TValue>, Single>)
  nameWithType.vb: Enumerable.Sum(Of KeyValuePair(Of TKey, TValue))(Func(Of KeyValuePair(Of TKey, TValue), Single))
  commentId: M:System.Linq.Enumerable.Sum``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Single})
- uid: System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{`0,`1}}.System.Linq.Enumerable.Take``1(System.Int32)
  parent: System.Linq.Enumerable
  definition: System.Linq.Enumerable.Take``1(System.Collections.Generic.IEnumerable{``0},System.Int32)
  name: Take<KeyValuePair<TKey, TValue>>(Int32)
  fullName: System.Linq.Enumerable.Take<System.Collections.Generic.KeyValuePair<TKey, TValue>>(System.Int32)
  fullname.vb: System.Linq.Enumerable.Take(Of System.Collections.Generic.KeyValuePair(Of TKey, TValue))(System.Int32)
  name.vb: Take(Of KeyValuePair(Of TKey, TValue))(Int32)
  spec.csharp:
  - uid: System.Linq.Enumerable.Take``1(System.Int32)
    name: Take<KeyValuePair<TKey, TValue>>
    fullName: System.Linq.Enumerable.Take<System.Collections.Generic.KeyValuePair<TKey, TValue>>
  - name: (
    fullName: (
  - uid: System.Int32
    name: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Linq.Enumerable.Take``1(System.Int32)
    name: Take(Of KeyValuePair(Of TKey, TValue))
    fullName: System.Linq.Enumerable.Take(Of System.Collections.Generic.KeyValuePair(Of TKey, TValue))
  - name: (
    fullName: (
  - uid: System.Int32
    name: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    fullName: )
  nameWithType: Enumerable.Take<KeyValuePair<TKey, TValue>>(Int32)
  nameWithType.vb: Enumerable.Take(Of KeyValuePair(Of TKey, TValue))(Int32)
  commentId: M:System.Linq.Enumerable.Take``1(System.Collections.Generic.IEnumerable{``0},System.Int32)
- uid: System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{`0,`1}}.System.Linq.Enumerable.TakeWhile``1(System.Func{System.Collections.Generic.KeyValuePair{{TKey},{TValue}},System.Boolean})
  parent: System.Linq.Enumerable
  definition: System.Linq.Enumerable.TakeWhile``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})
  name: TakeWhile<KeyValuePair<TKey, TValue>>(Func<KeyValuePair<TKey, TValue>, Boolean>)
  fullName: System.Linq.Enumerable.TakeWhile<System.Collections.Generic.KeyValuePair<TKey, TValue>>(System.Func<System.Collections.Generic.KeyValuePair<TKey, TValue>, System.Boolean>)
  fullname.vb: System.Linq.Enumerable.TakeWhile(Of System.Collections.Generic.KeyValuePair(Of TKey, TValue))(System.Func(Of System.Collections.Generic.KeyValuePair(Of TKey, TValue), System.Boolean))
  name.vb: TakeWhile(Of KeyValuePair(Of TKey, TValue))(Func(Of KeyValuePair(Of TKey, TValue), Boolean))
  spec.csharp:
  - uid: System.Linq.Enumerable.TakeWhile``1(System.Func{``0,System.Boolean})
    name: TakeWhile<KeyValuePair<TKey, TValue>>
    fullName: System.Linq.Enumerable.TakeWhile<System.Collections.Generic.KeyValuePair<TKey, TValue>>
  - name: (
    fullName: (
  - uid: System.Func`2
    name: Func
    fullName: System.Func
    isExternal: true
  - name: <
    fullName: <
  - uid: System.Collections.Generic.KeyValuePair`2
    name: KeyValuePair
    fullName: System.Collections.Generic.KeyValuePair
    isExternal: true
  - name: <
    fullName: <
  - name: TKey
    fullName: TKey
  - name: ', '
    fullName: ', '
  - name: TValue
    fullName: TValue
  - name: '>'
    fullName: '>'
  - name: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: '>'
    fullName: '>'
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Linq.Enumerable.TakeWhile``1(System.Func{``0,System.Boolean})
    name: TakeWhile(Of KeyValuePair(Of TKey, TValue))
    fullName: System.Linq.Enumerable.TakeWhile(Of System.Collections.Generic.KeyValuePair(Of TKey, TValue))
  - name: (
    fullName: (
  - uid: System.Func`2
    name: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - uid: System.Collections.Generic.KeyValuePair`2
    name: KeyValuePair
    fullName: System.Collections.Generic.KeyValuePair
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - name: TKey
    fullName: TKey
  - name: ', '
    fullName: ', '
  - name: TValue
    fullName: TValue
  - name: )
    fullName: )
  - name: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    fullName: )
  - name: )
    fullName: )
  nameWithType: Enumerable.TakeWhile<KeyValuePair<TKey, TValue>>(Func<KeyValuePair<TKey, TValue>, Boolean>)
  nameWithType.vb: Enumerable.TakeWhile(Of KeyValuePair(Of TKey, TValue))(Func(Of KeyValuePair(Of TKey, TValue), Boolean))
  commentId: M:System.Linq.Enumerable.TakeWhile``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})
- uid: System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{`0,`1}}.System.Linq.Enumerable.TakeWhile``1(System.Func{System.Collections.Generic.KeyValuePair{{TKey},{TValue}},System.Int32,System.Boolean})
  parent: System.Linq.Enumerable
  definition: System.Linq.Enumerable.TakeWhile``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32,System.Boolean})
  name: TakeWhile<KeyValuePair<TKey, TValue>>(Func<KeyValuePair<TKey, TValue>, Int32, Boolean>)
  fullName: System.Linq.Enumerable.TakeWhile<System.Collections.Generic.KeyValuePair<TKey, TValue>>(System.Func<System.Collections.Generic.KeyValuePair<TKey, TValue>, System.Int32, System.Boolean>)
  fullname.vb: System.Linq.Enumerable.TakeWhile(Of System.Collections.Generic.KeyValuePair(Of TKey, TValue))(System.Func(Of System.Collections.Generic.KeyValuePair(Of TKey, TValue), System.Int32, System.Boolean))
  name.vb: TakeWhile(Of KeyValuePair(Of TKey, TValue))(Func(Of KeyValuePair(Of TKey, TValue), Int32, Boolean))
  spec.csharp:
  - uid: System.Linq.Enumerable.TakeWhile``1(System.Func{``0,System.Int32,System.Boolean})
    name: TakeWhile<KeyValuePair<TKey, TValue>>
    fullName: System.Linq.Enumerable.TakeWhile<System.Collections.Generic.KeyValuePair<TKey, TValue>>
  - name: (
    fullName: (
  - uid: System.Func`3
    name: Func
    fullName: System.Func
    isExternal: true
  - name: <
    fullName: <
  - uid: System.Collections.Generic.KeyValuePair`2
    name: KeyValuePair
    fullName: System.Collections.Generic.KeyValuePair
    isExternal: true
  - name: <
    fullName: <
  - name: TKey
    fullName: TKey
  - name: ', '
    fullName: ', '
  - name: TValue
    fullName: TValue
  - name: '>'
    fullName: '>'
  - name: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: '>'
    fullName: '>'
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Linq.Enumerable.TakeWhile``1(System.Func{``0,System.Int32,System.Boolean})
    name: TakeWhile(Of KeyValuePair(Of TKey, TValue))
    fullName: System.Linq.Enumerable.TakeWhile(Of System.Collections.Generic.KeyValuePair(Of TKey, TValue))
  - name: (
    fullName: (
  - uid: System.Func`3
    name: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - uid: System.Collections.Generic.KeyValuePair`2
    name: KeyValuePair
    fullName: System.Collections.Generic.KeyValuePair
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - name: TKey
    fullName: TKey
  - name: ', '
    fullName: ', '
  - name: TValue
    fullName: TValue
  - name: )
    fullName: )
  - name: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    fullName: )
  - name: )
    fullName: )
  nameWithType: Enumerable.TakeWhile<KeyValuePair<TKey, TValue>>(Func<KeyValuePair<TKey, TValue>, Int32, Boolean>)
  nameWithType.vb: Enumerable.TakeWhile(Of KeyValuePair(Of TKey, TValue))(Func(Of KeyValuePair(Of TKey, TValue), Int32, Boolean))
  commentId: M:System.Linq.Enumerable.TakeWhile``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32,System.Boolean})
- uid: System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{`0,`1}}.System.Linq.Enumerable.ToArray``1
  parent: System.Linq.Enumerable
  definition: System.Linq.Enumerable.ToArray``1(System.Collections.Generic.IEnumerable{``0})
  name: ToArray<KeyValuePair<TKey, TValue>>()
  fullName: System.Linq.Enumerable.ToArray<System.Collections.Generic.KeyValuePair<TKey, TValue>>()
  fullname.vb: System.Linq.Enumerable.ToArray(Of System.Collections.Generic.KeyValuePair(Of TKey, TValue))()
  name.vb: ToArray(Of KeyValuePair(Of TKey, TValue))()
  spec.csharp:
  - uid: System.Linq.Enumerable.ToArray``1
    name: ToArray<KeyValuePair<TKey, TValue>>
    fullName: System.Linq.Enumerable.ToArray<System.Collections.Generic.KeyValuePair<TKey, TValue>>
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Linq.Enumerable.ToArray``1
    name: ToArray(Of KeyValuePair(Of TKey, TValue))
    fullName: System.Linq.Enumerable.ToArray(Of System.Collections.Generic.KeyValuePair(Of TKey, TValue))
  - name: (
    fullName: (
  - name: )
    fullName: )
  nameWithType: Enumerable.ToArray<KeyValuePair<TKey, TValue>>()
  nameWithType.vb: Enumerable.ToArray(Of KeyValuePair(Of TKey, TValue))()
  commentId: M:System.Linq.Enumerable.ToArray``1(System.Collections.Generic.IEnumerable{``0})
- uid: System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{`0,`1}}.System.Linq.Enumerable.ToDictionary``2(System.Func{System.Collections.Generic.KeyValuePair{{TKey},{TValue}},{TKey}})
  parent: System.Linq.Enumerable
  definition: System.Linq.Enumerable.ToDictionary``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})
  name: ToDictionary<KeyValuePair<TKey, TValue>, TKey>(Func<KeyValuePair<TKey, TValue>, TKey>)
  fullName: System.Linq.Enumerable.ToDictionary<System.Collections.Generic.KeyValuePair<TKey, TValue>, TKey>(System.Func<System.Collections.Generic.KeyValuePair<TKey, TValue>, TKey>)
  fullname.vb: System.Linq.Enumerable.ToDictionary(Of System.Collections.Generic.KeyValuePair(Of TKey, TValue), TKey)(System.Func(Of System.Collections.Generic.KeyValuePair(Of TKey, TValue), TKey))
  name.vb: ToDictionary(Of KeyValuePair(Of TKey, TValue), TKey)(Func(Of KeyValuePair(Of TKey, TValue), TKey))
  spec.csharp:
  - uid: System.Linq.Enumerable.ToDictionary``2(System.Func{``0,``1})
    name: ToDictionary<KeyValuePair<TKey, TValue>, TKey>
    fullName: System.Linq.Enumerable.ToDictionary<System.Collections.Generic.KeyValuePair<TKey, TValue>, TKey>
  - name: (
    fullName: (
  - uid: System.Func`2
    name: Func
    fullName: System.Func
    isExternal: true
  - name: <
    fullName: <
  - uid: System.Collections.Generic.KeyValuePair`2
    name: KeyValuePair
    fullName: System.Collections.Generic.KeyValuePair
    isExternal: true
  - name: <
    fullName: <
  - name: TKey
    fullName: TKey
  - name: ', '
    fullName: ', '
  - name: TValue
    fullName: TValue
  - name: '>'
    fullName: '>'
  - name: ', '
    fullName: ', '
  - name: TKey
    fullName: TKey
  - name: '>'
    fullName: '>'
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Linq.Enumerable.ToDictionary``2(System.Func{``0,``1})
    name: ToDictionary(Of KeyValuePair(Of TKey, TValue), TKey)
    fullName: System.Linq.Enumerable.ToDictionary(Of System.Collections.Generic.KeyValuePair(Of TKey, TValue), TKey)
  - name: (
    fullName: (
  - uid: System.Func`2
    name: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - uid: System.Collections.Generic.KeyValuePair`2
    name: KeyValuePair
    fullName: System.Collections.Generic.KeyValuePair
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - name: TKey
    fullName: TKey
  - name: ', '
    fullName: ', '
  - name: TValue
    fullName: TValue
  - name: )
    fullName: )
  - name: ', '
    fullName: ', '
  - name: TKey
    fullName: TKey
  - name: )
    fullName: )
  - name: )
    fullName: )
  nameWithType: Enumerable.ToDictionary<KeyValuePair<TKey, TValue>, TKey>(Func<KeyValuePair<TKey, TValue>, TKey>)
  nameWithType.vb: Enumerable.ToDictionary(Of KeyValuePair(Of TKey, TValue), TKey)(Func(Of KeyValuePair(Of TKey, TValue), TKey))
  commentId: M:System.Linq.Enumerable.ToDictionary``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})
- uid: System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{`0,`1}}.System.Linq.Enumerable.ToDictionary``2(System.Func{System.Collections.Generic.KeyValuePair{{TKey},{TValue}},{TKey}},System.Collections.Generic.IEqualityComparer{{TKey}})
  parent: System.Linq.Enumerable
  definition: System.Linq.Enumerable.ToDictionary``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IEqualityComparer{``1})
  name: ToDictionary<KeyValuePair<TKey, TValue>, TKey>(Func<KeyValuePair<TKey, TValue>, TKey>, IEqualityComparer<TKey>)
  fullName: System.Linq.Enumerable.ToDictionary<System.Collections.Generic.KeyValuePair<TKey, TValue>, TKey>(System.Func<System.Collections.Generic.KeyValuePair<TKey, TValue>, TKey>, System.Collections.Generic.IEqualityComparer<TKey>)
  fullname.vb: System.Linq.Enumerable.ToDictionary(Of System.Collections.Generic.KeyValuePair(Of TKey, TValue), TKey)(System.Func(Of System.Collections.Generic.KeyValuePair(Of TKey, TValue), TKey), System.Collections.Generic.IEqualityComparer(Of TKey))
  name.vb: ToDictionary(Of KeyValuePair(Of TKey, TValue), TKey)(Func(Of KeyValuePair(Of TKey, TValue), TKey), IEqualityComparer(Of TKey))
  spec.csharp:
  - uid: System.Linq.Enumerable.ToDictionary``2(System.Func{``0,``1},System.Collections.Generic.IEqualityComparer{``1})
    name: ToDictionary<KeyValuePair<TKey, TValue>, TKey>
    fullName: System.Linq.Enumerable.ToDictionary<System.Collections.Generic.KeyValuePair<TKey, TValue>, TKey>
  - name: (
    fullName: (
  - uid: System.Func`2
    name: Func
    fullName: System.Func
    isExternal: true
  - name: <
    fullName: <
  - uid: System.Collections.Generic.KeyValuePair`2
    name: KeyValuePair
    fullName: System.Collections.Generic.KeyValuePair
    isExternal: true
  - name: <
    fullName: <
  - name: TKey
    fullName: TKey
  - name: ', '
    fullName: ', '
  - name: TValue
    fullName: TValue
  - name: '>'
    fullName: '>'
  - name: ', '
    fullName: ', '
  - name: TKey
    fullName: TKey
  - name: '>'
    fullName: '>'
  - name: ', '
    fullName: ', '
  - uid: System.Collections.Generic.IEqualityComparer`1
    name: IEqualityComparer
    fullName: System.Collections.Generic.IEqualityComparer
    isExternal: true
  - name: <
    fullName: <
  - name: TKey
    fullName: TKey
  - name: '>'
    fullName: '>'
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Linq.Enumerable.ToDictionary``2(System.Func{``0,``1},System.Collections.Generic.IEqualityComparer{``1})
    name: ToDictionary(Of KeyValuePair(Of TKey, TValue), TKey)
    fullName: System.Linq.Enumerable.ToDictionary(Of System.Collections.Generic.KeyValuePair(Of TKey, TValue), TKey)
  - name: (
    fullName: (
  - uid: System.Func`2
    name: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - uid: System.Collections.Generic.KeyValuePair`2
    name: KeyValuePair
    fullName: System.Collections.Generic.KeyValuePair
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - name: TKey
    fullName: TKey
  - name: ', '
    fullName: ', '
  - name: TValue
    fullName: TValue
  - name: )
    fullName: )
  - name: ', '
    fullName: ', '
  - name: TKey
    fullName: TKey
  - name: )
    fullName: )
  - name: ', '
    fullName: ', '
  - uid: System.Collections.Generic.IEqualityComparer`1
    name: IEqualityComparer
    fullName: System.Collections.Generic.IEqualityComparer
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - name: TKey
    fullName: TKey
  - name: )
    fullName: )
  - name: )
    fullName: )
  nameWithType: Enumerable.ToDictionary<KeyValuePair<TKey, TValue>, TKey>(Func<KeyValuePair<TKey, TValue>, TKey>, IEqualityComparer<TKey>)
  nameWithType.vb: Enumerable.ToDictionary(Of KeyValuePair(Of TKey, TValue), TKey)(Func(Of KeyValuePair(Of TKey, TValue), TKey), IEqualityComparer(Of TKey))
  commentId: M:System.Linq.Enumerable.ToDictionary``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IEqualityComparer{``1})
- uid: System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{`0,`1}}.System.Linq.Enumerable.ToDictionary``3(System.Func{System.Collections.Generic.KeyValuePair{{TKey},{TValue}},{TKey}},System.Func{System.Collections.Generic.KeyValuePair{{TKey},{TValue}},{TElement}})
  parent: System.Linq.Enumerable
  definition: System.Linq.Enumerable.ToDictionary``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2})
  name: ToDictionary<KeyValuePair<TKey, TValue>, TKey, TElement>(Func<KeyValuePair<TKey, TValue>, TKey>, Func<KeyValuePair<TKey, TValue>, TElement>)
  fullName: System.Linq.Enumerable.ToDictionary<System.Collections.Generic.KeyValuePair<TKey, TValue>, TKey, TElement>(System.Func<System.Collections.Generic.KeyValuePair<TKey, TValue>, TKey>, System.Func<System.Collections.Generic.KeyValuePair<TKey, TValue>, TElement>)
  fullname.vb: System.Linq.Enumerable.ToDictionary(Of System.Collections.Generic.KeyValuePair(Of TKey, TValue), TKey, TElement)(System.Func(Of System.Collections.Generic.KeyValuePair(Of TKey, TValue), TKey), System.Func(Of System.Collections.Generic.KeyValuePair(Of TKey, TValue), TElement))
  name.vb: ToDictionary(Of KeyValuePair(Of TKey, TValue), TKey, TElement)(Func(Of KeyValuePair(Of TKey, TValue), TKey), Func(Of KeyValuePair(Of TKey, TValue), TElement))
  spec.csharp:
  - uid: System.Linq.Enumerable.ToDictionary``3(System.Func{``0,``1},System.Func{``0,``2})
    name: ToDictionary<KeyValuePair<TKey, TValue>, TKey, TElement>
    fullName: System.Linq.Enumerable.ToDictionary<System.Collections.Generic.KeyValuePair<TKey, TValue>, TKey, TElement>
  - name: (
    fullName: (
  - uid: System.Func`2
    name: Func
    fullName: System.Func
    isExternal: true
  - name: <
    fullName: <
  - uid: System.Collections.Generic.KeyValuePair`2
    name: KeyValuePair
    fullName: System.Collections.Generic.KeyValuePair
    isExternal: true
  - name: <
    fullName: <
  - name: TKey
    fullName: TKey
  - name: ', '
    fullName: ', '
  - name: TValue
    fullName: TValue
  - name: '>'
    fullName: '>'
  - name: ', '
    fullName: ', '
  - name: TKey
    fullName: TKey
  - name: '>'
    fullName: '>'
  - name: ', '
    fullName: ', '
  - uid: System.Func`2
    name: Func
    fullName: System.Func
    isExternal: true
  - name: <
    fullName: <
  - uid: System.Collections.Generic.KeyValuePair`2
    name: KeyValuePair
    fullName: System.Collections.Generic.KeyValuePair
    isExternal: true
  - name: <
    fullName: <
  - name: TKey
    fullName: TKey
  - name: ', '
    fullName: ', '
  - name: TValue
    fullName: TValue
  - name: '>'
    fullName: '>'
  - name: ', '
    fullName: ', '
  - name: TElement
    fullName: TElement
  - name: '>'
    fullName: '>'
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Linq.Enumerable.ToDictionary``3(System.Func{``0,``1},System.Func{``0,``2})
    name: ToDictionary(Of KeyValuePair(Of TKey, TValue), TKey, TElement)
    fullName: System.Linq.Enumerable.ToDictionary(Of System.Collections.Generic.KeyValuePair(Of TKey, TValue), TKey, TElement)
  - name: (
    fullName: (
  - uid: System.Func`2
    name: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - uid: System.Collections.Generic.KeyValuePair`2
    name: KeyValuePair
    fullName: System.Collections.Generic.KeyValuePair
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - name: TKey
    fullName: TKey
  - name: ', '
    fullName: ', '
  - name: TValue
    fullName: TValue
  - name: )
    fullName: )
  - name: ', '
    fullName: ', '
  - name: TKey
    fullName: TKey
  - name: )
    fullName: )
  - name: ', '
    fullName: ', '
  - uid: System.Func`2
    name: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - uid: System.Collections.Generic.KeyValuePair`2
    name: KeyValuePair
    fullName: System.Collections.Generic.KeyValuePair
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - name: TKey
    fullName: TKey
  - name: ', '
    fullName: ', '
  - name: TValue
    fullName: TValue
  - name: )
    fullName: )
  - name: ', '
    fullName: ', '
  - name: TElement
    fullName: TElement
  - name: )
    fullName: )
  - name: )
    fullName: )
  nameWithType: Enumerable.ToDictionary<KeyValuePair<TKey, TValue>, TKey, TElement>(Func<KeyValuePair<TKey, TValue>, TKey>, Func<KeyValuePair<TKey, TValue>, TElement>)
  nameWithType.vb: Enumerable.ToDictionary(Of KeyValuePair(Of TKey, TValue), TKey, TElement)(Func(Of KeyValuePair(Of TKey, TValue), TKey), Func(Of KeyValuePair(Of TKey, TValue), TElement))
  commentId: M:System.Linq.Enumerable.ToDictionary``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2})
- uid: System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{`0,`1}}.System.Linq.Enumerable.ToDictionary``3(System.Func{System.Collections.Generic.KeyValuePair{{TKey},{TValue}},{TKey}},System.Func{System.Collections.Generic.KeyValuePair{{TKey},{TValue}},{TElement}},System.Collections.Generic.IEqualityComparer{{TKey}})
  parent: System.Linq.Enumerable
  definition: System.Linq.Enumerable.ToDictionary``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})
  name: ToDictionary<KeyValuePair<TKey, TValue>, TKey, TElement>(Func<KeyValuePair<TKey, TValue>, TKey>, Func<KeyValuePair<TKey, TValue>, TElement>, IEqualityComparer<TKey>)
  fullName: System.Linq.Enumerable.ToDictionary<System.Collections.Generic.KeyValuePair<TKey, TValue>, TKey, TElement>(System.Func<System.Collections.Generic.KeyValuePair<TKey, TValue>, TKey>, System.Func<System.Collections.Generic.KeyValuePair<TKey, TValue>, TElement>, System.Collections.Generic.IEqualityComparer<TKey>)
  fullname.vb: System.Linq.Enumerable.ToDictionary(Of System.Collections.Generic.KeyValuePair(Of TKey, TValue), TKey, TElement)(System.Func(Of System.Collections.Generic.KeyValuePair(Of TKey, TValue), TKey), System.Func(Of System.Collections.Generic.KeyValuePair(Of TKey, TValue), TElement), System.Collections.Generic.IEqualityComparer(Of TKey))
  name.vb: ToDictionary(Of KeyValuePair(Of TKey, TValue), TKey, TElement)(Func(Of KeyValuePair(Of TKey, TValue), TKey), Func(Of KeyValuePair(Of TKey, TValue), TElement), IEqualityComparer(Of TKey))
  spec.csharp:
  - uid: System.Linq.Enumerable.ToDictionary``3(System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})
    name: ToDictionary<KeyValuePair<TKey, TValue>, TKey, TElement>
    fullName: System.Linq.Enumerable.ToDictionary<System.Collections.Generic.KeyValuePair<TKey, TValue>, TKey, TElement>
  - name: (
    fullName: (
  - uid: System.Func`2
    name: Func
    fullName: System.Func
    isExternal: true
  - name: <
    fullName: <
  - uid: System.Collections.Generic.KeyValuePair`2
    name: KeyValuePair
    fullName: System.Collections.Generic.KeyValuePair
    isExternal: true
  - name: <
    fullName: <
  - name: TKey
    fullName: TKey
  - name: ', '
    fullName: ', '
  - name: TValue
    fullName: TValue
  - name: '>'
    fullName: '>'
  - name: ', '
    fullName: ', '
  - name: TKey
    fullName: TKey
  - name: '>'
    fullName: '>'
  - name: ', '
    fullName: ', '
  - uid: System.Func`2
    name: Func
    fullName: System.Func
    isExternal: true
  - name: <
    fullName: <
  - uid: System.Collections.Generic.KeyValuePair`2
    name: KeyValuePair
    fullName: System.Collections.Generic.KeyValuePair
    isExternal: true
  - name: <
    fullName: <
  - name: TKey
    fullName: TKey
  - name: ', '
    fullName: ', '
  - name: TValue
    fullName: TValue
  - name: '>'
    fullName: '>'
  - name: ', '
    fullName: ', '
  - name: TElement
    fullName: TElement
  - name: '>'
    fullName: '>'
  - name: ', '
    fullName: ', '
  - uid: System.Collections.Generic.IEqualityComparer`1
    name: IEqualityComparer
    fullName: System.Collections.Generic.IEqualityComparer
    isExternal: true
  - name: <
    fullName: <
  - name: TKey
    fullName: TKey
  - name: '>'
    fullName: '>'
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Linq.Enumerable.ToDictionary``3(System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})
    name: ToDictionary(Of KeyValuePair(Of TKey, TValue), TKey, TElement)
    fullName: System.Linq.Enumerable.ToDictionary(Of System.Collections.Generic.KeyValuePair(Of TKey, TValue), TKey, TElement)
  - name: (
    fullName: (
  - uid: System.Func`2
    name: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - uid: System.Collections.Generic.KeyValuePair`2
    name: KeyValuePair
    fullName: System.Collections.Generic.KeyValuePair
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - name: TKey
    fullName: TKey
  - name: ', '
    fullName: ', '
  - name: TValue
    fullName: TValue
  - name: )
    fullName: )
  - name: ', '
    fullName: ', '
  - name: TKey
    fullName: TKey
  - name: )
    fullName: )
  - name: ', '
    fullName: ', '
  - uid: System.Func`2
    name: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - uid: System.Collections.Generic.KeyValuePair`2
    name: KeyValuePair
    fullName: System.Collections.Generic.KeyValuePair
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - name: TKey
    fullName: TKey
  - name: ', '
    fullName: ', '
  - name: TValue
    fullName: TValue
  - name: )
    fullName: )
  - name: ', '
    fullName: ', '
  - name: TElement
    fullName: TElement
  - name: )
    fullName: )
  - name: ', '
    fullName: ', '
  - uid: System.Collections.Generic.IEqualityComparer`1
    name: IEqualityComparer
    fullName: System.Collections.Generic.IEqualityComparer
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - name: TKey
    fullName: TKey
  - name: )
    fullName: )
  - name: )
    fullName: )
  nameWithType: Enumerable.ToDictionary<KeyValuePair<TKey, TValue>, TKey, TElement>(Func<KeyValuePair<TKey, TValue>, TKey>, Func<KeyValuePair<TKey, TValue>, TElement>, IEqualityComparer<TKey>)
  nameWithType.vb: Enumerable.ToDictionary(Of KeyValuePair(Of TKey, TValue), TKey, TElement)(Func(Of KeyValuePair(Of TKey, TValue), TKey), Func(Of KeyValuePair(Of TKey, TValue), TElement), IEqualityComparer(Of TKey))
  commentId: M:System.Linq.Enumerable.ToDictionary``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})
- uid: System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{`0,`1}}.System.Linq.Enumerable.ToList``1
  parent: System.Linq.Enumerable
  definition: System.Linq.Enumerable.ToList``1(System.Collections.Generic.IEnumerable{``0})
  name: ToList<KeyValuePair<TKey, TValue>>()
  fullName: System.Linq.Enumerable.ToList<System.Collections.Generic.KeyValuePair<TKey, TValue>>()
  fullname.vb: System.Linq.Enumerable.ToList(Of System.Collections.Generic.KeyValuePair(Of TKey, TValue))()
  name.vb: ToList(Of KeyValuePair(Of TKey, TValue))()
  spec.csharp:
  - uid: System.Linq.Enumerable.ToList``1
    name: ToList<KeyValuePair<TKey, TValue>>
    fullName: System.Linq.Enumerable.ToList<System.Collections.Generic.KeyValuePair<TKey, TValue>>
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Linq.Enumerable.ToList``1
    name: ToList(Of KeyValuePair(Of TKey, TValue))
    fullName: System.Linq.Enumerable.ToList(Of System.Collections.Generic.KeyValuePair(Of TKey, TValue))
  - name: (
    fullName: (
  - name: )
    fullName: )
  nameWithType: Enumerable.ToList<KeyValuePair<TKey, TValue>>()
  nameWithType.vb: Enumerable.ToList(Of KeyValuePair(Of TKey, TValue))()
  commentId: M:System.Linq.Enumerable.ToList``1(System.Collections.Generic.IEnumerable{``0})
- uid: System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{`0,`1}}.System.Linq.Enumerable.ToLookup``2(System.Func{System.Collections.Generic.KeyValuePair{{TKey},{TValue}},{TKey}})
  parent: System.Linq.Enumerable
  definition: System.Linq.Enumerable.ToLookup``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})
  name: ToLookup<KeyValuePair<TKey, TValue>, TKey>(Func<KeyValuePair<TKey, TValue>, TKey>)
  fullName: System.Linq.Enumerable.ToLookup<System.Collections.Generic.KeyValuePair<TKey, TValue>, TKey>(System.Func<System.Collections.Generic.KeyValuePair<TKey, TValue>, TKey>)
  fullname.vb: System.Linq.Enumerable.ToLookup(Of System.Collections.Generic.KeyValuePair(Of TKey, TValue), TKey)(System.Func(Of System.Collections.Generic.KeyValuePair(Of TKey, TValue), TKey))
  name.vb: ToLookup(Of KeyValuePair(Of TKey, TValue), TKey)(Func(Of KeyValuePair(Of TKey, TValue), TKey))
  spec.csharp:
  - uid: System.Linq.Enumerable.ToLookup``2(System.Func{``0,``1})
    name: ToLookup<KeyValuePair<TKey, TValue>, TKey>
    fullName: System.Linq.Enumerable.ToLookup<System.Collections.Generic.KeyValuePair<TKey, TValue>, TKey>
  - name: (
    fullName: (
  - uid: System.Func`2
    name: Func
    fullName: System.Func
    isExternal: true
  - name: <
    fullName: <
  - uid: System.Collections.Generic.KeyValuePair`2
    name: KeyValuePair
    fullName: System.Collections.Generic.KeyValuePair
    isExternal: true
  - name: <
    fullName: <
  - name: TKey
    fullName: TKey
  - name: ', '
    fullName: ', '
  - name: TValue
    fullName: TValue
  - name: '>'
    fullName: '>'
  - name: ', '
    fullName: ', '
  - name: TKey
    fullName: TKey
  - name: '>'
    fullName: '>'
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Linq.Enumerable.ToLookup``2(System.Func{``0,``1})
    name: ToLookup(Of KeyValuePair(Of TKey, TValue), TKey)
    fullName: System.Linq.Enumerable.ToLookup(Of System.Collections.Generic.KeyValuePair(Of TKey, TValue), TKey)
  - name: (
    fullName: (
  - uid: System.Func`2
    name: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - uid: System.Collections.Generic.KeyValuePair`2
    name: KeyValuePair
    fullName: System.Collections.Generic.KeyValuePair
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - name: TKey
    fullName: TKey
  - name: ', '
    fullName: ', '
  - name: TValue
    fullName: TValue
  - name: )
    fullName: )
  - name: ', '
    fullName: ', '
  - name: TKey
    fullName: TKey
  - name: )
    fullName: )
  - name: )
    fullName: )
  nameWithType: Enumerable.ToLookup<KeyValuePair<TKey, TValue>, TKey>(Func<KeyValuePair<TKey, TValue>, TKey>)
  nameWithType.vb: Enumerable.ToLookup(Of KeyValuePair(Of TKey, TValue), TKey)(Func(Of KeyValuePair(Of TKey, TValue), TKey))
  commentId: M:System.Linq.Enumerable.ToLookup``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})
- uid: System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{`0,`1}}.System.Linq.Enumerable.ToLookup``2(System.Func{System.Collections.Generic.KeyValuePair{{TKey},{TValue}},{TKey}},System.Collections.Generic.IEqualityComparer{{TKey}})
  parent: System.Linq.Enumerable
  definition: System.Linq.Enumerable.ToLookup``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IEqualityComparer{``1})
  name: ToLookup<KeyValuePair<TKey, TValue>, TKey>(Func<KeyValuePair<TKey, TValue>, TKey>, IEqualityComparer<TKey>)
  fullName: System.Linq.Enumerable.ToLookup<System.Collections.Generic.KeyValuePair<TKey, TValue>, TKey>(System.Func<System.Collections.Generic.KeyValuePair<TKey, TValue>, TKey>, System.Collections.Generic.IEqualityComparer<TKey>)
  fullname.vb: System.Linq.Enumerable.ToLookup(Of System.Collections.Generic.KeyValuePair(Of TKey, TValue), TKey)(System.Func(Of System.Collections.Generic.KeyValuePair(Of TKey, TValue), TKey), System.Collections.Generic.IEqualityComparer(Of TKey))
  name.vb: ToLookup(Of KeyValuePair(Of TKey, TValue), TKey)(Func(Of KeyValuePair(Of TKey, TValue), TKey), IEqualityComparer(Of TKey))
  spec.csharp:
  - uid: System.Linq.Enumerable.ToLookup``2(System.Func{``0,``1},System.Collections.Generic.IEqualityComparer{``1})
    name: ToLookup<KeyValuePair<TKey, TValue>, TKey>
    fullName: System.Linq.Enumerable.ToLookup<System.Collections.Generic.KeyValuePair<TKey, TValue>, TKey>
  - name: (
    fullName: (
  - uid: System.Func`2
    name: Func
    fullName: System.Func
    isExternal: true
  - name: <
    fullName: <
  - uid: System.Collections.Generic.KeyValuePair`2
    name: KeyValuePair
    fullName: System.Collections.Generic.KeyValuePair
    isExternal: true
  - name: <
    fullName: <
  - name: TKey
    fullName: TKey
  - name: ', '
    fullName: ', '
  - name: TValue
    fullName: TValue
  - name: '>'
    fullName: '>'
  - name: ', '
    fullName: ', '
  - name: TKey
    fullName: TKey
  - name: '>'
    fullName: '>'
  - name: ', '
    fullName: ', '
  - uid: System.Collections.Generic.IEqualityComparer`1
    name: IEqualityComparer
    fullName: System.Collections.Generic.IEqualityComparer
    isExternal: true
  - name: <
    fullName: <
  - name: TKey
    fullName: TKey
  - name: '>'
    fullName: '>'
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Linq.Enumerable.ToLookup``2(System.Func{``0,``1},System.Collections.Generic.IEqualityComparer{``1})
    name: ToLookup(Of KeyValuePair(Of TKey, TValue), TKey)
    fullName: System.Linq.Enumerable.ToLookup(Of System.Collections.Generic.KeyValuePair(Of TKey, TValue), TKey)
  - name: (
    fullName: (
  - uid: System.Func`2
    name: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - uid: System.Collections.Generic.KeyValuePair`2
    name: KeyValuePair
    fullName: System.Collections.Generic.KeyValuePair
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - name: TKey
    fullName: TKey
  - name: ', '
    fullName: ', '
  - name: TValue
    fullName: TValue
  - name: )
    fullName: )
  - name: ', '
    fullName: ', '
  - name: TKey
    fullName: TKey
  - name: )
    fullName: )
  - name: ', '
    fullName: ', '
  - uid: System.Collections.Generic.IEqualityComparer`1
    name: IEqualityComparer
    fullName: System.Collections.Generic.IEqualityComparer
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - name: TKey
    fullName: TKey
  - name: )
    fullName: )
  - name: )
    fullName: )
  nameWithType: Enumerable.ToLookup<KeyValuePair<TKey, TValue>, TKey>(Func<KeyValuePair<TKey, TValue>, TKey>, IEqualityComparer<TKey>)
  nameWithType.vb: Enumerable.ToLookup(Of KeyValuePair(Of TKey, TValue), TKey)(Func(Of KeyValuePair(Of TKey, TValue), TKey), IEqualityComparer(Of TKey))
  commentId: M:System.Linq.Enumerable.ToLookup``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IEqualityComparer{``1})
- uid: System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{`0,`1}}.System.Linq.Enumerable.ToLookup``3(System.Func{System.Collections.Generic.KeyValuePair{{TKey},{TValue}},{TKey}},System.Func{System.Collections.Generic.KeyValuePair{{TKey},{TValue}},{TElement}})
  parent: System.Linq.Enumerable
  definition: System.Linq.Enumerable.ToLookup``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2})
  name: ToLookup<KeyValuePair<TKey, TValue>, TKey, TElement>(Func<KeyValuePair<TKey, TValue>, TKey>, Func<KeyValuePair<TKey, TValue>, TElement>)
  fullName: System.Linq.Enumerable.ToLookup<System.Collections.Generic.KeyValuePair<TKey, TValue>, TKey, TElement>(System.Func<System.Collections.Generic.KeyValuePair<TKey, TValue>, TKey>, System.Func<System.Collections.Generic.KeyValuePair<TKey, TValue>, TElement>)
  fullname.vb: System.Linq.Enumerable.ToLookup(Of System.Collections.Generic.KeyValuePair(Of TKey, TValue), TKey, TElement)(System.Func(Of System.Collections.Generic.KeyValuePair(Of TKey, TValue), TKey), System.Func(Of System.Collections.Generic.KeyValuePair(Of TKey, TValue), TElement))
  name.vb: ToLookup(Of KeyValuePair(Of TKey, TValue), TKey, TElement)(Func(Of KeyValuePair(Of TKey, TValue), TKey), Func(Of KeyValuePair(Of TKey, TValue), TElement))
  spec.csharp:
  - uid: System.Linq.Enumerable.ToLookup``3(System.Func{``0,``1},System.Func{``0,``2})
    name: ToLookup<KeyValuePair<TKey, TValue>, TKey, TElement>
    fullName: System.Linq.Enumerable.ToLookup<System.Collections.Generic.KeyValuePair<TKey, TValue>, TKey, TElement>
  - name: (
    fullName: (
  - uid: System.Func`2
    name: Func
    fullName: System.Func
    isExternal: true
  - name: <
    fullName: <
  - uid: System.Collections.Generic.KeyValuePair`2
    name: KeyValuePair
    fullName: System.Collections.Generic.KeyValuePair
    isExternal: true
  - name: <
    fullName: <
  - name: TKey
    fullName: TKey
  - name: ', '
    fullName: ', '
  - name: TValue
    fullName: TValue
  - name: '>'
    fullName: '>'
  - name: ', '
    fullName: ', '
  - name: TKey
    fullName: TKey
  - name: '>'
    fullName: '>'
  - name: ', '
    fullName: ', '
  - uid: System.Func`2
    name: Func
    fullName: System.Func
    isExternal: true
  - name: <
    fullName: <
  - uid: System.Collections.Generic.KeyValuePair`2
    name: KeyValuePair
    fullName: System.Collections.Generic.KeyValuePair
    isExternal: true
  - name: <
    fullName: <
  - name: TKey
    fullName: TKey
  - name: ', '
    fullName: ', '
  - name: TValue
    fullName: TValue
  - name: '>'
    fullName: '>'
  - name: ', '
    fullName: ', '
  - name: TElement
    fullName: TElement
  - name: '>'
    fullName: '>'
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Linq.Enumerable.ToLookup``3(System.Func{``0,``1},System.Func{``0,``2})
    name: ToLookup(Of KeyValuePair(Of TKey, TValue), TKey, TElement)
    fullName: System.Linq.Enumerable.ToLookup(Of System.Collections.Generic.KeyValuePair(Of TKey, TValue), TKey, TElement)
  - name: (
    fullName: (
  - uid: System.Func`2
    name: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - uid: System.Collections.Generic.KeyValuePair`2
    name: KeyValuePair
    fullName: System.Collections.Generic.KeyValuePair
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - name: TKey
    fullName: TKey
  - name: ', '
    fullName: ', '
  - name: TValue
    fullName: TValue
  - name: )
    fullName: )
  - name: ', '
    fullName: ', '
  - name: TKey
    fullName: TKey
  - name: )
    fullName: )
  - name: ', '
    fullName: ', '
  - uid: System.Func`2
    name: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - uid: System.Collections.Generic.KeyValuePair`2
    name: KeyValuePair
    fullName: System.Collections.Generic.KeyValuePair
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - name: TKey
    fullName: TKey
  - name: ', '
    fullName: ', '
  - name: TValue
    fullName: TValue
  - name: )
    fullName: )
  - name: ', '
    fullName: ', '
  - name: TElement
    fullName: TElement
  - name: )
    fullName: )
  - name: )
    fullName: )
  nameWithType: Enumerable.ToLookup<KeyValuePair<TKey, TValue>, TKey, TElement>(Func<KeyValuePair<TKey, TValue>, TKey>, Func<KeyValuePair<TKey, TValue>, TElement>)
  nameWithType.vb: Enumerable.ToLookup(Of KeyValuePair(Of TKey, TValue), TKey, TElement)(Func(Of KeyValuePair(Of TKey, TValue), TKey), Func(Of KeyValuePair(Of TKey, TValue), TElement))
  commentId: M:System.Linq.Enumerable.ToLookup``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2})
- uid: System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{`0,`1}}.System.Linq.Enumerable.ToLookup``3(System.Func{System.Collections.Generic.KeyValuePair{{TKey},{TValue}},{TKey}},System.Func{System.Collections.Generic.KeyValuePair{{TKey},{TValue}},{TElement}},System.Collections.Generic.IEqualityComparer{{TKey}})
  parent: System.Linq.Enumerable
  definition: System.Linq.Enumerable.ToLookup``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})
  name: ToLookup<KeyValuePair<TKey, TValue>, TKey, TElement>(Func<KeyValuePair<TKey, TValue>, TKey>, Func<KeyValuePair<TKey, TValue>, TElement>, IEqualityComparer<TKey>)
  fullName: System.Linq.Enumerable.ToLookup<System.Collections.Generic.KeyValuePair<TKey, TValue>, TKey, TElement>(System.Func<System.Collections.Generic.KeyValuePair<TKey, TValue>, TKey>, System.Func<System.Collections.Generic.KeyValuePair<TKey, TValue>, TElement>, System.Collections.Generic.IEqualityComparer<TKey>)
  fullname.vb: System.Linq.Enumerable.ToLookup(Of System.Collections.Generic.KeyValuePair(Of TKey, TValue), TKey, TElement)(System.Func(Of System.Collections.Generic.KeyValuePair(Of TKey, TValue), TKey), System.Func(Of System.Collections.Generic.KeyValuePair(Of TKey, TValue), TElement), System.Collections.Generic.IEqualityComparer(Of TKey))
  name.vb: ToLookup(Of KeyValuePair(Of TKey, TValue), TKey, TElement)(Func(Of KeyValuePair(Of TKey, TValue), TKey), Func(Of KeyValuePair(Of TKey, TValue), TElement), IEqualityComparer(Of TKey))
  spec.csharp:
  - uid: System.Linq.Enumerable.ToLookup``3(System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})
    name: ToLookup<KeyValuePair<TKey, TValue>, TKey, TElement>
    fullName: System.Linq.Enumerable.ToLookup<System.Collections.Generic.KeyValuePair<TKey, TValue>, TKey, TElement>
  - name: (
    fullName: (
  - uid: System.Func`2
    name: Func
    fullName: System.Func
    isExternal: true
  - name: <
    fullName: <
  - uid: System.Collections.Generic.KeyValuePair`2
    name: KeyValuePair
    fullName: System.Collections.Generic.KeyValuePair
    isExternal: true
  - name: <
    fullName: <
  - name: TKey
    fullName: TKey
  - name: ', '
    fullName: ', '
  - name: TValue
    fullName: TValue
  - name: '>'
    fullName: '>'
  - name: ', '
    fullName: ', '
  - name: TKey
    fullName: TKey
  - name: '>'
    fullName: '>'
  - name: ', '
    fullName: ', '
  - uid: System.Func`2
    name: Func
    fullName: System.Func
    isExternal: true
  - name: <
    fullName: <
  - uid: System.Collections.Generic.KeyValuePair`2
    name: KeyValuePair
    fullName: System.Collections.Generic.KeyValuePair
    isExternal: true
  - name: <
    fullName: <
  - name: TKey
    fullName: TKey
  - name: ', '
    fullName: ', '
  - name: TValue
    fullName: TValue
  - name: '>'
    fullName: '>'
  - name: ', '
    fullName: ', '
  - name: TElement
    fullName: TElement
  - name: '>'
    fullName: '>'
  - name: ', '
    fullName: ', '
  - uid: System.Collections.Generic.IEqualityComparer`1
    name: IEqualityComparer
    fullName: System.Collections.Generic.IEqualityComparer
    isExternal: true
  - name: <
    fullName: <
  - name: TKey
    fullName: TKey
  - name: '>'
    fullName: '>'
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Linq.Enumerable.ToLookup``3(System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})
    name: ToLookup(Of KeyValuePair(Of TKey, TValue), TKey, TElement)
    fullName: System.Linq.Enumerable.ToLookup(Of System.Collections.Generic.KeyValuePair(Of TKey, TValue), TKey, TElement)
  - name: (
    fullName: (
  - uid: System.Func`2
    name: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - uid: System.Collections.Generic.KeyValuePair`2
    name: KeyValuePair
    fullName: System.Collections.Generic.KeyValuePair
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - name: TKey
    fullName: TKey
  - name: ', '
    fullName: ', '
  - name: TValue
    fullName: TValue
  - name: )
    fullName: )
  - name: ', '
    fullName: ', '
  - name: TKey
    fullName: TKey
  - name: )
    fullName: )
  - name: ', '
    fullName: ', '
  - uid: System.Func`2
    name: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - uid: System.Collections.Generic.KeyValuePair`2
    name: KeyValuePair
    fullName: System.Collections.Generic.KeyValuePair
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - name: TKey
    fullName: TKey
  - name: ', '
    fullName: ', '
  - name: TValue
    fullName: TValue
  - name: )
    fullName: )
  - name: ', '
    fullName: ', '
  - name: TElement
    fullName: TElement
  - name: )
    fullName: )
  - name: ', '
    fullName: ', '
  - uid: System.Collections.Generic.IEqualityComparer`1
    name: IEqualityComparer
    fullName: System.Collections.Generic.IEqualityComparer
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - name: TKey
    fullName: TKey
  - name: )
    fullName: )
  - name: )
    fullName: )
  nameWithType: Enumerable.ToLookup<KeyValuePair<TKey, TValue>, TKey, TElement>(Func<KeyValuePair<TKey, TValue>, TKey>, Func<KeyValuePair<TKey, TValue>, TElement>, IEqualityComparer<TKey>)
  nameWithType.vb: Enumerable.ToLookup(Of KeyValuePair(Of TKey, TValue), TKey, TElement)(Func(Of KeyValuePair(Of TKey, TValue), TKey), Func(Of KeyValuePair(Of TKey, TValue), TElement), IEqualityComparer(Of TKey))
  commentId: M:System.Linq.Enumerable.ToLookup``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})
- uid: System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{`0,`1}}.System.Linq.Enumerable.Union``1(System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{{TKey},{TValue}}})
  parent: System.Linq.Enumerable
  definition: System.Linq.Enumerable.Union``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0})
  name: Union<KeyValuePair<TKey, TValue>>(IEnumerable<KeyValuePair<TKey, TValue>>)
  fullName: System.Linq.Enumerable.Union<System.Collections.Generic.KeyValuePair<TKey, TValue>>(System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<TKey, TValue>>)
  fullname.vb: System.Linq.Enumerable.Union(Of System.Collections.Generic.KeyValuePair(Of TKey, TValue))(System.Collections.Generic.IEnumerable(Of System.Collections.Generic.KeyValuePair(Of TKey, TValue)))
  name.vb: Union(Of KeyValuePair(Of TKey, TValue))(IEnumerable(Of KeyValuePair(Of TKey, TValue)))
  spec.csharp:
  - uid: System.Linq.Enumerable.Union``1(System.Collections.Generic.IEnumerable{``0})
    name: Union<KeyValuePair<TKey, TValue>>
    fullName: System.Linq.Enumerable.Union<System.Collections.Generic.KeyValuePair<TKey, TValue>>
  - name: (
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    fullName: <
  - uid: System.Collections.Generic.KeyValuePair`2
    name: KeyValuePair
    fullName: System.Collections.Generic.KeyValuePair
    isExternal: true
  - name: <
    fullName: <
  - name: TKey
    fullName: TKey
  - name: ', '
    fullName: ', '
  - name: TValue
    fullName: TValue
  - name: '>'
    fullName: '>'
  - name: '>'
    fullName: '>'
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Linq.Enumerable.Union``1(System.Collections.Generic.IEnumerable{``0})
    name: Union(Of KeyValuePair(Of TKey, TValue))
    fullName: System.Linq.Enumerable.Union(Of System.Collections.Generic.KeyValuePair(Of TKey, TValue))
  - name: (
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - uid: System.Collections.Generic.KeyValuePair`2
    name: KeyValuePair
    fullName: System.Collections.Generic.KeyValuePair
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - name: TKey
    fullName: TKey
  - name: ', '
    fullName: ', '
  - name: TValue
    fullName: TValue
  - name: )
    fullName: )
  - name: )
    fullName: )
  - name: )
    fullName: )
  nameWithType: Enumerable.Union<KeyValuePair<TKey, TValue>>(IEnumerable<KeyValuePair<TKey, TValue>>)
  nameWithType.vb: Enumerable.Union(Of KeyValuePair(Of TKey, TValue))(IEnumerable(Of KeyValuePair(Of TKey, TValue)))
  commentId: M:System.Linq.Enumerable.Union``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0})
- uid: System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{`0,`1}}.System.Linq.Enumerable.Union``1(System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{{TKey},{TValue}}},System.Collections.Generic.IEqualityComparer{System.Collections.Generic.KeyValuePair{{TKey},{TValue}}})
  parent: System.Linq.Enumerable
  definition: System.Linq.Enumerable.Union``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEqualityComparer{``0})
  name: Union<KeyValuePair<TKey, TValue>>(IEnumerable<KeyValuePair<TKey, TValue>>, IEqualityComparer<KeyValuePair<TKey, TValue>>)
  fullName: System.Linq.Enumerable.Union<System.Collections.Generic.KeyValuePair<TKey, TValue>>(System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<TKey, TValue>>, System.Collections.Generic.IEqualityComparer<System.Collections.Generic.KeyValuePair<TKey, TValue>>)
  fullname.vb: System.Linq.Enumerable.Union(Of System.Collections.Generic.KeyValuePair(Of TKey, TValue))(System.Collections.Generic.IEnumerable(Of System.Collections.Generic.KeyValuePair(Of TKey, TValue)), System.Collections.Generic.IEqualityComparer(Of System.Collections.Generic.KeyValuePair(Of TKey, TValue)))
  name.vb: Union(Of KeyValuePair(Of TKey, TValue))(IEnumerable(Of KeyValuePair(Of TKey, TValue)), IEqualityComparer(Of KeyValuePair(Of TKey, TValue)))
  spec.csharp:
  - uid: System.Linq.Enumerable.Union``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEqualityComparer{``0})
    name: Union<KeyValuePair<TKey, TValue>>
    fullName: System.Linq.Enumerable.Union<System.Collections.Generic.KeyValuePair<TKey, TValue>>
  - name: (
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    fullName: <
  - uid: System.Collections.Generic.KeyValuePair`2
    name: KeyValuePair
    fullName: System.Collections.Generic.KeyValuePair
    isExternal: true
  - name: <
    fullName: <
  - name: TKey
    fullName: TKey
  - name: ', '
    fullName: ', '
  - name: TValue
    fullName: TValue
  - name: '>'
    fullName: '>'
  - name: '>'
    fullName: '>'
  - name: ', '
    fullName: ', '
  - uid: System.Collections.Generic.IEqualityComparer`1
    name: IEqualityComparer
    fullName: System.Collections.Generic.IEqualityComparer
    isExternal: true
  - name: <
    fullName: <
  - uid: System.Collections.Generic.KeyValuePair`2
    name: KeyValuePair
    fullName: System.Collections.Generic.KeyValuePair
    isExternal: true
  - name: <
    fullName: <
  - name: TKey
    fullName: TKey
  - name: ', '
    fullName: ', '
  - name: TValue
    fullName: TValue
  - name: '>'
    fullName: '>'
  - name: '>'
    fullName: '>'
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Linq.Enumerable.Union``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEqualityComparer{``0})
    name: Union(Of KeyValuePair(Of TKey, TValue))
    fullName: System.Linq.Enumerable.Union(Of System.Collections.Generic.KeyValuePair(Of TKey, TValue))
  - name: (
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - uid: System.Collections.Generic.KeyValuePair`2
    name: KeyValuePair
    fullName: System.Collections.Generic.KeyValuePair
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - name: TKey
    fullName: TKey
  - name: ', '
    fullName: ', '
  - name: TValue
    fullName: TValue
  - name: )
    fullName: )
  - name: )
    fullName: )
  - name: ', '
    fullName: ', '
  - uid: System.Collections.Generic.IEqualityComparer`1
    name: IEqualityComparer
    fullName: System.Collections.Generic.IEqualityComparer
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - uid: System.Collections.Generic.KeyValuePair`2
    name: KeyValuePair
    fullName: System.Collections.Generic.KeyValuePair
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - name: TKey
    fullName: TKey
  - name: ', '
    fullName: ', '
  - name: TValue
    fullName: TValue
  - name: )
    fullName: )
  - name: )
    fullName: )
  - name: )
    fullName: )
  nameWithType: Enumerable.Union<KeyValuePair<TKey, TValue>>(IEnumerable<KeyValuePair<TKey, TValue>>, IEqualityComparer<KeyValuePair<TKey, TValue>>)
  nameWithType.vb: Enumerable.Union(Of KeyValuePair(Of TKey, TValue))(IEnumerable(Of KeyValuePair(Of TKey, TValue)), IEqualityComparer(Of KeyValuePair(Of TKey, TValue)))
  commentId: M:System.Linq.Enumerable.Union``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEqualityComparer{``0})
- uid: System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{`0,`1}}.System.Linq.Enumerable.Where``1(System.Func{System.Collections.Generic.KeyValuePair{{TKey},{TValue}},System.Boolean})
  parent: System.Linq.Enumerable
  definition: System.Linq.Enumerable.Where``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})
  name: Where<KeyValuePair<TKey, TValue>>(Func<KeyValuePair<TKey, TValue>, Boolean>)
  fullName: System.Linq.Enumerable.Where<System.Collections.Generic.KeyValuePair<TKey, TValue>>(System.Func<System.Collections.Generic.KeyValuePair<TKey, TValue>, System.Boolean>)
  fullname.vb: System.Linq.Enumerable.Where(Of System.Collections.Generic.KeyValuePair(Of TKey, TValue))(System.Func(Of System.Collections.Generic.KeyValuePair(Of TKey, TValue), System.Boolean))
  name.vb: Where(Of KeyValuePair(Of TKey, TValue))(Func(Of KeyValuePair(Of TKey, TValue), Boolean))
  spec.csharp:
  - uid: System.Linq.Enumerable.Where``1(System.Func{``0,System.Boolean})
    name: Where<KeyValuePair<TKey, TValue>>
    fullName: System.Linq.Enumerable.Where<System.Collections.Generic.KeyValuePair<TKey, TValue>>
  - name: (
    fullName: (
  - uid: System.Func`2
    name: Func
    fullName: System.Func
    isExternal: true
  - name: <
    fullName: <
  - uid: System.Collections.Generic.KeyValuePair`2
    name: KeyValuePair
    fullName: System.Collections.Generic.KeyValuePair
    isExternal: true
  - name: <
    fullName: <
  - name: TKey
    fullName: TKey
  - name: ', '
    fullName: ', '
  - name: TValue
    fullName: TValue
  - name: '>'
    fullName: '>'
  - name: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: '>'
    fullName: '>'
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Linq.Enumerable.Where``1(System.Func{``0,System.Boolean})
    name: Where(Of KeyValuePair(Of TKey, TValue))
    fullName: System.Linq.Enumerable.Where(Of System.Collections.Generic.KeyValuePair(Of TKey, TValue))
  - name: (
    fullName: (
  - uid: System.Func`2
    name: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - uid: System.Collections.Generic.KeyValuePair`2
    name: KeyValuePair
    fullName: System.Collections.Generic.KeyValuePair
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - name: TKey
    fullName: TKey
  - name: ', '
    fullName: ', '
  - name: TValue
    fullName: TValue
  - name: )
    fullName: )
  - name: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    fullName: )
  - name: )
    fullName: )
  nameWithType: Enumerable.Where<KeyValuePair<TKey, TValue>>(Func<KeyValuePair<TKey, TValue>, Boolean>)
  nameWithType.vb: Enumerable.Where(Of KeyValuePair(Of TKey, TValue))(Func(Of KeyValuePair(Of TKey, TValue), Boolean))
  commentId: M:System.Linq.Enumerable.Where``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})
- uid: System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{`0,`1}}.System.Linq.Enumerable.Where``1(System.Func{System.Collections.Generic.KeyValuePair{{TKey},{TValue}},System.Int32,System.Boolean})
  parent: System.Linq.Enumerable
  definition: System.Linq.Enumerable.Where``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32,System.Boolean})
  name: Where<KeyValuePair<TKey, TValue>>(Func<KeyValuePair<TKey, TValue>, Int32, Boolean>)
  fullName: System.Linq.Enumerable.Where<System.Collections.Generic.KeyValuePair<TKey, TValue>>(System.Func<System.Collections.Generic.KeyValuePair<TKey, TValue>, System.Int32, System.Boolean>)
  fullname.vb: System.Linq.Enumerable.Where(Of System.Collections.Generic.KeyValuePair(Of TKey, TValue))(System.Func(Of System.Collections.Generic.KeyValuePair(Of TKey, TValue), System.Int32, System.Boolean))
  name.vb: Where(Of KeyValuePair(Of TKey, TValue))(Func(Of KeyValuePair(Of TKey, TValue), Int32, Boolean))
  spec.csharp:
  - uid: System.Linq.Enumerable.Where``1(System.Func{``0,System.Int32,System.Boolean})
    name: Where<KeyValuePair<TKey, TValue>>
    fullName: System.Linq.Enumerable.Where<System.Collections.Generic.KeyValuePair<TKey, TValue>>
  - name: (
    fullName: (
  - uid: System.Func`3
    name: Func
    fullName: System.Func
    isExternal: true
  - name: <
    fullName: <
  - uid: System.Collections.Generic.KeyValuePair`2
    name: KeyValuePair
    fullName: System.Collections.Generic.KeyValuePair
    isExternal: true
  - name: <
    fullName: <
  - name: TKey
    fullName: TKey
  - name: ', '
    fullName: ', '
  - name: TValue
    fullName: TValue
  - name: '>'
    fullName: '>'
  - name: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: '>'
    fullName: '>'
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Linq.Enumerable.Where``1(System.Func{``0,System.Int32,System.Boolean})
    name: Where(Of KeyValuePair(Of TKey, TValue))
    fullName: System.Linq.Enumerable.Where(Of System.Collections.Generic.KeyValuePair(Of TKey, TValue))
  - name: (
    fullName: (
  - uid: System.Func`3
    name: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - uid: System.Collections.Generic.KeyValuePair`2
    name: KeyValuePair
    fullName: System.Collections.Generic.KeyValuePair
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - name: TKey
    fullName: TKey
  - name: ', '
    fullName: ', '
  - name: TValue
    fullName: TValue
  - name: )
    fullName: )
  - name: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    fullName: )
  - name: )
    fullName: )
  nameWithType: Enumerable.Where<KeyValuePair<TKey, TValue>>(Func<KeyValuePair<TKey, TValue>, Int32, Boolean>)
  nameWithType.vb: Enumerable.Where(Of KeyValuePair(Of TKey, TValue))(Func(Of KeyValuePair(Of TKey, TValue), Int32, Boolean))
  commentId: M:System.Linq.Enumerable.Where``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32,System.Boolean})
- uid: System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{`0,`1}}.System.Linq.Enumerable.Zip``3(System.Collections.Generic.IEnumerable{{TSecond}},System.Func{System.Collections.Generic.KeyValuePair{{TKey},{TValue}},{TSecond},{TResult}})
  parent: System.Linq.Enumerable
  definition: System.Linq.Enumerable.Zip``3(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``1,``2})
  name: Zip<KeyValuePair<TKey, TValue>, TSecond, TResult>(IEnumerable<TSecond>, Func<KeyValuePair<TKey, TValue>, TSecond, TResult>)
  fullName: System.Linq.Enumerable.Zip<System.Collections.Generic.KeyValuePair<TKey, TValue>, TSecond, TResult>(System.Collections.Generic.IEnumerable<TSecond>, System.Func<System.Collections.Generic.KeyValuePair<TKey, TValue>, TSecond, TResult>)
  fullname.vb: System.Linq.Enumerable.Zip(Of System.Collections.Generic.KeyValuePair(Of TKey, TValue), TSecond, TResult)(System.Collections.Generic.IEnumerable(Of TSecond), System.Func(Of System.Collections.Generic.KeyValuePair(Of TKey, TValue), TSecond, TResult))
  name.vb: Zip(Of KeyValuePair(Of TKey, TValue), TSecond, TResult)(IEnumerable(Of TSecond), Func(Of KeyValuePair(Of TKey, TValue), TSecond, TResult))
  spec.csharp:
  - uid: System.Linq.Enumerable.Zip``3(System.Collections.Generic.IEnumerable{``1},System.Func{``0,``1,``2})
    name: Zip<KeyValuePair<TKey, TValue>, TSecond, TResult>
    fullName: System.Linq.Enumerable.Zip<System.Collections.Generic.KeyValuePair<TKey, TValue>, TSecond, TResult>
  - name: (
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    fullName: <
  - name: TSecond
    fullName: TSecond
  - name: '>'
    fullName: '>'
  - name: ', '
    fullName: ', '
  - uid: System.Func`3
    name: Func
    fullName: System.Func
    isExternal: true
  - name: <
    fullName: <
  - uid: System.Collections.Generic.KeyValuePair`2
    name: KeyValuePair
    fullName: System.Collections.Generic.KeyValuePair
    isExternal: true
  - name: <
    fullName: <
  - name: TKey
    fullName: TKey
  - name: ', '
    fullName: ', '
  - name: TValue
    fullName: TValue
  - name: '>'
    fullName: '>'
  - name: ', '
    fullName: ', '
  - name: TSecond
    fullName: TSecond
  - name: ', '
    fullName: ', '
  - name: TResult
    fullName: TResult
  - name: '>'
    fullName: '>'
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Linq.Enumerable.Zip``3(System.Collections.Generic.IEnumerable{``1},System.Func{``0,``1,``2})
    name: Zip(Of KeyValuePair(Of TKey, TValue), TSecond, TResult)
    fullName: System.Linq.Enumerable.Zip(Of System.Collections.Generic.KeyValuePair(Of TKey, TValue), TSecond, TResult)
  - name: (
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - name: TSecond
    fullName: TSecond
  - name: )
    fullName: )
  - name: ', '
    fullName: ', '
  - uid: System.Func`3
    name: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - uid: System.Collections.Generic.KeyValuePair`2
    name: KeyValuePair
    fullName: System.Collections.Generic.KeyValuePair
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - name: TKey
    fullName: TKey
  - name: ', '
    fullName: ', '
  - name: TValue
    fullName: TValue
  - name: )
    fullName: )
  - name: ', '
    fullName: ', '
  - name: TSecond
    fullName: TSecond
  - name: ', '
    fullName: ', '
  - name: TResult
    fullName: TResult
  - name: )
    fullName: )
  - name: )
    fullName: )
  nameWithType: Enumerable.Zip<KeyValuePair<TKey, TValue>, TSecond, TResult>(IEnumerable<TSecond>, Func<KeyValuePair<TKey, TValue>, TSecond, TResult>)
  nameWithType.vb: Enumerable.Zip(Of KeyValuePair(Of TKey, TValue), TSecond, TResult)(IEnumerable(Of TSecond), Func(Of KeyValuePair(Of TKey, TValue), TSecond, TResult))
  commentId: M:System.Linq.Enumerable.Zip``3(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``1,``2})
- uid: System
  isExternal: false
  name: System
  fullName: System
  nameWithType: System
  commentId: N:System
- uid: System.Collections.Generic.IDictionary`2
  isExternal: false
  name: IDictionary<TKey, TValue>
  fullName: System.Collections.Generic.IDictionary<TKey, TValue>
  fullname.vb: System.Collections.Generic.IDictionary(Of TKey, TValue)
  name.vb: IDictionary(Of TKey, TValue)
  spec.csharp:
  - uid: System.Collections.Generic.IDictionary`2
    name: IDictionary
    fullName: System.Collections.Generic.IDictionary
  - name: <
    fullName: <
  - name: TKey
    fullName: TKey
  - name: ', '
    fullName: ', '
  - name: TValue
    fullName: TValue
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IDictionary`2
    name: IDictionary
    fullName: System.Collections.Generic.IDictionary
  - name: '(Of '
    fullName: '(Of '
  - name: TKey
    fullName: TKey
  - name: ', '
    fullName: ', '
  - name: TValue
    fullName: TValue
  - name: )
    fullName: )
  nameWithType: IDictionary<TKey, TValue>
  nameWithType.vb: IDictionary(Of TKey, TValue)
  commentId: T:System.Collections.Generic.IDictionary`2
- uid: System.Collections.Generic
  isExternal: false
  name: System.Collections.Generic
  fullName: System.Collections.Generic
  nameWithType: System.Collections.Generic
  commentId: N:System.Collections.Generic
- uid: System.Collections.Generic.ICollection`1
  isExternal: false
  name: ICollection<T>
  fullName: System.Collections.Generic.ICollection<T>
  fullname.vb: System.Collections.Generic.ICollection(Of T)
  name.vb: ICollection(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.ICollection`1
    name: ICollection
    fullName: System.Collections.Generic.ICollection
  - name: <
    fullName: <
  - name: T
    fullName: T
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.ICollection`1
    name: ICollection
    fullName: System.Collections.Generic.ICollection
  - name: '(Of '
    fullName: '(Of '
  - name: T
    fullName: T
  - name: )
    fullName: )
  nameWithType: ICollection<T>
  nameWithType.vb: ICollection(Of T)
  commentId: T:System.Collections.Generic.ICollection`1
- uid: System.Collections.Generic.IReadOnlyDictionary`2
  isExternal: false
  name: IReadOnlyDictionary<TKey, TValue>
  fullName: System.Collections.Generic.IReadOnlyDictionary<TKey, TValue>
  fullname.vb: System.Collections.Generic.IReadOnlyDictionary(Of TKey, TValue)
  name.vb: IReadOnlyDictionary(Of TKey, TValue)
  spec.csharp:
  - uid: System.Collections.Generic.IReadOnlyDictionary`2
    name: IReadOnlyDictionary
    fullName: System.Collections.Generic.IReadOnlyDictionary
  - name: <
    fullName: <
  - name: TKey
    fullName: TKey
  - name: ', '
    fullName: ', '
  - name: TValue
    fullName: TValue
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IReadOnlyDictionary`2
    name: IReadOnlyDictionary
    fullName: System.Collections.Generic.IReadOnlyDictionary
  - name: '(Of '
    fullName: '(Of '
  - name: TKey
    fullName: TKey
  - name: ', '
    fullName: ', '
  - name: TValue
    fullName: TValue
  - name: )
    fullName: )
  nameWithType: IReadOnlyDictionary<TKey, TValue>
  nameWithType.vb: IReadOnlyDictionary(Of TKey, TValue)
  commentId: T:System.Collections.Generic.IReadOnlyDictionary`2
- uid: System.Collections.Generic.IReadOnlyCollection`1
  isExternal: false
  name: IReadOnlyCollection<T>
  fullName: System.Collections.Generic.IReadOnlyCollection<T>
  fullname.vb: System.Collections.Generic.IReadOnlyCollection(Of T)
  name.vb: IReadOnlyCollection(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IReadOnlyCollection`1
    name: IReadOnlyCollection
    fullName: System.Collections.Generic.IReadOnlyCollection
  - name: <
    fullName: <
  - name: T
    fullName: T
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IReadOnlyCollection`1
    name: IReadOnlyCollection
    fullName: System.Collections.Generic.IReadOnlyCollection
  - name: '(Of '
    fullName: '(Of '
  - name: T
    fullName: T
  - name: )
    fullName: )
  nameWithType: IReadOnlyCollection<T>
  nameWithType.vb: IReadOnlyCollection(Of T)
  commentId: T:System.Collections.Generic.IReadOnlyCollection`1
- uid: System.Collections.Generic.IEnumerable`1
  isExternal: false
  name: IEnumerable<T>
  fullName: System.Collections.Generic.IEnumerable<T>
  fullname.vb: System.Collections.Generic.IEnumerable(Of T)
  name.vb: IEnumerable(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
  - name: <
    fullName: <
  - name: T
    fullName: T
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
  - name: '(Of '
    fullName: '(Of '
  - name: T
    fullName: T
  - name: )
    fullName: )
  nameWithType: IEnumerable<T>
  nameWithType.vb: IEnumerable(Of T)
  commentId: T:System.Collections.Generic.IEnumerable`1
- uid: System.Collections
  isExternal: false
  name: System.Collections
  fullName: System.Collections
  nameWithType: System.Collections
  commentId: N:System.Collections
- uid: System.Linq.Queryable.AsQueryable(System.Collections.IEnumerable)
  isExternal: true
  name: AsQueryable(IEnumerable)
  fullName: System.Linq.Queryable.AsQueryable(System.Collections.IEnumerable)
  spec.csharp:
  - uid: System.Linq.Queryable.AsQueryable(System.Collections.IEnumerable)
    name: AsQueryable
    fullName: System.Linq.Queryable.AsQueryable
  - name: (
    fullName: (
  - uid: System.Collections.IEnumerable
    name: IEnumerable
    fullName: System.Collections.IEnumerable
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Linq.Queryable.AsQueryable(System.Collections.IEnumerable)
    name: AsQueryable
    fullName: System.Linq.Queryable.AsQueryable
  - name: (
    fullName: (
  - uid: System.Collections.IEnumerable
    name: IEnumerable
    fullName: System.Collections.IEnumerable
    isExternal: true
  - name: )
    fullName: )
  nameWithType: Queryable.AsQueryable(IEnumerable)
  commentId: M:System.Linq.Queryable.AsQueryable(System.Collections.IEnumerable)
- uid: System.Linq.Queryable
  parent: System.Linq
  isExternal: false
  name: Queryable
  fullName: System.Linq.Queryable
  nameWithType: Queryable
  commentId: T:System.Linq.Queryable
- uid: System.Linq.Queryable.AsQueryable``1(System.Collections.Generic.IEnumerable{``0})
  isExternal: true
  name: AsQueryable<TElement>(IEnumerable<TElement>)
  fullName: System.Linq.Queryable.AsQueryable<TElement>(System.Collections.Generic.IEnumerable<TElement>)
  fullname.vb: System.Linq.Queryable.AsQueryable(Of TElement)(System.Collections.Generic.IEnumerable(Of TElement))
  name.vb: AsQueryable(Of TElement)(IEnumerable(Of TElement))
  spec.csharp:
  - uid: System.Linq.Queryable.AsQueryable``1(System.Collections.Generic.IEnumerable{``0})
    name: AsQueryable<TElement>
    fullName: System.Linq.Queryable.AsQueryable<TElement>
  - name: (
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    fullName: <
  - name: TElement
    fullName: TElement
  - name: '>'
    fullName: '>'
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Linq.Queryable.AsQueryable``1(System.Collections.Generic.IEnumerable{``0})
    name: AsQueryable(Of TElement)
    fullName: System.Linq.Queryable.AsQueryable(Of TElement)
  - name: (
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - name: TElement
    fullName: TElement
  - name: )
    fullName: )
  - name: )
    fullName: )
  nameWithType: Queryable.AsQueryable<TElement>(IEnumerable<TElement>)
  nameWithType.vb: Queryable.AsQueryable(Of TElement)(IEnumerable(Of TElement))
  commentId: M:System.Linq.Queryable.AsQueryable``1(System.Collections.Generic.IEnumerable{``0})
- uid: System.Linq.ParallelEnumerable.AsParallel(System.Collections.IEnumerable)
  isExternal: true
  name: AsParallel(IEnumerable)
  fullName: System.Linq.ParallelEnumerable.AsParallel(System.Collections.IEnumerable)
  spec.csharp:
  - uid: System.Linq.ParallelEnumerable.AsParallel(System.Collections.IEnumerable)
    name: AsParallel
    fullName: System.Linq.ParallelEnumerable.AsParallel
  - name: (
    fullName: (
  - uid: System.Collections.IEnumerable
    name: IEnumerable
    fullName: System.Collections.IEnumerable
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Linq.ParallelEnumerable.AsParallel(System.Collections.IEnumerable)
    name: AsParallel
    fullName: System.Linq.ParallelEnumerable.AsParallel
  - name: (
    fullName: (
  - uid: System.Collections.IEnumerable
    name: IEnumerable
    fullName: System.Collections.IEnumerable
    isExternal: true
  - name: )
    fullName: )
  nameWithType: ParallelEnumerable.AsParallel(IEnumerable)
  commentId: M:System.Linq.ParallelEnumerable.AsParallel(System.Collections.IEnumerable)
- uid: System.Linq.ParallelEnumerable
  parent: System.Linq
  isExternal: false
  name: ParallelEnumerable
  fullName: System.Linq.ParallelEnumerable
  nameWithType: ParallelEnumerable
  commentId: T:System.Linq.ParallelEnumerable
- uid: System.Linq.ParallelEnumerable.AsParallel``1(System.Collections.Generic.IEnumerable{``0})
  isExternal: true
  name: AsParallel<TSource>(IEnumerable<TSource>)
  fullName: System.Linq.ParallelEnumerable.AsParallel<TSource>(System.Collections.Generic.IEnumerable<TSource>)
  fullname.vb: System.Linq.ParallelEnumerable.AsParallel(Of TSource)(System.Collections.Generic.IEnumerable(Of TSource))
  name.vb: AsParallel(Of TSource)(IEnumerable(Of TSource))
  spec.csharp:
  - uid: System.Linq.ParallelEnumerable.AsParallel``1(System.Collections.Generic.IEnumerable{``0})
    name: AsParallel<TSource>
    fullName: System.Linq.ParallelEnumerable.AsParallel<TSource>
  - name: (
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    fullName: <
  - name: TSource
    fullName: TSource
  - name: '>'
    fullName: '>'
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Linq.ParallelEnumerable.AsParallel``1(System.Collections.Generic.IEnumerable{``0})
    name: AsParallel(Of TSource)
    fullName: System.Linq.ParallelEnumerable.AsParallel(Of TSource)
  - name: (
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - name: TSource
    fullName: TSource
  - name: )
    fullName: )
  - name: )
    fullName: )
  nameWithType: ParallelEnumerable.AsParallel<TSource>(IEnumerable<TSource>)
  nameWithType.vb: ParallelEnumerable.AsParallel(Of TSource)(IEnumerable(Of TSource))
  commentId: M:System.Linq.ParallelEnumerable.AsParallel``1(System.Collections.Generic.IEnumerable{``0})
- uid: System.Linq.Enumerable.Aggregate``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``0,``0})
  isExternal: true
  name: Aggregate<TSource>(IEnumerable<TSource>, Func<TSource, TSource, TSource>)
  fullName: System.Linq.Enumerable.Aggregate<TSource>(System.Collections.Generic.IEnumerable<TSource>, System.Func<TSource, TSource, TSource>)
  fullname.vb: System.Linq.Enumerable.Aggregate(Of TSource)(System.Collections.Generic.IEnumerable(Of TSource), System.Func(Of TSource, TSource, TSource))
  name.vb: Aggregate(Of TSource)(IEnumerable(Of TSource), Func(Of TSource, TSource, TSource))
  spec.csharp:
  - uid: System.Linq.Enumerable.Aggregate``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``0,``0})
    name: Aggregate<TSource>
    fullName: System.Linq.Enumerable.Aggregate<TSource>
  - name: (
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    fullName: <
  - name: TSource
    fullName: TSource
  - name: '>'
    fullName: '>'
  - name: ', '
    fullName: ', '
  - uid: System.Func`3
    name: Func
    fullName: System.Func
    isExternal: true
  - name: <
    fullName: <
  - name: TSource
    fullName: TSource
  - name: ', '
    fullName: ', '
  - name: TSource
    fullName: TSource
  - name: ', '
    fullName: ', '
  - name: TSource
    fullName: TSource
  - name: '>'
    fullName: '>'
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Linq.Enumerable.Aggregate``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``0,``0})
    name: Aggregate(Of TSource)
    fullName: System.Linq.Enumerable.Aggregate(Of TSource)
  - name: (
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - name: TSource
    fullName: TSource
  - name: )
    fullName: )
  - name: ', '
    fullName: ', '
  - uid: System.Func`3
    name: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - name: TSource
    fullName: TSource
  - name: ', '
    fullName: ', '
  - name: TSource
    fullName: TSource
  - name: ', '
    fullName: ', '
  - name: TSource
    fullName: TSource
  - name: )
    fullName: )
  - name: )
    fullName: )
  nameWithType: Enumerable.Aggregate<TSource>(IEnumerable<TSource>, Func<TSource, TSource, TSource>)
  nameWithType.vb: Enumerable.Aggregate(Of TSource)(IEnumerable(Of TSource), Func(Of TSource, TSource, TSource))
  commentId: M:System.Linq.Enumerable.Aggregate``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``0,``0})
- uid: System.Linq.Enumerable
  parent: System.Linq
  isExternal: false
  name: Enumerable
  fullName: System.Linq.Enumerable
  nameWithType: Enumerable
  commentId: T:System.Linq.Enumerable
- uid: System.Linq.Enumerable.Aggregate``2(System.Collections.Generic.IEnumerable{``0},``1,System.Func{``1,``0,``1})
  isExternal: true
  name: Aggregate<TSource, TAccumulate>(IEnumerable<TSource>, TAccumulate, Func<TAccumulate, TSource, TAccumulate>)
  fullName: System.Linq.Enumerable.Aggregate<TSource, TAccumulate>(System.Collections.Generic.IEnumerable<TSource>, TAccumulate, System.Func<TAccumulate, TSource, TAccumulate>)
  fullname.vb: System.Linq.Enumerable.Aggregate(Of TSource, TAccumulate)(System.Collections.Generic.IEnumerable(Of TSource), TAccumulate, System.Func(Of TAccumulate, TSource, TAccumulate))
  name.vb: Aggregate(Of TSource, TAccumulate)(IEnumerable(Of TSource), TAccumulate, Func(Of TAccumulate, TSource, TAccumulate))
  spec.csharp:
  - uid: System.Linq.Enumerable.Aggregate``2(System.Collections.Generic.IEnumerable{``0},``1,System.Func{``1,``0,``1})
    name: Aggregate<TSource, TAccumulate>
    fullName: System.Linq.Enumerable.Aggregate<TSource, TAccumulate>
  - name: (
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    fullName: <
  - name: TSource
    fullName: TSource
  - name: '>'
    fullName: '>'
  - name: ', '
    fullName: ', '
  - name: TAccumulate
    fullName: TAccumulate
  - name: ', '
    fullName: ', '
  - uid: System.Func`3
    name: Func
    fullName: System.Func
    isExternal: true
  - name: <
    fullName: <
  - name: TAccumulate
    fullName: TAccumulate
  - name: ', '
    fullName: ', '
  - name: TSource
    fullName: TSource
  - name: ', '
    fullName: ', '
  - name: TAccumulate
    fullName: TAccumulate
  - name: '>'
    fullName: '>'
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Linq.Enumerable.Aggregate``2(System.Collections.Generic.IEnumerable{``0},``1,System.Func{``1,``0,``1})
    name: Aggregate(Of TSource, TAccumulate)
    fullName: System.Linq.Enumerable.Aggregate(Of TSource, TAccumulate)
  - name: (
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - name: TSource
    fullName: TSource
  - name: )
    fullName: )
  - name: ', '
    fullName: ', '
  - name: TAccumulate
    fullName: TAccumulate
  - name: ', '
    fullName: ', '
  - uid: System.Func`3
    name: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - name: TAccumulate
    fullName: TAccumulate
  - name: ', '
    fullName: ', '
  - name: TSource
    fullName: TSource
  - name: ', '
    fullName: ', '
  - name: TAccumulate
    fullName: TAccumulate
  - name: )
    fullName: )
  - name: )
    fullName: )
  nameWithType: Enumerable.Aggregate<TSource, TAccumulate>(IEnumerable<TSource>, TAccumulate, Func<TAccumulate, TSource, TAccumulate>)
  nameWithType.vb: Enumerable.Aggregate(Of TSource, TAccumulate)(IEnumerable(Of TSource), TAccumulate, Func(Of TAccumulate, TSource, TAccumulate))
  commentId: M:System.Linq.Enumerable.Aggregate``2(System.Collections.Generic.IEnumerable{``0},``1,System.Func{``1,``0,``1})
- uid: System.Linq.Enumerable.Aggregate``3(System.Collections.Generic.IEnumerable{``0},``1,System.Func{``1,``0,``1},System.Func{``1,``2})
  isExternal: true
  name: Aggregate<TSource, TAccumulate, TResult>(IEnumerable<TSource>, TAccumulate, Func<TAccumulate, TSource, TAccumulate>, Func<TAccumulate, TResult>)
  fullName: System.Linq.Enumerable.Aggregate<TSource, TAccumulate, TResult>(System.Collections.Generic.IEnumerable<TSource>, TAccumulate, System.Func<TAccumulate, TSource, TAccumulate>, System.Func<TAccumulate, TResult>)
  fullname.vb: System.Linq.Enumerable.Aggregate(Of TSource, TAccumulate, TResult)(System.Collections.Generic.IEnumerable(Of TSource), TAccumulate, System.Func(Of TAccumulate, TSource, TAccumulate), System.Func(Of TAccumulate, TResult))
  name.vb: Aggregate(Of TSource, TAccumulate, TResult)(IEnumerable(Of TSource), TAccumulate, Func(Of TAccumulate, TSource, TAccumulate), Func(Of TAccumulate, TResult))
  spec.csharp:
  - uid: System.Linq.Enumerable.Aggregate``3(System.Collections.Generic.IEnumerable{``0},``1,System.Func{``1,``0,``1},System.Func{``1,``2})
    name: Aggregate<TSource, TAccumulate, TResult>
    fullName: System.Linq.Enumerable.Aggregate<TSource, TAccumulate, TResult>
  - name: (
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    fullName: <
  - name: TSource
    fullName: TSource
  - name: '>'
    fullName: '>'
  - name: ', '
    fullName: ', '
  - name: TAccumulate
    fullName: TAccumulate
  - name: ', '
    fullName: ', '
  - uid: System.Func`3
    name: Func
    fullName: System.Func
    isExternal: true
  - name: <
    fullName: <
  - name: TAccumulate
    fullName: TAccumulate
  - name: ', '
    fullName: ', '
  - name: TSource
    fullName: TSource
  - name: ', '
    fullName: ', '
  - name: TAccumulate
    fullName: TAccumulate
  - name: '>'
    fullName: '>'
  - name: ', '
    fullName: ', '
  - uid: System.Func`2
    name: Func
    fullName: System.Func
    isExternal: true
  - name: <
    fullName: <
  - name: TAccumulate
    fullName: TAccumulate
  - name: ', '
    fullName: ', '
  - name: TResult
    fullName: TResult
  - name: '>'
    fullName: '>'
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Linq.Enumerable.Aggregate``3(System.Collections.Generic.IEnumerable{``0},``1,System.Func{``1,``0,``1},System.Func{``1,``2})
    name: Aggregate(Of TSource, TAccumulate, TResult)
    fullName: System.Linq.Enumerable.Aggregate(Of TSource, TAccumulate, TResult)
  - name: (
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - name: TSource
    fullName: TSource
  - name: )
    fullName: )
  - name: ', '
    fullName: ', '
  - name: TAccumulate
    fullName: TAccumulate
  - name: ', '
    fullName: ', '
  - uid: System.Func`3
    name: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - name: TAccumulate
    fullName: TAccumulate
  - name: ', '
    fullName: ', '
  - name: TSource
    fullName: TSource
  - name: ', '
    fullName: ', '
  - name: TAccumulate
    fullName: TAccumulate
  - name: )
    fullName: )
  - name: ', '
    fullName: ', '
  - uid: System.Func`2
    name: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - name: TAccumulate
    fullName: TAccumulate
  - name: ', '
    fullName: ', '
  - name: TResult
    fullName: TResult
  - name: )
    fullName: )
  - name: )
    fullName: )
  nameWithType: Enumerable.Aggregate<TSource, TAccumulate, TResult>(IEnumerable<TSource>, TAccumulate, Func<TAccumulate, TSource, TAccumulate>, Func<TAccumulate, TResult>)
  nameWithType.vb: Enumerable.Aggregate(Of TSource, TAccumulate, TResult)(IEnumerable(Of TSource), TAccumulate, Func(Of TAccumulate, TSource, TAccumulate), Func(Of TAccumulate, TResult))
  commentId: M:System.Linq.Enumerable.Aggregate``3(System.Collections.Generic.IEnumerable{``0},``1,System.Func{``1,``0,``1},System.Func{``1,``2})
- uid: System.Linq.Enumerable.All``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})
  isExternal: true
  name: All<TSource>(IEnumerable<TSource>, Func<TSource, Boolean>)
  fullName: System.Linq.Enumerable.All<TSource>(System.Collections.Generic.IEnumerable<TSource>, System.Func<TSource, System.Boolean>)
  fullname.vb: System.Linq.Enumerable.All(Of TSource)(System.Collections.Generic.IEnumerable(Of TSource), System.Func(Of TSource, System.Boolean))
  name.vb: All(Of TSource)(IEnumerable(Of TSource), Func(Of TSource, Boolean))
  spec.csharp:
  - uid: System.Linq.Enumerable.All``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})
    name: All<TSource>
    fullName: System.Linq.Enumerable.All<TSource>
  - name: (
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    fullName: <
  - name: TSource
    fullName: TSource
  - name: '>'
    fullName: '>'
  - name: ', '
    fullName: ', '
  - uid: System.Func`2
    name: Func
    fullName: System.Func
    isExternal: true
  - name: <
    fullName: <
  - name: TSource
    fullName: TSource
  - name: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: '>'
    fullName: '>'
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Linq.Enumerable.All``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})
    name: All(Of TSource)
    fullName: System.Linq.Enumerable.All(Of TSource)
  - name: (
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - name: TSource
    fullName: TSource
  - name: )
    fullName: )
  - name: ', '
    fullName: ', '
  - uid: System.Func`2
    name: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - name: TSource
    fullName: TSource
  - name: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    fullName: )
  - name: )
    fullName: )
  nameWithType: Enumerable.All<TSource>(IEnumerable<TSource>, Func<TSource, Boolean>)
  nameWithType.vb: Enumerable.All(Of TSource)(IEnumerable(Of TSource), Func(Of TSource, Boolean))
  commentId: M:System.Linq.Enumerable.All``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})
- uid: System.Linq.Enumerable.Any``1(System.Collections.Generic.IEnumerable{``0})
  isExternal: true
  name: Any<TSource>(IEnumerable<TSource>)
  fullName: System.Linq.Enumerable.Any<TSource>(System.Collections.Generic.IEnumerable<TSource>)
  fullname.vb: System.Linq.Enumerable.Any(Of TSource)(System.Collections.Generic.IEnumerable(Of TSource))
  name.vb: Any(Of TSource)(IEnumerable(Of TSource))
  spec.csharp:
  - uid: System.Linq.Enumerable.Any``1(System.Collections.Generic.IEnumerable{``0})
    name: Any<TSource>
    fullName: System.Linq.Enumerable.Any<TSource>
  - name: (
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    fullName: <
  - name: TSource
    fullName: TSource
  - name: '>'
    fullName: '>'
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Linq.Enumerable.Any``1(System.Collections.Generic.IEnumerable{``0})
    name: Any(Of TSource)
    fullName: System.Linq.Enumerable.Any(Of TSource)
  - name: (
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - name: TSource
    fullName: TSource
  - name: )
    fullName: )
  - name: )
    fullName: )
  nameWithType: Enumerable.Any<TSource>(IEnumerable<TSource>)
  nameWithType.vb: Enumerable.Any(Of TSource)(IEnumerable(Of TSource))
  commentId: M:System.Linq.Enumerable.Any``1(System.Collections.Generic.IEnumerable{``0})
- uid: System.Linq.Enumerable.Any``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})
  isExternal: true
  name: Any<TSource>(IEnumerable<TSource>, Func<TSource, Boolean>)
  fullName: System.Linq.Enumerable.Any<TSource>(System.Collections.Generic.IEnumerable<TSource>, System.Func<TSource, System.Boolean>)
  fullname.vb: System.Linq.Enumerable.Any(Of TSource)(System.Collections.Generic.IEnumerable(Of TSource), System.Func(Of TSource, System.Boolean))
  name.vb: Any(Of TSource)(IEnumerable(Of TSource), Func(Of TSource, Boolean))
  spec.csharp:
  - uid: System.Linq.Enumerable.Any``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})
    name: Any<TSource>
    fullName: System.Linq.Enumerable.Any<TSource>
  - name: (
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    fullName: <
  - name: TSource
    fullName: TSource
  - name: '>'
    fullName: '>'
  - name: ', '
    fullName: ', '
  - uid: System.Func`2
    name: Func
    fullName: System.Func
    isExternal: true
  - name: <
    fullName: <
  - name: TSource
    fullName: TSource
  - name: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: '>'
    fullName: '>'
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Linq.Enumerable.Any``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})
    name: Any(Of TSource)
    fullName: System.Linq.Enumerable.Any(Of TSource)
  - name: (
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - name: TSource
    fullName: TSource
  - name: )
    fullName: )
  - name: ', '
    fullName: ', '
  - uid: System.Func`2
    name: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - name: TSource
    fullName: TSource
  - name: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    fullName: )
  - name: )
    fullName: )
  nameWithType: Enumerable.Any<TSource>(IEnumerable<TSource>, Func<TSource, Boolean>)
  nameWithType.vb: Enumerable.Any(Of TSource)(IEnumerable(Of TSource), Func(Of TSource, Boolean))
  commentId: M:System.Linq.Enumerable.Any``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})
- uid: System.Linq.Enumerable.AsEnumerable``1(System.Collections.Generic.IEnumerable{``0})
  isExternal: true
  name: AsEnumerable<TSource>(IEnumerable<TSource>)
  fullName: System.Linq.Enumerable.AsEnumerable<TSource>(System.Collections.Generic.IEnumerable<TSource>)
  fullname.vb: System.Linq.Enumerable.AsEnumerable(Of TSource)(System.Collections.Generic.IEnumerable(Of TSource))
  name.vb: AsEnumerable(Of TSource)(IEnumerable(Of TSource))
  spec.csharp:
  - uid: System.Linq.Enumerable.AsEnumerable``1(System.Collections.Generic.IEnumerable{``0})
    name: AsEnumerable<TSource>
    fullName: System.Linq.Enumerable.AsEnumerable<TSource>
  - name: (
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    fullName: <
  - name: TSource
    fullName: TSource
  - name: '>'
    fullName: '>'
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Linq.Enumerable.AsEnumerable``1(System.Collections.Generic.IEnumerable{``0})
    name: AsEnumerable(Of TSource)
    fullName: System.Linq.Enumerable.AsEnumerable(Of TSource)
  - name: (
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - name: TSource
    fullName: TSource
  - name: )
    fullName: )
  - name: )
    fullName: )
  nameWithType: Enumerable.AsEnumerable<TSource>(IEnumerable<TSource>)
  nameWithType.vb: Enumerable.AsEnumerable(Of TSource)(IEnumerable(Of TSource))
  commentId: M:System.Linq.Enumerable.AsEnumerable``1(System.Collections.Generic.IEnumerable{``0})
- uid: System.Linq.Enumerable.Average``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Decimal})
  isExternal: true
  name: Average<TSource>(IEnumerable<TSource>, Func<TSource, Decimal>)
  fullName: System.Linq.Enumerable.Average<TSource>(System.Collections.Generic.IEnumerable<TSource>, System.Func<TSource, System.Decimal>)
  fullname.vb: System.Linq.Enumerable.Average(Of TSource)(System.Collections.Generic.IEnumerable(Of TSource), System.Func(Of TSource, System.Decimal))
  name.vb: Average(Of TSource)(IEnumerable(Of TSource), Func(Of TSource, Decimal))
  spec.csharp:
  - uid: System.Linq.Enumerable.Average``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Decimal})
    name: Average<TSource>
    fullName: System.Linq.Enumerable.Average<TSource>
  - name: (
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    fullName: <
  - name: TSource
    fullName: TSource
  - name: '>'
    fullName: '>'
  - name: ', '
    fullName: ', '
  - uid: System.Func`2
    name: Func
    fullName: System.Func
    isExternal: true
  - name: <
    fullName: <
  - name: TSource
    fullName: TSource
  - name: ', '
    fullName: ', '
  - uid: System.Decimal
    name: Decimal
    fullName: System.Decimal
    isExternal: true
  - name: '>'
    fullName: '>'
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Linq.Enumerable.Average``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Decimal})
    name: Average(Of TSource)
    fullName: System.Linq.Enumerable.Average(Of TSource)
  - name: (
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - name: TSource
    fullName: TSource
  - name: )
    fullName: )
  - name: ', '
    fullName: ', '
  - uid: System.Func`2
    name: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - name: TSource
    fullName: TSource
  - name: ', '
    fullName: ', '
  - uid: System.Decimal
    name: Decimal
    fullName: System.Decimal
    isExternal: true
  - name: )
    fullName: )
  - name: )
    fullName: )
  nameWithType: Enumerable.Average<TSource>(IEnumerable<TSource>, Func<TSource, Decimal>)
  nameWithType.vb: Enumerable.Average(Of TSource)(IEnumerable(Of TSource), Func(Of TSource, Decimal))
  commentId: M:System.Linq.Enumerable.Average``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Decimal})
- uid: System.Linq.Enumerable.Average``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Double})
  isExternal: true
  name: Average<TSource>(IEnumerable<TSource>, Func<TSource, Double>)
  fullName: System.Linq.Enumerable.Average<TSource>(System.Collections.Generic.IEnumerable<TSource>, System.Func<TSource, System.Double>)
  fullname.vb: System.Linq.Enumerable.Average(Of TSource)(System.Collections.Generic.IEnumerable(Of TSource), System.Func(Of TSource, System.Double))
  name.vb: Average(Of TSource)(IEnumerable(Of TSource), Func(Of TSource, Double))
  spec.csharp:
  - uid: System.Linq.Enumerable.Average``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Double})
    name: Average<TSource>
    fullName: System.Linq.Enumerable.Average<TSource>
  - name: (
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    fullName: <
  - name: TSource
    fullName: TSource
  - name: '>'
    fullName: '>'
  - name: ', '
    fullName: ', '
  - uid: System.Func`2
    name: Func
    fullName: System.Func
    isExternal: true
  - name: <
    fullName: <
  - name: TSource
    fullName: TSource
  - name: ', '
    fullName: ', '
  - uid: System.Double
    name: Double
    fullName: System.Double
    isExternal: true
  - name: '>'
    fullName: '>'
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Linq.Enumerable.Average``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Double})
    name: Average(Of TSource)
    fullName: System.Linq.Enumerable.Average(Of TSource)
  - name: (
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - name: TSource
    fullName: TSource
  - name: )
    fullName: )
  - name: ', '
    fullName: ', '
  - uid: System.Func`2
    name: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - name: TSource
    fullName: TSource
  - name: ', '
    fullName: ', '
  - uid: System.Double
    name: Double
    fullName: System.Double
    isExternal: true
  - name: )
    fullName: )
  - name: )
    fullName: )
  nameWithType: Enumerable.Average<TSource>(IEnumerable<TSource>, Func<TSource, Double>)
  nameWithType.vb: Enumerable.Average(Of TSource)(IEnumerable(Of TSource), Func(Of TSource, Double))
  commentId: M:System.Linq.Enumerable.Average``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Double})
- uid: System.Linq.Enumerable.Average``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32})
  isExternal: true
  name: Average<TSource>(IEnumerable<TSource>, Func<TSource, Int32>)
  fullName: System.Linq.Enumerable.Average<TSource>(System.Collections.Generic.IEnumerable<TSource>, System.Func<TSource, System.Int32>)
  fullname.vb: System.Linq.Enumerable.Average(Of TSource)(System.Collections.Generic.IEnumerable(Of TSource), System.Func(Of TSource, System.Int32))
  name.vb: Average(Of TSource)(IEnumerable(Of TSource), Func(Of TSource, Int32))
  spec.csharp:
  - uid: System.Linq.Enumerable.Average``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32})
    name: Average<TSource>
    fullName: System.Linq.Enumerable.Average<TSource>
  - name: (
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    fullName: <
  - name: TSource
    fullName: TSource
  - name: '>'
    fullName: '>'
  - name: ', '
    fullName: ', '
  - uid: System.Func`2
    name: Func
    fullName: System.Func
    isExternal: true
  - name: <
    fullName: <
  - name: TSource
    fullName: TSource
  - name: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    fullName: System.Int32
    isExternal: true
  - name: '>'
    fullName: '>'
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Linq.Enumerable.Average``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32})
    name: Average(Of TSource)
    fullName: System.Linq.Enumerable.Average(Of TSource)
  - name: (
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - name: TSource
    fullName: TSource
  - name: )
    fullName: )
  - name: ', '
    fullName: ', '
  - uid: System.Func`2
    name: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - name: TSource
    fullName: TSource
  - name: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    fullName: )
  - name: )
    fullName: )
  nameWithType: Enumerable.Average<TSource>(IEnumerable<TSource>, Func<TSource, Int32>)
  nameWithType.vb: Enumerable.Average(Of TSource)(IEnumerable(Of TSource), Func(Of TSource, Int32))
  commentId: M:System.Linq.Enumerable.Average``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32})
- uid: System.Linq.Enumerable.Average``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int64})
  isExternal: true
  name: Average<TSource>(IEnumerable<TSource>, Func<TSource, Int64>)
  fullName: System.Linq.Enumerable.Average<TSource>(System.Collections.Generic.IEnumerable<TSource>, System.Func<TSource, System.Int64>)
  fullname.vb: System.Linq.Enumerable.Average(Of TSource)(System.Collections.Generic.IEnumerable(Of TSource), System.Func(Of TSource, System.Int64))
  name.vb: Average(Of TSource)(IEnumerable(Of TSource), Func(Of TSource, Int64))
  spec.csharp:
  - uid: System.Linq.Enumerable.Average``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int64})
    name: Average<TSource>
    fullName: System.Linq.Enumerable.Average<TSource>
  - name: (
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    fullName: <
  - name: TSource
    fullName: TSource
  - name: '>'
    fullName: '>'
  - name: ', '
    fullName: ', '
  - uid: System.Func`2
    name: Func
    fullName: System.Func
    isExternal: true
  - name: <
    fullName: <
  - name: TSource
    fullName: TSource
  - name: ', '
    fullName: ', '
  - uid: System.Int64
    name: Int64
    fullName: System.Int64
    isExternal: true
  - name: '>'
    fullName: '>'
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Linq.Enumerable.Average``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int64})
    name: Average(Of TSource)
    fullName: System.Linq.Enumerable.Average(Of TSource)
  - name: (
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - name: TSource
    fullName: TSource
  - name: )
    fullName: )
  - name: ', '
    fullName: ', '
  - uid: System.Func`2
    name: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - name: TSource
    fullName: TSource
  - name: ', '
    fullName: ', '
  - uid: System.Int64
    name: Int64
    fullName: System.Int64
    isExternal: true
  - name: )
    fullName: )
  - name: )
    fullName: )
  nameWithType: Enumerable.Average<TSource>(IEnumerable<TSource>, Func<TSource, Int64>)
  nameWithType.vb: Enumerable.Average(Of TSource)(IEnumerable(Of TSource), Func(Of TSource, Int64))
  commentId: M:System.Linq.Enumerable.Average``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int64})
- uid: System.Linq.Enumerable.Average``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Decimal}})
  isExternal: true
  name: Average<TSource>(IEnumerable<TSource>, Func<TSource, Nullable<Decimal>>)
  fullName: System.Linq.Enumerable.Average<TSource>(System.Collections.Generic.IEnumerable<TSource>, System.Func<TSource, System.Nullable<System.Decimal>>)
  fullname.vb: System.Linq.Enumerable.Average(Of TSource)(System.Collections.Generic.IEnumerable(Of TSource), System.Func(Of TSource, System.Nullable(Of System.Decimal)))
  name.vb: Average(Of TSource)(IEnumerable(Of TSource), Func(Of TSource, Nullable(Of Decimal)))
  spec.csharp:
  - uid: System.Linq.Enumerable.Average``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Decimal}})
    name: Average<TSource>
    fullName: System.Linq.Enumerable.Average<TSource>
  - name: (
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    fullName: <
  - name: TSource
    fullName: TSource
  - name: '>'
    fullName: '>'
  - name: ', '
    fullName: ', '
  - uid: System.Func`2
    name: Func
    fullName: System.Func
    isExternal: true
  - name: <
    fullName: <
  - name: TSource
    fullName: TSource
  - name: ', '
    fullName: ', '
  - uid: System.Nullable`1
    name: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    fullName: <
  - uid: System.Decimal
    name: Decimal
    fullName: System.Decimal
    isExternal: true
  - name: '>'
    fullName: '>'
  - name: '>'
    fullName: '>'
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Linq.Enumerable.Average``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Decimal}})
    name: Average(Of TSource)
    fullName: System.Linq.Enumerable.Average(Of TSource)
  - name: (
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - name: TSource
    fullName: TSource
  - name: )
    fullName: )
  - name: ', '
    fullName: ', '
  - uid: System.Func`2
    name: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - name: TSource
    fullName: TSource
  - name: ', '
    fullName: ', '
  - uid: System.Nullable`1
    name: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - uid: System.Decimal
    name: Decimal
    fullName: System.Decimal
    isExternal: true
  - name: )
    fullName: )
  - name: )
    fullName: )
  - name: )
    fullName: )
  nameWithType: Enumerable.Average<TSource>(IEnumerable<TSource>, Func<TSource, Nullable<Decimal>>)
  nameWithType.vb: Enumerable.Average(Of TSource)(IEnumerable(Of TSource), Func(Of TSource, Nullable(Of Decimal)))
  commentId: M:System.Linq.Enumerable.Average``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Decimal}})
- uid: System.Linq.Enumerable.Average``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Double}})
  isExternal: true
  name: Average<TSource>(IEnumerable<TSource>, Func<TSource, Nullable<Double>>)
  fullName: System.Linq.Enumerable.Average<TSource>(System.Collections.Generic.IEnumerable<TSource>, System.Func<TSource, System.Nullable<System.Double>>)
  fullname.vb: System.Linq.Enumerable.Average(Of TSource)(System.Collections.Generic.IEnumerable(Of TSource), System.Func(Of TSource, System.Nullable(Of System.Double)))
  name.vb: Average(Of TSource)(IEnumerable(Of TSource), Func(Of TSource, Nullable(Of Double)))
  spec.csharp:
  - uid: System.Linq.Enumerable.Average``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Double}})
    name: Average<TSource>
    fullName: System.Linq.Enumerable.Average<TSource>
  - name: (
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    fullName: <
  - name: TSource
    fullName: TSource
  - name: '>'
    fullName: '>'
  - name: ', '
    fullName: ', '
  - uid: System.Func`2
    name: Func
    fullName: System.Func
    isExternal: true
  - name: <
    fullName: <
  - name: TSource
    fullName: TSource
  - name: ', '
    fullName: ', '
  - uid: System.Nullable`1
    name: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    fullName: <
  - uid: System.Double
    name: Double
    fullName: System.Double
    isExternal: true
  - name: '>'
    fullName: '>'
  - name: '>'
    fullName: '>'
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Linq.Enumerable.Average``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Double}})
    name: Average(Of TSource)
    fullName: System.Linq.Enumerable.Average(Of TSource)
  - name: (
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - name: TSource
    fullName: TSource
  - name: )
    fullName: )
  - name: ', '
    fullName: ', '
  - uid: System.Func`2
    name: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - name: TSource
    fullName: TSource
  - name: ', '
    fullName: ', '
  - uid: System.Nullable`1
    name: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - uid: System.Double
    name: Double
    fullName: System.Double
    isExternal: true
  - name: )
    fullName: )
  - name: )
    fullName: )
  - name: )
    fullName: )
  nameWithType: Enumerable.Average<TSource>(IEnumerable<TSource>, Func<TSource, Nullable<Double>>)
  nameWithType.vb: Enumerable.Average(Of TSource)(IEnumerable(Of TSource), Func(Of TSource, Nullable(Of Double)))
  commentId: M:System.Linq.Enumerable.Average``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Double}})
- uid: System.Linq.Enumerable.Average``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Int32}})
  isExternal: true
  name: Average<TSource>(IEnumerable<TSource>, Func<TSource, Nullable<Int32>>)
  fullName: System.Linq.Enumerable.Average<TSource>(System.Collections.Generic.IEnumerable<TSource>, System.Func<TSource, System.Nullable<System.Int32>>)
  fullname.vb: System.Linq.Enumerable.Average(Of TSource)(System.Collections.Generic.IEnumerable(Of TSource), System.Func(Of TSource, System.Nullable(Of System.Int32)))
  name.vb: Average(Of TSource)(IEnumerable(Of TSource), Func(Of TSource, Nullable(Of Int32)))
  spec.csharp:
  - uid: System.Linq.Enumerable.Average``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Int32}})
    name: Average<TSource>
    fullName: System.Linq.Enumerable.Average<TSource>
  - name: (
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    fullName: <
  - name: TSource
    fullName: TSource
  - name: '>'
    fullName: '>'
  - name: ', '
    fullName: ', '
  - uid: System.Func`2
    name: Func
    fullName: System.Func
    isExternal: true
  - name: <
    fullName: <
  - name: TSource
    fullName: TSource
  - name: ', '
    fullName: ', '
  - uid: System.Nullable`1
    name: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    fullName: <
  - uid: System.Int32
    name: Int32
    fullName: System.Int32
    isExternal: true
  - name: '>'
    fullName: '>'
  - name: '>'
    fullName: '>'
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Linq.Enumerable.Average``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Int32}})
    name: Average(Of TSource)
    fullName: System.Linq.Enumerable.Average(Of TSource)
  - name: (
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - name: TSource
    fullName: TSource
  - name: )
    fullName: )
  - name: ', '
    fullName: ', '
  - uid: System.Func`2
    name: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - name: TSource
    fullName: TSource
  - name: ', '
    fullName: ', '
  - uid: System.Nullable`1
    name: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - uid: System.Int32
    name: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    fullName: )
  - name: )
    fullName: )
  - name: )
    fullName: )
  nameWithType: Enumerable.Average<TSource>(IEnumerable<TSource>, Func<TSource, Nullable<Int32>>)
  nameWithType.vb: Enumerable.Average(Of TSource)(IEnumerable(Of TSource), Func(Of TSource, Nullable(Of Int32)))
  commentId: M:System.Linq.Enumerable.Average``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Int32}})
- uid: System.Linq.Enumerable.Average``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Int64}})
  isExternal: true
  name: Average<TSource>(IEnumerable<TSource>, Func<TSource, Nullable<Int64>>)
  fullName: System.Linq.Enumerable.Average<TSource>(System.Collections.Generic.IEnumerable<TSource>, System.Func<TSource, System.Nullable<System.Int64>>)
  fullname.vb: System.Linq.Enumerable.Average(Of TSource)(System.Collections.Generic.IEnumerable(Of TSource), System.Func(Of TSource, System.Nullable(Of System.Int64)))
  name.vb: Average(Of TSource)(IEnumerable(Of TSource), Func(Of TSource, Nullable(Of Int64)))
  spec.csharp:
  - uid: System.Linq.Enumerable.Average``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Int64}})
    name: Average<TSource>
    fullName: System.Linq.Enumerable.Average<TSource>
  - name: (
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    fullName: <
  - name: TSource
    fullName: TSource
  - name: '>'
    fullName: '>'
  - name: ', '
    fullName: ', '
  - uid: System.Func`2
    name: Func
    fullName: System.Func
    isExternal: true
  - name: <
    fullName: <
  - name: TSource
    fullName: TSource
  - name: ', '
    fullName: ', '
  - uid: System.Nullable`1
    name: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    fullName: <
  - uid: System.Int64
    name: Int64
    fullName: System.Int64
    isExternal: true
  - name: '>'
    fullName: '>'
  - name: '>'
    fullName: '>'
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Linq.Enumerable.Average``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Int64}})
    name: Average(Of TSource)
    fullName: System.Linq.Enumerable.Average(Of TSource)
  - name: (
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - name: TSource
    fullName: TSource
  - name: )
    fullName: )
  - name: ', '
    fullName: ', '
  - uid: System.Func`2
    name: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - name: TSource
    fullName: TSource
  - name: ', '
    fullName: ', '
  - uid: System.Nullable`1
    name: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - uid: System.Int64
    name: Int64
    fullName: System.Int64
    isExternal: true
  - name: )
    fullName: )
  - name: )
    fullName: )
  - name: )
    fullName: )
  nameWithType: Enumerable.Average<TSource>(IEnumerable<TSource>, Func<TSource, Nullable<Int64>>)
  nameWithType.vb: Enumerable.Average(Of TSource)(IEnumerable(Of TSource), Func(Of TSource, Nullable(Of Int64)))
  commentId: M:System.Linq.Enumerable.Average``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Int64}})
- uid: System.Linq.Enumerable.Average``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Single}})
  isExternal: true
  name: Average<TSource>(IEnumerable<TSource>, Func<TSource, Nullable<Single>>)
  fullName: System.Linq.Enumerable.Average<TSource>(System.Collections.Generic.IEnumerable<TSource>, System.Func<TSource, System.Nullable<System.Single>>)
  fullname.vb: System.Linq.Enumerable.Average(Of TSource)(System.Collections.Generic.IEnumerable(Of TSource), System.Func(Of TSource, System.Nullable(Of System.Single)))
  name.vb: Average(Of TSource)(IEnumerable(Of TSource), Func(Of TSource, Nullable(Of Single)))
  spec.csharp:
  - uid: System.Linq.Enumerable.Average``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Single}})
    name: Average<TSource>
    fullName: System.Linq.Enumerable.Average<TSource>
  - name: (
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    fullName: <
  - name: TSource
    fullName: TSource
  - name: '>'
    fullName: '>'
  - name: ', '
    fullName: ', '
  - uid: System.Func`2
    name: Func
    fullName: System.Func
    isExternal: true
  - name: <
    fullName: <
  - name: TSource
    fullName: TSource
  - name: ', '
    fullName: ', '
  - uid: System.Nullable`1
    name: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    fullName: <
  - uid: System.Single
    name: Single
    fullName: System.Single
    isExternal: true
  - name: '>'
    fullName: '>'
  - name: '>'
    fullName: '>'
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Linq.Enumerable.Average``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Single}})
    name: Average(Of TSource)
    fullName: System.Linq.Enumerable.Average(Of TSource)
  - name: (
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - name: TSource
    fullName: TSource
  - name: )
    fullName: )
  - name: ', '
    fullName: ', '
  - uid: System.Func`2
    name: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - name: TSource
    fullName: TSource
  - name: ', '
    fullName: ', '
  - uid: System.Nullable`1
    name: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - uid: System.Single
    name: Single
    fullName: System.Single
    isExternal: true
  - name: )
    fullName: )
  - name: )
    fullName: )
  - name: )
    fullName: )
  nameWithType: Enumerable.Average<TSource>(IEnumerable<TSource>, Func<TSource, Nullable<Single>>)
  nameWithType.vb: Enumerable.Average(Of TSource)(IEnumerable(Of TSource), Func(Of TSource, Nullable(Of Single)))
  commentId: M:System.Linq.Enumerable.Average``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Single}})
- uid: System.Linq.Enumerable.Average``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Single})
  isExternal: true
  name: Average<TSource>(IEnumerable<TSource>, Func<TSource, Single>)
  fullName: System.Linq.Enumerable.Average<TSource>(System.Collections.Generic.IEnumerable<TSource>, System.Func<TSource, System.Single>)
  fullname.vb: System.Linq.Enumerable.Average(Of TSource)(System.Collections.Generic.IEnumerable(Of TSource), System.Func(Of TSource, System.Single))
  name.vb: Average(Of TSource)(IEnumerable(Of TSource), Func(Of TSource, Single))
  spec.csharp:
  - uid: System.Linq.Enumerable.Average``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Single})
    name: Average<TSource>
    fullName: System.Linq.Enumerable.Average<TSource>
  - name: (
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    fullName: <
  - name: TSource
    fullName: TSource
  - name: '>'
    fullName: '>'
  - name: ', '
    fullName: ', '
  - uid: System.Func`2
    name: Func
    fullName: System.Func
    isExternal: true
  - name: <
    fullName: <
  - name: TSource
    fullName: TSource
  - name: ', '
    fullName: ', '
  - uid: System.Single
    name: Single
    fullName: System.Single
    isExternal: true
  - name: '>'
    fullName: '>'
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Linq.Enumerable.Average``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Single})
    name: Average(Of TSource)
    fullName: System.Linq.Enumerable.Average(Of TSource)
  - name: (
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - name: TSource
    fullName: TSource
  - name: )
    fullName: )
  - name: ', '
    fullName: ', '
  - uid: System.Func`2
    name: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - name: TSource
    fullName: TSource
  - name: ', '
    fullName: ', '
  - uid: System.Single
    name: Single
    fullName: System.Single
    isExternal: true
  - name: )
    fullName: )
  - name: )
    fullName: )
  nameWithType: Enumerable.Average<TSource>(IEnumerable<TSource>, Func<TSource, Single>)
  nameWithType.vb: Enumerable.Average(Of TSource)(IEnumerable(Of TSource), Func(Of TSource, Single))
  commentId: M:System.Linq.Enumerable.Average``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Single})
- uid: System.Linq.Enumerable.Cast``1(System.Collections.IEnumerable)
  isExternal: true
  name: Cast<TResult>(IEnumerable)
  fullName: System.Linq.Enumerable.Cast<TResult>(System.Collections.IEnumerable)
  fullname.vb: System.Linq.Enumerable.Cast(Of TResult)(System.Collections.IEnumerable)
  name.vb: Cast(Of TResult)(IEnumerable)
  spec.csharp:
  - uid: System.Linq.Enumerable.Cast``1(System.Collections.IEnumerable)
    name: Cast<TResult>
    fullName: System.Linq.Enumerable.Cast<TResult>
  - name: (
    fullName: (
  - uid: System.Collections.IEnumerable
    name: IEnumerable
    fullName: System.Collections.IEnumerable
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Linq.Enumerable.Cast``1(System.Collections.IEnumerable)
    name: Cast(Of TResult)
    fullName: System.Linq.Enumerable.Cast(Of TResult)
  - name: (
    fullName: (
  - uid: System.Collections.IEnumerable
    name: IEnumerable
    fullName: System.Collections.IEnumerable
    isExternal: true
  - name: )
    fullName: )
  nameWithType: Enumerable.Cast<TResult>(IEnumerable)
  nameWithType.vb: Enumerable.Cast(Of TResult)(IEnumerable)
  commentId: M:System.Linq.Enumerable.Cast``1(System.Collections.IEnumerable)
- uid: System.Linq.Enumerable.Concat``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0})
  isExternal: true
  name: Concat<TSource>(IEnumerable<TSource>, IEnumerable<TSource>)
  fullName: System.Linq.Enumerable.Concat<TSource>(System.Collections.Generic.IEnumerable<TSource>, System.Collections.Generic.IEnumerable<TSource>)
  fullname.vb: System.Linq.Enumerable.Concat(Of TSource)(System.Collections.Generic.IEnumerable(Of TSource), System.Collections.Generic.IEnumerable(Of TSource))
  name.vb: Concat(Of TSource)(IEnumerable(Of TSource), IEnumerable(Of TSource))
  spec.csharp:
  - uid: System.Linq.Enumerable.Concat``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0})
    name: Concat<TSource>
    fullName: System.Linq.Enumerable.Concat<TSource>
  - name: (
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    fullName: <
  - name: TSource
    fullName: TSource
  - name: '>'
    fullName: '>'
  - name: ', '
    fullName: ', '
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    fullName: <
  - name: TSource
    fullName: TSource
  - name: '>'
    fullName: '>'
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Linq.Enumerable.Concat``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0})
    name: Concat(Of TSource)
    fullName: System.Linq.Enumerable.Concat(Of TSource)
  - name: (
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - name: TSource
    fullName: TSource
  - name: )
    fullName: )
  - name: ', '
    fullName: ', '
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - name: TSource
    fullName: TSource
  - name: )
    fullName: )
  - name: )
    fullName: )
  nameWithType: Enumerable.Concat<TSource>(IEnumerable<TSource>, IEnumerable<TSource>)
  nameWithType.vb: Enumerable.Concat(Of TSource)(IEnumerable(Of TSource), IEnumerable(Of TSource))
  commentId: M:System.Linq.Enumerable.Concat``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0})
- uid: System.Linq.Enumerable.Append``1(System.Collections.Generic.IEnumerable{``0},``0)
  isExternal: true
  name: Append<TSource>(IEnumerable<TSource>, TSource)
  fullName: System.Linq.Enumerable.Append<TSource>(System.Collections.Generic.IEnumerable<TSource>, TSource)
  fullname.vb: System.Linq.Enumerable.Append(Of TSource)(System.Collections.Generic.IEnumerable(Of TSource), TSource)
  name.vb: Append(Of TSource)(IEnumerable(Of TSource), TSource)
  spec.csharp:
  - uid: System.Linq.Enumerable.Append``1(System.Collections.Generic.IEnumerable{``0},``0)
    name: Append<TSource>
    fullName: System.Linq.Enumerable.Append<TSource>
  - name: (
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    fullName: <
  - name: TSource
    fullName: TSource
  - name: '>'
    fullName: '>'
  - name: ', '
    fullName: ', '
  - name: TSource
    fullName: TSource
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Linq.Enumerable.Append``1(System.Collections.Generic.IEnumerable{``0},``0)
    name: Append(Of TSource)
    fullName: System.Linq.Enumerable.Append(Of TSource)
  - name: (
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - name: TSource
    fullName: TSource
  - name: )
    fullName: )
  - name: ', '
    fullName: ', '
  - name: TSource
    fullName: TSource
  - name: )
    fullName: )
  nameWithType: Enumerable.Append<TSource>(IEnumerable<TSource>, TSource)
  nameWithType.vb: Enumerable.Append(Of TSource)(IEnumerable(Of TSource), TSource)
  commentId: M:System.Linq.Enumerable.Append``1(System.Collections.Generic.IEnumerable{``0},``0)
- uid: System.Linq.Enumerable.Prepend``1(System.Collections.Generic.IEnumerable{``0},``0)
  isExternal: true
  name: Prepend<TSource>(IEnumerable<TSource>, TSource)
  fullName: System.Linq.Enumerable.Prepend<TSource>(System.Collections.Generic.IEnumerable<TSource>, TSource)
  fullname.vb: System.Linq.Enumerable.Prepend(Of TSource)(System.Collections.Generic.IEnumerable(Of TSource), TSource)
  name.vb: Prepend(Of TSource)(IEnumerable(Of TSource), TSource)
  spec.csharp:
  - uid: System.Linq.Enumerable.Prepend``1(System.Collections.Generic.IEnumerable{``0},``0)
    name: Prepend<TSource>
    fullName: System.Linq.Enumerable.Prepend<TSource>
  - name: (
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    fullName: <
  - name: TSource
    fullName: TSource
  - name: '>'
    fullName: '>'
  - name: ', '
    fullName: ', '
  - name: TSource
    fullName: TSource
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Linq.Enumerable.Prepend``1(System.Collections.Generic.IEnumerable{``0},``0)
    name: Prepend(Of TSource)
    fullName: System.Linq.Enumerable.Prepend(Of TSource)
  - name: (
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - name: TSource
    fullName: TSource
  - name: )
    fullName: )
  - name: ', '
    fullName: ', '
  - name: TSource
    fullName: TSource
  - name: )
    fullName: )
  nameWithType: Enumerable.Prepend<TSource>(IEnumerable<TSource>, TSource)
  nameWithType.vb: Enumerable.Prepend(Of TSource)(IEnumerable(Of TSource), TSource)
  commentId: M:System.Linq.Enumerable.Prepend``1(System.Collections.Generic.IEnumerable{``0},``0)
- uid: System.Linq.Enumerable.Contains``1(System.Collections.Generic.IEnumerable{``0},``0)
  isExternal: true
  name: Contains<TSource>(IEnumerable<TSource>, TSource)
  fullName: System.Linq.Enumerable.Contains<TSource>(System.Collections.Generic.IEnumerable<TSource>, TSource)
  fullname.vb: System.Linq.Enumerable.Contains(Of TSource)(System.Collections.Generic.IEnumerable(Of TSource), TSource)
  name.vb: Contains(Of TSource)(IEnumerable(Of TSource), TSource)
  spec.csharp:
  - uid: System.Linq.Enumerable.Contains``1(System.Collections.Generic.IEnumerable{``0},``0)
    name: Contains<TSource>
    fullName: System.Linq.Enumerable.Contains<TSource>
  - name: (
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    fullName: <
  - name: TSource
    fullName: TSource
  - name: '>'
    fullName: '>'
  - name: ', '
    fullName: ', '
  - name: TSource
    fullName: TSource
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Linq.Enumerable.Contains``1(System.Collections.Generic.IEnumerable{``0},``0)
    name: Contains(Of TSource)
    fullName: System.Linq.Enumerable.Contains(Of TSource)
  - name: (
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - name: TSource
    fullName: TSource
  - name: )
    fullName: )
  - name: ', '
    fullName: ', '
  - name: TSource
    fullName: TSource
  - name: )
    fullName: )
  nameWithType: Enumerable.Contains<TSource>(IEnumerable<TSource>, TSource)
  nameWithType.vb: Enumerable.Contains(Of TSource)(IEnumerable(Of TSource), TSource)
  commentId: M:System.Linq.Enumerable.Contains``1(System.Collections.Generic.IEnumerable{``0},``0)
- uid: System.Linq.Enumerable.Contains``1(System.Collections.Generic.IEnumerable{``0},``0,System.Collections.Generic.IEqualityComparer{``0})
  isExternal: true
  name: Contains<TSource>(IEnumerable<TSource>, TSource, IEqualityComparer<TSource>)
  fullName: System.Linq.Enumerable.Contains<TSource>(System.Collections.Generic.IEnumerable<TSource>, TSource, System.Collections.Generic.IEqualityComparer<TSource>)
  fullname.vb: System.Linq.Enumerable.Contains(Of TSource)(System.Collections.Generic.IEnumerable(Of TSource), TSource, System.Collections.Generic.IEqualityComparer(Of TSource))
  name.vb: Contains(Of TSource)(IEnumerable(Of TSource), TSource, IEqualityComparer(Of TSource))
  spec.csharp:
  - uid: System.Linq.Enumerable.Contains``1(System.Collections.Generic.IEnumerable{``0},``0,System.Collections.Generic.IEqualityComparer{``0})
    name: Contains<TSource>
    fullName: System.Linq.Enumerable.Contains<TSource>
  - name: (
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    fullName: <
  - name: TSource
    fullName: TSource
  - name: '>'
    fullName: '>'
  - name: ', '
    fullName: ', '
  - name: TSource
    fullName: TSource
  - name: ', '
    fullName: ', '
  - uid: System.Collections.Generic.IEqualityComparer`1
    name: IEqualityComparer
    fullName: System.Collections.Generic.IEqualityComparer
    isExternal: true
  - name: <
    fullName: <
  - name: TSource
    fullName: TSource
  - name: '>'
    fullName: '>'
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Linq.Enumerable.Contains``1(System.Collections.Generic.IEnumerable{``0},``0,System.Collections.Generic.IEqualityComparer{``0})
    name: Contains(Of TSource)
    fullName: System.Linq.Enumerable.Contains(Of TSource)
  - name: (
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - name: TSource
    fullName: TSource
  - name: )
    fullName: )
  - name: ', '
    fullName: ', '
  - name: TSource
    fullName: TSource
  - name: ', '
    fullName: ', '
  - uid: System.Collections.Generic.IEqualityComparer`1
    name: IEqualityComparer
    fullName: System.Collections.Generic.IEqualityComparer
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - name: TSource
    fullName: TSource
  - name: )
    fullName: )
  - name: )
    fullName: )
  nameWithType: Enumerable.Contains<TSource>(IEnumerable<TSource>, TSource, IEqualityComparer<TSource>)
  nameWithType.vb: Enumerable.Contains(Of TSource)(IEnumerable(Of TSource), TSource, IEqualityComparer(Of TSource))
  commentId: M:System.Linq.Enumerable.Contains``1(System.Collections.Generic.IEnumerable{``0},``0,System.Collections.Generic.IEqualityComparer{``0})
- uid: System.Linq.Enumerable.Count``1(System.Collections.Generic.IEnumerable{``0})
  isExternal: true
  name: Count<TSource>(IEnumerable<TSource>)
  fullName: System.Linq.Enumerable.Count<TSource>(System.Collections.Generic.IEnumerable<TSource>)
  fullname.vb: System.Linq.Enumerable.Count(Of TSource)(System.Collections.Generic.IEnumerable(Of TSource))
  name.vb: Count(Of TSource)(IEnumerable(Of TSource))
  spec.csharp:
  - uid: System.Linq.Enumerable.Count``1(System.Collections.Generic.IEnumerable{``0})
    name: Count<TSource>
    fullName: System.Linq.Enumerable.Count<TSource>
  - name: (
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    fullName: <
  - name: TSource
    fullName: TSource
  - name: '>'
    fullName: '>'
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Linq.Enumerable.Count``1(System.Collections.Generic.IEnumerable{``0})
    name: Count(Of TSource)
    fullName: System.Linq.Enumerable.Count(Of TSource)
  - name: (
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - name: TSource
    fullName: TSource
  - name: )
    fullName: )
  - name: )
    fullName: )
  nameWithType: Enumerable.Count<TSource>(IEnumerable<TSource>)
  nameWithType.vb: Enumerable.Count(Of TSource)(IEnumerable(Of TSource))
  commentId: M:System.Linq.Enumerable.Count``1(System.Collections.Generic.IEnumerable{``0})
- uid: System.Linq.Enumerable.Count``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})
  isExternal: true
  name: Count<TSource>(IEnumerable<TSource>, Func<TSource, Boolean>)
  fullName: System.Linq.Enumerable.Count<TSource>(System.Collections.Generic.IEnumerable<TSource>, System.Func<TSource, System.Boolean>)
  fullname.vb: System.Linq.Enumerable.Count(Of TSource)(System.Collections.Generic.IEnumerable(Of TSource), System.Func(Of TSource, System.Boolean))
  name.vb: Count(Of TSource)(IEnumerable(Of TSource), Func(Of TSource, Boolean))
  spec.csharp:
  - uid: System.Linq.Enumerable.Count``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})
    name: Count<TSource>
    fullName: System.Linq.Enumerable.Count<TSource>
  - name: (
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    fullName: <
  - name: TSource
    fullName: TSource
  - name: '>'
    fullName: '>'
  - name: ', '
    fullName: ', '
  - uid: System.Func`2
    name: Func
    fullName: System.Func
    isExternal: true
  - name: <
    fullName: <
  - name: TSource
    fullName: TSource
  - name: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: '>'
    fullName: '>'
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Linq.Enumerable.Count``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})
    name: Count(Of TSource)
    fullName: System.Linq.Enumerable.Count(Of TSource)
  - name: (
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - name: TSource
    fullName: TSource
  - name: )
    fullName: )
  - name: ', '
    fullName: ', '
  - uid: System.Func`2
    name: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - name: TSource
    fullName: TSource
  - name: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    fullName: )
  - name: )
    fullName: )
  nameWithType: Enumerable.Count<TSource>(IEnumerable<TSource>, Func<TSource, Boolean>)
  nameWithType.vb: Enumerable.Count(Of TSource)(IEnumerable(Of TSource), Func(Of TSource, Boolean))
  commentId: M:System.Linq.Enumerable.Count``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})
- uid: System.Linq.Enumerable.DefaultIfEmpty``1(System.Collections.Generic.IEnumerable{``0})
  isExternal: true
  name: DefaultIfEmpty<TSource>(IEnumerable<TSource>)
  fullName: System.Linq.Enumerable.DefaultIfEmpty<TSource>(System.Collections.Generic.IEnumerable<TSource>)
  fullname.vb: System.Linq.Enumerable.DefaultIfEmpty(Of TSource)(System.Collections.Generic.IEnumerable(Of TSource))
  name.vb: DefaultIfEmpty(Of TSource)(IEnumerable(Of TSource))
  spec.csharp:
  - uid: System.Linq.Enumerable.DefaultIfEmpty``1(System.Collections.Generic.IEnumerable{``0})
    name: DefaultIfEmpty<TSource>
    fullName: System.Linq.Enumerable.DefaultIfEmpty<TSource>
  - name: (
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    fullName: <
  - name: TSource
    fullName: TSource
  - name: '>'
    fullName: '>'
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Linq.Enumerable.DefaultIfEmpty``1(System.Collections.Generic.IEnumerable{``0})
    name: DefaultIfEmpty(Of TSource)
    fullName: System.Linq.Enumerable.DefaultIfEmpty(Of TSource)
  - name: (
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - name: TSource
    fullName: TSource
  - name: )
    fullName: )
  - name: )
    fullName: )
  nameWithType: Enumerable.DefaultIfEmpty<TSource>(IEnumerable<TSource>)
  nameWithType.vb: Enumerable.DefaultIfEmpty(Of TSource)(IEnumerable(Of TSource))
  commentId: M:System.Linq.Enumerable.DefaultIfEmpty``1(System.Collections.Generic.IEnumerable{``0})
- uid: System.Linq.Enumerable.DefaultIfEmpty``1(System.Collections.Generic.IEnumerable{``0},``0)
  isExternal: true
  name: DefaultIfEmpty<TSource>(IEnumerable<TSource>, TSource)
  fullName: System.Linq.Enumerable.DefaultIfEmpty<TSource>(System.Collections.Generic.IEnumerable<TSource>, TSource)
  fullname.vb: System.Linq.Enumerable.DefaultIfEmpty(Of TSource)(System.Collections.Generic.IEnumerable(Of TSource), TSource)
  name.vb: DefaultIfEmpty(Of TSource)(IEnumerable(Of TSource), TSource)
  spec.csharp:
  - uid: System.Linq.Enumerable.DefaultIfEmpty``1(System.Collections.Generic.IEnumerable{``0},``0)
    name: DefaultIfEmpty<TSource>
    fullName: System.Linq.Enumerable.DefaultIfEmpty<TSource>
  - name: (
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    fullName: <
  - name: TSource
    fullName: TSource
  - name: '>'
    fullName: '>'
  - name: ', '
    fullName: ', '
  - name: TSource
    fullName: TSource
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Linq.Enumerable.DefaultIfEmpty``1(System.Collections.Generic.IEnumerable{``0},``0)
    name: DefaultIfEmpty(Of TSource)
    fullName: System.Linq.Enumerable.DefaultIfEmpty(Of TSource)
  - name: (
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - name: TSource
    fullName: TSource
  - name: )
    fullName: )
  - name: ', '
    fullName: ', '
  - name: TSource
    fullName: TSource
  - name: )
    fullName: )
  nameWithType: Enumerable.DefaultIfEmpty<TSource>(IEnumerable<TSource>, TSource)
  nameWithType.vb: Enumerable.DefaultIfEmpty(Of TSource)(IEnumerable(Of TSource), TSource)
  commentId: M:System.Linq.Enumerable.DefaultIfEmpty``1(System.Collections.Generic.IEnumerable{``0},``0)
- uid: System.Linq.Enumerable.Distinct``1(System.Collections.Generic.IEnumerable{``0})
  isExternal: true
  name: Distinct<TSource>(IEnumerable<TSource>)
  fullName: System.Linq.Enumerable.Distinct<TSource>(System.Collections.Generic.IEnumerable<TSource>)
  fullname.vb: System.Linq.Enumerable.Distinct(Of TSource)(System.Collections.Generic.IEnumerable(Of TSource))
  name.vb: Distinct(Of TSource)(IEnumerable(Of TSource))
  spec.csharp:
  - uid: System.Linq.Enumerable.Distinct``1(System.Collections.Generic.IEnumerable{``0})
    name: Distinct<TSource>
    fullName: System.Linq.Enumerable.Distinct<TSource>
  - name: (
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    fullName: <
  - name: TSource
    fullName: TSource
  - name: '>'
    fullName: '>'
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Linq.Enumerable.Distinct``1(System.Collections.Generic.IEnumerable{``0})
    name: Distinct(Of TSource)
    fullName: System.Linq.Enumerable.Distinct(Of TSource)
  - name: (
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - name: TSource
    fullName: TSource
  - name: )
    fullName: )
  - name: )
    fullName: )
  nameWithType: Enumerable.Distinct<TSource>(IEnumerable<TSource>)
  nameWithType.vb: Enumerable.Distinct(Of TSource)(IEnumerable(Of TSource))
  commentId: M:System.Linq.Enumerable.Distinct``1(System.Collections.Generic.IEnumerable{``0})
- uid: System.Linq.Enumerable.Distinct``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEqualityComparer{``0})
  isExternal: true
  name: Distinct<TSource>(IEnumerable<TSource>, IEqualityComparer<TSource>)
  fullName: System.Linq.Enumerable.Distinct<TSource>(System.Collections.Generic.IEnumerable<TSource>, System.Collections.Generic.IEqualityComparer<TSource>)
  fullname.vb: System.Linq.Enumerable.Distinct(Of TSource)(System.Collections.Generic.IEnumerable(Of TSource), System.Collections.Generic.IEqualityComparer(Of TSource))
  name.vb: Distinct(Of TSource)(IEnumerable(Of TSource), IEqualityComparer(Of TSource))
  spec.csharp:
  - uid: System.Linq.Enumerable.Distinct``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEqualityComparer{``0})
    name: Distinct<TSource>
    fullName: System.Linq.Enumerable.Distinct<TSource>
  - name: (
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    fullName: <
  - name: TSource
    fullName: TSource
  - name: '>'
    fullName: '>'
  - name: ', '
    fullName: ', '
  - uid: System.Collections.Generic.IEqualityComparer`1
    name: IEqualityComparer
    fullName: System.Collections.Generic.IEqualityComparer
    isExternal: true
  - name: <
    fullName: <
  - name: TSource
    fullName: TSource
  - name: '>'
    fullName: '>'
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Linq.Enumerable.Distinct``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEqualityComparer{``0})
    name: Distinct(Of TSource)
    fullName: System.Linq.Enumerable.Distinct(Of TSource)
  - name: (
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - name: TSource
    fullName: TSource
  - name: )
    fullName: )
  - name: ', '
    fullName: ', '
  - uid: System.Collections.Generic.IEqualityComparer`1
    name: IEqualityComparer
    fullName: System.Collections.Generic.IEqualityComparer
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - name: TSource
    fullName: TSource
  - name: )
    fullName: )
  - name: )
    fullName: )
  nameWithType: Enumerable.Distinct<TSource>(IEnumerable<TSource>, IEqualityComparer<TSource>)
  nameWithType.vb: Enumerable.Distinct(Of TSource)(IEnumerable(Of TSource), IEqualityComparer(Of TSource))
  commentId: M:System.Linq.Enumerable.Distinct``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEqualityComparer{``0})
- uid: System.Linq.Enumerable.ElementAt``1(System.Collections.Generic.IEnumerable{``0},System.Int32)
  isExternal: true
  name: ElementAt<TSource>(IEnumerable<TSource>, Int32)
  fullName: System.Linq.Enumerable.ElementAt<TSource>(System.Collections.Generic.IEnumerable<TSource>, System.Int32)
  fullname.vb: System.Linq.Enumerable.ElementAt(Of TSource)(System.Collections.Generic.IEnumerable(Of TSource), System.Int32)
  name.vb: ElementAt(Of TSource)(IEnumerable(Of TSource), Int32)
  spec.csharp:
  - uid: System.Linq.Enumerable.ElementAt``1(System.Collections.Generic.IEnumerable{``0},System.Int32)
    name: ElementAt<TSource>
    fullName: System.Linq.Enumerable.ElementAt<TSource>
  - name: (
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    fullName: <
  - name: TSource
    fullName: TSource
  - name: '>'
    fullName: '>'
  - name: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Linq.Enumerable.ElementAt``1(System.Collections.Generic.IEnumerable{``0},System.Int32)
    name: ElementAt(Of TSource)
    fullName: System.Linq.Enumerable.ElementAt(Of TSource)
  - name: (
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - name: TSource
    fullName: TSource
  - name: )
    fullName: )
  - name: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    fullName: )
  nameWithType: Enumerable.ElementAt<TSource>(IEnumerable<TSource>, Int32)
  nameWithType.vb: Enumerable.ElementAt(Of TSource)(IEnumerable(Of TSource), Int32)
  commentId: M:System.Linq.Enumerable.ElementAt``1(System.Collections.Generic.IEnumerable{``0},System.Int32)
- uid: System.Linq.Enumerable.ElementAtOrDefault``1(System.Collections.Generic.IEnumerable{``0},System.Int32)
  isExternal: true
  name: ElementAtOrDefault<TSource>(IEnumerable<TSource>, Int32)
  fullName: System.Linq.Enumerable.ElementAtOrDefault<TSource>(System.Collections.Generic.IEnumerable<TSource>, System.Int32)
  fullname.vb: System.Linq.Enumerable.ElementAtOrDefault(Of TSource)(System.Collections.Generic.IEnumerable(Of TSource), System.Int32)
  name.vb: ElementAtOrDefault(Of TSource)(IEnumerable(Of TSource), Int32)
  spec.csharp:
  - uid: System.Linq.Enumerable.ElementAtOrDefault``1(System.Collections.Generic.IEnumerable{``0},System.Int32)
    name: ElementAtOrDefault<TSource>
    fullName: System.Linq.Enumerable.ElementAtOrDefault<TSource>
  - name: (
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    fullName: <
  - name: TSource
    fullName: TSource
  - name: '>'
    fullName: '>'
  - name: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Linq.Enumerable.ElementAtOrDefault``1(System.Collections.Generic.IEnumerable{``0},System.Int32)
    name: ElementAtOrDefault(Of TSource)
    fullName: System.Linq.Enumerable.ElementAtOrDefault(Of TSource)
  - name: (
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - name: TSource
    fullName: TSource
  - name: )
    fullName: )
  - name: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    fullName: )
  nameWithType: Enumerable.ElementAtOrDefault<TSource>(IEnumerable<TSource>, Int32)
  nameWithType.vb: Enumerable.ElementAtOrDefault(Of TSource)(IEnumerable(Of TSource), Int32)
  commentId: M:System.Linq.Enumerable.ElementAtOrDefault``1(System.Collections.Generic.IEnumerable{``0},System.Int32)
- uid: System.Linq.Enumerable.Except``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0})
  isExternal: true
  name: Except<TSource>(IEnumerable<TSource>, IEnumerable<TSource>)
  fullName: System.Linq.Enumerable.Except<TSource>(System.Collections.Generic.IEnumerable<TSource>, System.Collections.Generic.IEnumerable<TSource>)
  fullname.vb: System.Linq.Enumerable.Except(Of TSource)(System.Collections.Generic.IEnumerable(Of TSource), System.Collections.Generic.IEnumerable(Of TSource))
  name.vb: Except(Of TSource)(IEnumerable(Of TSource), IEnumerable(Of TSource))
  spec.csharp:
  - uid: System.Linq.Enumerable.Except``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0})
    name: Except<TSource>
    fullName: System.Linq.Enumerable.Except<TSource>
  - name: (
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    fullName: <
  - name: TSource
    fullName: TSource
  - name: '>'
    fullName: '>'
  - name: ', '
    fullName: ', '
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    fullName: <
  - name: TSource
    fullName: TSource
  - name: '>'
    fullName: '>'
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Linq.Enumerable.Except``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0})
    name: Except(Of TSource)
    fullName: System.Linq.Enumerable.Except(Of TSource)
  - name: (
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - name: TSource
    fullName: TSource
  - name: )
    fullName: )
  - name: ', '
    fullName: ', '
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - name: TSource
    fullName: TSource
  - name: )
    fullName: )
  - name: )
    fullName: )
  nameWithType: Enumerable.Except<TSource>(IEnumerable<TSource>, IEnumerable<TSource>)
  nameWithType.vb: Enumerable.Except(Of TSource)(IEnumerable(Of TSource), IEnumerable(Of TSource))
  commentId: M:System.Linq.Enumerable.Except``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0})
- uid: System.Linq.Enumerable.Except``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEqualityComparer{``0})
  isExternal: true
  name: Except<TSource>(IEnumerable<TSource>, IEnumerable<TSource>, IEqualityComparer<TSource>)
  fullName: System.Linq.Enumerable.Except<TSource>(System.Collections.Generic.IEnumerable<TSource>, System.Collections.Generic.IEnumerable<TSource>, System.Collections.Generic.IEqualityComparer<TSource>)
  fullname.vb: System.Linq.Enumerable.Except(Of TSource)(System.Collections.Generic.IEnumerable(Of TSource), System.Collections.Generic.IEnumerable(Of TSource), System.Collections.Generic.IEqualityComparer(Of TSource))
  name.vb: Except(Of TSource)(IEnumerable(Of TSource), IEnumerable(Of TSource), IEqualityComparer(Of TSource))
  spec.csharp:
  - uid: System.Linq.Enumerable.Except``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEqualityComparer{``0})
    name: Except<TSource>
    fullName: System.Linq.Enumerable.Except<TSource>
  - name: (
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    fullName: <
  - name: TSource
    fullName: TSource
  - name: '>'
    fullName: '>'
  - name: ', '
    fullName: ', '
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    fullName: <
  - name: TSource
    fullName: TSource
  - name: '>'
    fullName: '>'
  - name: ', '
    fullName: ', '
  - uid: System.Collections.Generic.IEqualityComparer`1
    name: IEqualityComparer
    fullName: System.Collections.Generic.IEqualityComparer
    isExternal: true
  - name: <
    fullName: <
  - name: TSource
    fullName: TSource
  - name: '>'
    fullName: '>'
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Linq.Enumerable.Except``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEqualityComparer{``0})
    name: Except(Of TSource)
    fullName: System.Linq.Enumerable.Except(Of TSource)
  - name: (
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - name: TSource
    fullName: TSource
  - name: )
    fullName: )
  - name: ', '
    fullName: ', '
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - name: TSource
    fullName: TSource
  - name: )
    fullName: )
  - name: ', '
    fullName: ', '
  - uid: System.Collections.Generic.IEqualityComparer`1
    name: IEqualityComparer
    fullName: System.Collections.Generic.IEqualityComparer
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - name: TSource
    fullName: TSource
  - name: )
    fullName: )
  - name: )
    fullName: )
  nameWithType: Enumerable.Except<TSource>(IEnumerable<TSource>, IEnumerable<TSource>, IEqualityComparer<TSource>)
  nameWithType.vb: Enumerable.Except(Of TSource)(IEnumerable(Of TSource), IEnumerable(Of TSource), IEqualityComparer(Of TSource))
  commentId: M:System.Linq.Enumerable.Except``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEqualityComparer{``0})
- uid: System.Linq.Enumerable.First``1(System.Collections.Generic.IEnumerable{``0})
  isExternal: true
  name: First<TSource>(IEnumerable<TSource>)
  fullName: System.Linq.Enumerable.First<TSource>(System.Collections.Generic.IEnumerable<TSource>)
  fullname.vb: System.Linq.Enumerable.First(Of TSource)(System.Collections.Generic.IEnumerable(Of TSource))
  name.vb: First(Of TSource)(IEnumerable(Of TSource))
  spec.csharp:
  - uid: System.Linq.Enumerable.First``1(System.Collections.Generic.IEnumerable{``0})
    name: First<TSource>
    fullName: System.Linq.Enumerable.First<TSource>
  - name: (
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    fullName: <
  - name: TSource
    fullName: TSource
  - name: '>'
    fullName: '>'
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Linq.Enumerable.First``1(System.Collections.Generic.IEnumerable{``0})
    name: First(Of TSource)
    fullName: System.Linq.Enumerable.First(Of TSource)
  - name: (
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - name: TSource
    fullName: TSource
  - name: )
    fullName: )
  - name: )
    fullName: )
  nameWithType: Enumerable.First<TSource>(IEnumerable<TSource>)
  nameWithType.vb: Enumerable.First(Of TSource)(IEnumerable(Of TSource))
  commentId: M:System.Linq.Enumerable.First``1(System.Collections.Generic.IEnumerable{``0})
- uid: System.Linq.Enumerable.First``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})
  isExternal: true
  name: First<TSource>(IEnumerable<TSource>, Func<TSource, Boolean>)
  fullName: System.Linq.Enumerable.First<TSource>(System.Collections.Generic.IEnumerable<TSource>, System.Func<TSource, System.Boolean>)
  fullname.vb: System.Linq.Enumerable.First(Of TSource)(System.Collections.Generic.IEnumerable(Of TSource), System.Func(Of TSource, System.Boolean))
  name.vb: First(Of TSource)(IEnumerable(Of TSource), Func(Of TSource, Boolean))
  spec.csharp:
  - uid: System.Linq.Enumerable.First``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})
    name: First<TSource>
    fullName: System.Linq.Enumerable.First<TSource>
  - name: (
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    fullName: <
  - name: TSource
    fullName: TSource
  - name: '>'
    fullName: '>'
  - name: ', '
    fullName: ', '
  - uid: System.Func`2
    name: Func
    fullName: System.Func
    isExternal: true
  - name: <
    fullName: <
  - name: TSource
    fullName: TSource
  - name: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: '>'
    fullName: '>'
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Linq.Enumerable.First``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})
    name: First(Of TSource)
    fullName: System.Linq.Enumerable.First(Of TSource)
  - name: (
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - name: TSource
    fullName: TSource
  - name: )
    fullName: )
  - name: ', '
    fullName: ', '
  - uid: System.Func`2
    name: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - name: TSource
    fullName: TSource
  - name: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    fullName: )
  - name: )
    fullName: )
  nameWithType: Enumerable.First<TSource>(IEnumerable<TSource>, Func<TSource, Boolean>)
  nameWithType.vb: Enumerable.First(Of TSource)(IEnumerable(Of TSource), Func(Of TSource, Boolean))
  commentId: M:System.Linq.Enumerable.First``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})
- uid: System.Linq.Enumerable.FirstOrDefault``1(System.Collections.Generic.IEnumerable{``0})
  isExternal: true
  name: FirstOrDefault<TSource>(IEnumerable<TSource>)
  fullName: System.Linq.Enumerable.FirstOrDefault<TSource>(System.Collections.Generic.IEnumerable<TSource>)
  fullname.vb: System.Linq.Enumerable.FirstOrDefault(Of TSource)(System.Collections.Generic.IEnumerable(Of TSource))
  name.vb: FirstOrDefault(Of TSource)(IEnumerable(Of TSource))
  spec.csharp:
  - uid: System.Linq.Enumerable.FirstOrDefault``1(System.Collections.Generic.IEnumerable{``0})
    name: FirstOrDefault<TSource>
    fullName: System.Linq.Enumerable.FirstOrDefault<TSource>
  - name: (
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    fullName: <
  - name: TSource
    fullName: TSource
  - name: '>'
    fullName: '>'
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Linq.Enumerable.FirstOrDefault``1(System.Collections.Generic.IEnumerable{``0})
    name: FirstOrDefault(Of TSource)
    fullName: System.Linq.Enumerable.FirstOrDefault(Of TSource)
  - name: (
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - name: TSource
    fullName: TSource
  - name: )
    fullName: )
  - name: )
    fullName: )
  nameWithType: Enumerable.FirstOrDefault<TSource>(IEnumerable<TSource>)
  nameWithType.vb: Enumerable.FirstOrDefault(Of TSource)(IEnumerable(Of TSource))
  commentId: M:System.Linq.Enumerable.FirstOrDefault``1(System.Collections.Generic.IEnumerable{``0})
- uid: System.Linq.Enumerable.FirstOrDefault``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})
  isExternal: true
  name: FirstOrDefault<TSource>(IEnumerable<TSource>, Func<TSource, Boolean>)
  fullName: System.Linq.Enumerable.FirstOrDefault<TSource>(System.Collections.Generic.IEnumerable<TSource>, System.Func<TSource, System.Boolean>)
  fullname.vb: System.Linq.Enumerable.FirstOrDefault(Of TSource)(System.Collections.Generic.IEnumerable(Of TSource), System.Func(Of TSource, System.Boolean))
  name.vb: FirstOrDefault(Of TSource)(IEnumerable(Of TSource), Func(Of TSource, Boolean))
  spec.csharp:
  - uid: System.Linq.Enumerable.FirstOrDefault``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})
    name: FirstOrDefault<TSource>
    fullName: System.Linq.Enumerable.FirstOrDefault<TSource>
  - name: (
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    fullName: <
  - name: TSource
    fullName: TSource
  - name: '>'
    fullName: '>'
  - name: ', '
    fullName: ', '
  - uid: System.Func`2
    name: Func
    fullName: System.Func
    isExternal: true
  - name: <
    fullName: <
  - name: TSource
    fullName: TSource
  - name: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: '>'
    fullName: '>'
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Linq.Enumerable.FirstOrDefault``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})
    name: FirstOrDefault(Of TSource)
    fullName: System.Linq.Enumerable.FirstOrDefault(Of TSource)
  - name: (
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - name: TSource
    fullName: TSource
  - name: )
    fullName: )
  - name: ', '
    fullName: ', '
  - uid: System.Func`2
    name: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - name: TSource
    fullName: TSource
  - name: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    fullName: )
  - name: )
    fullName: )
  nameWithType: Enumerable.FirstOrDefault<TSource>(IEnumerable<TSource>, Func<TSource, Boolean>)
  nameWithType.vb: Enumerable.FirstOrDefault(Of TSource)(IEnumerable(Of TSource), Func(Of TSource, Boolean))
  commentId: M:System.Linq.Enumerable.FirstOrDefault``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})
- uid: System.Linq.Enumerable.GroupBy``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})
  isExternal: true
  name: GroupBy<TSource, TKey>(IEnumerable<TSource>, Func<TSource, TKey>)
  fullName: System.Linq.Enumerable.GroupBy<TSource, TKey>(System.Collections.Generic.IEnumerable<TSource>, System.Func<TSource, TKey>)
  fullname.vb: System.Linq.Enumerable.GroupBy(Of TSource, TKey)(System.Collections.Generic.IEnumerable(Of TSource), System.Func(Of TSource, TKey))
  name.vb: GroupBy(Of TSource, TKey)(IEnumerable(Of TSource), Func(Of TSource, TKey))
  spec.csharp:
  - uid: System.Linq.Enumerable.GroupBy``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})
    name: GroupBy<TSource, TKey>
    fullName: System.Linq.Enumerable.GroupBy<TSource, TKey>
  - name: (
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    fullName: <
  - name: TSource
    fullName: TSource
  - name: '>'
    fullName: '>'
  - name: ', '
    fullName: ', '
  - uid: System.Func`2
    name: Func
    fullName: System.Func
    isExternal: true
  - name: <
    fullName: <
  - name: TSource
    fullName: TSource
  - name: ', '
    fullName: ', '
  - name: TKey
    fullName: TKey
  - name: '>'
    fullName: '>'
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Linq.Enumerable.GroupBy``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})
    name: GroupBy(Of TSource, TKey)
    fullName: System.Linq.Enumerable.GroupBy(Of TSource, TKey)
  - name: (
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - name: TSource
    fullName: TSource
  - name: )
    fullName: )
  - name: ', '
    fullName: ', '
  - uid: System.Func`2
    name: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - name: TSource
    fullName: TSource
  - name: ', '
    fullName: ', '
  - name: TKey
    fullName: TKey
  - name: )
    fullName: )
  - name: )
    fullName: )
  nameWithType: Enumerable.GroupBy<TSource, TKey>(IEnumerable<TSource>, Func<TSource, TKey>)
  nameWithType.vb: Enumerable.GroupBy(Of TSource, TKey)(IEnumerable(Of TSource), Func(Of TSource, TKey))
  commentId: M:System.Linq.Enumerable.GroupBy``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})
- uid: System.Linq.Enumerable.GroupBy``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IEqualityComparer{``1})
  isExternal: true
  name: GroupBy<TSource, TKey>(IEnumerable<TSource>, Func<TSource, TKey>, IEqualityComparer<TKey>)
  fullName: System.Linq.Enumerable.GroupBy<TSource, TKey>(System.Collections.Generic.IEnumerable<TSource>, System.Func<TSource, TKey>, System.Collections.Generic.IEqualityComparer<TKey>)
  fullname.vb: System.Linq.Enumerable.GroupBy(Of TSource, TKey)(System.Collections.Generic.IEnumerable(Of TSource), System.Func(Of TSource, TKey), System.Collections.Generic.IEqualityComparer(Of TKey))
  name.vb: GroupBy(Of TSource, TKey)(IEnumerable(Of TSource), Func(Of TSource, TKey), IEqualityComparer(Of TKey))
  spec.csharp:
  - uid: System.Linq.Enumerable.GroupBy``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IEqualityComparer{``1})
    name: GroupBy<TSource, TKey>
    fullName: System.Linq.Enumerable.GroupBy<TSource, TKey>
  - name: (
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    fullName: <
  - name: TSource
    fullName: TSource
  - name: '>'
    fullName: '>'
  - name: ', '
    fullName: ', '
  - uid: System.Func`2
    name: Func
    fullName: System.Func
    isExternal: true
  - name: <
    fullName: <
  - name: TSource
    fullName: TSource
  - name: ', '
    fullName: ', '
  - name: TKey
    fullName: TKey
  - name: '>'
    fullName: '>'
  - name: ', '
    fullName: ', '
  - uid: System.Collections.Generic.IEqualityComparer`1
    name: IEqualityComparer
    fullName: System.Collections.Generic.IEqualityComparer
    isExternal: true
  - name: <
    fullName: <
  - name: TKey
    fullName: TKey
  - name: '>'
    fullName: '>'
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Linq.Enumerable.GroupBy``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IEqualityComparer{``1})
    name: GroupBy(Of TSource, TKey)
    fullName: System.Linq.Enumerable.GroupBy(Of TSource, TKey)
  - name: (
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - name: TSource
    fullName: TSource
  - name: )
    fullName: )
  - name: ', '
    fullName: ', '
  - uid: System.Func`2
    name: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - name: TSource
    fullName: TSource
  - name: ', '
    fullName: ', '
  - name: TKey
    fullName: TKey
  - name: )
    fullName: )
  - name: ', '
    fullName: ', '
  - uid: System.Collections.Generic.IEqualityComparer`1
    name: IEqualityComparer
    fullName: System.Collections.Generic.IEqualityComparer
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - name: TKey
    fullName: TKey
  - name: )
    fullName: )
  - name: )
    fullName: )
  nameWithType: Enumerable.GroupBy<TSource, TKey>(IEnumerable<TSource>, Func<TSource, TKey>, IEqualityComparer<TKey>)
  nameWithType.vb: Enumerable.GroupBy(Of TSource, TKey)(IEnumerable(Of TSource), Func(Of TSource, TKey), IEqualityComparer(Of TKey))
  commentId: M:System.Linq.Enumerable.GroupBy``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IEqualityComparer{``1})
- uid: System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2})
  isExternal: true
  name: GroupBy<TSource, TKey, TElement>(IEnumerable<TSource>, Func<TSource, TKey>, Func<TSource, TElement>)
  fullName: System.Linq.Enumerable.GroupBy<TSource, TKey, TElement>(System.Collections.Generic.IEnumerable<TSource>, System.Func<TSource, TKey>, System.Func<TSource, TElement>)
  fullname.vb: System.Linq.Enumerable.GroupBy(Of TSource, TKey, TElement)(System.Collections.Generic.IEnumerable(Of TSource), System.Func(Of TSource, TKey), System.Func(Of TSource, TElement))
  name.vb: GroupBy(Of TSource, TKey, TElement)(IEnumerable(Of TSource), Func(Of TSource, TKey), Func(Of TSource, TElement))
  spec.csharp:
  - uid: System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2})
    name: GroupBy<TSource, TKey, TElement>
    fullName: System.Linq.Enumerable.GroupBy<TSource, TKey, TElement>
  - name: (
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    fullName: <
  - name: TSource
    fullName: TSource
  - name: '>'
    fullName: '>'
  - name: ', '
    fullName: ', '
  - uid: System.Func`2
    name: Func
    fullName: System.Func
    isExternal: true
  - name: <
    fullName: <
  - name: TSource
    fullName: TSource
  - name: ', '
    fullName: ', '
  - name: TKey
    fullName: TKey
  - name: '>'
    fullName: '>'
  - name: ', '
    fullName: ', '
  - uid: System.Func`2
    name: Func
    fullName: System.Func
    isExternal: true
  - name: <
    fullName: <
  - name: TSource
    fullName: TSource
  - name: ', '
    fullName: ', '
  - name: TElement
    fullName: TElement
  - name: '>'
    fullName: '>'
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2})
    name: GroupBy(Of TSource, TKey, TElement)
    fullName: System.Linq.Enumerable.GroupBy(Of TSource, TKey, TElement)
  - name: (
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - name: TSource
    fullName: TSource
  - name: )
    fullName: )
  - name: ', '
    fullName: ', '
  - uid: System.Func`2
    name: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - name: TSource
    fullName: TSource
  - name: ', '
    fullName: ', '
  - name: TKey
    fullName: TKey
  - name: )
    fullName: )
  - name: ', '
    fullName: ', '
  - uid: System.Func`2
    name: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - name: TSource
    fullName: TSource
  - name: ', '
    fullName: ', '
  - name: TElement
    fullName: TElement
  - name: )
    fullName: )
  - name: )
    fullName: )
  nameWithType: Enumerable.GroupBy<TSource, TKey, TElement>(IEnumerable<TSource>, Func<TSource, TKey>, Func<TSource, TElement>)
  nameWithType.vb: Enumerable.GroupBy(Of TSource, TKey, TElement)(IEnumerable(Of TSource), Func(Of TSource, TKey), Func(Of TSource, TElement))
  commentId: M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2})
- uid: System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})
  isExternal: true
  name: GroupBy<TSource, TKey, TElement>(IEnumerable<TSource>, Func<TSource, TKey>, Func<TSource, TElement>, IEqualityComparer<TKey>)
  fullName: System.Linq.Enumerable.GroupBy<TSource, TKey, TElement>(System.Collections.Generic.IEnumerable<TSource>, System.Func<TSource, TKey>, System.Func<TSource, TElement>, System.Collections.Generic.IEqualityComparer<TKey>)
  fullname.vb: System.Linq.Enumerable.GroupBy(Of TSource, TKey, TElement)(System.Collections.Generic.IEnumerable(Of TSource), System.Func(Of TSource, TKey), System.Func(Of TSource, TElement), System.Collections.Generic.IEqualityComparer(Of TKey))
  name.vb: GroupBy(Of TSource, TKey, TElement)(IEnumerable(Of TSource), Func(Of TSource, TKey), Func(Of TSource, TElement), IEqualityComparer(Of TKey))
  spec.csharp:
  - uid: System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})
    name: GroupBy<TSource, TKey, TElement>
    fullName: System.Linq.Enumerable.GroupBy<TSource, TKey, TElement>
  - name: (
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    fullName: <
  - name: TSource
    fullName: TSource
  - name: '>'
    fullName: '>'
  - name: ', '
    fullName: ', '
  - uid: System.Func`2
    name: Func
    fullName: System.Func
    isExternal: true
  - name: <
    fullName: <
  - name: TSource
    fullName: TSource
  - name: ', '
    fullName: ', '
  - name: TKey
    fullName: TKey
  - name: '>'
    fullName: '>'
  - name: ', '
    fullName: ', '
  - uid: System.Func`2
    name: Func
    fullName: System.Func
    isExternal: true
  - name: <
    fullName: <
  - name: TSource
    fullName: TSource
  - name: ', '
    fullName: ', '
  - name: TElement
    fullName: TElement
  - name: '>'
    fullName: '>'
  - name: ', '
    fullName: ', '
  - uid: System.Collections.Generic.IEqualityComparer`1
    name: IEqualityComparer
    fullName: System.Collections.Generic.IEqualityComparer
    isExternal: true
  - name: <
    fullName: <
  - name: TKey
    fullName: TKey
  - name: '>'
    fullName: '>'
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})
    name: GroupBy(Of TSource, TKey, TElement)
    fullName: System.Linq.Enumerable.GroupBy(Of TSource, TKey, TElement)
  - name: (
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - name: TSource
    fullName: TSource
  - name: )
    fullName: )
  - name: ', '
    fullName: ', '
  - uid: System.Func`2
    name: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - name: TSource
    fullName: TSource
  - name: ', '
    fullName: ', '
  - name: TKey
    fullName: TKey
  - name: )
    fullName: )
  - name: ', '
    fullName: ', '
  - uid: System.Func`2
    name: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - name: TSource
    fullName: TSource
  - name: ', '
    fullName: ', '
  - name: TElement
    fullName: TElement
  - name: )
    fullName: )
  - name: ', '
    fullName: ', '
  - uid: System.Collections.Generic.IEqualityComparer`1
    name: IEqualityComparer
    fullName: System.Collections.Generic.IEqualityComparer
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - name: TKey
    fullName: TKey
  - name: )
    fullName: )
  - name: )
    fullName: )
  nameWithType: Enumerable.GroupBy<TSource, TKey, TElement>(IEnumerable<TSource>, Func<TSource, TKey>, Func<TSource, TElement>, IEqualityComparer<TKey>)
  nameWithType.vb: Enumerable.GroupBy(Of TSource, TKey, TElement)(IEnumerable(Of TSource), Func(Of TSource, TKey), Func(Of TSource, TElement), IEqualityComparer(Of TKey))
  commentId: M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})
- uid: System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``1,System.Collections.Generic.IEnumerable{``0},``2})
  isExternal: true
  name: GroupBy<TSource, TKey, TResult>(IEnumerable<TSource>, Func<TSource, TKey>, Func<TKey, IEnumerable<TSource>, TResult>)
  fullName: System.Linq.Enumerable.GroupBy<TSource, TKey, TResult>(System.Collections.Generic.IEnumerable<TSource>, System.Func<TSource, TKey>, System.Func<TKey, System.Collections.Generic.IEnumerable<TSource>, TResult>)
  fullname.vb: System.Linq.Enumerable.GroupBy(Of TSource, TKey, TResult)(System.Collections.Generic.IEnumerable(Of TSource), System.Func(Of TSource, TKey), System.Func(Of TKey, System.Collections.Generic.IEnumerable(Of TSource), TResult))
  name.vb: GroupBy(Of TSource, TKey, TResult)(IEnumerable(Of TSource), Func(Of TSource, TKey), Func(Of TKey, IEnumerable(Of TSource), TResult))
  spec.csharp:
  - uid: System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``1,System.Collections.Generic.IEnumerable{``0},``2})
    name: GroupBy<TSource, TKey, TResult>
    fullName: System.Linq.Enumerable.GroupBy<TSource, TKey, TResult>
  - name: (
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    fullName: <
  - name: TSource
    fullName: TSource
  - name: '>'
    fullName: '>'
  - name: ', '
    fullName: ', '
  - uid: System.Func`2
    name: Func
    fullName: System.Func
    isExternal: true
  - name: <
    fullName: <
  - name: TSource
    fullName: TSource
  - name: ', '
    fullName: ', '
  - name: TKey
    fullName: TKey
  - name: '>'
    fullName: '>'
  - name: ', '
    fullName: ', '
  - uid: System.Func`3
    name: Func
    fullName: System.Func
    isExternal: true
  - name: <
    fullName: <
  - name: TKey
    fullName: TKey
  - name: ', '
    fullName: ', '
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    fullName: <
  - name: TSource
    fullName: TSource
  - name: '>'
    fullName: '>'
  - name: ', '
    fullName: ', '
  - name: TResult
    fullName: TResult
  - name: '>'
    fullName: '>'
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``1,System.Collections.Generic.IEnumerable{``0},``2})
    name: GroupBy(Of TSource, TKey, TResult)
    fullName: System.Linq.Enumerable.GroupBy(Of TSource, TKey, TResult)
  - name: (
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - name: TSource
    fullName: TSource
  - name: )
    fullName: )
  - name: ', '
    fullName: ', '
  - uid: System.Func`2
    name: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - name: TSource
    fullName: TSource
  - name: ', '
    fullName: ', '
  - name: TKey
    fullName: TKey
  - name: )
    fullName: )
  - name: ', '
    fullName: ', '
  - uid: System.Func`3
    name: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - name: TKey
    fullName: TKey
  - name: ', '
    fullName: ', '
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - name: TSource
    fullName: TSource
  - name: )
    fullName: )
  - name: ', '
    fullName: ', '
  - name: TResult
    fullName: TResult
  - name: )
    fullName: )
  - name: )
    fullName: )
  nameWithType: Enumerable.GroupBy<TSource, TKey, TResult>(IEnumerable<TSource>, Func<TSource, TKey>, Func<TKey, IEnumerable<TSource>, TResult>)
  nameWithType.vb: Enumerable.GroupBy(Of TSource, TKey, TResult)(IEnumerable(Of TSource), Func(Of TSource, TKey), Func(Of TKey, IEnumerable(Of TSource), TResult))
  commentId: M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``1,System.Collections.Generic.IEnumerable{``0},``2})
- uid: System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``1,System.Collections.Generic.IEnumerable{``0},``2},System.Collections.Generic.IEqualityComparer{``1})
  isExternal: true
  name: GroupBy<TSource, TKey, TResult>(IEnumerable<TSource>, Func<TSource, TKey>, Func<TKey, IEnumerable<TSource>, TResult>, IEqualityComparer<TKey>)
  fullName: System.Linq.Enumerable.GroupBy<TSource, TKey, TResult>(System.Collections.Generic.IEnumerable<TSource>, System.Func<TSource, TKey>, System.Func<TKey, System.Collections.Generic.IEnumerable<TSource>, TResult>, System.Collections.Generic.IEqualityComparer<TKey>)
  fullname.vb: System.Linq.Enumerable.GroupBy(Of TSource, TKey, TResult)(System.Collections.Generic.IEnumerable(Of TSource), System.Func(Of TSource, TKey), System.Func(Of TKey, System.Collections.Generic.IEnumerable(Of TSource), TResult), System.Collections.Generic.IEqualityComparer(Of TKey))
  name.vb: GroupBy(Of TSource, TKey, TResult)(IEnumerable(Of TSource), Func(Of TSource, TKey), Func(Of TKey, IEnumerable(Of TSource), TResult), IEqualityComparer(Of TKey))
  spec.csharp:
  - uid: System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``1,System.Collections.Generic.IEnumerable{``0},``2},System.Collections.Generic.IEqualityComparer{``1})
    name: GroupBy<TSource, TKey, TResult>
    fullName: System.Linq.Enumerable.GroupBy<TSource, TKey, TResult>
  - name: (
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    fullName: <
  - name: TSource
    fullName: TSource
  - name: '>'
    fullName: '>'
  - name: ', '
    fullName: ', '
  - uid: System.Func`2
    name: Func
    fullName: System.Func
    isExternal: true
  - name: <
    fullName: <
  - name: TSource
    fullName: TSource
  - name: ', '
    fullName: ', '
  - name: TKey
    fullName: TKey
  - name: '>'
    fullName: '>'
  - name: ', '
    fullName: ', '
  - uid: System.Func`3
    name: Func
    fullName: System.Func
    isExternal: true
  - name: <
    fullName: <
  - name: TKey
    fullName: TKey
  - name: ', '
    fullName: ', '
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    fullName: <
  - name: TSource
    fullName: TSource
  - name: '>'
    fullName: '>'
  - name: ', '
    fullName: ', '
  - name: TResult
    fullName: TResult
  - name: '>'
    fullName: '>'
  - name: ', '
    fullName: ', '
  - uid: System.Collections.Generic.IEqualityComparer`1
    name: IEqualityComparer
    fullName: System.Collections.Generic.IEqualityComparer
    isExternal: true
  - name: <
    fullName: <
  - name: TKey
    fullName: TKey
  - name: '>'
    fullName: '>'
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``1,System.Collections.Generic.IEnumerable{``0},``2},System.Collections.Generic.IEqualityComparer{``1})
    name: GroupBy(Of TSource, TKey, TResult)
    fullName: System.Linq.Enumerable.GroupBy(Of TSource, TKey, TResult)
  - name: (
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - name: TSource
    fullName: TSource
  - name: )
    fullName: )
  - name: ', '
    fullName: ', '
  - uid: System.Func`2
    name: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - name: TSource
    fullName: TSource
  - name: ', '
    fullName: ', '
  - name: TKey
    fullName: TKey
  - name: )
    fullName: )
  - name: ', '
    fullName: ', '
  - uid: System.Func`3
    name: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - name: TKey
    fullName: TKey
  - name: ', '
    fullName: ', '
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - name: TSource
    fullName: TSource
  - name: )
    fullName: )
  - name: ', '
    fullName: ', '
  - name: TResult
    fullName: TResult
  - name: )
    fullName: )
  - name: ', '
    fullName: ', '
  - uid: System.Collections.Generic.IEqualityComparer`1
    name: IEqualityComparer
    fullName: System.Collections.Generic.IEqualityComparer
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - name: TKey
    fullName: TKey
  - name: )
    fullName: )
  - name: )
    fullName: )
  nameWithType: Enumerable.GroupBy<TSource, TKey, TResult>(IEnumerable<TSource>, Func<TSource, TKey>, Func<TKey, IEnumerable<TSource>, TResult>, IEqualityComparer<TKey>)
  nameWithType.vb: Enumerable.GroupBy(Of TSource, TKey, TResult)(IEnumerable(Of TSource), Func(Of TSource, TKey), Func(Of TKey, IEnumerable(Of TSource), TResult), IEqualityComparer(Of TKey))
  commentId: M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``1,System.Collections.Generic.IEnumerable{``0},``2},System.Collections.Generic.IEqualityComparer{``1})
- uid: System.Linq.Enumerable.GroupBy``4(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Func{``1,System.Collections.Generic.IEnumerable{``2},``3})
  isExternal: true
  name: GroupBy<TSource, TKey, TElement, TResult>(IEnumerable<TSource>, Func<TSource, TKey>, Func<TSource, TElement>, Func<TKey, IEnumerable<TElement>, TResult>)
  fullName: System.Linq.Enumerable.GroupBy<TSource, TKey, TElement, TResult>(System.Collections.Generic.IEnumerable<TSource>, System.Func<TSource, TKey>, System.Func<TSource, TElement>, System.Func<TKey, System.Collections.Generic.IEnumerable<TElement>, TResult>)
  fullname.vb: System.Linq.Enumerable.GroupBy(Of TSource, TKey, TElement, TResult)(System.Collections.Generic.IEnumerable(Of TSource), System.Func(Of TSource, TKey), System.Func(Of TSource, TElement), System.Func(Of TKey, System.Collections.Generic.IEnumerable(Of TElement), TResult))
  name.vb: GroupBy(Of TSource, TKey, TElement, TResult)(IEnumerable(Of TSource), Func(Of TSource, TKey), Func(Of TSource, TElement), Func(Of TKey, IEnumerable(Of TElement), TResult))
  spec.csharp:
  - uid: System.Linq.Enumerable.GroupBy``4(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Func{``1,System.Collections.Generic.IEnumerable{``2},``3})
    name: GroupBy<TSource, TKey, TElement, TResult>
    fullName: System.Linq.Enumerable.GroupBy<TSource, TKey, TElement, TResult>
  - name: (
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    fullName: <
  - name: TSource
    fullName: TSource
  - name: '>'
    fullName: '>'
  - name: ', '
    fullName: ', '
  - uid: System.Func`2
    name: Func
    fullName: System.Func
    isExternal: true
  - name: <
    fullName: <
  - name: TSource
    fullName: TSource
  - name: ', '
    fullName: ', '
  - name: TKey
    fullName: TKey
  - name: '>'
    fullName: '>'
  - name: ', '
    fullName: ', '
  - uid: System.Func`2
    name: Func
    fullName: System.Func
    isExternal: true
  - name: <
    fullName: <
  - name: TSource
    fullName: TSource
  - name: ', '
    fullName: ', '
  - name: TElement
    fullName: TElement
  - name: '>'
    fullName: '>'
  - name: ', '
    fullName: ', '
  - uid: System.Func`3
    name: Func
    fullName: System.Func
    isExternal: true
  - name: <
    fullName: <
  - name: TKey
    fullName: TKey
  - name: ', '
    fullName: ', '
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    fullName: <
  - name: TElement
    fullName: TElement
  - name: '>'
    fullName: '>'
  - name: ', '
    fullName: ', '
  - name: TResult
    fullName: TResult
  - name: '>'
    fullName: '>'
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Linq.Enumerable.GroupBy``4(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Func{``1,System.Collections.Generic.IEnumerable{``2},``3})
    name: GroupBy(Of TSource, TKey, TElement, TResult)
    fullName: System.Linq.Enumerable.GroupBy(Of TSource, TKey, TElement, TResult)
  - name: (
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - name: TSource
    fullName: TSource
  - name: )
    fullName: )
  - name: ', '
    fullName: ', '
  - uid: System.Func`2
    name: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - name: TSource
    fullName: TSource
  - name: ', '
    fullName: ', '
  - name: TKey
    fullName: TKey
  - name: )
    fullName: )
  - name: ', '
    fullName: ', '
  - uid: System.Func`2
    name: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - name: TSource
    fullName: TSource
  - name: ', '
    fullName: ', '
  - name: TElement
    fullName: TElement
  - name: )
    fullName: )
  - name: ', '
    fullName: ', '
  - uid: System.Func`3
    name: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - name: TKey
    fullName: TKey
  - name: ', '
    fullName: ', '
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - name: TElement
    fullName: TElement
  - name: )
    fullName: )
  - name: ', '
    fullName: ', '
  - name: TResult
    fullName: TResult
  - name: )
    fullName: )
  - name: )
    fullName: )
  nameWithType: Enumerable.GroupBy<TSource, TKey, TElement, TResult>(IEnumerable<TSource>, Func<TSource, TKey>, Func<TSource, TElement>, Func<TKey, IEnumerable<TElement>, TResult>)
  nameWithType.vb: Enumerable.GroupBy(Of TSource, TKey, TElement, TResult)(IEnumerable(Of TSource), Func(Of TSource, TKey), Func(Of TSource, TElement), Func(Of TKey, IEnumerable(Of TElement), TResult))
  commentId: M:System.Linq.Enumerable.GroupBy``4(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Func{``1,System.Collections.Generic.IEnumerable{``2},``3})
- uid: System.Linq.Enumerable.GroupBy``4(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Func{``1,System.Collections.Generic.IEnumerable{``2},``3},System.Collections.Generic.IEqualityComparer{``1})
  isExternal: true
  name: GroupBy<TSource, TKey, TElement, TResult>(IEnumerable<TSource>, Func<TSource, TKey>, Func<TSource, TElement>, Func<TKey, IEnumerable<TElement>, TResult>, IEqualityComparer<TKey>)
  fullName: System.Linq.Enumerable.GroupBy<TSource, TKey, TElement, TResult>(System.Collections.Generic.IEnumerable<TSource>, System.Func<TSource, TKey>, System.Func<TSource, TElement>, System.Func<TKey, System.Collections.Generic.IEnumerable<TElement>, TResult>, System.Collections.Generic.IEqualityComparer<TKey>)
  fullname.vb: System.Linq.Enumerable.GroupBy(Of TSource, TKey, TElement, TResult)(System.Collections.Generic.IEnumerable(Of TSource), System.Func(Of TSource, TKey), System.Func(Of TSource, TElement), System.Func(Of TKey, System.Collections.Generic.IEnumerable(Of TElement), TResult), System.Collections.Generic.IEqualityComparer(Of TKey))
  name.vb: GroupBy(Of TSource, TKey, TElement, TResult)(IEnumerable(Of TSource), Func(Of TSource, TKey), Func(Of TSource, TElement), Func(Of TKey, IEnumerable(Of TElement), TResult), IEqualityComparer(Of TKey))
  spec.csharp:
  - uid: System.Linq.Enumerable.GroupBy``4(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Func{``1,System.Collections.Generic.IEnumerable{``2},``3},System.Collections.Generic.IEqualityComparer{``1})
    name: GroupBy<TSource, TKey, TElement, TResult>
    fullName: System.Linq.Enumerable.GroupBy<TSource, TKey, TElement, TResult>
  - name: (
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    fullName: <
  - name: TSource
    fullName: TSource
  - name: '>'
    fullName: '>'
  - name: ', '
    fullName: ', '
  - uid: System.Func`2
    name: Func
    fullName: System.Func
    isExternal: true
  - name: <
    fullName: <
  - name: TSource
    fullName: TSource
  - name: ', '
    fullName: ', '
  - name: TKey
    fullName: TKey
  - name: '>'
    fullName: '>'
  - name: ', '
    fullName: ', '
  - uid: System.Func`2
    name: Func
    fullName: System.Func
    isExternal: true
  - name: <
    fullName: <
  - name: TSource
    fullName: TSource
  - name: ', '
    fullName: ', '
  - name: TElement
    fullName: TElement
  - name: '>'
    fullName: '>'
  - name: ', '
    fullName: ', '
  - uid: System.Func`3
    name: Func
    fullName: System.Func
    isExternal: true
  - name: <
    fullName: <
  - name: TKey
    fullName: TKey
  - name: ', '
    fullName: ', '
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    fullName: <
  - name: TElement
    fullName: TElement
  - name: '>'
    fullName: '>'
  - name: ', '
    fullName: ', '
  - name: TResult
    fullName: TResult
  - name: '>'
    fullName: '>'
  - name: ', '
    fullName: ', '
  - uid: System.Collections.Generic.IEqualityComparer`1
    name: IEqualityComparer
    fullName: System.Collections.Generic.IEqualityComparer
    isExternal: true
  - name: <
    fullName: <
  - name: TKey
    fullName: TKey
  - name: '>'
    fullName: '>'
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Linq.Enumerable.GroupBy``4(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Func{``1,System.Collections.Generic.IEnumerable{``2},``3},System.Collections.Generic.IEqualityComparer{``1})
    name: GroupBy(Of TSource, TKey, TElement, TResult)
    fullName: System.Linq.Enumerable.GroupBy(Of TSource, TKey, TElement, TResult)
  - name: (
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - name: TSource
    fullName: TSource
  - name: )
    fullName: )
  - name: ', '
    fullName: ', '
  - uid: System.Func`2
    name: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - name: TSource
    fullName: TSource
  - name: ', '
    fullName: ', '
  - name: TKey
    fullName: TKey
  - name: )
    fullName: )
  - name: ', '
    fullName: ', '
  - uid: System.Func`2
    name: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - name: TSource
    fullName: TSource
  - name: ', '
    fullName: ', '
  - name: TElement
    fullName: TElement
  - name: )
    fullName: )
  - name: ', '
    fullName: ', '
  - uid: System.Func`3
    name: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - name: TKey
    fullName: TKey
  - name: ', '
    fullName: ', '
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - name: TElement
    fullName: TElement
  - name: )
    fullName: )
  - name: ', '
    fullName: ', '
  - name: TResult
    fullName: TResult
  - name: )
    fullName: )
  - name: ', '
    fullName: ', '
  - uid: System.Collections.Generic.IEqualityComparer`1
    name: IEqualityComparer
    fullName: System.Collections.Generic.IEqualityComparer
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - name: TKey
    fullName: TKey
  - name: )
    fullName: )
  - name: )
    fullName: )
  nameWithType: Enumerable.GroupBy<TSource, TKey, TElement, TResult>(IEnumerable<TSource>, Func<TSource, TKey>, Func<TSource, TElement>, Func<TKey, IEnumerable<TElement>, TResult>, IEqualityComparer<TKey>)
  nameWithType.vb: Enumerable.GroupBy(Of TSource, TKey, TElement, TResult)(IEnumerable(Of TSource), Func(Of TSource, TKey), Func(Of TSource, TElement), Func(Of TKey, IEnumerable(Of TElement), TResult), IEqualityComparer(Of TKey))
  commentId: M:System.Linq.Enumerable.GroupBy``4(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Func{``1,System.Collections.Generic.IEnumerable{``2},``3},System.Collections.Generic.IEqualityComparer{``1})
- uid: System.Linq.Enumerable.GroupJoin``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3})
  isExternal: true
  name: GroupJoin<TOuter, TInner, TKey, TResult>(IEnumerable<TOuter>, IEnumerable<TInner>, Func<TOuter, TKey>, Func<TInner, TKey>, Func<TOuter, IEnumerable<TInner>, TResult>)
  fullName: System.Linq.Enumerable.GroupJoin<TOuter, TInner, TKey, TResult>(System.Collections.Generic.IEnumerable<TOuter>, System.Collections.Generic.IEnumerable<TInner>, System.Func<TOuter, TKey>, System.Func<TInner, TKey>, System.Func<TOuter, System.Collections.Generic.IEnumerable<TInner>, TResult>)
  fullname.vb: System.Linq.Enumerable.GroupJoin(Of TOuter, TInner, TKey, TResult)(System.Collections.Generic.IEnumerable(Of TOuter), System.Collections.Generic.IEnumerable(Of TInner), System.Func(Of TOuter, TKey), System.Func(Of TInner, TKey), System.Func(Of TOuter, System.Collections.Generic.IEnumerable(Of TInner), TResult))
  name.vb: GroupJoin(Of TOuter, TInner, TKey, TResult)(IEnumerable(Of TOuter), IEnumerable(Of TInner), Func(Of TOuter, TKey), Func(Of TInner, TKey), Func(Of TOuter, IEnumerable(Of TInner), TResult))
  spec.csharp:
  - uid: System.Linq.Enumerable.GroupJoin``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3})
    name: GroupJoin<TOuter, TInner, TKey, TResult>
    fullName: System.Linq.Enumerable.GroupJoin<TOuter, TInner, TKey, TResult>
  - name: (
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    fullName: <
  - name: TOuter
    fullName: TOuter
  - name: '>'
    fullName: '>'
  - name: ', '
    fullName: ', '
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    fullName: <
  - name: TInner
    fullName: TInner
  - name: '>'
    fullName: '>'
  - name: ', '
    fullName: ', '
  - uid: System.Func`2
    name: Func
    fullName: System.Func
    isExternal: true
  - name: <
    fullName: <
  - name: TOuter
    fullName: TOuter
  - name: ', '
    fullName: ', '
  - name: TKey
    fullName: TKey
  - name: '>'
    fullName: '>'
  - name: ', '
    fullName: ', '
  - uid: System.Func`2
    name: Func
    fullName: System.Func
    isExternal: true
  - name: <
    fullName: <
  - name: TInner
    fullName: TInner
  - name: ', '
    fullName: ', '
  - name: TKey
    fullName: TKey
  - name: '>'
    fullName: '>'
  - name: ', '
    fullName: ', '
  - uid: System.Func`3
    name: Func
    fullName: System.Func
    isExternal: true
  - name: <
    fullName: <
  - name: TOuter
    fullName: TOuter
  - name: ', '
    fullName: ', '
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    fullName: <
  - name: TInner
    fullName: TInner
  - name: '>'
    fullName: '>'
  - name: ', '
    fullName: ', '
  - name: TResult
    fullName: TResult
  - name: '>'
    fullName: '>'
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Linq.Enumerable.GroupJoin``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3})
    name: GroupJoin(Of TOuter, TInner, TKey, TResult)
    fullName: System.Linq.Enumerable.GroupJoin(Of TOuter, TInner, TKey, TResult)
  - name: (
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - name: TOuter
    fullName: TOuter
  - name: )
    fullName: )
  - name: ', '
    fullName: ', '
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - name: TInner
    fullName: TInner
  - name: )
    fullName: )
  - name: ', '
    fullName: ', '
  - uid: System.Func`2
    name: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - name: TOuter
    fullName: TOuter
  - name: ', '
    fullName: ', '
  - name: TKey
    fullName: TKey
  - name: )
    fullName: )
  - name: ', '
    fullName: ', '
  - uid: System.Func`2
    name: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - name: TInner
    fullName: TInner
  - name: ', '
    fullName: ', '
  - name: TKey
    fullName: TKey
  - name: )
    fullName: )
  - name: ', '
    fullName: ', '
  - uid: System.Func`3
    name: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - name: TOuter
    fullName: TOuter
  - name: ', '
    fullName: ', '
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - name: TInner
    fullName: TInner
  - name: )
    fullName: )
  - name: ', '
    fullName: ', '
  - name: TResult
    fullName: TResult
  - name: )
    fullName: )
  - name: )
    fullName: )
  nameWithType: Enumerable.GroupJoin<TOuter, TInner, TKey, TResult>(IEnumerable<TOuter>, IEnumerable<TInner>, Func<TOuter, TKey>, Func<TInner, TKey>, Func<TOuter, IEnumerable<TInner>, TResult>)
  nameWithType.vb: Enumerable.GroupJoin(Of TOuter, TInner, TKey, TResult)(IEnumerable(Of TOuter), IEnumerable(Of TInner), Func(Of TOuter, TKey), Func(Of TInner, TKey), Func(Of TOuter, IEnumerable(Of TInner), TResult))
  commentId: M:System.Linq.Enumerable.GroupJoin``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3})
- uid: System.Linq.Enumerable.GroupJoin``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3},System.Collections.Generic.IEqualityComparer{``2})
  isExternal: true
  name: GroupJoin<TOuter, TInner, TKey, TResult>(IEnumerable<TOuter>, IEnumerable<TInner>, Func<TOuter, TKey>, Func<TInner, TKey>, Func<TOuter, IEnumerable<TInner>, TResult>, IEqualityComparer<TKey>)
  fullName: System.Linq.Enumerable.GroupJoin<TOuter, TInner, TKey, TResult>(System.Collections.Generic.IEnumerable<TOuter>, System.Collections.Generic.IEnumerable<TInner>, System.Func<TOuter, TKey>, System.Func<TInner, TKey>, System.Func<TOuter, System.Collections.Generic.IEnumerable<TInner>, TResult>, System.Collections.Generic.IEqualityComparer<TKey>)
  fullname.vb: System.Linq.Enumerable.GroupJoin(Of TOuter, TInner, TKey, TResult)(System.Collections.Generic.IEnumerable(Of TOuter), System.Collections.Generic.IEnumerable(Of TInner), System.Func(Of TOuter, TKey), System.Func(Of TInner, TKey), System.Func(Of TOuter, System.Collections.Generic.IEnumerable(Of TInner), TResult), System.Collections.Generic.IEqualityComparer(Of TKey))
  name.vb: GroupJoin(Of TOuter, TInner, TKey, TResult)(IEnumerable(Of TOuter), IEnumerable(Of TInner), Func(Of TOuter, TKey), Func(Of TInner, TKey), Func(Of TOuter, IEnumerable(Of TInner), TResult), IEqualityComparer(Of TKey))
  spec.csharp:
  - uid: System.Linq.Enumerable.GroupJoin``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3},System.Collections.Generic.IEqualityComparer{``2})
    name: GroupJoin<TOuter, TInner, TKey, TResult>
    fullName: System.Linq.Enumerable.GroupJoin<TOuter, TInner, TKey, TResult>
  - name: (
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    fullName: <
  - name: TOuter
    fullName: TOuter
  - name: '>'
    fullName: '>'
  - name: ', '
    fullName: ', '
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    fullName: <
  - name: TInner
    fullName: TInner
  - name: '>'
    fullName: '>'
  - name: ', '
    fullName: ', '
  - uid: System.Func`2
    name: Func
    fullName: System.Func
    isExternal: true
  - name: <
    fullName: <
  - name: TOuter
    fullName: TOuter
  - name: ', '
    fullName: ', '
  - name: TKey
    fullName: TKey
  - name: '>'
    fullName: '>'
  - name: ', '
    fullName: ', '
  - uid: System.Func`2
    name: Func
    fullName: System.Func
    isExternal: true
  - name: <
    fullName: <
  - name: TInner
    fullName: TInner
  - name: ', '
    fullName: ', '
  - name: TKey
    fullName: TKey
  - name: '>'
    fullName: '>'
  - name: ', '
    fullName: ', '
  - uid: System.Func`3
    name: Func
    fullName: System.Func
    isExternal: true
  - name: <
    fullName: <
  - name: TOuter
    fullName: TOuter
  - name: ', '
    fullName: ', '
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    fullName: <
  - name: TInner
    fullName: TInner
  - name: '>'
    fullName: '>'
  - name: ', '
    fullName: ', '
  - name: TResult
    fullName: TResult
  - name: '>'
    fullName: '>'
  - name: ', '
    fullName: ', '
  - uid: System.Collections.Generic.IEqualityComparer`1
    name: IEqualityComparer
    fullName: System.Collections.Generic.IEqualityComparer
    isExternal: true
  - name: <
    fullName: <
  - name: TKey
    fullName: TKey
  - name: '>'
    fullName: '>'
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Linq.Enumerable.GroupJoin``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3},System.Collections.Generic.IEqualityComparer{``2})
    name: GroupJoin(Of TOuter, TInner, TKey, TResult)
    fullName: System.Linq.Enumerable.GroupJoin(Of TOuter, TInner, TKey, TResult)
  - name: (
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - name: TOuter
    fullName: TOuter
  - name: )
    fullName: )
  - name: ', '
    fullName: ', '
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - name: TInner
    fullName: TInner
  - name: )
    fullName: )
  - name: ', '
    fullName: ', '
  - uid: System.Func`2
    name: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - name: TOuter
    fullName: TOuter
  - name: ', '
    fullName: ', '
  - name: TKey
    fullName: TKey
  - name: )
    fullName: )
  - name: ', '
    fullName: ', '
  - uid: System.Func`2
    name: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - name: TInner
    fullName: TInner
  - name: ', '
    fullName: ', '
  - name: TKey
    fullName: TKey
  - name: )
    fullName: )
  - name: ', '
    fullName: ', '
  - uid: System.Func`3
    name: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - name: TOuter
    fullName: TOuter
  - name: ', '
    fullName: ', '
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - name: TInner
    fullName: TInner
  - name: )
    fullName: )
  - name: ', '
    fullName: ', '
  - name: TResult
    fullName: TResult
  - name: )
    fullName: )
  - name: ', '
    fullName: ', '
  - uid: System.Collections.Generic.IEqualityComparer`1
    name: IEqualityComparer
    fullName: System.Collections.Generic.IEqualityComparer
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - name: TKey
    fullName: TKey
  - name: )
    fullName: )
  - name: )
    fullName: )
  nameWithType: Enumerable.GroupJoin<TOuter, TInner, TKey, TResult>(IEnumerable<TOuter>, IEnumerable<TInner>, Func<TOuter, TKey>, Func<TInner, TKey>, Func<TOuter, IEnumerable<TInner>, TResult>, IEqualityComparer<TKey>)
  nameWithType.vb: Enumerable.GroupJoin(Of TOuter, TInner, TKey, TResult)(IEnumerable(Of TOuter), IEnumerable(Of TInner), Func(Of TOuter, TKey), Func(Of TInner, TKey), Func(Of TOuter, IEnumerable(Of TInner), TResult), IEqualityComparer(Of TKey))
  commentId: M:System.Linq.Enumerable.GroupJoin``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3},System.Collections.Generic.IEqualityComparer{``2})
- uid: System.Linq.Enumerable.Intersect``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0})
  isExternal: true
  name: Intersect<TSource>(IEnumerable<TSource>, IEnumerable<TSource>)
  fullName: System.Linq.Enumerable.Intersect<TSource>(System.Collections.Generic.IEnumerable<TSource>, System.Collections.Generic.IEnumerable<TSource>)
  fullname.vb: System.Linq.Enumerable.Intersect(Of TSource)(System.Collections.Generic.IEnumerable(Of TSource), System.Collections.Generic.IEnumerable(Of TSource))
  name.vb: Intersect(Of TSource)(IEnumerable(Of TSource), IEnumerable(Of TSource))
  spec.csharp:
  - uid: System.Linq.Enumerable.Intersect``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0})
    name: Intersect<TSource>
    fullName: System.Linq.Enumerable.Intersect<TSource>
  - name: (
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    fullName: <
  - name: TSource
    fullName: TSource
  - name: '>'
    fullName: '>'
  - name: ', '
    fullName: ', '
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    fullName: <
  - name: TSource
    fullName: TSource
  - name: '>'
    fullName: '>'
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Linq.Enumerable.Intersect``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0})
    name: Intersect(Of TSource)
    fullName: System.Linq.Enumerable.Intersect(Of TSource)
  - name: (
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - name: TSource
    fullName: TSource
  - name: )
    fullName: )
  - name: ', '
    fullName: ', '
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - name: TSource
    fullName: TSource
  - name: )
    fullName: )
  - name: )
    fullName: )
  nameWithType: Enumerable.Intersect<TSource>(IEnumerable<TSource>, IEnumerable<TSource>)
  nameWithType.vb: Enumerable.Intersect(Of TSource)(IEnumerable(Of TSource), IEnumerable(Of TSource))
  commentId: M:System.Linq.Enumerable.Intersect``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0})
- uid: System.Linq.Enumerable.Intersect``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEqualityComparer{``0})
  isExternal: true
  name: Intersect<TSource>(IEnumerable<TSource>, IEnumerable<TSource>, IEqualityComparer<TSource>)
  fullName: System.Linq.Enumerable.Intersect<TSource>(System.Collections.Generic.IEnumerable<TSource>, System.Collections.Generic.IEnumerable<TSource>, System.Collections.Generic.IEqualityComparer<TSource>)
  fullname.vb: System.Linq.Enumerable.Intersect(Of TSource)(System.Collections.Generic.IEnumerable(Of TSource), System.Collections.Generic.IEnumerable(Of TSource), System.Collections.Generic.IEqualityComparer(Of TSource))
  name.vb: Intersect(Of TSource)(IEnumerable(Of TSource), IEnumerable(Of TSource), IEqualityComparer(Of TSource))
  spec.csharp:
  - uid: System.Linq.Enumerable.Intersect``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEqualityComparer{``0})
    name: Intersect<TSource>
    fullName: System.Linq.Enumerable.Intersect<TSource>
  - name: (
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    fullName: <
  - name: TSource
    fullName: TSource
  - name: '>'
    fullName: '>'
  - name: ', '
    fullName: ', '
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    fullName: <
  - name: TSource
    fullName: TSource
  - name: '>'
    fullName: '>'
  - name: ', '
    fullName: ', '
  - uid: System.Collections.Generic.IEqualityComparer`1
    name: IEqualityComparer
    fullName: System.Collections.Generic.IEqualityComparer
    isExternal: true
  - name: <
    fullName: <
  - name: TSource
    fullName: TSource
  - name: '>'
    fullName: '>'
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Linq.Enumerable.Intersect``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEqualityComparer{``0})
    name: Intersect(Of TSource)
    fullName: System.Linq.Enumerable.Intersect(Of TSource)
  - name: (
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - name: TSource
    fullName: TSource
  - name: )
    fullName: )
  - name: ', '
    fullName: ', '
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - name: TSource
    fullName: TSource
  - name: )
    fullName: )
  - name: ', '
    fullName: ', '
  - uid: System.Collections.Generic.IEqualityComparer`1
    name: IEqualityComparer
    fullName: System.Collections.Generic.IEqualityComparer
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - name: TSource
    fullName: TSource
  - name: )
    fullName: )
  - name: )
    fullName: )
  nameWithType: Enumerable.Intersect<TSource>(IEnumerable<TSource>, IEnumerable<TSource>, IEqualityComparer<TSource>)
  nameWithType.vb: Enumerable.Intersect(Of TSource)(IEnumerable(Of TSource), IEnumerable(Of TSource), IEqualityComparer(Of TSource))
  commentId: M:System.Linq.Enumerable.Intersect``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEqualityComparer{``0})
- uid: System.Linq.Enumerable.Join``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3})
  isExternal: true
  name: Join<TOuter, TInner, TKey, TResult>(IEnumerable<TOuter>, IEnumerable<TInner>, Func<TOuter, TKey>, Func<TInner, TKey>, Func<TOuter, TInner, TResult>)
  fullName: System.Linq.Enumerable.Join<TOuter, TInner, TKey, TResult>(System.Collections.Generic.IEnumerable<TOuter>, System.Collections.Generic.IEnumerable<TInner>, System.Func<TOuter, TKey>, System.Func<TInner, TKey>, System.Func<TOuter, TInner, TResult>)
  fullname.vb: System.Linq.Enumerable.Join(Of TOuter, TInner, TKey, TResult)(System.Collections.Generic.IEnumerable(Of TOuter), System.Collections.Generic.IEnumerable(Of TInner), System.Func(Of TOuter, TKey), System.Func(Of TInner, TKey), System.Func(Of TOuter, TInner, TResult))
  name.vb: Join(Of TOuter, TInner, TKey, TResult)(IEnumerable(Of TOuter), IEnumerable(Of TInner), Func(Of TOuter, TKey), Func(Of TInner, TKey), Func(Of TOuter, TInner, TResult))
  spec.csharp:
  - uid: System.Linq.Enumerable.Join``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3})
    name: Join<TOuter, TInner, TKey, TResult>
    fullName: System.Linq.Enumerable.Join<TOuter, TInner, TKey, TResult>
  - name: (
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    fullName: <
  - name: TOuter
    fullName: TOuter
  - name: '>'
    fullName: '>'
  - name: ', '
    fullName: ', '
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    fullName: <
  - name: TInner
    fullName: TInner
  - name: '>'
    fullName: '>'
  - name: ', '
    fullName: ', '
  - uid: System.Func`2
    name: Func
    fullName: System.Func
    isExternal: true
  - name: <
    fullName: <
  - name: TOuter
    fullName: TOuter
  - name: ', '
    fullName: ', '
  - name: TKey
    fullName: TKey
  - name: '>'
    fullName: '>'
  - name: ', '
    fullName: ', '
  - uid: System.Func`2
    name: Func
    fullName: System.Func
    isExternal: true
  - name: <
    fullName: <
  - name: TInner
    fullName: TInner
  - name: ', '
    fullName: ', '
  - name: TKey
    fullName: TKey
  - name: '>'
    fullName: '>'
  - name: ', '
    fullName: ', '
  - uid: System.Func`3
    name: Func
    fullName: System.Func
    isExternal: true
  - name: <
    fullName: <
  - name: TOuter
    fullName: TOuter
  - name: ', '
    fullName: ', '
  - name: TInner
    fullName: TInner
  - name: ', '
    fullName: ', '
  - name: TResult
    fullName: TResult
  - name: '>'
    fullName: '>'
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Linq.Enumerable.Join``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3})
    name: Join(Of TOuter, TInner, TKey, TResult)
    fullName: System.Linq.Enumerable.Join(Of TOuter, TInner, TKey, TResult)
  - name: (
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - name: TOuter
    fullName: TOuter
  - name: )
    fullName: )
  - name: ', '
    fullName: ', '
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - name: TInner
    fullName: TInner
  - name: )
    fullName: )
  - name: ', '
    fullName: ', '
  - uid: System.Func`2
    name: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - name: TOuter
    fullName: TOuter
  - name: ', '
    fullName: ', '
  - name: TKey
    fullName: TKey
  - name: )
    fullName: )
  - name: ', '
    fullName: ', '
  - uid: System.Func`2
    name: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - name: TInner
    fullName: TInner
  - name: ', '
    fullName: ', '
  - name: TKey
    fullName: TKey
  - name: )
    fullName: )
  - name: ', '
    fullName: ', '
  - uid: System.Func`3
    name: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - name: TOuter
    fullName: TOuter
  - name: ', '
    fullName: ', '
  - name: TInner
    fullName: TInner
  - name: ', '
    fullName: ', '
  - name: TResult
    fullName: TResult
  - name: )
    fullName: )
  - name: )
    fullName: )
  nameWithType: Enumerable.Join<TOuter, TInner, TKey, TResult>(IEnumerable<TOuter>, IEnumerable<TInner>, Func<TOuter, TKey>, Func<TInner, TKey>, Func<TOuter, TInner, TResult>)
  nameWithType.vb: Enumerable.Join(Of TOuter, TInner, TKey, TResult)(IEnumerable(Of TOuter), IEnumerable(Of TInner), Func(Of TOuter, TKey), Func(Of TInner, TKey), Func(Of TOuter, TInner, TResult))
  commentId: M:System.Linq.Enumerable.Join``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3})
- uid: System.Linq.Enumerable.Join``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3},System.Collections.Generic.IEqualityComparer{``2})
  isExternal: true
  name: Join<TOuter, TInner, TKey, TResult>(IEnumerable<TOuter>, IEnumerable<TInner>, Func<TOuter, TKey>, Func<TInner, TKey>, Func<TOuter, TInner, TResult>, IEqualityComparer<TKey>)
  fullName: System.Linq.Enumerable.Join<TOuter, TInner, TKey, TResult>(System.Collections.Generic.IEnumerable<TOuter>, System.Collections.Generic.IEnumerable<TInner>, System.Func<TOuter, TKey>, System.Func<TInner, TKey>, System.Func<TOuter, TInner, TResult>, System.Collections.Generic.IEqualityComparer<TKey>)
  fullname.vb: System.Linq.Enumerable.Join(Of TOuter, TInner, TKey, TResult)(System.Collections.Generic.IEnumerable(Of TOuter), System.Collections.Generic.IEnumerable(Of TInner), System.Func(Of TOuter, TKey), System.Func(Of TInner, TKey), System.Func(Of TOuter, TInner, TResult), System.Collections.Generic.IEqualityComparer(Of TKey))
  name.vb: Join(Of TOuter, TInner, TKey, TResult)(IEnumerable(Of TOuter), IEnumerable(Of TInner), Func(Of TOuter, TKey), Func(Of TInner, TKey), Func(Of TOuter, TInner, TResult), IEqualityComparer(Of TKey))
  spec.csharp:
  - uid: System.Linq.Enumerable.Join``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3},System.Collections.Generic.IEqualityComparer{``2})
    name: Join<TOuter, TInner, TKey, TResult>
    fullName: System.Linq.Enumerable.Join<TOuter, TInner, TKey, TResult>
  - name: (
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    fullName: <
  - name: TOuter
    fullName: TOuter
  - name: '>'
    fullName: '>'
  - name: ', '
    fullName: ', '
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    fullName: <
  - name: TInner
    fullName: TInner
  - name: '>'
    fullName: '>'
  - name: ', '
    fullName: ', '
  - uid: System.Func`2
    name: Func
    fullName: System.Func
    isExternal: true
  - name: <
    fullName: <
  - name: TOuter
    fullName: TOuter
  - name: ', '
    fullName: ', '
  - name: TKey
    fullName: TKey
  - name: '>'
    fullName: '>'
  - name: ', '
    fullName: ', '
  - uid: System.Func`2
    name: Func
    fullName: System.Func
    isExternal: true
  - name: <
    fullName: <
  - name: TInner
    fullName: TInner
  - name: ', '
    fullName: ', '
  - name: TKey
    fullName: TKey
  - name: '>'
    fullName: '>'
  - name: ', '
    fullName: ', '
  - uid: System.Func`3
    name: Func
    fullName: System.Func
    isExternal: true
  - name: <
    fullName: <
  - name: TOuter
    fullName: TOuter
  - name: ', '
    fullName: ', '
  - name: TInner
    fullName: TInner
  - name: ', '
    fullName: ', '
  - name: TResult
    fullName: TResult
  - name: '>'
    fullName: '>'
  - name: ', '
    fullName: ', '
  - uid: System.Collections.Generic.IEqualityComparer`1
    name: IEqualityComparer
    fullName: System.Collections.Generic.IEqualityComparer
    isExternal: true
  - name: <
    fullName: <
  - name: TKey
    fullName: TKey
  - name: '>'
    fullName: '>'
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Linq.Enumerable.Join``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3},System.Collections.Generic.IEqualityComparer{``2})
    name: Join(Of TOuter, TInner, TKey, TResult)
    fullName: System.Linq.Enumerable.Join(Of TOuter, TInner, TKey, TResult)
  - name: (
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - name: TOuter
    fullName: TOuter
  - name: )
    fullName: )
  - name: ', '
    fullName: ', '
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - name: TInner
    fullName: TInner
  - name: )
    fullName: )
  - name: ', '
    fullName: ', '
  - uid: System.Func`2
    name: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - name: TOuter
    fullName: TOuter
  - name: ', '
    fullName: ', '
  - name: TKey
    fullName: TKey
  - name: )
    fullName: )
  - name: ', '
    fullName: ', '
  - uid: System.Func`2
    name: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - name: TInner
    fullName: TInner
  - name: ', '
    fullName: ', '
  - name: TKey
    fullName: TKey
  - name: )
    fullName: )
  - name: ', '
    fullName: ', '
  - uid: System.Func`3
    name: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - name: TOuter
    fullName: TOuter
  - name: ', '
    fullName: ', '
  - name: TInner
    fullName: TInner
  - name: ', '
    fullName: ', '
  - name: TResult
    fullName: TResult
  - name: )
    fullName: )
  - name: ', '
    fullName: ', '
  - uid: System.Collections.Generic.IEqualityComparer`1
    name: IEqualityComparer
    fullName: System.Collections.Generic.IEqualityComparer
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - name: TKey
    fullName: TKey
  - name: )
    fullName: )
  - name: )
    fullName: )
  nameWithType: Enumerable.Join<TOuter, TInner, TKey, TResult>(IEnumerable<TOuter>, IEnumerable<TInner>, Func<TOuter, TKey>, Func<TInner, TKey>, Func<TOuter, TInner, TResult>, IEqualityComparer<TKey>)
  nameWithType.vb: Enumerable.Join(Of TOuter, TInner, TKey, TResult)(IEnumerable(Of TOuter), IEnumerable(Of TInner), Func(Of TOuter, TKey), Func(Of TInner, TKey), Func(Of TOuter, TInner, TResult), IEqualityComparer(Of TKey))
  commentId: M:System.Linq.Enumerable.Join``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3},System.Collections.Generic.IEqualityComparer{``2})
- uid: System.Linq.Enumerable.Last``1(System.Collections.Generic.IEnumerable{``0})
  isExternal: true
  name: Last<TSource>(IEnumerable<TSource>)
  fullName: System.Linq.Enumerable.Last<TSource>(System.Collections.Generic.IEnumerable<TSource>)
  fullname.vb: System.Linq.Enumerable.Last(Of TSource)(System.Collections.Generic.IEnumerable(Of TSource))
  name.vb: Last(Of TSource)(IEnumerable(Of TSource))
  spec.csharp:
  - uid: System.Linq.Enumerable.Last``1(System.Collections.Generic.IEnumerable{``0})
    name: Last<TSource>
    fullName: System.Linq.Enumerable.Last<TSource>
  - name: (
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    fullName: <
  - name: TSource
    fullName: TSource
  - name: '>'
    fullName: '>'
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Linq.Enumerable.Last``1(System.Collections.Generic.IEnumerable{``0})
    name: Last(Of TSource)
    fullName: System.Linq.Enumerable.Last(Of TSource)
  - name: (
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - name: TSource
    fullName: TSource
  - name: )
    fullName: )
  - name: )
    fullName: )
  nameWithType: Enumerable.Last<TSource>(IEnumerable<TSource>)
  nameWithType.vb: Enumerable.Last(Of TSource)(IEnumerable(Of TSource))
  commentId: M:System.Linq.Enumerable.Last``1(System.Collections.Generic.IEnumerable{``0})
- uid: System.Linq.Enumerable.Last``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})
  isExternal: true
  name: Last<TSource>(IEnumerable<TSource>, Func<TSource, Boolean>)
  fullName: System.Linq.Enumerable.Last<TSource>(System.Collections.Generic.IEnumerable<TSource>, System.Func<TSource, System.Boolean>)
  fullname.vb: System.Linq.Enumerable.Last(Of TSource)(System.Collections.Generic.IEnumerable(Of TSource), System.Func(Of TSource, System.Boolean))
  name.vb: Last(Of TSource)(IEnumerable(Of TSource), Func(Of TSource, Boolean))
  spec.csharp:
  - uid: System.Linq.Enumerable.Last``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})
    name: Last<TSource>
    fullName: System.Linq.Enumerable.Last<TSource>
  - name: (
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    fullName: <
  - name: TSource
    fullName: TSource
  - name: '>'
    fullName: '>'
  - name: ', '
    fullName: ', '
  - uid: System.Func`2
    name: Func
    fullName: System.Func
    isExternal: true
  - name: <
    fullName: <
  - name: TSource
    fullName: TSource
  - name: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: '>'
    fullName: '>'
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Linq.Enumerable.Last``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})
    name: Last(Of TSource)
    fullName: System.Linq.Enumerable.Last(Of TSource)
  - name: (
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - name: TSource
    fullName: TSource
  - name: )
    fullName: )
  - name: ', '
    fullName: ', '
  - uid: System.Func`2
    name: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - name: TSource
    fullName: TSource
  - name: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    fullName: )
  - name: )
    fullName: )
  nameWithType: Enumerable.Last<TSource>(IEnumerable<TSource>, Func<TSource, Boolean>)
  nameWithType.vb: Enumerable.Last(Of TSource)(IEnumerable(Of TSource), Func(Of TSource, Boolean))
  commentId: M:System.Linq.Enumerable.Last``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})
- uid: System.Linq.Enumerable.LastOrDefault``1(System.Collections.Generic.IEnumerable{``0})
  isExternal: true
  name: LastOrDefault<TSource>(IEnumerable<TSource>)
  fullName: System.Linq.Enumerable.LastOrDefault<TSource>(System.Collections.Generic.IEnumerable<TSource>)
  fullname.vb: System.Linq.Enumerable.LastOrDefault(Of TSource)(System.Collections.Generic.IEnumerable(Of TSource))
  name.vb: LastOrDefault(Of TSource)(IEnumerable(Of TSource))
  spec.csharp:
  - uid: System.Linq.Enumerable.LastOrDefault``1(System.Collections.Generic.IEnumerable{``0})
    name: LastOrDefault<TSource>
    fullName: System.Linq.Enumerable.LastOrDefault<TSource>
  - name: (
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    fullName: <
  - name: TSource
    fullName: TSource
  - name: '>'
    fullName: '>'
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Linq.Enumerable.LastOrDefault``1(System.Collections.Generic.IEnumerable{``0})
    name: LastOrDefault(Of TSource)
    fullName: System.Linq.Enumerable.LastOrDefault(Of TSource)
  - name: (
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - name: TSource
    fullName: TSource
  - name: )
    fullName: )
  - name: )
    fullName: )
  nameWithType: Enumerable.LastOrDefault<TSource>(IEnumerable<TSource>)
  nameWithType.vb: Enumerable.LastOrDefault(Of TSource)(IEnumerable(Of TSource))
  commentId: M:System.Linq.Enumerable.LastOrDefault``1(System.Collections.Generic.IEnumerable{``0})
- uid: System.Linq.Enumerable.LastOrDefault``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})
  isExternal: true
  name: LastOrDefault<TSource>(IEnumerable<TSource>, Func<TSource, Boolean>)
  fullName: System.Linq.Enumerable.LastOrDefault<TSource>(System.Collections.Generic.IEnumerable<TSource>, System.Func<TSource, System.Boolean>)
  fullname.vb: System.Linq.Enumerable.LastOrDefault(Of TSource)(System.Collections.Generic.IEnumerable(Of TSource), System.Func(Of TSource, System.Boolean))
  name.vb: LastOrDefault(Of TSource)(IEnumerable(Of TSource), Func(Of TSource, Boolean))
  spec.csharp:
  - uid: System.Linq.Enumerable.LastOrDefault``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})
    name: LastOrDefault<TSource>
    fullName: System.Linq.Enumerable.LastOrDefault<TSource>
  - name: (
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    fullName: <
  - name: TSource
    fullName: TSource
  - name: '>'
    fullName: '>'
  - name: ', '
    fullName: ', '
  - uid: System.Func`2
    name: Func
    fullName: System.Func
    isExternal: true
  - name: <
    fullName: <
  - name: TSource
    fullName: TSource
  - name: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: '>'
    fullName: '>'
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Linq.Enumerable.LastOrDefault``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})
    name: LastOrDefault(Of TSource)
    fullName: System.Linq.Enumerable.LastOrDefault(Of TSource)
  - name: (
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - name: TSource
    fullName: TSource
  - name: )
    fullName: )
  - name: ', '
    fullName: ', '
  - uid: System.Func`2
    name: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - name: TSource
    fullName: TSource
  - name: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    fullName: )
  - name: )
    fullName: )
  nameWithType: Enumerable.LastOrDefault<TSource>(IEnumerable<TSource>, Func<TSource, Boolean>)
  nameWithType.vb: Enumerable.LastOrDefault(Of TSource)(IEnumerable(Of TSource), Func(Of TSource, Boolean))
  commentId: M:System.Linq.Enumerable.LastOrDefault``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})
- uid: System.Linq.Enumerable.LongCount``1(System.Collections.Generic.IEnumerable{``0})
  isExternal: true
  name: LongCount<TSource>(IEnumerable<TSource>)
  fullName: System.Linq.Enumerable.LongCount<TSource>(System.Collections.Generic.IEnumerable<TSource>)
  fullname.vb: System.Linq.Enumerable.LongCount(Of TSource)(System.Collections.Generic.IEnumerable(Of TSource))
  name.vb: LongCount(Of TSource)(IEnumerable(Of TSource))
  spec.csharp:
  - uid: System.Linq.Enumerable.LongCount``1(System.Collections.Generic.IEnumerable{``0})
    name: LongCount<TSource>
    fullName: System.Linq.Enumerable.LongCount<TSource>
  - name: (
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    fullName: <
  - name: TSource
    fullName: TSource
  - name: '>'
    fullName: '>'
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Linq.Enumerable.LongCount``1(System.Collections.Generic.IEnumerable{``0})
    name: LongCount(Of TSource)
    fullName: System.Linq.Enumerable.LongCount(Of TSource)
  - name: (
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - name: TSource
    fullName: TSource
  - name: )
    fullName: )
  - name: )
    fullName: )
  nameWithType: Enumerable.LongCount<TSource>(IEnumerable<TSource>)
  nameWithType.vb: Enumerable.LongCount(Of TSource)(IEnumerable(Of TSource))
  commentId: M:System.Linq.Enumerable.LongCount``1(System.Collections.Generic.IEnumerable{``0})
- uid: System.Linq.Enumerable.LongCount``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})
  isExternal: true
  name: LongCount<TSource>(IEnumerable<TSource>, Func<TSource, Boolean>)
  fullName: System.Linq.Enumerable.LongCount<TSource>(System.Collections.Generic.IEnumerable<TSource>, System.Func<TSource, System.Boolean>)
  fullname.vb: System.Linq.Enumerable.LongCount(Of TSource)(System.Collections.Generic.IEnumerable(Of TSource), System.Func(Of TSource, System.Boolean))
  name.vb: LongCount(Of TSource)(IEnumerable(Of TSource), Func(Of TSource, Boolean))
  spec.csharp:
  - uid: System.Linq.Enumerable.LongCount``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})
    name: LongCount<TSource>
    fullName: System.Linq.Enumerable.LongCount<TSource>
  - name: (
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    fullName: <
  - name: TSource
    fullName: TSource
  - name: '>'
    fullName: '>'
  - name: ', '
    fullName: ', '
  - uid: System.Func`2
    name: Func
    fullName: System.Func
    isExternal: true
  - name: <
    fullName: <
  - name: TSource
    fullName: TSource
  - name: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: '>'
    fullName: '>'
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Linq.Enumerable.LongCount``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})
    name: LongCount(Of TSource)
    fullName: System.Linq.Enumerable.LongCount(Of TSource)
  - name: (
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - name: TSource
    fullName: TSource
  - name: )
    fullName: )
  - name: ', '
    fullName: ', '
  - uid: System.Func`2
    name: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - name: TSource
    fullName: TSource
  - name: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    fullName: )
  - name: )
    fullName: )
  nameWithType: Enumerable.LongCount<TSource>(IEnumerable<TSource>, Func<TSource, Boolean>)
  nameWithType.vb: Enumerable.LongCount(Of TSource)(IEnumerable(Of TSource), Func(Of TSource, Boolean))
  commentId: M:System.Linq.Enumerable.LongCount``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})
- uid: System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0})
  isExternal: true
  name: Max<TSource>(IEnumerable<TSource>)
  fullName: System.Linq.Enumerable.Max<TSource>(System.Collections.Generic.IEnumerable<TSource>)
  fullname.vb: System.Linq.Enumerable.Max(Of TSource)(System.Collections.Generic.IEnumerable(Of TSource))
  name.vb: Max(Of TSource)(IEnumerable(Of TSource))
  spec.csharp:
  - uid: System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0})
    name: Max<TSource>
    fullName: System.Linq.Enumerable.Max<TSource>
  - name: (
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    fullName: <
  - name: TSource
    fullName: TSource
  - name: '>'
    fullName: '>'
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0})
    name: Max(Of TSource)
    fullName: System.Linq.Enumerable.Max(Of TSource)
  - name: (
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - name: TSource
    fullName: TSource
  - name: )
    fullName: )
  - name: )
    fullName: )
  nameWithType: Enumerable.Max<TSource>(IEnumerable<TSource>)
  nameWithType.vb: Enumerable.Max(Of TSource)(IEnumerable(Of TSource))
  commentId: M:System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0})
- uid: System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Decimal})
  isExternal: true
  name: Max<TSource>(IEnumerable<TSource>, Func<TSource, Decimal>)
  fullName: System.Linq.Enumerable.Max<TSource>(System.Collections.Generic.IEnumerable<TSource>, System.Func<TSource, System.Decimal>)
  fullname.vb: System.Linq.Enumerable.Max(Of TSource)(System.Collections.Generic.IEnumerable(Of TSource), System.Func(Of TSource, System.Decimal))
  name.vb: Max(Of TSource)(IEnumerable(Of TSource), Func(Of TSource, Decimal))
  spec.csharp:
  - uid: System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Decimal})
    name: Max<TSource>
    fullName: System.Linq.Enumerable.Max<TSource>
  - name: (
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    fullName: <
  - name: TSource
    fullName: TSource
  - name: '>'
    fullName: '>'
  - name: ', '
    fullName: ', '
  - uid: System.Func`2
    name: Func
    fullName: System.Func
    isExternal: true
  - name: <
    fullName: <
  - name: TSource
    fullName: TSource
  - name: ', '
    fullName: ', '
  - uid: System.Decimal
    name: Decimal
    fullName: System.Decimal
    isExternal: true
  - name: '>'
    fullName: '>'
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Decimal})
    name: Max(Of TSource)
    fullName: System.Linq.Enumerable.Max(Of TSource)
  - name: (
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - name: TSource
    fullName: TSource
  - name: )
    fullName: )
  - name: ', '
    fullName: ', '
  - uid: System.Func`2
    name: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - name: TSource
    fullName: TSource
  - name: ', '
    fullName: ', '
  - uid: System.Decimal
    name: Decimal
    fullName: System.Decimal
    isExternal: true
  - name: )
    fullName: )
  - name: )
    fullName: )
  nameWithType: Enumerable.Max<TSource>(IEnumerable<TSource>, Func<TSource, Decimal>)
  nameWithType.vb: Enumerable.Max(Of TSource)(IEnumerable(Of TSource), Func(Of TSource, Decimal))
  commentId: M:System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Decimal})
- uid: System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Double})
  isExternal: true
  name: Max<TSource>(IEnumerable<TSource>, Func<TSource, Double>)
  fullName: System.Linq.Enumerable.Max<TSource>(System.Collections.Generic.IEnumerable<TSource>, System.Func<TSource, System.Double>)
  fullname.vb: System.Linq.Enumerable.Max(Of TSource)(System.Collections.Generic.IEnumerable(Of TSource), System.Func(Of TSource, System.Double))
  name.vb: Max(Of TSource)(IEnumerable(Of TSource), Func(Of TSource, Double))
  spec.csharp:
  - uid: System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Double})
    name: Max<TSource>
    fullName: System.Linq.Enumerable.Max<TSource>
  - name: (
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    fullName: <
  - name: TSource
    fullName: TSource
  - name: '>'
    fullName: '>'
  - name: ', '
    fullName: ', '
  - uid: System.Func`2
    name: Func
    fullName: System.Func
    isExternal: true
  - name: <
    fullName: <
  - name: TSource
    fullName: TSource
  - name: ', '
    fullName: ', '
  - uid: System.Double
    name: Double
    fullName: System.Double
    isExternal: true
  - name: '>'
    fullName: '>'
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Double})
    name: Max(Of TSource)
    fullName: System.Linq.Enumerable.Max(Of TSource)
  - name: (
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - name: TSource
    fullName: TSource
  - name: )
    fullName: )
  - name: ', '
    fullName: ', '
  - uid: System.Func`2
    name: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - name: TSource
    fullName: TSource
  - name: ', '
    fullName: ', '
  - uid: System.Double
    name: Double
    fullName: System.Double
    isExternal: true
  - name: )
    fullName: )
  - name: )
    fullName: )
  nameWithType: Enumerable.Max<TSource>(IEnumerable<TSource>, Func<TSource, Double>)
  nameWithType.vb: Enumerable.Max(Of TSource)(IEnumerable(Of TSource), Func(Of TSource, Double))
  commentId: M:System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Double})
- uid: System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32})
  isExternal: true
  name: Max<TSource>(IEnumerable<TSource>, Func<TSource, Int32>)
  fullName: System.Linq.Enumerable.Max<TSource>(System.Collections.Generic.IEnumerable<TSource>, System.Func<TSource, System.Int32>)
  fullname.vb: System.Linq.Enumerable.Max(Of TSource)(System.Collections.Generic.IEnumerable(Of TSource), System.Func(Of TSource, System.Int32))
  name.vb: Max(Of TSource)(IEnumerable(Of TSource), Func(Of TSource, Int32))
  spec.csharp:
  - uid: System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32})
    name: Max<TSource>
    fullName: System.Linq.Enumerable.Max<TSource>
  - name: (
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    fullName: <
  - name: TSource
    fullName: TSource
  - name: '>'
    fullName: '>'
  - name: ', '
    fullName: ', '
  - uid: System.Func`2
    name: Func
    fullName: System.Func
    isExternal: true
  - name: <
    fullName: <
  - name: TSource
    fullName: TSource
  - name: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    fullName: System.Int32
    isExternal: true
  - name: '>'
    fullName: '>'
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32})
    name: Max(Of TSource)
    fullName: System.Linq.Enumerable.Max(Of TSource)
  - name: (
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - name: TSource
    fullName: TSource
  - name: )
    fullName: )
  - name: ', '
    fullName: ', '
  - uid: System.Func`2
    name: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - name: TSource
    fullName: TSource
  - name: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    fullName: )
  - name: )
    fullName: )
  nameWithType: Enumerable.Max<TSource>(IEnumerable<TSource>, Func<TSource, Int32>)
  nameWithType.vb: Enumerable.Max(Of TSource)(IEnumerable(Of TSource), Func(Of TSource, Int32))
  commentId: M:System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32})
- uid: System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int64})
  isExternal: true
  name: Max<TSource>(IEnumerable<TSource>, Func<TSource, Int64>)
  fullName: System.Linq.Enumerable.Max<TSource>(System.Collections.Generic.IEnumerable<TSource>, System.Func<TSource, System.Int64>)
  fullname.vb: System.Linq.Enumerable.Max(Of TSource)(System.Collections.Generic.IEnumerable(Of TSource), System.Func(Of TSource, System.Int64))
  name.vb: Max(Of TSource)(IEnumerable(Of TSource), Func(Of TSource, Int64))
  spec.csharp:
  - uid: System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int64})
    name: Max<TSource>
    fullName: System.Linq.Enumerable.Max<TSource>
  - name: (
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    fullName: <
  - name: TSource
    fullName: TSource
  - name: '>'
    fullName: '>'
  - name: ', '
    fullName: ', '
  - uid: System.Func`2
    name: Func
    fullName: System.Func
    isExternal: true
  - name: <
    fullName: <
  - name: TSource
    fullName: TSource
  - name: ', '
    fullName: ', '
  - uid: System.Int64
    name: Int64
    fullName: System.Int64
    isExternal: true
  - name: '>'
    fullName: '>'
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int64})
    name: Max(Of TSource)
    fullName: System.Linq.Enumerable.Max(Of TSource)
  - name: (
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - name: TSource
    fullName: TSource
  - name: )
    fullName: )
  - name: ', '
    fullName: ', '
  - uid: System.Func`2
    name: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - name: TSource
    fullName: TSource
  - name: ', '
    fullName: ', '
  - uid: System.Int64
    name: Int64
    fullName: System.Int64
    isExternal: true
  - name: )
    fullName: )
  - name: )
    fullName: )
  nameWithType: Enumerable.Max<TSource>(IEnumerable<TSource>, Func<TSource, Int64>)
  nameWithType.vb: Enumerable.Max(Of TSource)(IEnumerable(Of TSource), Func(Of TSource, Int64))
  commentId: M:System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int64})
- uid: System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Decimal}})
  isExternal: true
  name: Max<TSource>(IEnumerable<TSource>, Func<TSource, Nullable<Decimal>>)
  fullName: System.Linq.Enumerable.Max<TSource>(System.Collections.Generic.IEnumerable<TSource>, System.Func<TSource, System.Nullable<System.Decimal>>)
  fullname.vb: System.Linq.Enumerable.Max(Of TSource)(System.Collections.Generic.IEnumerable(Of TSource), System.Func(Of TSource, System.Nullable(Of System.Decimal)))
  name.vb: Max(Of TSource)(IEnumerable(Of TSource), Func(Of TSource, Nullable(Of Decimal)))
  spec.csharp:
  - uid: System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Decimal}})
    name: Max<TSource>
    fullName: System.Linq.Enumerable.Max<TSource>
  - name: (
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    fullName: <
  - name: TSource
    fullName: TSource
  - name: '>'
    fullName: '>'
  - name: ', '
    fullName: ', '
  - uid: System.Func`2
    name: Func
    fullName: System.Func
    isExternal: true
  - name: <
    fullName: <
  - name: TSource
    fullName: TSource
  - name: ', '
    fullName: ', '
  - uid: System.Nullable`1
    name: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    fullName: <
  - uid: System.Decimal
    name: Decimal
    fullName: System.Decimal
    isExternal: true
  - name: '>'
    fullName: '>'
  - name: '>'
    fullName: '>'
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Decimal}})
    name: Max(Of TSource)
    fullName: System.Linq.Enumerable.Max(Of TSource)
  - name: (
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - name: TSource
    fullName: TSource
  - name: )
    fullName: )
  - name: ', '
    fullName: ', '
  - uid: System.Func`2
    name: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - name: TSource
    fullName: TSource
  - name: ', '
    fullName: ', '
  - uid: System.Nullable`1
    name: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - uid: System.Decimal
    name: Decimal
    fullName: System.Decimal
    isExternal: true
  - name: )
    fullName: )
  - name: )
    fullName: )
  - name: )
    fullName: )
  nameWithType: Enumerable.Max<TSource>(IEnumerable<TSource>, Func<TSource, Nullable<Decimal>>)
  nameWithType.vb: Enumerable.Max(Of TSource)(IEnumerable(Of TSource), Func(Of TSource, Nullable(Of Decimal)))
  commentId: M:System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Decimal}})
- uid: System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Double}})
  isExternal: true
  name: Max<TSource>(IEnumerable<TSource>, Func<TSource, Nullable<Double>>)
  fullName: System.Linq.Enumerable.Max<TSource>(System.Collections.Generic.IEnumerable<TSource>, System.Func<TSource, System.Nullable<System.Double>>)
  fullname.vb: System.Linq.Enumerable.Max(Of TSource)(System.Collections.Generic.IEnumerable(Of TSource), System.Func(Of TSource, System.Nullable(Of System.Double)))
  name.vb: Max(Of TSource)(IEnumerable(Of TSource), Func(Of TSource, Nullable(Of Double)))
  spec.csharp:
  - uid: System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Double}})
    name: Max<TSource>
    fullName: System.Linq.Enumerable.Max<TSource>
  - name: (
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    fullName: <
  - name: TSource
    fullName: TSource
  - name: '>'
    fullName: '>'
  - name: ', '
    fullName: ', '
  - uid: System.Func`2
    name: Func
    fullName: System.Func
    isExternal: true
  - name: <
    fullName: <
  - name: TSource
    fullName: TSource
  - name: ', '
    fullName: ', '
  - uid: System.Nullable`1
    name: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    fullName: <
  - uid: System.Double
    name: Double
    fullName: System.Double
    isExternal: true
  - name: '>'
    fullName: '>'
  - name: '>'
    fullName: '>'
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Double}})
    name: Max(Of TSource)
    fullName: System.Linq.Enumerable.Max(Of TSource)
  - name: (
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - name: TSource
    fullName: TSource
  - name: )
    fullName: )
  - name: ', '
    fullName: ', '
  - uid: System.Func`2
    name: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - name: TSource
    fullName: TSource
  - name: ', '
    fullName: ', '
  - uid: System.Nullable`1
    name: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - uid: System.Double
    name: Double
    fullName: System.Double
    isExternal: true
  - name: )
    fullName: )
  - name: )
    fullName: )
  - name: )
    fullName: )
  nameWithType: Enumerable.Max<TSource>(IEnumerable<TSource>, Func<TSource, Nullable<Double>>)
  nameWithType.vb: Enumerable.Max(Of TSource)(IEnumerable(Of TSource), Func(Of TSource, Nullable(Of Double)))
  commentId: M:System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Double}})
- uid: System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Int32}})
  isExternal: true
  name: Max<TSource>(IEnumerable<TSource>, Func<TSource, Nullable<Int32>>)
  fullName: System.Linq.Enumerable.Max<TSource>(System.Collections.Generic.IEnumerable<TSource>, System.Func<TSource, System.Nullable<System.Int32>>)
  fullname.vb: System.Linq.Enumerable.Max(Of TSource)(System.Collections.Generic.IEnumerable(Of TSource), System.Func(Of TSource, System.Nullable(Of System.Int32)))
  name.vb: Max(Of TSource)(IEnumerable(Of TSource), Func(Of TSource, Nullable(Of Int32)))
  spec.csharp:
  - uid: System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Int32}})
    name: Max<TSource>
    fullName: System.Linq.Enumerable.Max<TSource>
  - name: (
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    fullName: <
  - name: TSource
    fullName: TSource
  - name: '>'
    fullName: '>'
  - name: ', '
    fullName: ', '
  - uid: System.Func`2
    name: Func
    fullName: System.Func
    isExternal: true
  - name: <
    fullName: <
  - name: TSource
    fullName: TSource
  - name: ', '
    fullName: ', '
  - uid: System.Nullable`1
    name: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    fullName: <
  - uid: System.Int32
    name: Int32
    fullName: System.Int32
    isExternal: true
  - name: '>'
    fullName: '>'
  - name: '>'
    fullName: '>'
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Int32}})
    name: Max(Of TSource)
    fullName: System.Linq.Enumerable.Max(Of TSource)
  - name: (
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - name: TSource
    fullName: TSource
  - name: )
    fullName: )
  - name: ', '
    fullName: ', '
  - uid: System.Func`2
    name: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - name: TSource
    fullName: TSource
  - name: ', '
    fullName: ', '
  - uid: System.Nullable`1
    name: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - uid: System.Int32
    name: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    fullName: )
  - name: )
    fullName: )
  - name: )
    fullName: )
  nameWithType: Enumerable.Max<TSource>(IEnumerable<TSource>, Func<TSource, Nullable<Int32>>)
  nameWithType.vb: Enumerable.Max(Of TSource)(IEnumerable(Of TSource), Func(Of TSource, Nullable(Of Int32)))
  commentId: M:System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Int32}})
- uid: System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Int64}})
  isExternal: true
  name: Max<TSource>(IEnumerable<TSource>, Func<TSource, Nullable<Int64>>)
  fullName: System.Linq.Enumerable.Max<TSource>(System.Collections.Generic.IEnumerable<TSource>, System.Func<TSource, System.Nullable<System.Int64>>)
  fullname.vb: System.Linq.Enumerable.Max(Of TSource)(System.Collections.Generic.IEnumerable(Of TSource), System.Func(Of TSource, System.Nullable(Of System.Int64)))
  name.vb: Max(Of TSource)(IEnumerable(Of TSource), Func(Of TSource, Nullable(Of Int64)))
  spec.csharp:
  - uid: System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Int64}})
    name: Max<TSource>
    fullName: System.Linq.Enumerable.Max<TSource>
  - name: (
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    fullName: <
  - name: TSource
    fullName: TSource
  - name: '>'
    fullName: '>'
  - name: ', '
    fullName: ', '
  - uid: System.Func`2
    name: Func
    fullName: System.Func
    isExternal: true
  - name: <
    fullName: <
  - name: TSource
    fullName: TSource
  - name: ', '
    fullName: ', '
  - uid: System.Nullable`1
    name: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    fullName: <
  - uid: System.Int64
    name: Int64
    fullName: System.Int64
    isExternal: true
  - name: '>'
    fullName: '>'
  - name: '>'
    fullName: '>'
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Int64}})
    name: Max(Of TSource)
    fullName: System.Linq.Enumerable.Max(Of TSource)
  - name: (
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - name: TSource
    fullName: TSource
  - name: )
    fullName: )
  - name: ', '
    fullName: ', '
  - uid: System.Func`2
    name: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - name: TSource
    fullName: TSource
  - name: ', '
    fullName: ', '
  - uid: System.Nullable`1
    name: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - uid: System.Int64
    name: Int64
    fullName: System.Int64
    isExternal: true
  - name: )
    fullName: )
  - name: )
    fullName: )
  - name: )
    fullName: )
  nameWithType: Enumerable.Max<TSource>(IEnumerable<TSource>, Func<TSource, Nullable<Int64>>)
  nameWithType.vb: Enumerable.Max(Of TSource)(IEnumerable(Of TSource), Func(Of TSource, Nullable(Of Int64)))
  commentId: M:System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Int64}})
- uid: System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Single}})
  isExternal: true
  name: Max<TSource>(IEnumerable<TSource>, Func<TSource, Nullable<Single>>)
  fullName: System.Linq.Enumerable.Max<TSource>(System.Collections.Generic.IEnumerable<TSource>, System.Func<TSource, System.Nullable<System.Single>>)
  fullname.vb: System.Linq.Enumerable.Max(Of TSource)(System.Collections.Generic.IEnumerable(Of TSource), System.Func(Of TSource, System.Nullable(Of System.Single)))
  name.vb: Max(Of TSource)(IEnumerable(Of TSource), Func(Of TSource, Nullable(Of Single)))
  spec.csharp:
  - uid: System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Single}})
    name: Max<TSource>
    fullName: System.Linq.Enumerable.Max<TSource>
  - name: (
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    fullName: <
  - name: TSource
    fullName: TSource
  - name: '>'
    fullName: '>'
  - name: ', '
    fullName: ', '
  - uid: System.Func`2
    name: Func
    fullName: System.Func
    isExternal: true
  - name: <
    fullName: <
  - name: TSource
    fullName: TSource
  - name: ', '
    fullName: ', '
  - uid: System.Nullable`1
    name: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    fullName: <
  - uid: System.Single
    name: Single
    fullName: System.Single
    isExternal: true
  - name: '>'
    fullName: '>'
  - name: '>'
    fullName: '>'
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Single}})
    name: Max(Of TSource)
    fullName: System.Linq.Enumerable.Max(Of TSource)
  - name: (
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - name: TSource
    fullName: TSource
  - name: )
    fullName: )
  - name: ', '
    fullName: ', '
  - uid: System.Func`2
    name: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - name: TSource
    fullName: TSource
  - name: ', '
    fullName: ', '
  - uid: System.Nullable`1
    name: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - uid: System.Single
    name: Single
    fullName: System.Single
    isExternal: true
  - name: )
    fullName: )
  - name: )
    fullName: )
  - name: )
    fullName: )
  nameWithType: Enumerable.Max<TSource>(IEnumerable<TSource>, Func<TSource, Nullable<Single>>)
  nameWithType.vb: Enumerable.Max(Of TSource)(IEnumerable(Of TSource), Func(Of TSource, Nullable(Of Single)))
  commentId: M:System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Single}})
- uid: System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Single})
  isExternal: true
  name: Max<TSource>(IEnumerable<TSource>, Func<TSource, Single>)
  fullName: System.Linq.Enumerable.Max<TSource>(System.Collections.Generic.IEnumerable<TSource>, System.Func<TSource, System.Single>)
  fullname.vb: System.Linq.Enumerable.Max(Of TSource)(System.Collections.Generic.IEnumerable(Of TSource), System.Func(Of TSource, System.Single))
  name.vb: Max(Of TSource)(IEnumerable(Of TSource), Func(Of TSource, Single))
  spec.csharp:
  - uid: System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Single})
    name: Max<TSource>
    fullName: System.Linq.Enumerable.Max<TSource>
  - name: (
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    fullName: <
  - name: TSource
    fullName: TSource
  - name: '>'
    fullName: '>'
  - name: ', '
    fullName: ', '
  - uid: System.Func`2
    name: Func
    fullName: System.Func
    isExternal: true
  - name: <
    fullName: <
  - name: TSource
    fullName: TSource
  - name: ', '
    fullName: ', '
  - uid: System.Single
    name: Single
    fullName: System.Single
    isExternal: true
  - name: '>'
    fullName: '>'
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Single})
    name: Max(Of TSource)
    fullName: System.Linq.Enumerable.Max(Of TSource)
  - name: (
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - name: TSource
    fullName: TSource
  - name: )
    fullName: )
  - name: ', '
    fullName: ', '
  - uid: System.Func`2
    name: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - name: TSource
    fullName: TSource
  - name: ', '
    fullName: ', '
  - uid: System.Single
    name: Single
    fullName: System.Single
    isExternal: true
  - name: )
    fullName: )
  - name: )
    fullName: )
  nameWithType: Enumerable.Max<TSource>(IEnumerable<TSource>, Func<TSource, Single>)
  nameWithType.vb: Enumerable.Max(Of TSource)(IEnumerable(Of TSource), Func(Of TSource, Single))
  commentId: M:System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Single})
- uid: System.Linq.Enumerable.Max``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})
  isExternal: true
  name: Max<TSource, TResult>(IEnumerable<TSource>, Func<TSource, TResult>)
  fullName: System.Linq.Enumerable.Max<TSource, TResult>(System.Collections.Generic.IEnumerable<TSource>, System.Func<TSource, TResult>)
  fullname.vb: System.Linq.Enumerable.Max(Of TSource, TResult)(System.Collections.Generic.IEnumerable(Of TSource), System.Func(Of TSource, TResult))
  name.vb: Max(Of TSource, TResult)(IEnumerable(Of TSource), Func(Of TSource, TResult))
  spec.csharp:
  - uid: System.Linq.Enumerable.Max``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})
    name: Max<TSource, TResult>
    fullName: System.Linq.Enumerable.Max<TSource, TResult>
  - name: (
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    fullName: <
  - name: TSource
    fullName: TSource
  - name: '>'
    fullName: '>'
  - name: ', '
    fullName: ', '
  - uid: System.Func`2
    name: Func
    fullName: System.Func
    isExternal: true
  - name: <
    fullName: <
  - name: TSource
    fullName: TSource
  - name: ', '
    fullName: ', '
  - name: TResult
    fullName: TResult
  - name: '>'
    fullName: '>'
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Linq.Enumerable.Max``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})
    name: Max(Of TSource, TResult)
    fullName: System.Linq.Enumerable.Max(Of TSource, TResult)
  - name: (
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - name: TSource
    fullName: TSource
  - name: )
    fullName: )
  - name: ', '
    fullName: ', '
  - uid: System.Func`2
    name: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - name: TSource
    fullName: TSource
  - name: ', '
    fullName: ', '
  - name: TResult
    fullName: TResult
  - name: )
    fullName: )
  - name: )
    fullName: )
  nameWithType: Enumerable.Max<TSource, TResult>(IEnumerable<TSource>, Func<TSource, TResult>)
  nameWithType.vb: Enumerable.Max(Of TSource, TResult)(IEnumerable(Of TSource), Func(Of TSource, TResult))
  commentId: M:System.Linq.Enumerable.Max``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})
- uid: System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0})
  isExternal: true
  name: Min<TSource>(IEnumerable<TSource>)
  fullName: System.Linq.Enumerable.Min<TSource>(System.Collections.Generic.IEnumerable<TSource>)
  fullname.vb: System.Linq.Enumerable.Min(Of TSource)(System.Collections.Generic.IEnumerable(Of TSource))
  name.vb: Min(Of TSource)(IEnumerable(Of TSource))
  spec.csharp:
  - uid: System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0})
    name: Min<TSource>
    fullName: System.Linq.Enumerable.Min<TSource>
  - name: (
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    fullName: <
  - name: TSource
    fullName: TSource
  - name: '>'
    fullName: '>'
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0})
    name: Min(Of TSource)
    fullName: System.Linq.Enumerable.Min(Of TSource)
  - name: (
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - name: TSource
    fullName: TSource
  - name: )
    fullName: )
  - name: )
    fullName: )
  nameWithType: Enumerable.Min<TSource>(IEnumerable<TSource>)
  nameWithType.vb: Enumerable.Min(Of TSource)(IEnumerable(Of TSource))
  commentId: M:System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0})
- uid: System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Decimal})
  isExternal: true
  name: Min<TSource>(IEnumerable<TSource>, Func<TSource, Decimal>)
  fullName: System.Linq.Enumerable.Min<TSource>(System.Collections.Generic.IEnumerable<TSource>, System.Func<TSource, System.Decimal>)
  fullname.vb: System.Linq.Enumerable.Min(Of TSource)(System.Collections.Generic.IEnumerable(Of TSource), System.Func(Of TSource, System.Decimal))
  name.vb: Min(Of TSource)(IEnumerable(Of TSource), Func(Of TSource, Decimal))
  spec.csharp:
  - uid: System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Decimal})
    name: Min<TSource>
    fullName: System.Linq.Enumerable.Min<TSource>
  - name: (
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    fullName: <
  - name: TSource
    fullName: TSource
  - name: '>'
    fullName: '>'
  - name: ', '
    fullName: ', '
  - uid: System.Func`2
    name: Func
    fullName: System.Func
    isExternal: true
  - name: <
    fullName: <
  - name: TSource
    fullName: TSource
  - name: ', '
    fullName: ', '
  - uid: System.Decimal
    name: Decimal
    fullName: System.Decimal
    isExternal: true
  - name: '>'
    fullName: '>'
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Decimal})
    name: Min(Of TSource)
    fullName: System.Linq.Enumerable.Min(Of TSource)
  - name: (
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - name: TSource
    fullName: TSource
  - name: )
    fullName: )
  - name: ', '
    fullName: ', '
  - uid: System.Func`2
    name: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - name: TSource
    fullName: TSource
  - name: ', '
    fullName: ', '
  - uid: System.Decimal
    name: Decimal
    fullName: System.Decimal
    isExternal: true
  - name: )
    fullName: )
  - name: )
    fullName: )
  nameWithType: Enumerable.Min<TSource>(IEnumerable<TSource>, Func<TSource, Decimal>)
  nameWithType.vb: Enumerable.Min(Of TSource)(IEnumerable(Of TSource), Func(Of TSource, Decimal))
  commentId: M:System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Decimal})
- uid: System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Double})
  isExternal: true
  name: Min<TSource>(IEnumerable<TSource>, Func<TSource, Double>)
  fullName: System.Linq.Enumerable.Min<TSource>(System.Collections.Generic.IEnumerable<TSource>, System.Func<TSource, System.Double>)
  fullname.vb: System.Linq.Enumerable.Min(Of TSource)(System.Collections.Generic.IEnumerable(Of TSource), System.Func(Of TSource, System.Double))
  name.vb: Min(Of TSource)(IEnumerable(Of TSource), Func(Of TSource, Double))
  spec.csharp:
  - uid: System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Double})
    name: Min<TSource>
    fullName: System.Linq.Enumerable.Min<TSource>
  - name: (
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    fullName: <
  - name: TSource
    fullName: TSource
  - name: '>'
    fullName: '>'
  - name: ', '
    fullName: ', '
  - uid: System.Func`2
    name: Func
    fullName: System.Func
    isExternal: true
  - name: <
    fullName: <
  - name: TSource
    fullName: TSource
  - name: ', '
    fullName: ', '
  - uid: System.Double
    name: Double
    fullName: System.Double
    isExternal: true
  - name: '>'
    fullName: '>'
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Double})
    name: Min(Of TSource)
    fullName: System.Linq.Enumerable.Min(Of TSource)
  - name: (
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - name: TSource
    fullName: TSource
  - name: )
    fullName: )
  - name: ', '
    fullName: ', '
  - uid: System.Func`2
    name: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - name: TSource
    fullName: TSource
  - name: ', '
    fullName: ', '
  - uid: System.Double
    name: Double
    fullName: System.Double
    isExternal: true
  - name: )
    fullName: )
  - name: )
    fullName: )
  nameWithType: Enumerable.Min<TSource>(IEnumerable<TSource>, Func<TSource, Double>)
  nameWithType.vb: Enumerable.Min(Of TSource)(IEnumerable(Of TSource), Func(Of TSource, Double))
  commentId: M:System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Double})
- uid: System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32})
  isExternal: true
  name: Min<TSource>(IEnumerable<TSource>, Func<TSource, Int32>)
  fullName: System.Linq.Enumerable.Min<TSource>(System.Collections.Generic.IEnumerable<TSource>, System.Func<TSource, System.Int32>)
  fullname.vb: System.Linq.Enumerable.Min(Of TSource)(System.Collections.Generic.IEnumerable(Of TSource), System.Func(Of TSource, System.Int32))
  name.vb: Min(Of TSource)(IEnumerable(Of TSource), Func(Of TSource, Int32))
  spec.csharp:
  - uid: System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32})
    name: Min<TSource>
    fullName: System.Linq.Enumerable.Min<TSource>
  - name: (
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    fullName: <
  - name: TSource
    fullName: TSource
  - name: '>'
    fullName: '>'
  - name: ', '
    fullName: ', '
  - uid: System.Func`2
    name: Func
    fullName: System.Func
    isExternal: true
  - name: <
    fullName: <
  - name: TSource
    fullName: TSource
  - name: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    fullName: System.Int32
    isExternal: true
  - name: '>'
    fullName: '>'
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32})
    name: Min(Of TSource)
    fullName: System.Linq.Enumerable.Min(Of TSource)
  - name: (
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - name: TSource
    fullName: TSource
  - name: )
    fullName: )
  - name: ', '
    fullName: ', '
  - uid: System.Func`2
    name: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - name: TSource
    fullName: TSource
  - name: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    fullName: )
  - name: )
    fullName: )
  nameWithType: Enumerable.Min<TSource>(IEnumerable<TSource>, Func<TSource, Int32>)
  nameWithType.vb: Enumerable.Min(Of TSource)(IEnumerable(Of TSource), Func(Of TSource, Int32))
  commentId: M:System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32})
- uid: System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int64})
  isExternal: true
  name: Min<TSource>(IEnumerable<TSource>, Func<TSource, Int64>)
  fullName: System.Linq.Enumerable.Min<TSource>(System.Collections.Generic.IEnumerable<TSource>, System.Func<TSource, System.Int64>)
  fullname.vb: System.Linq.Enumerable.Min(Of TSource)(System.Collections.Generic.IEnumerable(Of TSource), System.Func(Of TSource, System.Int64))
  name.vb: Min(Of TSource)(IEnumerable(Of TSource), Func(Of TSource, Int64))
  spec.csharp:
  - uid: System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int64})
    name: Min<TSource>
    fullName: System.Linq.Enumerable.Min<TSource>
  - name: (
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    fullName: <
  - name: TSource
    fullName: TSource
  - name: '>'
    fullName: '>'
  - name: ', '
    fullName: ', '
  - uid: System.Func`2
    name: Func
    fullName: System.Func
    isExternal: true
  - name: <
    fullName: <
  - name: TSource
    fullName: TSource
  - name: ', '
    fullName: ', '
  - uid: System.Int64
    name: Int64
    fullName: System.Int64
    isExternal: true
  - name: '>'
    fullName: '>'
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int64})
    name: Min(Of TSource)
    fullName: System.Linq.Enumerable.Min(Of TSource)
  - name: (
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - name: TSource
    fullName: TSource
  - name: )
    fullName: )
  - name: ', '
    fullName: ', '
  - uid: System.Func`2
    name: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - name: TSource
    fullName: TSource
  - name: ', '
    fullName: ', '
  - uid: System.Int64
    name: Int64
    fullName: System.Int64
    isExternal: true
  - name: )
    fullName: )
  - name: )
    fullName: )
  nameWithType: Enumerable.Min<TSource>(IEnumerable<TSource>, Func<TSource, Int64>)
  nameWithType.vb: Enumerable.Min(Of TSource)(IEnumerable(Of TSource), Func(Of TSource, Int64))
  commentId: M:System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int64})
- uid: System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Decimal}})
  isExternal: true
  name: Min<TSource>(IEnumerable<TSource>, Func<TSource, Nullable<Decimal>>)
  fullName: System.Linq.Enumerable.Min<TSource>(System.Collections.Generic.IEnumerable<TSource>, System.Func<TSource, System.Nullable<System.Decimal>>)
  fullname.vb: System.Linq.Enumerable.Min(Of TSource)(System.Collections.Generic.IEnumerable(Of TSource), System.Func(Of TSource, System.Nullable(Of System.Decimal)))
  name.vb: Min(Of TSource)(IEnumerable(Of TSource), Func(Of TSource, Nullable(Of Decimal)))
  spec.csharp:
  - uid: System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Decimal}})
    name: Min<TSource>
    fullName: System.Linq.Enumerable.Min<TSource>
  - name: (
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    fullName: <
  - name: TSource
    fullName: TSource
  - name: '>'
    fullName: '>'
  - name: ', '
    fullName: ', '
  - uid: System.Func`2
    name: Func
    fullName: System.Func
    isExternal: true
  - name: <
    fullName: <
  - name: TSource
    fullName: TSource
  - name: ', '
    fullName: ', '
  - uid: System.Nullable`1
    name: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    fullName: <
  - uid: System.Decimal
    name: Decimal
    fullName: System.Decimal
    isExternal: true
  - name: '>'
    fullName: '>'
  - name: '>'
    fullName: '>'
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Decimal}})
    name: Min(Of TSource)
    fullName: System.Linq.Enumerable.Min(Of TSource)
  - name: (
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - name: TSource
    fullName: TSource
  - name: )
    fullName: )
  - name: ', '
    fullName: ', '
  - uid: System.Func`2
    name: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - name: TSource
    fullName: TSource
  - name: ', '
    fullName: ', '
  - uid: System.Nullable`1
    name: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - uid: System.Decimal
    name: Decimal
    fullName: System.Decimal
    isExternal: true
  - name: )
    fullName: )
  - name: )
    fullName: )
  - name: )
    fullName: )
  nameWithType: Enumerable.Min<TSource>(IEnumerable<TSource>, Func<TSource, Nullable<Decimal>>)
  nameWithType.vb: Enumerable.Min(Of TSource)(IEnumerable(Of TSource), Func(Of TSource, Nullable(Of Decimal)))
  commentId: M:System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Decimal}})
- uid: System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Double}})
  isExternal: true
  name: Min<TSource>(IEnumerable<TSource>, Func<TSource, Nullable<Double>>)
  fullName: System.Linq.Enumerable.Min<TSource>(System.Collections.Generic.IEnumerable<TSource>, System.Func<TSource, System.Nullable<System.Double>>)
  fullname.vb: System.Linq.Enumerable.Min(Of TSource)(System.Collections.Generic.IEnumerable(Of TSource), System.Func(Of TSource, System.Nullable(Of System.Double)))
  name.vb: Min(Of TSource)(IEnumerable(Of TSource), Func(Of TSource, Nullable(Of Double)))
  spec.csharp:
  - uid: System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Double}})
    name: Min<TSource>
    fullName: System.Linq.Enumerable.Min<TSource>
  - name: (
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    fullName: <
  - name: TSource
    fullName: TSource
  - name: '>'
    fullName: '>'
  - name: ', '
    fullName: ', '
  - uid: System.Func`2
    name: Func
    fullName: System.Func
    isExternal: true
  - name: <
    fullName: <
  - name: TSource
    fullName: TSource
  - name: ', '
    fullName: ', '
  - uid: System.Nullable`1
    name: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    fullName: <
  - uid: System.Double
    name: Double
    fullName: System.Double
    isExternal: true
  - name: '>'
    fullName: '>'
  - name: '>'
    fullName: '>'
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Double}})
    name: Min(Of TSource)
    fullName: System.Linq.Enumerable.Min(Of TSource)
  - name: (
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - name: TSource
    fullName: TSource
  - name: )
    fullName: )
  - name: ', '
    fullName: ', '
  - uid: System.Func`2
    name: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - name: TSource
    fullName: TSource
  - name: ', '
    fullName: ', '
  - uid: System.Nullable`1
    name: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - uid: System.Double
    name: Double
    fullName: System.Double
    isExternal: true
  - name: )
    fullName: )
  - name: )
    fullName: )
  - name: )
    fullName: )
  nameWithType: Enumerable.Min<TSource>(IEnumerable<TSource>, Func<TSource, Nullable<Double>>)
  nameWithType.vb: Enumerable.Min(Of TSource)(IEnumerable(Of TSource), Func(Of TSource, Nullable(Of Double)))
  commentId: M:System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Double}})
- uid: System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Int32}})
  isExternal: true
  name: Min<TSource>(IEnumerable<TSource>, Func<TSource, Nullable<Int32>>)
  fullName: System.Linq.Enumerable.Min<TSource>(System.Collections.Generic.IEnumerable<TSource>, System.Func<TSource, System.Nullable<System.Int32>>)
  fullname.vb: System.Linq.Enumerable.Min(Of TSource)(System.Collections.Generic.IEnumerable(Of TSource), System.Func(Of TSource, System.Nullable(Of System.Int32)))
  name.vb: Min(Of TSource)(IEnumerable(Of TSource), Func(Of TSource, Nullable(Of Int32)))
  spec.csharp:
  - uid: System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Int32}})
    name: Min<TSource>
    fullName: System.Linq.Enumerable.Min<TSource>
  - name: (
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    fullName: <
  - name: TSource
    fullName: TSource
  - name: '>'
    fullName: '>'
  - name: ', '
    fullName: ', '
  - uid: System.Func`2
    name: Func
    fullName: System.Func
    isExternal: true
  - name: <
    fullName: <
  - name: TSource
    fullName: TSource
  - name: ', '
    fullName: ', '
  - uid: System.Nullable`1
    name: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    fullName: <
  - uid: System.Int32
    name: Int32
    fullName: System.Int32
    isExternal: true
  - name: '>'
    fullName: '>'
  - name: '>'
    fullName: '>'
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Int32}})
    name: Min(Of TSource)
    fullName: System.Linq.Enumerable.Min(Of TSource)
  - name: (
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - name: TSource
    fullName: TSource
  - name: )
    fullName: )
  - name: ', '
    fullName: ', '
  - uid: System.Func`2
    name: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - name: TSource
    fullName: TSource
  - name: ', '
    fullName: ', '
  - uid: System.Nullable`1
    name: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - uid: System.Int32
    name: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    fullName: )
  - name: )
    fullName: )
  - name: )
    fullName: )
  nameWithType: Enumerable.Min<TSource>(IEnumerable<TSource>, Func<TSource, Nullable<Int32>>)
  nameWithType.vb: Enumerable.Min(Of TSource)(IEnumerable(Of TSource), Func(Of TSource, Nullable(Of Int32)))
  commentId: M:System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Int32}})
- uid: System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Int64}})
  isExternal: true
  name: Min<TSource>(IEnumerable<TSource>, Func<TSource, Nullable<Int64>>)
  fullName: System.Linq.Enumerable.Min<TSource>(System.Collections.Generic.IEnumerable<TSource>, System.Func<TSource, System.Nullable<System.Int64>>)
  fullname.vb: System.Linq.Enumerable.Min(Of TSource)(System.Collections.Generic.IEnumerable(Of TSource), System.Func(Of TSource, System.Nullable(Of System.Int64)))
  name.vb: Min(Of TSource)(IEnumerable(Of TSource), Func(Of TSource, Nullable(Of Int64)))
  spec.csharp:
  - uid: System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Int64}})
    name: Min<TSource>
    fullName: System.Linq.Enumerable.Min<TSource>
  - name: (
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    fullName: <
  - name: TSource
    fullName: TSource
  - name: '>'
    fullName: '>'
  - name: ', '
    fullName: ', '
  - uid: System.Func`2
    name: Func
    fullName: System.Func
    isExternal: true
  - name: <
    fullName: <
  - name: TSource
    fullName: TSource
  - name: ', '
    fullName: ', '
  - uid: System.Nullable`1
    name: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    fullName: <
  - uid: System.Int64
    name: Int64
    fullName: System.Int64
    isExternal: true
  - name: '>'
    fullName: '>'
  - name: '>'
    fullName: '>'
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Int64}})
    name: Min(Of TSource)
    fullName: System.Linq.Enumerable.Min(Of TSource)
  - name: (
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - name: TSource
    fullName: TSource
  - name: )
    fullName: )
  - name: ', '
    fullName: ', '
  - uid: System.Func`2
    name: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - name: TSource
    fullName: TSource
  - name: ', '
    fullName: ', '
  - uid: System.Nullable`1
    name: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - uid: System.Int64
    name: Int64
    fullName: System.Int64
    isExternal: true
  - name: )
    fullName: )
  - name: )
    fullName: )
  - name: )
    fullName: )
  nameWithType: Enumerable.Min<TSource>(IEnumerable<TSource>, Func<TSource, Nullable<Int64>>)
  nameWithType.vb: Enumerable.Min(Of TSource)(IEnumerable(Of TSource), Func(Of TSource, Nullable(Of Int64)))
  commentId: M:System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Int64}})
- uid: System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Single}})
  isExternal: true
  name: Min<TSource>(IEnumerable<TSource>, Func<TSource, Nullable<Single>>)
  fullName: System.Linq.Enumerable.Min<TSource>(System.Collections.Generic.IEnumerable<TSource>, System.Func<TSource, System.Nullable<System.Single>>)
  fullname.vb: System.Linq.Enumerable.Min(Of TSource)(System.Collections.Generic.IEnumerable(Of TSource), System.Func(Of TSource, System.Nullable(Of System.Single)))
  name.vb: Min(Of TSource)(IEnumerable(Of TSource), Func(Of TSource, Nullable(Of Single)))
  spec.csharp:
  - uid: System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Single}})
    name: Min<TSource>
    fullName: System.Linq.Enumerable.Min<TSource>
  - name: (
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    fullName: <
  - name: TSource
    fullName: TSource
  - name: '>'
    fullName: '>'
  - name: ', '
    fullName: ', '
  - uid: System.Func`2
    name: Func
    fullName: System.Func
    isExternal: true
  - name: <
    fullName: <
  - name: TSource
    fullName: TSource
  - name: ', '
    fullName: ', '
  - uid: System.Nullable`1
    name: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    fullName: <
  - uid: System.Single
    name: Single
    fullName: System.Single
    isExternal: true
  - name: '>'
    fullName: '>'
  - name: '>'
    fullName: '>'
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Single}})
    name: Min(Of TSource)
    fullName: System.Linq.Enumerable.Min(Of TSource)
  - name: (
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - name: TSource
    fullName: TSource
  - name: )
    fullName: )
  - name: ', '
    fullName: ', '
  - uid: System.Func`2
    name: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - name: TSource
    fullName: TSource
  - name: ', '
    fullName: ', '
  - uid: System.Nullable`1
    name: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - uid: System.Single
    name: Single
    fullName: System.Single
    isExternal: true
  - name: )
    fullName: )
  - name: )
    fullName: )
  - name: )
    fullName: )
  nameWithType: Enumerable.Min<TSource>(IEnumerable<TSource>, Func<TSource, Nullable<Single>>)
  nameWithType.vb: Enumerable.Min(Of TSource)(IEnumerable(Of TSource), Func(Of TSource, Nullable(Of Single)))
  commentId: M:System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Single}})
- uid: System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Single})
  isExternal: true
  name: Min<TSource>(IEnumerable<TSource>, Func<TSource, Single>)
  fullName: System.Linq.Enumerable.Min<TSource>(System.Collections.Generic.IEnumerable<TSource>, System.Func<TSource, System.Single>)
  fullname.vb: System.Linq.Enumerable.Min(Of TSource)(System.Collections.Generic.IEnumerable(Of TSource), System.Func(Of TSource, System.Single))
  name.vb: Min(Of TSource)(IEnumerable(Of TSource), Func(Of TSource, Single))
  spec.csharp:
  - uid: System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Single})
    name: Min<TSource>
    fullName: System.Linq.Enumerable.Min<TSource>
  - name: (
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    fullName: <
  - name: TSource
    fullName: TSource
  - name: '>'
    fullName: '>'
  - name: ', '
    fullName: ', '
  - uid: System.Func`2
    name: Func
    fullName: System.Func
    isExternal: true
  - name: <
    fullName: <
  - name: TSource
    fullName: TSource
  - name: ', '
    fullName: ', '
  - uid: System.Single
    name: Single
    fullName: System.Single
    isExternal: true
  - name: '>'
    fullName: '>'
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Single})
    name: Min(Of TSource)
    fullName: System.Linq.Enumerable.Min(Of TSource)
  - name: (
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - name: TSource
    fullName: TSource
  - name: )
    fullName: )
  - name: ', '
    fullName: ', '
  - uid: System.Func`2
    name: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - name: TSource
    fullName: TSource
  - name: ', '
    fullName: ', '
  - uid: System.Single
    name: Single
    fullName: System.Single
    isExternal: true
  - name: )
    fullName: )
  - name: )
    fullName: )
  nameWithType: Enumerable.Min<TSource>(IEnumerable<TSource>, Func<TSource, Single>)
  nameWithType.vb: Enumerable.Min(Of TSource)(IEnumerable(Of TSource), Func(Of TSource, Single))
  commentId: M:System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Single})
- uid: System.Linq.Enumerable.Min``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})
  isExternal: true
  name: Min<TSource, TResult>(IEnumerable<TSource>, Func<TSource, TResult>)
  fullName: System.Linq.Enumerable.Min<TSource, TResult>(System.Collections.Generic.IEnumerable<TSource>, System.Func<TSource, TResult>)
  fullname.vb: System.Linq.Enumerable.Min(Of TSource, TResult)(System.Collections.Generic.IEnumerable(Of TSource), System.Func(Of TSource, TResult))
  name.vb: Min(Of TSource, TResult)(IEnumerable(Of TSource), Func(Of TSource, TResult))
  spec.csharp:
  - uid: System.Linq.Enumerable.Min``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})
    name: Min<TSource, TResult>
    fullName: System.Linq.Enumerable.Min<TSource, TResult>
  - name: (
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    fullName: <
  - name: TSource
    fullName: TSource
  - name: '>'
    fullName: '>'
  - name: ', '
    fullName: ', '
  - uid: System.Func`2
    name: Func
    fullName: System.Func
    isExternal: true
  - name: <
    fullName: <
  - name: TSource
    fullName: TSource
  - name: ', '
    fullName: ', '
  - name: TResult
    fullName: TResult
  - name: '>'
    fullName: '>'
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Linq.Enumerable.Min``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})
    name: Min(Of TSource, TResult)
    fullName: System.Linq.Enumerable.Min(Of TSource, TResult)
  - name: (
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - name: TSource
    fullName: TSource
  - name: )
    fullName: )
  - name: ', '
    fullName: ', '
  - uid: System.Func`2
    name: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - name: TSource
    fullName: TSource
  - name: ', '
    fullName: ', '
  - name: TResult
    fullName: TResult
  - name: )
    fullName: )
  - name: )
    fullName: )
  nameWithType: Enumerable.Min<TSource, TResult>(IEnumerable<TSource>, Func<TSource, TResult>)
  nameWithType.vb: Enumerable.Min(Of TSource, TResult)(IEnumerable(Of TSource), Func(Of TSource, TResult))
  commentId: M:System.Linq.Enumerable.Min``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})
- uid: System.Linq.Enumerable.OfType``1(System.Collections.IEnumerable)
  isExternal: true
  name: OfType<TResult>(IEnumerable)
  fullName: System.Linq.Enumerable.OfType<TResult>(System.Collections.IEnumerable)
  fullname.vb: System.Linq.Enumerable.OfType(Of TResult)(System.Collections.IEnumerable)
  name.vb: OfType(Of TResult)(IEnumerable)
  spec.csharp:
  - uid: System.Linq.Enumerable.OfType``1(System.Collections.IEnumerable)
    name: OfType<TResult>
    fullName: System.Linq.Enumerable.OfType<TResult>
  - name: (
    fullName: (
  - uid: System.Collections.IEnumerable
    name: IEnumerable
    fullName: System.Collections.IEnumerable
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Linq.Enumerable.OfType``1(System.Collections.IEnumerable)
    name: OfType(Of TResult)
    fullName: System.Linq.Enumerable.OfType(Of TResult)
  - name: (
    fullName: (
  - uid: System.Collections.IEnumerable
    name: IEnumerable
    fullName: System.Collections.IEnumerable
    isExternal: true
  - name: )
    fullName: )
  nameWithType: Enumerable.OfType<TResult>(IEnumerable)
  nameWithType.vb: Enumerable.OfType(Of TResult)(IEnumerable)
  commentId: M:System.Linq.Enumerable.OfType``1(System.Collections.IEnumerable)
- uid: System.Linq.Enumerable.OrderBy``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})
  isExternal: true
  name: OrderBy<TSource, TKey>(IEnumerable<TSource>, Func<TSource, TKey>)
  fullName: System.Linq.Enumerable.OrderBy<TSource, TKey>(System.Collections.Generic.IEnumerable<TSource>, System.Func<TSource, TKey>)
  fullname.vb: System.Linq.Enumerable.OrderBy(Of TSource, TKey)(System.Collections.Generic.IEnumerable(Of TSource), System.Func(Of TSource, TKey))
  name.vb: OrderBy(Of TSource, TKey)(IEnumerable(Of TSource), Func(Of TSource, TKey))
  spec.csharp:
  - uid: System.Linq.Enumerable.OrderBy``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})
    name: OrderBy<TSource, TKey>
    fullName: System.Linq.Enumerable.OrderBy<TSource, TKey>
  - name: (
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    fullName: <
  - name: TSource
    fullName: TSource
  - name: '>'
    fullName: '>'
  - name: ', '
    fullName: ', '
  - uid: System.Func`2
    name: Func
    fullName: System.Func
    isExternal: true
  - name: <
    fullName: <
  - name: TSource
    fullName: TSource
  - name: ', '
    fullName: ', '
  - name: TKey
    fullName: TKey
  - name: '>'
    fullName: '>'
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Linq.Enumerable.OrderBy``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})
    name: OrderBy(Of TSource, TKey)
    fullName: System.Linq.Enumerable.OrderBy(Of TSource, TKey)
  - name: (
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - name: TSource
    fullName: TSource
  - name: )
    fullName: )
  - name: ', '
    fullName: ', '
  - uid: System.Func`2
    name: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - name: TSource
    fullName: TSource
  - name: ', '
    fullName: ', '
  - name: TKey
    fullName: TKey
  - name: )
    fullName: )
  - name: )
    fullName: )
  nameWithType: Enumerable.OrderBy<TSource, TKey>(IEnumerable<TSource>, Func<TSource, TKey>)
  nameWithType.vb: Enumerable.OrderBy(Of TSource, TKey)(IEnumerable(Of TSource), Func(Of TSource, TKey))
  commentId: M:System.Linq.Enumerable.OrderBy``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})
- uid: System.Linq.Enumerable.OrderBy``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IComparer{``1})
  isExternal: true
  name: OrderBy<TSource, TKey>(IEnumerable<TSource>, Func<TSource, TKey>, IComparer<TKey>)
  fullName: System.Linq.Enumerable.OrderBy<TSource, TKey>(System.Collections.Generic.IEnumerable<TSource>, System.Func<TSource, TKey>, System.Collections.Generic.IComparer<TKey>)
  fullname.vb: System.Linq.Enumerable.OrderBy(Of TSource, TKey)(System.Collections.Generic.IEnumerable(Of TSource), System.Func(Of TSource, TKey), System.Collections.Generic.IComparer(Of TKey))
  name.vb: OrderBy(Of TSource, TKey)(IEnumerable(Of TSource), Func(Of TSource, TKey), IComparer(Of TKey))
  spec.csharp:
  - uid: System.Linq.Enumerable.OrderBy``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IComparer{``1})
    name: OrderBy<TSource, TKey>
    fullName: System.Linq.Enumerable.OrderBy<TSource, TKey>
  - name: (
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    fullName: <
  - name: TSource
    fullName: TSource
  - name: '>'
    fullName: '>'
  - name: ', '
    fullName: ', '
  - uid: System.Func`2
    name: Func
    fullName: System.Func
    isExternal: true
  - name: <
    fullName: <
  - name: TSource
    fullName: TSource
  - name: ', '
    fullName: ', '
  - name: TKey
    fullName: TKey
  - name: '>'
    fullName: '>'
  - name: ', '
    fullName: ', '
  - uid: System.Collections.Generic.IComparer`1
    name: IComparer
    fullName: System.Collections.Generic.IComparer
    isExternal: true
  - name: <
    fullName: <
  - name: TKey
    fullName: TKey
  - name: '>'
    fullName: '>'
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Linq.Enumerable.OrderBy``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IComparer{``1})
    name: OrderBy(Of TSource, TKey)
    fullName: System.Linq.Enumerable.OrderBy(Of TSource, TKey)
  - name: (
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - name: TSource
    fullName: TSource
  - name: )
    fullName: )
  - name: ', '
    fullName: ', '
  - uid: System.Func`2
    name: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - name: TSource
    fullName: TSource
  - name: ', '
    fullName: ', '
  - name: TKey
    fullName: TKey
  - name: )
    fullName: )
  - name: ', '
    fullName: ', '
  - uid: System.Collections.Generic.IComparer`1
    name: IComparer
    fullName: System.Collections.Generic.IComparer
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - name: TKey
    fullName: TKey
  - name: )
    fullName: )
  - name: )
    fullName: )
  nameWithType: Enumerable.OrderBy<TSource, TKey>(IEnumerable<TSource>, Func<TSource, TKey>, IComparer<TKey>)
  nameWithType.vb: Enumerable.OrderBy(Of TSource, TKey)(IEnumerable(Of TSource), Func(Of TSource, TKey), IComparer(Of TKey))
  commentId: M:System.Linq.Enumerable.OrderBy``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IComparer{``1})
- uid: System.Linq.Enumerable.OrderByDescending``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})
  isExternal: true
  name: OrderByDescending<TSource, TKey>(IEnumerable<TSource>, Func<TSource, TKey>)
  fullName: System.Linq.Enumerable.OrderByDescending<TSource, TKey>(System.Collections.Generic.IEnumerable<TSource>, System.Func<TSource, TKey>)
  fullname.vb: System.Linq.Enumerable.OrderByDescending(Of TSource, TKey)(System.Collections.Generic.IEnumerable(Of TSource), System.Func(Of TSource, TKey))
  name.vb: OrderByDescending(Of TSource, TKey)(IEnumerable(Of TSource), Func(Of TSource, TKey))
  spec.csharp:
  - uid: System.Linq.Enumerable.OrderByDescending``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})
    name: OrderByDescending<TSource, TKey>
    fullName: System.Linq.Enumerable.OrderByDescending<TSource, TKey>
  - name: (
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    fullName: <
  - name: TSource
    fullName: TSource
  - name: '>'
    fullName: '>'
  - name: ', '
    fullName: ', '
  - uid: System.Func`2
    name: Func
    fullName: System.Func
    isExternal: true
  - name: <
    fullName: <
  - name: TSource
    fullName: TSource
  - name: ', '
    fullName: ', '
  - name: TKey
    fullName: TKey
  - name: '>'
    fullName: '>'
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Linq.Enumerable.OrderByDescending``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})
    name: OrderByDescending(Of TSource, TKey)
    fullName: System.Linq.Enumerable.OrderByDescending(Of TSource, TKey)
  - name: (
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - name: TSource
    fullName: TSource
  - name: )
    fullName: )
  - name: ', '
    fullName: ', '
  - uid: System.Func`2
    name: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - name: TSource
    fullName: TSource
  - name: ', '
    fullName: ', '
  - name: TKey
    fullName: TKey
  - name: )
    fullName: )
  - name: )
    fullName: )
  nameWithType: Enumerable.OrderByDescending<TSource, TKey>(IEnumerable<TSource>, Func<TSource, TKey>)
  nameWithType.vb: Enumerable.OrderByDescending(Of TSource, TKey)(IEnumerable(Of TSource), Func(Of TSource, TKey))
  commentId: M:System.Linq.Enumerable.OrderByDescending``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})
- uid: System.Linq.Enumerable.OrderByDescending``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IComparer{``1})
  isExternal: true
  name: OrderByDescending<TSource, TKey>(IEnumerable<TSource>, Func<TSource, TKey>, IComparer<TKey>)
  fullName: System.Linq.Enumerable.OrderByDescending<TSource, TKey>(System.Collections.Generic.IEnumerable<TSource>, System.Func<TSource, TKey>, System.Collections.Generic.IComparer<TKey>)
  fullname.vb: System.Linq.Enumerable.OrderByDescending(Of TSource, TKey)(System.Collections.Generic.IEnumerable(Of TSource), System.Func(Of TSource, TKey), System.Collections.Generic.IComparer(Of TKey))
  name.vb: OrderByDescending(Of TSource, TKey)(IEnumerable(Of TSource), Func(Of TSource, TKey), IComparer(Of TKey))
  spec.csharp:
  - uid: System.Linq.Enumerable.OrderByDescending``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IComparer{``1})
    name: OrderByDescending<TSource, TKey>
    fullName: System.Linq.Enumerable.OrderByDescending<TSource, TKey>
  - name: (
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    fullName: <
  - name: TSource
    fullName: TSource
  - name: '>'
    fullName: '>'
  - name: ', '
    fullName: ', '
  - uid: System.Func`2
    name: Func
    fullName: System.Func
    isExternal: true
  - name: <
    fullName: <
  - name: TSource
    fullName: TSource
  - name: ', '
    fullName: ', '
  - name: TKey
    fullName: TKey
  - name: '>'
    fullName: '>'
  - name: ', '
    fullName: ', '
  - uid: System.Collections.Generic.IComparer`1
    name: IComparer
    fullName: System.Collections.Generic.IComparer
    isExternal: true
  - name: <
    fullName: <
  - name: TKey
    fullName: TKey
  - name: '>'
    fullName: '>'
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Linq.Enumerable.OrderByDescending``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IComparer{``1})
    name: OrderByDescending(Of TSource, TKey)
    fullName: System.Linq.Enumerable.OrderByDescending(Of TSource, TKey)
  - name: (
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - name: TSource
    fullName: TSource
  - name: )
    fullName: )
  - name: ', '
    fullName: ', '
  - uid: System.Func`2
    name: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - name: TSource
    fullName: TSource
  - name: ', '
    fullName: ', '
  - name: TKey
    fullName: TKey
  - name: )
    fullName: )
  - name: ', '
    fullName: ', '
  - uid: System.Collections.Generic.IComparer`1
    name: IComparer
    fullName: System.Collections.Generic.IComparer
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - name: TKey
    fullName: TKey
  - name: )
    fullName: )
  - name: )
    fullName: )
  nameWithType: Enumerable.OrderByDescending<TSource, TKey>(IEnumerable<TSource>, Func<TSource, TKey>, IComparer<TKey>)
  nameWithType.vb: Enumerable.OrderByDescending(Of TSource, TKey)(IEnumerable(Of TSource), Func(Of TSource, TKey), IComparer(Of TKey))
  commentId: M:System.Linq.Enumerable.OrderByDescending``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IComparer{``1})
- uid: System.Linq.Enumerable.Reverse``1(System.Collections.Generic.IEnumerable{``0})
  isExternal: true
  name: Reverse<TSource>(IEnumerable<TSource>)
  fullName: System.Linq.Enumerable.Reverse<TSource>(System.Collections.Generic.IEnumerable<TSource>)
  fullname.vb: System.Linq.Enumerable.Reverse(Of TSource)(System.Collections.Generic.IEnumerable(Of TSource))
  name.vb: Reverse(Of TSource)(IEnumerable(Of TSource))
  spec.csharp:
  - uid: System.Linq.Enumerable.Reverse``1(System.Collections.Generic.IEnumerable{``0})
    name: Reverse<TSource>
    fullName: System.Linq.Enumerable.Reverse<TSource>
  - name: (
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    fullName: <
  - name: TSource
    fullName: TSource
  - name: '>'
    fullName: '>'
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Linq.Enumerable.Reverse``1(System.Collections.Generic.IEnumerable{``0})
    name: Reverse(Of TSource)
    fullName: System.Linq.Enumerable.Reverse(Of TSource)
  - name: (
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - name: TSource
    fullName: TSource
  - name: )
    fullName: )
  - name: )
    fullName: )
  nameWithType: Enumerable.Reverse<TSource>(IEnumerable<TSource>)
  nameWithType.vb: Enumerable.Reverse(Of TSource)(IEnumerable(Of TSource))
  commentId: M:System.Linq.Enumerable.Reverse``1(System.Collections.Generic.IEnumerable{``0})
- uid: System.Linq.Enumerable.Select``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})
  isExternal: true
  name: Select<TSource, TResult>(IEnumerable<TSource>, Func<TSource, TResult>)
  fullName: System.Linq.Enumerable.Select<TSource, TResult>(System.Collections.Generic.IEnumerable<TSource>, System.Func<TSource, TResult>)
  fullname.vb: System.Linq.Enumerable.Select(Of TSource, TResult)(System.Collections.Generic.IEnumerable(Of TSource), System.Func(Of TSource, TResult))
  name.vb: Select(Of TSource, TResult)(IEnumerable(Of TSource), Func(Of TSource, TResult))
  spec.csharp:
  - uid: System.Linq.Enumerable.Select``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})
    name: Select<TSource, TResult>
    fullName: System.Linq.Enumerable.Select<TSource, TResult>
  - name: (
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    fullName: <
  - name: TSource
    fullName: TSource
  - name: '>'
    fullName: '>'
  - name: ', '
    fullName: ', '
  - uid: System.Func`2
    name: Func
    fullName: System.Func
    isExternal: true
  - name: <
    fullName: <
  - name: TSource
    fullName: TSource
  - name: ', '
    fullName: ', '
  - name: TResult
    fullName: TResult
  - name: '>'
    fullName: '>'
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Linq.Enumerable.Select``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})
    name: Select(Of TSource, TResult)
    fullName: System.Linq.Enumerable.Select(Of TSource, TResult)
  - name: (
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - name: TSource
    fullName: TSource
  - name: )
    fullName: )
  - name: ', '
    fullName: ', '
  - uid: System.Func`2
    name: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - name: TSource
    fullName: TSource
  - name: ', '
    fullName: ', '
  - name: TResult
    fullName: TResult
  - name: )
    fullName: )
  - name: )
    fullName: )
  nameWithType: Enumerable.Select<TSource, TResult>(IEnumerable<TSource>, Func<TSource, TResult>)
  nameWithType.vb: Enumerable.Select(Of TSource, TResult)(IEnumerable(Of TSource), Func(Of TSource, TResult))
  commentId: M:System.Linq.Enumerable.Select``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})
- uid: System.Linq.Enumerable.Select``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32,``1})
  isExternal: true
  name: Select<TSource, TResult>(IEnumerable<TSource>, Func<TSource, Int32, TResult>)
  fullName: System.Linq.Enumerable.Select<TSource, TResult>(System.Collections.Generic.IEnumerable<TSource>, System.Func<TSource, System.Int32, TResult>)
  fullname.vb: System.Linq.Enumerable.Select(Of TSource, TResult)(System.Collections.Generic.IEnumerable(Of TSource), System.Func(Of TSource, System.Int32, TResult))
  name.vb: Select(Of TSource, TResult)(IEnumerable(Of TSource), Func(Of TSource, Int32, TResult))
  spec.csharp:
  - uid: System.Linq.Enumerable.Select``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32,``1})
    name: Select<TSource, TResult>
    fullName: System.Linq.Enumerable.Select<TSource, TResult>
  - name: (
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    fullName: <
  - name: TSource
    fullName: TSource
  - name: '>'
    fullName: '>'
  - name: ', '
    fullName: ', '
  - uid: System.Func`3
    name: Func
    fullName: System.Func
    isExternal: true
  - name: <
    fullName: <
  - name: TSource
    fullName: TSource
  - name: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    fullName: ', '
  - name: TResult
    fullName: TResult
  - name: '>'
    fullName: '>'
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Linq.Enumerable.Select``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32,``1})
    name: Select(Of TSource, TResult)
    fullName: System.Linq.Enumerable.Select(Of TSource, TResult)
  - name: (
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - name: TSource
    fullName: TSource
  - name: )
    fullName: )
  - name: ', '
    fullName: ', '
  - uid: System.Func`3
    name: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - name: TSource
    fullName: TSource
  - name: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    fullName: ', '
  - name: TResult
    fullName: TResult
  - name: )
    fullName: )
  - name: )
    fullName: )
  nameWithType: Enumerable.Select<TSource, TResult>(IEnumerable<TSource>, Func<TSource, Int32, TResult>)
  nameWithType.vb: Enumerable.Select(Of TSource, TResult)(IEnumerable(Of TSource), Func(Of TSource, Int32, TResult))
  commentId: M:System.Linq.Enumerable.Select``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32,``1})
- uid: System.Linq.Enumerable.SelectMany``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Collections.Generic.IEnumerable{``1}})
  isExternal: true
  name: SelectMany<TSource, TResult>(IEnumerable<TSource>, Func<TSource, IEnumerable<TResult>>)
  fullName: System.Linq.Enumerable.SelectMany<TSource, TResult>(System.Collections.Generic.IEnumerable<TSource>, System.Func<TSource, System.Collections.Generic.IEnumerable<TResult>>)
  fullname.vb: System.Linq.Enumerable.SelectMany(Of TSource, TResult)(System.Collections.Generic.IEnumerable(Of TSource), System.Func(Of TSource, System.Collections.Generic.IEnumerable(Of TResult)))
  name.vb: SelectMany(Of TSource, TResult)(IEnumerable(Of TSource), Func(Of TSource, IEnumerable(Of TResult)))
  spec.csharp:
  - uid: System.Linq.Enumerable.SelectMany``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Collections.Generic.IEnumerable{``1}})
    name: SelectMany<TSource, TResult>
    fullName: System.Linq.Enumerable.SelectMany<TSource, TResult>
  - name: (
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    fullName: <
  - name: TSource
    fullName: TSource
  - name: '>'
    fullName: '>'
  - name: ', '
    fullName: ', '
  - uid: System.Func`2
    name: Func
    fullName: System.Func
    isExternal: true
  - name: <
    fullName: <
  - name: TSource
    fullName: TSource
  - name: ', '
    fullName: ', '
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    fullName: <
  - name: TResult
    fullName: TResult
  - name: '>'
    fullName: '>'
  - name: '>'
    fullName: '>'
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Linq.Enumerable.SelectMany``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Collections.Generic.IEnumerable{``1}})
    name: SelectMany(Of TSource, TResult)
    fullName: System.Linq.Enumerable.SelectMany(Of TSource, TResult)
  - name: (
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - name: TSource
    fullName: TSource
  - name: )
    fullName: )
  - name: ', '
    fullName: ', '
  - uid: System.Func`2
    name: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - name: TSource
    fullName: TSource
  - name: ', '
    fullName: ', '
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - name: TResult
    fullName: TResult
  - name: )
    fullName: )
  - name: )
    fullName: )
  - name: )
    fullName: )
  nameWithType: Enumerable.SelectMany<TSource, TResult>(IEnumerable<TSource>, Func<TSource, IEnumerable<TResult>>)
  nameWithType.vb: Enumerable.SelectMany(Of TSource, TResult)(IEnumerable(Of TSource), Func(Of TSource, IEnumerable(Of TResult)))
  commentId: M:System.Linq.Enumerable.SelectMany``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Collections.Generic.IEnumerable{``1}})
- uid: System.Linq.Enumerable.SelectMany``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32,System.Collections.Generic.IEnumerable{``1}})
  isExternal: true
  name: SelectMany<TSource, TResult>(IEnumerable<TSource>, Func<TSource, Int32, IEnumerable<TResult>>)
  fullName: System.Linq.Enumerable.SelectMany<TSource, TResult>(System.Collections.Generic.IEnumerable<TSource>, System.Func<TSource, System.Int32, System.Collections.Generic.IEnumerable<TResult>>)
  fullname.vb: System.Linq.Enumerable.SelectMany(Of TSource, TResult)(System.Collections.Generic.IEnumerable(Of TSource), System.Func(Of TSource, System.Int32, System.Collections.Generic.IEnumerable(Of TResult)))
  name.vb: SelectMany(Of TSource, TResult)(IEnumerable(Of TSource), Func(Of TSource, Int32, IEnumerable(Of TResult)))
  spec.csharp:
  - uid: System.Linq.Enumerable.SelectMany``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32,System.Collections.Generic.IEnumerable{``1}})
    name: SelectMany<TSource, TResult>
    fullName: System.Linq.Enumerable.SelectMany<TSource, TResult>
  - name: (
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    fullName: <
  - name: TSource
    fullName: TSource
  - name: '>'
    fullName: '>'
  - name: ', '
    fullName: ', '
  - uid: System.Func`3
    name: Func
    fullName: System.Func
    isExternal: true
  - name: <
    fullName: <
  - name: TSource
    fullName: TSource
  - name: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    fullName: <
  - name: TResult
    fullName: TResult
  - name: '>'
    fullName: '>'
  - name: '>'
    fullName: '>'
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Linq.Enumerable.SelectMany``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32,System.Collections.Generic.IEnumerable{``1}})
    name: SelectMany(Of TSource, TResult)
    fullName: System.Linq.Enumerable.SelectMany(Of TSource, TResult)
  - name: (
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - name: TSource
    fullName: TSource
  - name: )
    fullName: )
  - name: ', '
    fullName: ', '
  - uid: System.Func`3
    name: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - name: TSource
    fullName: TSource
  - name: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - name: TResult
    fullName: TResult
  - name: )
    fullName: )
  - name: )
    fullName: )
  - name: )
    fullName: )
  nameWithType: Enumerable.SelectMany<TSource, TResult>(IEnumerable<TSource>, Func<TSource, Int32, IEnumerable<TResult>>)
  nameWithType.vb: Enumerable.SelectMany(Of TSource, TResult)(IEnumerable(Of TSource), Func(Of TSource, Int32, IEnumerable(Of TResult)))
  commentId: M:System.Linq.Enumerable.SelectMany``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32,System.Collections.Generic.IEnumerable{``1}})
- uid: System.Linq.Enumerable.SelectMany``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Collections.Generic.IEnumerable{``1}},System.Func{``0,``1,``2})
  isExternal: true
  name: SelectMany<TSource, TCollection, TResult>(IEnumerable<TSource>, Func<TSource, IEnumerable<TCollection>>, Func<TSource, TCollection, TResult>)
  fullName: System.Linq.Enumerable.SelectMany<TSource, TCollection, TResult>(System.Collections.Generic.IEnumerable<TSource>, System.Func<TSource, System.Collections.Generic.IEnumerable<TCollection>>, System.Func<TSource, TCollection, TResult>)
  fullname.vb: System.Linq.Enumerable.SelectMany(Of TSource, TCollection, TResult)(System.Collections.Generic.IEnumerable(Of TSource), System.Func(Of TSource, System.Collections.Generic.IEnumerable(Of TCollection)), System.Func(Of TSource, TCollection, TResult))
  name.vb: SelectMany(Of TSource, TCollection, TResult)(IEnumerable(Of TSource), Func(Of TSource, IEnumerable(Of TCollection)), Func(Of TSource, TCollection, TResult))
  spec.csharp:
  - uid: System.Linq.Enumerable.SelectMany``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Collections.Generic.IEnumerable{``1}},System.Func{``0,``1,``2})
    name: SelectMany<TSource, TCollection, TResult>
    fullName: System.Linq.Enumerable.SelectMany<TSource, TCollection, TResult>
  - name: (
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    fullName: <
  - name: TSource
    fullName: TSource
  - name: '>'
    fullName: '>'
  - name: ', '
    fullName: ', '
  - uid: System.Func`2
    name: Func
    fullName: System.Func
    isExternal: true
  - name: <
    fullName: <
  - name: TSource
    fullName: TSource
  - name: ', '
    fullName: ', '
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    fullName: <
  - name: TCollection
    fullName: TCollection
  - name: '>'
    fullName: '>'
  - name: '>'
    fullName: '>'
  - name: ', '
    fullName: ', '
  - uid: System.Func`3
    name: Func
    fullName: System.Func
    isExternal: true
  - name: <
    fullName: <
  - name: TSource
    fullName: TSource
  - name: ', '
    fullName: ', '
  - name: TCollection
    fullName: TCollection
  - name: ', '
    fullName: ', '
  - name: TResult
    fullName: TResult
  - name: '>'
    fullName: '>'
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Linq.Enumerable.SelectMany``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Collections.Generic.IEnumerable{``1}},System.Func{``0,``1,``2})
    name: SelectMany(Of TSource, TCollection, TResult)
    fullName: System.Linq.Enumerable.SelectMany(Of TSource, TCollection, TResult)
  - name: (
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - name: TSource
    fullName: TSource
  - name: )
    fullName: )
  - name: ', '
    fullName: ', '
  - uid: System.Func`2
    name: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - name: TSource
    fullName: TSource
  - name: ', '
    fullName: ', '
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - name: TCollection
    fullName: TCollection
  - name: )
    fullName: )
  - name: )
    fullName: )
  - name: ', '
    fullName: ', '
  - uid: System.Func`3
    name: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - name: TSource
    fullName: TSource
  - name: ', '
    fullName: ', '
  - name: TCollection
    fullName: TCollection
  - name: ', '
    fullName: ', '
  - name: TResult
    fullName: TResult
  - name: )
    fullName: )
  - name: )
    fullName: )
  nameWithType: Enumerable.SelectMany<TSource, TCollection, TResult>(IEnumerable<TSource>, Func<TSource, IEnumerable<TCollection>>, Func<TSource, TCollection, TResult>)
  nameWithType.vb: Enumerable.SelectMany(Of TSource, TCollection, TResult)(IEnumerable(Of TSource), Func(Of TSource, IEnumerable(Of TCollection)), Func(Of TSource, TCollection, TResult))
  commentId: M:System.Linq.Enumerable.SelectMany``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Collections.Generic.IEnumerable{``1}},System.Func{``0,``1,``2})
- uid: System.Linq.Enumerable.SelectMany``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32,System.Collections.Generic.IEnumerable{``1}},System.Func{``0,``1,``2})
  isExternal: true
  name: SelectMany<TSource, TCollection, TResult>(IEnumerable<TSource>, Func<TSource, Int32, IEnumerable<TCollection>>, Func<TSource, TCollection, TResult>)
  fullName: System.Linq.Enumerable.SelectMany<TSource, TCollection, TResult>(System.Collections.Generic.IEnumerable<TSource>, System.Func<TSource, System.Int32, System.Collections.Generic.IEnumerable<TCollection>>, System.Func<TSource, TCollection, TResult>)
  fullname.vb: System.Linq.Enumerable.SelectMany(Of TSource, TCollection, TResult)(System.Collections.Generic.IEnumerable(Of TSource), System.Func(Of TSource, System.Int32, System.Collections.Generic.IEnumerable(Of TCollection)), System.Func(Of TSource, TCollection, TResult))
  name.vb: SelectMany(Of TSource, TCollection, TResult)(IEnumerable(Of TSource), Func(Of TSource, Int32, IEnumerable(Of TCollection)), Func(Of TSource, TCollection, TResult))
  spec.csharp:
  - uid: System.Linq.Enumerable.SelectMany``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32,System.Collections.Generic.IEnumerable{``1}},System.Func{``0,``1,``2})
    name: SelectMany<TSource, TCollection, TResult>
    fullName: System.Linq.Enumerable.SelectMany<TSource, TCollection, TResult>
  - name: (
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    fullName: <
  - name: TSource
    fullName: TSource
  - name: '>'
    fullName: '>'
  - name: ', '
    fullName: ', '
  - uid: System.Func`3
    name: Func
    fullName: System.Func
    isExternal: true
  - name: <
    fullName: <
  - name: TSource
    fullName: TSource
  - name: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    fullName: <
  - name: TCollection
    fullName: TCollection
  - name: '>'
    fullName: '>'
  - name: '>'
    fullName: '>'
  - name: ', '
    fullName: ', '
  - uid: System.Func`3
    name: Func
    fullName: System.Func
    isExternal: true
  - name: <
    fullName: <
  - name: TSource
    fullName: TSource
  - name: ', '
    fullName: ', '
  - name: TCollection
    fullName: TCollection
  - name: ', '
    fullName: ', '
  - name: TResult
    fullName: TResult
  - name: '>'
    fullName: '>'
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Linq.Enumerable.SelectMany``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32,System.Collections.Generic.IEnumerable{``1}},System.Func{``0,``1,``2})
    name: SelectMany(Of TSource, TCollection, TResult)
    fullName: System.Linq.Enumerable.SelectMany(Of TSource, TCollection, TResult)
  - name: (
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - name: TSource
    fullName: TSource
  - name: )
    fullName: )
  - name: ', '
    fullName: ', '
  - uid: System.Func`3
    name: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - name: TSource
    fullName: TSource
  - name: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - name: TCollection
    fullName: TCollection
  - name: )
    fullName: )
  - name: )
    fullName: )
  - name: ', '
    fullName: ', '
  - uid: System.Func`3
    name: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - name: TSource
    fullName: TSource
  - name: ', '
    fullName: ', '
  - name: TCollection
    fullName: TCollection
  - name: ', '
    fullName: ', '
  - name: TResult
    fullName: TResult
  - name: )
    fullName: )
  - name: )
    fullName: )
  nameWithType: Enumerable.SelectMany<TSource, TCollection, TResult>(IEnumerable<TSource>, Func<TSource, Int32, IEnumerable<TCollection>>, Func<TSource, TCollection, TResult>)
  nameWithType.vb: Enumerable.SelectMany(Of TSource, TCollection, TResult)(IEnumerable(Of TSource), Func(Of TSource, Int32, IEnumerable(Of TCollection)), Func(Of TSource, TCollection, TResult))
  commentId: M:System.Linq.Enumerable.SelectMany``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32,System.Collections.Generic.IEnumerable{``1}},System.Func{``0,``1,``2})
- uid: System.Linq.Enumerable.SequenceEqual``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0})
  isExternal: true
  name: SequenceEqual<TSource>(IEnumerable<TSource>, IEnumerable<TSource>)
  fullName: System.Linq.Enumerable.SequenceEqual<TSource>(System.Collections.Generic.IEnumerable<TSource>, System.Collections.Generic.IEnumerable<TSource>)
  fullname.vb: System.Linq.Enumerable.SequenceEqual(Of TSource)(System.Collections.Generic.IEnumerable(Of TSource), System.Collections.Generic.IEnumerable(Of TSource))
  name.vb: SequenceEqual(Of TSource)(IEnumerable(Of TSource), IEnumerable(Of TSource))
  spec.csharp:
  - uid: System.Linq.Enumerable.SequenceEqual``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0})
    name: SequenceEqual<TSource>
    fullName: System.Linq.Enumerable.SequenceEqual<TSource>
  - name: (
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    fullName: <
  - name: TSource
    fullName: TSource
  - name: '>'
    fullName: '>'
  - name: ', '
    fullName: ', '
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    fullName: <
  - name: TSource
    fullName: TSource
  - name: '>'
    fullName: '>'
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Linq.Enumerable.SequenceEqual``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0})
    name: SequenceEqual(Of TSource)
    fullName: System.Linq.Enumerable.SequenceEqual(Of TSource)
  - name: (
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - name: TSource
    fullName: TSource
  - name: )
    fullName: )
  - name: ', '
    fullName: ', '
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - name: TSource
    fullName: TSource
  - name: )
    fullName: )
  - name: )
    fullName: )
  nameWithType: Enumerable.SequenceEqual<TSource>(IEnumerable<TSource>, IEnumerable<TSource>)
  nameWithType.vb: Enumerable.SequenceEqual(Of TSource)(IEnumerable(Of TSource), IEnumerable(Of TSource))
  commentId: M:System.Linq.Enumerable.SequenceEqual``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0})
- uid: System.Linq.Enumerable.SequenceEqual``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEqualityComparer{``0})
  isExternal: true
  name: SequenceEqual<TSource>(IEnumerable<TSource>, IEnumerable<TSource>, IEqualityComparer<TSource>)
  fullName: System.Linq.Enumerable.SequenceEqual<TSource>(System.Collections.Generic.IEnumerable<TSource>, System.Collections.Generic.IEnumerable<TSource>, System.Collections.Generic.IEqualityComparer<TSource>)
  fullname.vb: System.Linq.Enumerable.SequenceEqual(Of TSource)(System.Collections.Generic.IEnumerable(Of TSource), System.Collections.Generic.IEnumerable(Of TSource), System.Collections.Generic.IEqualityComparer(Of TSource))
  name.vb: SequenceEqual(Of TSource)(IEnumerable(Of TSource), IEnumerable(Of TSource), IEqualityComparer(Of TSource))
  spec.csharp:
  - uid: System.Linq.Enumerable.SequenceEqual``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEqualityComparer{``0})
    name: SequenceEqual<TSource>
    fullName: System.Linq.Enumerable.SequenceEqual<TSource>
  - name: (
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    fullName: <
  - name: TSource
    fullName: TSource
  - name: '>'
    fullName: '>'
  - name: ', '
    fullName: ', '
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    fullName: <
  - name: TSource
    fullName: TSource
  - name: '>'
    fullName: '>'
  - name: ', '
    fullName: ', '
  - uid: System.Collections.Generic.IEqualityComparer`1
    name: IEqualityComparer
    fullName: System.Collections.Generic.IEqualityComparer
    isExternal: true
  - name: <
    fullName: <
  - name: TSource
    fullName: TSource
  - name: '>'
    fullName: '>'
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Linq.Enumerable.SequenceEqual``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEqualityComparer{``0})
    name: SequenceEqual(Of TSource)
    fullName: System.Linq.Enumerable.SequenceEqual(Of TSource)
  - name: (
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - name: TSource
    fullName: TSource
  - name: )
    fullName: )
  - name: ', '
    fullName: ', '
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - name: TSource
    fullName: TSource
  - name: )
    fullName: )
  - name: ', '
    fullName: ', '
  - uid: System.Collections.Generic.IEqualityComparer`1
    name: IEqualityComparer
    fullName: System.Collections.Generic.IEqualityComparer
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - name: TSource
    fullName: TSource
  - name: )
    fullName: )
  - name: )
    fullName: )
  nameWithType: Enumerable.SequenceEqual<TSource>(IEnumerable<TSource>, IEnumerable<TSource>, IEqualityComparer<TSource>)
  nameWithType.vb: Enumerable.SequenceEqual(Of TSource)(IEnumerable(Of TSource), IEnumerable(Of TSource), IEqualityComparer(Of TSource))
  commentId: M:System.Linq.Enumerable.SequenceEqual``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEqualityComparer{``0})
- uid: System.Linq.Enumerable.Single``1(System.Collections.Generic.IEnumerable{``0})
  isExternal: true
  name: Single<TSource>(IEnumerable<TSource>)
  fullName: System.Linq.Enumerable.Single<TSource>(System.Collections.Generic.IEnumerable<TSource>)
  fullname.vb: System.Linq.Enumerable.Single(Of TSource)(System.Collections.Generic.IEnumerable(Of TSource))
  name.vb: Single(Of TSource)(IEnumerable(Of TSource))
  spec.csharp:
  - uid: System.Linq.Enumerable.Single``1(System.Collections.Generic.IEnumerable{``0})
    name: Single<TSource>
    fullName: System.Linq.Enumerable.Single<TSource>
  - name: (
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    fullName: <
  - name: TSource
    fullName: TSource
  - name: '>'
    fullName: '>'
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Linq.Enumerable.Single``1(System.Collections.Generic.IEnumerable{``0})
    name: Single(Of TSource)
    fullName: System.Linq.Enumerable.Single(Of TSource)
  - name: (
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - name: TSource
    fullName: TSource
  - name: )
    fullName: )
  - name: )
    fullName: )
  nameWithType: Enumerable.Single<TSource>(IEnumerable<TSource>)
  nameWithType.vb: Enumerable.Single(Of TSource)(IEnumerable(Of TSource))
  commentId: M:System.Linq.Enumerable.Single``1(System.Collections.Generic.IEnumerable{``0})
- uid: System.Linq.Enumerable.Single``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})
  isExternal: true
  name: Single<TSource>(IEnumerable<TSource>, Func<TSource, Boolean>)
  fullName: System.Linq.Enumerable.Single<TSource>(System.Collections.Generic.IEnumerable<TSource>, System.Func<TSource, System.Boolean>)
  fullname.vb: System.Linq.Enumerable.Single(Of TSource)(System.Collections.Generic.IEnumerable(Of TSource), System.Func(Of TSource, System.Boolean))
  name.vb: Single(Of TSource)(IEnumerable(Of TSource), Func(Of TSource, Boolean))
  spec.csharp:
  - uid: System.Linq.Enumerable.Single``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})
    name: Single<TSource>
    fullName: System.Linq.Enumerable.Single<TSource>
  - name: (
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    fullName: <
  - name: TSource
    fullName: TSource
  - name: '>'
    fullName: '>'
  - name: ', '
    fullName: ', '
  - uid: System.Func`2
    name: Func
    fullName: System.Func
    isExternal: true
  - name: <
    fullName: <
  - name: TSource
    fullName: TSource
  - name: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: '>'
    fullName: '>'
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Linq.Enumerable.Single``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})
    name: Single(Of TSource)
    fullName: System.Linq.Enumerable.Single(Of TSource)
  - name: (
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - name: TSource
    fullName: TSource
  - name: )
    fullName: )
  - name: ', '
    fullName: ', '
  - uid: System.Func`2
    name: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - name: TSource
    fullName: TSource
  - name: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    fullName: )
  - name: )
    fullName: )
  nameWithType: Enumerable.Single<TSource>(IEnumerable<TSource>, Func<TSource, Boolean>)
  nameWithType.vb: Enumerable.Single(Of TSource)(IEnumerable(Of TSource), Func(Of TSource, Boolean))
  commentId: M:System.Linq.Enumerable.Single``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})
- uid: System.Linq.Enumerable.SingleOrDefault``1(System.Collections.Generic.IEnumerable{``0})
  isExternal: true
  name: SingleOrDefault<TSource>(IEnumerable<TSource>)
  fullName: System.Linq.Enumerable.SingleOrDefault<TSource>(System.Collections.Generic.IEnumerable<TSource>)
  fullname.vb: System.Linq.Enumerable.SingleOrDefault(Of TSource)(System.Collections.Generic.IEnumerable(Of TSource))
  name.vb: SingleOrDefault(Of TSource)(IEnumerable(Of TSource))
  spec.csharp:
  - uid: System.Linq.Enumerable.SingleOrDefault``1(System.Collections.Generic.IEnumerable{``0})
    name: SingleOrDefault<TSource>
    fullName: System.Linq.Enumerable.SingleOrDefault<TSource>
  - name: (
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    fullName: <
  - name: TSource
    fullName: TSource
  - name: '>'
    fullName: '>'
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Linq.Enumerable.SingleOrDefault``1(System.Collections.Generic.IEnumerable{``0})
    name: SingleOrDefault(Of TSource)
    fullName: System.Linq.Enumerable.SingleOrDefault(Of TSource)
  - name: (
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - name: TSource
    fullName: TSource
  - name: )
    fullName: )
  - name: )
    fullName: )
  nameWithType: Enumerable.SingleOrDefault<TSource>(IEnumerable<TSource>)
  nameWithType.vb: Enumerable.SingleOrDefault(Of TSource)(IEnumerable(Of TSource))
  commentId: M:System.Linq.Enumerable.SingleOrDefault``1(System.Collections.Generic.IEnumerable{``0})
- uid: System.Linq.Enumerable.SingleOrDefault``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})
  isExternal: true
  name: SingleOrDefault<TSource>(IEnumerable<TSource>, Func<TSource, Boolean>)
  fullName: System.Linq.Enumerable.SingleOrDefault<TSource>(System.Collections.Generic.IEnumerable<TSource>, System.Func<TSource, System.Boolean>)
  fullname.vb: System.Linq.Enumerable.SingleOrDefault(Of TSource)(System.Collections.Generic.IEnumerable(Of TSource), System.Func(Of TSource, System.Boolean))
  name.vb: SingleOrDefault(Of TSource)(IEnumerable(Of TSource), Func(Of TSource, Boolean))
  spec.csharp:
  - uid: System.Linq.Enumerable.SingleOrDefault``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})
    name: SingleOrDefault<TSource>
    fullName: System.Linq.Enumerable.SingleOrDefault<TSource>
  - name: (
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    fullName: <
  - name: TSource
    fullName: TSource
  - name: '>'
    fullName: '>'
  - name: ', '
    fullName: ', '
  - uid: System.Func`2
    name: Func
    fullName: System.Func
    isExternal: true
  - name: <
    fullName: <
  - name: TSource
    fullName: TSource
  - name: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: '>'
    fullName: '>'
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Linq.Enumerable.SingleOrDefault``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})
    name: SingleOrDefault(Of TSource)
    fullName: System.Linq.Enumerable.SingleOrDefault(Of TSource)
  - name: (
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - name: TSource
    fullName: TSource
  - name: )
    fullName: )
  - name: ', '
    fullName: ', '
  - uid: System.Func`2
    name: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - name: TSource
    fullName: TSource
  - name: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    fullName: )
  - name: )
    fullName: )
  nameWithType: Enumerable.SingleOrDefault<TSource>(IEnumerable<TSource>, Func<TSource, Boolean>)
  nameWithType.vb: Enumerable.SingleOrDefault(Of TSource)(IEnumerable(Of TSource), Func(Of TSource, Boolean))
  commentId: M:System.Linq.Enumerable.SingleOrDefault``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})
- uid: System.Linq.Enumerable.Skip``1(System.Collections.Generic.IEnumerable{``0},System.Int32)
  isExternal: true
  name: Skip<TSource>(IEnumerable<TSource>, Int32)
  fullName: System.Linq.Enumerable.Skip<TSource>(System.Collections.Generic.IEnumerable<TSource>, System.Int32)
  fullname.vb: System.Linq.Enumerable.Skip(Of TSource)(System.Collections.Generic.IEnumerable(Of TSource), System.Int32)
  name.vb: Skip(Of TSource)(IEnumerable(Of TSource), Int32)
  spec.csharp:
  - uid: System.Linq.Enumerable.Skip``1(System.Collections.Generic.IEnumerable{``0},System.Int32)
    name: Skip<TSource>
    fullName: System.Linq.Enumerable.Skip<TSource>
  - name: (
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    fullName: <
  - name: TSource
    fullName: TSource
  - name: '>'
    fullName: '>'
  - name: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Linq.Enumerable.Skip``1(System.Collections.Generic.IEnumerable{``0},System.Int32)
    name: Skip(Of TSource)
    fullName: System.Linq.Enumerable.Skip(Of TSource)
  - name: (
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - name: TSource
    fullName: TSource
  - name: )
    fullName: )
  - name: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    fullName: )
  nameWithType: Enumerable.Skip<TSource>(IEnumerable<TSource>, Int32)
  nameWithType.vb: Enumerable.Skip(Of TSource)(IEnumerable(Of TSource), Int32)
  commentId: M:System.Linq.Enumerable.Skip``1(System.Collections.Generic.IEnumerable{``0},System.Int32)
- uid: System.Linq.Enumerable.SkipWhile``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})
  isExternal: true
  name: SkipWhile<TSource>(IEnumerable<TSource>, Func<TSource, Boolean>)
  fullName: System.Linq.Enumerable.SkipWhile<TSource>(System.Collections.Generic.IEnumerable<TSource>, System.Func<TSource, System.Boolean>)
  fullname.vb: System.Linq.Enumerable.SkipWhile(Of TSource)(System.Collections.Generic.IEnumerable(Of TSource), System.Func(Of TSource, System.Boolean))
  name.vb: SkipWhile(Of TSource)(IEnumerable(Of TSource), Func(Of TSource, Boolean))
  spec.csharp:
  - uid: System.Linq.Enumerable.SkipWhile``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})
    name: SkipWhile<TSource>
    fullName: System.Linq.Enumerable.SkipWhile<TSource>
  - name: (
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    fullName: <
  - name: TSource
    fullName: TSource
  - name: '>'
    fullName: '>'
  - name: ', '
    fullName: ', '
  - uid: System.Func`2
    name: Func
    fullName: System.Func
    isExternal: true
  - name: <
    fullName: <
  - name: TSource
    fullName: TSource
  - name: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: '>'
    fullName: '>'
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Linq.Enumerable.SkipWhile``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})
    name: SkipWhile(Of TSource)
    fullName: System.Linq.Enumerable.SkipWhile(Of TSource)
  - name: (
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - name: TSource
    fullName: TSource
  - name: )
    fullName: )
  - name: ', '
    fullName: ', '
  - uid: System.Func`2
    name: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - name: TSource
    fullName: TSource
  - name: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    fullName: )
  - name: )
    fullName: )
  nameWithType: Enumerable.SkipWhile<TSource>(IEnumerable<TSource>, Func<TSource, Boolean>)
  nameWithType.vb: Enumerable.SkipWhile(Of TSource)(IEnumerable(Of TSource), Func(Of TSource, Boolean))
  commentId: M:System.Linq.Enumerable.SkipWhile``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})
- uid: System.Linq.Enumerable.SkipWhile``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32,System.Boolean})
  isExternal: true
  name: SkipWhile<TSource>(IEnumerable<TSource>, Func<TSource, Int32, Boolean>)
  fullName: System.Linq.Enumerable.SkipWhile<TSource>(System.Collections.Generic.IEnumerable<TSource>, System.Func<TSource, System.Int32, System.Boolean>)
  fullname.vb: System.Linq.Enumerable.SkipWhile(Of TSource)(System.Collections.Generic.IEnumerable(Of TSource), System.Func(Of TSource, System.Int32, System.Boolean))
  name.vb: SkipWhile(Of TSource)(IEnumerable(Of TSource), Func(Of TSource, Int32, Boolean))
  spec.csharp:
  - uid: System.Linq.Enumerable.SkipWhile``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32,System.Boolean})
    name: SkipWhile<TSource>
    fullName: System.Linq.Enumerable.SkipWhile<TSource>
  - name: (
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    fullName: <
  - name: TSource
    fullName: TSource
  - name: '>'
    fullName: '>'
  - name: ', '
    fullName: ', '
  - uid: System.Func`3
    name: Func
    fullName: System.Func
    isExternal: true
  - name: <
    fullName: <
  - name: TSource
    fullName: TSource
  - name: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: '>'
    fullName: '>'
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Linq.Enumerable.SkipWhile``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32,System.Boolean})
    name: SkipWhile(Of TSource)
    fullName: System.Linq.Enumerable.SkipWhile(Of TSource)
  - name: (
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - name: TSource
    fullName: TSource
  - name: )
    fullName: )
  - name: ', '
    fullName: ', '
  - uid: System.Func`3
    name: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - name: TSource
    fullName: TSource
  - name: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    fullName: )
  - name: )
    fullName: )
  nameWithType: Enumerable.SkipWhile<TSource>(IEnumerable<TSource>, Func<TSource, Int32, Boolean>)
  nameWithType.vb: Enumerable.SkipWhile(Of TSource)(IEnumerable(Of TSource), Func(Of TSource, Int32, Boolean))
  commentId: M:System.Linq.Enumerable.SkipWhile``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32,System.Boolean})
- uid: System.Linq.Enumerable.Sum``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Decimal})
  isExternal: true
  name: Sum<TSource>(IEnumerable<TSource>, Func<TSource, Decimal>)
  fullName: System.Linq.Enumerable.Sum<TSource>(System.Collections.Generic.IEnumerable<TSource>, System.Func<TSource, System.Decimal>)
  fullname.vb: System.Linq.Enumerable.Sum(Of TSource)(System.Collections.Generic.IEnumerable(Of TSource), System.Func(Of TSource, System.Decimal))
  name.vb: Sum(Of TSource)(IEnumerable(Of TSource), Func(Of TSource, Decimal))
  spec.csharp:
  - uid: System.Linq.Enumerable.Sum``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Decimal})
    name: Sum<TSource>
    fullName: System.Linq.Enumerable.Sum<TSource>
  - name: (
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    fullName: <
  - name: TSource
    fullName: TSource
  - name: '>'
    fullName: '>'
  - name: ', '
    fullName: ', '
  - uid: System.Func`2
    name: Func
    fullName: System.Func
    isExternal: true
  - name: <
    fullName: <
  - name: TSource
    fullName: TSource
  - name: ', '
    fullName: ', '
  - uid: System.Decimal
    name: Decimal
    fullName: System.Decimal
    isExternal: true
  - name: '>'
    fullName: '>'
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Linq.Enumerable.Sum``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Decimal})
    name: Sum(Of TSource)
    fullName: System.Linq.Enumerable.Sum(Of TSource)
  - name: (
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - name: TSource
    fullName: TSource
  - name: )
    fullName: )
  - name: ', '
    fullName: ', '
  - uid: System.Func`2
    name: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - name: TSource
    fullName: TSource
  - name: ', '
    fullName: ', '
  - uid: System.Decimal
    name: Decimal
    fullName: System.Decimal
    isExternal: true
  - name: )
    fullName: )
  - name: )
    fullName: )
  nameWithType: Enumerable.Sum<TSource>(IEnumerable<TSource>, Func<TSource, Decimal>)
  nameWithType.vb: Enumerable.Sum(Of TSource)(IEnumerable(Of TSource), Func(Of TSource, Decimal))
  commentId: M:System.Linq.Enumerable.Sum``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Decimal})
- uid: System.Linq.Enumerable.Sum``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Double})
  isExternal: true
  name: Sum<TSource>(IEnumerable<TSource>, Func<TSource, Double>)
  fullName: System.Linq.Enumerable.Sum<TSource>(System.Collections.Generic.IEnumerable<TSource>, System.Func<TSource, System.Double>)
  fullname.vb: System.Linq.Enumerable.Sum(Of TSource)(System.Collections.Generic.IEnumerable(Of TSource), System.Func(Of TSource, System.Double))
  name.vb: Sum(Of TSource)(IEnumerable(Of TSource), Func(Of TSource, Double))
  spec.csharp:
  - uid: System.Linq.Enumerable.Sum``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Double})
    name: Sum<TSource>
    fullName: System.Linq.Enumerable.Sum<TSource>
  - name: (
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    fullName: <
  - name: TSource
    fullName: TSource
  - name: '>'
    fullName: '>'
  - name: ', '
    fullName: ', '
  - uid: System.Func`2
    name: Func
    fullName: System.Func
    isExternal: true
  - name: <
    fullName: <
  - name: TSource
    fullName: TSource
  - name: ', '
    fullName: ', '
  - uid: System.Double
    name: Double
    fullName: System.Double
    isExternal: true
  - name: '>'
    fullName: '>'
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Linq.Enumerable.Sum``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Double})
    name: Sum(Of TSource)
    fullName: System.Linq.Enumerable.Sum(Of TSource)
  - name: (
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - name: TSource
    fullName: TSource
  - name: )
    fullName: )
  - name: ', '
    fullName: ', '
  - uid: System.Func`2
    name: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - name: TSource
    fullName: TSource
  - name: ', '
    fullName: ', '
  - uid: System.Double
    name: Double
    fullName: System.Double
    isExternal: true
  - name: )
    fullName: )
  - name: )
    fullName: )
  nameWithType: Enumerable.Sum<TSource>(IEnumerable<TSource>, Func<TSource, Double>)
  nameWithType.vb: Enumerable.Sum(Of TSource)(IEnumerable(Of TSource), Func(Of TSource, Double))
  commentId: M:System.Linq.Enumerable.Sum``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Double})
- uid: System.Linq.Enumerable.Sum``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32})
  isExternal: true
  name: Sum<TSource>(IEnumerable<TSource>, Func<TSource, Int32>)
  fullName: System.Linq.Enumerable.Sum<TSource>(System.Collections.Generic.IEnumerable<TSource>, System.Func<TSource, System.Int32>)
  fullname.vb: System.Linq.Enumerable.Sum(Of TSource)(System.Collections.Generic.IEnumerable(Of TSource), System.Func(Of TSource, System.Int32))
  name.vb: Sum(Of TSource)(IEnumerable(Of TSource), Func(Of TSource, Int32))
  spec.csharp:
  - uid: System.Linq.Enumerable.Sum``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32})
    name: Sum<TSource>
    fullName: System.Linq.Enumerable.Sum<TSource>
  - name: (
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    fullName: <
  - name: TSource
    fullName: TSource
  - name: '>'
    fullName: '>'
  - name: ', '
    fullName: ', '
  - uid: System.Func`2
    name: Func
    fullName: System.Func
    isExternal: true
  - name: <
    fullName: <
  - name: TSource
    fullName: TSource
  - name: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    fullName: System.Int32
    isExternal: true
  - name: '>'
    fullName: '>'
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Linq.Enumerable.Sum``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32})
    name: Sum(Of TSource)
    fullName: System.Linq.Enumerable.Sum(Of TSource)
  - name: (
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - name: TSource
    fullName: TSource
  - name: )
    fullName: )
  - name: ', '
    fullName: ', '
  - uid: System.Func`2
    name: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - name: TSource
    fullName: TSource
  - name: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    fullName: )
  - name: )
    fullName: )
  nameWithType: Enumerable.Sum<TSource>(IEnumerable<TSource>, Func<TSource, Int32>)
  nameWithType.vb: Enumerable.Sum(Of TSource)(IEnumerable(Of TSource), Func(Of TSource, Int32))
  commentId: M:System.Linq.Enumerable.Sum``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32})
- uid: System.Linq.Enumerable.Sum``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int64})
  isExternal: true
  name: Sum<TSource>(IEnumerable<TSource>, Func<TSource, Int64>)
  fullName: System.Linq.Enumerable.Sum<TSource>(System.Collections.Generic.IEnumerable<TSource>, System.Func<TSource, System.Int64>)
  fullname.vb: System.Linq.Enumerable.Sum(Of TSource)(System.Collections.Generic.IEnumerable(Of TSource), System.Func(Of TSource, System.Int64))
  name.vb: Sum(Of TSource)(IEnumerable(Of TSource), Func(Of TSource, Int64))
  spec.csharp:
  - uid: System.Linq.Enumerable.Sum``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int64})
    name: Sum<TSource>
    fullName: System.Linq.Enumerable.Sum<TSource>
  - name: (
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    fullName: <
  - name: TSource
    fullName: TSource
  - name: '>'
    fullName: '>'
  - name: ', '
    fullName: ', '
  - uid: System.Func`2
    name: Func
    fullName: System.Func
    isExternal: true
  - name: <
    fullName: <
  - name: TSource
    fullName: TSource
  - name: ', '
    fullName: ', '
  - uid: System.Int64
    name: Int64
    fullName: System.Int64
    isExternal: true
  - name: '>'
    fullName: '>'
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Linq.Enumerable.Sum``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int64})
    name: Sum(Of TSource)
    fullName: System.Linq.Enumerable.Sum(Of TSource)
  - name: (
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - name: TSource
    fullName: TSource
  - name: )
    fullName: )
  - name: ', '
    fullName: ', '
  - uid: System.Func`2
    name: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - name: TSource
    fullName: TSource
  - name: ', '
    fullName: ', '
  - uid: System.Int64
    name: Int64
    fullName: System.Int64
    isExternal: true
  - name: )
    fullName: )
  - name: )
    fullName: )
  nameWithType: Enumerable.Sum<TSource>(IEnumerable<TSource>, Func<TSource, Int64>)
  nameWithType.vb: Enumerable.Sum(Of TSource)(IEnumerable(Of TSource), Func(Of TSource, Int64))
  commentId: M:System.Linq.Enumerable.Sum``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int64})
- uid: System.Linq.Enumerable.Sum``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Decimal}})
  isExternal: true
  name: Sum<TSource>(IEnumerable<TSource>, Func<TSource, Nullable<Decimal>>)
  fullName: System.Linq.Enumerable.Sum<TSource>(System.Collections.Generic.IEnumerable<TSource>, System.Func<TSource, System.Nullable<System.Decimal>>)
  fullname.vb: System.Linq.Enumerable.Sum(Of TSource)(System.Collections.Generic.IEnumerable(Of TSource), System.Func(Of TSource, System.Nullable(Of System.Decimal)))
  name.vb: Sum(Of TSource)(IEnumerable(Of TSource), Func(Of TSource, Nullable(Of Decimal)))
  spec.csharp:
  - uid: System.Linq.Enumerable.Sum``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Decimal}})
    name: Sum<TSource>
    fullName: System.Linq.Enumerable.Sum<TSource>
  - name: (
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    fullName: <
  - name: TSource
    fullName: TSource
  - name: '>'
    fullName: '>'
  - name: ', '
    fullName: ', '
  - uid: System.Func`2
    name: Func
    fullName: System.Func
    isExternal: true
  - name: <
    fullName: <
  - name: TSource
    fullName: TSource
  - name: ', '
    fullName: ', '
  - uid: System.Nullable`1
    name: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    fullName: <
  - uid: System.Decimal
    name: Decimal
    fullName: System.Decimal
    isExternal: true
  - name: '>'
    fullName: '>'
  - name: '>'
    fullName: '>'
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Linq.Enumerable.Sum``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Decimal}})
    name: Sum(Of TSource)
    fullName: System.Linq.Enumerable.Sum(Of TSource)
  - name: (
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - name: TSource
    fullName: TSource
  - name: )
    fullName: )
  - name: ', '
    fullName: ', '
  - uid: System.Func`2
    name: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - name: TSource
    fullName: TSource
  - name: ', '
    fullName: ', '
  - uid: System.Nullable`1
    name: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - uid: System.Decimal
    name: Decimal
    fullName: System.Decimal
    isExternal: true
  - name: )
    fullName: )
  - name: )
    fullName: )
  - name: )
    fullName: )
  nameWithType: Enumerable.Sum<TSource>(IEnumerable<TSource>, Func<TSource, Nullable<Decimal>>)
  nameWithType.vb: Enumerable.Sum(Of TSource)(IEnumerable(Of TSource), Func(Of TSource, Nullable(Of Decimal)))
  commentId: M:System.Linq.Enumerable.Sum``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Decimal}})
- uid: System.Linq.Enumerable.Sum``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Double}})
  isExternal: true
  name: Sum<TSource>(IEnumerable<TSource>, Func<TSource, Nullable<Double>>)
  fullName: System.Linq.Enumerable.Sum<TSource>(System.Collections.Generic.IEnumerable<TSource>, System.Func<TSource, System.Nullable<System.Double>>)
  fullname.vb: System.Linq.Enumerable.Sum(Of TSource)(System.Collections.Generic.IEnumerable(Of TSource), System.Func(Of TSource, System.Nullable(Of System.Double)))
  name.vb: Sum(Of TSource)(IEnumerable(Of TSource), Func(Of TSource, Nullable(Of Double)))
  spec.csharp:
  - uid: System.Linq.Enumerable.Sum``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Double}})
    name: Sum<TSource>
    fullName: System.Linq.Enumerable.Sum<TSource>
  - name: (
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    fullName: <
  - name: TSource
    fullName: TSource
  - name: '>'
    fullName: '>'
  - name: ', '
    fullName: ', '
  - uid: System.Func`2
    name: Func
    fullName: System.Func
    isExternal: true
  - name: <
    fullName: <
  - name: TSource
    fullName: TSource
  - name: ', '
    fullName: ', '
  - uid: System.Nullable`1
    name: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    fullName: <
  - uid: System.Double
    name: Double
    fullName: System.Double
    isExternal: true
  - name: '>'
    fullName: '>'
  - name: '>'
    fullName: '>'
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Linq.Enumerable.Sum``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Double}})
    name: Sum(Of TSource)
    fullName: System.Linq.Enumerable.Sum(Of TSource)
  - name: (
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - name: TSource
    fullName: TSource
  - name: )
    fullName: )
  - name: ', '
    fullName: ', '
  - uid: System.Func`2
    name: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - name: TSource
    fullName: TSource
  - name: ', '
    fullName: ', '
  - uid: System.Nullable`1
    name: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - uid: System.Double
    name: Double
    fullName: System.Double
    isExternal: true
  - name: )
    fullName: )
  - name: )
    fullName: )
  - name: )
    fullName: )
  nameWithType: Enumerable.Sum<TSource>(IEnumerable<TSource>, Func<TSource, Nullable<Double>>)
  nameWithType.vb: Enumerable.Sum(Of TSource)(IEnumerable(Of TSource), Func(Of TSource, Nullable(Of Double)))
  commentId: M:System.Linq.Enumerable.Sum``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Double}})
- uid: System.Linq.Enumerable.Sum``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Int32}})
  isExternal: true
  name: Sum<TSource>(IEnumerable<TSource>, Func<TSource, Nullable<Int32>>)
  fullName: System.Linq.Enumerable.Sum<TSource>(System.Collections.Generic.IEnumerable<TSource>, System.Func<TSource, System.Nullable<System.Int32>>)
  fullname.vb: System.Linq.Enumerable.Sum(Of TSource)(System.Collections.Generic.IEnumerable(Of TSource), System.Func(Of TSource, System.Nullable(Of System.Int32)))
  name.vb: Sum(Of TSource)(IEnumerable(Of TSource), Func(Of TSource, Nullable(Of Int32)))
  spec.csharp:
  - uid: System.Linq.Enumerable.Sum``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Int32}})
    name: Sum<TSource>
    fullName: System.Linq.Enumerable.Sum<TSource>
  - name: (
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    fullName: <
  - name: TSource
    fullName: TSource
  - name: '>'
    fullName: '>'
  - name: ', '
    fullName: ', '
  - uid: System.Func`2
    name: Func
    fullName: System.Func
    isExternal: true
  - name: <
    fullName: <
  - name: TSource
    fullName: TSource
  - name: ', '
    fullName: ', '
  - uid: System.Nullable`1
    name: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    fullName: <
  - uid: System.Int32
    name: Int32
    fullName: System.Int32
    isExternal: true
  - name: '>'
    fullName: '>'
  - name: '>'
    fullName: '>'
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Linq.Enumerable.Sum``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Int32}})
    name: Sum(Of TSource)
    fullName: System.Linq.Enumerable.Sum(Of TSource)
  - name: (
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - name: TSource
    fullName: TSource
  - name: )
    fullName: )
  - name: ', '
    fullName: ', '
  - uid: System.Func`2
    name: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - name: TSource
    fullName: TSource
  - name: ', '
    fullName: ', '
  - uid: System.Nullable`1
    name: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - uid: System.Int32
    name: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    fullName: )
  - name: )
    fullName: )
  - name: )
    fullName: )
  nameWithType: Enumerable.Sum<TSource>(IEnumerable<TSource>, Func<TSource, Nullable<Int32>>)
  nameWithType.vb: Enumerable.Sum(Of TSource)(IEnumerable(Of TSource), Func(Of TSource, Nullable(Of Int32)))
  commentId: M:System.Linq.Enumerable.Sum``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Int32}})
- uid: System.Linq.Enumerable.Sum``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Int64}})
  isExternal: true
  name: Sum<TSource>(IEnumerable<TSource>, Func<TSource, Nullable<Int64>>)
  fullName: System.Linq.Enumerable.Sum<TSource>(System.Collections.Generic.IEnumerable<TSource>, System.Func<TSource, System.Nullable<System.Int64>>)
  fullname.vb: System.Linq.Enumerable.Sum(Of TSource)(System.Collections.Generic.IEnumerable(Of TSource), System.Func(Of TSource, System.Nullable(Of System.Int64)))
  name.vb: Sum(Of TSource)(IEnumerable(Of TSource), Func(Of TSource, Nullable(Of Int64)))
  spec.csharp:
  - uid: System.Linq.Enumerable.Sum``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Int64}})
    name: Sum<TSource>
    fullName: System.Linq.Enumerable.Sum<TSource>
  - name: (
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    fullName: <
  - name: TSource
    fullName: TSource
  - name: '>'
    fullName: '>'
  - name: ', '
    fullName: ', '
  - uid: System.Func`2
    name: Func
    fullName: System.Func
    isExternal: true
  - name: <
    fullName: <
  - name: TSource
    fullName: TSource
  - name: ', '
    fullName: ', '
  - uid: System.Nullable`1
    name: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    fullName: <
  - uid: System.Int64
    name: Int64
    fullName: System.Int64
    isExternal: true
  - name: '>'
    fullName: '>'
  - name: '>'
    fullName: '>'
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Linq.Enumerable.Sum``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Int64}})
    name: Sum(Of TSource)
    fullName: System.Linq.Enumerable.Sum(Of TSource)
  - name: (
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - name: TSource
    fullName: TSource
  - name: )
    fullName: )
  - name: ', '
    fullName: ', '
  - uid: System.Func`2
    name: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - name: TSource
    fullName: TSource
  - name: ', '
    fullName: ', '
  - uid: System.Nullable`1
    name: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - uid: System.Int64
    name: Int64
    fullName: System.Int64
    isExternal: true
  - name: )
    fullName: )
  - name: )
    fullName: )
  - name: )
    fullName: )
  nameWithType: Enumerable.Sum<TSource>(IEnumerable<TSource>, Func<TSource, Nullable<Int64>>)
  nameWithType.vb: Enumerable.Sum(Of TSource)(IEnumerable(Of TSource), Func(Of TSource, Nullable(Of Int64)))
  commentId: M:System.Linq.Enumerable.Sum``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Int64}})
- uid: System.Linq.Enumerable.Sum``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Single}})
  isExternal: true
  name: Sum<TSource>(IEnumerable<TSource>, Func<TSource, Nullable<Single>>)
  fullName: System.Linq.Enumerable.Sum<TSource>(System.Collections.Generic.IEnumerable<TSource>, System.Func<TSource, System.Nullable<System.Single>>)
  fullname.vb: System.Linq.Enumerable.Sum(Of TSource)(System.Collections.Generic.IEnumerable(Of TSource), System.Func(Of TSource, System.Nullable(Of System.Single)))
  name.vb: Sum(Of TSource)(IEnumerable(Of TSource), Func(Of TSource, Nullable(Of Single)))
  spec.csharp:
  - uid: System.Linq.Enumerable.Sum``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Single}})
    name: Sum<TSource>
    fullName: System.Linq.Enumerable.Sum<TSource>
  - name: (
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    fullName: <
  - name: TSource
    fullName: TSource
  - name: '>'
    fullName: '>'
  - name: ', '
    fullName: ', '
  - uid: System.Func`2
    name: Func
    fullName: System.Func
    isExternal: true
  - name: <
    fullName: <
  - name: TSource
    fullName: TSource
  - name: ', '
    fullName: ', '
  - uid: System.Nullable`1
    name: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    fullName: <
  - uid: System.Single
    name: Single
    fullName: System.Single
    isExternal: true
  - name: '>'
    fullName: '>'
  - name: '>'
    fullName: '>'
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Linq.Enumerable.Sum``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Single}})
    name: Sum(Of TSource)
    fullName: System.Linq.Enumerable.Sum(Of TSource)
  - name: (
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - name: TSource
    fullName: TSource
  - name: )
    fullName: )
  - name: ', '
    fullName: ', '
  - uid: System.Func`2
    name: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - name: TSource
    fullName: TSource
  - name: ', '
    fullName: ', '
  - uid: System.Nullable`1
    name: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - uid: System.Single
    name: Single
    fullName: System.Single
    isExternal: true
  - name: )
    fullName: )
  - name: )
    fullName: )
  - name: )
    fullName: )
  nameWithType: Enumerable.Sum<TSource>(IEnumerable<TSource>, Func<TSource, Nullable<Single>>)
  nameWithType.vb: Enumerable.Sum(Of TSource)(IEnumerable(Of TSource), Func(Of TSource, Nullable(Of Single)))
  commentId: M:System.Linq.Enumerable.Sum``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Single}})
- uid: System.Linq.Enumerable.Sum``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Single})
  isExternal: true
  name: Sum<TSource>(IEnumerable<TSource>, Func<TSource, Single>)
  fullName: System.Linq.Enumerable.Sum<TSource>(System.Collections.Generic.IEnumerable<TSource>, System.Func<TSource, System.Single>)
  fullname.vb: System.Linq.Enumerable.Sum(Of TSource)(System.Collections.Generic.IEnumerable(Of TSource), System.Func(Of TSource, System.Single))
  name.vb: Sum(Of TSource)(IEnumerable(Of TSource), Func(Of TSource, Single))
  spec.csharp:
  - uid: System.Linq.Enumerable.Sum``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Single})
    name: Sum<TSource>
    fullName: System.Linq.Enumerable.Sum<TSource>
  - name: (
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    fullName: <
  - name: TSource
    fullName: TSource
  - name: '>'
    fullName: '>'
  - name: ', '
    fullName: ', '
  - uid: System.Func`2
    name: Func
    fullName: System.Func
    isExternal: true
  - name: <
    fullName: <
  - name: TSource
    fullName: TSource
  - name: ', '
    fullName: ', '
  - uid: System.Single
    name: Single
    fullName: System.Single
    isExternal: true
  - name: '>'
    fullName: '>'
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Linq.Enumerable.Sum``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Single})
    name: Sum(Of TSource)
    fullName: System.Linq.Enumerable.Sum(Of TSource)
  - name: (
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - name: TSource
    fullName: TSource
  - name: )
    fullName: )
  - name: ', '
    fullName: ', '
  - uid: System.Func`2
    name: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - name: TSource
    fullName: TSource
  - name: ', '
    fullName: ', '
  - uid: System.Single
    name: Single
    fullName: System.Single
    isExternal: true
  - name: )
    fullName: )
  - name: )
    fullName: )
  nameWithType: Enumerable.Sum<TSource>(IEnumerable<TSource>, Func<TSource, Single>)
  nameWithType.vb: Enumerable.Sum(Of TSource)(IEnumerable(Of TSource), Func(Of TSource, Single))
  commentId: M:System.Linq.Enumerable.Sum``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Single})
- uid: System.Linq.Enumerable.Take``1(System.Collections.Generic.IEnumerable{``0},System.Int32)
  isExternal: true
  name: Take<TSource>(IEnumerable<TSource>, Int32)
  fullName: System.Linq.Enumerable.Take<TSource>(System.Collections.Generic.IEnumerable<TSource>, System.Int32)
  fullname.vb: System.Linq.Enumerable.Take(Of TSource)(System.Collections.Generic.IEnumerable(Of TSource), System.Int32)
  name.vb: Take(Of TSource)(IEnumerable(Of TSource), Int32)
  spec.csharp:
  - uid: System.Linq.Enumerable.Take``1(System.Collections.Generic.IEnumerable{``0},System.Int32)
    name: Take<TSource>
    fullName: System.Linq.Enumerable.Take<TSource>
  - name: (
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    fullName: <
  - name: TSource
    fullName: TSource
  - name: '>'
    fullName: '>'
  - name: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Linq.Enumerable.Take``1(System.Collections.Generic.IEnumerable{``0},System.Int32)
    name: Take(Of TSource)
    fullName: System.Linq.Enumerable.Take(Of TSource)
  - name: (
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - name: TSource
    fullName: TSource
  - name: )
    fullName: )
  - name: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    fullName: )
  nameWithType: Enumerable.Take<TSource>(IEnumerable<TSource>, Int32)
  nameWithType.vb: Enumerable.Take(Of TSource)(IEnumerable(Of TSource), Int32)
  commentId: M:System.Linq.Enumerable.Take``1(System.Collections.Generic.IEnumerable{``0},System.Int32)
- uid: System.Linq.Enumerable.TakeWhile``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})
  isExternal: true
  name: TakeWhile<TSource>(IEnumerable<TSource>, Func<TSource, Boolean>)
  fullName: System.Linq.Enumerable.TakeWhile<TSource>(System.Collections.Generic.IEnumerable<TSource>, System.Func<TSource, System.Boolean>)
  fullname.vb: System.Linq.Enumerable.TakeWhile(Of TSource)(System.Collections.Generic.IEnumerable(Of TSource), System.Func(Of TSource, System.Boolean))
  name.vb: TakeWhile(Of TSource)(IEnumerable(Of TSource), Func(Of TSource, Boolean))
  spec.csharp:
  - uid: System.Linq.Enumerable.TakeWhile``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})
    name: TakeWhile<TSource>
    fullName: System.Linq.Enumerable.TakeWhile<TSource>
  - name: (
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    fullName: <
  - name: TSource
    fullName: TSource
  - name: '>'
    fullName: '>'
  - name: ', '
    fullName: ', '
  - uid: System.Func`2
    name: Func
    fullName: System.Func
    isExternal: true
  - name: <
    fullName: <
  - name: TSource
    fullName: TSource
  - name: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: '>'
    fullName: '>'
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Linq.Enumerable.TakeWhile``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})
    name: TakeWhile(Of TSource)
    fullName: System.Linq.Enumerable.TakeWhile(Of TSource)
  - name: (
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - name: TSource
    fullName: TSource
  - name: )
    fullName: )
  - name: ', '
    fullName: ', '
  - uid: System.Func`2
    name: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - name: TSource
    fullName: TSource
  - name: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    fullName: )
  - name: )
    fullName: )
  nameWithType: Enumerable.TakeWhile<TSource>(IEnumerable<TSource>, Func<TSource, Boolean>)
  nameWithType.vb: Enumerable.TakeWhile(Of TSource)(IEnumerable(Of TSource), Func(Of TSource, Boolean))
  commentId: M:System.Linq.Enumerable.TakeWhile``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})
- uid: System.Linq.Enumerable.TakeWhile``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32,System.Boolean})
  isExternal: true
  name: TakeWhile<TSource>(IEnumerable<TSource>, Func<TSource, Int32, Boolean>)
  fullName: System.Linq.Enumerable.TakeWhile<TSource>(System.Collections.Generic.IEnumerable<TSource>, System.Func<TSource, System.Int32, System.Boolean>)
  fullname.vb: System.Linq.Enumerable.TakeWhile(Of TSource)(System.Collections.Generic.IEnumerable(Of TSource), System.Func(Of TSource, System.Int32, System.Boolean))
  name.vb: TakeWhile(Of TSource)(IEnumerable(Of TSource), Func(Of TSource, Int32, Boolean))
  spec.csharp:
  - uid: System.Linq.Enumerable.TakeWhile``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32,System.Boolean})
    name: TakeWhile<TSource>
    fullName: System.Linq.Enumerable.TakeWhile<TSource>
  - name: (
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    fullName: <
  - name: TSource
    fullName: TSource
  - name: '>'
    fullName: '>'
  - name: ', '
    fullName: ', '
  - uid: System.Func`3
    name: Func
    fullName: System.Func
    isExternal: true
  - name: <
    fullName: <
  - name: TSource
    fullName: TSource
  - name: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: '>'
    fullName: '>'
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Linq.Enumerable.TakeWhile``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32,System.Boolean})
    name: TakeWhile(Of TSource)
    fullName: System.Linq.Enumerable.TakeWhile(Of TSource)
  - name: (
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - name: TSource
    fullName: TSource
  - name: )
    fullName: )
  - name: ', '
    fullName: ', '
  - uid: System.Func`3
    name: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - name: TSource
    fullName: TSource
  - name: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    fullName: )
  - name: )
    fullName: )
  nameWithType: Enumerable.TakeWhile<TSource>(IEnumerable<TSource>, Func<TSource, Int32, Boolean>)
  nameWithType.vb: Enumerable.TakeWhile(Of TSource)(IEnumerable(Of TSource), Func(Of TSource, Int32, Boolean))
  commentId: M:System.Linq.Enumerable.TakeWhile``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32,System.Boolean})
- uid: System.Linq.Enumerable.ToArray``1(System.Collections.Generic.IEnumerable{``0})
  isExternal: true
  name: ToArray<TSource>(IEnumerable<TSource>)
  fullName: System.Linq.Enumerable.ToArray<TSource>(System.Collections.Generic.IEnumerable<TSource>)
  fullname.vb: System.Linq.Enumerable.ToArray(Of TSource)(System.Collections.Generic.IEnumerable(Of TSource))
  name.vb: ToArray(Of TSource)(IEnumerable(Of TSource))
  spec.csharp:
  - uid: System.Linq.Enumerable.ToArray``1(System.Collections.Generic.IEnumerable{``0})
    name: ToArray<TSource>
    fullName: System.Linq.Enumerable.ToArray<TSource>
  - name: (
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    fullName: <
  - name: TSource
    fullName: TSource
  - name: '>'
    fullName: '>'
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Linq.Enumerable.ToArray``1(System.Collections.Generic.IEnumerable{``0})
    name: ToArray(Of TSource)
    fullName: System.Linq.Enumerable.ToArray(Of TSource)
  - name: (
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - name: TSource
    fullName: TSource
  - name: )
    fullName: )
  - name: )
    fullName: )
  nameWithType: Enumerable.ToArray<TSource>(IEnumerable<TSource>)
  nameWithType.vb: Enumerable.ToArray(Of TSource)(IEnumerable(Of TSource))
  commentId: M:System.Linq.Enumerable.ToArray``1(System.Collections.Generic.IEnumerable{``0})
- uid: System.Linq.Enumerable.ToDictionary``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})
  isExternal: true
  name: ToDictionary<TSource, TKey>(IEnumerable<TSource>, Func<TSource, TKey>)
  fullName: System.Linq.Enumerable.ToDictionary<TSource, TKey>(System.Collections.Generic.IEnumerable<TSource>, System.Func<TSource, TKey>)
  fullname.vb: System.Linq.Enumerable.ToDictionary(Of TSource, TKey)(System.Collections.Generic.IEnumerable(Of TSource), System.Func(Of TSource, TKey))
  name.vb: ToDictionary(Of TSource, TKey)(IEnumerable(Of TSource), Func(Of TSource, TKey))
  spec.csharp:
  - uid: System.Linq.Enumerable.ToDictionary``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})
    name: ToDictionary<TSource, TKey>
    fullName: System.Linq.Enumerable.ToDictionary<TSource, TKey>
  - name: (
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    fullName: <
  - name: TSource
    fullName: TSource
  - name: '>'
    fullName: '>'
  - name: ', '
    fullName: ', '
  - uid: System.Func`2
    name: Func
    fullName: System.Func
    isExternal: true
  - name: <
    fullName: <
  - name: TSource
    fullName: TSource
  - name: ', '
    fullName: ', '
  - name: TKey
    fullName: TKey
  - name: '>'
    fullName: '>'
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Linq.Enumerable.ToDictionary``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})
    name: ToDictionary(Of TSource, TKey)
    fullName: System.Linq.Enumerable.ToDictionary(Of TSource, TKey)
  - name: (
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - name: TSource
    fullName: TSource
  - name: )
    fullName: )
  - name: ', '
    fullName: ', '
  - uid: System.Func`2
    name: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - name: TSource
    fullName: TSource
  - name: ', '
    fullName: ', '
  - name: TKey
    fullName: TKey
  - name: )
    fullName: )
  - name: )
    fullName: )
  nameWithType: Enumerable.ToDictionary<TSource, TKey>(IEnumerable<TSource>, Func<TSource, TKey>)
  nameWithType.vb: Enumerable.ToDictionary(Of TSource, TKey)(IEnumerable(Of TSource), Func(Of TSource, TKey))
  commentId: M:System.Linq.Enumerable.ToDictionary``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})
- uid: System.Linq.Enumerable.ToDictionary``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IEqualityComparer{``1})
  isExternal: true
  name: ToDictionary<TSource, TKey>(IEnumerable<TSource>, Func<TSource, TKey>, IEqualityComparer<TKey>)
  fullName: System.Linq.Enumerable.ToDictionary<TSource, TKey>(System.Collections.Generic.IEnumerable<TSource>, System.Func<TSource, TKey>, System.Collections.Generic.IEqualityComparer<TKey>)
  fullname.vb: System.Linq.Enumerable.ToDictionary(Of TSource, TKey)(System.Collections.Generic.IEnumerable(Of TSource), System.Func(Of TSource, TKey), System.Collections.Generic.IEqualityComparer(Of TKey))
  name.vb: ToDictionary(Of TSource, TKey)(IEnumerable(Of TSource), Func(Of TSource, TKey), IEqualityComparer(Of TKey))
  spec.csharp:
  - uid: System.Linq.Enumerable.ToDictionary``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IEqualityComparer{``1})
    name: ToDictionary<TSource, TKey>
    fullName: System.Linq.Enumerable.ToDictionary<TSource, TKey>
  - name: (
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    fullName: <
  - name: TSource
    fullName: TSource
  - name: '>'
    fullName: '>'
  - name: ', '
    fullName: ', '
  - uid: System.Func`2
    name: Func
    fullName: System.Func
    isExternal: true
  - name: <
    fullName: <
  - name: TSource
    fullName: TSource
  - name: ', '
    fullName: ', '
  - name: TKey
    fullName: TKey
  - name: '>'
    fullName: '>'
  - name: ', '
    fullName: ', '
  - uid: System.Collections.Generic.IEqualityComparer`1
    name: IEqualityComparer
    fullName: System.Collections.Generic.IEqualityComparer
    isExternal: true
  - name: <
    fullName: <
  - name: TKey
    fullName: TKey
  - name: '>'
    fullName: '>'
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Linq.Enumerable.ToDictionary``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IEqualityComparer{``1})
    name: ToDictionary(Of TSource, TKey)
    fullName: System.Linq.Enumerable.ToDictionary(Of TSource, TKey)
  - name: (
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - name: TSource
    fullName: TSource
  - name: )
    fullName: )
  - name: ', '
    fullName: ', '
  - uid: System.Func`2
    name: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - name: TSource
    fullName: TSource
  - name: ', '
    fullName: ', '
  - name: TKey
    fullName: TKey
  - name: )
    fullName: )
  - name: ', '
    fullName: ', '
  - uid: System.Collections.Generic.IEqualityComparer`1
    name: IEqualityComparer
    fullName: System.Collections.Generic.IEqualityComparer
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - name: TKey
    fullName: TKey
  - name: )
    fullName: )
  - name: )
    fullName: )
  nameWithType: Enumerable.ToDictionary<TSource, TKey>(IEnumerable<TSource>, Func<TSource, TKey>, IEqualityComparer<TKey>)
  nameWithType.vb: Enumerable.ToDictionary(Of TSource, TKey)(IEnumerable(Of TSource), Func(Of TSource, TKey), IEqualityComparer(Of TKey))
  commentId: M:System.Linq.Enumerable.ToDictionary``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IEqualityComparer{``1})
- uid: System.Linq.Enumerable.ToDictionary``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2})
  isExternal: true
  name: ToDictionary<TSource, TKey, TElement>(IEnumerable<TSource>, Func<TSource, TKey>, Func<TSource, TElement>)
  fullName: System.Linq.Enumerable.ToDictionary<TSource, TKey, TElement>(System.Collections.Generic.IEnumerable<TSource>, System.Func<TSource, TKey>, System.Func<TSource, TElement>)
  fullname.vb: System.Linq.Enumerable.ToDictionary(Of TSource, TKey, TElement)(System.Collections.Generic.IEnumerable(Of TSource), System.Func(Of TSource, TKey), System.Func(Of TSource, TElement))
  name.vb: ToDictionary(Of TSource, TKey, TElement)(IEnumerable(Of TSource), Func(Of TSource, TKey), Func(Of TSource, TElement))
  spec.csharp:
  - uid: System.Linq.Enumerable.ToDictionary``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2})
    name: ToDictionary<TSource, TKey, TElement>
    fullName: System.Linq.Enumerable.ToDictionary<TSource, TKey, TElement>
  - name: (
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    fullName: <
  - name: TSource
    fullName: TSource
  - name: '>'
    fullName: '>'
  - name: ', '
    fullName: ', '
  - uid: System.Func`2
    name: Func
    fullName: System.Func
    isExternal: true
  - name: <
    fullName: <
  - name: TSource
    fullName: TSource
  - name: ', '
    fullName: ', '
  - name: TKey
    fullName: TKey
  - name: '>'
    fullName: '>'
  - name: ', '
    fullName: ', '
  - uid: System.Func`2
    name: Func
    fullName: System.Func
    isExternal: true
  - name: <
    fullName: <
  - name: TSource
    fullName: TSource
  - name: ', '
    fullName: ', '
  - name: TElement
    fullName: TElement
  - name: '>'
    fullName: '>'
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Linq.Enumerable.ToDictionary``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2})
    name: ToDictionary(Of TSource, TKey, TElement)
    fullName: System.Linq.Enumerable.ToDictionary(Of TSource, TKey, TElement)
  - name: (
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - name: TSource
    fullName: TSource
  - name: )
    fullName: )
  - name: ', '
    fullName: ', '
  - uid: System.Func`2
    name: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - name: TSource
    fullName: TSource
  - name: ', '
    fullName: ', '
  - name: TKey
    fullName: TKey
  - name: )
    fullName: )
  - name: ', '
    fullName: ', '
  - uid: System.Func`2
    name: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - name: TSource
    fullName: TSource
  - name: ', '
    fullName: ', '
  - name: TElement
    fullName: TElement
  - name: )
    fullName: )
  - name: )
    fullName: )
  nameWithType: Enumerable.ToDictionary<TSource, TKey, TElement>(IEnumerable<TSource>, Func<TSource, TKey>, Func<TSource, TElement>)
  nameWithType.vb: Enumerable.ToDictionary(Of TSource, TKey, TElement)(IEnumerable(Of TSource), Func(Of TSource, TKey), Func(Of TSource, TElement))
  commentId: M:System.Linq.Enumerable.ToDictionary``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2})
- uid: System.Linq.Enumerable.ToDictionary``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})
  isExternal: true
  name: ToDictionary<TSource, TKey, TElement>(IEnumerable<TSource>, Func<TSource, TKey>, Func<TSource, TElement>, IEqualityComparer<TKey>)
  fullName: System.Linq.Enumerable.ToDictionary<TSource, TKey, TElement>(System.Collections.Generic.IEnumerable<TSource>, System.Func<TSource, TKey>, System.Func<TSource, TElement>, System.Collections.Generic.IEqualityComparer<TKey>)
  fullname.vb: System.Linq.Enumerable.ToDictionary(Of TSource, TKey, TElement)(System.Collections.Generic.IEnumerable(Of TSource), System.Func(Of TSource, TKey), System.Func(Of TSource, TElement), System.Collections.Generic.IEqualityComparer(Of TKey))
  name.vb: ToDictionary(Of TSource, TKey, TElement)(IEnumerable(Of TSource), Func(Of TSource, TKey), Func(Of TSource, TElement), IEqualityComparer(Of TKey))
  spec.csharp:
  - uid: System.Linq.Enumerable.ToDictionary``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})
    name: ToDictionary<TSource, TKey, TElement>
    fullName: System.Linq.Enumerable.ToDictionary<TSource, TKey, TElement>
  - name: (
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    fullName: <
  - name: TSource
    fullName: TSource
  - name: '>'
    fullName: '>'
  - name: ', '
    fullName: ', '
  - uid: System.Func`2
    name: Func
    fullName: System.Func
    isExternal: true
  - name: <
    fullName: <
  - name: TSource
    fullName: TSource
  - name: ', '
    fullName: ', '
  - name: TKey
    fullName: TKey
  - name: '>'
    fullName: '>'
  - name: ', '
    fullName: ', '
  - uid: System.Func`2
    name: Func
    fullName: System.Func
    isExternal: true
  - name: <
    fullName: <
  - name: TSource
    fullName: TSource
  - name: ', '
    fullName: ', '
  - name: TElement
    fullName: TElement
  - name: '>'
    fullName: '>'
  - name: ', '
    fullName: ', '
  - uid: System.Collections.Generic.IEqualityComparer`1
    name: IEqualityComparer
    fullName: System.Collections.Generic.IEqualityComparer
    isExternal: true
  - name: <
    fullName: <
  - name: TKey
    fullName: TKey
  - name: '>'
    fullName: '>'
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Linq.Enumerable.ToDictionary``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})
    name: ToDictionary(Of TSource, TKey, TElement)
    fullName: System.Linq.Enumerable.ToDictionary(Of TSource, TKey, TElement)
  - name: (
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - name: TSource
    fullName: TSource
  - name: )
    fullName: )
  - name: ', '
    fullName: ', '
  - uid: System.Func`2
    name: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - name: TSource
    fullName: TSource
  - name: ', '
    fullName: ', '
  - name: TKey
    fullName: TKey
  - name: )
    fullName: )
  - name: ', '
    fullName: ', '
  - uid: System.Func`2
    name: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - name: TSource
    fullName: TSource
  - name: ', '
    fullName: ', '
  - name: TElement
    fullName: TElement
  - name: )
    fullName: )
  - name: ', '
    fullName: ', '
  - uid: System.Collections.Generic.IEqualityComparer`1
    name: IEqualityComparer
    fullName: System.Collections.Generic.IEqualityComparer
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - name: TKey
    fullName: TKey
  - name: )
    fullName: )
  - name: )
    fullName: )
  nameWithType: Enumerable.ToDictionary<TSource, TKey, TElement>(IEnumerable<TSource>, Func<TSource, TKey>, Func<TSource, TElement>, IEqualityComparer<TKey>)
  nameWithType.vb: Enumerable.ToDictionary(Of TSource, TKey, TElement)(IEnumerable(Of TSource), Func(Of TSource, TKey), Func(Of TSource, TElement), IEqualityComparer(Of TKey))
  commentId: M:System.Linq.Enumerable.ToDictionary``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})
- uid: System.Linq.Enumerable.ToList``1(System.Collections.Generic.IEnumerable{``0})
  isExternal: true
  name: ToList<TSource>(IEnumerable<TSource>)
  fullName: System.Linq.Enumerable.ToList<TSource>(System.Collections.Generic.IEnumerable<TSource>)
  fullname.vb: System.Linq.Enumerable.ToList(Of TSource)(System.Collections.Generic.IEnumerable(Of TSource))
  name.vb: ToList(Of TSource)(IEnumerable(Of TSource))
  spec.csharp:
  - uid: System.Linq.Enumerable.ToList``1(System.Collections.Generic.IEnumerable{``0})
    name: ToList<TSource>
    fullName: System.Linq.Enumerable.ToList<TSource>
  - name: (
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    fullName: <
  - name: TSource
    fullName: TSource
  - name: '>'
    fullName: '>'
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Linq.Enumerable.ToList``1(System.Collections.Generic.IEnumerable{``0})
    name: ToList(Of TSource)
    fullName: System.Linq.Enumerable.ToList(Of TSource)
  - name: (
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - name: TSource
    fullName: TSource
  - name: )
    fullName: )
  - name: )
    fullName: )
  nameWithType: Enumerable.ToList<TSource>(IEnumerable<TSource>)
  nameWithType.vb: Enumerable.ToList(Of TSource)(IEnumerable(Of TSource))
  commentId: M:System.Linq.Enumerable.ToList``1(System.Collections.Generic.IEnumerable{``0})
- uid: System.Linq.Enumerable.ToLookup``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})
  isExternal: true
  name: ToLookup<TSource, TKey>(IEnumerable<TSource>, Func<TSource, TKey>)
  fullName: System.Linq.Enumerable.ToLookup<TSource, TKey>(System.Collections.Generic.IEnumerable<TSource>, System.Func<TSource, TKey>)
  fullname.vb: System.Linq.Enumerable.ToLookup(Of TSource, TKey)(System.Collections.Generic.IEnumerable(Of TSource), System.Func(Of TSource, TKey))
  name.vb: ToLookup(Of TSource, TKey)(IEnumerable(Of TSource), Func(Of TSource, TKey))
  spec.csharp:
  - uid: System.Linq.Enumerable.ToLookup``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})
    name: ToLookup<TSource, TKey>
    fullName: System.Linq.Enumerable.ToLookup<TSource, TKey>
  - name: (
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    fullName: <
  - name: TSource
    fullName: TSource
  - name: '>'
    fullName: '>'
  - name: ', '
    fullName: ', '
  - uid: System.Func`2
    name: Func
    fullName: System.Func
    isExternal: true
  - name: <
    fullName: <
  - name: TSource
    fullName: TSource
  - name: ', '
    fullName: ', '
  - name: TKey
    fullName: TKey
  - name: '>'
    fullName: '>'
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Linq.Enumerable.ToLookup``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})
    name: ToLookup(Of TSource, TKey)
    fullName: System.Linq.Enumerable.ToLookup(Of TSource, TKey)
  - name: (
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - name: TSource
    fullName: TSource
  - name: )
    fullName: )
  - name: ', '
    fullName: ', '
  - uid: System.Func`2
    name: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - name: TSource
    fullName: TSource
  - name: ', '
    fullName: ', '
  - name: TKey
    fullName: TKey
  - name: )
    fullName: )
  - name: )
    fullName: )
  nameWithType: Enumerable.ToLookup<TSource, TKey>(IEnumerable<TSource>, Func<TSource, TKey>)
  nameWithType.vb: Enumerable.ToLookup(Of TSource, TKey)(IEnumerable(Of TSource), Func(Of TSource, TKey))
  commentId: M:System.Linq.Enumerable.ToLookup``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})
- uid: System.Linq.Enumerable.ToLookup``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IEqualityComparer{``1})
  isExternal: true
  name: ToLookup<TSource, TKey>(IEnumerable<TSource>, Func<TSource, TKey>, IEqualityComparer<TKey>)
  fullName: System.Linq.Enumerable.ToLookup<TSource, TKey>(System.Collections.Generic.IEnumerable<TSource>, System.Func<TSource, TKey>, System.Collections.Generic.IEqualityComparer<TKey>)
  fullname.vb: System.Linq.Enumerable.ToLookup(Of TSource, TKey)(System.Collections.Generic.IEnumerable(Of TSource), System.Func(Of TSource, TKey), System.Collections.Generic.IEqualityComparer(Of TKey))
  name.vb: ToLookup(Of TSource, TKey)(IEnumerable(Of TSource), Func(Of TSource, TKey), IEqualityComparer(Of TKey))
  spec.csharp:
  - uid: System.Linq.Enumerable.ToLookup``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IEqualityComparer{``1})
    name: ToLookup<TSource, TKey>
    fullName: System.Linq.Enumerable.ToLookup<TSource, TKey>
  - name: (
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    fullName: <
  - name: TSource
    fullName: TSource
  - name: '>'
    fullName: '>'
  - name: ', '
    fullName: ', '
  - uid: System.Func`2
    name: Func
    fullName: System.Func
    isExternal: true
  - name: <
    fullName: <
  - name: TSource
    fullName: TSource
  - name: ', '
    fullName: ', '
  - name: TKey
    fullName: TKey
  - name: '>'
    fullName: '>'
  - name: ', '
    fullName: ', '
  - uid: System.Collections.Generic.IEqualityComparer`1
    name: IEqualityComparer
    fullName: System.Collections.Generic.IEqualityComparer
    isExternal: true
  - name: <
    fullName: <
  - name: TKey
    fullName: TKey
  - name: '>'
    fullName: '>'
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Linq.Enumerable.ToLookup``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IEqualityComparer{``1})
    name: ToLookup(Of TSource, TKey)
    fullName: System.Linq.Enumerable.ToLookup(Of TSource, TKey)
  - name: (
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - name: TSource
    fullName: TSource
  - name: )
    fullName: )
  - name: ', '
    fullName: ', '
  - uid: System.Func`2
    name: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - name: TSource
    fullName: TSource
  - name: ', '
    fullName: ', '
  - name: TKey
    fullName: TKey
  - name: )
    fullName: )
  - name: ', '
    fullName: ', '
  - uid: System.Collections.Generic.IEqualityComparer`1
    name: IEqualityComparer
    fullName: System.Collections.Generic.IEqualityComparer
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - name: TKey
    fullName: TKey
  - name: )
    fullName: )
  - name: )
    fullName: )
  nameWithType: Enumerable.ToLookup<TSource, TKey>(IEnumerable<TSource>, Func<TSource, TKey>, IEqualityComparer<TKey>)
  nameWithType.vb: Enumerable.ToLookup(Of TSource, TKey)(IEnumerable(Of TSource), Func(Of TSource, TKey), IEqualityComparer(Of TKey))
  commentId: M:System.Linq.Enumerable.ToLookup``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IEqualityComparer{``1})
- uid: System.Linq.Enumerable.ToLookup``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2})
  isExternal: true
  name: ToLookup<TSource, TKey, TElement>(IEnumerable<TSource>, Func<TSource, TKey>, Func<TSource, TElement>)
  fullName: System.Linq.Enumerable.ToLookup<TSource, TKey, TElement>(System.Collections.Generic.IEnumerable<TSource>, System.Func<TSource, TKey>, System.Func<TSource, TElement>)
  fullname.vb: System.Linq.Enumerable.ToLookup(Of TSource, TKey, TElement)(System.Collections.Generic.IEnumerable(Of TSource), System.Func(Of TSource, TKey), System.Func(Of TSource, TElement))
  name.vb: ToLookup(Of TSource, TKey, TElement)(IEnumerable(Of TSource), Func(Of TSource, TKey), Func(Of TSource, TElement))
  spec.csharp:
  - uid: System.Linq.Enumerable.ToLookup``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2})
    name: ToLookup<TSource, TKey, TElement>
    fullName: System.Linq.Enumerable.ToLookup<TSource, TKey, TElement>
  - name: (
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    fullName: <
  - name: TSource
    fullName: TSource
  - name: '>'
    fullName: '>'
  - name: ', '
    fullName: ', '
  - uid: System.Func`2
    name: Func
    fullName: System.Func
    isExternal: true
  - name: <
    fullName: <
  - name: TSource
    fullName: TSource
  - name: ', '
    fullName: ', '
  - name: TKey
    fullName: TKey
  - name: '>'
    fullName: '>'
  - name: ', '
    fullName: ', '
  - uid: System.Func`2
    name: Func
    fullName: System.Func
    isExternal: true
  - name: <
    fullName: <
  - name: TSource
    fullName: TSource
  - name: ', '
    fullName: ', '
  - name: TElement
    fullName: TElement
  - name: '>'
    fullName: '>'
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Linq.Enumerable.ToLookup``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2})
    name: ToLookup(Of TSource, TKey, TElement)
    fullName: System.Linq.Enumerable.ToLookup(Of TSource, TKey, TElement)
  - name: (
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - name: TSource
    fullName: TSource
  - name: )
    fullName: )
  - name: ', '
    fullName: ', '
  - uid: System.Func`2
    name: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - name: TSource
    fullName: TSource
  - name: ', '
    fullName: ', '
  - name: TKey
    fullName: TKey
  - name: )
    fullName: )
  - name: ', '
    fullName: ', '
  - uid: System.Func`2
    name: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - name: TSource
    fullName: TSource
  - name: ', '
    fullName: ', '
  - name: TElement
    fullName: TElement
  - name: )
    fullName: )
  - name: )
    fullName: )
  nameWithType: Enumerable.ToLookup<TSource, TKey, TElement>(IEnumerable<TSource>, Func<TSource, TKey>, Func<TSource, TElement>)
  nameWithType.vb: Enumerable.ToLookup(Of TSource, TKey, TElement)(IEnumerable(Of TSource), Func(Of TSource, TKey), Func(Of TSource, TElement))
  commentId: M:System.Linq.Enumerable.ToLookup``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2})
- uid: System.Linq.Enumerable.ToLookup``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})
  isExternal: true
  name: ToLookup<TSource, TKey, TElement>(IEnumerable<TSource>, Func<TSource, TKey>, Func<TSource, TElement>, IEqualityComparer<TKey>)
  fullName: System.Linq.Enumerable.ToLookup<TSource, TKey, TElement>(System.Collections.Generic.IEnumerable<TSource>, System.Func<TSource, TKey>, System.Func<TSource, TElement>, System.Collections.Generic.IEqualityComparer<TKey>)
  fullname.vb: System.Linq.Enumerable.ToLookup(Of TSource, TKey, TElement)(System.Collections.Generic.IEnumerable(Of TSource), System.Func(Of TSource, TKey), System.Func(Of TSource, TElement), System.Collections.Generic.IEqualityComparer(Of TKey))
  name.vb: ToLookup(Of TSource, TKey, TElement)(IEnumerable(Of TSource), Func(Of TSource, TKey), Func(Of TSource, TElement), IEqualityComparer(Of TKey))
  spec.csharp:
  - uid: System.Linq.Enumerable.ToLookup``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})
    name: ToLookup<TSource, TKey, TElement>
    fullName: System.Linq.Enumerable.ToLookup<TSource, TKey, TElement>
  - name: (
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    fullName: <
  - name: TSource
    fullName: TSource
  - name: '>'
    fullName: '>'
  - name: ', '
    fullName: ', '
  - uid: System.Func`2
    name: Func
    fullName: System.Func
    isExternal: true
  - name: <
    fullName: <
  - name: TSource
    fullName: TSource
  - name: ', '
    fullName: ', '
  - name: TKey
    fullName: TKey
  - name: '>'
    fullName: '>'
  - name: ', '
    fullName: ', '
  - uid: System.Func`2
    name: Func
    fullName: System.Func
    isExternal: true
  - name: <
    fullName: <
  - name: TSource
    fullName: TSource
  - name: ', '
    fullName: ', '
  - name: TElement
    fullName: TElement
  - name: '>'
    fullName: '>'
  - name: ', '
    fullName: ', '
  - uid: System.Collections.Generic.IEqualityComparer`1
    name: IEqualityComparer
    fullName: System.Collections.Generic.IEqualityComparer
    isExternal: true
  - name: <
    fullName: <
  - name: TKey
    fullName: TKey
  - name: '>'
    fullName: '>'
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Linq.Enumerable.ToLookup``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})
    name: ToLookup(Of TSource, TKey, TElement)
    fullName: System.Linq.Enumerable.ToLookup(Of TSource, TKey, TElement)
  - name: (
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - name: TSource
    fullName: TSource
  - name: )
    fullName: )
  - name: ', '
    fullName: ', '
  - uid: System.Func`2
    name: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - name: TSource
    fullName: TSource
  - name: ', '
    fullName: ', '
  - name: TKey
    fullName: TKey
  - name: )
    fullName: )
  - name: ', '
    fullName: ', '
  - uid: System.Func`2
    name: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - name: TSource
    fullName: TSource
  - name: ', '
    fullName: ', '
  - name: TElement
    fullName: TElement
  - name: )
    fullName: )
  - name: ', '
    fullName: ', '
  - uid: System.Collections.Generic.IEqualityComparer`1
    name: IEqualityComparer
    fullName: System.Collections.Generic.IEqualityComparer
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - name: TKey
    fullName: TKey
  - name: )
    fullName: )
  - name: )
    fullName: )
  nameWithType: Enumerable.ToLookup<TSource, TKey, TElement>(IEnumerable<TSource>, Func<TSource, TKey>, Func<TSource, TElement>, IEqualityComparer<TKey>)
  nameWithType.vb: Enumerable.ToLookup(Of TSource, TKey, TElement)(IEnumerable(Of TSource), Func(Of TSource, TKey), Func(Of TSource, TElement), IEqualityComparer(Of TKey))
  commentId: M:System.Linq.Enumerable.ToLookup``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})
- uid: System.Linq.Enumerable.Union``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0})
  isExternal: true
  name: Union<TSource>(IEnumerable<TSource>, IEnumerable<TSource>)
  fullName: System.Linq.Enumerable.Union<TSource>(System.Collections.Generic.IEnumerable<TSource>, System.Collections.Generic.IEnumerable<TSource>)
  fullname.vb: System.Linq.Enumerable.Union(Of TSource)(System.Collections.Generic.IEnumerable(Of TSource), System.Collections.Generic.IEnumerable(Of TSource))
  name.vb: Union(Of TSource)(IEnumerable(Of TSource), IEnumerable(Of TSource))
  spec.csharp:
  - uid: System.Linq.Enumerable.Union``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0})
    name: Union<TSource>
    fullName: System.Linq.Enumerable.Union<TSource>
  - name: (
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    fullName: <
  - name: TSource
    fullName: TSource
  - name: '>'
    fullName: '>'
  - name: ', '
    fullName: ', '
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    fullName: <
  - name: TSource
    fullName: TSource
  - name: '>'
    fullName: '>'
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Linq.Enumerable.Union``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0})
    name: Union(Of TSource)
    fullName: System.Linq.Enumerable.Union(Of TSource)
  - name: (
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - name: TSource
    fullName: TSource
  - name: )
    fullName: )
  - name: ', '
    fullName: ', '
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - name: TSource
    fullName: TSource
  - name: )
    fullName: )
  - name: )
    fullName: )
  nameWithType: Enumerable.Union<TSource>(IEnumerable<TSource>, IEnumerable<TSource>)
  nameWithType.vb: Enumerable.Union(Of TSource)(IEnumerable(Of TSource), IEnumerable(Of TSource))
  commentId: M:System.Linq.Enumerable.Union``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0})
- uid: System.Linq.Enumerable.Union``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEqualityComparer{``0})
  isExternal: true
  name: Union<TSource>(IEnumerable<TSource>, IEnumerable<TSource>, IEqualityComparer<TSource>)
  fullName: System.Linq.Enumerable.Union<TSource>(System.Collections.Generic.IEnumerable<TSource>, System.Collections.Generic.IEnumerable<TSource>, System.Collections.Generic.IEqualityComparer<TSource>)
  fullname.vb: System.Linq.Enumerable.Union(Of TSource)(System.Collections.Generic.IEnumerable(Of TSource), System.Collections.Generic.IEnumerable(Of TSource), System.Collections.Generic.IEqualityComparer(Of TSource))
  name.vb: Union(Of TSource)(IEnumerable(Of TSource), IEnumerable(Of TSource), IEqualityComparer(Of TSource))
  spec.csharp:
  - uid: System.Linq.Enumerable.Union``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEqualityComparer{``0})
    name: Union<TSource>
    fullName: System.Linq.Enumerable.Union<TSource>
  - name: (
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    fullName: <
  - name: TSource
    fullName: TSource
  - name: '>'
    fullName: '>'
  - name: ', '
    fullName: ', '
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    fullName: <
  - name: TSource
    fullName: TSource
  - name: '>'
    fullName: '>'
  - name: ', '
    fullName: ', '
  - uid: System.Collections.Generic.IEqualityComparer`1
    name: IEqualityComparer
    fullName: System.Collections.Generic.IEqualityComparer
    isExternal: true
  - name: <
    fullName: <
  - name: TSource
    fullName: TSource
  - name: '>'
    fullName: '>'
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Linq.Enumerable.Union``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEqualityComparer{``0})
    name: Union(Of TSource)
    fullName: System.Linq.Enumerable.Union(Of TSource)
  - name: (
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - name: TSource
    fullName: TSource
  - name: )
    fullName: )
  - name: ', '
    fullName: ', '
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - name: TSource
    fullName: TSource
  - name: )
    fullName: )
  - name: ', '
    fullName: ', '
  - uid: System.Collections.Generic.IEqualityComparer`1
    name: IEqualityComparer
    fullName: System.Collections.Generic.IEqualityComparer
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - name: TSource
    fullName: TSource
  - name: )
    fullName: )
  - name: )
    fullName: )
  nameWithType: Enumerable.Union<TSource>(IEnumerable<TSource>, IEnumerable<TSource>, IEqualityComparer<TSource>)
  nameWithType.vb: Enumerable.Union(Of TSource)(IEnumerable(Of TSource), IEnumerable(Of TSource), IEqualityComparer(Of TSource))
  commentId: M:System.Linq.Enumerable.Union``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEqualityComparer{``0})
- uid: System.Linq.Enumerable.Where``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})
  isExternal: true
  name: Where<TSource>(IEnumerable<TSource>, Func<TSource, Boolean>)
  fullName: System.Linq.Enumerable.Where<TSource>(System.Collections.Generic.IEnumerable<TSource>, System.Func<TSource, System.Boolean>)
  fullname.vb: System.Linq.Enumerable.Where(Of TSource)(System.Collections.Generic.IEnumerable(Of TSource), System.Func(Of TSource, System.Boolean))
  name.vb: Where(Of TSource)(IEnumerable(Of TSource), Func(Of TSource, Boolean))
  spec.csharp:
  - uid: System.Linq.Enumerable.Where``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})
    name: Where<TSource>
    fullName: System.Linq.Enumerable.Where<TSource>
  - name: (
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    fullName: <
  - name: TSource
    fullName: TSource
  - name: '>'
    fullName: '>'
  - name: ', '
    fullName: ', '
  - uid: System.Func`2
    name: Func
    fullName: System.Func
    isExternal: true
  - name: <
    fullName: <
  - name: TSource
    fullName: TSource
  - name: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: '>'
    fullName: '>'
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Linq.Enumerable.Where``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})
    name: Where(Of TSource)
    fullName: System.Linq.Enumerable.Where(Of TSource)
  - name: (
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - name: TSource
    fullName: TSource
  - name: )
    fullName: )
  - name: ', '
    fullName: ', '
  - uid: System.Func`2
    name: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - name: TSource
    fullName: TSource
  - name: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    fullName: )
  - name: )
    fullName: )
  nameWithType: Enumerable.Where<TSource>(IEnumerable<TSource>, Func<TSource, Boolean>)
  nameWithType.vb: Enumerable.Where(Of TSource)(IEnumerable(Of TSource), Func(Of TSource, Boolean))
  commentId: M:System.Linq.Enumerable.Where``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})
- uid: System.Linq.Enumerable.Where``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32,System.Boolean})
  isExternal: true
  name: Where<TSource>(IEnumerable<TSource>, Func<TSource, Int32, Boolean>)
  fullName: System.Linq.Enumerable.Where<TSource>(System.Collections.Generic.IEnumerable<TSource>, System.Func<TSource, System.Int32, System.Boolean>)
  fullname.vb: System.Linq.Enumerable.Where(Of TSource)(System.Collections.Generic.IEnumerable(Of TSource), System.Func(Of TSource, System.Int32, System.Boolean))
  name.vb: Where(Of TSource)(IEnumerable(Of TSource), Func(Of TSource, Int32, Boolean))
  spec.csharp:
  - uid: System.Linq.Enumerable.Where``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32,System.Boolean})
    name: Where<TSource>
    fullName: System.Linq.Enumerable.Where<TSource>
  - name: (
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    fullName: <
  - name: TSource
    fullName: TSource
  - name: '>'
    fullName: '>'
  - name: ', '
    fullName: ', '
  - uid: System.Func`3
    name: Func
    fullName: System.Func
    isExternal: true
  - name: <
    fullName: <
  - name: TSource
    fullName: TSource
  - name: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: '>'
    fullName: '>'
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Linq.Enumerable.Where``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32,System.Boolean})
    name: Where(Of TSource)
    fullName: System.Linq.Enumerable.Where(Of TSource)
  - name: (
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - name: TSource
    fullName: TSource
  - name: )
    fullName: )
  - name: ', '
    fullName: ', '
  - uid: System.Func`3
    name: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - name: TSource
    fullName: TSource
  - name: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    fullName: )
  - name: )
    fullName: )
  nameWithType: Enumerable.Where<TSource>(IEnumerable<TSource>, Func<TSource, Int32, Boolean>)
  nameWithType.vb: Enumerable.Where(Of TSource)(IEnumerable(Of TSource), Func(Of TSource, Int32, Boolean))
  commentId: M:System.Linq.Enumerable.Where``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32,System.Boolean})
- uid: System.Linq.Enumerable.Zip``3(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``1,``2})
  isExternal: true
  name: Zip<TFirst, TSecond, TResult>(IEnumerable<TFirst>, IEnumerable<TSecond>, Func<TFirst, TSecond, TResult>)
  fullName: System.Linq.Enumerable.Zip<TFirst, TSecond, TResult>(System.Collections.Generic.IEnumerable<TFirst>, System.Collections.Generic.IEnumerable<TSecond>, System.Func<TFirst, TSecond, TResult>)
  fullname.vb: System.Linq.Enumerable.Zip(Of TFirst, TSecond, TResult)(System.Collections.Generic.IEnumerable(Of TFirst), System.Collections.Generic.IEnumerable(Of TSecond), System.Func(Of TFirst, TSecond, TResult))
  name.vb: Zip(Of TFirst, TSecond, TResult)(IEnumerable(Of TFirst), IEnumerable(Of TSecond), Func(Of TFirst, TSecond, TResult))
  spec.csharp:
  - uid: System.Linq.Enumerable.Zip``3(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``1,``2})
    name: Zip<TFirst, TSecond, TResult>
    fullName: System.Linq.Enumerable.Zip<TFirst, TSecond, TResult>
  - name: (
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    fullName: <
  - name: TFirst
    fullName: TFirst
  - name: '>'
    fullName: '>'
  - name: ', '
    fullName: ', '
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    fullName: <
  - name: TSecond
    fullName: TSecond
  - name: '>'
    fullName: '>'
  - name: ', '
    fullName: ', '
  - uid: System.Func`3
    name: Func
    fullName: System.Func
    isExternal: true
  - name: <
    fullName: <
  - name: TFirst
    fullName: TFirst
  - name: ', '
    fullName: ', '
  - name: TSecond
    fullName: TSecond
  - name: ', '
    fullName: ', '
  - name: TResult
    fullName: TResult
  - name: '>'
    fullName: '>'
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Linq.Enumerable.Zip``3(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``1,``2})
    name: Zip(Of TFirst, TSecond, TResult)
    fullName: System.Linq.Enumerable.Zip(Of TFirst, TSecond, TResult)
  - name: (
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - name: TFirst
    fullName: TFirst
  - name: )
    fullName: )
  - name: ', '
    fullName: ', '
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - name: TSecond
    fullName: TSecond
  - name: )
    fullName: )
  - name: ', '
    fullName: ', '
  - uid: System.Func`3
    name: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - name: TFirst
    fullName: TFirst
  - name: ', '
    fullName: ', '
  - name: TSecond
    fullName: TSecond
  - name: ', '
    fullName: ', '
  - name: TResult
    fullName: TResult
  - name: )
    fullName: )
  - name: )
    fullName: )
  nameWithType: Enumerable.Zip<TFirst, TSecond, TResult>(IEnumerable<TFirst>, IEnumerable<TSecond>, Func<TFirst, TSecond, TResult>)
  nameWithType.vb: Enumerable.Zip(Of TFirst, TSecond, TResult)(IEnumerable(Of TFirst), IEnumerable(Of TSecond), Func(Of TFirst, TSecond, TResult))
  commentId: M:System.Linq.Enumerable.Zip``3(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``1,``2})
- uid: System.Linq
  isExternal: false
  name: System.Linq
  fullName: System.Linq
  nameWithType: System.Linq
  commentId: N:System.Linq
- uid: System.Collections.Generic.ICollection{System.Collections.Generic.KeyValuePair{{TKey},{TValue}}}.Count
  parent: System.Collections.Generic.ICollection{System.Collections.Generic.KeyValuePair{{TKey},{TValue}}}
  definition: System.Collections.Generic.ICollection`1.Count
  name: Count
  fullName: System.Collections.Generic.ICollection<System.Collections.Generic.KeyValuePair<TKey, TValue>>.Count
  fullname.vb: System.Collections.Generic.ICollection(Of System.Collections.Generic.KeyValuePair(Of TKey, TValue)).Count
  nameWithType: ICollection<KeyValuePair<TKey, TValue>>.Count
  nameWithType.vb: ICollection(Of KeyValuePair(Of TKey, TValue)).Count
  commentId: P:System.Collections.Generic.ICollection{System.Collections.Generic.KeyValuePair{`0,`1}}.Count
- uid: System.Collections.Generic.IReadOnlyCollection{System.Collections.Generic.KeyValuePair{{TKey},{TValue}}}.Count
  parent: System.Collections.Generic.IReadOnlyCollection{System.Collections.Generic.KeyValuePair{{TKey},{TValue}}}
  definition: System.Collections.Generic.IReadOnlyCollection`1.Count
  name: Count
  fullName: System.Collections.Generic.IReadOnlyCollection<System.Collections.Generic.KeyValuePair<TKey, TValue>>.Count
  fullname.vb: System.Collections.Generic.IReadOnlyCollection(Of System.Collections.Generic.KeyValuePair(Of TKey, TValue)).Count
  nameWithType: IReadOnlyCollection<KeyValuePair<TKey, TValue>>.Count
  nameWithType.vb: IReadOnlyCollection(Of KeyValuePair(Of TKey, TValue)).Count
  commentId: P:System.Collections.Generic.IReadOnlyCollection{System.Collections.Generic.KeyValuePair{`0,`1}}.Count
- uid: System.Collections.ICollection.Count
  parent: System.Collections.ICollection
  isExternal: false
  name: Count
  fullName: System.Collections.ICollection.Count
  nameWithType: ICollection.Count
  commentId: P:System.Collections.ICollection.Count
- uid: System.Int32
  parent: System
  isExternal: false
  name: Int32
  fullName: System.Int32
  nameWithType: Int32
  commentId: T:System.Int32
- uid: System.Collections.Generic.ICollection`1.Count
  isExternal: false
  name: Count
  fullName: System.Collections.Generic.ICollection<T>.Count
  fullname.vb: System.Collections.Generic.ICollection(Of T).Count
  nameWithType: ICollection<T>.Count
  nameWithType.vb: ICollection(Of T).Count
  commentId: P:System.Collections.Generic.ICollection`1.Count
- uid: System.Collections.Generic.IReadOnlyCollection`1.Count
  isExternal: false
  name: Count
  fullName: System.Collections.Generic.IReadOnlyCollection<T>.Count
  fullname.vb: System.Collections.Generic.IReadOnlyCollection(Of T).Count
  nameWithType: IReadOnlyCollection<T>.Count
  nameWithType.vb: IReadOnlyCollection(Of T).Count
  commentId: P:System.Collections.Generic.IReadOnlyCollection`1.Count
- uid: System.Collections.Generic.IReadOnlyDictionary{{TKey},{TValue}}.Item({TKey})
  parent: System.Collections.Generic.IReadOnlyDictionary{{TKey},{TValue}}
  definition: System.Collections.Generic.IReadOnlyDictionary`2.Item(`0)
  name: Item[TKey]
  fullName: System.Collections.Generic.IReadOnlyDictionary<TKey, TValue>.Item[TKey]
  fullname.vb: System.Collections.Generic.IReadOnlyDictionary(Of TKey, TValue).Item(TKey)
  name.vb: Item(TKey)
  spec.csharp:
  - uid: System.Collections.Generic.IReadOnlyDictionary`2.Item(`0)
    name: Item
    fullName: System.Collections.Generic.IReadOnlyDictionary<TKey, TValue>.Item
    isExternal: true
  - name: '['
    fullName: '['
  - name: TKey
    fullName: TKey
  - name: ']'
    fullName: ']'
  spec.vb:
  - uid: System.Collections.Generic.IReadOnlyDictionary`2.Item(`0)
    name: Item
    fullName: System.Collections.Generic.IReadOnlyDictionary(Of TKey, TValue).Item
    isExternal: true
  - name: (
    fullName: (
  - name: TKey
    fullName: TKey
  - name: )
    fullName: )
  nameWithType: IReadOnlyDictionary<TKey, TValue>.Item[TKey]
  nameWithType.vb: IReadOnlyDictionary(Of TKey, TValue).Item(TKey)
  commentId: P:System.Collections.Generic.IReadOnlyDictionary{`0,`1}.Item(`0)
- uid: '{TKey}'
  definition: TKey
  name: TKey
  fullName: TKey
  nameWithType: TKey
  commentId: '!:TKey'
- uid: '{TValue}'
  definition: TValue
  name: TValue
  fullName: TValue
  nameWithType: TValue
  commentId: '!:TValue'
- uid: System.Collections.Generic.IReadOnlyDictionary`2.Item(`0)
  isExternal: true
  name: Item[TKey]
  fullName: System.Collections.Generic.IReadOnlyDictionary<TKey, TValue>.Item[TKey]
  fullname.vb: System.Collections.Generic.IReadOnlyDictionary(Of TKey, TValue).Item(TKey)
  name.vb: Item(TKey)
  spec.csharp:
  - uid: System.Collections.Generic.IReadOnlyDictionary`2.Item(`0)
    name: Item
    fullName: System.Collections.Generic.IReadOnlyDictionary<TKey, TValue>.Item
    isExternal: true
  - name: '['
    fullName: '['
  - name: TKey
    fullName: TKey
  - name: ']'
    fullName: ']'
  spec.vb:
  - uid: System.Collections.Generic.IReadOnlyDictionary`2.Item(`0)
    name: Item
    fullName: System.Collections.Generic.IReadOnlyDictionary(Of TKey, TValue).Item
    isExternal: true
  - name: (
    fullName: (
  - name: TKey
    fullName: TKey
  - name: )
    fullName: )
  nameWithType: IReadOnlyDictionary<TKey, TValue>.Item[TKey]
  nameWithType.vb: IReadOnlyDictionary(Of TKey, TValue).Item(TKey)
  commentId: P:System.Collections.Generic.IReadOnlyDictionary`2.Item(`0)
- uid: TKey
  isExternal: false
  name: TKey
  fullName: TKey
  nameWithType: TKey
- uid: TValue
  isExternal: false
  name: TValue
  fullName: TValue
  nameWithType: TValue
- uid: System.Collections.ObjectModel.ReadOnlyDictionary`2.KeyCollection
  parent: System.Collections.ObjectModel
  isExternal: false
  name: ReadOnlyDictionary.KeyCollection<>
  fullName: System.Collections.ObjectModel.ReadOnlyDictionary.KeyCollection<>
  fullname.vb: System.Collections.ObjectModel.ReadOnlyDictionary.KeyCollection(Of )
  name.vb: ReadOnlyDictionary.KeyCollection(Of )
  spec.csharp:
  - uid: System.Collections.ObjectModel.ReadOnlyDictionary`2.KeyCollection
    name: ReadOnlyDictionary.KeyCollection
    fullName: System.Collections.ObjectModel.ReadOnlyDictionary.KeyCollection
  - name: <
    fullName: <
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.ObjectModel.ReadOnlyDictionary`2.KeyCollection
    name: ReadOnlyDictionary.KeyCollection
    fullName: System.Collections.ObjectModel.ReadOnlyDictionary.KeyCollection
  - name: '(Of '
    fullName: '(Of '
  - name: )
    fullName: )
  nameWithType: ReadOnlyDictionary.KeyCollection<>
  nameWithType.vb: ReadOnlyDictionary.KeyCollection(Of )
  commentId: T:System.Collections.ObjectModel.ReadOnlyDictionary`2.KeyCollection
- uid: System.Collections.Generic.ICollection{System.Collections.Generic.KeyValuePair{{TKey},{TValue}}}.IsReadOnly
  parent: System.Collections.Generic.ICollection{System.Collections.Generic.KeyValuePair{{TKey},{TValue}}}
  definition: System.Collections.Generic.ICollection`1.IsReadOnly
  name: IsReadOnly
  fullName: System.Collections.Generic.ICollection<System.Collections.Generic.KeyValuePair<TKey, TValue>>.IsReadOnly
  fullname.vb: System.Collections.Generic.ICollection(Of System.Collections.Generic.KeyValuePair(Of TKey, TValue)).IsReadOnly
  nameWithType: ICollection<KeyValuePair<TKey, TValue>>.IsReadOnly
  nameWithType.vb: ICollection(Of KeyValuePair(Of TKey, TValue)).IsReadOnly
  commentId: P:System.Collections.Generic.ICollection{System.Collections.Generic.KeyValuePair{`0,`1}}.IsReadOnly
- uid: System.Boolean
  parent: System
  isExternal: false
  name: Boolean
  fullName: System.Boolean
  nameWithType: Boolean
  commentId: T:System.Boolean
- uid: System.Collections.Generic.ICollection`1.IsReadOnly
  isExternal: false
  name: IsReadOnly
  fullName: System.Collections.Generic.ICollection<T>.IsReadOnly
  fullname.vb: System.Collections.Generic.ICollection(Of T).IsReadOnly
  nameWithType: ICollection<T>.IsReadOnly
  nameWithType.vb: ICollection(Of T).IsReadOnly
  commentId: P:System.Collections.Generic.ICollection`1.IsReadOnly
- uid: System.Collections.Generic.IDictionary{{TKey},{TValue}}.Item({TKey})
  parent: System.Collections.Generic.IDictionary{{TKey},{TValue}}
  definition: System.Collections.Generic.IDictionary`2.Item(`0)
  name: Item[TKey]
  fullName: System.Collections.Generic.IDictionary<TKey, TValue>.Item[TKey]
  fullname.vb: System.Collections.Generic.IDictionary(Of TKey, TValue).Item(TKey)
  name.vb: Item(TKey)
  spec.csharp:
  - uid: System.Collections.Generic.IDictionary`2.Item(`0)
    name: Item
    fullName: System.Collections.Generic.IDictionary<TKey, TValue>.Item
    isExternal: true
  - name: '['
    fullName: '['
  - name: TKey
    fullName: TKey
  - name: ']'
    fullName: ']'
  spec.vb:
  - uid: System.Collections.Generic.IDictionary`2.Item(`0)
    name: Item
    fullName: System.Collections.Generic.IDictionary(Of TKey, TValue).Item
    isExternal: true
  - name: (
    fullName: (
  - name: TKey
    fullName: TKey
  - name: )
    fullName: )
  nameWithType: IDictionary<TKey, TValue>.Item[TKey]
  nameWithType.vb: IDictionary(Of TKey, TValue).Item(TKey)
  commentId: P:System.Collections.Generic.IDictionary{`0,`1}.Item(`0)
- uid: System.Collections.Generic.IDictionary`2.Item(`0)
  isExternal: true
  name: Item[TKey]
  fullName: System.Collections.Generic.IDictionary<TKey, TValue>.Item[TKey]
  fullname.vb: System.Collections.Generic.IDictionary(Of TKey, TValue).Item(TKey)
  name.vb: Item(TKey)
  spec.csharp:
  - uid: System.Collections.Generic.IDictionary`2.Item(`0)
    name: Item
    fullName: System.Collections.Generic.IDictionary<TKey, TValue>.Item
    isExternal: true
  - name: '['
    fullName: '['
  - name: TKey
    fullName: TKey
  - name: ']'
    fullName: ']'
  spec.vb:
  - uid: System.Collections.Generic.IDictionary`2.Item(`0)
    name: Item
    fullName: System.Collections.Generic.IDictionary(Of TKey, TValue).Item
    isExternal: true
  - name: (
    fullName: (
  - name: TKey
    fullName: TKey
  - name: )
    fullName: )
  nameWithType: IDictionary<TKey, TValue>.Item[TKey]
  nameWithType.vb: IDictionary(Of TKey, TValue).Item(TKey)
  commentId: P:System.Collections.Generic.IDictionary`2.Item(`0)
- uid: System.Collections.Generic.IDictionary{{TKey},{TValue}}.Keys
  parent: System.Collections.Generic.IDictionary{{TKey},{TValue}}
  definition: System.Collections.Generic.IDictionary`2.Keys
  name: Keys
  fullName: System.Collections.Generic.IDictionary<TKey, TValue>.Keys
  fullname.vb: System.Collections.Generic.IDictionary(Of TKey, TValue).Keys
  nameWithType: IDictionary<TKey, TValue>.Keys
  nameWithType.vb: IDictionary(Of TKey, TValue).Keys
  commentId: P:System.Collections.Generic.IDictionary{`0,`1}.Keys
- uid: System.Collections.Generic.ICollection{{TKey}}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.ICollection`1
  name: ICollection<TKey>
  fullName: System.Collections.Generic.ICollection<TKey>
  fullname.vb: System.Collections.Generic.ICollection(Of TKey)
  name.vb: ICollection(Of TKey)
  spec.csharp:
  - uid: System.Collections.Generic.ICollection`1
    name: ICollection
    fullName: System.Collections.Generic.ICollection
  - name: <
    fullName: <
  - name: TKey
    fullName: TKey
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.ICollection`1
    name: ICollection
    fullName: System.Collections.Generic.ICollection
  - name: '(Of '
    fullName: '(Of '
  - name: TKey
    fullName: TKey
  - name: )
    fullName: )
  nameWithType: ICollection<TKey>
  nameWithType.vb: ICollection(Of TKey)
  commentId: T:System.Collections.Generic.ICollection{`0}
- uid: System.Collections.Generic.IDictionary`2.Keys
  isExternal: true
  name: Keys
  fullName: System.Collections.Generic.IDictionary<TKey, TValue>.Keys
  fullname.vb: System.Collections.Generic.IDictionary(Of TKey, TValue).Keys
  nameWithType: IDictionary<TKey, TValue>.Keys
  nameWithType.vb: IDictionary(Of TKey, TValue).Keys
  commentId: P:System.Collections.Generic.IDictionary`2.Keys
- uid: System.Collections.Generic.IDictionary{{TKey},{TValue}}.Values
  parent: System.Collections.Generic.IDictionary{{TKey},{TValue}}
  definition: System.Collections.Generic.IDictionary`2.Values
  name: Values
  fullName: System.Collections.Generic.IDictionary<TKey, TValue>.Values
  fullname.vb: System.Collections.Generic.IDictionary(Of TKey, TValue).Values
  nameWithType: IDictionary<TKey, TValue>.Values
  nameWithType.vb: IDictionary(Of TKey, TValue).Values
  commentId: P:System.Collections.Generic.IDictionary{`0,`1}.Values
- uid: System.Collections.Generic.ICollection{{TValue}}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.ICollection`1
  name: ICollection<TValue>
  fullName: System.Collections.Generic.ICollection<TValue>
  fullname.vb: System.Collections.Generic.ICollection(Of TValue)
  name.vb: ICollection(Of TValue)
  spec.csharp:
  - uid: System.Collections.Generic.ICollection`1
    name: ICollection
    fullName: System.Collections.Generic.ICollection
  - name: <
    fullName: <
  - name: TValue
    fullName: TValue
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.ICollection`1
    name: ICollection
    fullName: System.Collections.Generic.ICollection
  - name: '(Of '
    fullName: '(Of '
  - name: TValue
    fullName: TValue
  - name: )
    fullName: )
  nameWithType: ICollection<TValue>
  nameWithType.vb: ICollection(Of TValue)
  commentId: T:System.Collections.Generic.ICollection{`1}
- uid: System.Collections.Generic.IDictionary`2.Values
  isExternal: true
  name: Values
  fullName: System.Collections.Generic.IDictionary<TKey, TValue>.Values
  fullname.vb: System.Collections.Generic.IDictionary(Of TKey, TValue).Values
  nameWithType: IDictionary<TKey, TValue>.Values
  nameWithType.vb: IDictionary(Of TKey, TValue).Values
  commentId: P:System.Collections.Generic.IDictionary`2.Values
- uid: System.Collections.Generic.IReadOnlyDictionary{{TKey},{TValue}}.Keys
  parent: System.Collections.Generic.IReadOnlyDictionary{{TKey},{TValue}}
  definition: System.Collections.Generic.IReadOnlyDictionary`2.Keys
  name: Keys
  fullName: System.Collections.Generic.IReadOnlyDictionary<TKey, TValue>.Keys
  fullname.vb: System.Collections.Generic.IReadOnlyDictionary(Of TKey, TValue).Keys
  nameWithType: IReadOnlyDictionary<TKey, TValue>.Keys
  nameWithType.vb: IReadOnlyDictionary(Of TKey, TValue).Keys
  commentId: P:System.Collections.Generic.IReadOnlyDictionary{`0,`1}.Keys
- uid: System.Collections.Generic.IEnumerable{{TKey}}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IEnumerable`1
  name: IEnumerable<TKey>
  fullName: System.Collections.Generic.IEnumerable<TKey>
  fullname.vb: System.Collections.Generic.IEnumerable(Of TKey)
  name.vb: IEnumerable(Of TKey)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
  - name: <
    fullName: <
  - name: TKey
    fullName: TKey
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
  - name: '(Of '
    fullName: '(Of '
  - name: TKey
    fullName: TKey
  - name: )
    fullName: )
  nameWithType: IEnumerable<TKey>
  nameWithType.vb: IEnumerable(Of TKey)
  commentId: T:System.Collections.Generic.IEnumerable{`0}
- uid: System.Collections.Generic.IReadOnlyDictionary`2.Keys
  isExternal: true
  name: Keys
  fullName: System.Collections.Generic.IReadOnlyDictionary<TKey, TValue>.Keys
  fullname.vb: System.Collections.Generic.IReadOnlyDictionary(Of TKey, TValue).Keys
  nameWithType: IReadOnlyDictionary<TKey, TValue>.Keys
  nameWithType.vb: IReadOnlyDictionary(Of TKey, TValue).Keys
  commentId: P:System.Collections.Generic.IReadOnlyDictionary`2.Keys
- uid: System.Collections.Generic.IReadOnlyDictionary{{TKey},{TValue}}.Values
  parent: System.Collections.Generic.IReadOnlyDictionary{{TKey},{TValue}}
  definition: System.Collections.Generic.IReadOnlyDictionary`2.Values
  name: Values
  fullName: System.Collections.Generic.IReadOnlyDictionary<TKey, TValue>.Values
  fullname.vb: System.Collections.Generic.IReadOnlyDictionary(Of TKey, TValue).Values
  nameWithType: IReadOnlyDictionary<TKey, TValue>.Values
  nameWithType.vb: IReadOnlyDictionary(Of TKey, TValue).Values
  commentId: P:System.Collections.Generic.IReadOnlyDictionary{`0,`1}.Values
- uid: System.Collections.Generic.IEnumerable{{TValue}}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IEnumerable`1
  name: IEnumerable<TValue>
  fullName: System.Collections.Generic.IEnumerable<TValue>
  fullname.vb: System.Collections.Generic.IEnumerable(Of TValue)
  name.vb: IEnumerable(Of TValue)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
  - name: <
    fullName: <
  - name: TValue
    fullName: TValue
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
  - name: '(Of '
    fullName: '(Of '
  - name: TValue
    fullName: TValue
  - name: )
    fullName: )
  nameWithType: IEnumerable<TValue>
  nameWithType.vb: IEnumerable(Of TValue)
  commentId: T:System.Collections.Generic.IEnumerable{`1}
- uid: System.Collections.Generic.IReadOnlyDictionary`2.Values
  isExternal: true
  name: Values
  fullName: System.Collections.Generic.IReadOnlyDictionary<TKey, TValue>.Values
  fullname.vb: System.Collections.Generic.IReadOnlyDictionary(Of TKey, TValue).Values
  nameWithType: IReadOnlyDictionary<TKey, TValue>.Values
  nameWithType.vb: IReadOnlyDictionary(Of TKey, TValue).Values
  commentId: P:System.Collections.Generic.IReadOnlyDictionary`2.Values
- uid: System.Collections.ICollection.IsSynchronized
  parent: System.Collections.ICollection
  isExternal: false
  name: IsSynchronized
  fullName: System.Collections.ICollection.IsSynchronized
  nameWithType: ICollection.IsSynchronized
  commentId: P:System.Collections.ICollection.IsSynchronized
- uid: System.Collections.ICollection.SyncRoot
  parent: System.Collections.ICollection
  isExternal: false
  name: SyncRoot
  fullName: System.Collections.ICollection.SyncRoot
  nameWithType: ICollection.SyncRoot
  commentId: P:System.Collections.ICollection.SyncRoot
- uid: System.Collections.IDictionary.IsFixedSize
  parent: System.Collections.IDictionary
  isExternal: true
  name: IsFixedSize
  fullName: System.Collections.IDictionary.IsFixedSize
  nameWithType: IDictionary.IsFixedSize
  commentId: P:System.Collections.IDictionary.IsFixedSize
- uid: System.Collections.IDictionary.IsReadOnly
  parent: System.Collections.IDictionary
  isExternal: true
  name: IsReadOnly
  fullName: System.Collections.IDictionary.IsReadOnly
  nameWithType: IDictionary.IsReadOnly
  commentId: P:System.Collections.IDictionary.IsReadOnly
- uid: System.Collections.IDictionary.Item(System.Object)
  parent: System.Collections.IDictionary
  isExternal: true
  name: Item[Object]
  fullName: System.Collections.IDictionary.Item[System.Object]
  fullname.vb: System.Collections.IDictionary.Item(System.Object)
  name.vb: Item(Object)
  spec.csharp:
  - uid: System.Collections.IDictionary.Item(System.Object)
    name: Item
    fullName: System.Collections.IDictionary.Item
    isExternal: true
  - name: '['
    fullName: '['
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ']'
    fullName: ']'
  spec.vb:
  - uid: System.Collections.IDictionary.Item(System.Object)
    name: Item
    fullName: System.Collections.IDictionary.Item
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
  nameWithType: IDictionary.Item[Object]
  nameWithType.vb: IDictionary.Item(Object)
  commentId: P:System.Collections.IDictionary.Item(System.Object)
- uid: System.Collections.IDictionary.Keys
  parent: System.Collections.IDictionary
  isExternal: true
  name: Keys
  fullName: System.Collections.IDictionary.Keys
  nameWithType: IDictionary.Keys
  commentId: P:System.Collections.IDictionary.Keys
- uid: System.Collections.IDictionary.Values
  parent: System.Collections.IDictionary
  isExternal: true
  name: Values
  fullName: System.Collections.IDictionary.Values
  nameWithType: IDictionary.Values
  commentId: P:System.Collections.IDictionary.Values
- uid: System.Collections.ObjectModel.ReadOnlyDictionary`2.ValueCollection
  parent: System.Collections.ObjectModel
  isExternal: false
  name: ReadOnlyDictionary.ValueCollection<>
  fullName: System.Collections.ObjectModel.ReadOnlyDictionary.ValueCollection<>
  fullname.vb: System.Collections.ObjectModel.ReadOnlyDictionary.ValueCollection(Of )
  name.vb: ReadOnlyDictionary.ValueCollection(Of )
  spec.csharp:
  - uid: System.Collections.ObjectModel.ReadOnlyDictionary`2.ValueCollection
    name: ReadOnlyDictionary.ValueCollection
    fullName: System.Collections.ObjectModel.ReadOnlyDictionary.ValueCollection
  - name: <
    fullName: <
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.ObjectModel.ReadOnlyDictionary`2.ValueCollection
    name: ReadOnlyDictionary.ValueCollection
    fullName: System.Collections.ObjectModel.ReadOnlyDictionary.ValueCollection
  - name: '(Of '
    fullName: '(Of '
  - name: )
    fullName: )
  nameWithType: ReadOnlyDictionary.ValueCollection<>
  nameWithType.vb: ReadOnlyDictionary.ValueCollection(Of )
  commentId: T:System.Collections.ObjectModel.ReadOnlyDictionary`2.ValueCollection
- uid: System.Collections.Generic.IDictionary{{TKey},{TValue}}.ContainsKey({TKey})
  parent: System.Collections.Generic.IDictionary{{TKey},{TValue}}
  definition: System.Collections.Generic.IDictionary`2.ContainsKey(`0)
  name: ContainsKey(TKey)
  fullName: System.Collections.Generic.IDictionary<TKey, TValue>.ContainsKey(TKey)
  fullname.vb: System.Collections.Generic.IDictionary(Of TKey, TValue).ContainsKey(TKey)
  spec.csharp:
  - uid: System.Collections.Generic.IDictionary`2.ContainsKey(`0)
    name: ContainsKey
    fullName: System.Collections.Generic.IDictionary<TKey, TValue>.ContainsKey
    isExternal: true
  - name: (
    fullName: (
  - name: TKey
    fullName: TKey
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Collections.Generic.IDictionary`2.ContainsKey(`0)
    name: ContainsKey
    fullName: System.Collections.Generic.IDictionary(Of TKey, TValue).ContainsKey
    isExternal: true
  - name: (
    fullName: (
  - name: TKey
    fullName: TKey
  - name: )
    fullName: )
  nameWithType: IDictionary<TKey, TValue>.ContainsKey(TKey)
  nameWithType.vb: IDictionary(Of TKey, TValue).ContainsKey(TKey)
  commentId: M:System.Collections.Generic.IDictionary{`0,`1}.ContainsKey(`0)
- uid: System.Collections.Generic.IReadOnlyDictionary{{TKey},{TValue}}.ContainsKey({TKey})
  parent: System.Collections.Generic.IReadOnlyDictionary{{TKey},{TValue}}
  definition: System.Collections.Generic.IReadOnlyDictionary`2.ContainsKey(`0)
  name: ContainsKey(TKey)
  fullName: System.Collections.Generic.IReadOnlyDictionary<TKey, TValue>.ContainsKey(TKey)
  fullname.vb: System.Collections.Generic.IReadOnlyDictionary(Of TKey, TValue).ContainsKey(TKey)
  spec.csharp:
  - uid: System.Collections.Generic.IReadOnlyDictionary`2.ContainsKey(`0)
    name: ContainsKey
    fullName: System.Collections.Generic.IReadOnlyDictionary<TKey, TValue>.ContainsKey
    isExternal: true
  - name: (
    fullName: (
  - name: TKey
    fullName: TKey
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Collections.Generic.IReadOnlyDictionary`2.ContainsKey(`0)
    name: ContainsKey
    fullName: System.Collections.Generic.IReadOnlyDictionary(Of TKey, TValue).ContainsKey
    isExternal: true
  - name: (
    fullName: (
  - name: TKey
    fullName: TKey
  - name: )
    fullName: )
  nameWithType: IReadOnlyDictionary<TKey, TValue>.ContainsKey(TKey)
  nameWithType.vb: IReadOnlyDictionary(Of TKey, TValue).ContainsKey(TKey)
  commentId: M:System.Collections.Generic.IReadOnlyDictionary{`0,`1}.ContainsKey(`0)
- uid: System.Collections.Generic.IDictionary`2.ContainsKey(`0)
  isExternal: true
  name: ContainsKey(TKey)
  fullName: System.Collections.Generic.IDictionary<TKey, TValue>.ContainsKey(TKey)
  fullname.vb: System.Collections.Generic.IDictionary(Of TKey, TValue).ContainsKey(TKey)
  spec.csharp:
  - uid: System.Collections.Generic.IDictionary`2.ContainsKey(`0)
    name: ContainsKey
    fullName: System.Collections.Generic.IDictionary<TKey, TValue>.ContainsKey
    isExternal: true
  - name: (
    fullName: (
  - name: TKey
    fullName: TKey
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Collections.Generic.IDictionary`2.ContainsKey(`0)
    name: ContainsKey
    fullName: System.Collections.Generic.IDictionary(Of TKey, TValue).ContainsKey
    isExternal: true
  - name: (
    fullName: (
  - name: TKey
    fullName: TKey
  - name: )
    fullName: )
  nameWithType: IDictionary<TKey, TValue>.ContainsKey(TKey)
  nameWithType.vb: IDictionary(Of TKey, TValue).ContainsKey(TKey)
  commentId: M:System.Collections.Generic.IDictionary`2.ContainsKey(`0)
- uid: System.Collections.Generic.IReadOnlyDictionary`2.ContainsKey(`0)
  isExternal: true
  name: ContainsKey(TKey)
  fullName: System.Collections.Generic.IReadOnlyDictionary<TKey, TValue>.ContainsKey(TKey)
  fullname.vb: System.Collections.Generic.IReadOnlyDictionary(Of TKey, TValue).ContainsKey(TKey)
  spec.csharp:
  - uid: System.Collections.Generic.IReadOnlyDictionary`2.ContainsKey(`0)
    name: ContainsKey
    fullName: System.Collections.Generic.IReadOnlyDictionary<TKey, TValue>.ContainsKey
    isExternal: true
  - name: (
    fullName: (
  - name: TKey
    fullName: TKey
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Collections.Generic.IReadOnlyDictionary`2.ContainsKey(`0)
    name: ContainsKey
    fullName: System.Collections.Generic.IReadOnlyDictionary(Of TKey, TValue).ContainsKey
    isExternal: true
  - name: (
    fullName: (
  - name: TKey
    fullName: TKey
  - name: )
    fullName: )
  nameWithType: IReadOnlyDictionary<TKey, TValue>.ContainsKey(TKey)
  nameWithType.vb: IReadOnlyDictionary(Of TKey, TValue).ContainsKey(TKey)
  commentId: M:System.Collections.Generic.IReadOnlyDictionary`2.ContainsKey(`0)
- uid: System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{{TKey},{TValue}}}.GetEnumerator
  parent: System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{{TKey},{TValue}}}
  definition: System.Collections.Generic.IEnumerable`1.GetEnumerator
  name: GetEnumerator()
  fullName: System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<TKey, TValue>>.GetEnumerator()
  fullname.vb: System.Collections.Generic.IEnumerable(Of System.Collections.Generic.KeyValuePair(Of TKey, TValue)).GetEnumerator()
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1.GetEnumerator
    name: GetEnumerator
    fullName: System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<TKey, TValue>>.GetEnumerator
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1.GetEnumerator
    name: GetEnumerator
    fullName: System.Collections.Generic.IEnumerable(Of System.Collections.Generic.KeyValuePair(Of TKey, TValue)).GetEnumerator
  - name: (
    fullName: (
  - name: )
    fullName: )
  nameWithType: IEnumerable<KeyValuePair<TKey, TValue>>.GetEnumerator()
  nameWithType.vb: IEnumerable(Of KeyValuePair(Of TKey, TValue)).GetEnumerator()
  commentId: M:System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{`0,`1}}.GetEnumerator
- uid: System.Collections.Generic.IEnumerator{System.Collections.Generic.KeyValuePair{{TKey},{TValue}}}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IEnumerator`1
  name: IEnumerator<KeyValuePair<TKey, TValue>>
  fullName: System.Collections.Generic.IEnumerator<System.Collections.Generic.KeyValuePair<TKey, TValue>>
  fullname.vb: System.Collections.Generic.IEnumerator(Of System.Collections.Generic.KeyValuePair(Of TKey, TValue))
  name.vb: IEnumerator(Of KeyValuePair(Of TKey, TValue))
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerator`1
    name: IEnumerator
    fullName: System.Collections.Generic.IEnumerator
    isExternal: true
  - name: <
    fullName: <
  - uid: System.Collections.Generic.KeyValuePair`2
    name: KeyValuePair
    fullName: System.Collections.Generic.KeyValuePair
    isExternal: true
  - name: <
    fullName: <
  - name: TKey
    fullName: TKey
  - name: ', '
    fullName: ', '
  - name: TValue
    fullName: TValue
  - name: '>'
    fullName: '>'
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerator`1
    name: IEnumerator
    fullName: System.Collections.Generic.IEnumerator
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - uid: System.Collections.Generic.KeyValuePair`2
    name: KeyValuePair
    fullName: System.Collections.Generic.KeyValuePair
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - name: TKey
    fullName: TKey
  - name: ', '
    fullName: ', '
  - name: TValue
    fullName: TValue
  - name: )
    fullName: )
  - name: )
    fullName: )
  nameWithType: IEnumerator<KeyValuePair<TKey, TValue>>
  nameWithType.vb: IEnumerator(Of KeyValuePair(Of TKey, TValue))
  commentId: T:System.Collections.Generic.IEnumerator{System.Collections.Generic.KeyValuePair{`0,`1}}
- uid: System.Collections.Generic.IEnumerable`1.GetEnumerator
  isExternal: false
  name: GetEnumerator()
  fullName: System.Collections.Generic.IEnumerable<T>.GetEnumerator()
  fullname.vb: System.Collections.Generic.IEnumerable(Of T).GetEnumerator()
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1.GetEnumerator
    name: GetEnumerator
    fullName: System.Collections.Generic.IEnumerable<T>.GetEnumerator
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1.GetEnumerator
    name: GetEnumerator
    fullName: System.Collections.Generic.IEnumerable(Of T).GetEnumerator
  - name: (
    fullName: (
  - name: )
    fullName: )
  nameWithType: IEnumerable<T>.GetEnumerator()
  nameWithType.vb: IEnumerable(Of T).GetEnumerator()
  commentId: M:System.Collections.Generic.IEnumerable`1.GetEnumerator
- uid: System.Collections.Generic.IEnumerator`1
  isExternal: false
  name: IEnumerator<T>
  fullName: System.Collections.Generic.IEnumerator<T>
  fullname.vb: System.Collections.Generic.IEnumerator(Of T)
  name.vb: IEnumerator(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerator`1
    name: IEnumerator
    fullName: System.Collections.Generic.IEnumerator
  - name: <
    fullName: <
  - name: T
    fullName: T
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerator`1
    name: IEnumerator
    fullName: System.Collections.Generic.IEnumerator
  - name: '(Of '
    fullName: '(Of '
  - name: T
    fullName: T
  - name: )
    fullName: )
  nameWithType: IEnumerator<T>
  nameWithType.vb: IEnumerator(Of T)
  commentId: T:System.Collections.Generic.IEnumerator`1
- uid: System.Collections.Generic.ICollection{System.Collections.Generic.KeyValuePair{{TKey},{TValue}}}.Add(System.Collections.Generic.KeyValuePair{{TKey},{TValue}})
  parent: System.Collections.Generic.ICollection{System.Collections.Generic.KeyValuePair{{TKey},{TValue}}}
  definition: System.Collections.Generic.ICollection`1.Add(`0)
  name: Add(KeyValuePair<TKey, TValue>)
  fullName: System.Collections.Generic.ICollection<System.Collections.Generic.KeyValuePair<TKey, TValue>>.Add(System.Collections.Generic.KeyValuePair<TKey, TValue>)
  fullname.vb: System.Collections.Generic.ICollection(Of System.Collections.Generic.KeyValuePair(Of TKey, TValue)).Add(System.Collections.Generic.KeyValuePair(Of TKey, TValue))
  name.vb: Add(KeyValuePair(Of TKey, TValue))
  spec.csharp:
  - uid: System.Collections.Generic.ICollection`1.Add(`0)
    name: Add
    fullName: System.Collections.Generic.ICollection<System.Collections.Generic.KeyValuePair<TKey, TValue>>.Add
  - name: (
    fullName: (
  - uid: System.Collections.Generic.KeyValuePair`2
    name: KeyValuePair
    fullName: System.Collections.Generic.KeyValuePair
  - name: <
    fullName: <
  - name: TKey
    fullName: TKey
  - name: ', '
    fullName: ', '
  - name: TValue
    fullName: TValue
  - name: '>'
    fullName: '>'
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Collections.Generic.ICollection`1.Add(`0)
    name: Add
    fullName: System.Collections.Generic.ICollection(Of System.Collections.Generic.KeyValuePair(Of TKey, TValue)).Add
  - name: (
    fullName: (
  - uid: System.Collections.Generic.KeyValuePair`2
    name: KeyValuePair
    fullName: System.Collections.Generic.KeyValuePair
  - name: '(Of '
    fullName: '(Of '
  - name: TKey
    fullName: TKey
  - name: ', '
    fullName: ', '
  - name: TValue
    fullName: TValue
  - name: )
    fullName: )
  - name: )
    fullName: )
  nameWithType: ICollection<KeyValuePair<TKey, TValue>>.Add(KeyValuePair<TKey, TValue>)
  nameWithType.vb: ICollection(Of KeyValuePair(Of TKey, TValue)).Add(KeyValuePair(Of TKey, TValue))
  commentId: M:System.Collections.Generic.ICollection{System.Collections.Generic.KeyValuePair{`0,`1}}.Add(System.Collections.Generic.KeyValuePair{`0,`1})
- uid: System.Collections.Generic.KeyValuePair{{TKey},{TValue}}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.KeyValuePair`2
  name: KeyValuePair<TKey, TValue>
  fullName: System.Collections.Generic.KeyValuePair<TKey, TValue>
  fullname.vb: System.Collections.Generic.KeyValuePair(Of TKey, TValue)
  name.vb: KeyValuePair(Of TKey, TValue)
  spec.csharp:
  - uid: System.Collections.Generic.KeyValuePair`2
    name: KeyValuePair
    fullName: System.Collections.Generic.KeyValuePair
    isExternal: true
  - name: <
    fullName: <
  - name: TKey
    fullName: TKey
  - name: ', '
    fullName: ', '
  - name: TValue
    fullName: TValue
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.KeyValuePair`2
    name: KeyValuePair
    fullName: System.Collections.Generic.KeyValuePair
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - name: TKey
    fullName: TKey
  - name: ', '
    fullName: ', '
  - name: TValue
    fullName: TValue
  - name: )
    fullName: )
  nameWithType: KeyValuePair<TKey, TValue>
  nameWithType.vb: KeyValuePair(Of TKey, TValue)
  commentId: T:System.Collections.Generic.KeyValuePair{`0,`1}
- uid: System.Collections.Generic.ICollection`1.Add(`0)
  isExternal: false
  name: Add(T)
  fullName: System.Collections.Generic.ICollection<T>.Add(T)
  fullname.vb: System.Collections.Generic.ICollection(Of T).Add(T)
  spec.csharp:
  - uid: System.Collections.Generic.ICollection`1.Add(`0)
    name: Add
    fullName: System.Collections.Generic.ICollection<T>.Add
  - name: (
    fullName: (
  - name: T
    fullName: T
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Collections.Generic.ICollection`1.Add(`0)
    name: Add
    fullName: System.Collections.Generic.ICollection(Of T).Add
  - name: (
    fullName: (
  - name: T
    fullName: T
  - name: )
    fullName: )
  nameWithType: ICollection<T>.Add(T)
  nameWithType.vb: ICollection(Of T).Add(T)
  commentId: M:System.Collections.Generic.ICollection`1.Add(`0)
- uid: System.Collections.Generic.KeyValuePair`2
  isExternal: false
  name: KeyValuePair<TKey, TValue>
  fullName: System.Collections.Generic.KeyValuePair<TKey, TValue>
  fullname.vb: System.Collections.Generic.KeyValuePair(Of TKey, TValue)
  name.vb: KeyValuePair(Of TKey, TValue)
  spec.csharp:
  - uid: System.Collections.Generic.KeyValuePair`2
    name: KeyValuePair
    fullName: System.Collections.Generic.KeyValuePair
  - name: <
    fullName: <
  - name: TKey
    fullName: TKey
  - name: ', '
    fullName: ', '
  - name: TValue
    fullName: TValue
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.KeyValuePair`2
    name: KeyValuePair
    fullName: System.Collections.Generic.KeyValuePair
  - name: '(Of '
    fullName: '(Of '
  - name: TKey
    fullName: TKey
  - name: ', '
    fullName: ', '
  - name: TValue
    fullName: TValue
  - name: )
    fullName: )
  nameWithType: KeyValuePair<TKey, TValue>
  nameWithType.vb: KeyValuePair(Of TKey, TValue)
  commentId: T:System.Collections.Generic.KeyValuePair`2
- uid: System.Collections.Generic.ICollection{System.Collections.Generic.KeyValuePair{{TKey},{TValue}}}.Clear
  parent: System.Collections.Generic.ICollection{System.Collections.Generic.KeyValuePair{{TKey},{TValue}}}
  definition: System.Collections.Generic.ICollection`1.Clear
  name: Clear()
  fullName: System.Collections.Generic.ICollection<System.Collections.Generic.KeyValuePair<TKey, TValue>>.Clear()
  fullname.vb: System.Collections.Generic.ICollection(Of System.Collections.Generic.KeyValuePair(Of TKey, TValue)).Clear()
  spec.csharp:
  - uid: System.Collections.Generic.ICollection`1.Clear
    name: Clear
    fullName: System.Collections.Generic.ICollection<System.Collections.Generic.KeyValuePair<TKey, TValue>>.Clear
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Collections.Generic.ICollection`1.Clear
    name: Clear
    fullName: System.Collections.Generic.ICollection(Of System.Collections.Generic.KeyValuePair(Of TKey, TValue)).Clear
  - name: (
    fullName: (
  - name: )
    fullName: )
  nameWithType: ICollection<KeyValuePair<TKey, TValue>>.Clear()
  nameWithType.vb: ICollection(Of KeyValuePair(Of TKey, TValue)).Clear()
  commentId: M:System.Collections.Generic.ICollection{System.Collections.Generic.KeyValuePair{`0,`1}}.Clear
- uid: System.Collections.Generic.ICollection`1.Clear
  isExternal: false
  name: Clear()
  fullName: System.Collections.Generic.ICollection<T>.Clear()
  fullname.vb: System.Collections.Generic.ICollection(Of T).Clear()
  spec.csharp:
  - uid: System.Collections.Generic.ICollection`1.Clear
    name: Clear
    fullName: System.Collections.Generic.ICollection<T>.Clear
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Collections.Generic.ICollection`1.Clear
    name: Clear
    fullName: System.Collections.Generic.ICollection(Of T).Clear
  - name: (
    fullName: (
  - name: )
    fullName: )
  nameWithType: ICollection<T>.Clear()
  nameWithType.vb: ICollection(Of T).Clear()
  commentId: M:System.Collections.Generic.ICollection`1.Clear
- uid: System.Collections.Generic.ICollection{System.Collections.Generic.KeyValuePair{{TKey},{TValue}}}.Contains(System.Collections.Generic.KeyValuePair{{TKey},{TValue}})
  parent: System.Collections.Generic.ICollection{System.Collections.Generic.KeyValuePair{{TKey},{TValue}}}
  definition: System.Collections.Generic.ICollection`1.Contains(`0)
  name: Contains(KeyValuePair<TKey, TValue>)
  fullName: System.Collections.Generic.ICollection<System.Collections.Generic.KeyValuePair<TKey, TValue>>.Contains(System.Collections.Generic.KeyValuePair<TKey, TValue>)
  fullname.vb: System.Collections.Generic.ICollection(Of System.Collections.Generic.KeyValuePair(Of TKey, TValue)).Contains(System.Collections.Generic.KeyValuePair(Of TKey, TValue))
  name.vb: Contains(KeyValuePair(Of TKey, TValue))
  spec.csharp:
  - uid: System.Collections.Generic.ICollection`1.Contains(`0)
    name: Contains
    fullName: System.Collections.Generic.ICollection<System.Collections.Generic.KeyValuePair<TKey, TValue>>.Contains
  - name: (
    fullName: (
  - uid: System.Collections.Generic.KeyValuePair`2
    name: KeyValuePair
    fullName: System.Collections.Generic.KeyValuePair
  - name: <
    fullName: <
  - name: TKey
    fullName: TKey
  - name: ', '
    fullName: ', '
  - name: TValue
    fullName: TValue
  - name: '>'
    fullName: '>'
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Collections.Generic.ICollection`1.Contains(`0)
    name: Contains
    fullName: System.Collections.Generic.ICollection(Of System.Collections.Generic.KeyValuePair(Of TKey, TValue)).Contains
  - name: (
    fullName: (
  - uid: System.Collections.Generic.KeyValuePair`2
    name: KeyValuePair
    fullName: System.Collections.Generic.KeyValuePair
  - name: '(Of '
    fullName: '(Of '
  - name: TKey
    fullName: TKey
  - name: ', '
    fullName: ', '
  - name: TValue
    fullName: TValue
  - name: )
    fullName: )
  - name: )
    fullName: )
  nameWithType: ICollection<KeyValuePair<TKey, TValue>>.Contains(KeyValuePair<TKey, TValue>)
  nameWithType.vb: ICollection(Of KeyValuePair(Of TKey, TValue)).Contains(KeyValuePair(Of TKey, TValue))
  commentId: M:System.Collections.Generic.ICollection{System.Collections.Generic.KeyValuePair{`0,`1}}.Contains(System.Collections.Generic.KeyValuePair{`0,`1})
- uid: System.Collections.Generic.ICollection`1.Contains(`0)
  isExternal: false
  name: Contains(T)
  fullName: System.Collections.Generic.ICollection<T>.Contains(T)
  fullname.vb: System.Collections.Generic.ICollection(Of T).Contains(T)
  spec.csharp:
  - uid: System.Collections.Generic.ICollection`1.Contains(`0)
    name: Contains
    fullName: System.Collections.Generic.ICollection<T>.Contains
  - name: (
    fullName: (
  - name: T
    fullName: T
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Collections.Generic.ICollection`1.Contains(`0)
    name: Contains
    fullName: System.Collections.Generic.ICollection(Of T).Contains
  - name: (
    fullName: (
  - name: T
    fullName: T
  - name: )
    fullName: )
  nameWithType: ICollection<T>.Contains(T)
  nameWithType.vb: ICollection(Of T).Contains(T)
  commentId: M:System.Collections.Generic.ICollection`1.Contains(`0)
- uid: System.Collections.Generic.ICollection{System.Collections.Generic.KeyValuePair{{TKey},{TValue}}}.CopyTo(System.Collections.Generic.KeyValuePair{{TKey},{TValue}}[],System.Int32)
  parent: System.Collections.Generic.ICollection{System.Collections.Generic.KeyValuePair{{TKey},{TValue}}}
  definition: System.Collections.Generic.ICollection`1.CopyTo(`0[],System.Int32)
  name: CopyTo(KeyValuePair<TKey, TValue>[], Int32)
  fullName: System.Collections.Generic.ICollection<System.Collections.Generic.KeyValuePair<TKey, TValue>>.CopyTo(System.Collections.Generic.KeyValuePair<TKey, TValue>[], System.Int32)
  fullname.vb: System.Collections.Generic.ICollection(Of System.Collections.Generic.KeyValuePair(Of TKey, TValue)).CopyTo(System.Collections.Generic.KeyValuePair(Of TKey, TValue)(), System.Int32)
  name.vb: CopyTo(KeyValuePair(Of TKey, TValue)(), Int32)
  spec.csharp:
  - uid: System.Collections.Generic.ICollection`1.CopyTo(`0[],System.Int32)
    name: CopyTo
    fullName: System.Collections.Generic.ICollection<System.Collections.Generic.KeyValuePair<TKey, TValue>>.CopyTo
  - name: (
    fullName: (
  - uid: System.Collections.Generic.KeyValuePair`2
    name: KeyValuePair
    fullName: System.Collections.Generic.KeyValuePair
  - name: <
    fullName: <
  - name: TKey
    fullName: TKey
  - name: ', '
    fullName: ', '
  - name: TValue
    fullName: TValue
  - name: '>'
    fullName: '>'
  - name: '[]'
    fullName: '[]'
  - name: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Collections.Generic.ICollection`1.CopyTo(`0[],System.Int32)
    name: CopyTo
    fullName: System.Collections.Generic.ICollection(Of System.Collections.Generic.KeyValuePair(Of TKey, TValue)).CopyTo
  - name: (
    fullName: (
  - uid: System.Collections.Generic.KeyValuePair`2
    name: KeyValuePair
    fullName: System.Collections.Generic.KeyValuePair
  - name: '(Of '
    fullName: '(Of '
  - name: TKey
    fullName: TKey
  - name: ', '
    fullName: ', '
  - name: TValue
    fullName: TValue
  - name: )
    fullName: )
  - name: ()
    fullName: ()
  - name: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    fullName: )
  nameWithType: ICollection<KeyValuePair<TKey, TValue>>.CopyTo(KeyValuePair<TKey, TValue>[], Int32)
  nameWithType.vb: ICollection(Of KeyValuePair(Of TKey, TValue)).CopyTo(KeyValuePair(Of TKey, TValue)(), Int32)
  commentId: M:System.Collections.Generic.ICollection{System.Collections.Generic.KeyValuePair{`0,`1}}.CopyTo(System.Collections.Generic.KeyValuePair{`0,`1}[],System.Int32)
- uid: System.Collections.Generic.KeyValuePair{{TKey},{TValue}}[]
  name: KeyValuePair<TKey, TValue>[]
  fullName: System.Collections.Generic.KeyValuePair<TKey, TValue>[]
  fullname.vb: System.Collections.Generic.KeyValuePair(Of TKey, TValue)()
  name.vb: KeyValuePair(Of TKey, TValue)()
  spec.csharp:
  - uid: System.Collections.Generic.KeyValuePair`2
    name: KeyValuePair
    fullName: System.Collections.Generic.KeyValuePair
    isExternal: true
  - name: <
    fullName: <
  - name: TKey
    fullName: TKey
  - name: ', '
    fullName: ', '
  - name: TValue
    fullName: TValue
  - name: '>'
    fullName: '>'
  - name: '[]'
    fullName: '[]'
  spec.vb:
  - uid: System.Collections.Generic.KeyValuePair`2
    name: KeyValuePair
    fullName: System.Collections.Generic.KeyValuePair
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - name: TKey
    fullName: TKey
  - name: ', '
    fullName: ', '
  - name: TValue
    fullName: TValue
  - name: )
    fullName: )
  - name: ()
    fullName: ()
  nameWithType: KeyValuePair<TKey, TValue>[]
  nameWithType.vb: KeyValuePair(Of TKey, TValue)()
- uid: System.Collections.Generic.ICollection`1.CopyTo(`0[],System.Int32)
  isExternal: true
  name: CopyTo(T[], Int32)
  fullName: System.Collections.Generic.ICollection<T>.CopyTo(T[], System.Int32)
  fullname.vb: System.Collections.Generic.ICollection(Of T).CopyTo(T(), System.Int32)
  name.vb: CopyTo(T(), Int32)
  spec.csharp:
  - uid: System.Collections.Generic.ICollection`1.CopyTo(`0[],System.Int32)
    name: CopyTo
    fullName: System.Collections.Generic.ICollection<T>.CopyTo
  - name: (
    fullName: (
  - name: T
    fullName: T
  - name: '[]'
    fullName: '[]'
  - name: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Collections.Generic.ICollection`1.CopyTo(`0[],System.Int32)
    name: CopyTo
    fullName: System.Collections.Generic.ICollection(Of T).CopyTo
  - name: (
    fullName: (
  - name: T
    fullName: T
  - name: ()
    fullName: ()
  - name: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    fullName: )
  nameWithType: ICollection<T>.CopyTo(T[], Int32)
  nameWithType.vb: ICollection(Of T).CopyTo(T(), Int32)
  commentId: M:System.Collections.Generic.ICollection`1.CopyTo(`0[],System.Int32)
- uid: System.Collections.Generic.ICollection{System.Collections.Generic.KeyValuePair{{TKey},{TValue}}}.Remove(System.Collections.Generic.KeyValuePair{{TKey},{TValue}})
  parent: System.Collections.Generic.ICollection{System.Collections.Generic.KeyValuePair{{TKey},{TValue}}}
  definition: System.Collections.Generic.ICollection`1.Remove(`0)
  name: Remove(KeyValuePair<TKey, TValue>)
  fullName: System.Collections.Generic.ICollection<System.Collections.Generic.KeyValuePair<TKey, TValue>>.Remove(System.Collections.Generic.KeyValuePair<TKey, TValue>)
  fullname.vb: System.Collections.Generic.ICollection(Of System.Collections.Generic.KeyValuePair(Of TKey, TValue)).Remove(System.Collections.Generic.KeyValuePair(Of TKey, TValue))
  name.vb: Remove(KeyValuePair(Of TKey, TValue))
  spec.csharp:
  - uid: System.Collections.Generic.ICollection`1.Remove(`0)
    name: Remove
    fullName: System.Collections.Generic.ICollection<System.Collections.Generic.KeyValuePair<TKey, TValue>>.Remove
  - name: (
    fullName: (
  - uid: System.Collections.Generic.KeyValuePair`2
    name: KeyValuePair
    fullName: System.Collections.Generic.KeyValuePair
  - name: <
    fullName: <
  - name: TKey
    fullName: TKey
  - name: ', '
    fullName: ', '
  - name: TValue
    fullName: TValue
  - name: '>'
    fullName: '>'
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Collections.Generic.ICollection`1.Remove(`0)
    name: Remove
    fullName: System.Collections.Generic.ICollection(Of System.Collections.Generic.KeyValuePair(Of TKey, TValue)).Remove
  - name: (
    fullName: (
  - uid: System.Collections.Generic.KeyValuePair`2
    name: KeyValuePair
    fullName: System.Collections.Generic.KeyValuePair
  - name: '(Of '
    fullName: '(Of '
  - name: TKey
    fullName: TKey
  - name: ', '
    fullName: ', '
  - name: TValue
    fullName: TValue
  - name: )
    fullName: )
  - name: )
    fullName: )
  nameWithType: ICollection<KeyValuePair<TKey, TValue>>.Remove(KeyValuePair<TKey, TValue>)
  nameWithType.vb: ICollection(Of KeyValuePair(Of TKey, TValue)).Remove(KeyValuePair(Of TKey, TValue))
  commentId: M:System.Collections.Generic.ICollection{System.Collections.Generic.KeyValuePair{`0,`1}}.Remove(System.Collections.Generic.KeyValuePair{`0,`1})
- uid: System.Collections.Generic.ICollection`1.Remove(`0)
  isExternal: false
  name: Remove(T)
  fullName: System.Collections.Generic.ICollection<T>.Remove(T)
  fullname.vb: System.Collections.Generic.ICollection(Of T).Remove(T)
  spec.csharp:
  - uid: System.Collections.Generic.ICollection`1.Remove(`0)
    name: Remove
    fullName: System.Collections.Generic.ICollection<T>.Remove
  - name: (
    fullName: (
  - name: T
    fullName: T
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Collections.Generic.ICollection`1.Remove(`0)
    name: Remove
    fullName: System.Collections.Generic.ICollection(Of T).Remove
  - name: (
    fullName: (
  - name: T
    fullName: T
  - name: )
    fullName: )
  nameWithType: ICollection<T>.Remove(T)
  nameWithType.vb: ICollection(Of T).Remove(T)
  commentId: M:System.Collections.Generic.ICollection`1.Remove(`0)
- uid: System.Collections.Generic.IDictionary{{TKey},{TValue}}.Add({TKey},{TValue})
  parent: System.Collections.Generic.IDictionary{{TKey},{TValue}}
  definition: System.Collections.Generic.IDictionary`2.Add(`0,`1)
  name: Add(TKey, TValue)
  fullName: System.Collections.Generic.IDictionary<TKey, TValue>.Add(TKey, TValue)
  fullname.vb: System.Collections.Generic.IDictionary(Of TKey, TValue).Add(TKey, TValue)
  spec.csharp:
  - uid: System.Collections.Generic.IDictionary`2.Add(`0,`1)
    name: Add
    fullName: System.Collections.Generic.IDictionary<TKey, TValue>.Add
    isExternal: true
  - name: (
    fullName: (
  - name: TKey
    fullName: TKey
  - name: ', '
    fullName: ', '
  - name: TValue
    fullName: TValue
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Collections.Generic.IDictionary`2.Add(`0,`1)
    name: Add
    fullName: System.Collections.Generic.IDictionary(Of TKey, TValue).Add
    isExternal: true
  - name: (
    fullName: (
  - name: TKey
    fullName: TKey
  - name: ', '
    fullName: ', '
  - name: TValue
    fullName: TValue
  - name: )
    fullName: )
  nameWithType: IDictionary<TKey, TValue>.Add(TKey, TValue)
  nameWithType.vb: IDictionary(Of TKey, TValue).Add(TKey, TValue)
  commentId: M:System.Collections.Generic.IDictionary{`0,`1}.Add(`0,`1)
- uid: System.Collections.Generic.IDictionary`2.Add(`0,`1)
  isExternal: true
  name: Add(TKey, TValue)
  fullName: System.Collections.Generic.IDictionary<TKey, TValue>.Add(TKey, TValue)
  fullname.vb: System.Collections.Generic.IDictionary(Of TKey, TValue).Add(TKey, TValue)
  spec.csharp:
  - uid: System.Collections.Generic.IDictionary`2.Add(`0,`1)
    name: Add
    fullName: System.Collections.Generic.IDictionary<TKey, TValue>.Add
    isExternal: true
  - name: (
    fullName: (
  - name: TKey
    fullName: TKey
  - name: ', '
    fullName: ', '
  - name: TValue
    fullName: TValue
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Collections.Generic.IDictionary`2.Add(`0,`1)
    name: Add
    fullName: System.Collections.Generic.IDictionary(Of TKey, TValue).Add
    isExternal: true
  - name: (
    fullName: (
  - name: TKey
    fullName: TKey
  - name: ', '
    fullName: ', '
  - name: TValue
    fullName: TValue
  - name: )
    fullName: )
  nameWithType: IDictionary<TKey, TValue>.Add(TKey, TValue)
  nameWithType.vb: IDictionary(Of TKey, TValue).Add(TKey, TValue)
  commentId: M:System.Collections.Generic.IDictionary`2.Add(`0,`1)
- uid: System.Collections.Generic.IDictionary{{TKey},{TValue}}.Remove({TKey})
  parent: System.Collections.Generic.IDictionary{{TKey},{TValue}}
  definition: System.Collections.Generic.IDictionary`2.Remove(`0)
  name: Remove(TKey)
  fullName: System.Collections.Generic.IDictionary<TKey, TValue>.Remove(TKey)
  fullname.vb: System.Collections.Generic.IDictionary(Of TKey, TValue).Remove(TKey)
  spec.csharp:
  - uid: System.Collections.Generic.IDictionary`2.Remove(`0)
    name: Remove
    fullName: System.Collections.Generic.IDictionary<TKey, TValue>.Remove
    isExternal: true
  - name: (
    fullName: (
  - name: TKey
    fullName: TKey
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Collections.Generic.IDictionary`2.Remove(`0)
    name: Remove
    fullName: System.Collections.Generic.IDictionary(Of TKey, TValue).Remove
    isExternal: true
  - name: (
    fullName: (
  - name: TKey
    fullName: TKey
  - name: )
    fullName: )
  nameWithType: IDictionary<TKey, TValue>.Remove(TKey)
  nameWithType.vb: IDictionary(Of TKey, TValue).Remove(TKey)
  commentId: M:System.Collections.Generic.IDictionary{`0,`1}.Remove(`0)
- uid: System.Collections.Generic.IDictionary`2.Remove(`0)
  isExternal: true
  name: Remove(TKey)
  fullName: System.Collections.Generic.IDictionary<TKey, TValue>.Remove(TKey)
  fullname.vb: System.Collections.Generic.IDictionary(Of TKey, TValue).Remove(TKey)
  spec.csharp:
  - uid: System.Collections.Generic.IDictionary`2.Remove(`0)
    name: Remove
    fullName: System.Collections.Generic.IDictionary<TKey, TValue>.Remove
    isExternal: true
  - name: (
    fullName: (
  - name: TKey
    fullName: TKey
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Collections.Generic.IDictionary`2.Remove(`0)
    name: Remove
    fullName: System.Collections.Generic.IDictionary(Of TKey, TValue).Remove
    isExternal: true
  - name: (
    fullName: (
  - name: TKey
    fullName: TKey
  - name: )
    fullName: )
  nameWithType: IDictionary<TKey, TValue>.Remove(TKey)
  nameWithType.vb: IDictionary(Of TKey, TValue).Remove(TKey)
  commentId: M:System.Collections.Generic.IDictionary`2.Remove(`0)
- uid: System.Collections.ICollection.CopyTo(System.Array,System.Int32)
  parent: System.Collections.ICollection
  isExternal: true
  name: CopyTo(Array, Int32)
  fullName: System.Collections.ICollection.CopyTo(System.Array, System.Int32)
  spec.csharp:
  - uid: System.Collections.ICollection.CopyTo(System.Array,System.Int32)
    name: CopyTo
    fullName: System.Collections.ICollection.CopyTo
  - name: (
    fullName: (
  - uid: System.Array
    name: Array
    fullName: System.Array
  - name: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Collections.ICollection.CopyTo(System.Array,System.Int32)
    name: CopyTo
    fullName: System.Collections.ICollection.CopyTo
  - name: (
    fullName: (
  - uid: System.Array
    name: Array
    fullName: System.Array
  - name: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    fullName: )
  nameWithType: ICollection.CopyTo(Array, Int32)
  commentId: M:System.Collections.ICollection.CopyTo(System.Array,System.Int32)
- uid: System.Array
  parent: System
  isExternal: false
  name: Array
  fullName: System.Array
  nameWithType: Array
  commentId: T:System.Array
- uid: System.Collections.IDictionary.Add(System.Object,System.Object)
  parent: System.Collections.IDictionary
  isExternal: true
  name: Add(Object, Object)
  fullName: System.Collections.IDictionary.Add(System.Object, System.Object)
  spec.csharp:
  - uid: System.Collections.IDictionary.Add(System.Object,System.Object)
    name: Add
    fullName: System.Collections.IDictionary.Add
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Collections.IDictionary.Add(System.Object,System.Object)
    name: Add
    fullName: System.Collections.IDictionary.Add
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
  nameWithType: IDictionary.Add(Object, Object)
  commentId: M:System.Collections.IDictionary.Add(System.Object,System.Object)
- uid: System.Collections.IDictionary.Clear
  parent: System.Collections.IDictionary
  isExternal: true
  name: Clear()
  fullName: System.Collections.IDictionary.Clear()
  spec.csharp:
  - uid: System.Collections.IDictionary.Clear
    name: Clear
    fullName: System.Collections.IDictionary.Clear
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Collections.IDictionary.Clear
    name: Clear
    fullName: System.Collections.IDictionary.Clear
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  nameWithType: IDictionary.Clear()
  commentId: M:System.Collections.IDictionary.Clear
- uid: System.Collections.IDictionary.Contains(System.Object)
  parent: System.Collections.IDictionary
  isExternal: true
  name: Contains(Object)
  fullName: System.Collections.IDictionary.Contains(System.Object)
  spec.csharp:
  - uid: System.Collections.IDictionary.Contains(System.Object)
    name: Contains
    fullName: System.Collections.IDictionary.Contains
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Collections.IDictionary.Contains(System.Object)
    name: Contains
    fullName: System.Collections.IDictionary.Contains
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
  nameWithType: IDictionary.Contains(Object)
  commentId: M:System.Collections.IDictionary.Contains(System.Object)
- uid: System.Collections.IDictionary.GetEnumerator
  parent: System.Collections.IDictionary
  isExternal: true
  name: GetEnumerator()
  fullName: System.Collections.IDictionary.GetEnumerator()
  spec.csharp:
  - uid: System.Collections.IDictionary.GetEnumerator
    name: GetEnumerator
    fullName: System.Collections.IDictionary.GetEnumerator
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Collections.IDictionary.GetEnumerator
    name: GetEnumerator
    fullName: System.Collections.IDictionary.GetEnumerator
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  nameWithType: IDictionary.GetEnumerator()
  commentId: M:System.Collections.IDictionary.GetEnumerator
- uid: System.Collections.IDictionaryEnumerator
  parent: System.Collections
  isExternal: false
  name: IDictionaryEnumerator
  fullName: System.Collections.IDictionaryEnumerator
  nameWithType: IDictionaryEnumerator
  commentId: T:System.Collections.IDictionaryEnumerator
- uid: System.Collections.IDictionary.Remove(System.Object)
  parent: System.Collections.IDictionary
  isExternal: true
  name: Remove(Object)
  fullName: System.Collections.IDictionary.Remove(System.Object)
  spec.csharp:
  - uid: System.Collections.IDictionary.Remove(System.Object)
    name: Remove
    fullName: System.Collections.IDictionary.Remove
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Collections.IDictionary.Remove(System.Object)
    name: Remove
    fullName: System.Collections.IDictionary.Remove
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
  nameWithType: IDictionary.Remove(Object)
  commentId: M:System.Collections.IDictionary.Remove(System.Object)
- uid: System.Collections.IEnumerable.GetEnumerator
  parent: System.Collections.IEnumerable
  isExternal: false
  name: GetEnumerator()
  fullName: System.Collections.IEnumerable.GetEnumerator()
  spec.csharp:
  - uid: System.Collections.IEnumerable.GetEnumerator
    name: GetEnumerator
    fullName: System.Collections.IEnumerable.GetEnumerator
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Collections.IEnumerable.GetEnumerator
    name: GetEnumerator
    fullName: System.Collections.IEnumerable.GetEnumerator
  - name: (
    fullName: (
  - name: )
    fullName: )
  nameWithType: IEnumerable.GetEnumerator()
  commentId: M:System.Collections.IEnumerable.GetEnumerator
- uid: System.Collections.IEnumerator
  parent: System.Collections
  isExternal: false
  name: IEnumerator
  fullName: System.Collections.IEnumerator
  nameWithType: IEnumerator
  commentId: T:System.Collections.IEnumerator
- uid: System.Collections.Generic.IDictionary{{TKey},{TValue}}.TryGetValue({TKey},{TValue}@)
  parent: System.Collections.Generic.IDictionary{{TKey},{TValue}}
  definition: System.Collections.Generic.IDictionary`2.TryGetValue(`0,`1@)
  name: TryGetValue(TKey, TValue)
  fullName: System.Collections.Generic.IDictionary<TKey, TValue>.TryGetValue(TKey, TValue)
  fullname.vb: System.Collections.Generic.IDictionary(Of TKey, TValue).TryGetValue(TKey, TValue)
  spec.csharp:
  - uid: System.Collections.Generic.IDictionary`2.TryGetValue(`0,`1@)
    name: TryGetValue
    fullName: System.Collections.Generic.IDictionary<TKey, TValue>.TryGetValue
    isExternal: true
  - name: (
    fullName: (
  - name: TKey
    fullName: TKey
  - name: ', '
    fullName: ', '
  - name: TValue
    fullName: TValue
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Collections.Generic.IDictionary`2.TryGetValue(`0,`1@)
    name: TryGetValue
    fullName: System.Collections.Generic.IDictionary(Of TKey, TValue).TryGetValue
    isExternal: true
  - name: (
    fullName: (
  - name: TKey
    fullName: TKey
  - name: ', '
    fullName: ', '
  - name: TValue
    fullName: TValue
  - name: )
    fullName: )
  nameWithType: IDictionary<TKey, TValue>.TryGetValue(TKey, TValue)
  nameWithType.vb: IDictionary(Of TKey, TValue).TryGetValue(TKey, TValue)
  commentId: M:System.Collections.Generic.IDictionary{`0,`1}.TryGetValue(`0,`1@)
- uid: System.Collections.Generic.IReadOnlyDictionary{{TKey},{TValue}}.TryGetValue({TKey},{TValue}@)
  parent: System.Collections.Generic.IReadOnlyDictionary{{TKey},{TValue}}
  definition: System.Collections.Generic.IReadOnlyDictionary`2.TryGetValue(`0,`1@)
  name: TryGetValue(TKey, TValue)
  fullName: System.Collections.Generic.IReadOnlyDictionary<TKey, TValue>.TryGetValue(TKey, TValue)
  fullname.vb: System.Collections.Generic.IReadOnlyDictionary(Of TKey, TValue).TryGetValue(TKey, TValue)
  spec.csharp:
  - uid: System.Collections.Generic.IReadOnlyDictionary`2.TryGetValue(`0,`1@)
    name: TryGetValue
    fullName: System.Collections.Generic.IReadOnlyDictionary<TKey, TValue>.TryGetValue
    isExternal: true
  - name: (
    fullName: (
  - name: TKey
    fullName: TKey
  - name: ', '
    fullName: ', '
  - name: TValue
    fullName: TValue
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Collections.Generic.IReadOnlyDictionary`2.TryGetValue(`0,`1@)
    name: TryGetValue
    fullName: System.Collections.Generic.IReadOnlyDictionary(Of TKey, TValue).TryGetValue
    isExternal: true
  - name: (
    fullName: (
  - name: TKey
    fullName: TKey
  - name: ', '
    fullName: ', '
  - name: TValue
    fullName: TValue
  - name: )
    fullName: )
  nameWithType: IReadOnlyDictionary<TKey, TValue>.TryGetValue(TKey, TValue)
  nameWithType.vb: IReadOnlyDictionary(Of TKey, TValue).TryGetValue(TKey, TValue)
  commentId: M:System.Collections.Generic.IReadOnlyDictionary{`0,`1}.TryGetValue(`0,`1@)
- uid: System.Collections.Generic.IDictionary`2.TryGetValue(`0,`1@)
  isExternal: true
  name: TryGetValue(TKey, TValue)
  fullName: System.Collections.Generic.IDictionary<TKey, TValue>.TryGetValue(TKey, TValue)
  fullname.vb: System.Collections.Generic.IDictionary(Of TKey, TValue).TryGetValue(TKey, TValue)
  spec.csharp:
  - uid: System.Collections.Generic.IDictionary`2.TryGetValue(`0,`1@)
    name: TryGetValue
    fullName: System.Collections.Generic.IDictionary<TKey, TValue>.TryGetValue
    isExternal: true
  - name: (
    fullName: (
  - name: TKey
    fullName: TKey
  - name: ', '
    fullName: ', '
  - name: TValue
    fullName: TValue
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Collections.Generic.IDictionary`2.TryGetValue(`0,`1@)
    name: TryGetValue
    fullName: System.Collections.Generic.IDictionary(Of TKey, TValue).TryGetValue
    isExternal: true
  - name: (
    fullName: (
  - name: TKey
    fullName: TKey
  - name: ', '
    fullName: ', '
  - name: TValue
    fullName: TValue
  - name: )
    fullName: )
  nameWithType: IDictionary<TKey, TValue>.TryGetValue(TKey, TValue)
  nameWithType.vb: IDictionary(Of TKey, TValue).TryGetValue(TKey, TValue)
  commentId: M:System.Collections.Generic.IDictionary`2.TryGetValue(`0,`1@)
- uid: System.Collections.Generic.IReadOnlyDictionary`2.TryGetValue(`0,`1@)
  isExternal: true
  name: TryGetValue(TKey, TValue)
  fullName: System.Collections.Generic.IReadOnlyDictionary<TKey, TValue>.TryGetValue(TKey, TValue)
  fullname.vb: System.Collections.Generic.IReadOnlyDictionary(Of TKey, TValue).TryGetValue(TKey, TValue)
  spec.csharp:
  - uid: System.Collections.Generic.IReadOnlyDictionary`2.TryGetValue(`0,`1@)
    name: TryGetValue
    fullName: System.Collections.Generic.IReadOnlyDictionary<TKey, TValue>.TryGetValue
    isExternal: true
  - name: (
    fullName: (
  - name: TKey
    fullName: TKey
  - name: ', '
    fullName: ', '
  - name: TValue
    fullName: TValue
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Collections.Generic.IReadOnlyDictionary`2.TryGetValue(`0,`1@)
    name: TryGetValue
    fullName: System.Collections.Generic.IReadOnlyDictionary(Of TKey, TValue).TryGetValue
    isExternal: true
  - name: (
    fullName: (
  - name: TKey
    fullName: TKey
  - name: ', '
    fullName: ', '
  - name: TValue
    fullName: TValue
  - name: )
    fullName: )
  nameWithType: IReadOnlyDictionary<TKey, TValue>.TryGetValue(TKey, TValue)
  nameWithType.vb: IReadOnlyDictionary(Of TKey, TValue).TryGetValue(TKey, TValue)
  commentId: M:System.Collections.Generic.IReadOnlyDictionary`2.TryGetValue(`0,`1@)
- uid: System.ArgumentNullException
  isExternal: false
  name: ArgumentNullException
  fullName: System.ArgumentNullException
  nameWithType: ArgumentNullException
  commentId: T:System.ArgumentNullException
- uid: System.Collections.Generic.KeyNotFoundException
  isExternal: false
  name: KeyNotFoundException
  fullName: System.Collections.Generic.KeyNotFoundException
  nameWithType: KeyNotFoundException
  commentId: T:System.Collections.Generic.KeyNotFoundException
- uid: System.NotSupportedException
  parent: System
  isExternal: false
  name: NotSupportedException
  fullName: System.NotSupportedException
  nameWithType: NotSupportedException
  commentId: T:System.NotSupportedException
- uid: System.ArgumentOutOfRangeException
  isExternal: false
  name: ArgumentOutOfRangeException
  fullName: System.ArgumentOutOfRangeException
  nameWithType: ArgumentOutOfRangeException
  commentId: T:System.ArgumentOutOfRangeException
- uid: System.ArgumentException
  parent: System
  isExternal: false
  name: ArgumentException
  fullName: System.ArgumentException
  nameWithType: ArgumentException
  commentId: T:System.ArgumentException
