### YamlMime:ManagedReference
items:
- uid: System.Threading.NativeOverlapped
  commentId: T:System.Threading.NativeOverlapped
  id: NativeOverlapped
  parent: System.Threading
  children:
  - System.Threading.NativeOverlapped.EventHandle
  - System.Threading.NativeOverlapped.InternalHigh
  - System.Threading.NativeOverlapped.InternalLow
  - System.Threading.NativeOverlapped.OffsetHigh
  - System.Threading.NativeOverlapped.OffsetLow
  langs:
  - csharp
  - vb
  name: NativeOverlapped
  nameWithType: NativeOverlapped
  fullName: System.Threading.NativeOverlapped
  type: Struct
  source:
    remote:
      path: src/mscorlib/src/System/Threading/Overlapped.cs
      branch: master
      repo: https://github.com/dotnet/coreclr.git
    id: NativeOverlapped
    path: src/mscorlib/src/System/Threading/Overlapped.cs
    startLine: 44
  assemblies:
  - System.Threading.Overlapped
  namespace: System.Threading
  summary: "\n<p>Provides an explicit layout that is visible from unmanaged code and that will have the same layout as the Win32 OVERLAPPED structure with additional reserved fields at the end.</p>\n"
  syntax:
    content: >-
      [StructLayout(LayoutKind.Sequential)]

      [ComVisible(true)]

      public struct NativeOverlapped
    content.vb: >-
      <StructLayout(LayoutKind.Sequential)>

      <ComVisible(True)>

      Public Structure NativeOverlapped
  inheritedMembers:
  - System.ValueType.Equals(System.Object)
  - System.ValueType.GetHashCode
  - System.ValueType.ToString
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetType
  attributes:
  - type: System.Runtime.InteropServices.StructLayoutAttribute
    ctor: System.Runtime.InteropServices.StructLayoutAttribute.#ctor(System.Runtime.InteropServices.LayoutKind)
    arguments:
    - type: System.Runtime.InteropServices.LayoutKind
      value: 0
  modifiers.csharp:
  - public
  - struct
  modifiers.vb:
  - Public
  - Structure
- uid: System.Threading.NativeOverlapped.EventHandle
  commentId: F:System.Threading.NativeOverlapped.EventHandle
  id: EventHandle
  parent: System.Threading.NativeOverlapped
  langs:
  - csharp
  - vb
  name: EventHandle
  nameWithType: NativeOverlapped.EventHandle
  fullName: System.Threading.NativeOverlapped.EventHandle
  type: Field
  source:
    remote:
      path: src/mscorlib/src/System/Threading/Overlapped.cs
      branch: master
      repo: https://github.com/dotnet/coreclr.git
    id: EventHandle
    path: src/mscorlib/src/System/Threading/Overlapped.cs
    startLine: 52
  assemblies:
  - System.Threading.Overlapped
  namespace: System.Threading
  summary: "\n<p>Specifies the handle to an event set to the signaled state when the operation is complete. The calling process must set this member either to zero or to a valid event handle before calling any overlapped functions.</p>\n"
  syntax:
    content: public IntPtr EventHandle
    content.vb: Public EventHandle As IntPtr
    return:
      type: System.IntPtr
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: System.Threading.NativeOverlapped.InternalHigh
  commentId: F:System.Threading.NativeOverlapped.InternalHigh
  id: InternalHigh
  parent: System.Threading.NativeOverlapped
  langs:
  - csharp
  - vb
  name: InternalHigh
  nameWithType: NativeOverlapped.InternalHigh
  fullName: System.Threading.NativeOverlapped.InternalHigh
  type: Field
  source:
    remote:
      path: src/mscorlib/src/System/Threading/Overlapped.cs
      branch: master
      repo: https://github.com/dotnet/coreclr.git
    id: InternalHigh
    path: src/mscorlib/src/System/Threading/Overlapped.cs
    startLine: 49
  assemblies:
  - System.Threading.Overlapped
  namespace: System.Threading
  summary: "\n<p>Specifies the length of the data transferred. Reserved for operating system use.</p>\n"
  syntax:
    content: public IntPtr InternalHigh
    content.vb: Public InternalHigh As IntPtr
    return:
      type: System.IntPtr
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: System.Threading.NativeOverlapped.InternalLow
  commentId: F:System.Threading.NativeOverlapped.InternalLow
  id: InternalLow
  parent: System.Threading.NativeOverlapped
  langs:
  - csharp
  - vb
  name: InternalLow
  nameWithType: NativeOverlapped.InternalLow
  fullName: System.Threading.NativeOverlapped.InternalLow
  type: Field
  source:
    remote:
      path: src/mscorlib/src/System/Threading/Overlapped.cs
      branch: master
      repo: https://github.com/dotnet/coreclr.git
    id: InternalLow
    path: src/mscorlib/src/System/Threading/Overlapped.cs
    startLine: 48
  assemblies:
  - System.Threading.Overlapped
  namespace: System.Threading
  summary: "\n<p>Specifies a system-dependent status. Reserved for operating system use.</p>\n"
  syntax:
    content: public IntPtr InternalLow
    content.vb: Public InternalLow As IntPtr
    return:
      type: System.IntPtr
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: System.Threading.NativeOverlapped.OffsetHigh
  commentId: F:System.Threading.NativeOverlapped.OffsetHigh
  id: OffsetHigh
  parent: System.Threading.NativeOverlapped
  langs:
  - csharp
  - vb
  name: OffsetHigh
  nameWithType: NativeOverlapped.OffsetHigh
  fullName: System.Threading.NativeOverlapped.OffsetHigh
  type: Field
  source:
    remote:
      path: src/mscorlib/src/System/Threading/Overlapped.cs
      branch: master
      repo: https://github.com/dotnet/coreclr.git
    id: OffsetHigh
    path: src/mscorlib/src/System/Threading/Overlapped.cs
    startLine: 51
  assemblies:
  - System.Threading.Overlapped
  namespace: System.Threading
  summary: "\n<p>Specifies the high word of the byte offset at which to start the transfer.</p>\n"
  syntax:
    content: public int OffsetHigh
    content.vb: Public OffsetHigh As Integer
    return:
      type: System.Int32
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: System.Threading.NativeOverlapped.OffsetLow
  commentId: F:System.Threading.NativeOverlapped.OffsetLow
  id: OffsetLow
  parent: System.Threading.NativeOverlapped
  langs:
  - csharp
  - vb
  name: OffsetLow
  nameWithType: NativeOverlapped.OffsetLow
  fullName: System.Threading.NativeOverlapped.OffsetLow
  type: Field
  source:
    remote:
      path: src/mscorlib/src/System/Threading/Overlapped.cs
      branch: master
      repo: https://github.com/dotnet/coreclr.git
    id: OffsetLow
    path: src/mscorlib/src/System/Threading/Overlapped.cs
    startLine: 50
  assemblies:
  - System.Threading.Overlapped
  namespace: System.Threading
  summary: "\n<p>Specifies a file position at which to start the transfer.</p>\n"
  syntax:
    content: public int OffsetLow
    content.vb: Public OffsetLow As Integer
    return:
      type: System.Int32
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
references:
- uid: System.Threading
  commentId: N:System.Threading
  isExternal: false
  name: System.Threading
  nameWithType: System.Threading
  fullName: System.Threading
- uid: System.ValueType.Equals(System.Object)
  commentId: M:System.ValueType.Equals(System.Object)
  parent: System.ValueType
  isExternal: true
  name: Equals(Object)
  nameWithType: ValueType.Equals(Object)
  fullName: System.ValueType.Equals(System.Object)
  spec.csharp:
  - uid: System.ValueType.Equals(System.Object)
    name: Equals
    nameWithType: ValueType.Equals
    fullName: System.ValueType.Equals
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.ValueType.Equals(System.Object)
    name: Equals
    nameWithType: ValueType.Equals
    fullName: System.ValueType.Equals
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.ValueType.GetHashCode
  commentId: M:System.ValueType.GetHashCode
  parent: System.ValueType
  isExternal: false
  name: GetHashCode()
  nameWithType: ValueType.GetHashCode()
  fullName: System.ValueType.GetHashCode()
  spec.csharp:
  - uid: System.ValueType.GetHashCode
    name: GetHashCode
    nameWithType: ValueType.GetHashCode
    fullName: System.ValueType.GetHashCode
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.ValueType.GetHashCode
    name: GetHashCode
    nameWithType: ValueType.GetHashCode
    fullName: System.ValueType.GetHashCode
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.ValueType.ToString
  commentId: M:System.ValueType.ToString
  parent: System.ValueType
  isExternal: false
  name: ToString()
  nameWithType: ValueType.ToString()
  fullName: System.ValueType.ToString()
  spec.csharp:
  - uid: System.ValueType.ToString
    name: ToString
    nameWithType: ValueType.ToString
    fullName: System.ValueType.ToString
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.ValueType.ToString
    name: ToString
    nameWithType: ValueType.ToString
    fullName: System.ValueType.ToString
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.ValueType
  commentId: T:System.ValueType
  parent: System
  isExternal: false
  name: ValueType
  nameWithType: ValueType
  fullName: System.ValueType
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: false
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: System.IntPtr
  commentId: T:System.IntPtr
  parent: System
  isExternal: false
  name: IntPtr
  nameWithType: IntPtr
  fullName: System.IntPtr
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: false
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
