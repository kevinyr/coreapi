items:
- uid: System.IO.IsolatedStorage.IsolatedStorageFile
  commentId: T:System.IO.IsolatedStorage.IsolatedStorageFile
  id: IsolatedStorageFile
  parent: System.IO.IsolatedStorage
  children:
  - System.IO.IsolatedStorage.IsolatedStorageFile.CopyFile(System.String,System.String)
  - System.IO.IsolatedStorage.IsolatedStorageFile.CopyFile(System.String,System.String,System.Boolean)
  - System.IO.IsolatedStorage.IsolatedStorageFile.CreateDirectory(System.String)
  - System.IO.IsolatedStorage.IsolatedStorageFile.CreateFile(System.String)
  - System.IO.IsolatedStorage.IsolatedStorageFile.DeleteDirectory(System.String)
  - System.IO.IsolatedStorage.IsolatedStorageFile.DeleteFile(System.String)
  - System.IO.IsolatedStorage.IsolatedStorageFile.DirectoryExists(System.String)
  - System.IO.IsolatedStorage.IsolatedStorageFile.Dispose
  - System.IO.IsolatedStorage.IsolatedStorageFile.FileExists(System.String)
  - System.IO.IsolatedStorage.IsolatedStorageFile.GetCreationTime(System.String)
  - System.IO.IsolatedStorage.IsolatedStorageFile.GetDirectoryNames
  - System.IO.IsolatedStorage.IsolatedStorageFile.GetDirectoryNames(System.String)
  - System.IO.IsolatedStorage.IsolatedStorageFile.GetFileNames
  - System.IO.IsolatedStorage.IsolatedStorageFile.GetFileNames(System.String)
  - System.IO.IsolatedStorage.IsolatedStorageFile.GetLastAccessTime(System.String)
  - System.IO.IsolatedStorage.IsolatedStorageFile.GetLastWriteTime(System.String)
  - System.IO.IsolatedStorage.IsolatedStorageFile.GetUserStoreForApplication
  - System.IO.IsolatedStorage.IsolatedStorageFile.MoveDirectory(System.String,System.String)
  - System.IO.IsolatedStorage.IsolatedStorageFile.MoveFile(System.String,System.String)
  - System.IO.IsolatedStorage.IsolatedStorageFile.OpenFile(System.String,System.IO.FileMode)
  - System.IO.IsolatedStorage.IsolatedStorageFile.OpenFile(System.String,System.IO.FileMode,System.IO.FileAccess)
  - System.IO.IsolatedStorage.IsolatedStorageFile.OpenFile(System.String,System.IO.FileMode,System.IO.FileAccess,System.IO.FileShare)
  langs:
  - csharp
  - vb
  name: IsolatedStorageFile
  fullName: System.IO.IsolatedStorage.IsolatedStorageFile
  type: Class
  source:
    remote:
      path: src/System.IO.IsolatedStorage/src/System/IO/IsolatedStorage/IsolatedStorageFile.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: IsolatedStorageFile
    path: src/System.IO.IsolatedStorage/src/System/IO/IsolatedStorage/IsolatedStorageFile.cs
    startLine: 16
  assemblies:
  - System.IO.IsolatedStorage
  namespace: System.IO.IsolatedStorage
  summary: "\n<p>Represents an isolated storage area containing files and directories. </p>\n"
  syntax:
    content: 'public sealed class IsolatedStorageFile : IDisposable'
    content.vb: >-
      Public NotInheritable Class IsolatedStorageFile
          Implements IDisposable
  inheritance:
  - System.Object
  implements:
  - System.IDisposable
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  modifiers.csharp:
  - public
  - sealed
  - class
  modifiers.vb:
  - Public
  - NotInheritable
  - Class
  nameWithType: IsolatedStorageFile
- uid: System.IO.IsolatedStorage.IsolatedStorageFile.CopyFile(System.String,System.String)
  commentId: M:System.IO.IsolatedStorage.IsolatedStorageFile.CopyFile(System.String,System.String)
  id: CopyFile(System.String,System.String)
  parent: System.IO.IsolatedStorage.IsolatedStorageFile
  langs:
  - csharp
  - vb
  name: CopyFile(String, String)
  fullName: System.IO.IsolatedStorage.IsolatedStorageFile.CopyFile(System.String, System.String)
  type: Method
  source:
    remote:
      path: src/System.IO.IsolatedStorage/src/System/IO/IsolatedStorage/IsolatedStorageFile.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: CopyFile
    path: src/System.IO.IsolatedStorage/src/System/IO/IsolatedStorage/IsolatedStorageFile.cs
    startLine: 344
  assemblies:
  - System.IO.IsolatedStorage
  namespace: System.IO.IsolatedStorage
  summary: "\n<p>Copies an existing file to a new file.  </p>\n"
  syntax:
    content: public void CopyFile(string sourceFileName, string destinationFileName)
    content.vb: Public Sub CopyFile(sourceFileName As String, destinationFileName As String)
    parameters:
    - id: sourceFileName
      type: System.String
      description: "\n<p>The name of the file to copy.</p>\n"
    - id: destinationFileName
      type: System.String
      description: "\n<p>The name of the destination file. This cannot be a directory or an existing file.</p>\n"
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "\n<p>\n<em>sourceFileName </em>or<em> destinationFileName </em>is a zero-length string, contains only white space, or contains one or more invalid characters defined by the <xref href=\"System.IO.Path.GetInvalidPathChars\" data-throw-if-not-resolved=\"false\"></xref> method.</p>\n"
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "\n<p>\n<em>sourceFileName </em>or<em> destinationFileName </em>is <strong>null</strong>.</p>\n"
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "\n<p>The isolated store has been closed.</p>\n"
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: "\n<p>The isolated store has been disposed.</p>\n"
  - type: System.IO.FileNotFoundException
    commentId: T:System.IO.FileNotFoundException
    description: "\n<p>\n<em>sourceFileName </em>was not found.</p>\n"
  - type: System.IO.DirectoryNotFoundException
    commentId: T:System.IO.DirectoryNotFoundException
    description: "\n<p>\n<em>sourceFileName </em>was not found.</p>\n"
  - type: System.IO.IsolatedStorage.IsolatedStorageException
    commentId: T:System.IO.IsolatedStorage.IsolatedStorageException
    description: "\n<p>The isolated store has been removed.</p>\n<p>-or-</p>\n<p>Isolated storage is disabled.</p>\n<p>-or-</p>\n<p>\n<em>destinationFileName</em> exists.</p>\n<p>-or-</p>\n<p>An I/O error has occurred.</p>\n"
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  nameWithType: IsolatedStorageFile.CopyFile(String, String)
- uid: System.IO.IsolatedStorage.IsolatedStorageFile.CopyFile(System.String,System.String,System.Boolean)
  commentId: M:System.IO.IsolatedStorage.IsolatedStorageFile.CopyFile(System.String,System.String,System.Boolean)
  id: CopyFile(System.String,System.String,System.Boolean)
  parent: System.IO.IsolatedStorage.IsolatedStorageFile
  langs:
  - csharp
  - vb
  name: CopyFile(String, String, Boolean)
  fullName: System.IO.IsolatedStorage.IsolatedStorageFile.CopyFile(System.String, System.String, System.Boolean)
  type: Method
  source:
    remote:
      path: src/System.IO.IsolatedStorage/src/System/IO/IsolatedStorage/IsolatedStorageFile.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: CopyFile
    path: src/System.IO.IsolatedStorage/src/System/IO/IsolatedStorage/IsolatedStorageFile.cs
    startLine: 367
  assemblies:
  - System.IO.IsolatedStorage
  namespace: System.IO.IsolatedStorage
  summary: "\n<p>Copies an existing file to a new file, and optionally overwrites an existing file.</p>\n"
  syntax:
    content: public void CopyFile(string sourceFileName, string destinationFileName, bool overwrite)
    content.vb: Public Sub CopyFile(sourceFileName As String, destinationFileName As String, overwrite As Boolean)
    parameters:
    - id: sourceFileName
      type: System.String
      description: "\n<p>The name of the file to copy.</p>\n"
    - id: destinationFileName
      type: System.String
      description: "\n<p>The name of the destination file. This cannot be a directory.</p>\n"
    - id: overwrite
      type: System.Boolean
      description: "\n<p>\n<strong>true</strong> if the destination file can be overwritten; otherwise, <strong>false</strong>.</p>\n"
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "\n<p>\n<em>sourceFileName </em>or<em> destinationFileName </em>is a zero-length string, contains only white space, or contains one or more invalid characters defined by the <xref href=\"System.IO.Path.GetInvalidPathChars\" data-throw-if-not-resolved=\"false\"></xref> method.</p>\n"
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "\n<p>\n<em>sourceFileName </em>or<em> destinationFileName </em>is <strong>null</strong>.</p>\n"
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "\n<p>The isolated store has been closed.</p>\n"
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: "\n<p>The isolated store has been disposed.</p>\n"
  - type: System.IO.FileNotFoundException
    commentId: T:System.IO.FileNotFoundException
    description: "\n<p>\n<em>sourceFileName </em>was not found.</p>\n"
  - type: System.IO.DirectoryNotFoundException
    commentId: T:System.IO.DirectoryNotFoundException
    description: "\n<p>\n<em>sourceFileName </em>was not found.</p>\n"
  - type: System.IO.IsolatedStorage.IsolatedStorageException
    commentId: T:System.IO.IsolatedStorage.IsolatedStorageException
    description: "\n<p>The isolated store has been removed.</p>\n<p>-or-</p>\n<p>Isolated storage is disabled.</p>\n<p>-or-</p>\n<p>An I/O error has occurred.</p>\n"
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  nameWithType: IsolatedStorageFile.CopyFile(String, String, Boolean)
- uid: System.IO.IsolatedStorage.IsolatedStorageFile.CreateDirectory(System.String)
  commentId: M:System.IO.IsolatedStorage.IsolatedStorageFile.CreateDirectory(System.String)
  id: CreateDirectory(System.String)
  parent: System.IO.IsolatedStorage.IsolatedStorageFile
  langs:
  - csharp
  - vb
  name: CreateDirectory(String)
  fullName: System.IO.IsolatedStorage.IsolatedStorageFile.CreateDirectory(System.String)
  type: Method
  source:
    remote:
      path: src/System.IO.IsolatedStorage/src/System/IO/IsolatedStorage/IsolatedStorageFile.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: CreateDirectory
    path: src/System.IO.IsolatedStorage/src/System/IO/IsolatedStorage/IsolatedStorageFile.cs
    startLine: 134
  assemblies:
  - System.IO.IsolatedStorage
  namespace: System.IO.IsolatedStorage
  summary: "\n<p>Creates a directory in the isolated storage scope.</p>\n"
  syntax:
    content: public void CreateDirectory(string dir)
    content.vb: Public Sub CreateDirectory(dir As String)
    parameters:
    - id: dir
      type: System.String
      description: "\n<p>The relative path of the directory to create within the isolated storage scope. </p>\n"
  exceptions:
  - type: System.IO.IsolatedStorage.IsolatedStorageException
    commentId: T:System.IO.IsolatedStorage.IsolatedStorageException
    description: "\n<p>The current code has insufficient permissions to create isolated storage directory. </p>\n"
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "\n<p>The directory path is <strong>null</strong>. </p>\n"
  see:
  - type: System.Security.Permissions.IsolatedStorageFilePermission
    commentId: T:System.Security.Permissions.IsolatedStorageFilePermission
  - type: System.Security.Permissions.ReflectionPermission
    commentId: T:System.Security.Permissions.ReflectionPermission
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  nameWithType: IsolatedStorageFile.CreateDirectory(String)
- uid: System.IO.IsolatedStorage.IsolatedStorageFile.CreateFile(System.String)
  commentId: M:System.IO.IsolatedStorage.IsolatedStorageFile.CreateFile(System.String)
  id: CreateFile(System.String)
  parent: System.IO.IsolatedStorage.IsolatedStorageFile
  langs:
  - csharp
  - vb
  name: CreateFile(String)
  fullName: System.IO.IsolatedStorage.IsolatedStorageFile.CreateFile(System.String)
  type: Method
  source:
    remote:
      path: src/System.IO.IsolatedStorage/src/System/IO/IsolatedStorage/IsolatedStorageFile.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: CreateFile
    path: src/System.IO.IsolatedStorage/src/System/IO/IsolatedStorage/IsolatedStorageFile.cs
    startLine: 265
  assemblies:
  - System.IO.IsolatedStorage
  namespace: System.IO.IsolatedStorage
  summary: "\n<p>Creates a file in the isolated store.</p>\n"
  syntax:
    content: public IsolatedStorageFileStream CreateFile(string path)
    content.vb: Public Function CreateFile(path As String) As IsolatedStorageFileStream
    parameters:
    - id: path
      type: System.String
      description: "\n<p>The relative path of the file to create.</p>\n"
    return:
      type: System.IO.IsolatedStorage.IsolatedStorageFileStream
      description: "\n<p>A new isolated storage file.</p>\n"
  exceptions:
  - type: System.IO.IsolatedStorage.IsolatedStorageException
    commentId: T:System.IO.IsolatedStorage.IsolatedStorageException
    description: "\n<p>The isolated store has been removed. </p>\n<p>-or-</p>\n<p>Isolated storage is disabled.</p>\n"
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "\n<p>\n<em>path</em> is malformed.</p>\n"
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "\n<p>\n<em>path</em> is <strong>null</strong>.</p>\n"
  - type: System.IO.DirectoryNotFoundException
    commentId: T:System.IO.DirectoryNotFoundException
    description: "\n<p>The directory in <em>path</em> does not exist.</p>\n"
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: "\n<p>The isolated store has been disposed.</p>\n"
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  nameWithType: IsolatedStorageFile.CreateFile(String)
- uid: System.IO.IsolatedStorage.IsolatedStorageFile.DeleteDirectory(System.String)
  commentId: M:System.IO.IsolatedStorage.IsolatedStorageFile.DeleteDirectory(System.String)
  id: DeleteDirectory(System.String)
  parent: System.IO.IsolatedStorage.IsolatedStorageFile
  langs:
  - csharp
  - vb
  name: DeleteDirectory(String)
  fullName: System.IO.IsolatedStorage.IsolatedStorageFile.DeleteDirectory(System.String)
  type: Method
  source:
    remote:
      path: src/System.IO.IsolatedStorage/src/System/IO/IsolatedStorage/IsolatedStorageFile.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: DeleteDirectory
    path: src/System.IO.IsolatedStorage/src/System/IO/IsolatedStorage/IsolatedStorageFile.cs
    startLine: 171
  assemblies:
  - System.IO.IsolatedStorage
  namespace: System.IO.IsolatedStorage
  summary: "\n<p>Deletes a directory in the isolated storage scope.</p>\n"
  syntax:
    content: public void DeleteDirectory(string dir)
    content.vb: Public Sub DeleteDirectory(dir As String)
    parameters:
    - id: dir
      type: System.String
      description: "\n<p>The relative path of the directory to delete within the isolated storage scope. </p>\n"
  exceptions:
  - type: System.IO.IsolatedStorage.IsolatedStorageException
    commentId: T:System.IO.IsolatedStorage.IsolatedStorageException
    description: "\n<p>The directory could not be deleted. </p>\n"
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "\n<p>The directory path was <strong>null</strong>. </p>\n"
  see:
  - type: System.Security.Permissions.IsolatedStorageFilePermission
    commentId: T:System.Security.Permissions.IsolatedStorageFilePermission
  - type: System.Security.Permissions.ReflectionPermission
    commentId: T:System.Security.Permissions.ReflectionPermission
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  nameWithType: IsolatedStorageFile.DeleteDirectory(String)
- uid: System.IO.IsolatedStorage.IsolatedStorageFile.DeleteFile(System.String)
  commentId: M:System.IO.IsolatedStorage.IsolatedStorageFile.DeleteFile(System.String)
  id: DeleteFile(System.String)
  parent: System.IO.IsolatedStorage.IsolatedStorageFile
  langs:
  - csharp
  - vb
  name: DeleteFile(String)
  fullName: System.IO.IsolatedStorage.IsolatedStorageFile.DeleteFile(System.String)
  type: Method
  source:
    remote:
      path: src/System.IO.IsolatedStorage/src/System/IO/IsolatedStorage/IsolatedStorageFile.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: DeleteFile
    path: src/System.IO.IsolatedStorage/src/System/IO/IsolatedStorage/IsolatedStorageFile.cs
    startLine: 92
  assemblies:
  - System.IO.IsolatedStorage
  namespace: System.IO.IsolatedStorage
  summary: "\n<p>Deletes a file in the isolated storage scope.</p>\n"
  syntax:
    content: public void DeleteFile(string file)
    content.vb: Public Sub DeleteFile(file As String)
    parameters:
    - id: file
      type: System.String
      description: "\n<p>The relative path of the file to delete within the isolated storage scope. </p>\n"
  exceptions:
  - type: System.IO.IsolatedStorage.IsolatedStorageException
    commentId: T:System.IO.IsolatedStorage.IsolatedStorageException
    description: "\n<p>The target file is open or the path is incorrect. </p>\n"
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "\n<p>The file path is <strong>null</strong>. </p>\n"
  see:
  - type: System.Security.Permissions.IsolatedStorageFilePermission
    commentId: T:System.Security.Permissions.IsolatedStorageFilePermission
  - type: System.Security.Permissions.ReflectionPermission
    commentId: T:System.Security.Permissions.ReflectionPermission
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  nameWithType: IsolatedStorageFile.DeleteFile(String)
- uid: System.IO.IsolatedStorage.IsolatedStorageFile.DirectoryExists(System.String)
  commentId: M:System.IO.IsolatedStorage.IsolatedStorageFile.DirectoryExists(System.String)
  id: DirectoryExists(System.String)
  parent: System.IO.IsolatedStorage.IsolatedStorageFile
  langs:
  - csharp
  - vb
  name: DirectoryExists(String)
  fullName: System.IO.IsolatedStorage.IsolatedStorageFile.DirectoryExists(System.String)
  type: Method
  source:
    remote:
      path: src/System.IO.IsolatedStorage/src/System/IO/IsolatedStorage/IsolatedStorageFile.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: DirectoryExists
    path: src/System.IO.IsolatedStorage/src/System/IO/IsolatedStorage/IsolatedStorageFile.cs
    startLine: 123
  assemblies:
  - System.IO.IsolatedStorage
  namespace: System.IO.IsolatedStorage
  summary: "\n<p>Determines whether the specified path refers to an existing directory in the isolated store.</p>\n"
  syntax:
    content: public bool DirectoryExists(string path)
    content.vb: Public Function DirectoryExists(path As String) As Boolean
    parameters:
    - id: path
      type: System.String
      description: "\n<p>The path to test.</p>\n"
    return:
      type: System.Boolean
      description: "\n<p>\n<strong>true</strong> if <em>path</em> refers to an existing directory in the isolated store and is not <strong>null</strong>; otherwise, <strong>false</strong>.</p>\n"
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "\n<p>\n<em>path</em> is <strong>null</strong>.</p>\n"
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "\n<p>The isolated store is closed.</p>\n"
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: "\n<p>The isolated store has been disposed.</p>\n"
  - type: System.IO.IsolatedStorage.IsolatedStorageException
    commentId: T:System.IO.IsolatedStorage.IsolatedStorageException
    description: "\n<p>The isolated store has been removed. </p>\n<p>-or-</p>\n<p>Isolated storage is disabled.</p>\n"
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  nameWithType: IsolatedStorageFile.DirectoryExists(String)
- uid: System.IO.IsolatedStorage.IsolatedStorageFile.Dispose
  commentId: M:System.IO.IsolatedStorage.IsolatedStorageFile.Dispose
  id: Dispose
  parent: System.IO.IsolatedStorage.IsolatedStorageFile
  langs:
  - csharp
  - vb
  name: Dispose()
  fullName: System.IO.IsolatedStorage.IsolatedStorageFile.Dispose()
  type: Method
  source:
    remote:
      path: src/System.IO.IsolatedStorage/src/System/IO/IsolatedStorage/IsolatedStorageFile.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: Dispose
    path: src/System.IO.IsolatedStorage/src/System/IO/IsolatedStorage/IsolatedStorageFile.cs
    startLine: 592
  assemblies:
  - System.IO.IsolatedStorage
  namespace: System.IO.IsolatedStorage
  summary: "\n<p>Releases all resources used by the <xref href=\"System.IO.IsolatedStorage.IsolatedStorageFile\" data-throw-if-not-resolved=\"false\"></xref>. </p>\n"
  syntax:
    content: public void Dispose()
    content.vb: Public Sub Dispose
  see:
  - type: System.Security.Permissions.ReflectionPermission
    commentId: T:System.Security.Permissions.ReflectionPermission
  implements:
  - System.IDisposable.Dispose
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  nameWithType: IsolatedStorageFile.Dispose()
- uid: System.IO.IsolatedStorage.IsolatedStorageFile.FileExists(System.String)
  commentId: M:System.IO.IsolatedStorage.IsolatedStorageFile.FileExists(System.String)
  id: FileExists(System.String)
  parent: System.IO.IsolatedStorage.IsolatedStorageFile
  langs:
  - csharp
  - vb
  name: FileExists(String)
  fullName: System.IO.IsolatedStorage.IsolatedStorageFile.FileExists(System.String)
  type: Method
  source:
    remote:
      path: src/System.IO.IsolatedStorage/src/System/IO/IsolatedStorage/IsolatedStorageFile.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: FileExists
    path: src/System.IO.IsolatedStorage/src/System/IO/IsolatedStorage/IsolatedStorageFile.cs
    startLine: 111
  assemblies:
  - System.IO.IsolatedStorage
  namespace: System.IO.IsolatedStorage
  summary: "\n<p>Determines whether the specified path refers to an existing file in the isolated store.</p>\n"
  syntax:
    content: public bool FileExists(string path)
    content.vb: Public Function FileExists(path As String) As Boolean
    parameters:
    - id: path
      type: System.String
      description: "\n<p>The path and file name to test.</p>\n"
    return:
      type: System.Boolean
      description: "\n<p>\n<strong>true</strong> if <em>path</em> refers to an existing file in the isolated store and is not <strong>null</strong>; otherwise, <strong>false</strong>.</p>\n"
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "\n<p>\n<em>path</em> is <strong>null</strong>.</p>\n"
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "\n<p>The isolated store is closed.</p>\n"
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: "\n<p>The isolated store has been disposed.</p>\n"
  - type: System.IO.IsolatedStorage.IsolatedStorageException
    commentId: T:System.IO.IsolatedStorage.IsolatedStorageException
    description: "\n<p>The isolated store has been removed. </p>\n"
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  nameWithType: IsolatedStorageFile.FileExists(String)
- uid: System.IO.IsolatedStorage.IsolatedStorageFile.GetCreationTime(System.String)
  commentId: M:System.IO.IsolatedStorage.IsolatedStorageFile.GetCreationTime(System.String)
  id: GetCreationTime(System.String)
  parent: System.IO.IsolatedStorage.IsolatedStorageFile
  langs:
  - csharp
  - vb
  name: GetCreationTime(String)
  fullName: System.IO.IsolatedStorage.IsolatedStorageFile.GetCreationTime(System.String)
  type: Method
  source:
    remote:
      path: src/System.IO.IsolatedStorage/src/System/IO/IsolatedStorage/IsolatedStorageFile.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: GetCreationTime
    path: src/System.IO.IsolatedStorage/src/System/IO/IsolatedStorage/IsolatedStorageFile.cs
    startLine: 271
  assemblies:
  - System.IO.IsolatedStorage
  namespace: System.IO.IsolatedStorage
  summary: "\n<p>Returns the creation date and time of a specified file or directory.</p>\n"
  syntax:
    content: public DateTimeOffset GetCreationTime(string path)
    content.vb: Public Function GetCreationTime(path As String) As DateTimeOffset
    parameters:
    - id: path
      type: System.String
      description: "\n<p>The path to the file or directory for which to obtain creation date and time information.</p>\n"
    return:
      type: System.DateTimeOffset
      description: "\n<p>The creation date and time for the specified file or directory. This value is expressed in local time.</p>\n"
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "\n<p>\n<em>path </em>is a zero-length string, contains only white space, or contains one or more invalid characters defined by the <xref href=\"System.IO.Path.GetInvalidPathChars\" data-throw-if-not-resolved=\"false\"></xref> method.</p>\n"
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "\n<p>\n<em>path </em>is <strong>null</strong>.</p>\n"
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "\n<p>The isolated store has been closed.</p>\n"
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: "\n<p>The isolated store has been disposed.</p>\n"
  - type: System.IO.IsolatedStorage.IsolatedStorageException
    commentId: T:System.IO.IsolatedStorage.IsolatedStorageException
    description: "\n<p>The isolated store has been removed.</p>\n<p>-or-</p>\n<p>Isolated storage is disabled.</p>\n"
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  nameWithType: IsolatedStorageFile.GetCreationTime(String)
- uid: System.IO.IsolatedStorage.IsolatedStorageFile.GetDirectoryNames
  commentId: M:System.IO.IsolatedStorage.IsolatedStorageFile.GetDirectoryNames
  id: GetDirectoryNames
  parent: System.IO.IsolatedStorage.IsolatedStorageFile
  langs:
  - csharp
  - vb
  name: GetDirectoryNames()
  fullName: System.IO.IsolatedStorage.IsolatedStorageFile.GetDirectoryNames()
  type: Method
  source:
    remote:
      path: src/System.IO.IsolatedStorage/src/System/IO/IsolatedStorage/IsolatedStorageFile.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: GetDirectoryNames
    path: src/System.IO.IsolatedStorage/src/System/IO/IsolatedStorage/IsolatedStorageFile.cs
    startLine: 218
  assemblies:
  - System.IO.IsolatedStorage
  namespace: System.IO.IsolatedStorage
  summary: "\n<p>Enumerates the directories at the root of an isolated store.</p>\n"
  syntax:
    content: public string[] GetDirectoryNames()
    content.vb: Public Function GetDirectoryNames As String()
    return:
      type: System.String[]
      description: "\n<p>An array of relative paths of directories at the root of the isolated store. A zero-length array specifies that there are no directories at the root.</p>\n"
  exceptions:
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: "\n<p>The isolated store has been disposed.</p>\n"
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "\n<p>The isolated store is closed.</p>\n"
  - type: System.IO.IsolatedStorage.IsolatedStorageException
    commentId: T:System.IO.IsolatedStorage.IsolatedStorageException
    description: "\n<p>The isolated store has been removed. </p>\n"
  - type: System.UnauthorizedAccessException
    commentId: T:System.UnauthorizedAccessException
    description: "\n<p>Caller does not have permission to enumerate directories.</p>\n"
  - type: System.IO.DirectoryNotFoundException
    commentId: T:System.IO.DirectoryNotFoundException
    description: "\n<p>One or more directories are not found.</p>\n"
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  nameWithType: IsolatedStorageFile.GetDirectoryNames()
- uid: System.IO.IsolatedStorage.IsolatedStorageFile.GetDirectoryNames(System.String)
  commentId: M:System.IO.IsolatedStorage.IsolatedStorageFile.GetDirectoryNames(System.String)
  id: GetDirectoryNames(System.String)
  parent: System.IO.IsolatedStorage.IsolatedStorageFile
  langs:
  - csharp
  - vb
  name: GetDirectoryNames(String)
  fullName: System.IO.IsolatedStorage.IsolatedStorageFile.GetDirectoryNames(System.String)
  type: Method
  source:
    remote:
      path: src/System.IO.IsolatedStorage/src/System/IO/IsolatedStorage/IsolatedStorageFile.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: GetDirectoryNames
    path: src/System.IO.IsolatedStorage/src/System/IO/IsolatedStorage/IsolatedStorageFile.cs
    startLine: 227
  assemblies:
  - System.IO.IsolatedStorage
  namespace: System.IO.IsolatedStorage
  summary: "\n<p>Enumerates the directories in an isolated storage scope that match a given search pattern.</p>\n"
  syntax:
    content: public string[] GetDirectoryNames(string searchPattern)
    content.vb: Public Function GetDirectoryNames(searchPattern As String) As String()
    parameters:
    - id: searchPattern
      type: System.String
      description: "\n<p>A search pattern. Both single-character (\"?\") and multi-character (\"*\") wildcards are supported. </p>\n"
    return:
      type: System.String[]
      description: "\n<p>An array of the relative paths of directories in the isolated storage scope that match <em>searchPattern</em>. A zero-length array specifies that there are no directories that match.</p>\n"
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "\n<p>\n<em>searchPattern</em> is <strong>null</strong>. </p>\n"
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "\n<p>The isolated store is closed.</p>\n"
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: "\n<p>The isolated store has been disposed.</p>\n"
  - type: System.UnauthorizedAccessException
    commentId: T:System.UnauthorizedAccessException
    description: "\n<p>Caller does not have permission to enumerate directories resolved from <em>searchPattern</em>.</p>\n"
  - type: System.IO.DirectoryNotFoundException
    commentId: T:System.IO.DirectoryNotFoundException
    description: "\n<p>The directory or directories specified by <em>searchPattern</em> are not found.</p>\n"
  - type: System.IO.IsolatedStorage.IsolatedStorageException
    commentId: T:System.IO.IsolatedStorage.IsolatedStorageException
    description: "\n<p>The isolated store has been removed. </p>\n"
  see:
  - type: System.Security.Permissions.ReflectionPermission
    commentId: T:System.Security.Permissions.ReflectionPermission
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  nameWithType: IsolatedStorageFile.GetDirectoryNames(String)
- uid: System.IO.IsolatedStorage.IsolatedStorageFile.GetFileNames
  commentId: M:System.IO.IsolatedStorage.IsolatedStorageFile.GetFileNames
  id: GetFileNames
  parent: System.IO.IsolatedStorage.IsolatedStorageFile
  langs:
  - csharp
  - vb
  name: GetFileNames()
  fullName: System.IO.IsolatedStorage.IsolatedStorageFile.GetFileNames()
  type: Method
  source:
    remote:
      path: src/System.IO.IsolatedStorage/src/System/IO/IsolatedStorage/IsolatedStorageFile.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: GetFileNames
    path: src/System.IO.IsolatedStorage/src/System/IO/IsolatedStorage/IsolatedStorageFile.cs
    startLine: 190
  assemblies:
  - System.IO.IsolatedStorage
  namespace: System.IO.IsolatedStorage
  summary: "\n<p>Enumerates the file names at the root of an isolated store.</p>\n"
  syntax:
    content: public string[] GetFileNames()
    content.vb: Public Function GetFileNames As String()
    return:
      type: System.String[]
      description: "\n<p>An array of relative paths of files at the root of the isolated store.  A zero-length array specifies that there are no files at the root.</p>\n"
  exceptions:
  - type: System.IO.IsolatedStorage.IsolatedStorageException
    commentId: T:System.IO.IsolatedStorage.IsolatedStorageException
    description: "\n<p>The isolated store has been removed. </p>\n"
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: "\n<p>The isolated store has been disposed.</p>\n"
  - type: System.IO.DirectoryNotFoundException
    commentId: T:System.IO.DirectoryNotFoundException
    description: "\n<p>File paths from the isolated store root cannot be determined.</p>\n"
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  nameWithType: IsolatedStorageFile.GetFileNames()
- uid: System.IO.IsolatedStorage.IsolatedStorageFile.GetFileNames(System.String)
  commentId: M:System.IO.IsolatedStorage.IsolatedStorageFile.GetFileNames(System.String)
  id: GetFileNames(System.String)
  parent: System.IO.IsolatedStorage.IsolatedStorageFile
  langs:
  - csharp
  - vb
  name: GetFileNames(String)
  fullName: System.IO.IsolatedStorage.IsolatedStorageFile.GetFileNames(System.String)
  type: Method
  source:
    remote:
      path: src/System.IO.IsolatedStorage/src/System/IO/IsolatedStorage/IsolatedStorageFile.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: GetFileNames
    path: src/System.IO.IsolatedStorage/src/System/IO/IsolatedStorage/IsolatedStorageFile.cs
    startLine: 198
  assemblies:
  - System.IO.IsolatedStorage
  namespace: System.IO.IsolatedStorage
  summary: "\n<p>Gets the file names that match a search pattern.</p>\n"
  syntax:
    content: public string[] GetFileNames(string searchPattern)
    content.vb: Public Function GetFileNames(searchPattern As String) As String()
    parameters:
    - id: searchPattern
      type: System.String
      description: "\n<p>A search pattern. Both single-character (\"?\") and multi-character (\"*\") wildcards are supported. </p>\n"
    return:
      type: System.String[]
      description: "\n<p>An array of relative paths of files in the isolated storage scope that match <em>searchPattern</em>. A zero-length array specifies that there are no files that match.</p>\n"
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "\n<p>\n<em>searchPattern</em> is <strong>null</strong>. </p>\n"
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: "\n<p>The isolated store has been disposed.</p>\n"
  - type: System.IO.IsolatedStorage.IsolatedStorageException
    commentId: T:System.IO.IsolatedStorage.IsolatedStorageException
    description: "\n<p>The isolated store has been removed. </p>\n"
  - type: System.IO.DirectoryNotFoundException
    commentId: T:System.IO.DirectoryNotFoundException
    description: "\n<p>The file path specified by <em>searchPattern</em> cannot be found. </p>\n"
  see:
  - type: System.Security.Permissions.ReflectionPermission
    commentId: T:System.Security.Permissions.ReflectionPermission
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  nameWithType: IsolatedStorageFile.GetFileNames(String)
- uid: System.IO.IsolatedStorage.IsolatedStorageFile.GetLastAccessTime(System.String)
  commentId: M:System.IO.IsolatedStorage.IsolatedStorageFile.GetLastAccessTime(System.String)
  id: GetLastAccessTime(System.String)
  parent: System.IO.IsolatedStorage.IsolatedStorageFile
  langs:
  - csharp
  - vb
  name: GetLastAccessTime(String)
  fullName: System.IO.IsolatedStorage.IsolatedStorageFile.GetLastAccessTime(System.String)
  type: Method
  source:
    remote:
      path: src/System.IO.IsolatedStorage/src/System/IO/IsolatedStorage/IsolatedStorageFile.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: GetLastAccessTime
    path: src/System.IO.IsolatedStorage/src/System/IO/IsolatedStorage/IsolatedStorageFile.cs
    startLine: 295
  assemblies:
  - System.IO.IsolatedStorage
  namespace: System.IO.IsolatedStorage
  summary: "\n<p>Returns the date and time a specified file or directory was last accessed.</p>\n"
  syntax:
    content: public DateTimeOffset GetLastAccessTime(string path)
    content.vb: Public Function GetLastAccessTime(path As String) As DateTimeOffset
    parameters:
    - id: path
      type: System.String
      description: "\n<p>The path to the file or directory for which to obtain last access date and time information.</p>\n"
    return:
      type: System.DateTimeOffset
      description: "\n<p>The date and time that the specified file or directory was last accessed. This value is expressed in local time.</p>\n"
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "\n<p>\n<em>path </em>is a zero-length string, contains only white space, or contains one or more invalid characters defined by the <xref href=\"System.IO.Path.GetInvalidPathChars\" data-throw-if-not-resolved=\"false\"></xref> method.</p>\n"
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "\n<p>\n<em>path </em>is <strong>null</strong>.</p>\n"
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "\n<p>The isolated store has been closed.</p>\n"
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: "\n<p>The isolated store has been disposed.</p>\n"
  - type: System.IO.IsolatedStorage.IsolatedStorageException
    commentId: T:System.IO.IsolatedStorage.IsolatedStorageException
    description: "\n<p>The isolated store has been removed.</p>\n<p>-or-</p>\n<p>Isolated storage is disabled.</p>\n"
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  nameWithType: IsolatedStorageFile.GetLastAccessTime(String)
- uid: System.IO.IsolatedStorage.IsolatedStorageFile.GetLastWriteTime(System.String)
  commentId: M:System.IO.IsolatedStorage.IsolatedStorageFile.GetLastWriteTime(System.String)
  id: GetLastWriteTime(System.String)
  parent: System.IO.IsolatedStorage.IsolatedStorageFile
  langs:
  - csharp
  - vb
  name: GetLastWriteTime(String)
  fullName: System.IO.IsolatedStorage.IsolatedStorageFile.GetLastWriteTime(System.String)
  type: Method
  source:
    remote:
      path: src/System.IO.IsolatedStorage/src/System/IO/IsolatedStorage/IsolatedStorageFile.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: GetLastWriteTime
    path: src/System.IO.IsolatedStorage/src/System/IO/IsolatedStorage/IsolatedStorageFile.cs
    startLine: 319
  assemblies:
  - System.IO.IsolatedStorage
  namespace: System.IO.IsolatedStorage
  summary: "\n<p>Returns the date and time a specified file or directory was last written to.</p>\n"
  syntax:
    content: public DateTimeOffset GetLastWriteTime(string path)
    content.vb: Public Function GetLastWriteTime(path As String) As DateTimeOffset
    parameters:
    - id: path
      type: System.String
      description: "\n<p>The path to the file or directory for which to obtain last write date and time information.</p>\n"
    return:
      type: System.DateTimeOffset
      description: "\n<p>The date and time that the specified file or directory was last written to. This value is expressed in local time.</p>\n"
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "\n<p>\n<em>path </em>is a zero-length string, contains only white space, or contains one or more invalid characters defined by the <xref href=\"System.IO.Path.GetInvalidPathChars\" data-throw-if-not-resolved=\"false\"></xref> method.</p>\n"
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "\n<p>\n<em>path </em>is <strong>null</strong>.</p>\n"
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "\n<p>The isolated store has been closed.</p>\n"
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: "\n<p>The isolated store has been disposed.</p>\n"
  - type: System.IO.IsolatedStorage.IsolatedStorageException
    commentId: T:System.IO.IsolatedStorage.IsolatedStorageException
    description: "\n<p>The isolated store has been removed.</p>\n<p>-or-</p>\n<p>Isolated storage is disabled.</p>\n"
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  nameWithType: IsolatedStorageFile.GetLastWriteTime(String)
- uid: System.IO.IsolatedStorage.IsolatedStorageFile.GetUserStoreForApplication
  commentId: M:System.IO.IsolatedStorage.IsolatedStorageFile.GetUserStoreForApplication
  id: GetUserStoreForApplication
  parent: System.IO.IsolatedStorage.IsolatedStorageFile
  langs:
  - csharp
  - vb
  name: GetUserStoreForApplication()
  fullName: System.IO.IsolatedStorage.IsolatedStorageFile.GetUserStoreForApplication()
  type: Method
  source:
    remote:
      path: src/System.IO.IsolatedStorage/src/System/IO/IsolatedStorage/IsolatedStorageFile.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: GetUserStoreForApplication
    path: src/System.IO.IsolatedStorage/src/System/IO/IsolatedStorage/IsolatedStorageFile.cs
    startLine: 499
  assemblies:
  - System.IO.IsolatedStorage
  namespace: System.IO.IsolatedStorage
  summary: "\n<p>Obtains user-scoped isolated storage corresponding to the calling code's application identity.</p>\n"
  syntax:
    content: public static IsolatedStorageFile GetUserStoreForApplication()
    content.vb: Public Shared Function GetUserStoreForApplication As IsolatedStorageFile
    return:
      type: System.IO.IsolatedStorage.IsolatedStorageFile
      description: "\n<p>An object corresponding to the isolated storage scope based on the calling code's assembly identity.</p>\n"
  exceptions:
  - type: System.Security.SecurityException
    commentId: T:System.Security.SecurityException
    description: "\n<p>Sufficient isolated storage permissions have not been granted. </p>\n"
  - type: System.IO.IsolatedStorage.IsolatedStorageException
    commentId: T:System.IO.IsolatedStorage.IsolatedStorageException
    description: "\n<p>An isolated storage location cannot be initialized.</p>\n<p>-or-</p>\n<p>The application identity of the caller cannot be determined, because the <xref href=\"System.AppDomain.ActivationContext\" data-throw-if-not-resolved=\"false\"></xref> property returned <strong>null</strong>.</p>\n<p>-or-</p>\n<p>The permissions for the application domain cannot be determined.</p>\n"
  see:
  - type: System.Security.Permissions.IsolatedStorageFilePermission
    commentId: T:System.Security.Permissions.IsolatedStorageFilePermission
  - type: System.Security.Permissions.ReflectionPermission
    commentId: T:System.Security.Permissions.ReflectionPermission
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  nameWithType: IsolatedStorageFile.GetUserStoreForApplication()
- uid: System.IO.IsolatedStorage.IsolatedStorageFile.MoveDirectory(System.String,System.String)
  commentId: M:System.IO.IsolatedStorage.IsolatedStorageFile.MoveDirectory(System.String,System.String)
  id: MoveDirectory(System.String,System.String)
  parent: System.IO.IsolatedStorage.IsolatedStorageFile
  langs:
  - csharp
  - vb
  name: MoveDirectory(String, String)
  fullName: System.IO.IsolatedStorage.IsolatedStorageFile.MoveDirectory(System.String, System.String)
  type: Method
  source:
    remote:
      path: src/System.IO.IsolatedStorage/src/System/IO/IsolatedStorage/IsolatedStorageFile.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: MoveDirectory
    path: src/System.IO.IsolatedStorage/src/System/IO/IsolatedStorage/IsolatedStorageFile.cs
    startLine: 453
  assemblies:
  - System.IO.IsolatedStorage
  namespace: System.IO.IsolatedStorage
  summary: "\n<p>Moves a specified directory and its contents to a new location.</p>\n"
  syntax:
    content: public void MoveDirectory(string sourceDirectoryName, string destinationDirectoryName)
    content.vb: Public Sub MoveDirectory(sourceDirectoryName As String, destinationDirectoryName As String)
    parameters:
    - id: sourceDirectoryName
      type: System.String
      description: "\n<p>The name of the directory to move.</p>\n"
    - id: destinationDirectoryName
      type: System.String
      description: "\n<p>The path to the new location for <em>sourceDirectoryName</em>. This cannot be the path to an existing directory.</p>\n"
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "\n<p>\n<em>sourceFileName </em>or<em> destinationFileName </em>is a zero-length string, contains only white space, or contains one or more invalid characters defined by the <xref href=\"System.IO.Path.GetInvalidPathChars\" data-throw-if-not-resolved=\"false\"></xref> method.</p>\n"
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "\n<p>\n<em>sourceFileName </em>or<em> destinationFileName </em>is <strong>null</strong>.</p>\n"
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "\n<p>The isolated store has been closed.</p>\n"
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: "\n<p>The isolated store has been disposed.</p>\n"
  - type: System.IO.DirectoryNotFoundException
    commentId: T:System.IO.DirectoryNotFoundException
    description: "\n<p>\n<em>sourceDirectoryName</em> does not exist.</p>\n"
  - type: System.IO.IsolatedStorage.IsolatedStorageException
    commentId: T:System.IO.IsolatedStorage.IsolatedStorageException
    description: "\n<p>The isolated store has been removed.</p>\n<p>-or-</p>\n<p>Isolated storage is disabled.</p>\n<p>-or-</p>\n<p>\n<em>destinationDirectoryName</em> already exists.</p>\n<p>-or-</p>\n<p>\n<em>sourceDirectoryName</em> and <em>destinationDirectoryName</em> refer to the same directory.</p>\n"
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  nameWithType: IsolatedStorageFile.MoveDirectory(String, String)
- uid: System.IO.IsolatedStorage.IsolatedStorageFile.MoveFile(System.String,System.String)
  commentId: M:System.IO.IsolatedStorage.IsolatedStorageFile.MoveFile(System.String,System.String)
  id: MoveFile(System.String,System.String)
  parent: System.IO.IsolatedStorage.IsolatedStorageFile
  langs:
  - csharp
  - vb
  name: MoveFile(String, String)
  fullName: System.IO.IsolatedStorage.IsolatedStorageFile.MoveFile(System.String, System.String)
  type: Method
  source:
    remote:
      path: src/System.IO.IsolatedStorage/src/System/IO/IsolatedStorage/IsolatedStorageFile.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: MoveFile
    path: src/System.IO.IsolatedStorage/src/System/IO/IsolatedStorage/IsolatedStorageFile.cs
    startLine: 410
  assemblies:
  - System.IO.IsolatedStorage
  namespace: System.IO.IsolatedStorage
  summary: "\n<p>Moves a specified file to a new location, and optionally lets you specify a new file name.</p>\n"
  syntax:
    content: public void MoveFile(string sourceFileName, string destinationFileName)
    content.vb: Public Sub MoveFile(sourceFileName As String, destinationFileName As String)
    parameters:
    - id: sourceFileName
      type: System.String
      description: "\n<p>The name of the file to move.</p>\n"
    - id: destinationFileName
      type: System.String
      description: "\n<p>The path to the new location for the file. If a file name is included, the moved file will have that name.</p>\n"
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "\n<p>\n<em>sourceFileName </em>or<em> destinationFileName </em>is a zero-length string, contains only white space, or contains one or more invalid characters defined by the <xref href=\"System.IO.Path.GetInvalidPathChars\" data-throw-if-not-resolved=\"false\"></xref> method.</p>\n"
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "\n<p>\n<em>sourceFileName </em>or<em> destinationFileName </em>is <strong>null</strong>.</p>\n"
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "\n<p>The isolated store has been closed.</p>\n"
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: "\n<p>The isolated store has been disposed.</p>\n"
  - type: System.IO.FileNotFoundException
    commentId: T:System.IO.FileNotFoundException
    description: "\n<p>\n<em>sourceFileName</em> was not found.</p>\n"
  - type: System.IO.IsolatedStorage.IsolatedStorageException
    commentId: T:System.IO.IsolatedStorage.IsolatedStorageException
    description: "\n<p>The isolated store has been removed.</p>\n<p>-or-</p>\n<p>Isolated storage is disabled.</p>\n"
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  nameWithType: IsolatedStorageFile.MoveFile(String, String)
- uid: System.IO.IsolatedStorage.IsolatedStorageFile.OpenFile(System.String,System.IO.FileMode)
  commentId: M:System.IO.IsolatedStorage.IsolatedStorageFile.OpenFile(System.String,System.IO.FileMode)
  id: OpenFile(System.String,System.IO.FileMode)
  parent: System.IO.IsolatedStorage.IsolatedStorageFile
  langs:
  - csharp
  - vb
  name: OpenFile(String, FileMode)
  fullName: System.IO.IsolatedStorage.IsolatedStorageFile.OpenFile(System.String, System.IO.FileMode)
  type: Method
  source:
    remote:
      path: src/System.IO.IsolatedStorage/src/System/IO/IsolatedStorage/IsolatedStorageFile.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: OpenFile
    path: src/System.IO.IsolatedStorage/src/System/IO/IsolatedStorage/IsolatedStorageFile.cs
    startLine: 247
  assemblies:
  - System.IO.IsolatedStorage
  namespace: System.IO.IsolatedStorage
  summary: "\n<p>Opens a file in the specified mode.</p>\n"
  syntax:
    content: public IsolatedStorageFileStream OpenFile(string path, FileMode mode)
    content.vb: Public Function OpenFile(path As String, mode As FileMode) As IsolatedStorageFileStream
    parameters:
    - id: path
      type: System.String
      description: "\n<p>The relative path of the file within the isolated store.</p>\n"
    - id: mode
      type: System.IO.FileMode
      description: "\n<p>One of the enumeration values that specifies how to open the file. </p>\n"
    return:
      type: System.IO.IsolatedStorage.IsolatedStorageFileStream
      description: "\n<p>A file that is opened in the specified mode, with read/write access, and is unshared.</p>\n"
  exceptions:
  - type: System.IO.IsolatedStorage.IsolatedStorageException
    commentId: T:System.IO.IsolatedStorage.IsolatedStorageException
    description: "\n<p>The isolated store has been removed. </p>\n<p>-or-</p>\n<p>Isolated storage is disabled.</p>\n"
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "\n<p>\n<em>path</em> is malformed.</p>\n"
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "\n<p>\n<em>path</em> is <strong>null</strong>.</p>\n"
  - type: System.IO.DirectoryNotFoundException
    commentId: T:System.IO.DirectoryNotFoundException
    description: "\n<p>The directory in <em>path</em> does not exist.</p>\n"
  - type: System.IO.FileNotFoundException
    commentId: T:System.IO.FileNotFoundException
    description: "\n<p>No file was found and the <em>mode</em> is set to <xref href=\"System.IO.FileMode.Open\" data-throw-if-not-resolved=\"false\"></xref>.</p>\n"
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: "\n<p>The isolated store has been disposed.</p>\n"
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  nameWithType: IsolatedStorageFile.OpenFile(String, FileMode)
- uid: System.IO.IsolatedStorage.IsolatedStorageFile.OpenFile(System.String,System.IO.FileMode,System.IO.FileAccess)
  commentId: M:System.IO.IsolatedStorage.IsolatedStorageFile.OpenFile(System.String,System.IO.FileMode,System.IO.FileAccess)
  id: OpenFile(System.String,System.IO.FileMode,System.IO.FileAccess)
  parent: System.IO.IsolatedStorage.IsolatedStorageFile
  langs:
  - csharp
  - vb
  name: OpenFile(String, FileMode, FileAccess)
  fullName: System.IO.IsolatedStorage.IsolatedStorageFile.OpenFile(System.String, System.IO.FileMode, System.IO.FileAccess)
  type: Method
  source:
    remote:
      path: src/System.IO.IsolatedStorage/src/System/IO/IsolatedStorage/IsolatedStorageFile.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: OpenFile
    path: src/System.IO.IsolatedStorage/src/System/IO/IsolatedStorage/IsolatedStorageFile.cs
    startLine: 253
  assemblies:
  - System.IO.IsolatedStorage
  namespace: System.IO.IsolatedStorage
  summary: "\n<p>Opens a file in the specified mode with the specified read/write access.</p>\n"
  syntax:
    content: public IsolatedStorageFileStream OpenFile(string path, FileMode mode, FileAccess access)
    content.vb: Public Function OpenFile(path As String, mode As FileMode, access As FileAccess) As IsolatedStorageFileStream
    parameters:
    - id: path
      type: System.String
      description: "\n<p>The relative path of the file within the isolated store.</p>\n"
    - id: mode
      type: System.IO.FileMode
      description: "\n<p>One of the enumeration values that specifies how to open the file.</p>\n"
    - id: access
      type: System.IO.FileAccess
      description: "\n<p>One of the enumeration values that specifies whether the file will be opened with read, write, or read/write access.</p>\n"
    return:
      type: System.IO.IsolatedStorage.IsolatedStorageFileStream
      description: "\n<p>A file that is opened in the specified mode and access, and is unshared.</p>\n"
  exceptions:
  - type: System.IO.IsolatedStorage.IsolatedStorageException
    commentId: T:System.IO.IsolatedStorage.IsolatedStorageException
    description: "\n<p>The isolated store has been removed. </p>\n<p>-or-</p>\n<p>Isolated storage is disabled.</p>\n"
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "\n<p>\n<em>path</em> is malformed.</p>\n"
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "\n<p>\n<em>path</em> is <strong>null</strong>.</p>\n"
  - type: System.IO.DirectoryNotFoundException
    commentId: T:System.IO.DirectoryNotFoundException
    description: "\n<p>The directory in <em>path</em> does not exist.</p>\n"
  - type: System.IO.FileNotFoundException
    commentId: T:System.IO.FileNotFoundException
    description: "\n<p>No file was found and the <em>mode</em> is set to <xref href=\"System.IO.FileMode.Open\" data-throw-if-not-resolved=\"false\"></xref>. </p>\n"
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: "\n<p>The isolated store has been disposed.</p>\n"
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  nameWithType: IsolatedStorageFile.OpenFile(String, FileMode, FileAccess)
- uid: System.IO.IsolatedStorage.IsolatedStorageFile.OpenFile(System.String,System.IO.FileMode,System.IO.FileAccess,System.IO.FileShare)
  commentId: M:System.IO.IsolatedStorage.IsolatedStorageFile.OpenFile(System.String,System.IO.FileMode,System.IO.FileAccess,System.IO.FileShare)
  id: OpenFile(System.String,System.IO.FileMode,System.IO.FileAccess,System.IO.FileShare)
  parent: System.IO.IsolatedStorage.IsolatedStorageFile
  langs:
  - csharp
  - vb
  name: OpenFile(String, FileMode, FileAccess, FileShare)
  fullName: System.IO.IsolatedStorage.IsolatedStorageFile.OpenFile(System.String, System.IO.FileMode, System.IO.FileAccess, System.IO.FileShare)
  type: Method
  source:
    remote:
      path: src/System.IO.IsolatedStorage/src/System/IO/IsolatedStorage/IsolatedStorageFile.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: OpenFile
    path: src/System.IO.IsolatedStorage/src/System/IO/IsolatedStorage/IsolatedStorageFile.cs
    startLine: 259
  assemblies:
  - System.IO.IsolatedStorage
  namespace: System.IO.IsolatedStorage
  summary: "\n<p>Opens a file in the specified mode, with the specified read/write access and sharing permission.</p>\n"
  syntax:
    content: public IsolatedStorageFileStream OpenFile(string path, FileMode mode, FileAccess access, FileShare share)
    content.vb: Public Function OpenFile(path As String, mode As FileMode, access As FileAccess, share As FileShare) As IsolatedStorageFileStream
    parameters:
    - id: path
      type: System.String
      description: "\n<p>The relative path of the file within the isolated store.</p>\n"
    - id: mode
      type: System.IO.FileMode
      description: "\n<p>One of the enumeration values that specifies how to open or create the file.</p>\n"
    - id: access
      type: System.IO.FileAccess
      description: "\n<p>One of the enumeration values that specifies whether the file will be opened with read, write, or read/write access</p>\n"
    - id: share
      type: System.IO.FileShare
      description: "\n<p>A bitwise combination of enumeration values that specify the type of access other <xref href=\"System.IO.IsolatedStorage.IsolatedStorageFileStream\" data-throw-if-not-resolved=\"false\"></xref>   objects have to this file.</p>\n"
    return:
      type: System.IO.IsolatedStorage.IsolatedStorageFileStream
      description: "\n<p>A file that is opened in the specified mode and access, and with the specified sharing options.</p>\n"
  exceptions:
  - type: System.IO.IsolatedStorage.IsolatedStorageException
    commentId: T:System.IO.IsolatedStorage.IsolatedStorageException
    description: "\n<p>The isolated store has been removed. </p>\n<p>-or-</p>\n<p>Isolated storage is disabled.</p>\n"
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "\n<p>\n<em>path</em> is malformed.</p>\n"
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "\n<p>\n<em>path</em> is <strong>null</strong>.</p>\n"
  - type: System.IO.DirectoryNotFoundException
    commentId: T:System.IO.DirectoryNotFoundException
    description: "\n<p>The directory in <em>path</em> does not exist.</p>\n"
  - type: System.IO.FileNotFoundException
    commentId: T:System.IO.FileNotFoundException
    description: "\n<p>No file was found and the <em>mode</em> is set to <xref href=\"System.IO.FileInfo.Open(System.IO.FileMode)\" data-throw-if-not-resolved=\"false\"></xref>.</p>\n"
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: "\n<p>The isolated store has been disposed.</p>\n"
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  nameWithType: IsolatedStorageFile.OpenFile(String, FileMode, FileAccess, FileShare)
references:
- uid: System.IO.IsolatedStorage
  isExternal: false
  name: System.IO.IsolatedStorage
  fullName: System.IO.IsolatedStorage
  nameWithType: System.IO.IsolatedStorage
  commentId: N:System.IO.IsolatedStorage
- uid: System.Object
  parent: System
  isExternal: false
  name: Object
  fullName: System.Object
  nameWithType: Object
  commentId: T:System.Object
- uid: System.IDisposable
  parent: System
  isExternal: false
  name: IDisposable
  fullName: System.IDisposable
  nameWithType: IDisposable
  commentId: T:System.IDisposable
- uid: System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  nameWithType: Object.ToString()
  commentId: M:System.Object.ToString
- uid: System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
  nameWithType: Object.Equals(Object)
  commentId: M:System.Object.Equals(System.Object)
- uid: System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
  nameWithType: Object.Equals(Object, Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
  nameWithType: Object.ReferenceEquals(Object, Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
- uid: System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  nameWithType: Object.GetHashCode()
  commentId: M:System.Object.GetHashCode
- uid: System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  nameWithType: Object.GetType()
  commentId: M:System.Object.GetType
- uid: System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  nameWithType: Object.MemberwiseClone()
  commentId: M:System.Object.MemberwiseClone
- uid: System
  isExternal: false
  name: System
  fullName: System
  nameWithType: System
  commentId: N:System
- uid: System.String
  parent: System
  isExternal: false
  name: String
  fullName: System.String
  nameWithType: String
  commentId: T:System.String
- uid: System.Boolean
  parent: System
  isExternal: false
  name: Boolean
  fullName: System.Boolean
  nameWithType: Boolean
  commentId: T:System.Boolean
- uid: System.IO.IsolatedStorage.IsolatedStorageFileStream
  parent: System.IO.IsolatedStorage
  isExternal: false
  name: IsolatedStorageFileStream
  fullName: System.IO.IsolatedStorage.IsolatedStorageFileStream
  nameWithType: IsolatedStorageFileStream
  commentId: T:System.IO.IsolatedStorage.IsolatedStorageFileStream
- uid: System.IDisposable.Dispose
  parent: System.IDisposable
  isExternal: false
  name: Dispose()
  fullName: System.IDisposable.Dispose()
  spec.csharp:
  - uid: System.IDisposable.Dispose
    name: Dispose
    fullName: System.IDisposable.Dispose
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.IDisposable.Dispose
    name: Dispose
    fullName: System.IDisposable.Dispose
  - name: (
    fullName: (
  - name: )
    fullName: )
  nameWithType: IDisposable.Dispose()
  commentId: M:System.IDisposable.Dispose
- uid: System.DateTimeOffset
  parent: System
  isExternal: false
  name: DateTimeOffset
  fullName: System.DateTimeOffset
  nameWithType: DateTimeOffset
  commentId: T:System.DateTimeOffset
- uid: System.String[]
  name: String[]
  fullName: System.String[]
  fullname.vb: System.String()
  name.vb: String()
  spec.csharp:
  - uid: System.String
    name: String
    fullName: System.String
    isExternal: true
  - name: '[]'
    fullName: '[]'
  spec.vb:
  - uid: System.String
    name: String
    fullName: System.String
    isExternal: true
  - name: ()
    fullName: ()
  nameWithType: String[]
  nameWithType.vb: String()
- uid: System.IO.IsolatedStorage.IsolatedStorageFile
  parent: System.IO.IsolatedStorage
  isExternal: false
  name: IsolatedStorageFile
  fullName: System.IO.IsolatedStorage.IsolatedStorageFile
  nameWithType: IsolatedStorageFile
  commentId: T:System.IO.IsolatedStorage.IsolatedStorageFile
- uid: System.IO.FileMode
  parent: System.IO
  isExternal: false
  name: FileMode
  fullName: System.IO.FileMode
  nameWithType: FileMode
  commentId: T:System.IO.FileMode
- uid: System.IO
  isExternal: false
  name: System.IO
  fullName: System.IO
  nameWithType: System.IO
  commentId: N:System.IO
- uid: System.IO.FileAccess
  parent: System.IO
  isExternal: false
  name: FileAccess
  fullName: System.IO.FileAccess
  nameWithType: FileAccess
  commentId: T:System.IO.FileAccess
- uid: System.IO.FileShare
  parent: System.IO
  isExternal: false
  name: FileShare
  fullName: System.IO.FileShare
  nameWithType: FileShare
  commentId: T:System.IO.FileShare
- uid: System.ArgumentException
  parent: System
  isExternal: false
  name: ArgumentException
  fullName: System.ArgumentException
  nameWithType: ArgumentException
  commentId: T:System.ArgumentException
- uid: System.ArgumentNullException
  isExternal: false
  name: ArgumentNullException
  fullName: System.ArgumentNullException
  nameWithType: ArgumentNullException
  commentId: T:System.ArgumentNullException
- uid: System.InvalidOperationException
  parent: System
  isExternal: false
  name: InvalidOperationException
  fullName: System.InvalidOperationException
  nameWithType: InvalidOperationException
  commentId: T:System.InvalidOperationException
- uid: System.ObjectDisposedException
  isExternal: false
  name: ObjectDisposedException
  fullName: System.ObjectDisposedException
  nameWithType: ObjectDisposedException
  commentId: T:System.ObjectDisposedException
- uid: System.IO.FileNotFoundException
  isExternal: false
  name: FileNotFoundException
  fullName: System.IO.FileNotFoundException
  nameWithType: FileNotFoundException
  commentId: T:System.IO.FileNotFoundException
- uid: System.IO.DirectoryNotFoundException
  isExternal: false
  name: DirectoryNotFoundException
  fullName: System.IO.DirectoryNotFoundException
  nameWithType: DirectoryNotFoundException
  commentId: T:System.IO.DirectoryNotFoundException
- uid: System.IO.IsolatedStorage.IsolatedStorageException
  isExternal: false
  name: IsolatedStorageException
  fullName: System.IO.IsolatedStorage.IsolatedStorageException
  nameWithType: IsolatedStorageException
  commentId: T:System.IO.IsolatedStorage.IsolatedStorageException
- uid: System.UnauthorizedAccessException
  parent: System
  isExternal: false
  name: UnauthorizedAccessException
  fullName: System.UnauthorizedAccessException
  nameWithType: UnauthorizedAccessException
  commentId: T:System.UnauthorizedAccessException
- uid: System.Security.SecurityException
  isExternal: false
  name: SecurityException
  fullName: System.Security.SecurityException
  nameWithType: SecurityException
  commentId: T:System.Security.SecurityException
