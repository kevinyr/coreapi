items:
- uid: System.Net.WebException
  commentId: T:System.Net.WebException
  id: WebException
  parent: System.Net
  children:
  - System.Net.WebException.#ctor
  - System.Net.WebException.#ctor(System.String)
  - System.Net.WebException.#ctor(System.String,System.Exception)
  - System.Net.WebException.#ctor(System.String,System.Exception,System.Net.WebExceptionStatus,System.Net.WebResponse)
  - System.Net.WebException.#ctor(System.String,System.Net.WebExceptionStatus)
  - System.Net.WebException.Response
  - System.Net.WebException.Status
  langs:
  - csharp
  - vb
  name: WebException
  fullName: System.Net.WebException
  type: Class
  source:
    remote:
      path: src/System.Net.Requests/ref/System.Net.Requests.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: WebException
    path: src/System.Net.Requests/ref/System.Net.Requests.cs
    startLine: 55
  assemblies:
  - System.Net.Requests
  namespace: System.Net
  summary: "\n<p>The exception that is thrown when an error occurs while accessing the network through a pluggable protocol.</p>\n"
  syntax:
    content: 'public class WebException : InvalidOperationException, ISerializable, _Exception'
    content.vb: >-
      Public Class WebException
          Inherits InvalidOperationException
          Implements ISerializable, _Exception
  seealso:
  - type: System.Exception
    commentId: T:System.Exception
  inheritance:
  - System.Object
  - System.Exception
  - System.SystemException
  - System.InvalidOperationException
  implements:
  - System.Runtime.Serialization.ISerializable
  - System.Runtime.InteropServices._Exception
  inheritedMembers:
  - System.Exception.GetBaseException
  - System.Exception.ToString
  - System.Exception.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)
  - System.Exception.GetType
  - System.Exception.Message
  - System.Exception.Data
  - System.Exception.InnerException
  - System.Exception.TargetSite
  - System.Exception.StackTrace
  - System.Exception.HelpLink
  - System.Exception.Source
  - System.Exception.HResult
  - System.Exception.SerializeObjectState
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.MemberwiseClone
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
  nameWithType: WebException
- uid: System.Net.WebException.#ctor
  commentId: M:System.Net.WebException.#ctor
  id: '#ctor'
  parent: System.Net.WebException
  langs:
  - csharp
  - vb
  name: WebException()
  fullName: System.Net.WebException.WebException()
  type: Constructor
  source:
    remote:
      path: src/System.Net.Requests/ref/System.Net.Requests.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: .ctor
    path: src/System.Net.Requests/ref/System.Net.Requests.cs
    startLine: 57
  assemblies:
  - System.Net.Requests
  namespace: System.Net
  summary: "\n<p>Initializes a new instance of the <xref href=\"System.Net.WebException\" data-throw-if-not-resolved=\"false\"></xref> class.</p>\n"
  syntax:
    content: public WebException()
    content.vb: Public Sub New
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  nameWithType: WebException.WebException()
- uid: System.Net.WebException.#ctor(System.String)
  commentId: M:System.Net.WebException.#ctor(System.String)
  id: '#ctor(System.String)'
  parent: System.Net.WebException
  langs:
  - csharp
  - vb
  name: WebException(String)
  fullName: System.Net.WebException.WebException(System.String)
  type: Constructor
  source:
    remote:
      path: src/System.Net.Requests/ref/System.Net.Requests.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: .ctor
    path: src/System.Net.Requests/ref/System.Net.Requests.cs
    startLine: 58
  assemblies:
  - System.Net.Requests
  namespace: System.Net
  summary: "\n<p>Initializes a new instance of the <xref href=\"System.Net.WebException\" data-throw-if-not-resolved=\"false\"></xref> class with the specified error message.</p>\n"
  syntax:
    content: public WebException(string message)
    content.vb: Public Sub New(message As String)
    parameters:
    - id: message
      type: System.String
      description: "\n<p>The text of the error message. </p>\n"
  seealso:
  - type: System.Exception
    commentId: T:System.Exception
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  nameWithType: WebException.WebException(String)
- uid: System.Net.WebException.#ctor(System.String,System.Exception)
  commentId: M:System.Net.WebException.#ctor(System.String,System.Exception)
  id: '#ctor(System.String,System.Exception)'
  parent: System.Net.WebException
  langs:
  - csharp
  - vb
  name: WebException(String, Exception)
  fullName: System.Net.WebException.WebException(System.String, System.Exception)
  type: Constructor
  source:
    remote:
      path: src/System.Net.Requests/ref/System.Net.Requests.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: .ctor
    path: src/System.Net.Requests/ref/System.Net.Requests.cs
    startLine: 59
  assemblies:
  - System.Net.Requests
  namespace: System.Net
  summary: "\n<p>Initializes a new instance of the <xref href=\"System.Net.WebException\" data-throw-if-not-resolved=\"false\"></xref> class with the specified error message and nested exception.</p>\n"
  syntax:
    content: public WebException(string message, Exception innerException)
    content.vb: Public Sub New(message As String, innerException As Exception)
    parameters:
    - id: message
      type: System.String
      description: "\n<p>The text of the error message. </p>\n"
    - id: innerException
      type: System.Exception
      description: "\n<p>A nested exception. </p>\n"
  seealso:
  - type: System.Exception
    commentId: T:System.Exception
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  nameWithType: WebException.WebException(String, Exception)
- uid: System.Net.WebException.#ctor(System.String,System.Exception,System.Net.WebExceptionStatus,System.Net.WebResponse)
  commentId: M:System.Net.WebException.#ctor(System.String,System.Exception,System.Net.WebExceptionStatus,System.Net.WebResponse)
  id: '#ctor(System.String,System.Exception,System.Net.WebExceptionStatus,System.Net.WebResponse)'
  parent: System.Net.WebException
  langs:
  - csharp
  - vb
  name: WebException(String, Exception, WebExceptionStatus, WebResponse)
  fullName: System.Net.WebException.WebException(System.String, System.Exception, System.Net.WebExceptionStatus, System.Net.WebResponse)
  type: Constructor
  source:
    remote:
      path: src/System.Net.Requests/ref/System.Net.Requests.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: .ctor
    path: src/System.Net.Requests/ref/System.Net.Requests.cs
    startLine: 60
  assemblies:
  - System.Net.Requests
  namespace: System.Net
  summary: "\n<p>Initializes a new instance of the <xref href=\"System.Net.WebException\" data-throw-if-not-resolved=\"false\"></xref> class with the specified error message, nested exception, status, and response.</p>\n"
  syntax:
    content: public WebException(string message, Exception innerException, WebExceptionStatus status, WebResponse response)
    content.vb: Public Sub New(message As String, innerException As Exception, status As WebExceptionStatus, response As WebResponse)
    parameters:
    - id: message
      type: System.String
      description: "\n<p>The text of the error message. </p>\n"
    - id: innerException
      type: System.Exception
      description: "\n<p>A nested exception. </p>\n"
    - id: status
      type: System.Net.WebExceptionStatus
      description: "\n<p>One of the <xref href=\"System.Net.WebExceptionStatus\" data-throw-if-not-resolved=\"false\"></xref> values. </p>\n"
    - id: response
      type: System.Net.WebResponse
      description: "\n<p>A <xref href=\"System.Net.WebResponse\" data-throw-if-not-resolved=\"false\"></xref> instance that contains the response from the remote host. </p>\n"
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  nameWithType: WebException.WebException(String, Exception, WebExceptionStatus, WebResponse)
- uid: System.Net.WebException.#ctor(System.String,System.Net.WebExceptionStatus)
  commentId: M:System.Net.WebException.#ctor(System.String,System.Net.WebExceptionStatus)
  id: '#ctor(System.String,System.Net.WebExceptionStatus)'
  parent: System.Net.WebException
  langs:
  - csharp
  - vb
  name: WebException(String, WebExceptionStatus)
  fullName: System.Net.WebException.WebException(System.String, System.Net.WebExceptionStatus)
  type: Constructor
  source:
    remote:
      path: src/System.Net.Requests/ref/System.Net.Requests.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: .ctor
    path: src/System.Net.Requests/ref/System.Net.Requests.cs
    startLine: 61
  assemblies:
  - System.Net.Requests
  namespace: System.Net
  summary: "\n<p>Initializes a new instance of the <xref href=\"System.Net.WebException\" data-throw-if-not-resolved=\"false\"></xref> class with the specified error message and status.</p>\n"
  syntax:
    content: public WebException(string message, WebExceptionStatus status)
    content.vb: Public Sub New(message As String, status As WebExceptionStatus)
    parameters:
    - id: message
      type: System.String
      description: "\n<p>The text of the error message. </p>\n"
    - id: status
      type: System.Net.WebExceptionStatus
      description: "\n<p>One of the <xref href=\"System.Net.WebExceptionStatus\" data-throw-if-not-resolved=\"false\"></xref> values. </p>\n"
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  nameWithType: WebException.WebException(String, WebExceptionStatus)
- uid: System.Net.WebException.Response
  commentId: P:System.Net.WebException.Response
  id: Response
  parent: System.Net.WebException
  langs:
  - csharp
  - vb
  name: Response
  fullName: System.Net.WebException.Response
  type: Property
  source:
    remote:
      path: src/System.Net.Requests/ref/System.Net.Requests.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: Response
    path: src/System.Net.Requests/ref/System.Net.Requests.cs
    startLine: 62
  assemblies:
  - System.Net.Requests
  namespace: System.Net
  summary: "\n<p>Gets the response that the remote host returned.</p>\n"
  syntax:
    content: public WebResponse Response { get; }
    content.vb: Public ReadOnly Property Response As WebResponse
    parameters: []
    return:
      type: System.Net.WebResponse
      description: "\n<p>If a response is available from the Internet resource, a <xref href=\"System.Net.WebResponse\" data-throw-if-not-resolved=\"false\"></xref> instance that contains the error response from an Internet resource; otherwise, <strong>null</strong>.</p>\n"
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
  nameWithType: WebException.Response
- uid: System.Net.WebException.Status
  commentId: P:System.Net.WebException.Status
  id: Status
  parent: System.Net.WebException
  langs:
  - csharp
  - vb
  name: Status
  fullName: System.Net.WebException.Status
  type: Property
  source:
    remote:
      path: src/System.Net.Requests/ref/System.Net.Requests.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: Status
    path: src/System.Net.Requests/ref/System.Net.Requests.cs
    startLine: 63
  assemblies:
  - System.Net.Requests
  namespace: System.Net
  summary: "\n<p>Gets the status of the response.</p>\n"
  syntax:
    content: public WebExceptionStatus Status { get; }
    content.vb: Public ReadOnly Property Status As WebExceptionStatus
    parameters: []
    return:
      type: System.Net.WebExceptionStatus
      description: "\n<p>One of the <xref href=\"System.Net.WebExceptionStatus\" data-throw-if-not-resolved=\"false\"></xref> values.</p>\n"
  seealso:
  - type: System.Net.WebExceptionStatus
    commentId: T:System.Net.WebExceptionStatus
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
  nameWithType: WebException.Status
references:
- uid: System.Net
  isExternal: false
  name: System.Net
  fullName: System.Net
  commentId: N:System.Net
  nameWithType: System.Net
- uid: System.Object
  parent: System
  isExternal: false
  name: Object
  fullName: System.Object
  commentId: T:System.Object
  nameWithType: Object
- uid: System.Exception
  parent: System
  isExternal: false
  name: Exception
  fullName: System.Exception
  commentId: T:System.Exception
  nameWithType: Exception
- uid: System.SystemException
  parent: System
  isExternal: true
  name: SystemException
  fullName: System.SystemException
  commentId: T:System.SystemException
  nameWithType: SystemException
- uid: System.InvalidOperationException
  parent: System
  isExternal: false
  name: InvalidOperationException
  fullName: System.InvalidOperationException
  commentId: T:System.InvalidOperationException
  nameWithType: InvalidOperationException
- uid: System.Runtime.Serialization.ISerializable
  parent: System.Runtime.Serialization
  isExternal: false
  name: ISerializable
  fullName: System.Runtime.Serialization.ISerializable
  commentId: T:System.Runtime.Serialization.ISerializable
  nameWithType: ISerializable
- uid: System.Runtime.InteropServices._Exception
  parent: System.Runtime.InteropServices
  isExternal: true
  name: _Exception
  fullName: System.Runtime.InteropServices._Exception
  commentId: T:System.Runtime.InteropServices._Exception
  nameWithType: _Exception
- uid: System.Exception.GetBaseException
  parent: System.Exception
  isExternal: false
  name: GetBaseException()
  fullName: System.Exception.GetBaseException()
  spec.csharp:
  - uid: System.Exception.GetBaseException
    name: GetBaseException
    fullName: System.Exception.GetBaseException
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Exception.GetBaseException
    name: GetBaseException
    fullName: System.Exception.GetBaseException
  - name: (
    fullName: (
  - name: )
    fullName: )
  commentId: M:System.Exception.GetBaseException
  nameWithType: Exception.GetBaseException()
- uid: System.Exception.ToString
  parent: System.Exception
  isExternal: false
  name: ToString()
  fullName: System.Exception.ToString()
  spec.csharp:
  - uid: System.Exception.ToString
    name: ToString
    fullName: System.Exception.ToString
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Exception.ToString
    name: ToString
    fullName: System.Exception.ToString
  - name: (
    fullName: (
  - name: )
    fullName: )
  commentId: M:System.Exception.ToString
  nameWithType: Exception.ToString()
- uid: System.Exception.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)
  parent: System.Exception
  isExternal: true
  name: GetObjectData(SerializationInfo, StreamingContext)
  fullName: System.Exception.GetObjectData(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext)
  spec.csharp:
  - uid: System.Exception.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)
    name: GetObjectData
    fullName: System.Exception.GetObjectData
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Runtime.Serialization.SerializationInfo
    name: SerializationInfo
    fullName: System.Runtime.Serialization.SerializationInfo
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Runtime.Serialization.StreamingContext
    name: StreamingContext
    fullName: System.Runtime.Serialization.StreamingContext
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Exception.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)
    name: GetObjectData
    fullName: System.Exception.GetObjectData
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Runtime.Serialization.SerializationInfo
    name: SerializationInfo
    fullName: System.Runtime.Serialization.SerializationInfo
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Runtime.Serialization.StreamingContext
    name: StreamingContext
    fullName: System.Runtime.Serialization.StreamingContext
    isExternal: true
  - name: )
    fullName: )
  commentId: M:System.Exception.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)
  nameWithType: Exception.GetObjectData(SerializationInfo, StreamingContext)
- uid: System.Exception.GetType
  parent: System.Exception
  isExternal: true
  name: GetType()
  fullName: System.Exception.GetType()
  spec.csharp:
  - uid: System.Exception.GetType
    name: GetType
    fullName: System.Exception.GetType
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Exception.GetType
    name: GetType
    fullName: System.Exception.GetType
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  commentId: M:System.Exception.GetType
  nameWithType: Exception.GetType()
- uid: System.Exception.Message
  parent: System.Exception
  isExternal: false
  name: Message
  fullName: System.Exception.Message
  commentId: P:System.Exception.Message
  nameWithType: Exception.Message
- uid: System.Exception.Data
  parent: System.Exception
  isExternal: false
  name: Data
  fullName: System.Exception.Data
  commentId: P:System.Exception.Data
  nameWithType: Exception.Data
- uid: System.Exception.InnerException
  parent: System.Exception
  isExternal: false
  name: InnerException
  fullName: System.Exception.InnerException
  commentId: P:System.Exception.InnerException
  nameWithType: Exception.InnerException
- uid: System.Exception.TargetSite
  parent: System.Exception
  isExternal: true
  name: TargetSite
  fullName: System.Exception.TargetSite
  commentId: P:System.Exception.TargetSite
  nameWithType: Exception.TargetSite
- uid: System.Exception.StackTrace
  parent: System.Exception
  isExternal: false
  name: StackTrace
  fullName: System.Exception.StackTrace
  commentId: P:System.Exception.StackTrace
  nameWithType: Exception.StackTrace
- uid: System.Exception.HelpLink
  parent: System.Exception
  isExternal: false
  name: HelpLink
  fullName: System.Exception.HelpLink
  commentId: P:System.Exception.HelpLink
  nameWithType: Exception.HelpLink
- uid: System.Exception.Source
  parent: System.Exception
  isExternal: false
  name: Source
  fullName: System.Exception.Source
  commentId: P:System.Exception.Source
  nameWithType: Exception.Source
- uid: System.Exception.HResult
  parent: System.Exception
  isExternal: false
  name: HResult
  fullName: System.Exception.HResult
  commentId: P:System.Exception.HResult
  nameWithType: Exception.HResult
- uid: System.Exception.SerializeObjectState
  parent: System.Exception
  isExternal: true
  name: SerializeObjectState
  fullName: System.Exception.SerializeObjectState
  commentId: E:System.Exception.SerializeObjectState
  nameWithType: Exception.SerializeObjectState
- uid: System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
  commentId: M:System.Object.Equals(System.Object)
  nameWithType: Object.Equals(Object)
- uid: System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
  commentId: M:System.Object.Equals(System.Object,System.Object)
  nameWithType: Object.Equals(Object, Object)
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
- uid: System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  commentId: M:System.Object.GetHashCode
  nameWithType: Object.GetHashCode()
- uid: System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  commentId: M:System.Object.MemberwiseClone
  nameWithType: Object.MemberwiseClone()
- uid: System
  isExternal: false
  name: System
  fullName: System
  commentId: N:System
  nameWithType: System
- uid: System.Runtime.Serialization
  isExternal: false
  name: System.Runtime.Serialization
  fullName: System.Runtime.Serialization
  commentId: N:System.Runtime.Serialization
  nameWithType: System.Runtime.Serialization
- uid: System.Runtime.InteropServices
  isExternal: false
  name: System.Runtime.InteropServices
  fullName: System.Runtime.InteropServices
  commentId: N:System.Runtime.InteropServices
  nameWithType: System.Runtime.InteropServices
- uid: System.String
  parent: System
  isExternal: false
  name: String
  fullName: System.String
  commentId: T:System.String
  nameWithType: String
- uid: System.Net.WebExceptionStatus
  parent: System.Net
  isExternal: false
  name: WebExceptionStatus
  fullName: System.Net.WebExceptionStatus
  commentId: T:System.Net.WebExceptionStatus
  nameWithType: WebExceptionStatus
- uid: System.Net.WebResponse
  parent: System.Net
  isExternal: false
  name: WebResponse
  fullName: System.Net.WebResponse
  commentId: T:System.Net.WebResponse
  nameWithType: WebResponse
