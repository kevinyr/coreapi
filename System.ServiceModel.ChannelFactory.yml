items:
- uid: System.ServiceModel.ChannelFactory
  commentId: T:System.ServiceModel.ChannelFactory
  id: ChannelFactory
  parent: System.ServiceModel
  children:
  - System.ServiceModel.ChannelFactory.#ctor
  - System.ServiceModel.ChannelFactory.ApplyConfiguration(System.String)
  - System.ServiceModel.ChannelFactory.CreateDescription
  - System.ServiceModel.ChannelFactory.CreateFactory
  - System.ServiceModel.ChannelFactory.Credentials
  - System.ServiceModel.ChannelFactory.DefaultCloseTimeout
  - System.ServiceModel.ChannelFactory.DefaultOpenTimeout
  - System.ServiceModel.ChannelFactory.Endpoint
  - System.ServiceModel.ChannelFactory.EnsureOpened
  - System.ServiceModel.ChannelFactory.GetProperty``1
  - System.ServiceModel.ChannelFactory.InitializeEndpoint(System.ServiceModel.Channels.Binding,System.ServiceModel.EndpointAddress)
  - System.ServiceModel.ChannelFactory.InitializeEndpoint(System.ServiceModel.Description.ServiceEndpoint)
  - System.ServiceModel.ChannelFactory.InitializeEndpoint(System.String,System.ServiceModel.EndpointAddress)
  - System.ServiceModel.ChannelFactory.OnAbort
  - System.ServiceModel.ChannelFactory.OnBeginClose(System.TimeSpan,System.AsyncCallback,System.Object)
  - System.ServiceModel.ChannelFactory.OnBeginOpen(System.TimeSpan,System.AsyncCallback,System.Object)
  - System.ServiceModel.ChannelFactory.OnClose(System.TimeSpan)
  - System.ServiceModel.ChannelFactory.OnEndClose(System.IAsyncResult)
  - System.ServiceModel.ChannelFactory.OnEndOpen(System.IAsyncResult)
  - System.ServiceModel.ChannelFactory.OnOpen(System.TimeSpan)
  - System.ServiceModel.ChannelFactory.OnOpened
  - System.ServiceModel.ChannelFactory.OnOpening
  - System.ServiceModel.ChannelFactory.System#IDisposable#Dispose
  langs:
  - csharp
  - vb
  name: ChannelFactory
  fullName: System.ServiceModel.ChannelFactory
  type: Class
  source:
    remote:
      path: src/System.ServiceModel.Primitives/ref/System.ServiceModel.Primitives.cs
      branch: master
      repo: https://github.com/dotnet/wcf.git
    id: ChannelFactory
    path: src/System.ServiceModel.Primitives/ref/System.ServiceModel.Primitives.cs
    startLine: 20
  assemblies:
  - System.ServiceModel.Primitives
  namespace: System.ServiceModel
  summary: "\n<p>Creates and manages the channels that are used by clients to send messages to service endpoints.</p>\n"
  syntax:
    content: 'public abstract class ChannelFactory : CommunicationObject, IDisposable, IChannelFactory, ICommunicationObject'
    content.vb: >-
      Public MustInherit Class ChannelFactory
          Inherits CommunicationObject
          Implements IDisposable, IChannelFactory, ICommunicationObject
  inheritance:
  - System.Object
  - System.ServiceModel.Channels.CommunicationObject
  implements:
  - System.IDisposable
  - System.ServiceModel.Channels.IChannelFactory
  - System.ServiceModel.ICommunicationObject
  inheritedMembers:
  - System.ServiceModel.Channels.CommunicationObject.IsDisposed
  - System.ServiceModel.Channels.CommunicationObject.State
  - System.ServiceModel.Channels.CommunicationObject.ThisLock
  - System.ServiceModel.Channels.CommunicationObject.Closed
  - System.ServiceModel.Channels.CommunicationObject.Closing
  - System.ServiceModel.Channels.CommunicationObject.Faulted
  - System.ServiceModel.Channels.CommunicationObject.Opened
  - System.ServiceModel.Channels.CommunicationObject.Opening
  - System.ServiceModel.Channels.CommunicationObject.Abort
  - System.ServiceModel.Channels.CommunicationObject.BeginClose(System.AsyncCallback,System.Object)
  - System.ServiceModel.Channels.CommunicationObject.BeginClose(System.TimeSpan,System.AsyncCallback,System.Object)
  - System.ServiceModel.Channels.CommunicationObject.BeginOpen(System.AsyncCallback,System.Object)
  - System.ServiceModel.Channels.CommunicationObject.BeginOpen(System.TimeSpan,System.AsyncCallback,System.Object)
  - System.ServiceModel.Channels.CommunicationObject.Close
  - System.ServiceModel.Channels.CommunicationObject.Close(System.TimeSpan)
  - System.ServiceModel.Channels.CommunicationObject.EndClose(System.IAsyncResult)
  - System.ServiceModel.Channels.CommunicationObject.EndOpen(System.IAsyncResult)
  - System.ServiceModel.Channels.CommunicationObject.Fault
  - System.ServiceModel.Channels.CommunicationObject.GetCommunicationObjectType
  - System.ServiceModel.Channels.CommunicationObject.OnClosed
  - System.ServiceModel.Channels.CommunicationObject.OnClosing
  - System.ServiceModel.Channels.CommunicationObject.OnFaulted
  - System.ServiceModel.Channels.CommunicationObject.Open
  - System.ServiceModel.Channels.CommunicationObject.Open(System.TimeSpan)
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  modifiers.csharp:
  - public
  - abstract
  - class
  modifiers.vb:
  - Public
  - MustInherit
  - Class
  nameWithType: ChannelFactory
- uid: System.ServiceModel.ChannelFactory.#ctor
  commentId: M:System.ServiceModel.ChannelFactory.#ctor
  id: '#ctor'
  parent: System.ServiceModel.ChannelFactory
  langs:
  - csharp
  - vb
  name: ChannelFactory()
  fullName: System.ServiceModel.ChannelFactory.ChannelFactory()
  type: Constructor
  source:
    remote:
      path: src/System.ServiceModel.Primitives/ref/System.ServiceModel.Primitives.cs
      branch: master
      repo: https://github.com/dotnet/wcf.git
    id: .ctor
    path: src/System.ServiceModel.Primitives/ref/System.ServiceModel.Primitives.cs
    startLine: 22
  assemblies:
  - System.ServiceModel.Primitives
  namespace: System.ServiceModel
  summary: "\n<p>Initializes a new instance of the <xref href=\"System.ServiceModel.ChannelFactory\" data-throw-if-not-resolved=\"false\"></xref> class.  </p>\n"
  syntax:
    content: protected ChannelFactory()
    content.vb: Protected Sub New
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
  nameWithType: ChannelFactory.ChannelFactory()
- uid: System.ServiceModel.ChannelFactory.Credentials
  commentId: P:System.ServiceModel.ChannelFactory.Credentials
  id: Credentials
  parent: System.ServiceModel.ChannelFactory
  langs:
  - csharp
  - vb
  name: Credentials
  fullName: System.ServiceModel.ChannelFactory.Credentials
  type: Property
  source:
    remote:
      path: src/System.ServiceModel.Primitives/ref/System.ServiceModel.Primitives.cs
      branch: master
      repo: https://github.com/dotnet/wcf.git
    id: Credentials
    path: src/System.ServiceModel.Primitives/ref/System.ServiceModel.Primitives.cs
    startLine: 23
  assemblies:
  - System.ServiceModel.Primitives
  namespace: System.ServiceModel
  summary: "\n<p>Gets the credentials used by clients to communicate a service endpoint over the channels produced by the factory.</p>\n"
  syntax:
    content: public ClientCredentials Credentials { get; }
    content.vb: Public ReadOnly Property Credentials As ClientCredentials
    parameters: []
    return:
      type: System.ServiceModel.Description.ClientCredentials
      description: "\n<p>The <xref href=\"System.ServiceModel.Description.ClientCredentials\" data-throw-if-not-resolved=\"false\"></xref> used by clients if they are configured for the factory or if the endpoint is non-<strong>null</strong> and is in either the created or opening communication state; otherwise <strong>null</strong>.</p>\n"
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
  nameWithType: ChannelFactory.Credentials
- uid: System.ServiceModel.ChannelFactory.DefaultCloseTimeout
  commentId: P:System.ServiceModel.ChannelFactory.DefaultCloseTimeout
  id: DefaultCloseTimeout
  parent: System.ServiceModel.ChannelFactory
  langs:
  - csharp
  - vb
  name: DefaultCloseTimeout
  fullName: System.ServiceModel.ChannelFactory.DefaultCloseTimeout
  type: Property
  source:
    remote:
      path: src/System.ServiceModel.Primitives/ref/System.ServiceModel.Primitives.cs
      branch: master
      repo: https://github.com/dotnet/wcf.git
    id: DefaultCloseTimeout
    path: src/System.ServiceModel.Primitives/ref/System.ServiceModel.Primitives.cs
    startLine: 24
  assemblies:
  - System.ServiceModel.Primitives
  namespace: System.ServiceModel
  summary: "\n<p>Gets the default interval of time provided for a close operation to complete.</p>\n"
  syntax:
    content: protected override TimeSpan DefaultCloseTimeout { get; }
    content.vb: Protected Overrides ReadOnly Property DefaultCloseTimeout As TimeSpan
    parameters: []
    return:
      type: System.TimeSpan
      description: "\n<p>The default <xref href=\"System.Timespan\" data-throw-if-not-resolved=\"false\"></xref> that specifies how long the close operation has to complete before timing out.</p>\n"
  overridden: System.ServiceModel.Channels.CommunicationObject.DefaultCloseTimeout
  modifiers.csharp:
  - protected
  - override
  - get
  modifiers.vb:
  - Protected
  - Overrides
  - ReadOnly
  nameWithType: ChannelFactory.DefaultCloseTimeout
- uid: System.ServiceModel.ChannelFactory.DefaultOpenTimeout
  commentId: P:System.ServiceModel.ChannelFactory.DefaultOpenTimeout
  id: DefaultOpenTimeout
  parent: System.ServiceModel.ChannelFactory
  langs:
  - csharp
  - vb
  name: DefaultOpenTimeout
  fullName: System.ServiceModel.ChannelFactory.DefaultOpenTimeout
  type: Property
  source:
    remote:
      path: src/System.ServiceModel.Primitives/ref/System.ServiceModel.Primitives.cs
      branch: master
      repo: https://github.com/dotnet/wcf.git
    id: DefaultOpenTimeout
    path: src/System.ServiceModel.Primitives/ref/System.ServiceModel.Primitives.cs
    startLine: 25
  assemblies:
  - System.ServiceModel.Primitives
  namespace: System.ServiceModel
  summary: "\n<p>Gets the default interval of time provided for an open operation to complete.</p>\n"
  syntax:
    content: protected override TimeSpan DefaultOpenTimeout { get; }
    content.vb: Protected Overrides ReadOnly Property DefaultOpenTimeout As TimeSpan
    parameters: []
    return:
      type: System.TimeSpan
      description: "\n<p>The default <xref href=\"System.TimeSpan\" data-throw-if-not-resolved=\"false\"></xref> that specifies how long the open operation has to complete before timing out.</p>\n"
  overridden: System.ServiceModel.Channels.CommunicationObject.DefaultOpenTimeout
  modifiers.csharp:
  - protected
  - override
  - get
  modifiers.vb:
  - Protected
  - Overrides
  - ReadOnly
  nameWithType: ChannelFactory.DefaultOpenTimeout
- uid: System.ServiceModel.ChannelFactory.Endpoint
  commentId: P:System.ServiceModel.ChannelFactory.Endpoint
  id: Endpoint
  parent: System.ServiceModel.ChannelFactory
  langs:
  - csharp
  - vb
  name: Endpoint
  fullName: System.ServiceModel.ChannelFactory.Endpoint
  type: Property
  source:
    remote:
      path: src/System.ServiceModel.Primitives/ref/System.ServiceModel.Primitives.cs
      branch: master
      repo: https://github.com/dotnet/wcf.git
    id: Endpoint
    path: src/System.ServiceModel.Primitives/ref/System.ServiceModel.Primitives.cs
    startLine: 26
  assemblies:
  - System.ServiceModel.Primitives
  namespace: System.ServiceModel
  summary: "\n<p>Gets the service endpoint to which the channels produced by the factory connect.</p>\n"
  syntax:
    content: public ServiceEndpoint Endpoint { get; }
    content.vb: Public ReadOnly Property Endpoint As ServiceEndpoint
    parameters: []
    return:
      type: System.ServiceModel.Description.ServiceEndpoint
      description: "\n<p>The <xref href=\"System.ServiceModel.Description.ServiceEndpoint\" data-throw-if-not-resolved=\"false\"></xref> to which the channels produced by the factory connect.</p>\n"
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
  nameWithType: ChannelFactory.Endpoint
- uid: System.ServiceModel.ChannelFactory.ApplyConfiguration(System.String)
  commentId: M:System.ServiceModel.ChannelFactory.ApplyConfiguration(System.String)
  id: ApplyConfiguration(System.String)
  parent: System.ServiceModel.ChannelFactory
  langs:
  - csharp
  - vb
  name: ApplyConfiguration(String)
  fullName: System.ServiceModel.ChannelFactory.ApplyConfiguration(System.String)
  type: Method
  source:
    remote:
      path: src/System.ServiceModel.Primitives/ref/System.ServiceModel.Primitives.cs
      branch: master
      repo: https://github.com/dotnet/wcf.git
    id: ApplyConfiguration
    path: src/System.ServiceModel.Primitives/ref/System.ServiceModel.Primitives.cs
    startLine: 27
  assemblies:
  - System.ServiceModel.Primitives
  namespace: System.ServiceModel
  summary: "\n<p>Initializes the channel factory with the behaviors provided by a specified configuration file and with those in the service endpoint of the channel factory.</p>\n"
  syntax:
    content: protected virtual void ApplyConfiguration(string configurationName)
    content.vb: Protected Overridable Sub ApplyConfiguration(configurationName As String)
    parameters:
    - id: configurationName
      type: System.String
      description: "\n<p>The name of the configuration file.</p>\n"
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "\n<p>The service endpoint of the channel factory is <strong>null</strong>.</p>\n"
  modifiers.csharp:
  - protected
  - virtual
  modifiers.vb:
  - Protected
  - Overridable
  nameWithType: ChannelFactory.ApplyConfiguration(String)
- uid: System.ServiceModel.ChannelFactory.CreateDescription
  commentId: M:System.ServiceModel.ChannelFactory.CreateDescription
  id: CreateDescription
  parent: System.ServiceModel.ChannelFactory
  langs:
  - csharp
  - vb
  name: CreateDescription()
  fullName: System.ServiceModel.ChannelFactory.CreateDescription()
  type: Method
  source:
    remote:
      path: src/System.ServiceModel.Primitives/ref/System.ServiceModel.Primitives.cs
      branch: master
      repo: https://github.com/dotnet/wcf.git
    id: CreateDescription
    path: src/System.ServiceModel.Primitives/ref/System.ServiceModel.Primitives.cs
    startLine: 28
  assemblies:
  - System.ServiceModel.Primitives
  namespace: System.ServiceModel
  summary: "\n<p>When implemented in a derived class, creates a description of the service endpoint associated with the channel factory.</p>\n"
  syntax:
    content: protected abstract ServiceEndpoint CreateDescription()
    content.vb: Protected MustOverride Function CreateDescription As ServiceEndpoint
    return:
      type: System.ServiceModel.Description.ServiceEndpoint
      description: "\n<p>The <xref href=\"System.ServiceModel.Description.ServiceEndpoint\" data-throw-if-not-resolved=\"false\"></xref> associated with the channel factory.</p>\n"
  modifiers.csharp:
  - protected
  - abstract
  modifiers.vb:
  - Protected
  - MustOverride
  nameWithType: ChannelFactory.CreateDescription()
- uid: System.ServiceModel.ChannelFactory.CreateFactory
  commentId: M:System.ServiceModel.ChannelFactory.CreateFactory
  id: CreateFactory
  parent: System.ServiceModel.ChannelFactory
  langs:
  - csharp
  - vb
  name: CreateFactory()
  fullName: System.ServiceModel.ChannelFactory.CreateFactory()
  type: Method
  source:
    remote:
      path: src/System.ServiceModel.Primitives/ref/System.ServiceModel.Primitives.cs
      branch: master
      repo: https://github.com/dotnet/wcf.git
    id: CreateFactory
    path: src/System.ServiceModel.Primitives/ref/System.ServiceModel.Primitives.cs
    startLine: 29
  assemblies:
  - System.ServiceModel.Primitives
  namespace: System.ServiceModel
  summary: "\n<p>Builds the channel factory for the current endpoint of the factory.</p>\n"
  syntax:
    content: protected virtual IChannelFactory CreateFactory()
    content.vb: Protected Overridable Function CreateFactory As IChannelFactory
    return:
      type: System.ServiceModel.Channels.IChannelFactory
      description: "\n<p>An <xref href=\"System.ServiceModel.Channels.IChannelFactory\" data-throw-if-not-resolved=\"false\"></xref> for the endpoint of the current factory.</p>\n"
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "\n<p>The endpoint of the service that the factory channels connect to is <strong>null</strong> or the endpoint's binding is <strong>null</strong> or is missing the element with the configuration name specified.</p>\n"
  modifiers.csharp:
  - protected
  - virtual
  modifiers.vb:
  - Protected
  - Overridable
  nameWithType: ChannelFactory.CreateFactory()
- uid: System.ServiceModel.ChannelFactory.EnsureOpened
  commentId: M:System.ServiceModel.ChannelFactory.EnsureOpened
  id: EnsureOpened
  parent: System.ServiceModel.ChannelFactory
  langs:
  - csharp
  - vb
  name: EnsureOpened()
  fullName: System.ServiceModel.ChannelFactory.EnsureOpened()
  type: Method
  source:
    remote:
      path: src/System.ServiceModel.Primitives/ref/System.ServiceModel.Primitives.cs
      branch: master
      repo: https://github.com/dotnet/wcf.git
    id: EnsureOpened
    path: src/System.ServiceModel.Primitives/ref/System.ServiceModel.Primitives.cs
    startLine: 30
  assemblies:
  - System.ServiceModel.Primitives
  namespace: System.ServiceModel
  summary: "\n<p>Opens the current channel factory if it is not yet opened.</p>\n"
  syntax:
    content: protected void EnsureOpened()
    content.vb: Protected Sub EnsureOpened
  exceptions:
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: "\n<p>The current factory is either closing or closed and so cannot be opened.</p>\n"
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
  nameWithType: ChannelFactory.EnsureOpened()
- uid: System.ServiceModel.ChannelFactory.GetProperty``1
  commentId: M:System.ServiceModel.ChannelFactory.GetProperty``1
  id: GetProperty``1
  parent: System.ServiceModel.ChannelFactory
  langs:
  - csharp
  - vb
  name: GetProperty<T>()
  fullName: System.ServiceModel.ChannelFactory.GetProperty<T>()
  type: Method
  source:
    remote:
      path: src/System.ServiceModel.Primitives/ref/System.ServiceModel.Primitives.cs
      branch: master
      repo: https://github.com/dotnet/wcf.git
    id: GetProperty
    path: src/System.ServiceModel.Primitives/ref/System.ServiceModel.Primitives.cs
    startLine: 31
  assemblies:
  - System.ServiceModel.Primitives
  namespace: System.ServiceModel
  summary: "\n<p>Returns the typed object requested, if present, from the appropriate layer in the channel stack, or <strong>null</strong> if not present.</p>\n"
  syntax:
    content: 'public T GetProperty<T>()where T : class'
    content.vb: Public Function GetProperty(Of T As Class) As T
    typeParameters:
    - id: T
      description: "\n<p>The typed object for which the method is querying.</p>\n"
    return:
      type: '{T}'
      description: "\n<p>The typed object <em>T</em> requested if it is present or <strong>null</strong> if it is not.</p>\n"
  implements:
  - System.ServiceModel.Channels.IChannelFactory.GetProperty``1
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: System.ServiceModel.ChannelFactory.GetProperty(Of T)()
  name.vb: GetProperty(Of T)()
  nameWithType: ChannelFactory.GetProperty<T>()
  nameWithType.vb: ChannelFactory.GetProperty(Of T)()
- uid: System.ServiceModel.ChannelFactory.InitializeEndpoint(System.ServiceModel.Channels.Binding,System.ServiceModel.EndpointAddress)
  commentId: M:System.ServiceModel.ChannelFactory.InitializeEndpoint(System.ServiceModel.Channels.Binding,System.ServiceModel.EndpointAddress)
  id: InitializeEndpoint(System.ServiceModel.Channels.Binding,System.ServiceModel.EndpointAddress)
  parent: System.ServiceModel.ChannelFactory
  langs:
  - csharp
  - vb
  name: InitializeEndpoint(Binding, EndpointAddress)
  fullName: System.ServiceModel.ChannelFactory.InitializeEndpoint(System.ServiceModel.Channels.Binding, System.ServiceModel.EndpointAddress)
  type: Method
  source:
    remote:
      path: src/System.ServiceModel.Primitives/ref/System.ServiceModel.Primitives.cs
      branch: master
      repo: https://github.com/dotnet/wcf.git
    id: InitializeEndpoint
    path: src/System.ServiceModel.Primitives/ref/System.ServiceModel.Primitives.cs
    startLine: 32
  assemblies:
  - System.ServiceModel.Primitives
  namespace: System.ServiceModel
  summary: "\n<p>Initializes the service endpoint of the channel factory with a specified binding and address.</p>\n"
  syntax:
    content: protected void InitializeEndpoint(Binding binding, EndpointAddress address)
    content.vb: Protected Sub InitializeEndpoint(binding As Binding, address As EndpointAddress)
    parameters:
    - id: binding
      type: System.ServiceModel.Channels.Binding
      description: "\n<p>The <xref href=\"System.ServiceModel.Channels.Binding\" data-throw-if-not-resolved=\"false\"></xref> with which to initialize the channel factory.</p>\n"
    - id: address
      type: System.ServiceModel.EndpointAddress
      description: "\n<p>The <xref href=\"System.ServiceModel.EndpointAddress\" data-throw-if-not-resolved=\"false\"></xref> with which to initialize the channel factory.</p>\n"
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
  nameWithType: ChannelFactory.InitializeEndpoint(Binding, EndpointAddress)
- uid: System.ServiceModel.ChannelFactory.InitializeEndpoint(System.ServiceModel.Description.ServiceEndpoint)
  commentId: M:System.ServiceModel.ChannelFactory.InitializeEndpoint(System.ServiceModel.Description.ServiceEndpoint)
  id: InitializeEndpoint(System.ServiceModel.Description.ServiceEndpoint)
  parent: System.ServiceModel.ChannelFactory
  langs:
  - csharp
  - vb
  name: InitializeEndpoint(ServiceEndpoint)
  fullName: System.ServiceModel.ChannelFactory.InitializeEndpoint(System.ServiceModel.Description.ServiceEndpoint)
  type: Method
  source:
    remote:
      path: src/System.ServiceModel.Primitives/ref/System.ServiceModel.Primitives.cs
      branch: master
      repo: https://github.com/dotnet/wcf.git
    id: InitializeEndpoint
    path: src/System.ServiceModel.Primitives/ref/System.ServiceModel.Primitives.cs
    startLine: 33
  assemblies:
  - System.ServiceModel.Primitives
  namespace: System.ServiceModel
  summary: "\n<p>Initializes the service endpoint of the channel factory with a specified endpoint.</p>\n"
  syntax:
    content: protected void InitializeEndpoint(ServiceEndpoint endpoint)
    content.vb: Protected Sub InitializeEndpoint(endpoint As ServiceEndpoint)
    parameters:
    - id: endpoint
      type: System.ServiceModel.Description.ServiceEndpoint
      description: "\n<p>The <xref href=\"System.ServiceModel.Description.ServiceEndpoint\" data-throw-if-not-resolved=\"false\"></xref> to initialize the channel factory with.</p>\n"
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "\n<p>\n<em>endpoint</em> is <strong>null</strong>.</p>\n"
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
  nameWithType: ChannelFactory.InitializeEndpoint(ServiceEndpoint)
- uid: System.ServiceModel.ChannelFactory.InitializeEndpoint(System.String,System.ServiceModel.EndpointAddress)
  commentId: M:System.ServiceModel.ChannelFactory.InitializeEndpoint(System.String,System.ServiceModel.EndpointAddress)
  id: InitializeEndpoint(System.String,System.ServiceModel.EndpointAddress)
  parent: System.ServiceModel.ChannelFactory
  langs:
  - csharp
  - vb
  name: InitializeEndpoint(String, EndpointAddress)
  fullName: System.ServiceModel.ChannelFactory.InitializeEndpoint(System.String, System.ServiceModel.EndpointAddress)
  type: Method
  source:
    remote:
      path: src/System.ServiceModel.Primitives/ref/System.ServiceModel.Primitives.cs
      branch: master
      repo: https://github.com/dotnet/wcf.git
    id: InitializeEndpoint
    path: src/System.ServiceModel.Primitives/ref/System.ServiceModel.Primitives.cs
    startLine: 34
  assemblies:
  - System.ServiceModel.Primitives
  namespace: System.ServiceModel
  summary: "\n<p>Initializes the service endpoint of the channel factory with a specified address and configuration.</p>\n"
  syntax:
    content: protected void InitializeEndpoint(string configurationName, EndpointAddress address)
    content.vb: Protected Sub InitializeEndpoint(configurationName As String, address As EndpointAddress)
    parameters:
    - id: configurationName
      type: System.String
      description: "\n<p>The name of the configuration file used to initialize the channel factory.</p>\n"
    - id: address
      type: System.ServiceModel.EndpointAddress
      description: "\n<p>The <xref href=\"System.ServiceModel.EndpointAddress\" data-throw-if-not-resolved=\"false\"></xref> with which to initialize the channel factory.</p>\n"
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
  nameWithType: ChannelFactory.InitializeEndpoint(String, EndpointAddress)
- uid: System.ServiceModel.ChannelFactory.OnAbort
  commentId: M:System.ServiceModel.ChannelFactory.OnAbort
  id: OnAbort
  parent: System.ServiceModel.ChannelFactory
  langs:
  - csharp
  - vb
  name: OnAbort()
  fullName: System.ServiceModel.ChannelFactory.OnAbort()
  type: Method
  source:
    remote:
      path: src/System.ServiceModel.Primitives/ref/System.ServiceModel.Primitives.cs
      branch: master
      repo: https://github.com/dotnet/wcf.git
    id: OnAbort
    path: src/System.ServiceModel.Primitives/ref/System.ServiceModel.Primitives.cs
    startLine: 35
  assemblies:
  - System.ServiceModel.Primitives
  namespace: System.ServiceModel
  summary: "\n<p>Terminates the inner channel factory of the current channel factory.</p>\n"
  syntax:
    content: protected override void OnAbort()
    content.vb: Protected Overrides Sub OnAbort
  overridden: System.ServiceModel.Channels.CommunicationObject.OnAbort
  modifiers.csharp:
  - protected
  - override
  modifiers.vb:
  - Protected
  - Overrides
  nameWithType: ChannelFactory.OnAbort()
- uid: System.ServiceModel.ChannelFactory.OnBeginClose(System.TimeSpan,System.AsyncCallback,System.Object)
  commentId: M:System.ServiceModel.ChannelFactory.OnBeginClose(System.TimeSpan,System.AsyncCallback,System.Object)
  id: OnBeginClose(System.TimeSpan,System.AsyncCallback,System.Object)
  parent: System.ServiceModel.ChannelFactory
  langs:
  - csharp
  - vb
  name: OnBeginClose(TimeSpan, AsyncCallback, Object)
  fullName: System.ServiceModel.ChannelFactory.OnBeginClose(System.TimeSpan, System.AsyncCallback, System.Object)
  type: Method
  source:
    remote:
      path: src/System.ServiceModel.Primitives/ref/System.ServiceModel.Primitives.cs
      branch: master
      repo: https://github.com/dotnet/wcf.git
    id: OnBeginClose
    path: src/System.ServiceModel.Primitives/ref/System.ServiceModel.Primitives.cs
    startLine: 36
  assemblies:
  - System.ServiceModel.Primitives
  namespace: System.ServiceModel
  summary: "\n<p>Begins an asynchronous close operation on the inner channel factory of the current channel factory that has a state object associated with it. </p>\n"
  syntax:
    content: protected override IAsyncResult OnBeginClose(TimeSpan timeout, AsyncCallback callback, object state)
    content.vb: Protected Overrides Function OnBeginClose(timeout As TimeSpan, callback As AsyncCallback, state As Object) As IAsyncResult
    parameters:
    - id: timeout
      type: System.TimeSpan
      description: "\n<p>The <xref href=\"System.TimeSpan\" data-throw-if-not-resolved=\"false\"></xref> that specifies how long the operation has to complete before timing out.</p>\n"
    - id: callback
      type: System.AsyncCallback
      description: "\n<p>The <xref href=\"System.AsyncCallback\" data-throw-if-not-resolved=\"false\"></xref> delegate that receives the notification of the asynchronous operation completion.</p>\n"
    - id: state
      type: System.Object
      description: "\n<p>An object, specified by the application, that contains state information associated with the asynchronous operation.</p>\n"
    return:
      type: System.IAsyncResult
      description: "\n<p>The <xref href=\"System.IAsyncResult\" data-throw-if-not-resolved=\"false\"></xref> that references the asynchronous operation.</p>\n"
  overridden: System.ServiceModel.Channels.CommunicationObject.OnBeginClose(System.TimeSpan,System.AsyncCallback,System.Object)
  modifiers.csharp:
  - protected
  - override
  modifiers.vb:
  - Protected
  - Overrides
  nameWithType: ChannelFactory.OnBeginClose(TimeSpan, AsyncCallback, Object)
- uid: System.ServiceModel.ChannelFactory.OnBeginOpen(System.TimeSpan,System.AsyncCallback,System.Object)
  commentId: M:System.ServiceModel.ChannelFactory.OnBeginOpen(System.TimeSpan,System.AsyncCallback,System.Object)
  id: OnBeginOpen(System.TimeSpan,System.AsyncCallback,System.Object)
  parent: System.ServiceModel.ChannelFactory
  langs:
  - csharp
  - vb
  name: OnBeginOpen(TimeSpan, AsyncCallback, Object)
  fullName: System.ServiceModel.ChannelFactory.OnBeginOpen(System.TimeSpan, System.AsyncCallback, System.Object)
  type: Method
  source:
    remote:
      path: src/System.ServiceModel.Primitives/ref/System.ServiceModel.Primitives.cs
      branch: master
      repo: https://github.com/dotnet/wcf.git
    id: OnBeginOpen
    path: src/System.ServiceModel.Primitives/ref/System.ServiceModel.Primitives.cs
    startLine: 37
  assemblies:
  - System.ServiceModel.Primitives
  namespace: System.ServiceModel
  summary: "\n<p>Begins an asynchronous open operation on the inner channel factory of the current channel factory that has a state object associated with it. </p>\n"
  syntax:
    content: protected override IAsyncResult OnBeginOpen(TimeSpan timeout, AsyncCallback callback, object state)
    content.vb: Protected Overrides Function OnBeginOpen(timeout As TimeSpan, callback As AsyncCallback, state As Object) As IAsyncResult
    parameters:
    - id: timeout
      type: System.TimeSpan
      description: "\n<p>The <xref href=\"System.TimeSpan\" data-throw-if-not-resolved=\"false\"></xref> that specifies how long the operation has to complete before timing out.</p>\n"
    - id: callback
      type: System.AsyncCallback
      description: "\n<p>The <xref href=\"System.AsyncCallback\" data-throw-if-not-resolved=\"false\"></xref> delegate that receives the notification of the asynchronous operation completion.</p>\n"
    - id: state
      type: System.Object
      description: "\n<p>An object, specified by the application, that contains state information associated with the asynchronous operation.</p>\n"
    return:
      type: System.IAsyncResult
      description: "\n<p>The <xref href=\"System.IAsyncResult\" data-throw-if-not-resolved=\"false\"></xref> that references the asynchronous operation.</p>\n"
  overridden: System.ServiceModel.Channels.CommunicationObject.OnBeginOpen(System.TimeSpan,System.AsyncCallback,System.Object)
  modifiers.csharp:
  - protected
  - override
  modifiers.vb:
  - Protected
  - Overrides
  nameWithType: ChannelFactory.OnBeginOpen(TimeSpan, AsyncCallback, Object)
- uid: System.ServiceModel.ChannelFactory.OnClose(System.TimeSpan)
  commentId: M:System.ServiceModel.ChannelFactory.OnClose(System.TimeSpan)
  id: OnClose(System.TimeSpan)
  parent: System.ServiceModel.ChannelFactory
  langs:
  - csharp
  - vb
  name: OnClose(TimeSpan)
  fullName: System.ServiceModel.ChannelFactory.OnClose(System.TimeSpan)
  type: Method
  source:
    remote:
      path: src/System.ServiceModel.Primitives/ref/System.ServiceModel.Primitives.cs
      branch: master
      repo: https://github.com/dotnet/wcf.git
    id: OnClose
    path: src/System.ServiceModel.Primitives/ref/System.ServiceModel.Primitives.cs
    startLine: 38
  assemblies:
  - System.ServiceModel.Primitives
  namespace: System.ServiceModel
  summary: "\n<p>Calls close on the inner channel factory with a specified time-out for the completion of the operation.</p>\n"
  syntax:
    content: protected override void OnClose(TimeSpan timeout)
    content.vb: Protected Overrides Sub OnClose(timeout As TimeSpan)
    parameters:
    - id: timeout
      type: System.TimeSpan
      description: "\n<p>The <xref href=\"System.TimeSpan\" data-throw-if-not-resolved=\"false\"></xref> that specifies how long the operation has to complete before timing out.</p>\n"
  overridden: System.ServiceModel.Channels.CommunicationObject.OnClose(System.TimeSpan)
  modifiers.csharp:
  - protected
  - override
  modifiers.vb:
  - Protected
  - Overrides
  nameWithType: ChannelFactory.OnClose(TimeSpan)
- uid: System.ServiceModel.ChannelFactory.OnEndClose(System.IAsyncResult)
  commentId: M:System.ServiceModel.ChannelFactory.OnEndClose(System.IAsyncResult)
  id: OnEndClose(System.IAsyncResult)
  parent: System.ServiceModel.ChannelFactory
  langs:
  - csharp
  - vb
  name: OnEndClose(IAsyncResult)
  fullName: System.ServiceModel.ChannelFactory.OnEndClose(System.IAsyncResult)
  type: Method
  source:
    remote:
      path: src/System.ServiceModel.Primitives/ref/System.ServiceModel.Primitives.cs
      branch: master
      repo: https://github.com/dotnet/wcf.git
    id: OnEndClose
    path: src/System.ServiceModel.Primitives/ref/System.ServiceModel.Primitives.cs
    startLine: 39
  assemblies:
  - System.ServiceModel.Primitives
  namespace: System.ServiceModel
  summary: "\n<p>Completes an asynchronous close operation on the inner channel factory of the current channel factory. </p>\n"
  syntax:
    content: protected override void OnEndClose(IAsyncResult result)
    content.vb: Protected Overrides Sub OnEndClose(result As IAsyncResult)
    parameters:
    - id: result
      type: System.IAsyncResult
      description: "\n<p>The <xref href=\"System.IAsyncResult\" data-throw-if-not-resolved=\"false\"></xref> returned by a call to the <xref href=\"System.ServiceModel.ChannelFactory.OnBeginClose(System.TimeSpan,System.AsyncCallback,System.Object)\" data-throw-if-not-resolved=\"false\"></xref> method.</p>\n"
  overridden: System.ServiceModel.Channels.CommunicationObject.OnEndClose(System.IAsyncResult)
  modifiers.csharp:
  - protected
  - override
  modifiers.vb:
  - Protected
  - Overrides
  nameWithType: ChannelFactory.OnEndClose(IAsyncResult)
- uid: System.ServiceModel.ChannelFactory.OnEndOpen(System.IAsyncResult)
  commentId: M:System.ServiceModel.ChannelFactory.OnEndOpen(System.IAsyncResult)
  id: OnEndOpen(System.IAsyncResult)
  parent: System.ServiceModel.ChannelFactory
  langs:
  - csharp
  - vb
  name: OnEndOpen(IAsyncResult)
  fullName: System.ServiceModel.ChannelFactory.OnEndOpen(System.IAsyncResult)
  type: Method
  source:
    remote:
      path: src/System.ServiceModel.Primitives/ref/System.ServiceModel.Primitives.cs
      branch: master
      repo: https://github.com/dotnet/wcf.git
    id: OnEndOpen
    path: src/System.ServiceModel.Primitives/ref/System.ServiceModel.Primitives.cs
    startLine: 40
  assemblies:
  - System.ServiceModel.Primitives
  namespace: System.ServiceModel
  summary: "\n<p>Completes an asynchronous open operation on the inner channel factory of the current channel factory. </p>\n"
  syntax:
    content: protected override void OnEndOpen(IAsyncResult result)
    content.vb: Protected Overrides Sub OnEndOpen(result As IAsyncResult)
    parameters:
    - id: result
      type: System.IAsyncResult
      description: "\n<p>The <xref href=\"System.IAsyncResult\" data-throw-if-not-resolved=\"false\"></xref> returned by a call to the <xref href=\"System.ServiceModel.ChannelFactory.OnBeginOpen(System.TimeSpan,System.AsyncCallback,System.Object)\" data-throw-if-not-resolved=\"false\"></xref> method.</p>\n"
  overridden: System.ServiceModel.Channels.CommunicationObject.OnEndOpen(System.IAsyncResult)
  modifiers.csharp:
  - protected
  - override
  modifiers.vb:
  - Protected
  - Overrides
  nameWithType: ChannelFactory.OnEndOpen(IAsyncResult)
- uid: System.ServiceModel.ChannelFactory.OnOpen(System.TimeSpan)
  commentId: M:System.ServiceModel.ChannelFactory.OnOpen(System.TimeSpan)
  id: OnOpen(System.TimeSpan)
  parent: System.ServiceModel.ChannelFactory
  langs:
  - csharp
  - vb
  name: OnOpen(TimeSpan)
  fullName: System.ServiceModel.ChannelFactory.OnOpen(System.TimeSpan)
  type: Method
  source:
    remote:
      path: src/System.ServiceModel.Primitives/ref/System.ServiceModel.Primitives.cs
      branch: master
      repo: https://github.com/dotnet/wcf.git
    id: OnOpen
    path: src/System.ServiceModel.Primitives/ref/System.ServiceModel.Primitives.cs
    startLine: 41
  assemblies:
  - System.ServiceModel.Primitives
  namespace: System.ServiceModel
  summary: "\n<p>Calls open on the inner channel factory of the current channel factory with a specified time-out for the completion of the operation.</p>\n"
  syntax:
    content: protected override void OnOpen(TimeSpan timeout)
    content.vb: Protected Overrides Sub OnOpen(timeout As TimeSpan)
    parameters:
    - id: timeout
      type: System.TimeSpan
      description: "\n<p>The <xref href=\"System.TimeSpan\" data-throw-if-not-resolved=\"false\"></xref> that specifies how long the open operation has to complete before timing out.</p>\n"
  overridden: System.ServiceModel.Channels.CommunicationObject.OnOpen(System.TimeSpan)
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "\n<p>The inner channel of the current channel is <strong>null</strong>.</p>\n"
  modifiers.csharp:
  - protected
  - override
  modifiers.vb:
  - Protected
  - Overrides
  nameWithType: ChannelFactory.OnOpen(TimeSpan)
- uid: System.ServiceModel.ChannelFactory.OnOpened
  commentId: M:System.ServiceModel.ChannelFactory.OnOpened
  id: OnOpened
  parent: System.ServiceModel.ChannelFactory
  langs:
  - csharp
  - vb
  name: OnOpened()
  fullName: System.ServiceModel.ChannelFactory.OnOpened()
  type: Method
  source:
    remote:
      path: src/System.ServiceModel.Primitives/ref/System.ServiceModel.Primitives.cs
      branch: master
      repo: https://github.com/dotnet/wcf.git
    id: OnOpened
    path: src/System.ServiceModel.Primitives/ref/System.ServiceModel.Primitives.cs
    startLine: 42
  assemblies:
  - System.ServiceModel.Primitives
  namespace: System.ServiceModel
  summary: "\n<p>Initializes a read-only copy of the <xref href=\"System.ServiceModel.Description.ClientCredentials\" data-throw-if-not-resolved=\"false\"></xref> object for the channel factory.</p>\n"
  syntax:
    content: protected override void OnOpened()
    content.vb: Protected Overrides Sub OnOpened
  overridden: System.ServiceModel.Channels.CommunicationObject.OnOpened
  modifiers.csharp:
  - protected
  - override
  modifiers.vb:
  - Protected
  - Overrides
  nameWithType: ChannelFactory.OnOpened()
- uid: System.ServiceModel.ChannelFactory.OnOpening
  commentId: M:System.ServiceModel.ChannelFactory.OnOpening
  id: OnOpening
  parent: System.ServiceModel.ChannelFactory
  langs:
  - csharp
  - vb
  name: OnOpening()
  fullName: System.ServiceModel.ChannelFactory.OnOpening()
  type: Method
  source:
    remote:
      path: src/System.ServiceModel.Primitives/ref/System.ServiceModel.Primitives.cs
      branch: master
      repo: https://github.com/dotnet/wcf.git
    id: OnOpening
    path: src/System.ServiceModel.Primitives/ref/System.ServiceModel.Primitives.cs
    startLine: 43
  assemblies:
  - System.ServiceModel.Primitives
  namespace: System.ServiceModel
  summary: "\n<p>Builds the inner channel factory for the current channel.</p>\n"
  syntax:
    content: protected override void OnOpening()
    content.vb: Protected Overrides Sub OnOpening
  overridden: System.ServiceModel.Channels.CommunicationObject.OnOpening
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "\n<p>The inner channel factory for the channel factory is <strong>null</strong>.</p>\n"
  modifiers.csharp:
  - protected
  - override
  modifiers.vb:
  - Protected
  - Overrides
  nameWithType: ChannelFactory.OnOpening()
- uid: System.ServiceModel.ChannelFactory.System#IDisposable#Dispose
  commentId: M:System.ServiceModel.ChannelFactory.System#IDisposable#Dispose
  id: System#IDisposable#Dispose
  isEii: true
  parent: System.ServiceModel.ChannelFactory
  langs:
  - csharp
  - vb
  name: IDisposable.Dispose()
  fullName: System.ServiceModel.ChannelFactory.System.IDisposable.Dispose()
  type: Method
  source:
    remote:
      path: src/System.ServiceModel.Primitives/ref/System.ServiceModel.Primitives.cs
      branch: master
      repo: https://github.com/dotnet/wcf.git
    id: System.IDisposable.Dispose
    path: src/System.ServiceModel.Primitives/ref/System.ServiceModel.Primitives.cs
    startLine: 44
  assemblies:
  - System.ServiceModel.Primitives
  namespace: System.ServiceModel
  summary: "\n<p>Closes the current channel factory.</p>\n"
  syntax:
    content: void IDisposable.Dispose()
    content.vb: Sub System.IDisposable.Dispose Implements IDisposable.Dispose
  implements:
  - System.IDisposable.Dispose
  name.vb: System.IDisposable.Dispose()
  nameWithType: ChannelFactory.IDisposable.Dispose()
  nameWithType.vb: ChannelFactory.System.IDisposable.Dispose()
references:
- uid: System.ServiceModel
  isExternal: false
  name: System.ServiceModel
  fullName: System.ServiceModel
  commentId: N:System.ServiceModel
  nameWithType: System.ServiceModel
- uid: System.Object
  parent: System
  isExternal: false
  name: Object
  fullName: System.Object
  commentId: T:System.Object
  nameWithType: Object
- uid: System.ServiceModel.Channels.CommunicationObject
  parent: System.ServiceModel.Channels
  isExternal: false
  name: CommunicationObject
  fullName: System.ServiceModel.Channels.CommunicationObject
  commentId: T:System.ServiceModel.Channels.CommunicationObject
  nameWithType: CommunicationObject
- uid: System.IDisposable
  parent: System
  isExternal: false
  name: IDisposable
  fullName: System.IDisposable
  commentId: T:System.IDisposable
  nameWithType: IDisposable
- uid: System.ServiceModel.Channels.IChannelFactory
  parent: System.ServiceModel.Channels
  isExternal: false
  name: IChannelFactory
  fullName: System.ServiceModel.Channels.IChannelFactory
  commentId: T:System.ServiceModel.Channels.IChannelFactory
  nameWithType: IChannelFactory
- uid: System.ServiceModel.ICommunicationObject
  parent: System.ServiceModel
  isExternal: false
  name: ICommunicationObject
  fullName: System.ServiceModel.ICommunicationObject
  commentId: T:System.ServiceModel.ICommunicationObject
  nameWithType: ICommunicationObject
- uid: System.ServiceModel.Channels.CommunicationObject.IsDisposed
  parent: System.ServiceModel.Channels.CommunicationObject
  isExternal: false
  name: IsDisposed
  fullName: System.ServiceModel.Channels.CommunicationObject.IsDisposed
  commentId: P:System.ServiceModel.Channels.CommunicationObject.IsDisposed
  nameWithType: CommunicationObject.IsDisposed
- uid: System.ServiceModel.Channels.CommunicationObject.State
  parent: System.ServiceModel.Channels.CommunicationObject
  isExternal: false
  name: State
  fullName: System.ServiceModel.Channels.CommunicationObject.State
  commentId: P:System.ServiceModel.Channels.CommunicationObject.State
  nameWithType: CommunicationObject.State
- uid: System.ServiceModel.Channels.CommunicationObject.ThisLock
  parent: System.ServiceModel.Channels.CommunicationObject
  isExternal: false
  name: ThisLock
  fullName: System.ServiceModel.Channels.CommunicationObject.ThisLock
  commentId: P:System.ServiceModel.Channels.CommunicationObject.ThisLock
  nameWithType: CommunicationObject.ThisLock
- uid: System.ServiceModel.Channels.CommunicationObject.Closed
  parent: System.ServiceModel.Channels.CommunicationObject
  isExternal: false
  name: Closed
  fullName: System.ServiceModel.Channels.CommunicationObject.Closed
  commentId: E:System.ServiceModel.Channels.CommunicationObject.Closed
  nameWithType: CommunicationObject.Closed
- uid: System.ServiceModel.Channels.CommunicationObject.Closing
  parent: System.ServiceModel.Channels.CommunicationObject
  isExternal: false
  name: Closing
  fullName: System.ServiceModel.Channels.CommunicationObject.Closing
  commentId: E:System.ServiceModel.Channels.CommunicationObject.Closing
  nameWithType: CommunicationObject.Closing
- uid: System.ServiceModel.Channels.CommunicationObject.Faulted
  parent: System.ServiceModel.Channels.CommunicationObject
  isExternal: false
  name: Faulted
  fullName: System.ServiceModel.Channels.CommunicationObject.Faulted
  commentId: E:System.ServiceModel.Channels.CommunicationObject.Faulted
  nameWithType: CommunicationObject.Faulted
- uid: System.ServiceModel.Channels.CommunicationObject.Opened
  parent: System.ServiceModel.Channels.CommunicationObject
  isExternal: false
  name: Opened
  fullName: System.ServiceModel.Channels.CommunicationObject.Opened
  commentId: E:System.ServiceModel.Channels.CommunicationObject.Opened
  nameWithType: CommunicationObject.Opened
- uid: System.ServiceModel.Channels.CommunicationObject.Opening
  parent: System.ServiceModel.Channels.CommunicationObject
  isExternal: false
  name: Opening
  fullName: System.ServiceModel.Channels.CommunicationObject.Opening
  commentId: E:System.ServiceModel.Channels.CommunicationObject.Opening
  nameWithType: CommunicationObject.Opening
- uid: System.ServiceModel.Channels.CommunicationObject.Abort
  parent: System.ServiceModel.Channels.CommunicationObject
  isExternal: false
  name: Abort()
  fullName: System.ServiceModel.Channels.CommunicationObject.Abort()
  spec.csharp:
  - uid: System.ServiceModel.Channels.CommunicationObject.Abort
    name: Abort
    fullName: System.ServiceModel.Channels.CommunicationObject.Abort
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.ServiceModel.Channels.CommunicationObject.Abort
    name: Abort
    fullName: System.ServiceModel.Channels.CommunicationObject.Abort
  - name: (
    fullName: (
  - name: )
    fullName: )
  commentId: M:System.ServiceModel.Channels.CommunicationObject.Abort
  nameWithType: CommunicationObject.Abort()
- uid: System.ServiceModel.Channels.CommunicationObject.BeginClose(System.AsyncCallback,System.Object)
  parent: System.ServiceModel.Channels.CommunicationObject
  isExternal: true
  name: BeginClose(AsyncCallback, Object)
  fullName: System.ServiceModel.Channels.CommunicationObject.BeginClose(System.AsyncCallback, System.Object)
  spec.csharp:
  - uid: System.ServiceModel.Channels.CommunicationObject.BeginClose(System.AsyncCallback,System.Object)
    name: BeginClose
    fullName: System.ServiceModel.Channels.CommunicationObject.BeginClose
  - name: (
    fullName: (
  - uid: System.AsyncCallback
    name: AsyncCallback
    fullName: System.AsyncCallback
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.ServiceModel.Channels.CommunicationObject.BeginClose(System.AsyncCallback,System.Object)
    name: BeginClose
    fullName: System.ServiceModel.Channels.CommunicationObject.BeginClose
  - name: (
    fullName: (
  - uid: System.AsyncCallback
    name: AsyncCallback
    fullName: System.AsyncCallback
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
  commentId: M:System.ServiceModel.Channels.CommunicationObject.BeginClose(System.AsyncCallback,System.Object)
  nameWithType: CommunicationObject.BeginClose(AsyncCallback, Object)
- uid: System.ServiceModel.Channels.CommunicationObject.BeginClose(System.TimeSpan,System.AsyncCallback,System.Object)
  parent: System.ServiceModel.Channels.CommunicationObject
  isExternal: true
  name: BeginClose(TimeSpan, AsyncCallback, Object)
  fullName: System.ServiceModel.Channels.CommunicationObject.BeginClose(System.TimeSpan, System.AsyncCallback, System.Object)
  spec.csharp:
  - uid: System.ServiceModel.Channels.CommunicationObject.BeginClose(System.TimeSpan,System.AsyncCallback,System.Object)
    name: BeginClose
    fullName: System.ServiceModel.Channels.CommunicationObject.BeginClose
  - name: (
    fullName: (
  - uid: System.TimeSpan
    name: TimeSpan
    fullName: System.TimeSpan
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.AsyncCallback
    name: AsyncCallback
    fullName: System.AsyncCallback
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.ServiceModel.Channels.CommunicationObject.BeginClose(System.TimeSpan,System.AsyncCallback,System.Object)
    name: BeginClose
    fullName: System.ServiceModel.Channels.CommunicationObject.BeginClose
  - name: (
    fullName: (
  - uid: System.TimeSpan
    name: TimeSpan
    fullName: System.TimeSpan
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.AsyncCallback
    name: AsyncCallback
    fullName: System.AsyncCallback
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
  commentId: M:System.ServiceModel.Channels.CommunicationObject.BeginClose(System.TimeSpan,System.AsyncCallback,System.Object)
  nameWithType: CommunicationObject.BeginClose(TimeSpan, AsyncCallback, Object)
- uid: System.ServiceModel.Channels.CommunicationObject.BeginOpen(System.AsyncCallback,System.Object)
  parent: System.ServiceModel.Channels.CommunicationObject
  isExternal: true
  name: BeginOpen(AsyncCallback, Object)
  fullName: System.ServiceModel.Channels.CommunicationObject.BeginOpen(System.AsyncCallback, System.Object)
  spec.csharp:
  - uid: System.ServiceModel.Channels.CommunicationObject.BeginOpen(System.AsyncCallback,System.Object)
    name: BeginOpen
    fullName: System.ServiceModel.Channels.CommunicationObject.BeginOpen
  - name: (
    fullName: (
  - uid: System.AsyncCallback
    name: AsyncCallback
    fullName: System.AsyncCallback
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.ServiceModel.Channels.CommunicationObject.BeginOpen(System.AsyncCallback,System.Object)
    name: BeginOpen
    fullName: System.ServiceModel.Channels.CommunicationObject.BeginOpen
  - name: (
    fullName: (
  - uid: System.AsyncCallback
    name: AsyncCallback
    fullName: System.AsyncCallback
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
  commentId: M:System.ServiceModel.Channels.CommunicationObject.BeginOpen(System.AsyncCallback,System.Object)
  nameWithType: CommunicationObject.BeginOpen(AsyncCallback, Object)
- uid: System.ServiceModel.Channels.CommunicationObject.BeginOpen(System.TimeSpan,System.AsyncCallback,System.Object)
  parent: System.ServiceModel.Channels.CommunicationObject
  isExternal: true
  name: BeginOpen(TimeSpan, AsyncCallback, Object)
  fullName: System.ServiceModel.Channels.CommunicationObject.BeginOpen(System.TimeSpan, System.AsyncCallback, System.Object)
  spec.csharp:
  - uid: System.ServiceModel.Channels.CommunicationObject.BeginOpen(System.TimeSpan,System.AsyncCallback,System.Object)
    name: BeginOpen
    fullName: System.ServiceModel.Channels.CommunicationObject.BeginOpen
  - name: (
    fullName: (
  - uid: System.TimeSpan
    name: TimeSpan
    fullName: System.TimeSpan
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.AsyncCallback
    name: AsyncCallback
    fullName: System.AsyncCallback
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.ServiceModel.Channels.CommunicationObject.BeginOpen(System.TimeSpan,System.AsyncCallback,System.Object)
    name: BeginOpen
    fullName: System.ServiceModel.Channels.CommunicationObject.BeginOpen
  - name: (
    fullName: (
  - uid: System.TimeSpan
    name: TimeSpan
    fullName: System.TimeSpan
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.AsyncCallback
    name: AsyncCallback
    fullName: System.AsyncCallback
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
  commentId: M:System.ServiceModel.Channels.CommunicationObject.BeginOpen(System.TimeSpan,System.AsyncCallback,System.Object)
  nameWithType: CommunicationObject.BeginOpen(TimeSpan, AsyncCallback, Object)
- uid: System.ServiceModel.Channels.CommunicationObject.Close
  parent: System.ServiceModel.Channels.CommunicationObject
  isExternal: false
  name: Close()
  fullName: System.ServiceModel.Channels.CommunicationObject.Close()
  spec.csharp:
  - uid: System.ServiceModel.Channels.CommunicationObject.Close
    name: Close
    fullName: System.ServiceModel.Channels.CommunicationObject.Close
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.ServiceModel.Channels.CommunicationObject.Close
    name: Close
    fullName: System.ServiceModel.Channels.CommunicationObject.Close
  - name: (
    fullName: (
  - name: )
    fullName: )
  commentId: M:System.ServiceModel.Channels.CommunicationObject.Close
  nameWithType: CommunicationObject.Close()
- uid: System.ServiceModel.Channels.CommunicationObject.Close(System.TimeSpan)
  parent: System.ServiceModel.Channels.CommunicationObject
  isExternal: true
  name: Close(TimeSpan)
  fullName: System.ServiceModel.Channels.CommunicationObject.Close(System.TimeSpan)
  spec.csharp:
  - uid: System.ServiceModel.Channels.CommunicationObject.Close(System.TimeSpan)
    name: Close
    fullName: System.ServiceModel.Channels.CommunicationObject.Close
  - name: (
    fullName: (
  - uid: System.TimeSpan
    name: TimeSpan
    fullName: System.TimeSpan
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.ServiceModel.Channels.CommunicationObject.Close(System.TimeSpan)
    name: Close
    fullName: System.ServiceModel.Channels.CommunicationObject.Close
  - name: (
    fullName: (
  - uid: System.TimeSpan
    name: TimeSpan
    fullName: System.TimeSpan
    isExternal: true
  - name: )
    fullName: )
  commentId: M:System.ServiceModel.Channels.CommunicationObject.Close(System.TimeSpan)
  nameWithType: CommunicationObject.Close(TimeSpan)
- uid: System.ServiceModel.Channels.CommunicationObject.EndClose(System.IAsyncResult)
  parent: System.ServiceModel.Channels.CommunicationObject
  isExternal: true
  name: EndClose(IAsyncResult)
  fullName: System.ServiceModel.Channels.CommunicationObject.EndClose(System.IAsyncResult)
  spec.csharp:
  - uid: System.ServiceModel.Channels.CommunicationObject.EndClose(System.IAsyncResult)
    name: EndClose
    fullName: System.ServiceModel.Channels.CommunicationObject.EndClose
  - name: (
    fullName: (
  - uid: System.IAsyncResult
    name: IAsyncResult
    fullName: System.IAsyncResult
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.ServiceModel.Channels.CommunicationObject.EndClose(System.IAsyncResult)
    name: EndClose
    fullName: System.ServiceModel.Channels.CommunicationObject.EndClose
  - name: (
    fullName: (
  - uid: System.IAsyncResult
    name: IAsyncResult
    fullName: System.IAsyncResult
    isExternal: true
  - name: )
    fullName: )
  commentId: M:System.ServiceModel.Channels.CommunicationObject.EndClose(System.IAsyncResult)
  nameWithType: CommunicationObject.EndClose(IAsyncResult)
- uid: System.ServiceModel.Channels.CommunicationObject.EndOpen(System.IAsyncResult)
  parent: System.ServiceModel.Channels.CommunicationObject
  isExternal: true
  name: EndOpen(IAsyncResult)
  fullName: System.ServiceModel.Channels.CommunicationObject.EndOpen(System.IAsyncResult)
  spec.csharp:
  - uid: System.ServiceModel.Channels.CommunicationObject.EndOpen(System.IAsyncResult)
    name: EndOpen
    fullName: System.ServiceModel.Channels.CommunicationObject.EndOpen
  - name: (
    fullName: (
  - uid: System.IAsyncResult
    name: IAsyncResult
    fullName: System.IAsyncResult
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.ServiceModel.Channels.CommunicationObject.EndOpen(System.IAsyncResult)
    name: EndOpen
    fullName: System.ServiceModel.Channels.CommunicationObject.EndOpen
  - name: (
    fullName: (
  - uid: System.IAsyncResult
    name: IAsyncResult
    fullName: System.IAsyncResult
    isExternal: true
  - name: )
    fullName: )
  commentId: M:System.ServiceModel.Channels.CommunicationObject.EndOpen(System.IAsyncResult)
  nameWithType: CommunicationObject.EndOpen(IAsyncResult)
- uid: System.ServiceModel.Channels.CommunicationObject.Fault
  parent: System.ServiceModel.Channels.CommunicationObject
  isExternal: false
  name: Fault()
  fullName: System.ServiceModel.Channels.CommunicationObject.Fault()
  spec.csharp:
  - uid: System.ServiceModel.Channels.CommunicationObject.Fault
    name: Fault
    fullName: System.ServiceModel.Channels.CommunicationObject.Fault
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.ServiceModel.Channels.CommunicationObject.Fault
    name: Fault
    fullName: System.ServiceModel.Channels.CommunicationObject.Fault
  - name: (
    fullName: (
  - name: )
    fullName: )
  commentId: M:System.ServiceModel.Channels.CommunicationObject.Fault
  nameWithType: CommunicationObject.Fault()
- uid: System.ServiceModel.Channels.CommunicationObject.GetCommunicationObjectType
  parent: System.ServiceModel.Channels.CommunicationObject
  isExternal: false
  name: GetCommunicationObjectType()
  fullName: System.ServiceModel.Channels.CommunicationObject.GetCommunicationObjectType()
  spec.csharp:
  - uid: System.ServiceModel.Channels.CommunicationObject.GetCommunicationObjectType
    name: GetCommunicationObjectType
    fullName: System.ServiceModel.Channels.CommunicationObject.GetCommunicationObjectType
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.ServiceModel.Channels.CommunicationObject.GetCommunicationObjectType
    name: GetCommunicationObjectType
    fullName: System.ServiceModel.Channels.CommunicationObject.GetCommunicationObjectType
  - name: (
    fullName: (
  - name: )
    fullName: )
  commentId: M:System.ServiceModel.Channels.CommunicationObject.GetCommunicationObjectType
  nameWithType: CommunicationObject.GetCommunicationObjectType()
- uid: System.ServiceModel.Channels.CommunicationObject.OnClosed
  parent: System.ServiceModel.Channels.CommunicationObject
  isExternal: false
  name: OnClosed()
  fullName: System.ServiceModel.Channels.CommunicationObject.OnClosed()
  spec.csharp:
  - uid: System.ServiceModel.Channels.CommunicationObject.OnClosed
    name: OnClosed
    fullName: System.ServiceModel.Channels.CommunicationObject.OnClosed
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.ServiceModel.Channels.CommunicationObject.OnClosed
    name: OnClosed
    fullName: System.ServiceModel.Channels.CommunicationObject.OnClosed
  - name: (
    fullName: (
  - name: )
    fullName: )
  commentId: M:System.ServiceModel.Channels.CommunicationObject.OnClosed
  nameWithType: CommunicationObject.OnClosed()
- uid: System.ServiceModel.Channels.CommunicationObject.OnClosing
  parent: System.ServiceModel.Channels.CommunicationObject
  isExternal: false
  name: OnClosing()
  fullName: System.ServiceModel.Channels.CommunicationObject.OnClosing()
  spec.csharp:
  - uid: System.ServiceModel.Channels.CommunicationObject.OnClosing
    name: OnClosing
    fullName: System.ServiceModel.Channels.CommunicationObject.OnClosing
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.ServiceModel.Channels.CommunicationObject.OnClosing
    name: OnClosing
    fullName: System.ServiceModel.Channels.CommunicationObject.OnClosing
  - name: (
    fullName: (
  - name: )
    fullName: )
  commentId: M:System.ServiceModel.Channels.CommunicationObject.OnClosing
  nameWithType: CommunicationObject.OnClosing()
- uid: System.ServiceModel.Channels.CommunicationObject.OnFaulted
  parent: System.ServiceModel.Channels.CommunicationObject
  isExternal: false
  name: OnFaulted()
  fullName: System.ServiceModel.Channels.CommunicationObject.OnFaulted()
  spec.csharp:
  - uid: System.ServiceModel.Channels.CommunicationObject.OnFaulted
    name: OnFaulted
    fullName: System.ServiceModel.Channels.CommunicationObject.OnFaulted
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.ServiceModel.Channels.CommunicationObject.OnFaulted
    name: OnFaulted
    fullName: System.ServiceModel.Channels.CommunicationObject.OnFaulted
  - name: (
    fullName: (
  - name: )
    fullName: )
  commentId: M:System.ServiceModel.Channels.CommunicationObject.OnFaulted
  nameWithType: CommunicationObject.OnFaulted()
- uid: System.ServiceModel.Channels.CommunicationObject.Open
  parent: System.ServiceModel.Channels.CommunicationObject
  isExternal: false
  name: Open()
  fullName: System.ServiceModel.Channels.CommunicationObject.Open()
  spec.csharp:
  - uid: System.ServiceModel.Channels.CommunicationObject.Open
    name: Open
    fullName: System.ServiceModel.Channels.CommunicationObject.Open
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.ServiceModel.Channels.CommunicationObject.Open
    name: Open
    fullName: System.ServiceModel.Channels.CommunicationObject.Open
  - name: (
    fullName: (
  - name: )
    fullName: )
  commentId: M:System.ServiceModel.Channels.CommunicationObject.Open
  nameWithType: CommunicationObject.Open()
- uid: System.ServiceModel.Channels.CommunicationObject.Open(System.TimeSpan)
  parent: System.ServiceModel.Channels.CommunicationObject
  isExternal: true
  name: Open(TimeSpan)
  fullName: System.ServiceModel.Channels.CommunicationObject.Open(System.TimeSpan)
  spec.csharp:
  - uid: System.ServiceModel.Channels.CommunicationObject.Open(System.TimeSpan)
    name: Open
    fullName: System.ServiceModel.Channels.CommunicationObject.Open
  - name: (
    fullName: (
  - uid: System.TimeSpan
    name: TimeSpan
    fullName: System.TimeSpan
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.ServiceModel.Channels.CommunicationObject.Open(System.TimeSpan)
    name: Open
    fullName: System.ServiceModel.Channels.CommunicationObject.Open
  - name: (
    fullName: (
  - uid: System.TimeSpan
    name: TimeSpan
    fullName: System.TimeSpan
    isExternal: true
  - name: )
    fullName: )
  commentId: M:System.ServiceModel.Channels.CommunicationObject.Open(System.TimeSpan)
  nameWithType: CommunicationObject.Open(TimeSpan)
- uid: System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  commentId: M:System.Object.ToString
  nameWithType: Object.ToString()
- uid: System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
  commentId: M:System.Object.Equals(System.Object)
  nameWithType: Object.Equals(Object)
- uid: System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
  commentId: M:System.Object.Equals(System.Object,System.Object)
  nameWithType: Object.Equals(Object, Object)
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
- uid: System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  commentId: M:System.Object.GetHashCode
  nameWithType: Object.GetHashCode()
- uid: System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  commentId: M:System.Object.GetType
  nameWithType: Object.GetType()
- uid: System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  commentId: M:System.Object.MemberwiseClone
  nameWithType: Object.MemberwiseClone()
- uid: System
  isExternal: false
  name: System
  fullName: System
  commentId: N:System
  nameWithType: System
- uid: System.ServiceModel.Channels
  isExternal: false
  name: System.ServiceModel.Channels
  fullName: System.ServiceModel.Channels
  commentId: N:System.ServiceModel.Channels
  nameWithType: System.ServiceModel.Channels
- uid: System.ServiceModel.Description.ClientCredentials
  parent: System.ServiceModel.Description
  isExternal: false
  name: ClientCredentials
  fullName: System.ServiceModel.Description.ClientCredentials
  commentId: T:System.ServiceModel.Description.ClientCredentials
  nameWithType: ClientCredentials
- uid: System.ServiceModel.Description
  isExternal: false
  name: System.ServiceModel.Description
  fullName: System.ServiceModel.Description
  commentId: N:System.ServiceModel.Description
  nameWithType: System.ServiceModel.Description
- uid: System.ServiceModel.Channels.CommunicationObject.DefaultCloseTimeout
  parent: System.ServiceModel.Channels.CommunicationObject
  isExternal: false
  name: DefaultCloseTimeout
  fullName: System.ServiceModel.Channels.CommunicationObject.DefaultCloseTimeout
  commentId: P:System.ServiceModel.Channels.CommunicationObject.DefaultCloseTimeout
  nameWithType: CommunicationObject.DefaultCloseTimeout
- uid: System.TimeSpan
  parent: System
  isExternal: false
  name: TimeSpan
  fullName: System.TimeSpan
  commentId: T:System.TimeSpan
  nameWithType: TimeSpan
- uid: System.ServiceModel.Channels.CommunicationObject.DefaultOpenTimeout
  parent: System.ServiceModel.Channels.CommunicationObject
  isExternal: false
  name: DefaultOpenTimeout
  fullName: System.ServiceModel.Channels.CommunicationObject.DefaultOpenTimeout
  commentId: P:System.ServiceModel.Channels.CommunicationObject.DefaultOpenTimeout
  nameWithType: CommunicationObject.DefaultOpenTimeout
- uid: System.ServiceModel.Description.ServiceEndpoint
  parent: System.ServiceModel.Description
  isExternal: false
  name: ServiceEndpoint
  fullName: System.ServiceModel.Description.ServiceEndpoint
  commentId: T:System.ServiceModel.Description.ServiceEndpoint
  nameWithType: ServiceEndpoint
- uid: System.String
  parent: System
  isExternal: false
  name: String
  fullName: System.String
  commentId: T:System.String
  nameWithType: String
- uid: System.ServiceModel.Channels.IChannelFactory.GetProperty``1
  parent: System.ServiceModel.Channels.IChannelFactory
  definition: System.ServiceModel.Channels.IChannelFactory.GetProperty``1
  isExternal: false
  name: GetProperty<T>()
  fullName: System.ServiceModel.Channels.IChannelFactory.GetProperty<T>()
  fullname.vb: System.ServiceModel.Channels.IChannelFactory.GetProperty(Of T)()
  name.vb: GetProperty(Of T)()
  spec.csharp:
  - uid: System.ServiceModel.Channels.IChannelFactory.GetProperty``1
    name: GetProperty<T>
    fullName: System.ServiceModel.Channels.IChannelFactory.GetProperty<T>
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.ServiceModel.Channels.IChannelFactory.GetProperty``1
    name: GetProperty(Of T)
    fullName: System.ServiceModel.Channels.IChannelFactory.GetProperty(Of T)
  - name: (
    fullName: (
  - name: )
    fullName: )
  commentId: M:System.ServiceModel.Channels.IChannelFactory.GetProperty``1
  nameWithType: IChannelFactory.GetProperty<T>()
  nameWithType.vb: IChannelFactory.GetProperty(Of T)()
- uid: '{T}'
  definition: T
  name: T
  fullName: T
  commentId: '!:T'
  nameWithType: T
- uid: T
  isExternal: false
  name: T
  fullName: T
  nameWithType: T
- uid: System.ServiceModel.Channels.Binding
  parent: System.ServiceModel.Channels
  isExternal: false
  name: Binding
  fullName: System.ServiceModel.Channels.Binding
  commentId: T:System.ServiceModel.Channels.Binding
  nameWithType: Binding
- uid: System.ServiceModel.EndpointAddress
  parent: System.ServiceModel
  isExternal: false
  name: EndpointAddress
  fullName: System.ServiceModel.EndpointAddress
  commentId: T:System.ServiceModel.EndpointAddress
  nameWithType: EndpointAddress
- uid: System.ServiceModel.Channels.CommunicationObject.OnAbort
  parent: System.ServiceModel.Channels.CommunicationObject
  isExternal: false
  name: OnAbort()
  fullName: System.ServiceModel.Channels.CommunicationObject.OnAbort()
  spec.csharp:
  - uid: System.ServiceModel.Channels.CommunicationObject.OnAbort
    name: OnAbort
    fullName: System.ServiceModel.Channels.CommunicationObject.OnAbort
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.ServiceModel.Channels.CommunicationObject.OnAbort
    name: OnAbort
    fullName: System.ServiceModel.Channels.CommunicationObject.OnAbort
  - name: (
    fullName: (
  - name: )
    fullName: )
  commentId: M:System.ServiceModel.Channels.CommunicationObject.OnAbort
  nameWithType: CommunicationObject.OnAbort()
- uid: System.ServiceModel.Channels.CommunicationObject.OnBeginClose(System.TimeSpan,System.AsyncCallback,System.Object)
  parent: System.ServiceModel.Channels.CommunicationObject
  isExternal: true
  name: OnBeginClose(TimeSpan, AsyncCallback, Object)
  fullName: System.ServiceModel.Channels.CommunicationObject.OnBeginClose(System.TimeSpan, System.AsyncCallback, System.Object)
  spec.csharp:
  - uid: System.ServiceModel.Channels.CommunicationObject.OnBeginClose(System.TimeSpan,System.AsyncCallback,System.Object)
    name: OnBeginClose
    fullName: System.ServiceModel.Channels.CommunicationObject.OnBeginClose
  - name: (
    fullName: (
  - uid: System.TimeSpan
    name: TimeSpan
    fullName: System.TimeSpan
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.AsyncCallback
    name: AsyncCallback
    fullName: System.AsyncCallback
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.ServiceModel.Channels.CommunicationObject.OnBeginClose(System.TimeSpan,System.AsyncCallback,System.Object)
    name: OnBeginClose
    fullName: System.ServiceModel.Channels.CommunicationObject.OnBeginClose
  - name: (
    fullName: (
  - uid: System.TimeSpan
    name: TimeSpan
    fullName: System.TimeSpan
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.AsyncCallback
    name: AsyncCallback
    fullName: System.AsyncCallback
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
  commentId: M:System.ServiceModel.Channels.CommunicationObject.OnBeginClose(System.TimeSpan,System.AsyncCallback,System.Object)
  nameWithType: CommunicationObject.OnBeginClose(TimeSpan, AsyncCallback, Object)
- uid: System.AsyncCallback
  parent: System
  isExternal: false
  name: AsyncCallback
  fullName: System.AsyncCallback
  commentId: T:System.AsyncCallback
  nameWithType: AsyncCallback
- uid: System.IAsyncResult
  parent: System
  isExternal: false
  name: IAsyncResult
  fullName: System.IAsyncResult
  commentId: T:System.IAsyncResult
  nameWithType: IAsyncResult
- uid: System.ServiceModel.Channels.CommunicationObject.OnBeginOpen(System.TimeSpan,System.AsyncCallback,System.Object)
  parent: System.ServiceModel.Channels.CommunicationObject
  isExternal: true
  name: OnBeginOpen(TimeSpan, AsyncCallback, Object)
  fullName: System.ServiceModel.Channels.CommunicationObject.OnBeginOpen(System.TimeSpan, System.AsyncCallback, System.Object)
  spec.csharp:
  - uid: System.ServiceModel.Channels.CommunicationObject.OnBeginOpen(System.TimeSpan,System.AsyncCallback,System.Object)
    name: OnBeginOpen
    fullName: System.ServiceModel.Channels.CommunicationObject.OnBeginOpen
  - name: (
    fullName: (
  - uid: System.TimeSpan
    name: TimeSpan
    fullName: System.TimeSpan
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.AsyncCallback
    name: AsyncCallback
    fullName: System.AsyncCallback
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.ServiceModel.Channels.CommunicationObject.OnBeginOpen(System.TimeSpan,System.AsyncCallback,System.Object)
    name: OnBeginOpen
    fullName: System.ServiceModel.Channels.CommunicationObject.OnBeginOpen
  - name: (
    fullName: (
  - uid: System.TimeSpan
    name: TimeSpan
    fullName: System.TimeSpan
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.AsyncCallback
    name: AsyncCallback
    fullName: System.AsyncCallback
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
  commentId: M:System.ServiceModel.Channels.CommunicationObject.OnBeginOpen(System.TimeSpan,System.AsyncCallback,System.Object)
  nameWithType: CommunicationObject.OnBeginOpen(TimeSpan, AsyncCallback, Object)
- uid: System.ServiceModel.Channels.CommunicationObject.OnClose(System.TimeSpan)
  parent: System.ServiceModel.Channels.CommunicationObject
  isExternal: true
  name: OnClose(TimeSpan)
  fullName: System.ServiceModel.Channels.CommunicationObject.OnClose(System.TimeSpan)
  spec.csharp:
  - uid: System.ServiceModel.Channels.CommunicationObject.OnClose(System.TimeSpan)
    name: OnClose
    fullName: System.ServiceModel.Channels.CommunicationObject.OnClose
  - name: (
    fullName: (
  - uid: System.TimeSpan
    name: TimeSpan
    fullName: System.TimeSpan
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.ServiceModel.Channels.CommunicationObject.OnClose(System.TimeSpan)
    name: OnClose
    fullName: System.ServiceModel.Channels.CommunicationObject.OnClose
  - name: (
    fullName: (
  - uid: System.TimeSpan
    name: TimeSpan
    fullName: System.TimeSpan
    isExternal: true
  - name: )
    fullName: )
  commentId: M:System.ServiceModel.Channels.CommunicationObject.OnClose(System.TimeSpan)
  nameWithType: CommunicationObject.OnClose(TimeSpan)
- uid: System.ServiceModel.Channels.CommunicationObject.OnEndClose(System.IAsyncResult)
  parent: System.ServiceModel.Channels.CommunicationObject
  isExternal: true
  name: OnEndClose(IAsyncResult)
  fullName: System.ServiceModel.Channels.CommunicationObject.OnEndClose(System.IAsyncResult)
  spec.csharp:
  - uid: System.ServiceModel.Channels.CommunicationObject.OnEndClose(System.IAsyncResult)
    name: OnEndClose
    fullName: System.ServiceModel.Channels.CommunicationObject.OnEndClose
  - name: (
    fullName: (
  - uid: System.IAsyncResult
    name: IAsyncResult
    fullName: System.IAsyncResult
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.ServiceModel.Channels.CommunicationObject.OnEndClose(System.IAsyncResult)
    name: OnEndClose
    fullName: System.ServiceModel.Channels.CommunicationObject.OnEndClose
  - name: (
    fullName: (
  - uid: System.IAsyncResult
    name: IAsyncResult
    fullName: System.IAsyncResult
    isExternal: true
  - name: )
    fullName: )
  commentId: M:System.ServiceModel.Channels.CommunicationObject.OnEndClose(System.IAsyncResult)
  nameWithType: CommunicationObject.OnEndClose(IAsyncResult)
- uid: System.ServiceModel.Channels.CommunicationObject.OnEndOpen(System.IAsyncResult)
  parent: System.ServiceModel.Channels.CommunicationObject
  isExternal: true
  name: OnEndOpen(IAsyncResult)
  fullName: System.ServiceModel.Channels.CommunicationObject.OnEndOpen(System.IAsyncResult)
  spec.csharp:
  - uid: System.ServiceModel.Channels.CommunicationObject.OnEndOpen(System.IAsyncResult)
    name: OnEndOpen
    fullName: System.ServiceModel.Channels.CommunicationObject.OnEndOpen
  - name: (
    fullName: (
  - uid: System.IAsyncResult
    name: IAsyncResult
    fullName: System.IAsyncResult
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.ServiceModel.Channels.CommunicationObject.OnEndOpen(System.IAsyncResult)
    name: OnEndOpen
    fullName: System.ServiceModel.Channels.CommunicationObject.OnEndOpen
  - name: (
    fullName: (
  - uid: System.IAsyncResult
    name: IAsyncResult
    fullName: System.IAsyncResult
    isExternal: true
  - name: )
    fullName: )
  commentId: M:System.ServiceModel.Channels.CommunicationObject.OnEndOpen(System.IAsyncResult)
  nameWithType: CommunicationObject.OnEndOpen(IAsyncResult)
- uid: System.ServiceModel.Channels.CommunicationObject.OnOpen(System.TimeSpan)
  parent: System.ServiceModel.Channels.CommunicationObject
  isExternal: true
  name: OnOpen(TimeSpan)
  fullName: System.ServiceModel.Channels.CommunicationObject.OnOpen(System.TimeSpan)
  spec.csharp:
  - uid: System.ServiceModel.Channels.CommunicationObject.OnOpen(System.TimeSpan)
    name: OnOpen
    fullName: System.ServiceModel.Channels.CommunicationObject.OnOpen
  - name: (
    fullName: (
  - uid: System.TimeSpan
    name: TimeSpan
    fullName: System.TimeSpan
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.ServiceModel.Channels.CommunicationObject.OnOpen(System.TimeSpan)
    name: OnOpen
    fullName: System.ServiceModel.Channels.CommunicationObject.OnOpen
  - name: (
    fullName: (
  - uid: System.TimeSpan
    name: TimeSpan
    fullName: System.TimeSpan
    isExternal: true
  - name: )
    fullName: )
  commentId: M:System.ServiceModel.Channels.CommunicationObject.OnOpen(System.TimeSpan)
  nameWithType: CommunicationObject.OnOpen(TimeSpan)
- uid: System.ServiceModel.Channels.CommunicationObject.OnOpened
  parent: System.ServiceModel.Channels.CommunicationObject
  isExternal: false
  name: OnOpened()
  fullName: System.ServiceModel.Channels.CommunicationObject.OnOpened()
  spec.csharp:
  - uid: System.ServiceModel.Channels.CommunicationObject.OnOpened
    name: OnOpened
    fullName: System.ServiceModel.Channels.CommunicationObject.OnOpened
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.ServiceModel.Channels.CommunicationObject.OnOpened
    name: OnOpened
    fullName: System.ServiceModel.Channels.CommunicationObject.OnOpened
  - name: (
    fullName: (
  - name: )
    fullName: )
  commentId: M:System.ServiceModel.Channels.CommunicationObject.OnOpened
  nameWithType: CommunicationObject.OnOpened()
- uid: System.ServiceModel.Channels.CommunicationObject.OnOpening
  parent: System.ServiceModel.Channels.CommunicationObject
  isExternal: false
  name: OnOpening()
  fullName: System.ServiceModel.Channels.CommunicationObject.OnOpening()
  spec.csharp:
  - uid: System.ServiceModel.Channels.CommunicationObject.OnOpening
    name: OnOpening
    fullName: System.ServiceModel.Channels.CommunicationObject.OnOpening
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.ServiceModel.Channels.CommunicationObject.OnOpening
    name: OnOpening
    fullName: System.ServiceModel.Channels.CommunicationObject.OnOpening
  - name: (
    fullName: (
  - name: )
    fullName: )
  commentId: M:System.ServiceModel.Channels.CommunicationObject.OnOpening
  nameWithType: CommunicationObject.OnOpening()
- uid: System.IDisposable.Dispose
  parent: System.IDisposable
  isExternal: false
  name: Dispose()
  fullName: System.IDisposable.Dispose()
  spec.csharp:
  - uid: System.IDisposable.Dispose
    name: Dispose
    fullName: System.IDisposable.Dispose
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.IDisposable.Dispose
    name: Dispose
    fullName: System.IDisposable.Dispose
  - name: (
    fullName: (
  - name: )
    fullName: )
  commentId: M:System.IDisposable.Dispose
  nameWithType: IDisposable.Dispose()
- uid: System.InvalidOperationException
  parent: System
  isExternal: false
  name: InvalidOperationException
  fullName: System.InvalidOperationException
  nameWithType: InvalidOperationException
  commentId: T:System.InvalidOperationException
- uid: System.ObjectDisposedException
  isExternal: false
  name: ObjectDisposedException
  fullName: System.ObjectDisposedException
  nameWithType: ObjectDisposedException
  commentId: T:System.ObjectDisposedException
- uid: System.ArgumentNullException
  isExternal: false
  name: ArgumentNullException
  fullName: System.ArgumentNullException
  nameWithType: ArgumentNullException
  commentId: T:System.ArgumentNullException
