### YamlMime:ManagedReference
items:
- uid: System.ConsoleCancelEventArgs
  commentId: T:System.ConsoleCancelEventArgs
  id: ConsoleCancelEventArgs
  parent: System
  children:
  - System.ConsoleCancelEventArgs.Cancel
  - System.ConsoleCancelEventArgs.SpecialKey
  langs:
  - csharp
  - vb
  name: ConsoleCancelEventArgs
  nameWithType: ConsoleCancelEventArgs
  fullName: System.ConsoleCancelEventArgs
  type: Class
  source:
    remote:
      path: src/System.Console/src/System/ConsoleCancelEventArgs.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: ConsoleCancelEventArgs
    path: src/System.Console/src/System/ConsoleCancelEventArgs.cs
    startLine: 9
  assemblies:
  - System.Console
  namespace: System
  summary: "\n<p>Provides data for the <xref href=\"System.Console.CancelKeyPress\" data-throw-if-not-resolved=\"false\"></xref> event. This class cannot be inherited.</p>\n"
  syntax:
    content: 'public sealed class ConsoleCancelEventArgs : EventArgs'
    content.vb: >-
      Public NotInheritable Class ConsoleCancelEventArgs
          Inherits EventArgs
  inheritance:
  - System.Object
  - System.EventArgs
  inheritedMembers:
  - System.EventArgs.Empty
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  modifiers.csharp:
  - public
  - sealed
  - class
  modifiers.vb:
  - Public
  - NotInheritable
  - Class
- uid: System.ConsoleCancelEventArgs.Cancel
  commentId: P:System.ConsoleCancelEventArgs.Cancel
  id: Cancel
  parent: System.ConsoleCancelEventArgs
  langs:
  - csharp
  - vb
  name: Cancel
  nameWithType: ConsoleCancelEventArgs.Cancel
  fullName: System.ConsoleCancelEventArgs.Cancel
  type: Property
  source:
    remote:
      path: src/System.Console/src/System/ConsoleCancelEventArgs.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: Cancel
    path: src/System.Console/src/System/ConsoleCancelEventArgs.cs
    startLine: 20
  assemblies:
  - System.Console
  namespace: System
  summary: "\n<p>Gets or sets a value that indicates whether simultaneously pressing the <xref href=\"System.ConsoleModifiers.Control\" data-throw-if-not-resolved=\"false\"></xref> modifier key and the <xref href=\"System.ConsoleKey.C\" data-throw-if-not-resolved=\"false\"></xref> console key (Ctrl+C) or the Ctrl+Break keys terminates the current process. The default is <strong>false</strong>, which terminates the current process. </p>\n"
  syntax:
    content: public bool Cancel { get; set; }
    content.vb: Public Property Cancel As Boolean
    parameters: []
    return:
      type: System.Boolean
      description: "\n<p>\n<strong>true</strong> if the current process should resume when the event handler concludes; <strong>false</strong> if the current process should terminate. The default value is <strong>false</strong>; the current process terminates when the event handler returns. If <strong>true</strong>, the current process continues. </p>\n"
  seealso:
  - linkId: System.ConsoleCancelEventHandler
    commentId: T:System.ConsoleCancelEventHandler
  - linkId: System.ConsoleKey
    commentId: T:System.ConsoleKey
  - linkId: System.ConsoleModifiers
    commentId: T:System.ConsoleModifiers
  - linkId: System.ConsoleCancelEventArgs.SpecialKey
    commentId: P:System.ConsoleCancelEventArgs.SpecialKey
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: System.ConsoleCancelEventArgs.SpecialKey
  commentId: P:System.ConsoleCancelEventArgs.SpecialKey
  id: SpecialKey
  parent: System.ConsoleCancelEventArgs
  langs:
  - csharp
  - vb
  name: SpecialKey
  nameWithType: ConsoleCancelEventArgs.SpecialKey
  fullName: System.ConsoleCancelEventArgs.SpecialKey
  type: Property
  source:
    remote:
      path: src/System.Console/src/System/ConsoleCancelEventArgs.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: SpecialKey
    path: src/System.Console/src/System/ConsoleCancelEventArgs.cs
    startLine: 25
  assemblies:
  - System.Console
  namespace: System
  summary: "\n<p>Gets the combination of modifier and console keys that interrupted the current process.</p>\n"
  syntax:
    content: public ConsoleSpecialKey SpecialKey { get; }
    content.vb: Public ReadOnly Property SpecialKey As ConsoleSpecialKey
    parameters: []
    return:
      type: System.ConsoleSpecialKey
      description: "\n<p>One of the enumeration values that specifies the key combination that interrupted the current process. There is no default value.</p>\n"
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
references:
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: false
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.EventArgs
  commentId: T:System.EventArgs
  parent: System
  isExternal: false
  name: EventArgs
  nameWithType: EventArgs
  fullName: System.EventArgs
- uid: System.EventArgs.Empty
  commentId: F:System.EventArgs.Empty
  parent: System.EventArgs
  isExternal: true
  name: Empty
  nameWithType: EventArgs.Empty
  fullName: System.EventArgs.Empty
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: false
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.ConsoleSpecialKey
  commentId: T:System.ConsoleSpecialKey
  parent: System
  isExternal: false
  name: ConsoleSpecialKey
  nameWithType: ConsoleSpecialKey
  fullName: System.ConsoleSpecialKey
