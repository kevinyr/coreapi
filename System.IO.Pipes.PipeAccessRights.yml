### YamlMime:ManagedReference
items:
- uid: System.IO.Pipes.PipeAccessRights
  commentId: T:System.IO.Pipes.PipeAccessRights
  id: PipeAccessRights
  parent: System.IO.Pipes
  children:
  - System.IO.Pipes.PipeAccessRights.AccessSystemSecurity
  - System.IO.Pipes.PipeAccessRights.ChangePermissions
  - System.IO.Pipes.PipeAccessRights.CreateNewInstance
  - System.IO.Pipes.PipeAccessRights.Delete
  - System.IO.Pipes.PipeAccessRights.FullControl
  - System.IO.Pipes.PipeAccessRights.Read
  - System.IO.Pipes.PipeAccessRights.ReadAttributes
  - System.IO.Pipes.PipeAccessRights.ReadData
  - System.IO.Pipes.PipeAccessRights.ReadExtendedAttributes
  - System.IO.Pipes.PipeAccessRights.ReadPermissions
  - System.IO.Pipes.PipeAccessRights.ReadWrite
  - System.IO.Pipes.PipeAccessRights.Synchronize
  - System.IO.Pipes.PipeAccessRights.TakeOwnership
  - System.IO.Pipes.PipeAccessRights.Write
  - System.IO.Pipes.PipeAccessRights.WriteAttributes
  - System.IO.Pipes.PipeAccessRights.WriteData
  - System.IO.Pipes.PipeAccessRights.WriteExtendedAttributes
  langs:
  - csharp
  - vb
  name: PipeAccessRights
  nameWithType: PipeAccessRights
  fullName: System.IO.Pipes.PipeAccessRights
  type: Enum
  source:
    remote:
      path: src/System.IO.Pipes.AccessControl/ref/System.IO.Pipes.AccessControl.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: PipeAccessRights
    path: src/System.IO.Pipes.AccessControl/ref/System.IO.Pipes.AccessControl.cs
    startLine: 9
  assemblies:
  - System.IO.Pipes.AccessControl
  namespace: System.IO.Pipes
  summary: "\n<p>Defines the access rights to use when you create access and audit rules.</p>\n"
  syntax:
    content: >-
      [Flags]

      public enum PipeAccessRights
    content.vb: >-
      <Flags>

      Public Enum PipeAccessRights
  attributes:
  - type: System.FlagsAttribute
    ctor: System.FlagsAttribute.#ctor
    arguments: []
  modifiers.csharp:
  - public
  - enum
  modifiers.vb:
  - Public
  - Enum
- uid: System.IO.Pipes.PipeAccessRights.AccessSystemSecurity
  commentId: F:System.IO.Pipes.PipeAccessRights.AccessSystemSecurity
  id: AccessSystemSecurity
  parent: System.IO.Pipes.PipeAccessRights
  langs:
  - csharp
  - vb
  name: AccessSystemSecurity
  nameWithType: PipeAccessRights.AccessSystemSecurity
  fullName: System.IO.Pipes.PipeAccessRights.AccessSystemSecurity
  type: Field
  source:
    remote:
      path: src/System.IO.Pipes.AccessControl/ref/System.IO.Pipes.AccessControl.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: AccessSystemSecurity
    path: src/System.IO.Pipes.AccessControl/ref/System.IO.Pipes.AccessControl.cs
    startLine: 12
  assemblies:
  - System.IO.Pipes.AccessControl
  namespace: System.IO.Pipes
  summary: "\n<p>Specifies the right to make changes to the system access control list (SACL).</p>\n"
  syntax:
    content: AccessSystemSecurity = 16777216
    return:
      type: System.IO.Pipes.PipeAccessRights
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: System.IO.Pipes.PipeAccessRights.ChangePermissions
  commentId: F:System.IO.Pipes.PipeAccessRights.ChangePermissions
  id: ChangePermissions
  parent: System.IO.Pipes.PipeAccessRights
  langs:
  - csharp
  - vb
  name: ChangePermissions
  nameWithType: PipeAccessRights.ChangePermissions
  fullName: System.IO.Pipes.PipeAccessRights.ChangePermissions
  type: Field
  source:
    remote:
      path: src/System.IO.Pipes.AccessControl/ref/System.IO.Pipes.AccessControl.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: ChangePermissions
    path: src/System.IO.Pipes.AccessControl/ref/System.IO.Pipes.AccessControl.cs
    startLine: 13
  assemblies:
  - System.IO.Pipes.AccessControl
  namespace: System.IO.Pipes
  summary: "\n<p>Specifies the right to change the security and audit rules that are associated with a pipe.</p>\n"
  syntax:
    content: ChangePermissions = 262144
    return:
      type: System.IO.Pipes.PipeAccessRights
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: System.IO.Pipes.PipeAccessRights.CreateNewInstance
  commentId: F:System.IO.Pipes.PipeAccessRights.CreateNewInstance
  id: CreateNewInstance
  parent: System.IO.Pipes.PipeAccessRights
  langs:
  - csharp
  - vb
  name: CreateNewInstance
  nameWithType: PipeAccessRights.CreateNewInstance
  fullName: System.IO.Pipes.PipeAccessRights.CreateNewInstance
  type: Field
  source:
    remote:
      path: src/System.IO.Pipes.AccessControl/ref/System.IO.Pipes.AccessControl.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: CreateNewInstance
    path: src/System.IO.Pipes.AccessControl/ref/System.IO.Pipes.AccessControl.cs
    startLine: 14
  assemblies:
  - System.IO.Pipes.AccessControl
  namespace: System.IO.Pipes
  summary: "\n<p>Specifies the right to create a new pipe. Setting this right also sets the <xref href=\"System.IO.Pipes.PipeAccessRights.Synchronize\" data-throw-if-not-resolved=\"false\"></xref> right.</p>\n"
  syntax:
    content: CreateNewInstance = 4
    return:
      type: System.IO.Pipes.PipeAccessRights
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: System.IO.Pipes.PipeAccessRights.Delete
  commentId: F:System.IO.Pipes.PipeAccessRights.Delete
  id: Delete
  parent: System.IO.Pipes.PipeAccessRights
  langs:
  - csharp
  - vb
  name: Delete
  nameWithType: PipeAccessRights.Delete
  fullName: System.IO.Pipes.PipeAccessRights.Delete
  type: Field
  source:
    remote:
      path: src/System.IO.Pipes.AccessControl/ref/System.IO.Pipes.AccessControl.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: Delete
    path: src/System.IO.Pipes.AccessControl/ref/System.IO.Pipes.AccessControl.cs
    startLine: 15
  assemblies:
  - System.IO.Pipes.AccessControl
  namespace: System.IO.Pipes
  summary: "\n<p>Specifies the right to delete a pipe.</p>\n"
  syntax:
    content: Delete = 65536
    return:
      type: System.IO.Pipes.PipeAccessRights
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: System.IO.Pipes.PipeAccessRights.FullControl
  commentId: F:System.IO.Pipes.PipeAccessRights.FullControl
  id: FullControl
  parent: System.IO.Pipes.PipeAccessRights
  langs:
  - csharp
  - vb
  name: FullControl
  nameWithType: PipeAccessRights.FullControl
  fullName: System.IO.Pipes.PipeAccessRights.FullControl
  type: Field
  source:
    remote:
      path: src/System.IO.Pipes.AccessControl/ref/System.IO.Pipes.AccessControl.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: FullControl
    path: src/System.IO.Pipes.AccessControl/ref/System.IO.Pipes.AccessControl.cs
    startLine: 16
  assemblies:
  - System.IO.Pipes.AccessControl
  namespace: System.IO.Pipes
  summary: "\n<p>Specifies the right to exert full control over a pipe, and to modify access control and audit rules. This value represents the combination of all rights in this enumeration.</p>\n"
  syntax:
    content: FullControl = 2032031
    return:
      type: System.IO.Pipes.PipeAccessRights
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: System.IO.Pipes.PipeAccessRights.Read
  commentId: F:System.IO.Pipes.PipeAccessRights.Read
  id: Read
  parent: System.IO.Pipes.PipeAccessRights
  langs:
  - csharp
  - vb
  name: Read
  nameWithType: PipeAccessRights.Read
  fullName: System.IO.Pipes.PipeAccessRights.Read
  type: Field
  source:
    remote:
      path: src/System.IO.Pipes.AccessControl/ref/System.IO.Pipes.AccessControl.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: Read
    path: src/System.IO.Pipes.AccessControl/ref/System.IO.Pipes.AccessControl.cs
    startLine: 17
  assemblies:
  - System.IO.Pipes.AccessControl
  namespace: System.IO.Pipes
  summary: "\n<p>Specifies the right to read from the pipe. This right includes the <xref href=\"System.IO.Pipes.PipeAccessRights.ReadAttributes\" data-throw-if-not-resolved=\"false\"></xref>, <xref href=\"System.IO.Pipes.PipeAccessRights.ReadData\" data-throw-if-not-resolved=\"false\"></xref>, <xref href=\"System.IO.Pipes.PipeAccessRights.ReadExtendedAttributes\" data-throw-if-not-resolved=\"false\"></xref>, and <xref href=\"System.IO.Pipes.PipeAccessRights.ReadPermissions\" data-throw-if-not-resolved=\"false\"></xref> rights.</p>\n"
  syntax:
    content: Read = 131209
    return:
      type: System.IO.Pipes.PipeAccessRights
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: System.IO.Pipes.PipeAccessRights.ReadAttributes
  commentId: F:System.IO.Pipes.PipeAccessRights.ReadAttributes
  id: ReadAttributes
  parent: System.IO.Pipes.PipeAccessRights
  langs:
  - csharp
  - vb
  name: ReadAttributes
  nameWithType: PipeAccessRights.ReadAttributes
  fullName: System.IO.Pipes.PipeAccessRights.ReadAttributes
  type: Field
  source:
    remote:
      path: src/System.IO.Pipes.AccessControl/ref/System.IO.Pipes.AccessControl.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: ReadAttributes
    path: src/System.IO.Pipes.AccessControl/ref/System.IO.Pipes.AccessControl.cs
    startLine: 18
  assemblies:
  - System.IO.Pipes.AccessControl
  namespace: System.IO.Pipes
  summary: "\n<p>Specifies the right to read file system attributes from a pipe. This does not include the right to read data, extended file system attributes, or access and audit rules.</p>\n"
  syntax:
    content: ReadAttributes = 128
    return:
      type: System.IO.Pipes.PipeAccessRights
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: System.IO.Pipes.PipeAccessRights.ReadData
  commentId: F:System.IO.Pipes.PipeAccessRights.ReadData
  id: ReadData
  parent: System.IO.Pipes.PipeAccessRights
  langs:
  - csharp
  - vb
  name: ReadData
  nameWithType: PipeAccessRights.ReadData
  fullName: System.IO.Pipes.PipeAccessRights.ReadData
  type: Field
  source:
    remote:
      path: src/System.IO.Pipes.AccessControl/ref/System.IO.Pipes.AccessControl.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: ReadData
    path: src/System.IO.Pipes.AccessControl/ref/System.IO.Pipes.AccessControl.cs
    startLine: 19
  assemblies:
  - System.IO.Pipes.AccessControl
  namespace: System.IO.Pipes
  summary: "\n<p>Specifies the right to read data from the pipe. This does not include the right to read file system attributes, extended file system attributes, or access and audit rules.</p>\n"
  syntax:
    content: ReadData = 1
    return:
      type: System.IO.Pipes.PipeAccessRights
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: System.IO.Pipes.PipeAccessRights.ReadExtendedAttributes
  commentId: F:System.IO.Pipes.PipeAccessRights.ReadExtendedAttributes
  id: ReadExtendedAttributes
  parent: System.IO.Pipes.PipeAccessRights
  langs:
  - csharp
  - vb
  name: ReadExtendedAttributes
  nameWithType: PipeAccessRights.ReadExtendedAttributes
  fullName: System.IO.Pipes.PipeAccessRights.ReadExtendedAttributes
  type: Field
  source:
    remote:
      path: src/System.IO.Pipes.AccessControl/ref/System.IO.Pipes.AccessControl.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: ReadExtendedAttributes
    path: src/System.IO.Pipes.AccessControl/ref/System.IO.Pipes.AccessControl.cs
    startLine: 20
  assemblies:
  - System.IO.Pipes.AccessControl
  namespace: System.IO.Pipes
  summary: "\n<p>Specifies the right to read extended file system attributes from a pipe. This does not include the right to read data, file system attributes, or access and audit rules.</p>\n"
  syntax:
    content: ReadExtendedAttributes = 8
    return:
      type: System.IO.Pipes.PipeAccessRights
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: System.IO.Pipes.PipeAccessRights.ReadPermissions
  commentId: F:System.IO.Pipes.PipeAccessRights.ReadPermissions
  id: ReadPermissions
  parent: System.IO.Pipes.PipeAccessRights
  langs:
  - csharp
  - vb
  name: ReadPermissions
  nameWithType: PipeAccessRights.ReadPermissions
  fullName: System.IO.Pipes.PipeAccessRights.ReadPermissions
  type: Field
  source:
    remote:
      path: src/System.IO.Pipes.AccessControl/ref/System.IO.Pipes.AccessControl.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: ReadPermissions
    path: src/System.IO.Pipes.AccessControl/ref/System.IO.Pipes.AccessControl.cs
    startLine: 21
  assemblies:
  - System.IO.Pipes.AccessControl
  namespace: System.IO.Pipes
  summary: "\n<p>Specifies the right to read access and audit rules from the pipe. This does not include the right to read data, file system attributes, or extended file system attributes.</p>\n"
  syntax:
    content: ReadPermissions = 131072
    return:
      type: System.IO.Pipes.PipeAccessRights
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: System.IO.Pipes.PipeAccessRights.ReadWrite
  commentId: F:System.IO.Pipes.PipeAccessRights.ReadWrite
  id: ReadWrite
  parent: System.IO.Pipes.PipeAccessRights
  langs:
  - csharp
  - vb
  name: ReadWrite
  nameWithType: PipeAccessRights.ReadWrite
  fullName: System.IO.Pipes.PipeAccessRights.ReadWrite
  type: Field
  source:
    remote:
      path: src/System.IO.Pipes.AccessControl/ref/System.IO.Pipes.AccessControl.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: ReadWrite
    path: src/System.IO.Pipes.AccessControl/ref/System.IO.Pipes.AccessControl.cs
    startLine: 22
  assemblies:
  - System.IO.Pipes.AccessControl
  namespace: System.IO.Pipes
  summary: "\n<p>Specifies the right to read and write from the pipe. This right includes the <xref href=\"System.IO.Pipes.PipeAccessRights.ReadAttributes\" data-throw-if-not-resolved=\"false\"></xref>, <xref href=\"System.IO.Pipes.PipeAccessRights.ReadData\" data-throw-if-not-resolved=\"false\"></xref>, <xref href=\"System.IO.Pipes.PipeAccessRights.ReadExtendedAttributes\" data-throw-if-not-resolved=\"false\"></xref>, <xref href=\"System.IO.Pipes.PipeAccessRights.ReadPermissions\" data-throw-if-not-resolved=\"false\"></xref>, <xref href=\"System.IO.Pipes.PipeAccessRights.WriteAttributes\" data-throw-if-not-resolved=\"false\"></xref>, <xref href=\"System.IO.Pipes.PipeAccessRights.WriteData\" data-throw-if-not-resolved=\"false\"></xref>, and <xref href=\"System.IO.Pipes.PipeAccessRights.WriteExtendedAttributes\" data-throw-if-not-resolved=\"false\"></xref> rights.</p>\n"
  syntax:
    content: ReadWrite = 131483
    return:
      type: System.IO.Pipes.PipeAccessRights
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: System.IO.Pipes.PipeAccessRights.Synchronize
  commentId: F:System.IO.Pipes.PipeAccessRights.Synchronize
  id: Synchronize
  parent: System.IO.Pipes.PipeAccessRights
  langs:
  - csharp
  - vb
  name: Synchronize
  nameWithType: PipeAccessRights.Synchronize
  fullName: System.IO.Pipes.PipeAccessRights.Synchronize
  type: Field
  source:
    remote:
      path: src/System.IO.Pipes.AccessControl/ref/System.IO.Pipes.AccessControl.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: Synchronize
    path: src/System.IO.Pipes.AccessControl/ref/System.IO.Pipes.AccessControl.cs
    startLine: 23
  assemblies:
  - System.IO.Pipes.AccessControl
  namespace: System.IO.Pipes
  summary: "\n<p>Specifies whether the application can wait for a pipe handle to synchronize with the completion of an I/O operation.</p>\n"
  syntax:
    content: Synchronize = 1048576
    return:
      type: System.IO.Pipes.PipeAccessRights
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: System.IO.Pipes.PipeAccessRights.TakeOwnership
  commentId: F:System.IO.Pipes.PipeAccessRights.TakeOwnership
  id: TakeOwnership
  parent: System.IO.Pipes.PipeAccessRights
  langs:
  - csharp
  - vb
  name: TakeOwnership
  nameWithType: PipeAccessRights.TakeOwnership
  fullName: System.IO.Pipes.PipeAccessRights.TakeOwnership
  type: Field
  source:
    remote:
      path: src/System.IO.Pipes.AccessControl/ref/System.IO.Pipes.AccessControl.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: TakeOwnership
    path: src/System.IO.Pipes.AccessControl/ref/System.IO.Pipes.AccessControl.cs
    startLine: 24
  assemblies:
  - System.IO.Pipes.AccessControl
  namespace: System.IO.Pipes
  summary: "\n<p>Specifies the right to change the owner of a pipe. Note that owners of a pipe have full access to that resource.</p>\n"
  syntax:
    content: TakeOwnership = 524288
    return:
      type: System.IO.Pipes.PipeAccessRights
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: System.IO.Pipes.PipeAccessRights.Write
  commentId: F:System.IO.Pipes.PipeAccessRights.Write
  id: Write
  parent: System.IO.Pipes.PipeAccessRights
  langs:
  - csharp
  - vb
  name: Write
  nameWithType: PipeAccessRights.Write
  fullName: System.IO.Pipes.PipeAccessRights.Write
  type: Field
  source:
    remote:
      path: src/System.IO.Pipes.AccessControl/ref/System.IO.Pipes.AccessControl.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: Write
    path: src/System.IO.Pipes.AccessControl/ref/System.IO.Pipes.AccessControl.cs
    startLine: 25
  assemblies:
  - System.IO.Pipes.AccessControl
  namespace: System.IO.Pipes
  summary: "\n<p>Specifies the right to write to the pipe. This right includes the <xref href=\"System.IO.Pipes.PipeAccessRights.WriteAttributes\" data-throw-if-not-resolved=\"false\"></xref>, <xref href=\"System.IO.Pipes.PipeAccessRights.WriteData\" data-throw-if-not-resolved=\"false\"></xref>, and <xref href=\"System.IO.Pipes.PipeAccessRights.WriteExtendedAttributes\" data-throw-if-not-resolved=\"false\"></xref> rights.</p>\n"
  syntax:
    content: Write = 274
    return:
      type: System.IO.Pipes.PipeAccessRights
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: System.IO.Pipes.PipeAccessRights.WriteAttributes
  commentId: F:System.IO.Pipes.PipeAccessRights.WriteAttributes
  id: WriteAttributes
  parent: System.IO.Pipes.PipeAccessRights
  langs:
  - csharp
  - vb
  name: WriteAttributes
  nameWithType: PipeAccessRights.WriteAttributes
  fullName: System.IO.Pipes.PipeAccessRights.WriteAttributes
  type: Field
  source:
    remote:
      path: src/System.IO.Pipes.AccessControl/ref/System.IO.Pipes.AccessControl.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: WriteAttributes
    path: src/System.IO.Pipes.AccessControl/ref/System.IO.Pipes.AccessControl.cs
    startLine: 26
  assemblies:
  - System.IO.Pipes.AccessControl
  namespace: System.IO.Pipes
  summary: "\n<p>Specifies the right to write file system attributes to a pipe. This does not include the right to write data or extended file system attributes.</p>\n"
  syntax:
    content: WriteAttributes = 256
    return:
      type: System.IO.Pipes.PipeAccessRights
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: System.IO.Pipes.PipeAccessRights.WriteData
  commentId: F:System.IO.Pipes.PipeAccessRights.WriteData
  id: WriteData
  parent: System.IO.Pipes.PipeAccessRights
  langs:
  - csharp
  - vb
  name: WriteData
  nameWithType: PipeAccessRights.WriteData
  fullName: System.IO.Pipes.PipeAccessRights.WriteData
  type: Field
  source:
    remote:
      path: src/System.IO.Pipes.AccessControl/ref/System.IO.Pipes.AccessControl.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: WriteData
    path: src/System.IO.Pipes.AccessControl/ref/System.IO.Pipes.AccessControl.cs
    startLine: 27
  assemblies:
  - System.IO.Pipes.AccessControl
  namespace: System.IO.Pipes
  summary: "\n<p>Specifies the right to write data to a pipe. This does not include the right to write file system attributes or extended file system attributes.</p>\n"
  syntax:
    content: WriteData = 2
    return:
      type: System.IO.Pipes.PipeAccessRights
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: System.IO.Pipes.PipeAccessRights.WriteExtendedAttributes
  commentId: F:System.IO.Pipes.PipeAccessRights.WriteExtendedAttributes
  id: WriteExtendedAttributes
  parent: System.IO.Pipes.PipeAccessRights
  langs:
  - csharp
  - vb
  name: WriteExtendedAttributes
  nameWithType: PipeAccessRights.WriteExtendedAttributes
  fullName: System.IO.Pipes.PipeAccessRights.WriteExtendedAttributes
  type: Field
  source:
    remote:
      path: src/System.IO.Pipes.AccessControl/ref/System.IO.Pipes.AccessControl.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: WriteExtendedAttributes
    path: src/System.IO.Pipes.AccessControl/ref/System.IO.Pipes.AccessControl.cs
    startLine: 28
  assemblies:
  - System.IO.Pipes.AccessControl
  namespace: System.IO.Pipes
  summary: "\n<p>Specifies the right to write extended file system attributes to a pipe. This does not include the right to write file attributes or data.</p>\n"
  syntax:
    content: WriteExtendedAttributes = 16
    return:
      type: System.IO.Pipes.PipeAccessRights
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
references:
- uid: System.IO.Pipes
  commentId: N:System.IO.Pipes
  isExternal: false
  name: System.IO.Pipes
  nameWithType: System.IO.Pipes
  fullName: System.IO.Pipes
- uid: System.IO.Pipes.PipeAccessRights
  commentId: T:System.IO.Pipes.PipeAccessRights
  parent: System.IO.Pipes
  isExternal: false
  name: PipeAccessRights
  nameWithType: PipeAccessRights
  fullName: System.IO.Pipes.PipeAccessRights
