items:
- uid: System.Diagnostics.DelimitedListTraceListener
  commentId: T:System.Diagnostics.DelimitedListTraceListener
  id: DelimitedListTraceListener
  parent: System.Diagnostics
  children:
  - System.Diagnostics.DelimitedListTraceListener.#ctor(System.IO.Stream)
  - System.Diagnostics.DelimitedListTraceListener.#ctor(System.IO.Stream,System.String)
  - System.Diagnostics.DelimitedListTraceListener.#ctor(System.IO.TextWriter)
  - System.Diagnostics.DelimitedListTraceListener.#ctor(System.IO.TextWriter,System.String)
  - System.Diagnostics.DelimitedListTraceListener.Delimiter
  - System.Diagnostics.DelimitedListTraceListener.TraceData(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.Object)
  - System.Diagnostics.DelimitedListTraceListener.TraceData(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.Object[])
  - System.Diagnostics.DelimitedListTraceListener.TraceEvent(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.String)
  - System.Diagnostics.DelimitedListTraceListener.TraceEvent(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.String,System.Object[])
  langs:
  - csharp
  - vb
  name: DelimitedListTraceListener
  fullName: System.Diagnostics.DelimitedListTraceListener
  type: Class
  source:
    remote:
      path: src/System.Diagnostics.TextWriterTraceListener/ref/System.Diagnostics.TextWriterTraceListener.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: DelimitedListTraceListener
    path: src/System.Diagnostics.TextWriterTraceListener/ref/System.Diagnostics.TextWriterTraceListener.cs
    startLine: 10
  assemblies:
  - System.Diagnostics.TextWriterTraceListener
  namespace: System.Diagnostics
  summary: "\n<p>Directs tracing or debugging output to a text writer, such as a stream writer, or to a stream, such as a file stream.</p>\n"
  syntax:
    content: 'public class DelimitedListTraceListener : TextWriterTraceListener'
    content.vb: >-
      Public Class DelimitedListTraceListener
          Inherits TextWriterTraceListener
  inheritance:
  - System.Object
  - System.Diagnostics.TextWriterTraceListener
  inheritedMembers:
  - System.Diagnostics.TextWriterTraceListener.Writer
  - System.Diagnostics.TextWriterTraceListener.Dispose(System.Boolean)
  - System.Diagnostics.TextWriterTraceListener.Flush
  - System.Diagnostics.TextWriterTraceListener.Write(System.String)
  - System.Diagnostics.TextWriterTraceListener.WriteLine(System.String)
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
  nameWithType: DelimitedListTraceListener
- uid: System.Diagnostics.DelimitedListTraceListener.#ctor(System.IO.Stream)
  commentId: M:System.Diagnostics.DelimitedListTraceListener.#ctor(System.IO.Stream)
  id: '#ctor(System.IO.Stream)'
  parent: System.Diagnostics.DelimitedListTraceListener
  langs:
  - csharp
  - vb
  name: DelimitedListTraceListener(Stream)
  fullName: System.Diagnostics.DelimitedListTraceListener.DelimitedListTraceListener(System.IO.Stream)
  type: Constructor
  source:
    remote:
      path: src/System.Diagnostics.TextWriterTraceListener/ref/System.Diagnostics.TextWriterTraceListener.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: .ctor
    path: src/System.Diagnostics.TextWriterTraceListener/ref/System.Diagnostics.TextWriterTraceListener.cs
    startLine: 12
  assemblies:
  - System.Diagnostics.TextWriterTraceListener
  namespace: System.Diagnostics
  summary: "\n<p>Initializes a new instance of the <xref href=\"System.Diagnostics.DelimitedListTraceListener\" data-throw-if-not-resolved=\"false\"></xref> class that writes to the specified output stream. </p>\n"
  syntax:
    content: public DelimitedListTraceListener(Stream stream)
    content.vb: Public Sub New(stream As Stream)
    parameters:
    - id: stream
      type: System.IO.Stream
      description: "\n<p>The <xref href=\"System.IO.Stream\" data-throw-if-not-resolved=\"false\"></xref> to receive the output.</p>\n"
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "\n<p>\n<em>stream</em> is <strong>null</strong>. </p>\n"
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  nameWithType: DelimitedListTraceListener.DelimitedListTraceListener(Stream)
- uid: System.Diagnostics.DelimitedListTraceListener.#ctor(System.IO.Stream,System.String)
  commentId: M:System.Diagnostics.DelimitedListTraceListener.#ctor(System.IO.Stream,System.String)
  id: '#ctor(System.IO.Stream,System.String)'
  parent: System.Diagnostics.DelimitedListTraceListener
  langs:
  - csharp
  - vb
  name: DelimitedListTraceListener(Stream, String)
  fullName: System.Diagnostics.DelimitedListTraceListener.DelimitedListTraceListener(System.IO.Stream, System.String)
  type: Constructor
  source:
    remote:
      path: src/System.Diagnostics.TextWriterTraceListener/ref/System.Diagnostics.TextWriterTraceListener.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: .ctor
    path: src/System.Diagnostics.TextWriterTraceListener/ref/System.Diagnostics.TextWriterTraceListener.cs
    startLine: 13
  assemblies:
  - System.Diagnostics.TextWriterTraceListener
  namespace: System.Diagnostics
  summary: "\n<p>Initializes a new instance of the <xref href=\"System.Diagnostics.DelimitedListTraceListener\" data-throw-if-not-resolved=\"false\"></xref> class that writes to the specified output stream and has the specified name. </p>\n"
  syntax:
    content: public DelimitedListTraceListener(Stream stream, string name)
    content.vb: Public Sub New(stream As Stream, name As String)
    parameters:
    - id: stream
      type: System.IO.Stream
      description: "\n<p>The <xref href=\"System.IO.Stream\" data-throw-if-not-resolved=\"false\"></xref> to receive the output.</p>\n"
    - id: name
      type: System.String
      description: "\n<p>The name of the new instance of the trace listener. </p>\n"
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "\n<p>\n<em>stream</em> is <strong>null</strong>. </p>\n"
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  nameWithType: DelimitedListTraceListener.DelimitedListTraceListener(Stream, String)
- uid: System.Diagnostics.DelimitedListTraceListener.#ctor(System.IO.TextWriter)
  commentId: M:System.Diagnostics.DelimitedListTraceListener.#ctor(System.IO.TextWriter)
  id: '#ctor(System.IO.TextWriter)'
  parent: System.Diagnostics.DelimitedListTraceListener
  langs:
  - csharp
  - vb
  name: DelimitedListTraceListener(TextWriter)
  fullName: System.Diagnostics.DelimitedListTraceListener.DelimitedListTraceListener(System.IO.TextWriter)
  type: Constructor
  source:
    remote:
      path: src/System.Diagnostics.TextWriterTraceListener/ref/System.Diagnostics.TextWriterTraceListener.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: .ctor
    path: src/System.Diagnostics.TextWriterTraceListener/ref/System.Diagnostics.TextWriterTraceListener.cs
    startLine: 14
  assemblies:
  - System.Diagnostics.TextWriterTraceListener
  namespace: System.Diagnostics
  summary: "\n<p>Initializes a new instance of the <xref href=\"System.Diagnostics.DelimitedListTraceListener\" data-throw-if-not-resolved=\"false\"></xref> class that writes to the specified text writer. </p>\n"
  syntax:
    content: public DelimitedListTraceListener(TextWriter writer)
    content.vb: Public Sub New(writer As TextWriter)
    parameters:
    - id: writer
      type: System.IO.TextWriter
      description: "\n<p>The <xref href=\"System.IO.TextWriter\" data-throw-if-not-resolved=\"false\"></xref> to receive the output.</p>\n"
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "\n<p>\n<em>writer</em> is <strong>null</strong>. </p>\n"
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  nameWithType: DelimitedListTraceListener.DelimitedListTraceListener(TextWriter)
- uid: System.Diagnostics.DelimitedListTraceListener.#ctor(System.IO.TextWriter,System.String)
  commentId: M:System.Diagnostics.DelimitedListTraceListener.#ctor(System.IO.TextWriter,System.String)
  id: '#ctor(System.IO.TextWriter,System.String)'
  parent: System.Diagnostics.DelimitedListTraceListener
  langs:
  - csharp
  - vb
  name: DelimitedListTraceListener(TextWriter, String)
  fullName: System.Diagnostics.DelimitedListTraceListener.DelimitedListTraceListener(System.IO.TextWriter, System.String)
  type: Constructor
  source:
    remote:
      path: src/System.Diagnostics.TextWriterTraceListener/ref/System.Diagnostics.TextWriterTraceListener.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: .ctor
    path: src/System.Diagnostics.TextWriterTraceListener/ref/System.Diagnostics.TextWriterTraceListener.cs
    startLine: 15
  assemblies:
  - System.Diagnostics.TextWriterTraceListener
  namespace: System.Diagnostics
  summary: "\n<p>Initializes a new instance of the <xref href=\"System.Diagnostics.DelimitedListTraceListener\" data-throw-if-not-resolved=\"false\"></xref> class that writes to the specified text writer and has the specified name. </p>\n"
  syntax:
    content: public DelimitedListTraceListener(TextWriter writer, string name)
    content.vb: Public Sub New(writer As TextWriter, name As String)
    parameters:
    - id: writer
      type: System.IO.TextWriter
      description: "\n<p>The <xref href=\"System.IO.TextWriter\" data-throw-if-not-resolved=\"false\"></xref> to receive the output.</p>\n"
    - id: name
      type: System.String
      description: "\n<p>The name of the new instance of the trace listener. </p>\n"
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "\n<p>\n<em>writer</em> is <strong>null</strong>. </p>\n"
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  nameWithType: DelimitedListTraceListener.DelimitedListTraceListener(TextWriter, String)
- uid: System.Diagnostics.DelimitedListTraceListener.Delimiter
  commentId: P:System.Diagnostics.DelimitedListTraceListener.Delimiter
  id: Delimiter
  parent: System.Diagnostics.DelimitedListTraceListener
  langs:
  - csharp
  - vb
  name: Delimiter
  fullName: System.Diagnostics.DelimitedListTraceListener.Delimiter
  type: Property
  source:
    remote:
      path: src/System.Diagnostics.TextWriterTraceListener/ref/System.Diagnostics.TextWriterTraceListener.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: Delimiter
    path: src/System.Diagnostics.TextWriterTraceListener/ref/System.Diagnostics.TextWriterTraceListener.cs
    startLine: 16
  assemblies:
  - System.Diagnostics.TextWriterTraceListener
  namespace: System.Diagnostics
  summary: "\n<p>Gets or sets the delimiter for the delimited list.</p>\n"
  syntax:
    content: public string Delimiter { get; set; }
    content.vb: Public Property Delimiter As String
    parameters: []
    return:
      type: System.String
      description: "\n<p>The delimiter for the delimited list.</p>\n"
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "\n<p>\n<xref href=\"System.Diagnostics.DelimitedListTraceListener.Delimiter\" data-throw-if-not-resolved=\"false\"></xref> is set to <strong>null</strong>.</p>\n"
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "\n<p>\n<xref href=\"System.Diagnostics.DelimitedListTraceListener.Delimiter\" data-throw-if-not-resolved=\"false\"></xref> is set to an empty string (\"\").</p>\n"
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
  nameWithType: DelimitedListTraceListener.Delimiter
- uid: System.Diagnostics.DelimitedListTraceListener.TraceData(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.Object)
  commentId: M:System.Diagnostics.DelimitedListTraceListener.TraceData(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.Object)
  id: TraceData(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.Object)
  parent: System.Diagnostics.DelimitedListTraceListener
  langs:
  - csharp
  - vb
  name: TraceData(TraceEventCache, String, TraceEventType, Int32, Object)
  fullName: System.Diagnostics.DelimitedListTraceListener.TraceData(System.Diagnostics.TraceEventCache, System.String, System.Diagnostics.TraceEventType, System.Int32, System.Object)
  type: Method
  source:
    remote:
      path: src/System.Diagnostics.TextWriterTraceListener/ref/System.Diagnostics.TextWriterTraceListener.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: TraceData
    path: src/System.Diagnostics.TextWriterTraceListener/ref/System.Diagnostics.TextWriterTraceListener.cs
    startLine: 17
  assemblies:
  - System.Diagnostics.TextWriterTraceListener
  namespace: System.Diagnostics
  summary: "\n<p>Writes trace information, a data object, and event information to the output file or stream.</p>\n"
  syntax:
    content: public override void TraceData(TraceEventCache eventCache, string source, TraceEventType eventType, int id, object data)
    content.vb: Public Overrides Sub TraceData(eventCache As TraceEventCache, source As String, eventType As TraceEventType, id As Integer, data As Object)
    parameters:
    - id: eventCache
      type: System.Diagnostics.TraceEventCache
      description: "\n<p>A <xref href=\"System.Diagnostics.TraceEventCache\" data-throw-if-not-resolved=\"false\"></xref> object that contains the current process ID, thread ID, and stack trace information.</p>\n"
    - id: source
      type: System.String
      description: "\n<p>A name used to identify the output, typically the name of the application that generated the trace event.</p>\n"
    - id: eventType
      type: System.Diagnostics.TraceEventType
      description: "\n<p>One of the <xref href=\"System.Diagnostics.TraceEventType\" data-throw-if-not-resolved=\"false\"></xref> values specifying the type of event that has caused the trace.</p>\n"
    - id: id
      type: System.Int32
      description: "\n<p>A numeric identifier for the event.</p>\n"
    - id: data
      type: System.Object
      description: "\n<p>A data object to write to the output file or stream.</p>\n"
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
  nameWithType: DelimitedListTraceListener.TraceData(TraceEventCache, String, TraceEventType, Int32, Object)
- uid: System.Diagnostics.DelimitedListTraceListener.TraceData(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.Object[])
  commentId: M:System.Diagnostics.DelimitedListTraceListener.TraceData(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.Object[])
  id: TraceData(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.Object[])
  parent: System.Diagnostics.DelimitedListTraceListener
  langs:
  - csharp
  - vb
  name: TraceData(TraceEventCache, String, TraceEventType, Int32, Object[])
  fullName: System.Diagnostics.DelimitedListTraceListener.TraceData(System.Diagnostics.TraceEventCache, System.String, System.Diagnostics.TraceEventType, System.Int32, System.Object[])
  type: Method
  source:
    remote:
      path: src/System.Diagnostics.TextWriterTraceListener/ref/System.Diagnostics.TextWriterTraceListener.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: TraceData
    path: src/System.Diagnostics.TextWriterTraceListener/ref/System.Diagnostics.TextWriterTraceListener.cs
    startLine: 18
  assemblies:
  - System.Diagnostics.TextWriterTraceListener
  namespace: System.Diagnostics
  summary: "\n<p>Writes trace information, an array of data objects, and event information to the output file or stream.</p>\n"
  syntax:
    content: public override void TraceData(TraceEventCache eventCache, string source, TraceEventType eventType, int id, params object[] data)
    content.vb: Public Overrides Sub TraceData(eventCache As TraceEventCache, source As String, eventType As TraceEventType, id As Integer, ParamArray data As Object())
    parameters:
    - id: eventCache
      type: System.Diagnostics.TraceEventCache
      description: "\n<p>A <xref href=\"System.Diagnostics.TraceEventCache\" data-throw-if-not-resolved=\"false\"></xref> object that contains the current process ID, thread ID, and stack trace information.</p>\n"
    - id: source
      type: System.String
      description: "\n<p>A name used to identify the output, typically the name of the application that generated the trace event.</p>\n"
    - id: eventType
      type: System.Diagnostics.TraceEventType
      description: "\n<p>One of the <xref href=\"System.Diagnostics.TraceEventType\" data-throw-if-not-resolved=\"false\"></xref> values specifying the type of event that has caused the trace.</p>\n"
    - id: id
      type: System.Int32
      description: "\n<p>A numeric identifier for the event.</p>\n"
    - id: data
      type: System.Object[]
      description: "\n<p>An array of data objects to write to the output file or stream.</p>\n"
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
  fullName.vb: System.Diagnostics.DelimitedListTraceListener.TraceData(System.Diagnostics.TraceEventCache, System.String, System.Diagnostics.TraceEventType, System.Int32, System.Object())
  name.vb: TraceData(TraceEventCache, String, TraceEventType, Int32, Object())
  nameWithType: DelimitedListTraceListener.TraceData(TraceEventCache, String, TraceEventType, Int32, Object[])
  nameWithType.vb: DelimitedListTraceListener.TraceData(TraceEventCache, String, TraceEventType, Int32, Object())
- uid: System.Diagnostics.DelimitedListTraceListener.TraceEvent(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.String)
  commentId: M:System.Diagnostics.DelimitedListTraceListener.TraceEvent(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.String)
  id: TraceEvent(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.String)
  parent: System.Diagnostics.DelimitedListTraceListener
  langs:
  - csharp
  - vb
  name: TraceEvent(TraceEventCache, String, TraceEventType, Int32, String)
  fullName: System.Diagnostics.DelimitedListTraceListener.TraceEvent(System.Diagnostics.TraceEventCache, System.String, System.Diagnostics.TraceEventType, System.Int32, System.String)
  type: Method
  source:
    remote:
      path: src/System.Diagnostics.TextWriterTraceListener/ref/System.Diagnostics.TextWriterTraceListener.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: TraceEvent
    path: src/System.Diagnostics.TextWriterTraceListener/ref/System.Diagnostics.TextWriterTraceListener.cs
    startLine: 19
  assemblies:
  - System.Diagnostics.TextWriterTraceListener
  namespace: System.Diagnostics
  summary: "\n<p>Writes trace information, a message, and event information to the output file or stream.</p>\n"
  syntax:
    content: public override void TraceEvent(TraceEventCache eventCache, string source, TraceEventType eventType, int id, string message)
    content.vb: Public Overrides Sub TraceEvent(eventCache As TraceEventCache, source As String, eventType As TraceEventType, id As Integer, message As String)
    parameters:
    - id: eventCache
      type: System.Diagnostics.TraceEventCache
      description: "\n<p>A <xref href=\"System.Diagnostics.TraceEventCache\" data-throw-if-not-resolved=\"false\"></xref> object that contains the current process ID, thread ID, and stack trace information.</p>\n"
    - id: source
      type: System.String
      description: "\n<p>A name used to identify the output, typically the name of the application that generated the trace event.</p>\n"
    - id: eventType
      type: System.Diagnostics.TraceEventType
      description: "\n<p>One of the <xref href=\"System.Diagnostics.TraceEventType\" data-throw-if-not-resolved=\"false\"></xref> values specifying the type of event that has caused the trace.</p>\n"
    - id: id
      type: System.Int32
      description: "\n<p>A numeric identifier for the event.</p>\n"
    - id: message
      type: System.String
      description: "\n<p>The trace message to write to the output file or stream.</p>\n"
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
  nameWithType: DelimitedListTraceListener.TraceEvent(TraceEventCache, String, TraceEventType, Int32, String)
- uid: System.Diagnostics.DelimitedListTraceListener.TraceEvent(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.String,System.Object[])
  commentId: M:System.Diagnostics.DelimitedListTraceListener.TraceEvent(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.String,System.Object[])
  id: TraceEvent(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.String,System.Object[])
  parent: System.Diagnostics.DelimitedListTraceListener
  langs:
  - csharp
  - vb
  name: TraceEvent(TraceEventCache, String, TraceEventType, Int32, String, Object[])
  fullName: System.Diagnostics.DelimitedListTraceListener.TraceEvent(System.Diagnostics.TraceEventCache, System.String, System.Diagnostics.TraceEventType, System.Int32, System.String, System.Object[])
  type: Method
  source:
    remote:
      path: src/System.Diagnostics.TextWriterTraceListener/ref/System.Diagnostics.TextWriterTraceListener.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: TraceEvent
    path: src/System.Diagnostics.TextWriterTraceListener/ref/System.Diagnostics.TextWriterTraceListener.cs
    startLine: 20
  assemblies:
  - System.Diagnostics.TextWriterTraceListener
  namespace: System.Diagnostics
  summary: "\n<p>Writes trace information, a formatted array of objects, and event information to the output file or stream.</p>\n"
  syntax:
    content: public override void TraceEvent(TraceEventCache eventCache, string source, TraceEventType eventType, int id, string format, params object[] args)
    content.vb: Public Overrides Sub TraceEvent(eventCache As TraceEventCache, source As String, eventType As TraceEventType, id As Integer, format As String, ParamArray args As Object())
    parameters:
    - id: eventCache
      type: System.Diagnostics.TraceEventCache
      description: "\n<p>A <xref href=\"System.Diagnostics.TraceEventCache\" data-throw-if-not-resolved=\"false\"></xref> object that contains the current process ID, thread ID, and stack trace information.</p>\n"
    - id: source
      type: System.String
      description: "\n<p>A name used to identify the output, typically the name of the application that generated the trace event.</p>\n"
    - id: eventType
      type: System.Diagnostics.TraceEventType
      description: "\n<p>One of the <xref href=\"System.Diagnostics.TraceEventType\" data-throw-if-not-resolved=\"false\"></xref> values specifying the type of event that has caused the trace.</p>\n"
    - id: id
      type: System.Int32
      description: "\n<p>A numeric identifier for the event.</p>\n"
    - id: format
      type: System.String
      description: "\n<p>A format string that contains zero or more format items that correspond to objects in the <em>args</em> array.</p>\n"
    - id: args
      type: System.Object[]
      description: "\n<p>An array containing zero or more objects to format.</p>\n"
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
  fullName.vb: System.Diagnostics.DelimitedListTraceListener.TraceEvent(System.Diagnostics.TraceEventCache, System.String, System.Diagnostics.TraceEventType, System.Int32, System.String, System.Object())
  name.vb: TraceEvent(TraceEventCache, String, TraceEventType, Int32, String, Object())
  nameWithType: DelimitedListTraceListener.TraceEvent(TraceEventCache, String, TraceEventType, Int32, String, Object[])
  nameWithType.vb: DelimitedListTraceListener.TraceEvent(TraceEventCache, String, TraceEventType, Int32, String, Object())
references:
- uid: System.Diagnostics
  isExternal: false
  name: System.Diagnostics
  fullName: System.Diagnostics
  commentId: N:System.Diagnostics
  nameWithType: System.Diagnostics
- uid: System.Object
  parent: System
  isExternal: false
  name: Object
  fullName: System.Object
  commentId: T:System.Object
  nameWithType: Object
- uid: System.Diagnostics.TextWriterTraceListener
  parent: System.Diagnostics
  isExternal: false
  name: TextWriterTraceListener
  fullName: System.Diagnostics.TextWriterTraceListener
  commentId: T:System.Diagnostics.TextWriterTraceListener
  nameWithType: TextWriterTraceListener
- uid: System.Diagnostics.TextWriterTraceListener.Writer
  parent: System.Diagnostics.TextWriterTraceListener
  isExternal: false
  name: Writer
  fullName: System.Diagnostics.TextWriterTraceListener.Writer
  commentId: P:System.Diagnostics.TextWriterTraceListener.Writer
  nameWithType: TextWriterTraceListener.Writer
- uid: System.Diagnostics.TextWriterTraceListener.Dispose(System.Boolean)
  parent: System.Diagnostics.TextWriterTraceListener
  isExternal: true
  name: Dispose(Boolean)
  fullName: System.Diagnostics.TextWriterTraceListener.Dispose(System.Boolean)
  spec.csharp:
  - uid: System.Diagnostics.TextWriterTraceListener.Dispose(System.Boolean)
    name: Dispose
    fullName: System.Diagnostics.TextWriterTraceListener.Dispose
  - name: (
    fullName: (
  - uid: System.Boolean
    name: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Diagnostics.TextWriterTraceListener.Dispose(System.Boolean)
    name: Dispose
    fullName: System.Diagnostics.TextWriterTraceListener.Dispose
  - name: (
    fullName: (
  - uid: System.Boolean
    name: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    fullName: )
  commentId: M:System.Diagnostics.TextWriterTraceListener.Dispose(System.Boolean)
  nameWithType: TextWriterTraceListener.Dispose(Boolean)
- uid: System.Diagnostics.TextWriterTraceListener.Flush
  parent: System.Diagnostics.TextWriterTraceListener
  isExternal: false
  name: Flush()
  fullName: System.Diagnostics.TextWriterTraceListener.Flush()
  spec.csharp:
  - uid: System.Diagnostics.TextWriterTraceListener.Flush
    name: Flush
    fullName: System.Diagnostics.TextWriterTraceListener.Flush
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Diagnostics.TextWriterTraceListener.Flush
    name: Flush
    fullName: System.Diagnostics.TextWriterTraceListener.Flush
  - name: (
    fullName: (
  - name: )
    fullName: )
  commentId: M:System.Diagnostics.TextWriterTraceListener.Flush
  nameWithType: TextWriterTraceListener.Flush()
- uid: System.Diagnostics.TextWriterTraceListener.Write(System.String)
  parent: System.Diagnostics.TextWriterTraceListener
  isExternal: true
  name: Write(String)
  fullName: System.Diagnostics.TextWriterTraceListener.Write(System.String)
  spec.csharp:
  - uid: System.Diagnostics.TextWriterTraceListener.Write(System.String)
    name: Write
    fullName: System.Diagnostics.TextWriterTraceListener.Write
  - name: (
    fullName: (
  - uid: System.String
    name: String
    fullName: System.String
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Diagnostics.TextWriterTraceListener.Write(System.String)
    name: Write
    fullName: System.Diagnostics.TextWriterTraceListener.Write
  - name: (
    fullName: (
  - uid: System.String
    name: String
    fullName: System.String
    isExternal: true
  - name: )
    fullName: )
  commentId: M:System.Diagnostics.TextWriterTraceListener.Write(System.String)
  nameWithType: TextWriterTraceListener.Write(String)
- uid: System.Diagnostics.TextWriterTraceListener.WriteLine(System.String)
  parent: System.Diagnostics.TextWriterTraceListener
  isExternal: true
  name: WriteLine(String)
  fullName: System.Diagnostics.TextWriterTraceListener.WriteLine(System.String)
  spec.csharp:
  - uid: System.Diagnostics.TextWriterTraceListener.WriteLine(System.String)
    name: WriteLine
    fullName: System.Diagnostics.TextWriterTraceListener.WriteLine
  - name: (
    fullName: (
  - uid: System.String
    name: String
    fullName: System.String
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Diagnostics.TextWriterTraceListener.WriteLine(System.String)
    name: WriteLine
    fullName: System.Diagnostics.TextWriterTraceListener.WriteLine
  - name: (
    fullName: (
  - uid: System.String
    name: String
    fullName: System.String
    isExternal: true
  - name: )
    fullName: )
  commentId: M:System.Diagnostics.TextWriterTraceListener.WriteLine(System.String)
  nameWithType: TextWriterTraceListener.WriteLine(String)
- uid: System
  isExternal: false
  name: System
  fullName: System
  commentId: N:System
  nameWithType: System
- uid: System.IO.Stream
  parent: System.IO
  isExternal: false
  name: Stream
  fullName: System.IO.Stream
  commentId: T:System.IO.Stream
  nameWithType: Stream
- uid: System.IO
  isExternal: false
  name: System.IO
  fullName: System.IO
  commentId: N:System.IO
  nameWithType: System.IO
- uid: System.String
  parent: System
  isExternal: false
  name: String
  fullName: System.String
  commentId: T:System.String
  nameWithType: String
- uid: System.IO.TextWriter
  parent: System.IO
  isExternal: false
  name: TextWriter
  fullName: System.IO.TextWriter
  commentId: T:System.IO.TextWriter
  nameWithType: TextWriter
- uid: System.Diagnostics.TraceEventCache
  parent: System.Diagnostics
  isExternal: false
  name: TraceEventCache
  fullName: System.Diagnostics.TraceEventCache
  commentId: T:System.Diagnostics.TraceEventCache
  nameWithType: TraceEventCache
- uid: System.Diagnostics.TraceEventType
  parent: System.Diagnostics
  isExternal: false
  name: TraceEventType
  fullName: System.Diagnostics.TraceEventType
  commentId: T:System.Diagnostics.TraceEventType
  nameWithType: TraceEventType
- uid: System.Int32
  parent: System
  isExternal: false
  name: Int32
  fullName: System.Int32
  commentId: T:System.Int32
  nameWithType: Int32
- uid: System.Object[]
  name: Object[]
  fullName: System.Object[]
  fullname.vb: System.Object()
  name.vb: Object()
  spec.csharp:
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: '[]'
    fullName: '[]'
  spec.vb:
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ()
    fullName: ()
  nameWithType: Object[]
  nameWithType.vb: Object()
- uid: System.ArgumentNullException
  isExternal: false
  name: ArgumentNullException
  fullName: System.ArgumentNullException
  nameWithType: ArgumentNullException
  commentId: T:System.ArgumentNullException
- uid: System.ArgumentException
  parent: System
  isExternal: false
  name: ArgumentException
  fullName: System.ArgumentException
  nameWithType: ArgumentException
  commentId: T:System.ArgumentException
