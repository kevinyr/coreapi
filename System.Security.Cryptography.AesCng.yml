### YamlMime:ManagedReference
items:
- uid: System.Security.Cryptography.AesCng
  commentId: T:System.Security.Cryptography.AesCng
  id: AesCng
  parent: System.Security.Cryptography
  children:
  - System.Security.Cryptography.AesCng.#ctor
  - System.Security.Cryptography.AesCng.#ctor(System.String)
  - System.Security.Cryptography.AesCng.#ctor(System.String,System.Security.Cryptography.CngProvider)
  - System.Security.Cryptography.AesCng.#ctor(System.String,System.Security.Cryptography.CngProvider,System.Security.Cryptography.CngKeyOpenOptions)
  - System.Security.Cryptography.AesCng.CreateDecryptor
  - System.Security.Cryptography.AesCng.CreateDecryptor(System.Byte[],System.Byte[])
  - System.Security.Cryptography.AesCng.CreateEncryptor
  - System.Security.Cryptography.AesCng.CreateEncryptor(System.Byte[],System.Byte[])
  - System.Security.Cryptography.AesCng.Dispose(System.Boolean)
  - System.Security.Cryptography.AesCng.GenerateIV
  - System.Security.Cryptography.AesCng.GenerateKey
  - System.Security.Cryptography.AesCng.Key
  - System.Security.Cryptography.AesCng.KeySize
  langs:
  - csharp
  - vb
  name: AesCng
  nameWithType: AesCng
  fullName: System.Security.Cryptography.AesCng
  type: Class
  source:
    remote:
      path: src/System.Security.Cryptography.Cng/ref/System.Security.Cryptography.Cng.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: AesCng
    path: src/System.Security.Cryptography.Cng/ref/System.Security.Cryptography.Cng.cs
    startLine: 35
  assemblies:
  - System.Security.Cryptography.Cng
  namespace: System.Security.Cryptography
  summary: "\n<p>Provides a Cryptography Next Generation (CNG) implementation of the Advanced Encryption Standard (AES) algorithm.</p>\n"
  syntax:
    content: 'public sealed class AesCng : Aes, IDisposable'
    content.vb: >-
      Public NotInheritable Class AesCng
          Inherits Aes
          Implements IDisposable
  inheritance:
  - System.Object
  - System.Security.Cryptography.SymmetricAlgorithm
  - System.Security.Cryptography.Aes
  implements:
  - System.IDisposable
  inheritedMembers:
  - System.Security.Cryptography.Aes.Create
  - System.Security.Cryptography.Aes.Create(System.String)
  - System.Security.Cryptography.SymmetricAlgorithm.BlockSizeValue
  - System.Security.Cryptography.SymmetricAlgorithm.FeedbackSizeValue
  - System.Security.Cryptography.SymmetricAlgorithm.IVValue
  - System.Security.Cryptography.SymmetricAlgorithm.KeyValue
  - System.Security.Cryptography.SymmetricAlgorithm.LegalBlockSizesValue
  - System.Security.Cryptography.SymmetricAlgorithm.LegalKeySizesValue
  - System.Security.Cryptography.SymmetricAlgorithm.KeySizeValue
  - System.Security.Cryptography.SymmetricAlgorithm.ModeValue
  - System.Security.Cryptography.SymmetricAlgorithm.PaddingValue
  - System.Security.Cryptography.SymmetricAlgorithm.Dispose
  - System.Security.Cryptography.SymmetricAlgorithm.Clear
  - System.Security.Cryptography.SymmetricAlgorithm.ValidKeySize(System.Int32)
  - System.Security.Cryptography.SymmetricAlgorithm.BlockSize
  - System.Security.Cryptography.SymmetricAlgorithm.FeedbackSize
  - System.Security.Cryptography.SymmetricAlgorithm.IV
  - System.Security.Cryptography.SymmetricAlgorithm.LegalBlockSizes
  - System.Security.Cryptography.SymmetricAlgorithm.LegalKeySizes
  - System.Security.Cryptography.SymmetricAlgorithm.Mode
  - System.Security.Cryptography.SymmetricAlgorithm.Padding
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  modifiers.csharp:
  - public
  - sealed
  - class
  modifiers.vb:
  - Public
  - NotInheritable
  - Class
- uid: System.Security.Cryptography.AesCng.#ctor
  commentId: M:System.Security.Cryptography.AesCng.#ctor
  id: '#ctor'
  parent: System.Security.Cryptography.AesCng
  langs:
  - csharp
  - vb
  name: AesCng()
  nameWithType: AesCng.AesCng()
  fullName: System.Security.Cryptography.AesCng.AesCng()
  type: Constructor
  source:
    remote:
      path: src/System.Security.Cryptography.Cng/ref/System.Security.Cryptography.Cng.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: .ctor
    path: src/System.Security.Cryptography.Cng/ref/System.Security.Cryptography.Cng.cs
    startLine: 37
  assemblies:
  - System.Security.Cryptography.Cng
  namespace: System.Security.Cryptography
  summary: "\n<p>Initializes a new instance of the <xref href=\"System.Security.Cryptography.AesCng\" data-throw-if-not-resolved=\"false\"></xref> class with an ephemeral key.</p>\n"
  syntax:
    content: public AesCng()
    content.vb: Public Sub New
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: System.Security.Cryptography.AesCng.#ctor(System.String)
  commentId: M:System.Security.Cryptography.AesCng.#ctor(System.String)
  id: '#ctor(System.String)'
  parent: System.Security.Cryptography.AesCng
  langs:
  - csharp
  - vb
  name: AesCng(String)
  nameWithType: AesCng.AesCng(String)
  fullName: System.Security.Cryptography.AesCng.AesCng(System.String)
  type: Constructor
  source:
    remote:
      path: src/System.Security.Cryptography.Cng/ref/System.Security.Cryptography.Cng.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: .ctor
    path: src/System.Security.Cryptography.Cng/ref/System.Security.Cryptography.Cng.cs
    startLine: 38
  assemblies:
  - System.Security.Cryptography.Cng
  namespace: System.Security.Cryptography
  summary: "\n<p>Initializes a new instance of the <xref href=\"System.Security.Cryptography.AesCng\" data-throw-if-not-resolved=\"false\"></xref> class with the specified key name, which represents an existing persisted AES key. </p>\n"
  syntax:
    content: public AesCng(string keyName)
    content.vb: Public Sub New(keyName As String)
    parameters:
    - id: keyName
      type: System.String
      description: "\n<p>The name of the key.</p>\n"
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "\n<p>\n<em>keyName</em> is <strong>null</strong>. </p>\n"
  - type: System.PlatformNotSupportedException
    commentId: T:System.PlatformNotSupportedException
    description: "\n<p>\n      Cryptography Next Generation (CNG) is not supported on this system.\n</p>\n"
  - type: System.Security.Cryptography.CryptographicException
    commentId: T:System.Security.Cryptography.CryptographicException
    description: "\n<p>All other errors.\n</p>\n"
  seealso:
  - linkId: System.Security.Cryptography.CngKey.Open(System.String)
    commentId: M:System.Security.Cryptography.CngKey.Open(System.String)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: System.Security.Cryptography.AesCng.#ctor(System.String,System.Security.Cryptography.CngProvider)
  commentId: M:System.Security.Cryptography.AesCng.#ctor(System.String,System.Security.Cryptography.CngProvider)
  id: '#ctor(System.String,System.Security.Cryptography.CngProvider)'
  parent: System.Security.Cryptography.AesCng
  langs:
  - csharp
  - vb
  name: AesCng(String, CngProvider)
  nameWithType: AesCng.AesCng(String, CngProvider)
  fullName: System.Security.Cryptography.AesCng.AesCng(System.String, System.Security.Cryptography.CngProvider)
  type: Constructor
  source:
    remote:
      path: src/System.Security.Cryptography.Cng/ref/System.Security.Cryptography.Cng.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: .ctor
    path: src/System.Security.Cryptography.Cng/ref/System.Security.Cryptography.Cng.cs
    startLine: 39
  assemblies:
  - System.Security.Cryptography.Cng
  namespace: System.Security.Cryptography
  summary: "\n<p>Initializes a new instance of the <xref href=\"System.Security.Cryptography.AesCng\" data-throw-if-not-resolved=\"false\"></xref> class with the specified key name, which represents an existing persisted AES key, and the specified key storage provider (KSP).</p>\n"
  syntax:
    content: public AesCng(string keyName, CngProvider provider)
    content.vb: Public Sub New(keyName As String, provider As CngProvider)
    parameters:
    - id: keyName
      type: System.String
      description: "\n<p>The name of the key.</p>\n"
    - id: provider
      type: System.Security.Cryptography.CngProvider
      description: "\n<p>The KSP that contains the key.</p>\n"
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "\n<p>\n<em>keyName</em> is <strong>null</strong>. </p>\n<p>-or-</p>\n<p>\n<em>provider</em> is <strong>null</strong>. </p>\n"
  - type: System.PlatformNotSupportedException
    commentId: T:System.PlatformNotSupportedException
    description: "\n<p>\n      Cryptography Next Generation (CNG) is not supported on this system.\n</p>\n"
  - type: System.Security.Cryptography.CryptographicException
    commentId: T:System.Security.Cryptography.CryptographicException
    description: "\n<p>All other errors.\n</p>\n"
  seealso:
  - linkId: System.Security.Cryptography.CngKey.Open(System.String,System.Security.Cryptography.CngProvider)
    commentId: M:System.Security.Cryptography.CngKey.Open(System.String,System.Security.Cryptography.CngProvider)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: System.Security.Cryptography.AesCng.#ctor(System.String,System.Security.Cryptography.CngProvider,System.Security.Cryptography.CngKeyOpenOptions)
  commentId: M:System.Security.Cryptography.AesCng.#ctor(System.String,System.Security.Cryptography.CngProvider,System.Security.Cryptography.CngKeyOpenOptions)
  id: '#ctor(System.String,System.Security.Cryptography.CngProvider,System.Security.Cryptography.CngKeyOpenOptions)'
  parent: System.Security.Cryptography.AesCng
  langs:
  - csharp
  - vb
  name: AesCng(String, CngProvider, CngKeyOpenOptions)
  nameWithType: AesCng.AesCng(String, CngProvider, CngKeyOpenOptions)
  fullName: System.Security.Cryptography.AesCng.AesCng(System.String, System.Security.Cryptography.CngProvider, System.Security.Cryptography.CngKeyOpenOptions)
  type: Constructor
  source:
    remote:
      path: src/System.Security.Cryptography.Cng/ref/System.Security.Cryptography.Cng.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: .ctor
    path: src/System.Security.Cryptography.Cng/ref/System.Security.Cryptography.Cng.cs
    startLine: 40
  assemblies:
  - System.Security.Cryptography.Cng
  namespace: System.Security.Cryptography
  summary: "\n<p>Initializes a new instance of the <xref href=\"System.Security.Cryptography.AesCng\" data-throw-if-not-resolved=\"false\"></xref> class with the specified key name, which represents an existing persisted AES key,  the specified key storage provider (KSP) and key open options.</p>\n"
  syntax:
    content: public AesCng(string keyName, CngProvider provider, CngKeyOpenOptions openOptions)
    content.vb: Public Sub New(keyName As String, provider As CngProvider, openOptions As CngKeyOpenOptions)
    parameters:
    - id: keyName
      type: System.String
      description: "\n<p>The name of the key.</p>\n"
    - id: provider
      type: System.Security.Cryptography.CngProvider
      description: "\n<p>The KSP that contains the key.</p>\n"
    - id: openOptions
      type: System.Security.Cryptography.CngKeyOpenOptions
      description: "\n<p>A bitwise combination of the enumeration values that specify options for opening the key, such as where the key is opened from (machine or user storage) and whether to suppress UI prompting.</p>\n"
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "\n<p>\n<em>keyName</em> is <strong>null</strong>. </p>\n<p>-or-</p>\n<p>\n<em>provider</em> is <strong>null</strong>. </p>\n"
  - type: System.PlatformNotSupportedException
    commentId: T:System.PlatformNotSupportedException
    description: "\n<p>\n      Cryptography Next Generation (CNG) is not supported on this system.\n</p>\n"
  - type: System.Security.Cryptography.CryptographicException
    commentId: T:System.Security.Cryptography.CryptographicException
    description: "\n<p>All other errors.\n</p>\n"
  seealso:
  - linkId: System.Security.Cryptography.CngKey.Open(System.String,System.Security.Cryptography.CngProvider,System.Security.Cryptography.CngKeyOpenOptions)
    commentId: M:System.Security.Cryptography.CngKey.Open(System.String,System.Security.Cryptography.CngProvider,System.Security.Cryptography.CngKeyOpenOptions)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: System.Security.Cryptography.AesCng.Key
  commentId: P:System.Security.Cryptography.AesCng.Key
  id: Key
  parent: System.Security.Cryptography.AesCng
  langs:
  - csharp
  - vb
  name: Key
  nameWithType: AesCng.Key
  fullName: System.Security.Cryptography.AesCng.Key
  type: Property
  source:
    remote:
      path: src/System.Security.Cryptography.Cng/ref/System.Security.Cryptography.Cng.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: Key
    path: src/System.Security.Cryptography.Cng/ref/System.Security.Cryptography.Cng.cs
    startLine: 41
  assemblies:
  - System.Security.Cryptography.Cng
  namespace: System.Security.Cryptography
  summary: "\n<p>Gets or sets the key for the <xref href=\"System.Security.Cryptography.AesCng\" data-throw-if-not-resolved=\"false\"></xref> algorithm.</p>\n"
  syntax:
    content: public override byte[] Key { get; set; }
    content.vb: Public Overrides Property Key As Byte()
    parameters: []
    return:
      type: System.Byte[]
      description: "\n<p>The key for the <xref href=\"System.Security.Cryptography.AesCng\" data-throw-if-not-resolved=\"false\"></xref> algorithm.</p>\n"
  overridden: System.Security.Cryptography.SymmetricAlgorithm.Key
  modifiers.csharp:
  - public
  - override
  - get
  - set
  modifiers.vb:
  - Public
  - Overrides
- uid: System.Security.Cryptography.AesCng.KeySize
  commentId: P:System.Security.Cryptography.AesCng.KeySize
  id: KeySize
  parent: System.Security.Cryptography.AesCng
  langs:
  - csharp
  - vb
  name: KeySize
  nameWithType: AesCng.KeySize
  fullName: System.Security.Cryptography.AesCng.KeySize
  type: Property
  source:
    remote:
      path: src/System.Security.Cryptography.Cng/ref/System.Security.Cryptography.Cng.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: KeySize
    path: src/System.Security.Cryptography.Cng/ref/System.Security.Cryptography.Cng.cs
    startLine: 42
  assemblies:
  - System.Security.Cryptography.Cng
  namespace: System.Security.Cryptography
  summary: "\n<p>Gets or sets the size, in bits, of the secret key used by the <xref href=\"System.Security.Cryptography.AesCng\" data-throw-if-not-resolved=\"false\"></xref> algorithm.</p>\n"
  syntax:
    content: public override int KeySize { get; set; }
    content.vb: Public Overrides Property KeySize As Integer
    parameters: []
    return:
      type: System.Int32
      description: "\n<p>The size, in bits, of the secret key used by the <xref href=\"System.Security.Cryptography.AesCng\" data-throw-if-not-resolved=\"false\"></xref> algorithm.</p>\n"
  overridden: System.Security.Cryptography.SymmetricAlgorithm.KeySize
  modifiers.csharp:
  - public
  - override
  - get
  - set
  modifiers.vb:
  - Public
  - Overrides
- uid: System.Security.Cryptography.AesCng.CreateDecryptor
  commentId: M:System.Security.Cryptography.AesCng.CreateDecryptor
  id: CreateDecryptor
  parent: System.Security.Cryptography.AesCng
  langs:
  - csharp
  - vb
  name: CreateDecryptor()
  nameWithType: AesCng.CreateDecryptor()
  fullName: System.Security.Cryptography.AesCng.CreateDecryptor()
  type: Method
  source:
    remote:
      path: src/System.Security.Cryptography.Cng/ref/System.Security.Cryptography.Cng.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: CreateDecryptor
    path: src/System.Security.Cryptography.Cng/ref/System.Security.Cryptography.Cng.cs
    startLine: 43
  assemblies:
  - System.Security.Cryptography.Cng
  namespace: System.Security.Cryptography
  summary: "\n<p>Creates a symmetric AES decryptor object with the current key and initialization vector (<xref href=\"System.Security.Cryptography.SymmetricAlgorithm.IV\" data-throw-if-not-resolved=\"false\"></xref>).</p>\n"
  syntax:
    content: public override ICryptoTransform CreateDecryptor()
    content.vb: Public Overrides Function CreateDecryptor As ICryptoTransform
    return:
      type: System.Security.Cryptography.ICryptoTransform
      description: "\n<p>A symmetric AES decryptor object.</p>\n"
  overridden: System.Security.Cryptography.SymmetricAlgorithm.CreateDecryptor
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
- uid: System.Security.Cryptography.AesCng.CreateDecryptor(System.Byte[],System.Byte[])
  commentId: M:System.Security.Cryptography.AesCng.CreateDecryptor(System.Byte[],System.Byte[])
  id: CreateDecryptor(System.Byte[],System.Byte[])
  parent: System.Security.Cryptography.AesCng
  langs:
  - csharp
  - vb
  name: CreateDecryptor(Byte[], Byte[])
  nameWithType: AesCng.CreateDecryptor(Byte[], Byte[])
  fullName: System.Security.Cryptography.AesCng.CreateDecryptor(System.Byte[], System.Byte[])
  type: Method
  source:
    remote:
      path: src/System.Security.Cryptography.Cng/ref/System.Security.Cryptography.Cng.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: CreateDecryptor
    path: src/System.Security.Cryptography.Cng/ref/System.Security.Cryptography.Cng.cs
    startLine: 44
  assemblies:
  - System.Security.Cryptography.Cng
  namespace: System.Security.Cryptography
  summary: "\n<p>Creates a symmetric AES decryptor object with the specified key and initialization vector (IV).</p>\n"
  syntax:
    content: public override ICryptoTransform CreateDecryptor(byte[] rgbKey, byte[] rgbIV)
    content.vb: Public Overrides Function CreateDecryptor(rgbKey As Byte(), rgbIV As Byte()) As ICryptoTransform
    parameters:
    - id: rgbKey
      type: System.Byte[]
      description: "\n<p>The secret key to use for the AES algorithm. The key size must be 128, 192, or 256 bits.</p>\n"
    - id: rgbIV
      type: System.Byte[]
      description: "\n<p>The initialization vector to use for the AES algorithm.</p>\n"
    return:
      type: System.Security.Cryptography.ICryptoTransform
      description: "\n<p>A symmetric AES decryptor object.</p>\n"
  overridden: System.Security.Cryptography.SymmetricAlgorithm.CreateDecryptor(System.Byte[],System.Byte[])
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "\n<p>\n<em>rgbKey</em>  is <strong>null</strong>.</p>\n"
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "\n<p>\n<em>rgbKey</em>  is not a valid size for this algorithm.</p>\n<p>-or-</p>\n<p>\n<em>rgbIV</em> size does not match the block size for this algorithm.</p>\n"
  - type: System.Security.Cryptography.CryptographicException
    commentId: T:System.Security.Cryptography.CryptographicException
    description: "\n<p>\n<em>rgbKey</em> is a known weak key for this algorithm and cannot be used.</p>\n<p>-or-</p>\n<p>\n<em>rgbIV</em>  is <strong>null</strong>.</p>\n"
  nameWithType.vb: AesCng.CreateDecryptor(Byte(), Byte())
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
  fullName.vb: System.Security.Cryptography.AesCng.CreateDecryptor(System.Byte(), System.Byte())
  name.vb: CreateDecryptor(Byte(), Byte())
- uid: System.Security.Cryptography.AesCng.CreateEncryptor
  commentId: M:System.Security.Cryptography.AesCng.CreateEncryptor
  id: CreateEncryptor
  parent: System.Security.Cryptography.AesCng
  langs:
  - csharp
  - vb
  name: CreateEncryptor()
  nameWithType: AesCng.CreateEncryptor()
  fullName: System.Security.Cryptography.AesCng.CreateEncryptor()
  type: Method
  source:
    remote:
      path: src/System.Security.Cryptography.Cng/ref/System.Security.Cryptography.Cng.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: CreateEncryptor
    path: src/System.Security.Cryptography.Cng/ref/System.Security.Cryptography.Cng.cs
    startLine: 45
  assemblies:
  - System.Security.Cryptography.Cng
  namespace: System.Security.Cryptography
  summary: "\n<p>Creates a symmetric AES encryptor object using the current key and initialization vector (<xref href=\"System.Security.Cryptography.SymmetricAlgorithm.IV\" data-throw-if-not-resolved=\"false\"></xref>).</p>\n"
  syntax:
    content: public override ICryptoTransform CreateEncryptor()
    content.vb: Public Overrides Function CreateEncryptor As ICryptoTransform
    return:
      type: System.Security.Cryptography.ICryptoTransform
      description: "\n<p>A symmetric AES encryptor object.</p>\n"
  overridden: System.Security.Cryptography.SymmetricAlgorithm.CreateEncryptor
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
- uid: System.Security.Cryptography.AesCng.CreateEncryptor(System.Byte[],System.Byte[])
  commentId: M:System.Security.Cryptography.AesCng.CreateEncryptor(System.Byte[],System.Byte[])
  id: CreateEncryptor(System.Byte[],System.Byte[])
  parent: System.Security.Cryptography.AesCng
  langs:
  - csharp
  - vb
  name: CreateEncryptor(Byte[], Byte[])
  nameWithType: AesCng.CreateEncryptor(Byte[], Byte[])
  fullName: System.Security.Cryptography.AesCng.CreateEncryptor(System.Byte[], System.Byte[])
  type: Method
  source:
    remote:
      path: src/System.Security.Cryptography.Cng/ref/System.Security.Cryptography.Cng.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: CreateEncryptor
    path: src/System.Security.Cryptography.Cng/ref/System.Security.Cryptography.Cng.cs
    startLine: 46
  assemblies:
  - System.Security.Cryptography.Cng
  namespace: System.Security.Cryptography
  summary: "\n<p>Creates a symmetric AES encryptor object with the specified key and initialization vector (IV).</p>\n"
  syntax:
    content: public override ICryptoTransform CreateEncryptor(byte[] rgbKey, byte[] rgbIV)
    content.vb: Public Overrides Function CreateEncryptor(rgbKey As Byte(), rgbIV As Byte()) As ICryptoTransform
    parameters:
    - id: rgbKey
      type: System.Byte[]
      description: "\n<p>The secret key to use for the AES algorithm. The key size must be 128, 192, or 256 bits.</p>\n"
    - id: rgbIV
      type: System.Byte[]
      description: "\n<p>The initialization vector to use for the AES algorithm.</p>\n"
    return:
      type: System.Security.Cryptography.ICryptoTransform
      description: "\n<p>A symmetric AES encryptor object.</p>\n"
  overridden: System.Security.Cryptography.SymmetricAlgorithm.CreateEncryptor(System.Byte[],System.Byte[])
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "\n<p>\n<em>rgbKey</em>  is <strong>null</strong>.</p>\n"
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "\n<p>\n<em>rgbKey</em>  is not a valid size for this algorithm.</p>\n<p>-or-</p>\n<p>\n<em>rgbIV</em> size does not match the block size for this algorithm.</p>\n"
  - type: System.Security.Cryptography.CryptographicException
    commentId: T:System.Security.Cryptography.CryptographicException
    description: "\n<p>\n<em>rgbKey</em> is a known weak key for this algorithm and cannot be used.</p>\n<p>-or-</p>\n<p>\n<em>rgbIV</em>  is <strong>null</strong>.</p>\n"
  nameWithType.vb: AesCng.CreateEncryptor(Byte(), Byte())
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
  fullName.vb: System.Security.Cryptography.AesCng.CreateEncryptor(System.Byte(), System.Byte())
  name.vb: CreateEncryptor(Byte(), Byte())
- uid: System.Security.Cryptography.AesCng.Dispose(System.Boolean)
  commentId: M:System.Security.Cryptography.AesCng.Dispose(System.Boolean)
  id: Dispose(System.Boolean)
  parent: System.Security.Cryptography.AesCng
  langs:
  - csharp
  - vb
  name: Dispose(Boolean)
  nameWithType: AesCng.Dispose(Boolean)
  fullName: System.Security.Cryptography.AesCng.Dispose(System.Boolean)
  type: Method
  source:
    remote:
      path: src/System.Security.Cryptography.Cng/ref/System.Security.Cryptography.Cng.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: Dispose
    path: src/System.Security.Cryptography.Cng/ref/System.Security.Cryptography.Cng.cs
    startLine: 47
  assemblies:
  - System.Security.Cryptography.Cng
  namespace: System.Security.Cryptography
  syntax:
    content: protected override void Dispose(bool disposing)
    content.vb: Protected Overrides Sub Dispose(disposing As Boolean)
    parameters:
    - id: disposing
      type: System.Boolean
  overridden: System.Security.Cryptography.SymmetricAlgorithm.Dispose(System.Boolean)
  modifiers.csharp:
  - protected
  - override
  modifiers.vb:
  - Protected
  - Overrides
- uid: System.Security.Cryptography.AesCng.GenerateIV
  commentId: M:System.Security.Cryptography.AesCng.GenerateIV
  id: GenerateIV
  parent: System.Security.Cryptography.AesCng
  langs:
  - csharp
  - vb
  name: GenerateIV()
  nameWithType: AesCng.GenerateIV()
  fullName: System.Security.Cryptography.AesCng.GenerateIV()
  type: Method
  source:
    remote:
      path: src/System.Security.Cryptography.Cng/ref/System.Security.Cryptography.Cng.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: GenerateIV
    path: src/System.Security.Cryptography.Cng/ref/System.Security.Cryptography.Cng.cs
    startLine: 48
  assemblies:
  - System.Security.Cryptography.Cng
  namespace: System.Security.Cryptography
  summary: "\n<p>Generates a random initialization vector (IV) to use for the AES algorithm.</p>\n"
  syntax:
    content: public override void GenerateIV()
    content.vb: Public Overrides Sub GenerateIV
  overridden: System.Security.Cryptography.SymmetricAlgorithm.GenerateIV
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
- uid: System.Security.Cryptography.AesCng.GenerateKey
  commentId: M:System.Security.Cryptography.AesCng.GenerateKey
  id: GenerateKey
  parent: System.Security.Cryptography.AesCng
  langs:
  - csharp
  - vb
  name: GenerateKey()
  nameWithType: AesCng.GenerateKey()
  fullName: System.Security.Cryptography.AesCng.GenerateKey()
  type: Method
  source:
    remote:
      path: src/System.Security.Cryptography.Cng/ref/System.Security.Cryptography.Cng.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: GenerateKey
    path: src/System.Security.Cryptography.Cng/ref/System.Security.Cryptography.Cng.cs
    startLine: 49
  assemblies:
  - System.Security.Cryptography.Cng
  namespace: System.Security.Cryptography
  summary: "\n<p>Generates a random key to use for the AES algorithm.</p>\n"
  syntax:
    content: public override void GenerateKey()
    content.vb: Public Overrides Sub GenerateKey
  overridden: System.Security.Cryptography.SymmetricAlgorithm.GenerateKey
  seealso:
  - linkId: System.Security.Cryptography.AesCng.Key
    commentId: P:System.Security.Cryptography.AesCng.Key
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
references:
- uid: System.Security.Cryptography
  commentId: N:System.Security.Cryptography
  isExternal: false
  name: System.Security.Cryptography
  nameWithType: System.Security.Cryptography
  fullName: System.Security.Cryptography
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: false
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Security.Cryptography.SymmetricAlgorithm
  commentId: T:System.Security.Cryptography.SymmetricAlgorithm
  parent: System.Security.Cryptography
  isExternal: false
  name: SymmetricAlgorithm
  nameWithType: SymmetricAlgorithm
  fullName: System.Security.Cryptography.SymmetricAlgorithm
- uid: System.Security.Cryptography.Aes
  commentId: T:System.Security.Cryptography.Aes
  parent: System.Security.Cryptography
  isExternal: false
  name: Aes
  nameWithType: Aes
  fullName: System.Security.Cryptography.Aes
- uid: System.IDisposable
  commentId: T:System.IDisposable
  parent: System
  isExternal: false
  name: IDisposable
  nameWithType: IDisposable
  fullName: System.IDisposable
- uid: System.Security.Cryptography.Aes.Create
  commentId: M:System.Security.Cryptography.Aes.Create
  parent: System.Security.Cryptography.Aes
  isExternal: true
  name: Create()
  nameWithType: Aes.Create()
  fullName: System.Security.Cryptography.Aes.Create()
  spec.csharp:
  - uid: System.Security.Cryptography.Aes.Create
    name: Create
    nameWithType: Aes.Create
    fullName: System.Security.Cryptography.Aes.Create
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Security.Cryptography.Aes.Create
    name: Create
    nameWithType: Aes.Create
    fullName: System.Security.Cryptography.Aes.Create
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Security.Cryptography.Aes.Create(System.String)
  commentId: M:System.Security.Cryptography.Aes.Create(System.String)
  parent: System.Security.Cryptography.Aes
  isExternal: true
  name: Create(String)
  nameWithType: Aes.Create(String)
  fullName: System.Security.Cryptography.Aes.Create(System.String)
  spec.csharp:
  - uid: System.Security.Cryptography.Aes.Create(System.String)
    name: Create
    nameWithType: Aes.Create
    fullName: System.Security.Cryptography.Aes.Create
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Security.Cryptography.Aes.Create(System.String)
    name: Create
    nameWithType: Aes.Create
    fullName: System.Security.Cryptography.Aes.Create
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Security.Cryptography.SymmetricAlgorithm.BlockSizeValue
  commentId: F:System.Security.Cryptography.SymmetricAlgorithm.BlockSizeValue
  parent: System.Security.Cryptography.SymmetricAlgorithm
  isExternal: true
  name: BlockSizeValue
  nameWithType: SymmetricAlgorithm.BlockSizeValue
  fullName: System.Security.Cryptography.SymmetricAlgorithm.BlockSizeValue
- uid: System.Security.Cryptography.SymmetricAlgorithm.FeedbackSizeValue
  commentId: F:System.Security.Cryptography.SymmetricAlgorithm.FeedbackSizeValue
  parent: System.Security.Cryptography.SymmetricAlgorithm
  isExternal: true
  name: FeedbackSizeValue
  nameWithType: SymmetricAlgorithm.FeedbackSizeValue
  fullName: System.Security.Cryptography.SymmetricAlgorithm.FeedbackSizeValue
- uid: System.Security.Cryptography.SymmetricAlgorithm.IVValue
  commentId: F:System.Security.Cryptography.SymmetricAlgorithm.IVValue
  parent: System.Security.Cryptography.SymmetricAlgorithm
  isExternal: true
  name: IVValue
  nameWithType: SymmetricAlgorithm.IVValue
  fullName: System.Security.Cryptography.SymmetricAlgorithm.IVValue
- uid: System.Security.Cryptography.SymmetricAlgorithm.KeyValue
  commentId: F:System.Security.Cryptography.SymmetricAlgorithm.KeyValue
  parent: System.Security.Cryptography.SymmetricAlgorithm
  isExternal: true
  name: KeyValue
  nameWithType: SymmetricAlgorithm.KeyValue
  fullName: System.Security.Cryptography.SymmetricAlgorithm.KeyValue
- uid: System.Security.Cryptography.SymmetricAlgorithm.LegalBlockSizesValue
  commentId: F:System.Security.Cryptography.SymmetricAlgorithm.LegalBlockSizesValue
  parent: System.Security.Cryptography.SymmetricAlgorithm
  isExternal: true
  name: LegalBlockSizesValue
  nameWithType: SymmetricAlgorithm.LegalBlockSizesValue
  fullName: System.Security.Cryptography.SymmetricAlgorithm.LegalBlockSizesValue
- uid: System.Security.Cryptography.SymmetricAlgorithm.LegalKeySizesValue
  commentId: F:System.Security.Cryptography.SymmetricAlgorithm.LegalKeySizesValue
  parent: System.Security.Cryptography.SymmetricAlgorithm
  isExternal: true
  name: LegalKeySizesValue
  nameWithType: SymmetricAlgorithm.LegalKeySizesValue
  fullName: System.Security.Cryptography.SymmetricAlgorithm.LegalKeySizesValue
- uid: System.Security.Cryptography.SymmetricAlgorithm.KeySizeValue
  commentId: F:System.Security.Cryptography.SymmetricAlgorithm.KeySizeValue
  parent: System.Security.Cryptography.SymmetricAlgorithm
  isExternal: true
  name: KeySizeValue
  nameWithType: SymmetricAlgorithm.KeySizeValue
  fullName: System.Security.Cryptography.SymmetricAlgorithm.KeySizeValue
- uid: System.Security.Cryptography.SymmetricAlgorithm.ModeValue
  commentId: F:System.Security.Cryptography.SymmetricAlgorithm.ModeValue
  parent: System.Security.Cryptography.SymmetricAlgorithm
  isExternal: true
  name: ModeValue
  nameWithType: SymmetricAlgorithm.ModeValue
  fullName: System.Security.Cryptography.SymmetricAlgorithm.ModeValue
- uid: System.Security.Cryptography.SymmetricAlgorithm.PaddingValue
  commentId: F:System.Security.Cryptography.SymmetricAlgorithm.PaddingValue
  parent: System.Security.Cryptography.SymmetricAlgorithm
  isExternal: true
  name: PaddingValue
  nameWithType: SymmetricAlgorithm.PaddingValue
  fullName: System.Security.Cryptography.SymmetricAlgorithm.PaddingValue
- uid: System.Security.Cryptography.SymmetricAlgorithm.Dispose
  commentId: M:System.Security.Cryptography.SymmetricAlgorithm.Dispose
  parent: System.Security.Cryptography.SymmetricAlgorithm
  isExternal: true
  name: Dispose()
  nameWithType: SymmetricAlgorithm.Dispose()
  fullName: System.Security.Cryptography.SymmetricAlgorithm.Dispose()
  spec.csharp:
  - uid: System.Security.Cryptography.SymmetricAlgorithm.Dispose
    name: Dispose
    nameWithType: SymmetricAlgorithm.Dispose
    fullName: System.Security.Cryptography.SymmetricAlgorithm.Dispose
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Security.Cryptography.SymmetricAlgorithm.Dispose
    name: Dispose
    nameWithType: SymmetricAlgorithm.Dispose
    fullName: System.Security.Cryptography.SymmetricAlgorithm.Dispose
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Security.Cryptography.SymmetricAlgorithm.Clear
  commentId: M:System.Security.Cryptography.SymmetricAlgorithm.Clear
  parent: System.Security.Cryptography.SymmetricAlgorithm
  isExternal: true
  name: Clear()
  nameWithType: SymmetricAlgorithm.Clear()
  fullName: System.Security.Cryptography.SymmetricAlgorithm.Clear()
  spec.csharp:
  - uid: System.Security.Cryptography.SymmetricAlgorithm.Clear
    name: Clear
    nameWithType: SymmetricAlgorithm.Clear
    fullName: System.Security.Cryptography.SymmetricAlgorithm.Clear
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Security.Cryptography.SymmetricAlgorithm.Clear
    name: Clear
    nameWithType: SymmetricAlgorithm.Clear
    fullName: System.Security.Cryptography.SymmetricAlgorithm.Clear
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Security.Cryptography.SymmetricAlgorithm.ValidKeySize(System.Int32)
  commentId: M:System.Security.Cryptography.SymmetricAlgorithm.ValidKeySize(System.Int32)
  parent: System.Security.Cryptography.SymmetricAlgorithm
  isExternal: true
  name: ValidKeySize(Int32)
  nameWithType: SymmetricAlgorithm.ValidKeySize(Int32)
  fullName: System.Security.Cryptography.SymmetricAlgorithm.ValidKeySize(System.Int32)
  spec.csharp:
  - uid: System.Security.Cryptography.SymmetricAlgorithm.ValidKeySize(System.Int32)
    name: ValidKeySize
    nameWithType: SymmetricAlgorithm.ValidKeySize
    fullName: System.Security.Cryptography.SymmetricAlgorithm.ValidKeySize
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Security.Cryptography.SymmetricAlgorithm.ValidKeySize(System.Int32)
    name: ValidKeySize
    nameWithType: SymmetricAlgorithm.ValidKeySize
    fullName: System.Security.Cryptography.SymmetricAlgorithm.ValidKeySize
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Security.Cryptography.SymmetricAlgorithm.BlockSize
  commentId: P:System.Security.Cryptography.SymmetricAlgorithm.BlockSize
  parent: System.Security.Cryptography.SymmetricAlgorithm
  isExternal: true
  name: BlockSize
  nameWithType: SymmetricAlgorithm.BlockSize
  fullName: System.Security.Cryptography.SymmetricAlgorithm.BlockSize
- uid: System.Security.Cryptography.SymmetricAlgorithm.FeedbackSize
  commentId: P:System.Security.Cryptography.SymmetricAlgorithm.FeedbackSize
  parent: System.Security.Cryptography.SymmetricAlgorithm
  isExternal: true
  name: FeedbackSize
  nameWithType: SymmetricAlgorithm.FeedbackSize
  fullName: System.Security.Cryptography.SymmetricAlgorithm.FeedbackSize
- uid: System.Security.Cryptography.SymmetricAlgorithm.IV
  commentId: P:System.Security.Cryptography.SymmetricAlgorithm.IV
  parent: System.Security.Cryptography.SymmetricAlgorithm
  isExternal: true
  name: IV
  nameWithType: SymmetricAlgorithm.IV
  fullName: System.Security.Cryptography.SymmetricAlgorithm.IV
- uid: System.Security.Cryptography.SymmetricAlgorithm.LegalBlockSizes
  commentId: P:System.Security.Cryptography.SymmetricAlgorithm.LegalBlockSizes
  parent: System.Security.Cryptography.SymmetricAlgorithm
  isExternal: true
  name: LegalBlockSizes
  nameWithType: SymmetricAlgorithm.LegalBlockSizes
  fullName: System.Security.Cryptography.SymmetricAlgorithm.LegalBlockSizes
- uid: System.Security.Cryptography.SymmetricAlgorithm.LegalKeySizes
  commentId: P:System.Security.Cryptography.SymmetricAlgorithm.LegalKeySizes
  parent: System.Security.Cryptography.SymmetricAlgorithm
  isExternal: true
  name: LegalKeySizes
  nameWithType: SymmetricAlgorithm.LegalKeySizes
  fullName: System.Security.Cryptography.SymmetricAlgorithm.LegalKeySizes
- uid: System.Security.Cryptography.SymmetricAlgorithm.Mode
  commentId: P:System.Security.Cryptography.SymmetricAlgorithm.Mode
  parent: System.Security.Cryptography.SymmetricAlgorithm
  isExternal: true
  name: Mode
  nameWithType: SymmetricAlgorithm.Mode
  fullName: System.Security.Cryptography.SymmetricAlgorithm.Mode
- uid: System.Security.Cryptography.SymmetricAlgorithm.Padding
  commentId: P:System.Security.Cryptography.SymmetricAlgorithm.Padding
  parent: System.Security.Cryptography.SymmetricAlgorithm
  isExternal: true
  name: Padding
  nameWithType: SymmetricAlgorithm.Padding
  fullName: System.Security.Cryptography.SymmetricAlgorithm.Padding
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: false
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Security.Cryptography.CngProvider
  commentId: T:System.Security.Cryptography.CngProvider
  parent: System.Security.Cryptography
  isExternal: false
  name: CngProvider
  nameWithType: CngProvider
  fullName: System.Security.Cryptography.CngProvider
- uid: System.Security.Cryptography.CngKeyOpenOptions
  commentId: T:System.Security.Cryptography.CngKeyOpenOptions
  parent: System.Security.Cryptography
  isExternal: false
  name: CngKeyOpenOptions
  nameWithType: CngKeyOpenOptions
  fullName: System.Security.Cryptography.CngKeyOpenOptions
- uid: System.Security.Cryptography.SymmetricAlgorithm.Key
  commentId: P:System.Security.Cryptography.SymmetricAlgorithm.Key
  parent: System.Security.Cryptography.SymmetricAlgorithm
  isExternal: true
  name: Key
  nameWithType: SymmetricAlgorithm.Key
  fullName: System.Security.Cryptography.SymmetricAlgorithm.Key
- uid: System.Byte[]
  name: Byte[]
  nameWithType: Byte[]
  fullName: System.Byte[]
  nameWithType.vb: Byte()
  fullname.vb: System.Byte()
  name.vb: Byte()
  spec.csharp:
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: System.Byte
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  spec.vb:
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: System.Byte
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
- uid: System.Security.Cryptography.SymmetricAlgorithm.KeySize
  commentId: P:System.Security.Cryptography.SymmetricAlgorithm.KeySize
  parent: System.Security.Cryptography.SymmetricAlgorithm
  isExternal: true
  name: KeySize
  nameWithType: SymmetricAlgorithm.KeySize
  fullName: System.Security.Cryptography.SymmetricAlgorithm.KeySize
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: false
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Security.Cryptography.SymmetricAlgorithm.CreateDecryptor
  commentId: M:System.Security.Cryptography.SymmetricAlgorithm.CreateDecryptor
  parent: System.Security.Cryptography.SymmetricAlgorithm
  isExternal: true
  name: CreateDecryptor()
  nameWithType: SymmetricAlgorithm.CreateDecryptor()
  fullName: System.Security.Cryptography.SymmetricAlgorithm.CreateDecryptor()
  spec.csharp:
  - uid: System.Security.Cryptography.SymmetricAlgorithm.CreateDecryptor
    name: CreateDecryptor
    nameWithType: SymmetricAlgorithm.CreateDecryptor
    fullName: System.Security.Cryptography.SymmetricAlgorithm.CreateDecryptor
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Security.Cryptography.SymmetricAlgorithm.CreateDecryptor
    name: CreateDecryptor
    nameWithType: SymmetricAlgorithm.CreateDecryptor
    fullName: System.Security.Cryptography.SymmetricAlgorithm.CreateDecryptor
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Security.Cryptography.ICryptoTransform
  commentId: T:System.Security.Cryptography.ICryptoTransform
  parent: System.Security.Cryptography
  isExternal: false
  name: ICryptoTransform
  nameWithType: ICryptoTransform
  fullName: System.Security.Cryptography.ICryptoTransform
- uid: System.Security.Cryptography.SymmetricAlgorithm.CreateDecryptor(System.Byte[],System.Byte[])
  commentId: M:System.Security.Cryptography.SymmetricAlgorithm.CreateDecryptor(System.Byte[],System.Byte[])
  parent: System.Security.Cryptography.SymmetricAlgorithm
  isExternal: true
  name: CreateDecryptor(Byte[], Byte[])
  nameWithType: SymmetricAlgorithm.CreateDecryptor(Byte[], Byte[])
  fullName: System.Security.Cryptography.SymmetricAlgorithm.CreateDecryptor(System.Byte[], System.Byte[])
  nameWithType.vb: SymmetricAlgorithm.CreateDecryptor(Byte(), Byte())
  fullname.vb: System.Security.Cryptography.SymmetricAlgorithm.CreateDecryptor(System.Byte(), System.Byte())
  name.vb: CreateDecryptor(Byte(), Byte())
  spec.csharp:
  - uid: System.Security.Cryptography.SymmetricAlgorithm.CreateDecryptor(System.Byte[],System.Byte[])
    name: CreateDecryptor
    nameWithType: SymmetricAlgorithm.CreateDecryptor
    fullName: System.Security.Cryptography.SymmetricAlgorithm.CreateDecryptor
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: System.Byte
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: System.Byte
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Security.Cryptography.SymmetricAlgorithm.CreateDecryptor(System.Byte[],System.Byte[])
    name: CreateDecryptor
    nameWithType: SymmetricAlgorithm.CreateDecryptor
    fullName: System.Security.Cryptography.SymmetricAlgorithm.CreateDecryptor
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: System.Byte
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: System.Byte
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Security.Cryptography.SymmetricAlgorithm.CreateEncryptor
  commentId: M:System.Security.Cryptography.SymmetricAlgorithm.CreateEncryptor
  parent: System.Security.Cryptography.SymmetricAlgorithm
  isExternal: true
  name: CreateEncryptor()
  nameWithType: SymmetricAlgorithm.CreateEncryptor()
  fullName: System.Security.Cryptography.SymmetricAlgorithm.CreateEncryptor()
  spec.csharp:
  - uid: System.Security.Cryptography.SymmetricAlgorithm.CreateEncryptor
    name: CreateEncryptor
    nameWithType: SymmetricAlgorithm.CreateEncryptor
    fullName: System.Security.Cryptography.SymmetricAlgorithm.CreateEncryptor
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Security.Cryptography.SymmetricAlgorithm.CreateEncryptor
    name: CreateEncryptor
    nameWithType: SymmetricAlgorithm.CreateEncryptor
    fullName: System.Security.Cryptography.SymmetricAlgorithm.CreateEncryptor
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Security.Cryptography.SymmetricAlgorithm.CreateEncryptor(System.Byte[],System.Byte[])
  commentId: M:System.Security.Cryptography.SymmetricAlgorithm.CreateEncryptor(System.Byte[],System.Byte[])
  parent: System.Security.Cryptography.SymmetricAlgorithm
  isExternal: true
  name: CreateEncryptor(Byte[], Byte[])
  nameWithType: SymmetricAlgorithm.CreateEncryptor(Byte[], Byte[])
  fullName: System.Security.Cryptography.SymmetricAlgorithm.CreateEncryptor(System.Byte[], System.Byte[])
  nameWithType.vb: SymmetricAlgorithm.CreateEncryptor(Byte(), Byte())
  fullname.vb: System.Security.Cryptography.SymmetricAlgorithm.CreateEncryptor(System.Byte(), System.Byte())
  name.vb: CreateEncryptor(Byte(), Byte())
  spec.csharp:
  - uid: System.Security.Cryptography.SymmetricAlgorithm.CreateEncryptor(System.Byte[],System.Byte[])
    name: CreateEncryptor
    nameWithType: SymmetricAlgorithm.CreateEncryptor
    fullName: System.Security.Cryptography.SymmetricAlgorithm.CreateEncryptor
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: System.Byte
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: System.Byte
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Security.Cryptography.SymmetricAlgorithm.CreateEncryptor(System.Byte[],System.Byte[])
    name: CreateEncryptor
    nameWithType: SymmetricAlgorithm.CreateEncryptor
    fullName: System.Security.Cryptography.SymmetricAlgorithm.CreateEncryptor
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: System.Byte
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: System.Byte
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Security.Cryptography.SymmetricAlgorithm.Dispose(System.Boolean)
  commentId: M:System.Security.Cryptography.SymmetricAlgorithm.Dispose(System.Boolean)
  parent: System.Security.Cryptography.SymmetricAlgorithm
  isExternal: true
  name: Dispose(Boolean)
  nameWithType: SymmetricAlgorithm.Dispose(Boolean)
  fullName: System.Security.Cryptography.SymmetricAlgorithm.Dispose(System.Boolean)
  spec.csharp:
  - uid: System.Security.Cryptography.SymmetricAlgorithm.Dispose(System.Boolean)
    name: Dispose
    nameWithType: SymmetricAlgorithm.Dispose
    fullName: System.Security.Cryptography.SymmetricAlgorithm.Dispose
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Security.Cryptography.SymmetricAlgorithm.Dispose(System.Boolean)
    name: Dispose
    nameWithType: SymmetricAlgorithm.Dispose
    fullName: System.Security.Cryptography.SymmetricAlgorithm.Dispose
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: false
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Security.Cryptography.SymmetricAlgorithm.GenerateIV
  commentId: M:System.Security.Cryptography.SymmetricAlgorithm.GenerateIV
  parent: System.Security.Cryptography.SymmetricAlgorithm
  isExternal: true
  name: GenerateIV()
  nameWithType: SymmetricAlgorithm.GenerateIV()
  fullName: System.Security.Cryptography.SymmetricAlgorithm.GenerateIV()
  spec.csharp:
  - uid: System.Security.Cryptography.SymmetricAlgorithm.GenerateIV
    name: GenerateIV
    nameWithType: SymmetricAlgorithm.GenerateIV
    fullName: System.Security.Cryptography.SymmetricAlgorithm.GenerateIV
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Security.Cryptography.SymmetricAlgorithm.GenerateIV
    name: GenerateIV
    nameWithType: SymmetricAlgorithm.GenerateIV
    fullName: System.Security.Cryptography.SymmetricAlgorithm.GenerateIV
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Security.Cryptography.SymmetricAlgorithm.GenerateKey
  commentId: M:System.Security.Cryptography.SymmetricAlgorithm.GenerateKey
  parent: System.Security.Cryptography.SymmetricAlgorithm
  isExternal: true
  name: GenerateKey()
  nameWithType: SymmetricAlgorithm.GenerateKey()
  fullName: System.Security.Cryptography.SymmetricAlgorithm.GenerateKey()
  spec.csharp:
  - uid: System.Security.Cryptography.SymmetricAlgorithm.GenerateKey
    name: GenerateKey
    nameWithType: SymmetricAlgorithm.GenerateKey
    fullName: System.Security.Cryptography.SymmetricAlgorithm.GenerateKey
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Security.Cryptography.SymmetricAlgorithm.GenerateKey
    name: GenerateKey
    nameWithType: SymmetricAlgorithm.GenerateKey
    fullName: System.Security.Cryptography.SymmetricAlgorithm.GenerateKey
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.ArgumentNullException
  commentId: T:System.ArgumentNullException
  isExternal: false
  name: ArgumentNullException
  nameWithType: ArgumentNullException
  fullName: System.ArgumentNullException
- uid: System.PlatformNotSupportedException
  commentId: T:System.PlatformNotSupportedException
  isExternal: false
  name: PlatformNotSupportedException
  nameWithType: PlatformNotSupportedException
  fullName: System.PlatformNotSupportedException
- uid: System.Security.Cryptography.CryptographicException
  commentId: T:System.Security.Cryptography.CryptographicException
  isExternal: false
  name: CryptographicException
  nameWithType: CryptographicException
  fullName: System.Security.Cryptography.CryptographicException
- uid: System.ArgumentException
  commentId: T:System.ArgumentException
  parent: System
  isExternal: false
  name: ArgumentException
  nameWithType: ArgumentException
  fullName: System.ArgumentException
