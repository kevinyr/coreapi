### YamlMime:ManagedReference
items:
- uid: System.ServiceModel.IClientChannel
  commentId: T:System.ServiceModel.IClientChannel
  id: IClientChannel
  parent: System.ServiceModel
  children:
  - System.ServiceModel.IClientChannel.AllowInitializationUI
  - System.ServiceModel.IClientChannel.BeginDisplayInitializationUI(System.AsyncCallback,System.Object)
  - System.ServiceModel.IClientChannel.DidInteractiveInitialization
  - System.ServiceModel.IClientChannel.DisplayInitializationUI
  - System.ServiceModel.IClientChannel.EndDisplayInitializationUI(System.IAsyncResult)
  - System.ServiceModel.IClientChannel.UnknownMessageReceived
  - System.ServiceModel.IClientChannel.Via
  langs:
  - csharp
  - vb
  name: IClientChannel
  nameWithType: IClientChannel
  fullName: System.ServiceModel.IClientChannel
  type: Interface
  source:
    remote:
      path: src/System.ServiceModel.Primitives/ref/System.ServiceModel.Primitives.cs
      branch: master
      repo: https://github.com/dotnet/wcf.git
    id: IClientChannel
    path: src/System.ServiceModel.Primitives/ref/System.ServiceModel.Primitives.cs
    startLine: 314
  assemblies:
  - System.ServiceModel.Primitives
  namespace: System.ServiceModel
  summary: "\n<p>Defines the behavior of outbound request and request/reply channels used by client applications.</p>\n"
  syntax:
    content: 'public interface IClientChannel : IDisposable, IContextChannel, IChannel, ICommunicationObject, IExtensibleObject<IContextChannel>'
    content.vb: >-
      Public Interface IClientChannel
          Inherits IDisposable, IChannel, ICommunicationObject, IContextChannel, IExtensibleObject(Of IContextChannel)
  inheritedMembers:
  - System.IDisposable.Dispose
  - System.ServiceModel.IContextChannel.AllowOutputBatching
  - System.ServiceModel.IContextChannel.InputSession
  - System.ServiceModel.IContextChannel.LocalAddress
  - System.ServiceModel.IContextChannel.OperationTimeout
  - System.ServiceModel.IContextChannel.OutputSession
  - System.ServiceModel.IContextChannel.RemoteAddress
  - System.ServiceModel.IContextChannel.SessionId
  - System.ServiceModel.Channels.IChannel.GetProperty``1
  - System.ServiceModel.ICommunicationObject.State
  - System.ServiceModel.ICommunicationObject.Closed
  - System.ServiceModel.ICommunicationObject.Closing
  - System.ServiceModel.ICommunicationObject.Faulted
  - System.ServiceModel.ICommunicationObject.Opened
  - System.ServiceModel.ICommunicationObject.Opening
  - System.ServiceModel.ICommunicationObject.Abort
  - System.ServiceModel.ICommunicationObject.BeginClose(System.AsyncCallback,System.Object)
  - System.ServiceModel.ICommunicationObject.BeginClose(System.TimeSpan,System.AsyncCallback,System.Object)
  - System.ServiceModel.ICommunicationObject.BeginOpen(System.AsyncCallback,System.Object)
  - System.ServiceModel.ICommunicationObject.BeginOpen(System.TimeSpan,System.AsyncCallback,System.Object)
  - System.ServiceModel.ICommunicationObject.Close
  - System.ServiceModel.ICommunicationObject.Close(System.TimeSpan)
  - System.ServiceModel.ICommunicationObject.EndClose(System.IAsyncResult)
  - System.ServiceModel.ICommunicationObject.EndOpen(System.IAsyncResult)
  - System.ServiceModel.ICommunicationObject.Open
  - System.ServiceModel.ICommunicationObject.Open(System.TimeSpan)
  - System.ServiceModel.IExtensibleObject{System.ServiceModel.IContextChannel}.Extensions
  modifiers.csharp:
  - public
  - interface
  modifiers.vb:
  - Public
  - Interface
- uid: System.ServiceModel.IClientChannel.AllowInitializationUI
  commentId: P:System.ServiceModel.IClientChannel.AllowInitializationUI
  id: AllowInitializationUI
  parent: System.ServiceModel.IClientChannel
  langs:
  - csharp
  - vb
  name: AllowInitializationUI
  nameWithType: IClientChannel.AllowInitializationUI
  fullName: System.ServiceModel.IClientChannel.AllowInitializationUI
  type: Property
  source:
    remote:
      path: src/System.ServiceModel.Primitives/ref/System.ServiceModel.Primitives.cs
      branch: master
      repo: https://github.com/dotnet/wcf.git
    id: AllowInitializationUI
    path: src/System.ServiceModel.Primitives/ref/System.ServiceModel.Primitives.cs
    startLine: 316
  assemblies:
  - System.ServiceModel.Primitives
  namespace: System.ServiceModel
  summary: "\n<p>Gets or sets a value indicating whether <xref href=\"System.ServiceModel.IClientChannel.DisplayInitializationUI\" data-throw-if-not-resolved=\"false\"></xref> attempts to call the <xref href=\"System.ServiceModel.Dispatcher.IInteractiveChannelInitializer\" data-throw-if-not-resolved=\"false\"></xref> objects in the <xref href=\"System.ServiceModel.Dispatcher.ClientRuntime.InteractiveChannelInitializers\" data-throw-if-not-resolved=\"false\"></xref> property or throws if that collection is not empty. </p>\n"
  syntax:
    content: bool AllowInitializationUI { get; set; }
    content.vb: Property AllowInitializationUI As Boolean
    parameters: []
    return:
      type: System.Boolean
      description: "\n<p>\n<strong>true</strong> if Windows Communication Foundation (WCF) is permitted to invoke interactive channel initializers; otherwise, <strong>false</strong>. </p>\n"
  modifiers.csharp:
  - get
  - set
- uid: System.ServiceModel.IClientChannel.DidInteractiveInitialization
  commentId: P:System.ServiceModel.IClientChannel.DidInteractiveInitialization
  id: DidInteractiveInitialization
  parent: System.ServiceModel.IClientChannel
  langs:
  - csharp
  - vb
  name: DidInteractiveInitialization
  nameWithType: IClientChannel.DidInteractiveInitialization
  fullName: System.ServiceModel.IClientChannel.DidInteractiveInitialization
  type: Property
  source:
    remote:
      path: src/System.ServiceModel.Primitives/ref/System.ServiceModel.Primitives.cs
      branch: master
      repo: https://github.com/dotnet/wcf.git
    id: DidInteractiveInitialization
    path: src/System.ServiceModel.Primitives/ref/System.ServiceModel.Primitives.cs
    startLine: 317
  assemblies:
  - System.ServiceModel.Primitives
  namespace: System.ServiceModel
  summary: "\n<p>Gets a value indicating whether a call was done to a user interface to obtain credential information. </p>\n"
  syntax:
    content: bool DidInteractiveInitialization { get; }
    content.vb: ReadOnly Property DidInteractiveInitialization As Boolean
    parameters: []
    return:
      type: System.Boolean
      description: "\n<p>\n<strong>true</strong> if the <xref href=\"System.ServiceModel.IClientChannel.DisplayInitializationUI\" data-throw-if-not-resolved=\"false\"></xref> method was called (or the <xref href=\"System.ServiceModel.IClientChannel.BeginDisplayInitializationUI(System.AsyncCallback,System.Object)\" data-throw-if-not-resolved=\"false\"></xref> and <xref href=\"System.ServiceModel.IClientChannel.EndDisplayInitializationUI(System.IAsyncResult)\" data-throw-if-not-resolved=\"false\"></xref> methods; otherwise, <strong>false</strong>.</p>\n"
  modifiers.csharp:
  - get
  modifiers.vb:
  - ReadOnly
- uid: System.ServiceModel.IClientChannel.Via
  commentId: P:System.ServiceModel.IClientChannel.Via
  id: Via
  parent: System.ServiceModel.IClientChannel
  langs:
  - csharp
  - vb
  name: Via
  nameWithType: IClientChannel.Via
  fullName: System.ServiceModel.IClientChannel.Via
  type: Property
  source:
    remote:
      path: src/System.ServiceModel.Primitives/ref/System.ServiceModel.Primitives.cs
      branch: master
      repo: https://github.com/dotnet/wcf.git
    id: Via
    path: src/System.ServiceModel.Primitives/ref/System.ServiceModel.Primitives.cs
    startLine: 318
  assemblies:
  - System.ServiceModel.Primitives
  namespace: System.ServiceModel
  summary: "\n<p>Gets the URI that contains the transport address to which messages are sent on the client channel.</p>\n"
  syntax:
    content: Uri Via { get; }
    content.vb: ReadOnly Property Via As Uri
    parameters: []
    return:
      type: System.Uri
      description: "\n<p>The <xref href=\"System.Uri\" data-throw-if-not-resolved=\"false\"></xref> that contains the transport address to which messages are sent on the channel.</p>\n"
  modifiers.csharp:
  - get
  modifiers.vb:
  - ReadOnly
- uid: System.ServiceModel.IClientChannel.UnknownMessageReceived
  commentId: E:System.ServiceModel.IClientChannel.UnknownMessageReceived
  id: UnknownMessageReceived
  parent: System.ServiceModel.IClientChannel
  langs:
  - csharp
  - vb
  name: UnknownMessageReceived
  nameWithType: IClientChannel.UnknownMessageReceived
  fullName: System.ServiceModel.IClientChannel.UnknownMessageReceived
  type: Event
  source:
    remote:
      path: src/System.ServiceModel.Primitives/ref/System.ServiceModel.Primitives.cs
      branch: master
      repo: https://github.com/dotnet/wcf.git
    id: UnknownMessageReceived
    path: src/System.ServiceModel.Primitives/ref/System.ServiceModel.Primitives.cs
    startLine: 319
  assemblies:
  - System.ServiceModel.Primitives
  namespace: System.ServiceModel
  summary: "\n<p>This is a reserved event. </p>\n"
  syntax:
    content: event EventHandler<UnknownMessageReceivedEventArgs> UnknownMessageReceived
    content.vb: Event UnknownMessageReceived As EventHandler(Of UnknownMessageReceivedEventArgs)
    return:
      type: System.EventHandler{System.ServiceModel.UnknownMessageReceivedEventArgs}
- uid: System.ServiceModel.IClientChannel.BeginDisplayInitializationUI(System.AsyncCallback,System.Object)
  commentId: M:System.ServiceModel.IClientChannel.BeginDisplayInitializationUI(System.AsyncCallback,System.Object)
  id: BeginDisplayInitializationUI(System.AsyncCallback,System.Object)
  parent: System.ServiceModel.IClientChannel
  langs:
  - csharp
  - vb
  name: BeginDisplayInitializationUI(AsyncCallback, Object)
  nameWithType: IClientChannel.BeginDisplayInitializationUI(AsyncCallback, Object)
  fullName: System.ServiceModel.IClientChannel.BeginDisplayInitializationUI(System.AsyncCallback, System.Object)
  type: Method
  source:
    remote:
      path: src/System.ServiceModel.Primitives/ref/System.ServiceModel.Primitives.cs
      branch: master
      repo: https://github.com/dotnet/wcf.git
    id: BeginDisplayInitializationUI
    path: src/System.ServiceModel.Primitives/ref/System.ServiceModel.Primitives.cs
    startLine: 320
  assemblies:
  - System.ServiceModel.Primitives
  namespace: System.ServiceModel
  summary: "\n<p>An asynchronous call to begin using a user interface to obtain credential information.</p>\n"
  syntax:
    content: IAsyncResult BeginDisplayInitializationUI(AsyncCallback callback, object state)
    content.vb: Function BeginDisplayInitializationUI(callback As AsyncCallback, state As Object) As IAsyncResult
    parameters:
    - id: callback
      type: System.AsyncCallback
      description: "\n<p>The method that is called when this method completes.</p>\n"
    - id: state
      type: System.Object
      description: "\n<p>Information about the state of the channel.</p>\n"
    return:
      type: System.IAsyncResult
      description: "\n<p>The <xref href=\"System.IAsyncResult\" data-throw-if-not-resolved=\"false\"></xref> to use to call back when processing has completed.</p>\n"
- uid: System.ServiceModel.IClientChannel.DisplayInitializationUI
  commentId: M:System.ServiceModel.IClientChannel.DisplayInitializationUI
  id: DisplayInitializationUI
  parent: System.ServiceModel.IClientChannel
  langs:
  - csharp
  - vb
  name: DisplayInitializationUI()
  nameWithType: IClientChannel.DisplayInitializationUI()
  fullName: System.ServiceModel.IClientChannel.DisplayInitializationUI()
  type: Method
  source:
    remote:
      path: src/System.ServiceModel.Primitives/ref/System.ServiceModel.Primitives.cs
      branch: master
      repo: https://github.com/dotnet/wcf.git
    id: DisplayInitializationUI
    path: src/System.ServiceModel.Primitives/ref/System.ServiceModel.Primitives.cs
    startLine: 321
  assemblies:
  - System.ServiceModel.Primitives
  namespace: System.ServiceModel
  summary: "\n<p>A call to a user interface to obtain credential information.</p>\n"
  syntax:
    content: void DisplayInitializationUI()
    content.vb: Sub DisplayInitializationUI
- uid: System.ServiceModel.IClientChannel.EndDisplayInitializationUI(System.IAsyncResult)
  commentId: M:System.ServiceModel.IClientChannel.EndDisplayInitializationUI(System.IAsyncResult)
  id: EndDisplayInitializationUI(System.IAsyncResult)
  parent: System.ServiceModel.IClientChannel
  langs:
  - csharp
  - vb
  name: EndDisplayInitializationUI(IAsyncResult)
  nameWithType: IClientChannel.EndDisplayInitializationUI(IAsyncResult)
  fullName: System.ServiceModel.IClientChannel.EndDisplayInitializationUI(System.IAsyncResult)
  type: Method
  source:
    remote:
      path: src/System.ServiceModel.Primitives/ref/System.ServiceModel.Primitives.cs
      branch: master
      repo: https://github.com/dotnet/wcf.git
    id: EndDisplayInitializationUI
    path: src/System.ServiceModel.Primitives/ref/System.ServiceModel.Primitives.cs
    startLine: 322
  assemblies:
  - System.ServiceModel.Primitives
  namespace: System.ServiceModel
  summary: "\n<p>Called when the call to <xref href=\"System.ServiceModel.IClientChannel.BeginDisplayInitializationUI(System.AsyncCallback,System.Object)\" data-throw-if-not-resolved=\"false\"></xref> has finished.</p>\n"
  syntax:
    content: void EndDisplayInitializationUI(IAsyncResult result)
    content.vb: Sub EndDisplayInitializationUI(result As IAsyncResult)
    parameters:
    - id: result
      type: System.IAsyncResult
      description: "\n<p>The <xref href=\"System.IAsyncResult\" data-throw-if-not-resolved=\"false\"></xref>.</p>\n"
references:
- uid: System.ServiceModel
  commentId: N:System.ServiceModel
  isExternal: false
  name: System.ServiceModel
  nameWithType: System.ServiceModel
  fullName: System.ServiceModel
- uid: System.IDisposable.Dispose
  commentId: M:System.IDisposable.Dispose
  parent: System.IDisposable
  isExternal: false
  name: Dispose()
  nameWithType: IDisposable.Dispose()
  fullName: System.IDisposable.Dispose()
  spec.csharp:
  - uid: System.IDisposable.Dispose
    name: Dispose
    nameWithType: IDisposable.Dispose
    fullName: System.IDisposable.Dispose
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.IDisposable.Dispose
    name: Dispose
    nameWithType: IDisposable.Dispose
    fullName: System.IDisposable.Dispose
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.ServiceModel.IContextChannel.AllowOutputBatching
  commentId: P:System.ServiceModel.IContextChannel.AllowOutputBatching
  parent: System.ServiceModel.IContextChannel
  isExternal: false
  name: AllowOutputBatching
  nameWithType: IContextChannel.AllowOutputBatching
  fullName: System.ServiceModel.IContextChannel.AllowOutputBatching
- uid: System.ServiceModel.IContextChannel.InputSession
  commentId: P:System.ServiceModel.IContextChannel.InputSession
  parent: System.ServiceModel.IContextChannel
  isExternal: false
  name: InputSession
  nameWithType: IContextChannel.InputSession
  fullName: System.ServiceModel.IContextChannel.InputSession
- uid: System.ServiceModel.IContextChannel.LocalAddress
  commentId: P:System.ServiceModel.IContextChannel.LocalAddress
  parent: System.ServiceModel.IContextChannel
  isExternal: false
  name: LocalAddress
  nameWithType: IContextChannel.LocalAddress
  fullName: System.ServiceModel.IContextChannel.LocalAddress
- uid: System.ServiceModel.IContextChannel.OperationTimeout
  commentId: P:System.ServiceModel.IContextChannel.OperationTimeout
  parent: System.ServiceModel.IContextChannel
  isExternal: false
  name: OperationTimeout
  nameWithType: IContextChannel.OperationTimeout
  fullName: System.ServiceModel.IContextChannel.OperationTimeout
- uid: System.ServiceModel.IContextChannel.OutputSession
  commentId: P:System.ServiceModel.IContextChannel.OutputSession
  parent: System.ServiceModel.IContextChannel
  isExternal: false
  name: OutputSession
  nameWithType: IContextChannel.OutputSession
  fullName: System.ServiceModel.IContextChannel.OutputSession
- uid: System.ServiceModel.IContextChannel.RemoteAddress
  commentId: P:System.ServiceModel.IContextChannel.RemoteAddress
  parent: System.ServiceModel.IContextChannel
  isExternal: false
  name: RemoteAddress
  nameWithType: IContextChannel.RemoteAddress
  fullName: System.ServiceModel.IContextChannel.RemoteAddress
- uid: System.ServiceModel.IContextChannel.SessionId
  commentId: P:System.ServiceModel.IContextChannel.SessionId
  parent: System.ServiceModel.IContextChannel
  isExternal: false
  name: SessionId
  nameWithType: IContextChannel.SessionId
  fullName: System.ServiceModel.IContextChannel.SessionId
- uid: System.ServiceModel.Channels.IChannel.GetProperty``1
  commentId: M:System.ServiceModel.Channels.IChannel.GetProperty``1
  parent: System.ServiceModel.Channels.IChannel
  definition: System.ServiceModel.Channels.IChannel.GetProperty``1
  isExternal: false
  name: GetProperty<T>()
  nameWithType: IChannel.GetProperty<T>()
  fullName: System.ServiceModel.Channels.IChannel.GetProperty<T>()
  nameWithType.vb: IChannel.GetProperty(Of T)()
  fullname.vb: System.ServiceModel.Channels.IChannel.GetProperty(Of T)()
  name.vb: GetProperty(Of T)()
  spec.csharp:
  - uid: System.ServiceModel.Channels.IChannel.GetProperty``1
    name: GetProperty<T>
    nameWithType: IChannel.GetProperty<T>
    fullName: System.ServiceModel.Channels.IChannel.GetProperty<T>
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.ServiceModel.Channels.IChannel.GetProperty``1
    name: GetProperty(Of T)
    nameWithType: IChannel.GetProperty(Of T)
    fullName: System.ServiceModel.Channels.IChannel.GetProperty(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.ServiceModel.ICommunicationObject.State
  commentId: P:System.ServiceModel.ICommunicationObject.State
  parent: System.ServiceModel.ICommunicationObject
  isExternal: false
  name: State
  nameWithType: ICommunicationObject.State
  fullName: System.ServiceModel.ICommunicationObject.State
- uid: System.ServiceModel.ICommunicationObject.Closed
  commentId: E:System.ServiceModel.ICommunicationObject.Closed
  parent: System.ServiceModel.ICommunicationObject
  isExternal: false
  name: Closed
  nameWithType: ICommunicationObject.Closed
  fullName: System.ServiceModel.ICommunicationObject.Closed
- uid: System.ServiceModel.ICommunicationObject.Closing
  commentId: E:System.ServiceModel.ICommunicationObject.Closing
  parent: System.ServiceModel.ICommunicationObject
  isExternal: false
  name: Closing
  nameWithType: ICommunicationObject.Closing
  fullName: System.ServiceModel.ICommunicationObject.Closing
- uid: System.ServiceModel.ICommunicationObject.Faulted
  commentId: E:System.ServiceModel.ICommunicationObject.Faulted
  parent: System.ServiceModel.ICommunicationObject
  isExternal: false
  name: Faulted
  nameWithType: ICommunicationObject.Faulted
  fullName: System.ServiceModel.ICommunicationObject.Faulted
- uid: System.ServiceModel.ICommunicationObject.Opened
  commentId: E:System.ServiceModel.ICommunicationObject.Opened
  parent: System.ServiceModel.ICommunicationObject
  isExternal: false
  name: Opened
  nameWithType: ICommunicationObject.Opened
  fullName: System.ServiceModel.ICommunicationObject.Opened
- uid: System.ServiceModel.ICommunicationObject.Opening
  commentId: E:System.ServiceModel.ICommunicationObject.Opening
  parent: System.ServiceModel.ICommunicationObject
  isExternal: false
  name: Opening
  nameWithType: ICommunicationObject.Opening
  fullName: System.ServiceModel.ICommunicationObject.Opening
- uid: System.ServiceModel.ICommunicationObject.Abort
  commentId: M:System.ServiceModel.ICommunicationObject.Abort
  parent: System.ServiceModel.ICommunicationObject
  isExternal: false
  name: Abort()
  nameWithType: ICommunicationObject.Abort()
  fullName: System.ServiceModel.ICommunicationObject.Abort()
  spec.csharp:
  - uid: System.ServiceModel.ICommunicationObject.Abort
    name: Abort
    nameWithType: ICommunicationObject.Abort
    fullName: System.ServiceModel.ICommunicationObject.Abort
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.ServiceModel.ICommunicationObject.Abort
    name: Abort
    nameWithType: ICommunicationObject.Abort
    fullName: System.ServiceModel.ICommunicationObject.Abort
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.ServiceModel.ICommunicationObject.BeginClose(System.AsyncCallback,System.Object)
  commentId: M:System.ServiceModel.ICommunicationObject.BeginClose(System.AsyncCallback,System.Object)
  parent: System.ServiceModel.ICommunicationObject
  isExternal: true
  name: BeginClose(AsyncCallback, Object)
  nameWithType: ICommunicationObject.BeginClose(AsyncCallback, Object)
  fullName: System.ServiceModel.ICommunicationObject.BeginClose(System.AsyncCallback, System.Object)
  spec.csharp:
  - uid: System.ServiceModel.ICommunicationObject.BeginClose(System.AsyncCallback,System.Object)
    name: BeginClose
    nameWithType: ICommunicationObject.BeginClose
    fullName: System.ServiceModel.ICommunicationObject.BeginClose
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.AsyncCallback
    name: AsyncCallback
    nameWithType: AsyncCallback
    fullName: System.AsyncCallback
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.ServiceModel.ICommunicationObject.BeginClose(System.AsyncCallback,System.Object)
    name: BeginClose
    nameWithType: ICommunicationObject.BeginClose
    fullName: System.ServiceModel.ICommunicationObject.BeginClose
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.AsyncCallback
    name: AsyncCallback
    nameWithType: AsyncCallback
    fullName: System.AsyncCallback
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.ServiceModel.ICommunicationObject.BeginClose(System.TimeSpan,System.AsyncCallback,System.Object)
  commentId: M:System.ServiceModel.ICommunicationObject.BeginClose(System.TimeSpan,System.AsyncCallback,System.Object)
  parent: System.ServiceModel.ICommunicationObject
  isExternal: true
  name: BeginClose(TimeSpan, AsyncCallback, Object)
  nameWithType: ICommunicationObject.BeginClose(TimeSpan, AsyncCallback, Object)
  fullName: System.ServiceModel.ICommunicationObject.BeginClose(System.TimeSpan, System.AsyncCallback, System.Object)
  spec.csharp:
  - uid: System.ServiceModel.ICommunicationObject.BeginClose(System.TimeSpan,System.AsyncCallback,System.Object)
    name: BeginClose
    nameWithType: ICommunicationObject.BeginClose
    fullName: System.ServiceModel.ICommunicationObject.BeginClose
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.TimeSpan
    name: TimeSpan
    nameWithType: TimeSpan
    fullName: System.TimeSpan
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.AsyncCallback
    name: AsyncCallback
    nameWithType: AsyncCallback
    fullName: System.AsyncCallback
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.ServiceModel.ICommunicationObject.BeginClose(System.TimeSpan,System.AsyncCallback,System.Object)
    name: BeginClose
    nameWithType: ICommunicationObject.BeginClose
    fullName: System.ServiceModel.ICommunicationObject.BeginClose
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.TimeSpan
    name: TimeSpan
    nameWithType: TimeSpan
    fullName: System.TimeSpan
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.AsyncCallback
    name: AsyncCallback
    nameWithType: AsyncCallback
    fullName: System.AsyncCallback
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.ServiceModel.ICommunicationObject.BeginOpen(System.AsyncCallback,System.Object)
  commentId: M:System.ServiceModel.ICommunicationObject.BeginOpen(System.AsyncCallback,System.Object)
  parent: System.ServiceModel.ICommunicationObject
  isExternal: true
  name: BeginOpen(AsyncCallback, Object)
  nameWithType: ICommunicationObject.BeginOpen(AsyncCallback, Object)
  fullName: System.ServiceModel.ICommunicationObject.BeginOpen(System.AsyncCallback, System.Object)
  spec.csharp:
  - uid: System.ServiceModel.ICommunicationObject.BeginOpen(System.AsyncCallback,System.Object)
    name: BeginOpen
    nameWithType: ICommunicationObject.BeginOpen
    fullName: System.ServiceModel.ICommunicationObject.BeginOpen
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.AsyncCallback
    name: AsyncCallback
    nameWithType: AsyncCallback
    fullName: System.AsyncCallback
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.ServiceModel.ICommunicationObject.BeginOpen(System.AsyncCallback,System.Object)
    name: BeginOpen
    nameWithType: ICommunicationObject.BeginOpen
    fullName: System.ServiceModel.ICommunicationObject.BeginOpen
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.AsyncCallback
    name: AsyncCallback
    nameWithType: AsyncCallback
    fullName: System.AsyncCallback
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.ServiceModel.ICommunicationObject.BeginOpen(System.TimeSpan,System.AsyncCallback,System.Object)
  commentId: M:System.ServiceModel.ICommunicationObject.BeginOpen(System.TimeSpan,System.AsyncCallback,System.Object)
  parent: System.ServiceModel.ICommunicationObject
  isExternal: true
  name: BeginOpen(TimeSpan, AsyncCallback, Object)
  nameWithType: ICommunicationObject.BeginOpen(TimeSpan, AsyncCallback, Object)
  fullName: System.ServiceModel.ICommunicationObject.BeginOpen(System.TimeSpan, System.AsyncCallback, System.Object)
  spec.csharp:
  - uid: System.ServiceModel.ICommunicationObject.BeginOpen(System.TimeSpan,System.AsyncCallback,System.Object)
    name: BeginOpen
    nameWithType: ICommunicationObject.BeginOpen
    fullName: System.ServiceModel.ICommunicationObject.BeginOpen
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.TimeSpan
    name: TimeSpan
    nameWithType: TimeSpan
    fullName: System.TimeSpan
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.AsyncCallback
    name: AsyncCallback
    nameWithType: AsyncCallback
    fullName: System.AsyncCallback
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.ServiceModel.ICommunicationObject.BeginOpen(System.TimeSpan,System.AsyncCallback,System.Object)
    name: BeginOpen
    nameWithType: ICommunicationObject.BeginOpen
    fullName: System.ServiceModel.ICommunicationObject.BeginOpen
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.TimeSpan
    name: TimeSpan
    nameWithType: TimeSpan
    fullName: System.TimeSpan
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.AsyncCallback
    name: AsyncCallback
    nameWithType: AsyncCallback
    fullName: System.AsyncCallback
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.ServiceModel.ICommunicationObject.Close
  commentId: M:System.ServiceModel.ICommunicationObject.Close
  parent: System.ServiceModel.ICommunicationObject
  isExternal: false
  name: Close()
  nameWithType: ICommunicationObject.Close()
  fullName: System.ServiceModel.ICommunicationObject.Close()
  spec.csharp:
  - uid: System.ServiceModel.ICommunicationObject.Close
    name: Close
    nameWithType: ICommunicationObject.Close
    fullName: System.ServiceModel.ICommunicationObject.Close
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.ServiceModel.ICommunicationObject.Close
    name: Close
    nameWithType: ICommunicationObject.Close
    fullName: System.ServiceModel.ICommunicationObject.Close
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.ServiceModel.ICommunicationObject.Close(System.TimeSpan)
  commentId: M:System.ServiceModel.ICommunicationObject.Close(System.TimeSpan)
  parent: System.ServiceModel.ICommunicationObject
  isExternal: true
  name: Close(TimeSpan)
  nameWithType: ICommunicationObject.Close(TimeSpan)
  fullName: System.ServiceModel.ICommunicationObject.Close(System.TimeSpan)
  spec.csharp:
  - uid: System.ServiceModel.ICommunicationObject.Close(System.TimeSpan)
    name: Close
    nameWithType: ICommunicationObject.Close
    fullName: System.ServiceModel.ICommunicationObject.Close
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.TimeSpan
    name: TimeSpan
    nameWithType: TimeSpan
    fullName: System.TimeSpan
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.ServiceModel.ICommunicationObject.Close(System.TimeSpan)
    name: Close
    nameWithType: ICommunicationObject.Close
    fullName: System.ServiceModel.ICommunicationObject.Close
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.TimeSpan
    name: TimeSpan
    nameWithType: TimeSpan
    fullName: System.TimeSpan
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.ServiceModel.ICommunicationObject.EndClose(System.IAsyncResult)
  commentId: M:System.ServiceModel.ICommunicationObject.EndClose(System.IAsyncResult)
  parent: System.ServiceModel.ICommunicationObject
  isExternal: true
  name: EndClose(IAsyncResult)
  nameWithType: ICommunicationObject.EndClose(IAsyncResult)
  fullName: System.ServiceModel.ICommunicationObject.EndClose(System.IAsyncResult)
  spec.csharp:
  - uid: System.ServiceModel.ICommunicationObject.EndClose(System.IAsyncResult)
    name: EndClose
    nameWithType: ICommunicationObject.EndClose
    fullName: System.ServiceModel.ICommunicationObject.EndClose
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.IAsyncResult
    name: IAsyncResult
    nameWithType: IAsyncResult
    fullName: System.IAsyncResult
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.ServiceModel.ICommunicationObject.EndClose(System.IAsyncResult)
    name: EndClose
    nameWithType: ICommunicationObject.EndClose
    fullName: System.ServiceModel.ICommunicationObject.EndClose
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.IAsyncResult
    name: IAsyncResult
    nameWithType: IAsyncResult
    fullName: System.IAsyncResult
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.ServiceModel.ICommunicationObject.EndOpen(System.IAsyncResult)
  commentId: M:System.ServiceModel.ICommunicationObject.EndOpen(System.IAsyncResult)
  parent: System.ServiceModel.ICommunicationObject
  isExternal: true
  name: EndOpen(IAsyncResult)
  nameWithType: ICommunicationObject.EndOpen(IAsyncResult)
  fullName: System.ServiceModel.ICommunicationObject.EndOpen(System.IAsyncResult)
  spec.csharp:
  - uid: System.ServiceModel.ICommunicationObject.EndOpen(System.IAsyncResult)
    name: EndOpen
    nameWithType: ICommunicationObject.EndOpen
    fullName: System.ServiceModel.ICommunicationObject.EndOpen
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.IAsyncResult
    name: IAsyncResult
    nameWithType: IAsyncResult
    fullName: System.IAsyncResult
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.ServiceModel.ICommunicationObject.EndOpen(System.IAsyncResult)
    name: EndOpen
    nameWithType: ICommunicationObject.EndOpen
    fullName: System.ServiceModel.ICommunicationObject.EndOpen
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.IAsyncResult
    name: IAsyncResult
    nameWithType: IAsyncResult
    fullName: System.IAsyncResult
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.ServiceModel.ICommunicationObject.Open
  commentId: M:System.ServiceModel.ICommunicationObject.Open
  parent: System.ServiceModel.ICommunicationObject
  isExternal: false
  name: Open()
  nameWithType: ICommunicationObject.Open()
  fullName: System.ServiceModel.ICommunicationObject.Open()
  spec.csharp:
  - uid: System.ServiceModel.ICommunicationObject.Open
    name: Open
    nameWithType: ICommunicationObject.Open
    fullName: System.ServiceModel.ICommunicationObject.Open
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.ServiceModel.ICommunicationObject.Open
    name: Open
    nameWithType: ICommunicationObject.Open
    fullName: System.ServiceModel.ICommunicationObject.Open
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.ServiceModel.ICommunicationObject.Open(System.TimeSpan)
  commentId: M:System.ServiceModel.ICommunicationObject.Open(System.TimeSpan)
  parent: System.ServiceModel.ICommunicationObject
  isExternal: true
  name: Open(TimeSpan)
  nameWithType: ICommunicationObject.Open(TimeSpan)
  fullName: System.ServiceModel.ICommunicationObject.Open(System.TimeSpan)
  spec.csharp:
  - uid: System.ServiceModel.ICommunicationObject.Open(System.TimeSpan)
    name: Open
    nameWithType: ICommunicationObject.Open
    fullName: System.ServiceModel.ICommunicationObject.Open
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.TimeSpan
    name: TimeSpan
    nameWithType: TimeSpan
    fullName: System.TimeSpan
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.ServiceModel.ICommunicationObject.Open(System.TimeSpan)
    name: Open
    nameWithType: ICommunicationObject.Open
    fullName: System.ServiceModel.ICommunicationObject.Open
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.TimeSpan
    name: TimeSpan
    nameWithType: TimeSpan
    fullName: System.TimeSpan
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.ServiceModel.IExtensibleObject{System.ServiceModel.IContextChannel}.Extensions
  commentId: P:System.ServiceModel.IExtensibleObject{System.ServiceModel.IContextChannel}.Extensions
  parent: System.ServiceModel.IExtensibleObject{System.ServiceModel.IContextChannel}
  definition: System.ServiceModel.IExtensibleObject`1.Extensions
  name: Extensions
  nameWithType: IExtensibleObject<IContextChannel>.Extensions
  fullName: System.ServiceModel.IExtensibleObject<System.ServiceModel.IContextChannel>.Extensions
  nameWithType.vb: IExtensibleObject(Of IContextChannel).Extensions
  fullname.vb: System.ServiceModel.IExtensibleObject(Of System.ServiceModel.IContextChannel).Extensions
- uid: System.IDisposable
  commentId: T:System.IDisposable
  parent: System
  isExternal: false
  name: IDisposable
  nameWithType: IDisposable
  fullName: System.IDisposable
- uid: System.ServiceModel.IContextChannel
  commentId: T:System.ServiceModel.IContextChannel
  parent: System.ServiceModel
  isExternal: false
  name: IContextChannel
  nameWithType: IContextChannel
  fullName: System.ServiceModel.IContextChannel
- uid: System.ServiceModel.Channels.IChannel
  commentId: T:System.ServiceModel.Channels.IChannel
  parent: System.ServiceModel.Channels
  isExternal: false
  name: IChannel
  nameWithType: IChannel
  fullName: System.ServiceModel.Channels.IChannel
- uid: System.ServiceModel.ICommunicationObject
  commentId: T:System.ServiceModel.ICommunicationObject
  parent: System.ServiceModel
  isExternal: false
  name: ICommunicationObject
  nameWithType: ICommunicationObject
  fullName: System.ServiceModel.ICommunicationObject
- uid: System.ServiceModel.IExtensibleObject`1.Extensions
  commentId: P:System.ServiceModel.IExtensibleObject`1.Extensions
  isExternal: false
  name: Extensions
  nameWithType: IExtensibleObject<T>.Extensions
  fullName: System.ServiceModel.IExtensibleObject<T>.Extensions
  nameWithType.vb: IExtensibleObject(Of T).Extensions
  fullname.vb: System.ServiceModel.IExtensibleObject(Of T).Extensions
- uid: System.ServiceModel.IExtensibleObject{System.ServiceModel.IContextChannel}
  commentId: T:System.ServiceModel.IExtensibleObject{System.ServiceModel.IContextChannel}
  parent: System.ServiceModel
  definition: System.ServiceModel.IExtensibleObject`1
  name: IExtensibleObject<IContextChannel>
  nameWithType: IExtensibleObject<IContextChannel>
  fullName: System.ServiceModel.IExtensibleObject<System.ServiceModel.IContextChannel>
  nameWithType.vb: IExtensibleObject(Of IContextChannel)
  fullname.vb: System.ServiceModel.IExtensibleObject(Of System.ServiceModel.IContextChannel)
  name.vb: IExtensibleObject(Of IContextChannel)
  spec.csharp:
  - uid: System.ServiceModel.IExtensibleObject`1
    name: IExtensibleObject
    nameWithType: IExtensibleObject
    fullName: System.ServiceModel.IExtensibleObject
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.ServiceModel.IContextChannel
    name: IContextChannel
    nameWithType: IContextChannel
    fullName: System.ServiceModel.IContextChannel
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.ServiceModel.IExtensibleObject`1
    name: IExtensibleObject
    nameWithType: IExtensibleObject
    fullName: System.ServiceModel.IExtensibleObject
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.ServiceModel.IContextChannel
    name: IContextChannel
    nameWithType: IContextChannel
    fullName: System.ServiceModel.IContextChannel
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: System.ServiceModel.Channels
  commentId: N:System.ServiceModel.Channels
  isExternal: false
  name: System.ServiceModel.Channels
  nameWithType: System.ServiceModel.Channels
  fullName: System.ServiceModel.Channels
- uid: System.ServiceModel.IExtensibleObject`1
  commentId: T:System.ServiceModel.IExtensibleObject`1
  isExternal: false
  name: IExtensibleObject<T>
  nameWithType: IExtensibleObject<T>
  fullName: System.ServiceModel.IExtensibleObject<T>
  nameWithType.vb: IExtensibleObject(Of T)
  fullname.vb: System.ServiceModel.IExtensibleObject(Of T)
  name.vb: IExtensibleObject(Of T)
  spec.csharp:
  - uid: System.ServiceModel.IExtensibleObject`1
    name: IExtensibleObject
    nameWithType: IExtensibleObject
    fullName: System.ServiceModel.IExtensibleObject
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.ServiceModel.IExtensibleObject`1
    name: IExtensibleObject
    nameWithType: IExtensibleObject
    fullName: System.ServiceModel.IExtensibleObject
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: false
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Uri
  commentId: T:System.Uri
  parent: System
  isExternal: false
  name: Uri
  nameWithType: Uri
  fullName: System.Uri
- uid: System.EventHandler{System.ServiceModel.UnknownMessageReceivedEventArgs}
  commentId: T:System.EventHandler{System.ServiceModel.UnknownMessageReceivedEventArgs}
  parent: System
  definition: System.EventHandler`1
  name: EventHandler<UnknownMessageReceivedEventArgs>
  nameWithType: EventHandler<UnknownMessageReceivedEventArgs>
  fullName: System.EventHandler<System.ServiceModel.UnknownMessageReceivedEventArgs>
  nameWithType.vb: EventHandler(Of UnknownMessageReceivedEventArgs)
  fullname.vb: System.EventHandler(Of System.ServiceModel.UnknownMessageReceivedEventArgs)
  name.vb: EventHandler(Of UnknownMessageReceivedEventArgs)
  spec.csharp:
  - uid: System.EventHandler`1
    name: EventHandler
    nameWithType: EventHandler
    fullName: System.EventHandler
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.ServiceModel.UnknownMessageReceivedEventArgs
    name: UnknownMessageReceivedEventArgs
    nameWithType: UnknownMessageReceivedEventArgs
    fullName: System.ServiceModel.UnknownMessageReceivedEventArgs
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.EventHandler`1
    name: EventHandler
    nameWithType: EventHandler
    fullName: System.EventHandler
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.ServiceModel.UnknownMessageReceivedEventArgs
    name: UnknownMessageReceivedEventArgs
    nameWithType: UnknownMessageReceivedEventArgs
    fullName: System.ServiceModel.UnknownMessageReceivedEventArgs
  - name: )
    nameWithType: )
    fullName: )
- uid: System.EventHandler`1
  commentId: T:System.EventHandler`1
  isExternal: false
  name: EventHandler<TEventArgs>
  nameWithType: EventHandler<TEventArgs>
  fullName: System.EventHandler<TEventArgs>
  nameWithType.vb: EventHandler(Of TEventArgs)
  fullname.vb: System.EventHandler(Of TEventArgs)
  name.vb: EventHandler(Of TEventArgs)
  spec.csharp:
  - uid: System.EventHandler`1
    name: EventHandler
    nameWithType: EventHandler
    fullName: System.EventHandler
  - name: <
    nameWithType: <
    fullName: <
  - name: TEventArgs
    nameWithType: TEventArgs
    fullName: TEventArgs
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.EventHandler`1
    name: EventHandler
    nameWithType: EventHandler
    fullName: System.EventHandler
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TEventArgs
    nameWithType: TEventArgs
    fullName: TEventArgs
  - name: )
    nameWithType: )
    fullName: )
- uid: System.AsyncCallback
  commentId: T:System.AsyncCallback
  parent: System
  isExternal: false
  name: AsyncCallback
  nameWithType: AsyncCallback
  fullName: System.AsyncCallback
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: false
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.IAsyncResult
  commentId: T:System.IAsyncResult
  parent: System
  isExternal: false
  name: IAsyncResult
  nameWithType: IAsyncResult
  fullName: System.IAsyncResult
