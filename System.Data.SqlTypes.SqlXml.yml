items:
- uid: System.Data.SqlTypes.SqlXml
  commentId: T:System.Data.SqlTypes.SqlXml
  id: SqlXml
  parent: System.Data.SqlTypes
  children:
  - System.Data.SqlTypes.SqlXml.#ctor
  - System.Data.SqlTypes.SqlXml.#ctor(System.IO.Stream)
  - System.Data.SqlTypes.SqlXml.#ctor(System.Xml.XmlReader)
  - System.Data.SqlTypes.SqlXml.CreateReader
  - System.Data.SqlTypes.SqlXml.IsNull
  - System.Data.SqlTypes.SqlXml.Null
  - System.Data.SqlTypes.SqlXml.Value
  langs:
  - csharp
  - vb
  name: SqlXml
  fullName: System.Data.SqlTypes.SqlXml
  type: Class
  source:
    remote:
      path: src/System.Data.SqlClient/src/System/Data/SqlTypes/SqlXml.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: SqlXml
    path: src/System.Data.SqlClient/src/System/Data/SqlTypes/SqlXml.cs
    startLine: 17
  assemblies:
  - System.Data.SqlClient
  namespace: System.Data.SqlTypes
  summary: "\n<p>Represents XML data stored in or retrieved from a server.</p>\n"
  syntax:
    content: 'public sealed class SqlXml : INullable'
    content.vb: >-
      Public NotInheritable Class SqlXml
          Implements INullable
  inheritance:
  - System.Object
  implements:
  - System.Data.SqlTypes.INullable
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  modifiers.csharp:
  - public
  - sealed
  - class
  modifiers.vb:
  - Public
  - NotInheritable
  - Class
  nameWithType: SqlXml
- uid: System.Data.SqlTypes.SqlXml.#ctor
  commentId: M:System.Data.SqlTypes.SqlXml.#ctor
  id: '#ctor'
  parent: System.Data.SqlTypes.SqlXml
  langs:
  - csharp
  - vb
  name: SqlXml()
  fullName: System.Data.SqlTypes.SqlXml.SqlXml()
  type: Constructor
  source:
    remote:
      path: src/System.Data.SqlClient/src/System/Data/SqlTypes/SqlXml.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: .ctor
    path: src/System.Data.SqlClient/src/System/Data/SqlTypes/SqlXml.cs
    startLine: 27
  assemblies:
  - System.Data.SqlClient
  namespace: System.Data.SqlTypes
  summary: "\n<p>Creates a new <xref href=\"System.Data.SqlTypes.SqlXml\" data-throw-if-not-resolved=\"false\"></xref> instance.</p>\n"
  syntax:
    content: public SqlXml()
    content.vb: Public Sub New
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  nameWithType: SqlXml.SqlXml()
- uid: System.Data.SqlTypes.SqlXml.#ctor(System.IO.Stream)
  commentId: M:System.Data.SqlTypes.SqlXml.#ctor(System.IO.Stream)
  id: '#ctor(System.IO.Stream)'
  parent: System.Data.SqlTypes.SqlXml
  langs:
  - csharp
  - vb
  name: SqlXml(Stream)
  fullName: System.Data.SqlTypes.SqlXml.SqlXml(System.IO.Stream)
  type: Constructor
  source:
    remote:
      path: src/System.Data.SqlClient/src/System/Data/SqlTypes/SqlXml.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: .ctor
    path: src/System.Data.SqlClient/src/System/Data/SqlTypes/SqlXml.cs
    startLine: 54
  assemblies:
  - System.Data.SqlClient
  namespace: System.Data.SqlTypes
  summary: "\n<p>Creates a new <xref href=\"System.Data.SqlTypes.SqlXml\" data-throw-if-not-resolved=\"false\"></xref> instance, supplying the XML value from the supplied <xref href=\"System.IO.Stream\" data-throw-if-not-resolved=\"false\"></xref>-derived instance.</p>\n"
  syntax:
    content: public SqlXml(Stream value)
    content.vb: Public Sub New(value As Stream)
    parameters:
    - id: value
      type: System.IO.Stream
      description: "\n<p>A <xref href=\"System.IO.Stream\" data-throw-if-not-resolved=\"false\"></xref>-derived instance (such as <xref href=\"System.IO.FileStream\" data-throw-if-not-resolved=\"false\"></xref>) from which to load the <xref href=\"System.Data.SqlTypes.SqlXml\" data-throw-if-not-resolved=\"false\"></xref> instance's Xml content.</p>\n"
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  nameWithType: SqlXml.SqlXml(Stream)
- uid: System.Data.SqlTypes.SqlXml.#ctor(System.Xml.XmlReader)
  commentId: M:System.Data.SqlTypes.SqlXml.#ctor(System.Xml.XmlReader)
  id: '#ctor(System.Xml.XmlReader)'
  parent: System.Data.SqlTypes.SqlXml
  langs:
  - csharp
  - vb
  name: SqlXml(Xml.XmlReader)
  fullName: System.Data.SqlTypes.SqlXml.SqlXml(System.Xml.XmlReader)
  type: Constructor
  source:
    remote:
      path: src/System.Data.SqlClient/ref/System.Data.SqlClient.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: .ctor
    path: src/System.Data.SqlClient/ref/System.Data.SqlClient.cs
    startLine: 1468
  assemblies:
  - System.Data.SqlClient
  namespace: System.Data.SqlTypes
  summary: "\n<p>Creates a new <xref href=\"System.Data.SqlTypes.SqlXml\" data-throw-if-not-resolved=\"false\"></xref> instance and associates it with the content of the supplied <xref href=\"System.Xml.XmlReader\" data-throw-if-not-resolved=\"false\"></xref>.</p>\n"
  syntax:
    content: public SqlXml(Xml.XmlReader value)
    content.vb: Public Sub New(value As Xml.XmlReader)
    parameters:
    - id: value
      type: System.Xml.XmlReader
      description: "\n<p>An <xref href=\"System.Xml.XmlReader\" data-throw-if-not-resolved=\"false\"></xref>-derived class instance to be used as the value of the new <xref href=\"System.Data.SqlTypes.SqlXml\" data-throw-if-not-resolved=\"false\"></xref> instance.</p>\n"
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  nameWithType: SqlXml.SqlXml(Xml.XmlReader)
- uid: System.Data.SqlTypes.SqlXml.IsNull
  commentId: P:System.Data.SqlTypes.SqlXml.IsNull
  id: IsNull
  parent: System.Data.SqlTypes.SqlXml
  langs:
  - csharp
  - vb
  name: IsNull
  fullName: System.Data.SqlTypes.SqlXml.IsNull
  type: Property
  source:
    remote:
      path: src/System.Data.SqlClient/src/System/Data/SqlTypes/SqlXml.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: IsNull
    path: src/System.Data.SqlClient/src/System/Data/SqlTypes/SqlXml.cs
    startLine: 110
  assemblies:
  - System.Data.SqlClient
  namespace: System.Data.SqlTypes
  summary: "\n<p>Indicates whether this instance represents a null <xref href=\"System.Data.SqlTypes.SqlXml\" data-throw-if-not-resolved=\"false\"></xref> value.</p>\n"
  syntax:
    content: public bool IsNull { get; }
    content.vb: Public ReadOnly Property IsNull As Boolean
    parameters: []
    return:
      type: System.Boolean
      description: "\n<p>\n<strong>true</strong> if <strong>Value</strong> is null. Otherwise, <strong>false</strong>.</p>\n"
  implements:
  - System.Data.SqlTypes.INullable.IsNull
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
  nameWithType: SqlXml.IsNull
- uid: System.Data.SqlTypes.SqlXml.Null
  commentId: P:System.Data.SqlTypes.SqlXml.Null
  parent: System.Data.SqlTypes.SqlXml
  langs:
  - csharp
  - vb
  fullName: System.Data.SqlTypes.SqlXml.Null
  type: Property
  source:
    remote:
      path: src/System.Data.SqlClient/src/System/Data/SqlTypes/SqlXml.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    path: src/System.Data.SqlClient/src/System/Data/SqlTypes/SqlXml.cs
    startLine: 143
  assemblies:
  - System.Data.SqlClient
  namespace: System.Data.SqlTypes
  summary: "\n<p>Represents a null instance of the <xref href=\"System.Data.SqlTypes.SqlXml\" data-throw-if-not-resolved=\"false\"></xref> type.</p>\n"
  syntax:
    content: public static SqlXml Null { get; }
    content.vb: Public Shared ReadOnly Property Null As SqlXml
    parameters: []
    return:
      type: System.Data.SqlTypes.SqlXml
      description: "\n<p>A null instance of the <xref href=\"System.Data.SqlTypes.SqlXml\" data-throw-if-not-resolved=\"false\"></xref> type.</p>\n"
  modifiers.csharp:
  - public
  - static
  - get
  modifiers.vb:
  - Public
  - Shared
  - ReadOnly
  nameWithType: SqlXml.Null
- uid: System.Data.SqlTypes.SqlXml.Value
  commentId: P:System.Data.SqlTypes.SqlXml.Value
  id: Value
  parent: System.Data.SqlTypes.SqlXml
  langs:
  - csharp
  - vb
  name: Value
  fullName: System.Data.SqlTypes.SqlXml.Value
  type: Property
  source:
    remote:
      path: src/System.Data.SqlClient/src/System/Data/SqlTypes/SqlXml.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: Value
    path: src/System.Data.SqlClient/src/System/Data/SqlTypes/SqlXml.cs
    startLine: 115
  assemblies:
  - System.Data.SqlClient
  namespace: System.Data.SqlTypes
  summary: "\n<p>Gets the string representation of the XML content of this <xref href=\"System.Data.SqlTypes.SqlXml\" data-throw-if-not-resolved=\"false\"></xref> instance.</p>\n"
  syntax:
    content: public string Value { get; }
    content.vb: Public ReadOnly Property Value As String
    parameters: []
    return:
      type: System.String
      description: "\n<p>The string representation of the XML content.</p>\n"
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
  nameWithType: SqlXml.Value
- uid: System.Data.SqlTypes.SqlXml.CreateReader
  commentId: M:System.Data.SqlTypes.SqlXml.CreateReader
  id: CreateReader
  parent: System.Data.SqlTypes.SqlXml
  langs:
  - csharp
  - vb
  name: CreateReader()
  fullName: System.Data.SqlTypes.SqlXml.CreateReader()
  type: Method
  source:
    remote:
      path: src/System.Data.SqlClient/src/System/Data/SqlTypes/SqlXml.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: CreateReader
    path: src/System.Data.SqlClient/src/System/Data/SqlTypes/SqlXml.cs
    startLine: 70
  assemblies:
  - System.Data.SqlClient
  namespace: System.Data.SqlTypes
  summary: "\n<p>Gets the value of the XML content of this <xref href=\"System.Data.SqlTypes.SqlXml\" data-throw-if-not-resolved=\"false\"></xref> as a <xref href=\"System.Xml.XmlReader\" data-throw-if-not-resolved=\"false\"></xref>.</p>\n"
  syntax:
    content: public XmlReader CreateReader()
    content.vb: Public Function CreateReader As XmlReader
    return:
      type: XmlReader
      description: "\n<p>A <xref href=\"System.Xml.XmlReader\" data-throw-if-not-resolved=\"false\"></xref>-derived instance that contains the XML content. The actual type may vary (for example, the return value might be <xref href=\"System.Xml.XmlTextReader\" data-throw-if-not-resolved=\"false\"></xref>) depending on how the information is represented internally, on the server.</p>\n"
  exceptions:
  - type: System.Data.SqlTypes.SqlNullValueException
    commentId: T:System.Data.SqlTypes.SqlNullValueException
    description: "\n<p>Attempt was made to access this property on a null instance of <xref href=\"System.Data.SqlTypes.SqlXml\" data-throw-if-not-resolved=\"false\"></xref>.</p>\n"
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  nameWithType: SqlXml.CreateReader()
references:
- uid: System.Data.SqlTypes
  isExternal: false
  name: System.Data.SqlTypes
  fullName: System.Data.SqlTypes
  nameWithType: System.Data.SqlTypes
  commentId: N:System.Data.SqlTypes
- uid: System.Object
  parent: System
  isExternal: false
  name: Object
  fullName: System.Object
  nameWithType: Object
  commentId: T:System.Object
- uid: System.Data.SqlTypes.INullable
  parent: System.Data.SqlTypes
  isExternal: false
  name: INullable
  fullName: System.Data.SqlTypes.INullable
  nameWithType: INullable
  commentId: T:System.Data.SqlTypes.INullable
- uid: System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  nameWithType: Object.ToString()
  commentId: M:System.Object.ToString
- uid: System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
  nameWithType: Object.Equals(Object)
  commentId: M:System.Object.Equals(System.Object)
- uid: System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
  nameWithType: Object.Equals(Object, Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
  nameWithType: Object.ReferenceEquals(Object, Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
- uid: System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  nameWithType: Object.GetHashCode()
  commentId: M:System.Object.GetHashCode
- uid: System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  nameWithType: Object.GetType()
  commentId: M:System.Object.GetType
- uid: System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  nameWithType: Object.MemberwiseClone()
  commentId: M:System.Object.MemberwiseClone
- uid: System
  isExternal: false
  name: System
  fullName: System
  nameWithType: System
  commentId: N:System
- uid: System.IO.Stream
  parent: System.IO
  isExternal: false
  name: Stream
  fullName: System.IO.Stream
  nameWithType: Stream
  commentId: T:System.IO.Stream
- uid: System.IO
  isExternal: false
  name: System.IO
  fullName: System.IO
  nameWithType: System.IO
  commentId: N:System.IO
- uid: System.Xml.XmlReader
  parent: System.Xml
  isExternal: false
  name: XmlReader
  fullName: System.Xml.XmlReader
  nameWithType: XmlReader
  commentId: T:System.Xml.XmlReader
- uid: System.Xml
  isExternal: false
  name: System.Xml
  fullName: System.Xml
  nameWithType: System.Xml
  commentId: N:System.Xml
- uid: System.Data.SqlTypes.INullable.IsNull
  parent: System.Data.SqlTypes.INullable
  isExternal: false
  name: IsNull
  fullName: System.Data.SqlTypes.INullable.IsNull
  nameWithType: INullable.IsNull
  commentId: P:System.Data.SqlTypes.INullable.IsNull
- uid: System.Boolean
  parent: System
  isExternal: false
  name: Boolean
  fullName: System.Boolean
  nameWithType: Boolean
  commentId: T:System.Boolean
- uid: System.Data.SqlTypes.SqlXml
  parent: System.Data.SqlTypes
  isExternal: false
  name: SqlXml
  fullName: System.Data.SqlTypes.SqlXml
  nameWithType: SqlXml
  commentId: T:System.Data.SqlTypes.SqlXml
- uid: System.String
  parent: System
  isExternal: false
  name: String
  fullName: System.String
  nameWithType: String
  commentId: T:System.String
- uid: System.Data.SqlTypes.SqlNullValueException
  isExternal: false
  name: SqlNullValueException
  fullName: System.Data.SqlTypes.SqlNullValueException
  nameWithType: SqlNullValueException
  commentId: T:System.Data.SqlTypes.SqlNullValueException
