items:
- uid: System.Security.Cryptography.Pkcs.ContentInfo
  commentId: T:System.Security.Cryptography.Pkcs.ContentInfo
  id: ContentInfo
  parent: System.Security.Cryptography.Pkcs
  children:
  - System.Security.Cryptography.Pkcs.ContentInfo.#ctor(System.Byte[])
  - System.Security.Cryptography.Pkcs.ContentInfo.#ctor(System.Security.Cryptography.Oid,System.Byte[])
  - System.Security.Cryptography.Pkcs.ContentInfo.Content
  - System.Security.Cryptography.Pkcs.ContentInfo.ContentType
  - System.Security.Cryptography.Pkcs.ContentInfo.GetContentType(System.Byte[])
  langs:
  - csharp
  - vb
  name: ContentInfo
  fullName: System.Security.Cryptography.Pkcs.ContentInfo
  type: Class
  source:
    remote:
      path: src/System.Security.Cryptography.Pkcs/src/System/Security/Cryptography/Pkcs/ContentInfo.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: ContentInfo
    path: src/System.Security.Cryptography.Pkcs/src/System/Security/Cryptography/Pkcs/ContentInfo.cs
    startLine: 11
  assemblies:
  - System.Security.Cryptography.Pkcs
  namespace: System.Security.Cryptography.Pkcs
  summary: "\n<p>The <xref href=\"System.Security.Cryptography.Pkcs.ContentInfo\" data-throw-if-not-resolved=\"false\"></xref> class represents the CMS/PKCS #7 ContentInfo data structure as defined in the CMS/PKCS #7 standards document. This data structure is the basis for all CMS/PKCS #7 messages.</p>\n"
  syntax:
    content: public sealed class ContentInfo
    content.vb: Public NotInheritable Class ContentInfo
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  modifiers.csharp:
  - public
  - sealed
  - class
  modifiers.vb:
  - Public
  - NotInheritable
  - Class
  nameWithType: ContentInfo
- uid: System.Security.Cryptography.Pkcs.ContentInfo.#ctor(System.Byte[])
  commentId: M:System.Security.Cryptography.Pkcs.ContentInfo.#ctor(System.Byte[])
  id: '#ctor(System.Byte[])'
  parent: System.Security.Cryptography.Pkcs.ContentInfo
  langs:
  - csharp
  - vb
  name: ContentInfo(Byte[])
  fullName: System.Security.Cryptography.Pkcs.ContentInfo.ContentInfo(System.Byte[])
  type: Constructor
  source:
    remote:
      path: src/System.Security.Cryptography.Pkcs/src/System/Security/Cryptography/Pkcs/ContentInfo.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: .ctor
    path: src/System.Security.Cryptography.Pkcs/src/System/Security/Cryptography/Pkcs/ContentInfo.cs
    startLine: 17
  assemblies:
  - System.Security.Cryptography.Pkcs
  namespace: System.Security.Cryptography.Pkcs
  summary: "\n<p>The <xref href=\"System.Security.Cryptography.Pkcs.ContentInfo.#ctor(System.Byte[])\" data-throw-if-not-resolved=\"false\"></xref> constructor  creates an instance of the <xref href=\"System.Security.Cryptography.Pkcs.ContentInfo\" data-throw-if-not-resolved=\"false\"></xref> class by using an array of byte values as the data and a default <em>object identifier</em> (OID) that represents the content type.</p>\n"
  syntax:
    content: public ContentInfo(byte[] content)
    content.vb: Public Sub New(content As Byte())
    parameters:
    - id: content
      type: System.Byte[]
      description: "\n<p>An array of byte values that represents the data from which to create the <xref href=\"System.Security.Cryptography.Pkcs.ContentInfo\" data-throw-if-not-resolved=\"false\"></xref> object.</p>\n"
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "\n<p>A null reference  was passed to a method that does not accept it as a valid argument. </p>\n"
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: System.Security.Cryptography.Pkcs.ContentInfo.ContentInfo(System.Byte())
  name.vb: ContentInfo(Byte())
  nameWithType: ContentInfo.ContentInfo(Byte[])
  nameWithType.vb: ContentInfo.ContentInfo(Byte())
- uid: System.Security.Cryptography.Pkcs.ContentInfo.#ctor(System.Security.Cryptography.Oid,System.Byte[])
  commentId: M:System.Security.Cryptography.Pkcs.ContentInfo.#ctor(System.Security.Cryptography.Oid,System.Byte[])
  id: '#ctor(System.Security.Cryptography.Oid,System.Byte[])'
  parent: System.Security.Cryptography.Pkcs.ContentInfo
  langs:
  - csharp
  - vb
  name: ContentInfo(Oid, Byte[])
  fullName: System.Security.Cryptography.Pkcs.ContentInfo.ContentInfo(System.Security.Cryptography.Oid, System.Byte[])
  type: Constructor
  source:
    remote:
      path: src/System.Security.Cryptography.Pkcs/ref/System.Security.Cryptography.Pkcs.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: .ctor
    path: src/System.Security.Cryptography.Pkcs/ref/System.Security.Cryptography.Pkcs.cs
    startLine: 85
  assemblies:
  - System.Security.Cryptography.Pkcs
  namespace: System.Security.Cryptography.Pkcs
  summary: "\n<p>The <xref href=\"System.Security.Cryptography.Pkcs.ContentInfo.#ctor(System.Security.Cryptography.Oid,System.Byte[])\" data-throw-if-not-resolved=\"false\"></xref>  constructor  creates an instance of the <xref href=\"System.Security.Cryptography.Pkcs.ContentInfo\" data-throw-if-not-resolved=\"false\"></xref> class by using the specified content type and an array of byte values as the data.</p>\n"
  syntax:
    content: public ContentInfo(Oid contentType, byte[] content)
    content.vb: Public Sub New(contentType As Oid, content As Byte())
    parameters:
    - id: contentType
      type: System.Security.Cryptography.Oid
      description: "\n<p>An <xref href=\"System.Security.Cryptography.Oid\" data-throw-if-not-resolved=\"false\"></xref> object that contains an <em>object identifier</em> (OID) that specifies the content type of the content. This can be data, digestedData, encryptedData, envelopedData, hashedData, signedAndEnvelopedData, or signedData.  For more information, see  Remarks.</p>\n"
    - id: content
      type: System.Byte[]
      description: "\n<p>An array of byte values that represents the data from which to create the <xref href=\"System.Security.Cryptography.Pkcs.ContentInfo\" data-throw-if-not-resolved=\"false\"></xref> object.</p>\n"
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "\n<p>A null reference  was passed to a method that does not accept it as a valid argument. </p>\n"
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: System.Security.Cryptography.Pkcs.ContentInfo.ContentInfo(System.Security.Cryptography.Oid, System.Byte())
  name.vb: ContentInfo(Oid, Byte())
  nameWithType: ContentInfo.ContentInfo(Oid, Byte[])
  nameWithType.vb: ContentInfo.ContentInfo(Oid, Byte())
- uid: System.Security.Cryptography.Pkcs.ContentInfo.Content
  commentId: P:System.Security.Cryptography.Pkcs.ContentInfo.Content
  id: Content
  parent: System.Security.Cryptography.Pkcs.ContentInfo
  langs:
  - csharp
  - vb
  name: Content
  fullName: System.Security.Cryptography.Pkcs.ContentInfo.Content
  type: Property
  source:
    remote:
      path: src/System.Security.Cryptography.Pkcs/src/System/Security/Cryptography/Pkcs/ContentInfo.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: Content
    path: src/System.Security.Cryptography.Pkcs/src/System/Security/Cryptography/Pkcs/ContentInfo.cs
    startLine: 35
  assemblies:
  - System.Security.Cryptography.Pkcs
  namespace: System.Security.Cryptography.Pkcs
  summary: "\n<p>The <xref href=\"System.Security.Cryptography.Pkcs.ContentInfo.Content\" data-throw-if-not-resolved=\"false\"></xref> property  retrieves the content of the CMS/PKCS #7 message.</p>\n"
  syntax:
    content: public byte[] Content { get; }
    content.vb: Public ReadOnly Property Content As Byte()
    parameters: []
    return:
      type: System.Byte[]
      description: "\n<p>An array of byte values that represents the content data.</p>\n"
  seealso:
  - type: System.Security.Cryptography.Pkcs.ContentInfo.ContentType
    commentId: P:System.Security.Cryptography.Pkcs.ContentInfo.ContentType
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
  nameWithType: ContentInfo.Content
- uid: System.Security.Cryptography.Pkcs.ContentInfo.ContentType
  commentId: P:System.Security.Cryptography.Pkcs.ContentInfo.ContentType
  id: ContentType
  parent: System.Security.Cryptography.Pkcs.ContentInfo
  langs:
  - csharp
  - vb
  name: ContentType
  fullName: System.Security.Cryptography.Pkcs.ContentInfo.ContentType
  type: Property
  source:
    remote:
      path: src/System.Security.Cryptography.Pkcs/src/System/Security/Cryptography/Pkcs/ContentInfo.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: ContentType
    path: src/System.Security.Cryptography.Pkcs/src/System/Security/Cryptography/Pkcs/ContentInfo.cs
    startLine: 33
  assemblies:
  - System.Security.Cryptography.Pkcs
  namespace: System.Security.Cryptography.Pkcs
  summary: "\n<p>The <xref href=\"System.Security.Cryptography.Pkcs.ContentInfo.ContentType\" data-throw-if-not-resolved=\"false\"></xref> property  retrieves the <xref href=\"System.Security.Cryptography.Oid\" data-throw-if-not-resolved=\"false\"></xref>   object that contains the <em>object identifier</em> (OID)  of the content type of the inner content of the CMS/PKCS #7 message.</p>\n"
  syntax:
    content: public Oid ContentType { get; }
    content.vb: Public ReadOnly Property ContentType As Oid
    parameters: []
    return:
      type: Oid
      description: "\n<p>An <xref href=\"System.Security.Cryptography.Oid\" data-throw-if-not-resolved=\"false\"></xref>  object that contains the OID value that represents the content type.</p>\n"
  seealso:
  - type: System.Security.Cryptography.Pkcs.ContentInfo.Content
    commentId: P:System.Security.Cryptography.Pkcs.ContentInfo.Content
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
  nameWithType: ContentInfo.ContentType
- uid: System.Security.Cryptography.Pkcs.ContentInfo.GetContentType(System.Byte[])
  commentId: M:System.Security.Cryptography.Pkcs.ContentInfo.GetContentType(System.Byte[])
  id: GetContentType(System.Byte[])
  parent: System.Security.Cryptography.Pkcs.ContentInfo
  langs:
  - csharp
  - vb
  name: GetContentType(Byte[])
  fullName: System.Security.Cryptography.Pkcs.ContentInfo.GetContentType(System.Byte[])
  type: Method
  source:
    remote:
      path: src/System.Security.Cryptography.Pkcs/src/System/Security/Cryptography/Pkcs/ContentInfo.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: GetContentType
    path: src/System.Security.Cryptography.Pkcs/src/System/Security/Cryptography/Pkcs/ContentInfo.cs
    startLine: 37
  assemblies:
  - System.Security.Cryptography.Pkcs
  namespace: System.Security.Cryptography.Pkcs
  summary: "\n<p>The <xref href=\"System.Security.Cryptography.Pkcs.ContentInfo.GetContentType(System.Byte[])\" data-throw-if-not-resolved=\"false\"></xref> static method  retrieves the outer content type of the encoded <xref href=\"System.Security.Cryptography.Pkcs.ContentInfo\" data-throw-if-not-resolved=\"false\"></xref> message represented by an array of byte values.</p>\n"
  syntax:
    content: public static Oid GetContentType(byte[] encodedMessage)
    content.vb: Public Shared Function GetContentType(encodedMessage As Byte()) As Oid
    parameters:
    - id: encodedMessage
      type: System.Byte[]
      description: "\n<p>An array of byte values that represents the encoded <xref href=\"System.Security.Cryptography.Pkcs.ContentInfo\" data-throw-if-not-resolved=\"false\"></xref> message from which to retrieve the outer content type.</p>\n"
    return:
      type: Oid
      description: "\n<p>If the method succeeds, the method returns an <xref href=\"System.Security.Cryptography.Oid\" data-throw-if-not-resolved=\"false\"></xref> object that contains the outer content type of the specified encoded <xref href=\"System.Security.Cryptography.Pkcs.ContentInfo\" data-throw-if-not-resolved=\"false\"></xref> message.</p>\n<p>If the method fails, it throws an exception.</p>\n"
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "\n<p>A null reference  was passed to a method that does not accept it as a valid argument.</p>\n"
  - type: System.Security.Cryptography.CryptographicException
    commentId: T:System.Security.Cryptography.CryptographicException
    description: "\n<p>An error occurred during a cryptographic operation.</p>\n"
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: System.Security.Cryptography.Pkcs.ContentInfo.GetContentType(System.Byte())
  name.vb: GetContentType(Byte())
  nameWithType: ContentInfo.GetContentType(Byte[])
  nameWithType.vb: ContentInfo.GetContentType(Byte())
references:
- uid: System.Security.Cryptography.Pkcs
  isExternal: false
  name: System.Security.Cryptography.Pkcs
  fullName: System.Security.Cryptography.Pkcs
  nameWithType: System.Security.Cryptography.Pkcs
  commentId: N:System.Security.Cryptography.Pkcs
- uid: System.Object
  parent: System
  isExternal: false
  name: Object
  fullName: System.Object
  nameWithType: Object
  commentId: T:System.Object
- uid: System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  nameWithType: Object.ToString()
  commentId: M:System.Object.ToString
- uid: System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
  nameWithType: Object.Equals(Object)
  commentId: M:System.Object.Equals(System.Object)
- uid: System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
  nameWithType: Object.Equals(Object, Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
  nameWithType: Object.ReferenceEquals(Object, Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
- uid: System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  nameWithType: Object.GetHashCode()
  commentId: M:System.Object.GetHashCode
- uid: System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  nameWithType: Object.GetType()
  commentId: M:System.Object.GetType
- uid: System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  nameWithType: Object.MemberwiseClone()
  commentId: M:System.Object.MemberwiseClone
- uid: System
  isExternal: false
  name: System
  fullName: System
  nameWithType: System
  commentId: N:System
- uid: System.Byte[]
  name: Byte[]
  fullName: System.Byte[]
  fullname.vb: System.Byte()
  name.vb: Byte()
  spec.csharp:
  - uid: System.Byte
    name: Byte
    fullName: System.Byte
    isExternal: true
  - name: '[]'
    fullName: '[]'
  spec.vb:
  - uid: System.Byte
    name: Byte
    fullName: System.Byte
    isExternal: true
  - name: ()
    fullName: ()
  nameWithType: Byte[]
  nameWithType.vb: Byte()
- uid: System.Security.Cryptography.Oid
  parent: System.Security.Cryptography
  isExternal: false
  name: Oid
  fullName: System.Security.Cryptography.Oid
  nameWithType: Oid
  commentId: T:System.Security.Cryptography.Oid
- uid: System.Security.Cryptography
  isExternal: false
  name: System.Security.Cryptography
  fullName: System.Security.Cryptography
  nameWithType: System.Security.Cryptography
  commentId: N:System.Security.Cryptography
- uid: System.ArgumentNullException
  isExternal: false
  name: ArgumentNullException
  fullName: System.ArgumentNullException
  nameWithType: ArgumentNullException
  commentId: T:System.ArgumentNullException
- uid: System.Security.Cryptography.CryptographicException
  isExternal: false
  name: CryptographicException
  fullName: System.Security.Cryptography.CryptographicException
  nameWithType: CryptographicException
  commentId: T:System.Security.Cryptography.CryptographicException
