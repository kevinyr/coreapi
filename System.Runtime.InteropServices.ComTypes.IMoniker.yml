### YamlMime:ManagedReference
items:
- uid: System.Runtime.InteropServices.ComTypes.IMoniker
  commentId: T:System.Runtime.InteropServices.ComTypes.IMoniker
  id: IMoniker
  parent: System.Runtime.InteropServices.ComTypes
  children:
  - System.Runtime.InteropServices.ComTypes.IMoniker.BindToObject(System.Runtime.InteropServices.ComTypes.IBindCtx,System.Runtime.InteropServices.ComTypes.IMoniker,System.Guid@,System.Object@)
  - System.Runtime.InteropServices.ComTypes.IMoniker.BindToStorage(System.Runtime.InteropServices.ComTypes.IBindCtx,System.Runtime.InteropServices.ComTypes.IMoniker,System.Guid@,System.Object@)
  - System.Runtime.InteropServices.ComTypes.IMoniker.CommonPrefixWith(System.Runtime.InteropServices.ComTypes.IMoniker,System.Runtime.InteropServices.ComTypes.IMoniker@)
  - System.Runtime.InteropServices.ComTypes.IMoniker.ComposeWith(System.Runtime.InteropServices.ComTypes.IMoniker,System.Boolean,System.Runtime.InteropServices.ComTypes.IMoniker@)
  - System.Runtime.InteropServices.ComTypes.IMoniker.Enum(System.Boolean,System.Runtime.InteropServices.ComTypes.IEnumMoniker@)
  - System.Runtime.InteropServices.ComTypes.IMoniker.GetClassID(System.Guid@)
  - System.Runtime.InteropServices.ComTypes.IMoniker.GetDisplayName(System.Runtime.InteropServices.ComTypes.IBindCtx,System.Runtime.InteropServices.ComTypes.IMoniker,System.String@)
  - System.Runtime.InteropServices.ComTypes.IMoniker.GetSizeMax(System.Int64@)
  - System.Runtime.InteropServices.ComTypes.IMoniker.GetTimeOfLastChange(System.Runtime.InteropServices.ComTypes.IBindCtx,System.Runtime.InteropServices.ComTypes.IMoniker,System.Runtime.InteropServices.ComTypes.FILETIME@)
  - System.Runtime.InteropServices.ComTypes.IMoniker.Hash(System.Int32@)
  - System.Runtime.InteropServices.ComTypes.IMoniker.Inverse(System.Runtime.InteropServices.ComTypes.IMoniker@)
  - System.Runtime.InteropServices.ComTypes.IMoniker.IsDirty
  - System.Runtime.InteropServices.ComTypes.IMoniker.IsEqual(System.Runtime.InteropServices.ComTypes.IMoniker)
  - System.Runtime.InteropServices.ComTypes.IMoniker.IsRunning(System.Runtime.InteropServices.ComTypes.IBindCtx,System.Runtime.InteropServices.ComTypes.IMoniker,System.Runtime.InteropServices.ComTypes.IMoniker)
  - System.Runtime.InteropServices.ComTypes.IMoniker.IsSystemMoniker(System.Int32@)
  - System.Runtime.InteropServices.ComTypes.IMoniker.Load(System.Runtime.InteropServices.ComTypes.IStream)
  - System.Runtime.InteropServices.ComTypes.IMoniker.ParseDisplayName(System.Runtime.InteropServices.ComTypes.IBindCtx,System.Runtime.InteropServices.ComTypes.IMoniker,System.String,System.Int32@,System.Runtime.InteropServices.ComTypes.IMoniker@)
  - System.Runtime.InteropServices.ComTypes.IMoniker.Reduce(System.Runtime.InteropServices.ComTypes.IBindCtx,System.Int32,System.Runtime.InteropServices.ComTypes.IMoniker@,System.Runtime.InteropServices.ComTypes.IMoniker@)
  - System.Runtime.InteropServices.ComTypes.IMoniker.RelativePathTo(System.Runtime.InteropServices.ComTypes.IMoniker,System.Runtime.InteropServices.ComTypes.IMoniker@)
  - System.Runtime.InteropServices.ComTypes.IMoniker.Save(System.Runtime.InteropServices.ComTypes.IStream,System.Boolean)
  langs:
  - csharp
  - vb
  name: IMoniker
  nameWithType: IMoniker
  fullName: System.Runtime.InteropServices.ComTypes.IMoniker
  type: Interface
  source:
    remote:
      path: src/mscorlib/src/System/Runtime/InteropServices/ComTypes/IMoniker.cs
      branch: master
      repo: https://github.com/dotnet/coreclr.git
    id: IMoniker
    path: src/mscorlib/src/System/Runtime/InteropServices/ComTypes/IMoniker.cs
    startLine: 25
  assemblies:
  - System.Runtime.InteropServices
  namespace: System.Runtime.InteropServices.ComTypes
  summary: "\n<p>Provides the managed definition of the <strong>IMoniker</strong> interface, with COM functionality from <strong>IPersist</strong> and <strong>IPersistStream</strong>.</p>\n"
  syntax:
    content: >-
      [Guid("0000000f-0000-0000-C000-000000000046")]

      [InterfaceType(ComInterfaceType.InterfaceIsIUnknown)]

      [ComImport]

      public interface IMoniker
    content.vb: >-
      <Guid("0000000f-0000-0000-C000-000000000046")>

      <InterfaceType(ComInterfaceType.InterfaceIsIUnknown)>

      <ComImport>

      Public Interface IMoniker
  attributes:
  - type: System.Runtime.InteropServices.InterfaceTypeAttribute
    ctor: System.Runtime.InteropServices.InterfaceTypeAttribute.#ctor(System.Runtime.InteropServices.ComInterfaceType)
    arguments:
    - type: System.Runtime.InteropServices.ComInterfaceType
      value: 1
  modifiers.csharp:
  - public
  - interface
  modifiers.vb:
  - Public
  - Interface
- uid: System.Runtime.InteropServices.ComTypes.IMoniker.BindToObject(System.Runtime.InteropServices.ComTypes.IBindCtx,System.Runtime.InteropServices.ComTypes.IMoniker,System.Guid@,System.Object@)
  commentId: M:System.Runtime.InteropServices.ComTypes.IMoniker.BindToObject(System.Runtime.InteropServices.ComTypes.IBindCtx,System.Runtime.InteropServices.ComTypes.IMoniker,System.Guid@,System.Object@)
  id: BindToObject(System.Runtime.InteropServices.ComTypes.IBindCtx,System.Runtime.InteropServices.ComTypes.IMoniker,System.Guid@,System.Object@)
  parent: System.Runtime.InteropServices.ComTypes.IMoniker
  langs:
  - csharp
  - vb
  name: BindToObject(IBindCtx, IMoniker, ref Guid, out Object)
  nameWithType: IMoniker.BindToObject(IBindCtx, IMoniker, ref Guid, out Object)
  fullName: System.Runtime.InteropServices.ComTypes.IMoniker.BindToObject(System.Runtime.InteropServices.ComTypes.IBindCtx, System.Runtime.InteropServices.ComTypes.IMoniker, ref System.Guid, out System.Object)
  type: Method
  source:
    remote:
      path: src/mscorlib/src/System/Runtime/InteropServices/ComTypes/IMoniker.cs
      branch: master
      repo: https://github.com/dotnet/coreclr.git
    id: BindToObject
    path: src/mscorlib/src/System/Runtime/InteropServices/ComTypes/IMoniker.cs
    startLine: 41
  assemblies:
  - System.Runtime.InteropServices
  namespace: System.Runtime.InteropServices.ComTypes
  summary: "\n<p>Uses the moniker to bind to the object that it identifies.</p>\n"
  syntax:
    content: void BindToObject(IBindCtx pbc, IMoniker pmkToLeft, [In] ref Guid riidResult, [MarshalAs(UnmanagedType.Interface)] out object ppvResult)
    content.vb: Sub BindToObject(pbc As IBindCtx, pmkToLeft As IMoniker, ByRef riidResult As Guid, ByRef ppvResult As Object)
    parameters:
    - id: pbc
      type: System.Runtime.InteropServices.ComTypes.IBindCtx
      description: "\n<p>A reference to the <strong>IBindCtx</strong> interface on the bind context object used in this binding operation. </p>\n"
    - id: pmkToLeft
      type: System.Runtime.InteropServices.ComTypes.IMoniker
      description: "\n<p>A reference to the moniker to the left of the current moniker, if the moniker is part of a composite moniker. </p>\n"
    - id: riidResult
      type: System.Guid
      description: "\n<p>The interface identifier (IID) of the interface that the client intends to use to communicate with the object that the moniker identifies. </p>\n"
      attributes:
      - type: System.Runtime.InteropServices.InAttribute
        ctor: System.Runtime.InteropServices.InAttribute.#ctor
        arguments: []
    - id: ppvResult
      type: System.Object
      description: "\n<p>When this method returns, contains a reference to the interface requested by <em>riidResult</em>. This parameter is passed uninitialized.</p>\n"
      attributes:
      - type: System.Runtime.InteropServices.MarshalAsAttribute
        ctor: System.Runtime.InteropServices.MarshalAsAttribute.#ctor(System.Runtime.InteropServices.UnmanagedType)
        arguments:
        - type: System.Runtime.InteropServices.UnmanagedType
          value: 28
  nameWithType.vb: IMoniker.BindToObject(IBindCtx, IMoniker, ByRef Guid, ByRef Object)
  fullName.vb: System.Runtime.InteropServices.ComTypes.IMoniker.BindToObject(System.Runtime.InteropServices.ComTypes.IBindCtx, System.Runtime.InteropServices.ComTypes.IMoniker, ByRef System.Guid, ByRef System.Object)
  name.vb: BindToObject(IBindCtx, IMoniker, ByRef Guid, ByRef Object)
- uid: System.Runtime.InteropServices.ComTypes.IMoniker.BindToStorage(System.Runtime.InteropServices.ComTypes.IBindCtx,System.Runtime.InteropServices.ComTypes.IMoniker,System.Guid@,System.Object@)
  commentId: M:System.Runtime.InteropServices.ComTypes.IMoniker.BindToStorage(System.Runtime.InteropServices.ComTypes.IBindCtx,System.Runtime.InteropServices.ComTypes.IMoniker,System.Guid@,System.Object@)
  id: BindToStorage(System.Runtime.InteropServices.ComTypes.IBindCtx,System.Runtime.InteropServices.ComTypes.IMoniker,System.Guid@,System.Object@)
  parent: System.Runtime.InteropServices.ComTypes.IMoniker
  langs:
  - csharp
  - vb
  name: BindToStorage(IBindCtx, IMoniker, ref Guid, out Object)
  nameWithType: IMoniker.BindToStorage(IBindCtx, IMoniker, ref Guid, out Object)
  fullName: System.Runtime.InteropServices.ComTypes.IMoniker.BindToStorage(System.Runtime.InteropServices.ComTypes.IBindCtx, System.Runtime.InteropServices.ComTypes.IMoniker, ref System.Guid, out System.Object)
  type: Method
  source:
    remote:
      path: src/mscorlib/src/System/Runtime/InteropServices/ComTypes/IMoniker.cs
      branch: master
      repo: https://github.com/dotnet/coreclr.git
    id: BindToStorage
    path: src/mscorlib/src/System/Runtime/InteropServices/ComTypes/IMoniker.cs
    startLine: 42
  assemblies:
  - System.Runtime.InteropServices
  namespace: System.Runtime.InteropServices.ComTypes
  summary: "\n<p>Retrieves an interface pointer to the storage that contains the object identified by the moniker.</p>\n"
  syntax:
    content: void BindToStorage(IBindCtx pbc, IMoniker pmkToLeft, [In] ref Guid riid, [MarshalAs(UnmanagedType.Interface)] out object ppvObj)
    content.vb: Sub BindToStorage(pbc As IBindCtx, pmkToLeft As IMoniker, ByRef riid As Guid, ByRef ppvObj As Object)
    parameters:
    - id: pbc
      type: System.Runtime.InteropServices.ComTypes.IBindCtx
      description: "\n<p>A reference to the <strong>IBindCtx</strong> interface on the bind context object used during this binding operation. </p>\n"
    - id: pmkToLeft
      type: System.Runtime.InteropServices.ComTypes.IMoniker
      description: "\n<p>A reference to the moniker to the left of the current moniker, if the moniker is part of a composite moniker. </p>\n"
    - id: riid
      type: System.Guid
      description: "\n<p>The interface identifier (IID) of the storage interface requested. </p>\n"
      attributes:
      - type: System.Runtime.InteropServices.InAttribute
        ctor: System.Runtime.InteropServices.InAttribute.#ctor
        arguments: []
    - id: ppvObj
      type: System.Object
      description: "\n<p>When this method returns, contains a reference to the interface requested by <em>riid</em>. This parameter is passed uninitialized.</p>\n"
      attributes:
      - type: System.Runtime.InteropServices.MarshalAsAttribute
        ctor: System.Runtime.InteropServices.MarshalAsAttribute.#ctor(System.Runtime.InteropServices.UnmanagedType)
        arguments:
        - type: System.Runtime.InteropServices.UnmanagedType
          value: 28
  nameWithType.vb: IMoniker.BindToStorage(IBindCtx, IMoniker, ByRef Guid, ByRef Object)
  fullName.vb: System.Runtime.InteropServices.ComTypes.IMoniker.BindToStorage(System.Runtime.InteropServices.ComTypes.IBindCtx, System.Runtime.InteropServices.ComTypes.IMoniker, ByRef System.Guid, ByRef System.Object)
  name.vb: BindToStorage(IBindCtx, IMoniker, ByRef Guid, ByRef Object)
- uid: System.Runtime.InteropServices.ComTypes.IMoniker.CommonPrefixWith(System.Runtime.InteropServices.ComTypes.IMoniker,System.Runtime.InteropServices.ComTypes.IMoniker@)
  commentId: M:System.Runtime.InteropServices.ComTypes.IMoniker.CommonPrefixWith(System.Runtime.InteropServices.ComTypes.IMoniker,System.Runtime.InteropServices.ComTypes.IMoniker@)
  id: CommonPrefixWith(System.Runtime.InteropServices.ComTypes.IMoniker,System.Runtime.InteropServices.ComTypes.IMoniker@)
  parent: System.Runtime.InteropServices.ComTypes.IMoniker
  langs:
  - csharp
  - vb
  name: CommonPrefixWith(IMoniker, out IMoniker)
  nameWithType: IMoniker.CommonPrefixWith(IMoniker, out IMoniker)
  fullName: System.Runtime.InteropServices.ComTypes.IMoniker.CommonPrefixWith(System.Runtime.InteropServices.ComTypes.IMoniker, out System.Runtime.InteropServices.ComTypes.IMoniker)
  type: Method
  source:
    remote:
      path: src/mscorlib/src/System/Runtime/InteropServices/ComTypes/IMoniker.cs
      branch: master
      repo: https://github.com/dotnet/coreclr.git
    id: CommonPrefixWith
    path: src/mscorlib/src/System/Runtime/InteropServices/ComTypes/IMoniker.cs
    startLine: 53
  assemblies:
  - System.Runtime.InteropServices
  namespace: System.Runtime.InteropServices.ComTypes
  summary: "\n<p>Creates a new moniker based on the common prefix that this moniker shares with another moniker.</p>\n"
  syntax:
    content: void CommonPrefixWith(IMoniker pmkOther, out IMoniker ppmkPrefix)
    content.vb: Sub CommonPrefixWith(pmkOther As IMoniker, ByRef ppmkPrefix As IMoniker)
    parameters:
    - id: pmkOther
      type: System.Runtime.InteropServices.ComTypes.IMoniker
      description: "\n<p>A reference to the <strong>IMoniker</strong> interface on another moniker to compare with the current moniker for a common prefix. </p>\n"
    - id: ppmkPrefix
      type: System.Runtime.InteropServices.ComTypes.IMoniker
      description: "\n<p>When this method returns, contains the moniker that is the common prefix of the current moniker and <em>pmkOther</em>. This parameter is passed uninitialized.</p>\n"
  nameWithType.vb: IMoniker.CommonPrefixWith(IMoniker, ByRef IMoniker)
  fullName.vb: System.Runtime.InteropServices.ComTypes.IMoniker.CommonPrefixWith(System.Runtime.InteropServices.ComTypes.IMoniker, ByRef System.Runtime.InteropServices.ComTypes.IMoniker)
  name.vb: CommonPrefixWith(IMoniker, ByRef IMoniker)
- uid: System.Runtime.InteropServices.ComTypes.IMoniker.ComposeWith(System.Runtime.InteropServices.ComTypes.IMoniker,System.Boolean,System.Runtime.InteropServices.ComTypes.IMoniker@)
  commentId: M:System.Runtime.InteropServices.ComTypes.IMoniker.ComposeWith(System.Runtime.InteropServices.ComTypes.IMoniker,System.Boolean,System.Runtime.InteropServices.ComTypes.IMoniker@)
  id: ComposeWith(System.Runtime.InteropServices.ComTypes.IMoniker,System.Boolean,System.Runtime.InteropServices.ComTypes.IMoniker@)
  parent: System.Runtime.InteropServices.ComTypes.IMoniker
  langs:
  - csharp
  - vb
  name: ComposeWith(IMoniker, Boolean, out IMoniker)
  nameWithType: IMoniker.ComposeWith(IMoniker, Boolean, out IMoniker)
  fullName: System.Runtime.InteropServices.ComTypes.IMoniker.ComposeWith(System.Runtime.InteropServices.ComTypes.IMoniker, System.Boolean, out System.Runtime.InteropServices.ComTypes.IMoniker)
  type: Method
  source:
    remote:
      path: src/mscorlib/src/System/Runtime/InteropServices/ComTypes/IMoniker.cs
      branch: master
      repo: https://github.com/dotnet/coreclr.git
    id: ComposeWith
    path: src/mscorlib/src/System/Runtime/InteropServices/ComTypes/IMoniker.cs
    startLine: 44
  assemblies:
  - System.Runtime.InteropServices
  namespace: System.Runtime.InteropServices.ComTypes
  summary: "\n<p>Combines the current moniker with another moniker, creating a new composite moniker.</p>\n"
  syntax:
    content: void ComposeWith(IMoniker pmkRight, [MarshalAs(UnmanagedType.Bool)] bool fOnlyIfNotGeneric, out IMoniker ppmkComposite)
    content.vb: Sub ComposeWith(pmkRight As IMoniker, fOnlyIfNotGeneric As Boolean, ByRef ppmkComposite As IMoniker)
    parameters:
    - id: pmkRight
      type: System.Runtime.InteropServices.ComTypes.IMoniker
      description: "\n<p>A reference to the <strong>IMoniker</strong> interface on a moniker to append to the end of the current moniker. </p>\n"
    - id: fOnlyIfNotGeneric
      type: System.Boolean
      description: "\n<p>\n<strong>true</strong> to indicate that the caller requires a nongeneric composition. The operation proceeds only if <em>pmkRight</em> is a moniker class that the current moniker can combine with in some way other than forming a generic composite. <strong>false</strong> to indicate that the method can create a generic composite if necessary. </p>\n"
      attributes:
      - type: System.Runtime.InteropServices.MarshalAsAttribute
        ctor: System.Runtime.InteropServices.MarshalAsAttribute.#ctor(System.Runtime.InteropServices.UnmanagedType)
        arguments:
        - type: System.Runtime.InteropServices.UnmanagedType
          value: 2
    - id: ppmkComposite
      type: System.Runtime.InteropServices.ComTypes.IMoniker
      description: "\n<p>When this method returns, contains a reference to the resulting composite moniker. This parameter is passed uninitialized.</p>\n"
  nameWithType.vb: IMoniker.ComposeWith(IMoniker, Boolean, ByRef IMoniker)
  fullName.vb: System.Runtime.InteropServices.ComTypes.IMoniker.ComposeWith(System.Runtime.InteropServices.ComTypes.IMoniker, System.Boolean, ByRef System.Runtime.InteropServices.ComTypes.IMoniker)
  name.vb: ComposeWith(IMoniker, Boolean, ByRef IMoniker)
- uid: System.Runtime.InteropServices.ComTypes.IMoniker.Enum(System.Boolean,System.Runtime.InteropServices.ComTypes.IEnumMoniker@)
  commentId: M:System.Runtime.InteropServices.ComTypes.IMoniker.Enum(System.Boolean,System.Runtime.InteropServices.ComTypes.IEnumMoniker@)
  id: Enum(System.Boolean,System.Runtime.InteropServices.ComTypes.IEnumMoniker@)
  parent: System.Runtime.InteropServices.ComTypes.IMoniker
  langs:
  - csharp
  - vb
  name: Enum(Boolean, out IEnumMoniker)
  nameWithType: IMoniker.Enum(Boolean, out IEnumMoniker)
  fullName: System.Runtime.InteropServices.ComTypes.IMoniker.Enum(System.Boolean, out System.Runtime.InteropServices.ComTypes.IEnumMoniker)
  type: Method
  source:
    remote:
      path: src/mscorlib/src/System/Runtime/InteropServices/ComTypes/IMoniker.cs
      branch: master
      repo: https://github.com/dotnet/coreclr.git
    id: Enum
    path: src/mscorlib/src/System/Runtime/InteropServices/ComTypes/IMoniker.cs
    startLine: 45
  assemblies:
  - System.Runtime.InteropServices
  namespace: System.Runtime.InteropServices.ComTypes
  summary: "\n<p>Supplies a pointer to an enumerator that can enumerate the components of a composite moniker.</p>\n"
  syntax:
    content: void Enum([MarshalAs(UnmanagedType.Bool)] bool fForward, out IEnumMoniker ppenumMoniker)
    content.vb: Sub Enum(fForward As Boolean, ByRef ppenumMoniker As IEnumMoniker)
    parameters:
    - id: fForward
      type: System.Boolean
      description: "\n<p>\n<strong>true</strong> to enumerate the monikers from left to right. <strong>false</strong> to enumerate from right to left. </p>\n"
      attributes:
      - type: System.Runtime.InteropServices.MarshalAsAttribute
        ctor: System.Runtime.InteropServices.MarshalAsAttribute.#ctor(System.Runtime.InteropServices.UnmanagedType)
        arguments:
        - type: System.Runtime.InteropServices.UnmanagedType
          value: 2
    - id: ppenumMoniker
      type: System.Runtime.InteropServices.ComTypes.IEnumMoniker
      description: "\n<p>When this method returns, contains a reference to the enumerator object for the moniker. This parameter is passed uninitialized.</p>\n"
  nameWithType.vb: IMoniker.Enum(Boolean, ByRef IEnumMoniker)
  fullName.vb: System.Runtime.InteropServices.ComTypes.IMoniker.Enum(System.Boolean, ByRef System.Runtime.InteropServices.ComTypes.IEnumMoniker)
  name.vb: Enum(Boolean, ByRef IEnumMoniker)
- uid: System.Runtime.InteropServices.ComTypes.IMoniker.GetClassID(System.Guid@)
  commentId: M:System.Runtime.InteropServices.ComTypes.IMoniker.GetClassID(System.Guid@)
  id: GetClassID(System.Guid@)
  parent: System.Runtime.InteropServices.ComTypes.IMoniker
  langs:
  - csharp
  - vb
  name: GetClassID(out Guid)
  nameWithType: IMoniker.GetClassID(out Guid)
  fullName: System.Runtime.InteropServices.ComTypes.IMoniker.GetClassID(out System.Guid)
  type: Method
  source:
    remote:
      path: src/mscorlib/src/System/Runtime/InteropServices/ComTypes/IMoniker.cs
      branch: master
      repo: https://github.com/dotnet/coreclr.git
    id: GetClassID
    path: src/mscorlib/src/System/Runtime/InteropServices/ComTypes/IMoniker.cs
    startLine: 31
  assemblies:
  - System.Runtime.InteropServices
  namespace: System.Runtime.InteropServices.ComTypes
  summary: "\n<p>Retrieves the class identifier (CLSID) of an object.</p>\n"
  syntax:
    content: void GetClassID(out Guid pClassID)
    content.vb: Sub GetClassID(ByRef pClassID As Guid)
    parameters:
    - id: pClassID
      type: System.Guid
      description: "\n<p>When this method returns, contains the CLSID. This parameter is passed uninitialized.</p>\n"
  nameWithType.vb: IMoniker.GetClassID(ByRef Guid)
  fullName.vb: System.Runtime.InteropServices.ComTypes.IMoniker.GetClassID(ByRef System.Guid)
  name.vb: GetClassID(ByRef Guid)
- uid: System.Runtime.InteropServices.ComTypes.IMoniker.GetDisplayName(System.Runtime.InteropServices.ComTypes.IBindCtx,System.Runtime.InteropServices.ComTypes.IMoniker,System.String@)
  commentId: M:System.Runtime.InteropServices.ComTypes.IMoniker.GetDisplayName(System.Runtime.InteropServices.ComTypes.IBindCtx,System.Runtime.InteropServices.ComTypes.IMoniker,System.String@)
  id: GetDisplayName(System.Runtime.InteropServices.ComTypes.IBindCtx,System.Runtime.InteropServices.ComTypes.IMoniker,System.String@)
  parent: System.Runtime.InteropServices.ComTypes.IMoniker
  langs:
  - csharp
  - vb
  name: GetDisplayName(IBindCtx, IMoniker, out String)
  nameWithType: IMoniker.GetDisplayName(IBindCtx, IMoniker, out String)
  fullName: System.Runtime.InteropServices.ComTypes.IMoniker.GetDisplayName(System.Runtime.InteropServices.ComTypes.IBindCtx, System.Runtime.InteropServices.ComTypes.IMoniker, out System.String)
  type: Method
  source:
    remote:
      path: src/mscorlib/src/System/Runtime/InteropServices/ComTypes/IMoniker.cs
      branch: master
      repo: https://github.com/dotnet/coreclr.git
    id: GetDisplayName
    path: src/mscorlib/src/System/Runtime/InteropServices/ComTypes/IMoniker.cs
    startLine: 55
  assemblies:
  - System.Runtime.InteropServices
  namespace: System.Runtime.InteropServices.ComTypes
  summary: "\n<p>Gets the display name, which is a user-readable representation of the current moniker.</p>\n"
  syntax:
    content: void GetDisplayName(IBindCtx pbc, IMoniker pmkToLeft, [MarshalAs(UnmanagedType.LPWStr)] out string ppszDisplayName)
    content.vb: Sub GetDisplayName(pbc As IBindCtx, pmkToLeft As IMoniker, ByRef ppszDisplayName As String)
    parameters:
    - id: pbc
      type: System.Runtime.InteropServices.ComTypes.IBindCtx
      description: "\n<p>A reference to the bind context to use in this operation. </p>\n"
    - id: pmkToLeft
      type: System.Runtime.InteropServices.ComTypes.IMoniker
      description: "\n<p>A reference to the moniker to the left of the current moniker, if the moniker is part of a composite moniker. </p>\n"
    - id: ppszDisplayName
      type: System.String
      description: "\n<p>When this method returns, contains the display name string. This parameter is passed uninitialized.</p>\n"
      attributes:
      - type: System.Runtime.InteropServices.MarshalAsAttribute
        ctor: System.Runtime.InteropServices.MarshalAsAttribute.#ctor(System.Runtime.InteropServices.UnmanagedType)
        arguments:
        - type: System.Runtime.InteropServices.UnmanagedType
          value: 21
  nameWithType.vb: IMoniker.GetDisplayName(IBindCtx, IMoniker, ByRef String)
  fullName.vb: System.Runtime.InteropServices.ComTypes.IMoniker.GetDisplayName(System.Runtime.InteropServices.ComTypes.IBindCtx, System.Runtime.InteropServices.ComTypes.IMoniker, ByRef System.String)
  name.vb: GetDisplayName(IBindCtx, IMoniker, ByRef String)
- uid: System.Runtime.InteropServices.ComTypes.IMoniker.GetSizeMax(System.Int64@)
  commentId: M:System.Runtime.InteropServices.ComTypes.IMoniker.GetSizeMax(System.Int64@)
  id: GetSizeMax(System.Int64@)
  parent: System.Runtime.InteropServices.ComTypes.IMoniker
  langs:
  - csharp
  - vb
  name: GetSizeMax(out Int64)
  nameWithType: IMoniker.GetSizeMax(out Int64)
  fullName: System.Runtime.InteropServices.ComTypes.IMoniker.GetSizeMax(out System.Int64)
  type: Method
  source:
    remote:
      path: src/mscorlib/src/System/Runtime/InteropServices/ComTypes/IMoniker.cs
      branch: master
      repo: https://github.com/dotnet/coreclr.git
    id: GetSizeMax
    path: src/mscorlib/src/System/Runtime/InteropServices/ComTypes/IMoniker.cs
    startLine: 38
  assemblies:
  - System.Runtime.InteropServices
  namespace: System.Runtime.InteropServices.ComTypes
  summary: "\n<p>Returns the size, in bytes, of the stream needed to save the object.</p>\n"
  syntax:
    content: void GetSizeMax(out long pcbSize)
    content.vb: Sub GetSizeMax(ByRef pcbSize As Long)
    parameters:
    - id: pcbSize
      type: System.Int64
      description: "\n<p>When this method returns, contains a <strong>long</strong> value indicating the size, in bytes, of the stream needed to save this object. This parameter is passed uninitialized.</p>\n"
  nameWithType.vb: IMoniker.GetSizeMax(ByRef Int64)
  fullName.vb: System.Runtime.InteropServices.ComTypes.IMoniker.GetSizeMax(ByRef System.Int64)
  name.vb: GetSizeMax(ByRef Int64)
- uid: System.Runtime.InteropServices.ComTypes.IMoniker.GetTimeOfLastChange(System.Runtime.InteropServices.ComTypes.IBindCtx,System.Runtime.InteropServices.ComTypes.IMoniker,System.Runtime.InteropServices.ComTypes.FILETIME@)
  commentId: M:System.Runtime.InteropServices.ComTypes.IMoniker.GetTimeOfLastChange(System.Runtime.InteropServices.ComTypes.IBindCtx,System.Runtime.InteropServices.ComTypes.IMoniker,System.Runtime.InteropServices.ComTypes.FILETIME@)
  id: GetTimeOfLastChange(System.Runtime.InteropServices.ComTypes.IBindCtx,System.Runtime.InteropServices.ComTypes.IMoniker,System.Runtime.InteropServices.ComTypes.FILETIME@)
  parent: System.Runtime.InteropServices.ComTypes.IMoniker
  langs:
  - csharp
  - vb
  name: GetTimeOfLastChange(IBindCtx, IMoniker, out FILETIME)
  nameWithType: IMoniker.GetTimeOfLastChange(IBindCtx, IMoniker, out FILETIME)
  fullName: System.Runtime.InteropServices.ComTypes.IMoniker.GetTimeOfLastChange(System.Runtime.InteropServices.ComTypes.IBindCtx, System.Runtime.InteropServices.ComTypes.IMoniker, out System.Runtime.InteropServices.ComTypes.FILETIME)
  type: Method
  source:
    remote:
      path: src/mscorlib/src/System/Runtime/InteropServices/ComTypes/IMoniker.cs
      branch: master
      repo: https://github.com/dotnet/coreclr.git
    id: GetTimeOfLastChange
    path: src/mscorlib/src/System/Runtime/InteropServices/ComTypes/IMoniker.cs
    startLine: 51
  assemblies:
  - System.Runtime.InteropServices
  namespace: System.Runtime.InteropServices.ComTypes
  summary: "\n<p>Provides a number representing the time that the object identified by the current moniker was last changed.</p>\n"
  syntax:
    content: void GetTimeOfLastChange(IBindCtx pbc, IMoniker pmkToLeft, out FILETIME pFileTime)
    content.vb: Sub GetTimeOfLastChange(pbc As IBindCtx, pmkToLeft As IMoniker, ByRef pFileTime As FILETIME)
    parameters:
    - id: pbc
      type: System.Runtime.InteropServices.ComTypes.IBindCtx
      description: "\n<p>A reference to the bind context to use in this binding operation. </p>\n"
    - id: pmkToLeft
      type: System.Runtime.InteropServices.ComTypes.IMoniker
      description: "\n<p>A reference to the moniker to the left of the current moniker, if the moniker is part of a composite moniker. </p>\n"
    - id: pFileTime
      type: System.Runtime.InteropServices.ComTypes.FILETIME
      description: "\n<p>When this method returns, contains the time of the last change. This parameter is passed uninitialized.</p>\n"
  nameWithType.vb: IMoniker.GetTimeOfLastChange(IBindCtx, IMoniker, ByRef FILETIME)
  fullName.vb: System.Runtime.InteropServices.ComTypes.IMoniker.GetTimeOfLastChange(System.Runtime.InteropServices.ComTypes.IBindCtx, System.Runtime.InteropServices.ComTypes.IMoniker, ByRef System.Runtime.InteropServices.ComTypes.FILETIME)
  name.vb: GetTimeOfLastChange(IBindCtx, IMoniker, ByRef FILETIME)
- uid: System.Runtime.InteropServices.ComTypes.IMoniker.Hash(System.Int32@)
  commentId: M:System.Runtime.InteropServices.ComTypes.IMoniker.Hash(System.Int32@)
  id: Hash(System.Int32@)
  parent: System.Runtime.InteropServices.ComTypes.IMoniker
  langs:
  - csharp
  - vb
  name: Hash(out Int32)
  nameWithType: IMoniker.Hash(out Int32)
  fullName: System.Runtime.InteropServices.ComTypes.IMoniker.Hash(out System.Int32)
  type: Method
  source:
    remote:
      path: src/mscorlib/src/System/Runtime/InteropServices/ComTypes/IMoniker.cs
      branch: master
      repo: https://github.com/dotnet/coreclr.git
    id: Hash
    path: src/mscorlib/src/System/Runtime/InteropServices/ComTypes/IMoniker.cs
    startLine: 48
  assemblies:
  - System.Runtime.InteropServices
  namespace: System.Runtime.InteropServices.ComTypes
  summary: "\n<p>Calculates a 32-bit integer using the internal state of the moniker.</p>\n"
  syntax:
    content: void Hash(out int pdwHash)
    content.vb: Sub Hash(ByRef pdwHash As Integer)
    parameters:
    - id: pdwHash
      type: System.Int32
      description: "\n<p>When this method returns, contains the hash value for this moniker. This parameter is passed uninitialized.</p>\n"
  nameWithType.vb: IMoniker.Hash(ByRef Int32)
  fullName.vb: System.Runtime.InteropServices.ComTypes.IMoniker.Hash(ByRef System.Int32)
  name.vb: Hash(ByRef Int32)
- uid: System.Runtime.InteropServices.ComTypes.IMoniker.Inverse(System.Runtime.InteropServices.ComTypes.IMoniker@)
  commentId: M:System.Runtime.InteropServices.ComTypes.IMoniker.Inverse(System.Runtime.InteropServices.ComTypes.IMoniker@)
  id: Inverse(System.Runtime.InteropServices.ComTypes.IMoniker@)
  parent: System.Runtime.InteropServices.ComTypes.IMoniker
  langs:
  - csharp
  - vb
  name: Inverse(out IMoniker)
  nameWithType: IMoniker.Inverse(out IMoniker)
  fullName: System.Runtime.InteropServices.ComTypes.IMoniker.Inverse(out System.Runtime.InteropServices.ComTypes.IMoniker)
  type: Method
  source:
    remote:
      path: src/mscorlib/src/System/Runtime/InteropServices/ComTypes/IMoniker.cs
      branch: master
      repo: https://github.com/dotnet/coreclr.git
    id: Inverse
    path: src/mscorlib/src/System/Runtime/InteropServices/ComTypes/IMoniker.cs
    startLine: 52
  assemblies:
  - System.Runtime.InteropServices
  namespace: System.Runtime.InteropServices.ComTypes
  summary: "\n<p>Provides a moniker that, when composed to the right of the current moniker or one of similar structure, composes to nothing.</p>\n"
  syntax:
    content: void Inverse(out IMoniker ppmk)
    content.vb: Sub Inverse(ByRef ppmk As IMoniker)
    parameters:
    - id: ppmk
      type: System.Runtime.InteropServices.ComTypes.IMoniker
      description: "\n<p>When this method returns, contains a moniker that is the inverse of the current moniker. This parameter is passed uninitialized.</p>\n"
  nameWithType.vb: IMoniker.Inverse(ByRef IMoniker)
  fullName.vb: System.Runtime.InteropServices.ComTypes.IMoniker.Inverse(ByRef System.Runtime.InteropServices.ComTypes.IMoniker)
  name.vb: Inverse(ByRef IMoniker)
- uid: System.Runtime.InteropServices.ComTypes.IMoniker.IsDirty
  commentId: M:System.Runtime.InteropServices.ComTypes.IMoniker.IsDirty
  id: IsDirty
  parent: System.Runtime.InteropServices.ComTypes.IMoniker
  langs:
  - csharp
  - vb
  name: IsDirty()
  nameWithType: IMoniker.IsDirty()
  fullName: System.Runtime.InteropServices.ComTypes.IMoniker.IsDirty()
  type: Method
  source:
    remote:
      path: src/mscorlib/src/System/Runtime/InteropServices/ComTypes/IMoniker.cs
      branch: master
      repo: https://github.com/dotnet/coreclr.git
    id: IsDirty
    path: src/mscorlib/src/System/Runtime/InteropServices/ComTypes/IMoniker.cs
    startLine: 34
  assemblies:
  - System.Runtime.InteropServices
  namespace: System.Runtime.InteropServices.ComTypes
  summary: "\n<p>Checks the object for changes since it was last saved.</p>\n"
  syntax:
    content: >-
      [PreserveSig]

      int IsDirty()
    content.vb: >-
      <PreserveSig>

      Function IsDirty As Integer
    return:
      type: System.Int32
      description: "\n<p>An <strong>S_OK</strong><strong>HRESULT</strong> value if the object has changed; otherwise, an <strong>S_FALSE</strong><strong>HRESULT</strong> value.</p>\n"
- uid: System.Runtime.InteropServices.ComTypes.IMoniker.IsEqual(System.Runtime.InteropServices.ComTypes.IMoniker)
  commentId: M:System.Runtime.InteropServices.ComTypes.IMoniker.IsEqual(System.Runtime.InteropServices.ComTypes.IMoniker)
  id: IsEqual(System.Runtime.InteropServices.ComTypes.IMoniker)
  parent: System.Runtime.InteropServices.ComTypes.IMoniker
  langs:
  - csharp
  - vb
  name: IsEqual(IMoniker)
  nameWithType: IMoniker.IsEqual(IMoniker)
  fullName: System.Runtime.InteropServices.ComTypes.IMoniker.IsEqual(System.Runtime.InteropServices.ComTypes.IMoniker)
  type: Method
  source:
    remote:
      path: src/mscorlib/src/System/Runtime/InteropServices/ComTypes/IMoniker.cs
      branch: master
      repo: https://github.com/dotnet/coreclr.git
    id: IsEqual
    path: src/mscorlib/src/System/Runtime/InteropServices/ComTypes/IMoniker.cs
    startLine: 46
  assemblies:
  - System.Runtime.InteropServices
  namespace: System.Runtime.InteropServices.ComTypes
  summary: "\n<p>Compares the current moniker with a specified moniker and indicates whether they are identical.</p>\n"
  syntax:
    content: >-
      [PreserveSig]

      int IsEqual(IMoniker pmkOtherMoniker)
    content.vb: >-
      <PreserveSig>

      Function IsEqual(pmkOtherMoniker As IMoniker) As Integer
    parameters:
    - id: pmkOtherMoniker
      type: System.Runtime.InteropServices.ComTypes.IMoniker
      description: "\n<p>A reference to the moniker to use for comparison. </p>\n"
    return:
      type: System.Int32
      description: "\n<p>An <strong>S_OK</strong><strong>HRESULT</strong> value if the monikers are identical; otherwise, an <strong>S_FALSE</strong><strong>HRESULT</strong> value.  </p>\n"
- uid: System.Runtime.InteropServices.ComTypes.IMoniker.IsRunning(System.Runtime.InteropServices.ComTypes.IBindCtx,System.Runtime.InteropServices.ComTypes.IMoniker,System.Runtime.InteropServices.ComTypes.IMoniker)
  commentId: M:System.Runtime.InteropServices.ComTypes.IMoniker.IsRunning(System.Runtime.InteropServices.ComTypes.IBindCtx,System.Runtime.InteropServices.ComTypes.IMoniker,System.Runtime.InteropServices.ComTypes.IMoniker)
  id: IsRunning(System.Runtime.InteropServices.ComTypes.IBindCtx,System.Runtime.InteropServices.ComTypes.IMoniker,System.Runtime.InteropServices.ComTypes.IMoniker)
  parent: System.Runtime.InteropServices.ComTypes.IMoniker
  langs:
  - csharp
  - vb
  name: IsRunning(IBindCtx, IMoniker, IMoniker)
  nameWithType: IMoniker.IsRunning(IBindCtx, IMoniker, IMoniker)
  fullName: System.Runtime.InteropServices.ComTypes.IMoniker.IsRunning(System.Runtime.InteropServices.ComTypes.IBindCtx, System.Runtime.InteropServices.ComTypes.IMoniker, System.Runtime.InteropServices.ComTypes.IMoniker)
  type: Method
  source:
    remote:
      path: src/mscorlib/src/System/Runtime/InteropServices/ComTypes/IMoniker.cs
      branch: master
      repo: https://github.com/dotnet/coreclr.git
    id: IsRunning
    path: src/mscorlib/src/System/Runtime/InteropServices/ComTypes/IMoniker.cs
    startLine: 49
  assemblies:
  - System.Runtime.InteropServices
  namespace: System.Runtime.InteropServices.ComTypes
  summary: "\n<p>Determines whether the object that is identified by the current moniker is currently loaded and running.</p>\n"
  syntax:
    content: >-
      [PreserveSig]

      int IsRunning(IBindCtx pbc, IMoniker pmkToLeft, IMoniker pmkNewlyRunning)
    content.vb: >-
      <PreserveSig>

      Function IsRunning(pbc As IBindCtx, pmkToLeft As IMoniker, pmkNewlyRunning As IMoniker) As Integer
    parameters:
    - id: pbc
      type: System.Runtime.InteropServices.ComTypes.IBindCtx
      description: "\n<p>A reference to the bind context to use in this binding operation. </p>\n"
    - id: pmkToLeft
      type: System.Runtime.InteropServices.ComTypes.IMoniker
      description: "\n<p>A reference to the moniker to the left of the current moniker if the current moniker is part of a composite. </p>\n"
    - id: pmkNewlyRunning
      type: System.Runtime.InteropServices.ComTypes.IMoniker
      description: "\n<p>A reference to the moniker most recently added to the Running Object Table (ROT). </p>\n"
    return:
      type: System.Int32
      description: "\n<p>An <strong>S_OK</strong><strong>HRESULT</strong> value if the moniker is running; an <strong>S_FALSE</strong><strong>HRESULT</strong> value if the moniker is not running; or an <strong>E_UNEXPECTED</strong><strong>HRESULT</strong> value.</p>\n"
- uid: System.Runtime.InteropServices.ComTypes.IMoniker.IsSystemMoniker(System.Int32@)
  commentId: M:System.Runtime.InteropServices.ComTypes.IMoniker.IsSystemMoniker(System.Int32@)
  id: IsSystemMoniker(System.Int32@)
  parent: System.Runtime.InteropServices.ComTypes.IMoniker
  langs:
  - csharp
  - vb
  name: IsSystemMoniker(out Int32)
  nameWithType: IMoniker.IsSystemMoniker(out Int32)
  fullName: System.Runtime.InteropServices.ComTypes.IMoniker.IsSystemMoniker(out System.Int32)
  type: Method
  source:
    remote:
      path: src/mscorlib/src/System/Runtime/InteropServices/ComTypes/IMoniker.cs
      branch: master
      repo: https://github.com/dotnet/coreclr.git
    id: IsSystemMoniker
    path: src/mscorlib/src/System/Runtime/InteropServices/ComTypes/IMoniker.cs
    startLine: 57
  assemblies:
  - System.Runtime.InteropServices
  namespace: System.Runtime.InteropServices.ComTypes
  summary: "\n<p>Indicates whether this moniker is of one of the system-supplied moniker classes.</p>\n"
  syntax:
    content: >-
      [PreserveSig]

      int IsSystemMoniker(out int pdwMksys)
    content.vb: >-
      <PreserveSig>

      Function IsSystemMoniker(ByRef pdwMksys As Integer) As Integer
    parameters:
    - id: pdwMksys
      type: System.Int32
      description: "\n<p>When this method returns, contains a pointer to an integer that is one of the values from the <strong>MKSYS</strong> enumeration, and refers to one of the COM moniker classes. This parameter is passed uninitialized.</p>\n"
    return:
      type: System.Int32
      description: "\n<p>An <strong>S_OK</strong><strong>HRESULT</strong> value if the moniker is a system moniker; otherwise, an <strong>S_FALSE</strong><strong>HRESULT</strong> value.</p>\n"
  nameWithType.vb: IMoniker.IsSystemMoniker(ByRef Int32)
  fullName.vb: System.Runtime.InteropServices.ComTypes.IMoniker.IsSystemMoniker(ByRef System.Int32)
  name.vb: IsSystemMoniker(ByRef Int32)
- uid: System.Runtime.InteropServices.ComTypes.IMoniker.Load(System.Runtime.InteropServices.ComTypes.IStream)
  commentId: M:System.Runtime.InteropServices.ComTypes.IMoniker.Load(System.Runtime.InteropServices.ComTypes.IStream)
  id: Load(System.Runtime.InteropServices.ComTypes.IStream)
  parent: System.Runtime.InteropServices.ComTypes.IMoniker
  langs:
  - csharp
  - vb
  name: Load(IStream)
  nameWithType: IMoniker.Load(IStream)
  fullName: System.Runtime.InteropServices.ComTypes.IMoniker.Load(System.Runtime.InteropServices.ComTypes.IStream)
  type: Method
  source:
    remote:
      path: src/mscorlib/src/System/Runtime/InteropServices/ComTypes/IMoniker.cs
      branch: master
      repo: https://github.com/dotnet/coreclr.git
    id: Load
    path: src/mscorlib/src/System/Runtime/InteropServices/ComTypes/IMoniker.cs
    startLine: 36
  assemblies:
  - System.Runtime.InteropServices
  namespace: System.Runtime.InteropServices.ComTypes
  summary: "\n<p>Initializes an object from the stream where it was previously saved.</p>\n"
  syntax:
    content: void Load(IStream pStm)
    content.vb: Sub Load(pStm As IStream)
    parameters:
    - id: pStm
      type: System.Runtime.InteropServices.ComTypes.IStream
      description: "\n<p>The stream that the object is loaded from. </p>\n"
- uid: System.Runtime.InteropServices.ComTypes.IMoniker.ParseDisplayName(System.Runtime.InteropServices.ComTypes.IBindCtx,System.Runtime.InteropServices.ComTypes.IMoniker,System.String,System.Int32@,System.Runtime.InteropServices.ComTypes.IMoniker@)
  commentId: M:System.Runtime.InteropServices.ComTypes.IMoniker.ParseDisplayName(System.Runtime.InteropServices.ComTypes.IBindCtx,System.Runtime.InteropServices.ComTypes.IMoniker,System.String,System.Int32@,System.Runtime.InteropServices.ComTypes.IMoniker@)
  id: ParseDisplayName(System.Runtime.InteropServices.ComTypes.IBindCtx,System.Runtime.InteropServices.ComTypes.IMoniker,System.String,System.Int32@,System.Runtime.InteropServices.ComTypes.IMoniker@)
  parent: System.Runtime.InteropServices.ComTypes.IMoniker
  langs:
  - csharp
  - vb
  name: ParseDisplayName(IBindCtx, IMoniker, String, out Int32, out IMoniker)
  nameWithType: IMoniker.ParseDisplayName(IBindCtx, IMoniker, String, out Int32, out IMoniker)
  fullName: System.Runtime.InteropServices.ComTypes.IMoniker.ParseDisplayName(System.Runtime.InteropServices.ComTypes.IBindCtx, System.Runtime.InteropServices.ComTypes.IMoniker, System.String, out System.Int32, out System.Runtime.InteropServices.ComTypes.IMoniker)
  type: Method
  source:
    remote:
      path: src/mscorlib/src/System/Runtime/InteropServices/ComTypes/IMoniker.cs
      branch: master
      repo: https://github.com/dotnet/coreclr.git
    id: ParseDisplayName
    path: src/mscorlib/src/System/Runtime/InteropServices/ComTypes/IMoniker.cs
    startLine: 56
  assemblies:
  - System.Runtime.InteropServices
  namespace: System.Runtime.InteropServices.ComTypes
  summary: "\n<p>Reads as many characters of the specified display name as the <xref href=\"System.Runtime.InteropServices.ComTypes.IMoniker.ParseDisplayName(System.Runtime.InteropServices.ComTypes.IBindCtx,System.Runtime.InteropServices.ComTypes.IMoniker,System.String,System.Int32@,System.Runtime.InteropServices.ComTypes.IMoniker@)\" data-throw-if-not-resolved=\"false\"></xref> understands and builds a moniker corresponding to the portion read.</p>\n"
  syntax:
    content: void ParseDisplayName(IBindCtx pbc, IMoniker pmkToLeft, [MarshalAs(UnmanagedType.LPWStr)] string pszDisplayName, out int pchEaten, out IMoniker ppmkOut)
    content.vb: Sub ParseDisplayName(pbc As IBindCtx, pmkToLeft As IMoniker, pszDisplayName As String, ByRef pchEaten As Integer, ByRef ppmkOut As IMoniker)
    parameters:
    - id: pbc
      type: System.Runtime.InteropServices.ComTypes.IBindCtx
      description: "\n<p>A reference to the bind context to use in this binding operation. </p>\n"
    - id: pmkToLeft
      type: System.Runtime.InteropServices.ComTypes.IMoniker
      description: "\n<p>A reference to the moniker that has been built from the display name up to this point. </p>\n"
    - id: pszDisplayName
      type: System.String
      description: "\n<p>A reference to the string containing the remaining display name to parse. </p>\n"
      attributes:
      - type: System.Runtime.InteropServices.MarshalAsAttribute
        ctor: System.Runtime.InteropServices.MarshalAsAttribute.#ctor(System.Runtime.InteropServices.UnmanagedType)
        arguments:
        - type: System.Runtime.InteropServices.UnmanagedType
          value: 21
    - id: pchEaten
      type: System.Int32
      description: "\n<p>When this method returns, contains the number of characters that were consumed in parsing <em>pszDisplayName</em>. This parameter is passed uninitialized.</p>\n"
    - id: ppmkOut
      type: System.Runtime.InteropServices.ComTypes.IMoniker
      description: "\n<p>When this method returns, contains a reference to the moniker that was built from <em>pszDisplayName</em>. This parameter is passed uninitialized.</p>\n"
  nameWithType.vb: IMoniker.ParseDisplayName(IBindCtx, IMoniker, String, ByRef Int32, ByRef IMoniker)
  fullName.vb: System.Runtime.InteropServices.ComTypes.IMoniker.ParseDisplayName(System.Runtime.InteropServices.ComTypes.IBindCtx, System.Runtime.InteropServices.ComTypes.IMoniker, System.String, ByRef System.Int32, ByRef System.Runtime.InteropServices.ComTypes.IMoniker)
  name.vb: ParseDisplayName(IBindCtx, IMoniker, String, ByRef Int32, ByRef IMoniker)
- uid: System.Runtime.InteropServices.ComTypes.IMoniker.Reduce(System.Runtime.InteropServices.ComTypes.IBindCtx,System.Int32,System.Runtime.InteropServices.ComTypes.IMoniker@,System.Runtime.InteropServices.ComTypes.IMoniker@)
  commentId: M:System.Runtime.InteropServices.ComTypes.IMoniker.Reduce(System.Runtime.InteropServices.ComTypes.IBindCtx,System.Int32,System.Runtime.InteropServices.ComTypes.IMoniker@,System.Runtime.InteropServices.ComTypes.IMoniker@)
  id: Reduce(System.Runtime.InteropServices.ComTypes.IBindCtx,System.Int32,System.Runtime.InteropServices.ComTypes.IMoniker@,System.Runtime.InteropServices.ComTypes.IMoniker@)
  parent: System.Runtime.InteropServices.ComTypes.IMoniker
  langs:
  - csharp
  - vb
  name: Reduce(IBindCtx, Int32, ref IMoniker, out IMoniker)
  nameWithType: IMoniker.Reduce(IBindCtx, Int32, ref IMoniker, out IMoniker)
  fullName: System.Runtime.InteropServices.ComTypes.IMoniker.Reduce(System.Runtime.InteropServices.ComTypes.IBindCtx, System.Int32, ref System.Runtime.InteropServices.ComTypes.IMoniker, out System.Runtime.InteropServices.ComTypes.IMoniker)
  type: Method
  source:
    remote:
      path: src/mscorlib/src/System/Runtime/InteropServices/ComTypes/IMoniker.cs
      branch: master
      repo: https://github.com/dotnet/coreclr.git
    id: Reduce
    path: src/mscorlib/src/System/Runtime/InteropServices/ComTypes/IMoniker.cs
    startLine: 43
  assemblies:
  - System.Runtime.InteropServices
  namespace: System.Runtime.InteropServices.ComTypes
  summary: "\n<p>Returns a reduced moniker, which is another moniker that refers to the same object as the current moniker but can be bound with equal or greater efficiency.</p>\n"
  syntax:
    content: void Reduce(IBindCtx pbc, int dwReduceHowFar, ref IMoniker ppmkToLeft, out IMoniker ppmkReduced)
    content.vb: Sub Reduce(pbc As IBindCtx, dwReduceHowFar As Integer, ByRef ppmkToLeft As IMoniker, ByRef ppmkReduced As IMoniker)
    parameters:
    - id: pbc
      type: System.Runtime.InteropServices.ComTypes.IBindCtx
      description: "\n<p>A reference to the <strong>IBindCtx</strong> interface on the bind context to use in this binding operation. </p>\n"
    - id: dwReduceHowFar
      type: System.Int32
      description: "\n<p>A value that specifies how far the current moniker should be reduced. </p>\n"
    - id: ppmkToLeft
      type: System.Runtime.InteropServices.ComTypes.IMoniker
      description: "\n<p>A reference to the moniker to the left of the current moniker. </p>\n"
    - id: ppmkReduced
      type: System.Runtime.InteropServices.ComTypes.IMoniker
      description: "\n<p>When this method returns, contains a reference to the reduced form of the current moniker, which can be <strong>null</strong> if an error occurs or if the current moniker is reduced to nothing. This parameter is passed uninitialized.</p>\n"
  nameWithType.vb: IMoniker.Reduce(IBindCtx, Int32, ByRef IMoniker, ByRef IMoniker)
  fullName.vb: System.Runtime.InteropServices.ComTypes.IMoniker.Reduce(System.Runtime.InteropServices.ComTypes.IBindCtx, System.Int32, ByRef System.Runtime.InteropServices.ComTypes.IMoniker, ByRef System.Runtime.InteropServices.ComTypes.IMoniker)
  name.vb: Reduce(IBindCtx, Int32, ByRef IMoniker, ByRef IMoniker)
- uid: System.Runtime.InteropServices.ComTypes.IMoniker.RelativePathTo(System.Runtime.InteropServices.ComTypes.IMoniker,System.Runtime.InteropServices.ComTypes.IMoniker@)
  commentId: M:System.Runtime.InteropServices.ComTypes.IMoniker.RelativePathTo(System.Runtime.InteropServices.ComTypes.IMoniker,System.Runtime.InteropServices.ComTypes.IMoniker@)
  id: RelativePathTo(System.Runtime.InteropServices.ComTypes.IMoniker,System.Runtime.InteropServices.ComTypes.IMoniker@)
  parent: System.Runtime.InteropServices.ComTypes.IMoniker
  langs:
  - csharp
  - vb
  name: RelativePathTo(IMoniker, out IMoniker)
  nameWithType: IMoniker.RelativePathTo(IMoniker, out IMoniker)
  fullName: System.Runtime.InteropServices.ComTypes.IMoniker.RelativePathTo(System.Runtime.InteropServices.ComTypes.IMoniker, out System.Runtime.InteropServices.ComTypes.IMoniker)
  type: Method
  source:
    remote:
      path: src/mscorlib/src/System/Runtime/InteropServices/ComTypes/IMoniker.cs
      branch: master
      repo: https://github.com/dotnet/coreclr.git
    id: RelativePathTo
    path: src/mscorlib/src/System/Runtime/InteropServices/ComTypes/IMoniker.cs
    startLine: 54
  assemblies:
  - System.Runtime.InteropServices
  namespace: System.Runtime.InteropServices.ComTypes
  summary: "\n<p>Supplies a moniker that, when appended to the current moniker (or one with a similar structure), yields the specified moniker.</p>\n"
  syntax:
    content: void RelativePathTo(IMoniker pmkOther, out IMoniker ppmkRelPath)
    content.vb: Sub RelativePathTo(pmkOther As IMoniker, ByRef ppmkRelPath As IMoniker)
    parameters:
    - id: pmkOther
      type: System.Runtime.InteropServices.ComTypes.IMoniker
      description: "\n<p>A reference to the moniker to which a relative path should be taken. </p>\n"
    - id: ppmkRelPath
      type: System.Runtime.InteropServices.ComTypes.IMoniker
      description: "\n<p>When this method returns, contains a reference to the relative moniker. This parameter is passed uninitialized.</p>\n"
  nameWithType.vb: IMoniker.RelativePathTo(IMoniker, ByRef IMoniker)
  fullName.vb: System.Runtime.InteropServices.ComTypes.IMoniker.RelativePathTo(System.Runtime.InteropServices.ComTypes.IMoniker, ByRef System.Runtime.InteropServices.ComTypes.IMoniker)
  name.vb: RelativePathTo(IMoniker, ByRef IMoniker)
- uid: System.Runtime.InteropServices.ComTypes.IMoniker.Save(System.Runtime.InteropServices.ComTypes.IStream,System.Boolean)
  commentId: M:System.Runtime.InteropServices.ComTypes.IMoniker.Save(System.Runtime.InteropServices.ComTypes.IStream,System.Boolean)
  id: Save(System.Runtime.InteropServices.ComTypes.IStream,System.Boolean)
  parent: System.Runtime.InteropServices.ComTypes.IMoniker
  langs:
  - csharp
  - vb
  name: Save(IStream, Boolean)
  nameWithType: IMoniker.Save(IStream, Boolean)
  fullName: System.Runtime.InteropServices.ComTypes.IMoniker.Save(System.Runtime.InteropServices.ComTypes.IStream, System.Boolean)
  type: Method
  source:
    remote:
      path: src/mscorlib/src/System/Runtime/InteropServices/ComTypes/IMoniker.cs
      branch: master
      repo: https://github.com/dotnet/coreclr.git
    id: Save
    path: src/mscorlib/src/System/Runtime/InteropServices/ComTypes/IMoniker.cs
    startLine: 37
  assemblies:
  - System.Runtime.InteropServices
  namespace: System.Runtime.InteropServices.ComTypes
  summary: "\n<p>Saves an object to the specified stream.</p>\n"
  syntax:
    content: void Save(IStream pStm, [MarshalAs(UnmanagedType.Bool)] bool fClearDirty)
    content.vb: Sub Save(pStm As IStream, fClearDirty As Boolean)
    parameters:
    - id: pStm
      type: System.Runtime.InteropServices.ComTypes.IStream
      description: "\n<p>The stream to which the object is saved. </p>\n"
    - id: fClearDirty
      type: System.Boolean
      description: "\n<p>\n<strong>true</strong> to clear the modified flag after the save is complete; otherwise <strong>false</strong></p>\n"
      attributes:
      - type: System.Runtime.InteropServices.MarshalAsAttribute
        ctor: System.Runtime.InteropServices.MarshalAsAttribute.#ctor(System.Runtime.InteropServices.UnmanagedType)
        arguments:
        - type: System.Runtime.InteropServices.UnmanagedType
          value: 2
references:
- uid: System.Runtime.InteropServices.ComTypes
  commentId: N:System.Runtime.InteropServices.ComTypes
  isExternal: false
  name: System.Runtime.InteropServices.ComTypes
  nameWithType: System.Runtime.InteropServices.ComTypes
  fullName: System.Runtime.InteropServices.ComTypes
- uid: System.Runtime.InteropServices.ComTypes.IBindCtx
  commentId: T:System.Runtime.InteropServices.ComTypes.IBindCtx
  parent: System.Runtime.InteropServices.ComTypes
  isExternal: false
  name: IBindCtx
  nameWithType: IBindCtx
  fullName: System.Runtime.InteropServices.ComTypes.IBindCtx
- uid: System.Runtime.InteropServices.ComTypes.IMoniker
  commentId: T:System.Runtime.InteropServices.ComTypes.IMoniker
  parent: System.Runtime.InteropServices.ComTypes
  isExternal: false
  name: IMoniker
  nameWithType: IMoniker
  fullName: System.Runtime.InteropServices.ComTypes.IMoniker
- uid: System.Guid
  commentId: T:System.Guid
  parent: System
  isExternal: false
  name: Guid
  nameWithType: Guid
  fullName: System.Guid
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: false
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: false
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Runtime.InteropServices.ComTypes.IEnumMoniker
  commentId: T:System.Runtime.InteropServices.ComTypes.IEnumMoniker
  parent: System.Runtime.InteropServices.ComTypes
  isExternal: false
  name: IEnumMoniker
  nameWithType: IEnumMoniker
  fullName: System.Runtime.InteropServices.ComTypes.IEnumMoniker
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: false
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Int64
  commentId: T:System.Int64
  parent: System
  isExternal: false
  name: Int64
  nameWithType: Int64
  fullName: System.Int64
- uid: System.Runtime.InteropServices.ComTypes.FILETIME
  commentId: T:System.Runtime.InteropServices.ComTypes.FILETIME
  parent: System.Runtime.InteropServices.ComTypes
  isExternal: false
  name: FILETIME
  nameWithType: FILETIME
  fullName: System.Runtime.InteropServices.ComTypes.FILETIME
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: false
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Runtime.InteropServices.ComTypes.IStream
  commentId: T:System.Runtime.InteropServices.ComTypes.IStream
  parent: System.Runtime.InteropServices.ComTypes
  isExternal: false
  name: IStream
  nameWithType: IStream
  fullName: System.Runtime.InteropServices.ComTypes.IStream
