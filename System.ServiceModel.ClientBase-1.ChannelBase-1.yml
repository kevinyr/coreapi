items:
- uid: System.ServiceModel.ClientBase`1.ChannelBase`1
  commentId: T:System.ServiceModel.ClientBase`1.ChannelBase`1
  id: ClientBase`1.ChannelBase`1
  parent: System.ServiceModel
  children:
  - System.ServiceModel.ClientBase`1.ChannelBase`1.#ctor(System.ServiceModel.ClientBase{`1})
  - System.ServiceModel.ClientBase`1.ChannelBase`1.BeginInvoke(System.String,System.Object[],System.AsyncCallback,System.Object)
  - System.ServiceModel.ClientBase`1.ChannelBase`1.EndInvoke(System.String,System.Object[],System.IAsyncResult)
  - System.ServiceModel.ClientBase`1.ChannelBase`1.System#IDisposable#Dispose
  - System.ServiceModel.ClientBase`1.ChannelBase`1.System#ServiceModel#Channels#IChannel#GetProperty``1
  - System.ServiceModel.ClientBase`1.ChannelBase`1.System#ServiceModel#Channels#IOutputChannel#BeginSend(System.ServiceModel.Channels.Message,System.AsyncCallback,System.Object)
  - System.ServiceModel.ClientBase`1.ChannelBase`1.System#ServiceModel#Channels#IOutputChannel#BeginSend(System.ServiceModel.Channels.Message,System.TimeSpan,System.AsyncCallback,System.Object)
  - System.ServiceModel.ClientBase`1.ChannelBase`1.System#ServiceModel#Channels#IOutputChannel#EndSend(System.IAsyncResult)
  - System.ServiceModel.ClientBase`1.ChannelBase`1.System#ServiceModel#Channels#IOutputChannel#RemoteAddress
  - System.ServiceModel.ClientBase`1.ChannelBase`1.System#ServiceModel#Channels#IOutputChannel#Send(System.ServiceModel.Channels.Message)
  - System.ServiceModel.ClientBase`1.ChannelBase`1.System#ServiceModel#Channels#IOutputChannel#Send(System.ServiceModel.Channels.Message,System.TimeSpan)
  - System.ServiceModel.ClientBase`1.ChannelBase`1.System#ServiceModel#Channels#IOutputChannel#Via
  - System.ServiceModel.ClientBase`1.ChannelBase`1.System#ServiceModel#Channels#IRequestChannel#BeginRequest(System.ServiceModel.Channels.Message,System.AsyncCallback,System.Object)
  - System.ServiceModel.ClientBase`1.ChannelBase`1.System#ServiceModel#Channels#IRequestChannel#BeginRequest(System.ServiceModel.Channels.Message,System.TimeSpan,System.AsyncCallback,System.Object)
  - System.ServiceModel.ClientBase`1.ChannelBase`1.System#ServiceModel#Channels#IRequestChannel#EndRequest(System.IAsyncResult)
  - System.ServiceModel.ClientBase`1.ChannelBase`1.System#ServiceModel#Channels#IRequestChannel#RemoteAddress
  - System.ServiceModel.ClientBase`1.ChannelBase`1.System#ServiceModel#Channels#IRequestChannel#Request(System.ServiceModel.Channels.Message)
  - System.ServiceModel.ClientBase`1.ChannelBase`1.System#ServiceModel#Channels#IRequestChannel#Request(System.ServiceModel.Channels.Message,System.TimeSpan)
  - System.ServiceModel.ClientBase`1.ChannelBase`1.System#ServiceModel#Channels#IRequestChannel#Via
  - System.ServiceModel.ClientBase`1.ChannelBase`1.System#ServiceModel#IClientChannel#AllowInitializationUI
  - System.ServiceModel.ClientBase`1.ChannelBase`1.System#ServiceModel#IClientChannel#BeginDisplayInitializationUI(System.AsyncCallback,System.Object)
  - System.ServiceModel.ClientBase`1.ChannelBase`1.System#ServiceModel#IClientChannel#DidInteractiveInitialization
  - System.ServiceModel.ClientBase`1.ChannelBase`1.System#ServiceModel#IClientChannel#DisplayInitializationUI
  - System.ServiceModel.ClientBase`1.ChannelBase`1.System#ServiceModel#IClientChannel#EndDisplayInitializationUI(System.IAsyncResult)
  - System.ServiceModel.ClientBase`1.ChannelBase`1.System#ServiceModel#IClientChannel#UnknownMessageReceived
  - System.ServiceModel.ClientBase`1.ChannelBase`1.System#ServiceModel#IClientChannel#Via
  - System.ServiceModel.ClientBase`1.ChannelBase`1.System#ServiceModel#ICommunicationObject#Abort
  - System.ServiceModel.ClientBase`1.ChannelBase`1.System#ServiceModel#ICommunicationObject#BeginClose(System.AsyncCallback,System.Object)
  - System.ServiceModel.ClientBase`1.ChannelBase`1.System#ServiceModel#ICommunicationObject#BeginClose(System.TimeSpan,System.AsyncCallback,System.Object)
  - System.ServiceModel.ClientBase`1.ChannelBase`1.System#ServiceModel#ICommunicationObject#BeginOpen(System.AsyncCallback,System.Object)
  - System.ServiceModel.ClientBase`1.ChannelBase`1.System#ServiceModel#ICommunicationObject#BeginOpen(System.TimeSpan,System.AsyncCallback,System.Object)
  - System.ServiceModel.ClientBase`1.ChannelBase`1.System#ServiceModel#ICommunicationObject#Close
  - System.ServiceModel.ClientBase`1.ChannelBase`1.System#ServiceModel#ICommunicationObject#Close(System.TimeSpan)
  - System.ServiceModel.ClientBase`1.ChannelBase`1.System#ServiceModel#ICommunicationObject#Closed
  - System.ServiceModel.ClientBase`1.ChannelBase`1.System#ServiceModel#ICommunicationObject#Closing
  - System.ServiceModel.ClientBase`1.ChannelBase`1.System#ServiceModel#ICommunicationObject#EndClose(System.IAsyncResult)
  - System.ServiceModel.ClientBase`1.ChannelBase`1.System#ServiceModel#ICommunicationObject#EndOpen(System.IAsyncResult)
  - System.ServiceModel.ClientBase`1.ChannelBase`1.System#ServiceModel#ICommunicationObject#Faulted
  - System.ServiceModel.ClientBase`1.ChannelBase`1.System#ServiceModel#ICommunicationObject#Open
  - System.ServiceModel.ClientBase`1.ChannelBase`1.System#ServiceModel#ICommunicationObject#Open(System.TimeSpan)
  - System.ServiceModel.ClientBase`1.ChannelBase`1.System#ServiceModel#ICommunicationObject#Opened
  - System.ServiceModel.ClientBase`1.ChannelBase`1.System#ServiceModel#ICommunicationObject#Opening
  - System.ServiceModel.ClientBase`1.ChannelBase`1.System#ServiceModel#ICommunicationObject#State
  - System.ServiceModel.ClientBase`1.ChannelBase`1.System#ServiceModel#IContextChannel#AllowOutputBatching
  - System.ServiceModel.ClientBase`1.ChannelBase`1.System#ServiceModel#IContextChannel#InputSession
  - System.ServiceModel.ClientBase`1.ChannelBase`1.System#ServiceModel#IContextChannel#LocalAddress
  - System.ServiceModel.ClientBase`1.ChannelBase`1.System#ServiceModel#IContextChannel#OperationTimeout
  - System.ServiceModel.ClientBase`1.ChannelBase`1.System#ServiceModel#IContextChannel#OutputSession
  - System.ServiceModel.ClientBase`1.ChannelBase`1.System#ServiceModel#IContextChannel#RemoteAddress
  - System.ServiceModel.ClientBase`1.ChannelBase`1.System#ServiceModel#IContextChannel#SessionId
  - System.ServiceModel.ClientBase`1.ChannelBase`1.System#ServiceModel#IExtensibleObject{System#ServiceModel#IContextChannel}#Extensions
  langs:
  - csharp
  - vb
  name: ClientBase<TChannel>.ChannelBase<T>
  fullName: System.ServiceModel.ClientBase<TChannel>.ChannelBase<T>
  type: Class
  source:
    remote:
      path: src/System.ServiceModel.Primitives/ref/System.ServiceModel.Primitives.cs
      branch: master
      repo: https://github.com/dotnet/wcf.git
    id: ChannelBase
    path: src/System.ServiceModel.Primitives/ref/System.ServiceModel.Primitives.cs
    startLine: 90
  assemblies:
  - System.ServiceModel.Primitives
  namespace: System.ServiceModel
  summary: "\n<p>Represents the Generic ChannelBase class.</p>\n"
  syntax:
    content: 'protected class ChannelBase<T> : IOutputChannel, IRequestChannel, IClientChannel, IDisposable, IContextChannel, IChannel, ICommunicationObject, IExtensibleObject<IContextChannel> where T : class'
    content.vb: >-
      Protected Class ChannelBase(Of T As Class)
          Implements IOutputChannel, IRequestChannel, IClientChannel, IDisposable, IContextChannel, IChannel, ICommunicationObject, IExtensibleObject(Of IContextChannel)
    typeParameters:
    - id: T
      description: "\n<p>The generic class.</p>\n"
  inheritance:
  - System.Object
  implements:
  - System.ServiceModel.Channels.IOutputChannel
  - System.ServiceModel.Channels.IRequestChannel
  - System.ServiceModel.IClientChannel
  - System.IDisposable
  - System.ServiceModel.IContextChannel
  - System.ServiceModel.Channels.IChannel
  - System.ServiceModel.ICommunicationObject
  - System.ServiceModel.IExtensibleObject{System.ServiceModel.IContextChannel}
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  modifiers.csharp:
  - protected
  - class
  modifiers.vb:
  - Protected
  - Class
  fullName.vb: System.ServiceModel.ClientBase(Of TChannel).ChannelBase(Of T)
  name.vb: ClientBase(Of TChannel).ChannelBase(Of T)
  nameWithType: ClientBase<TChannel>.ChannelBase<T>
  nameWithType.vb: ClientBase(Of TChannel).ChannelBase(Of T)
- uid: System.ServiceModel.ClientBase`1.ChannelBase`1.#ctor(System.ServiceModel.ClientBase{`1})
  commentId: M:System.ServiceModel.ClientBase`1.ChannelBase`1.#ctor(System.ServiceModel.ClientBase{`1})
  id: '#ctor(System.ServiceModel.ClientBase{`1})'
  parent: System.ServiceModel.ClientBase`1.ChannelBase`1
  langs:
  - csharp
  - vb
  name: ChannelBase(ClientBase<T>)
  fullName: System.ServiceModel.ClientBase<TChannel>.ChannelBase<T>.ChannelBase(System.ServiceModel.ClientBase<T>)
  type: Constructor
  source:
    remote:
      path: src/System.ServiceModel.Primitives/ref/System.ServiceModel.Primitives.cs
      branch: master
      repo: https://github.com/dotnet/wcf.git
    id: .ctor
    path: src/System.ServiceModel.Primitives/ref/System.ServiceModel.Primitives.cs
    startLine: 92
  assemblies:
  - System.ServiceModel.Primitives
  namespace: System.ServiceModel
  summary: "\n<p>Initializes a new instance of the <xref href=\"System.ServiceModel.ClientBase`1.ChannelBase`1\" data-throw-if-not-resolved=\"false\"></xref> class from an existing instance of the class.</p>\n"
  syntax:
    content: protected ChannelBase(ClientBase<T> client)
    content.vb: Protected Sub New(client As ClientBase(Of T))
    parameters:
    - id: client
      type: System.ServiceModel.ClientBase{{T}}
      description: "\n<p>The object used to initialize the new instance of the class.</p>\n"
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
  fullName.vb: System.ServiceModel.ClientBase(Of TChannel).ChannelBase(Of T).ChannelBase(System.ServiceModel.ClientBase(Of T))
  name.vb: ChannelBase(ClientBase(Of T))
  nameWithType: ClientBase<TChannel>.ChannelBase<T>.ChannelBase(ClientBase<T>)
  nameWithType.vb: ClientBase(Of TChannel).ChannelBase(Of T).ChannelBase(ClientBase(Of T))
- uid: System.ServiceModel.ClientBase`1.ChannelBase`1.System#ServiceModel#Channels#IOutputChannel#RemoteAddress
  commentId: P:System.ServiceModel.ClientBase`1.ChannelBase`1.System#ServiceModel#Channels#IOutputChannel#RemoteAddress
  id: System#ServiceModel#Channels#IOutputChannel#RemoteAddress
  isEii: true
  parent: System.ServiceModel.ClientBase`1.ChannelBase`1
  langs:
  - csharp
  - vb
  name: IOutputChannel.RemoteAddress
  fullName: System.ServiceModel.ClientBase<TChannel>.ChannelBase<T>.System.ServiceModel.Channels.IOutputChannel.RemoteAddress
  type: Property
  source:
    remote:
      path: src/System.ServiceModel.Primitives/ref/System.ServiceModel.Primitives.cs
      branch: master
      repo: https://github.com/dotnet/wcf.git
    id: System.ServiceModel.Channels.IOutputChannel.RemoteAddress
    path: src/System.ServiceModel.Primitives/ref/System.ServiceModel.Primitives.cs
    startLine: 93
  assemblies:
  - System.ServiceModel.Primitives
  namespace: System.ServiceModel
  summary: "\n<p>Gets the destination of the service to which messages are sent out on the output channel.</p>\n"
  syntax:
    content: EndpointAddress IOutputChannel.RemoteAddress { get; }
    content.vb: ReadOnly WriteOnly Property System.ServiceModel.Channels.IOutputChannel.RemoteAddress As EndpointAddress Implements IOutputChannel.RemoteAddress
    parameters: []
    return:
      type: System.ServiceModel.EndpointAddress
      description: "\n<p>The <xref href=\"System.ServiceModel.EndpointAddress\" data-throw-if-not-resolved=\"false\"></xref> of the service to which the output channel sends messages.</p>\n"
  implements:
  - System.ServiceModel.Channels.IOutputChannel.RemoteAddress
  modifiers.csharp:
  - get
  modifiers.vb:
  - ReadOnly
  fullName.vb: System.ServiceModel.ClientBase(Of TChannel).ChannelBase(Of T).System.ServiceModel.Channels.IOutputChannel.RemoteAddress
  name.vb: System.ServiceModel.Channels.IOutputChannel.RemoteAddress
  nameWithType: ClientBase<TChannel>.ChannelBase<T>.IOutputChannel.RemoteAddress
  nameWithType.vb: ClientBase(Of TChannel).ChannelBase(Of T).System.ServiceModel.Channels.IOutputChannel.RemoteAddress
- uid: System.ServiceModel.ClientBase`1.ChannelBase`1.System#ServiceModel#Channels#IOutputChannel#Via
  commentId: P:System.ServiceModel.ClientBase`1.ChannelBase`1.System#ServiceModel#Channels#IOutputChannel#Via
  id: System#ServiceModel#Channels#IOutputChannel#Via
  isEii: true
  parent: System.ServiceModel.ClientBase`1.ChannelBase`1
  langs:
  - csharp
  - vb
  name: IOutputChannel.Via
  fullName: System.ServiceModel.ClientBase<TChannel>.ChannelBase<T>.System.ServiceModel.Channels.IOutputChannel.Via
  type: Property
  source:
    remote:
      path: src/System.ServiceModel.Primitives/ref/System.ServiceModel.Primitives.cs
      branch: master
      repo: https://github.com/dotnet/wcf.git
    id: System.ServiceModel.Channels.IOutputChannel.Via
    path: src/System.ServiceModel.Primitives/ref/System.ServiceModel.Primitives.cs
    startLine: 94
  assemblies:
  - System.ServiceModel.Primitives
  namespace: System.ServiceModel
  summary: "\n<p>Gets the URI that contains the transport address to which messages are sent on the output channel.</p>\n"
  syntax:
    content: Uri IOutputChannel.Via { get; }
    content.vb: ReadOnly WriteOnly Property System.ServiceModel.Channels.IOutputChannel.Via As Uri Implements IOutputChannel.Via
    parameters: []
    return:
      type: System.Uri
      description: "\n<p>The <xref href=\"System.Uri\" data-throw-if-not-resolved=\"false\"></xref> that contains the transport address to which messages are sent on the output channel.</p>\n"
  implements:
  - System.ServiceModel.Channels.IOutputChannel.Via
  modifiers.csharp:
  - get
  modifiers.vb:
  - ReadOnly
  fullName.vb: System.ServiceModel.ClientBase(Of TChannel).ChannelBase(Of T).System.ServiceModel.Channels.IOutputChannel.Via
  name.vb: System.ServiceModel.Channels.IOutputChannel.Via
  nameWithType: ClientBase<TChannel>.ChannelBase<T>.IOutputChannel.Via
  nameWithType.vb: ClientBase(Of TChannel).ChannelBase(Of T).System.ServiceModel.Channels.IOutputChannel.Via
- uid: System.ServiceModel.ClientBase`1.ChannelBase`1.System#ServiceModel#Channels#IRequestChannel#RemoteAddress
  commentId: P:System.ServiceModel.ClientBase`1.ChannelBase`1.System#ServiceModel#Channels#IRequestChannel#RemoteAddress
  id: System#ServiceModel#Channels#IRequestChannel#RemoteAddress
  isEii: true
  parent: System.ServiceModel.ClientBase`1.ChannelBase`1
  langs:
  - csharp
  - vb
  name: IRequestChannel.RemoteAddress
  fullName: System.ServiceModel.ClientBase<TChannel>.ChannelBase<T>.System.ServiceModel.Channels.IRequestChannel.RemoteAddress
  type: Property
  source:
    remote:
      path: src/System.ServiceModel.Primitives/ref/System.ServiceModel.Primitives.cs
      branch: master
      repo: https://github.com/dotnet/wcf.git
    id: System.ServiceModel.Channels.IRequestChannel.RemoteAddress
    path: src/System.ServiceModel.Primitives/ref/System.ServiceModel.Primitives.cs
    startLine: 95
  assemblies:
  - System.ServiceModel.Primitives
  namespace: System.ServiceModel
  summary: "\n<p>Gets the remote address to which the request channel sends messages.</p>\n"
  syntax:
    content: EndpointAddress IRequestChannel.RemoteAddress { get; }
    content.vb: ReadOnly WriteOnly Property System.ServiceModel.Channels.IRequestChannel.RemoteAddress As EndpointAddress Implements IRequestChannel.RemoteAddress
    parameters: []
    return:
      type: System.ServiceModel.EndpointAddress
      description: "\n<p>The <xref href=\"System.ServiceModel.EndpointAddress\" data-throw-if-not-resolved=\"false\"></xref> to which the request channel sends messages.</p>\n"
  implements:
  - System.ServiceModel.Channels.IRequestChannel.RemoteAddress
  modifiers.csharp:
  - get
  modifiers.vb:
  - ReadOnly
  fullName.vb: System.ServiceModel.ClientBase(Of TChannel).ChannelBase(Of T).System.ServiceModel.Channels.IRequestChannel.RemoteAddress
  name.vb: System.ServiceModel.Channels.IRequestChannel.RemoteAddress
  nameWithType: ClientBase<TChannel>.ChannelBase<T>.IRequestChannel.RemoteAddress
  nameWithType.vb: ClientBase(Of TChannel).ChannelBase(Of T).System.ServiceModel.Channels.IRequestChannel.RemoteAddress
- uid: System.ServiceModel.ClientBase`1.ChannelBase`1.System#ServiceModel#Channels#IRequestChannel#Via
  commentId: P:System.ServiceModel.ClientBase`1.ChannelBase`1.System#ServiceModel#Channels#IRequestChannel#Via
  id: System#ServiceModel#Channels#IRequestChannel#Via
  isEii: true
  parent: System.ServiceModel.ClientBase`1.ChannelBase`1
  langs:
  - csharp
  - vb
  name: IRequestChannel.Via
  fullName: System.ServiceModel.ClientBase<TChannel>.ChannelBase<T>.System.ServiceModel.Channels.IRequestChannel.Via
  type: Property
  source:
    remote:
      path: src/System.ServiceModel.Primitives/ref/System.ServiceModel.Primitives.cs
      branch: master
      repo: https://github.com/dotnet/wcf.git
    id: System.ServiceModel.Channels.IRequestChannel.Via
    path: src/System.ServiceModel.Primitives/ref/System.ServiceModel.Primitives.cs
    startLine: 96
  assemblies:
  - System.ServiceModel.Primitives
  namespace: System.ServiceModel
  summary: "\n<p>Gets the transport address to which the request is sent.</p>\n"
  syntax:
    content: Uri IRequestChannel.Via { get; }
    content.vb: ReadOnly WriteOnly Property System.ServiceModel.Channels.IRequestChannel.Via As Uri Implements IRequestChannel.Via
    parameters: []
    return:
      type: System.Uri
      description: "\n<p>The <xref href=\"System.Uri\" data-throw-if-not-resolved=\"false\"></xref> that contains the transport address to which the message is sent.</p>\n"
  implements:
  - System.ServiceModel.Channels.IRequestChannel.Via
  modifiers.csharp:
  - get
  modifiers.vb:
  - ReadOnly
  fullName.vb: System.ServiceModel.ClientBase(Of TChannel).ChannelBase(Of T).System.ServiceModel.Channels.IRequestChannel.Via
  name.vb: System.ServiceModel.Channels.IRequestChannel.Via
  nameWithType: ClientBase<TChannel>.ChannelBase<T>.IRequestChannel.Via
  nameWithType.vb: ClientBase(Of TChannel).ChannelBase(Of T).System.ServiceModel.Channels.IRequestChannel.Via
- uid: System.ServiceModel.ClientBase`1.ChannelBase`1.System#ServiceModel#IClientChannel#AllowInitializationUI
  commentId: P:System.ServiceModel.ClientBase`1.ChannelBase`1.System#ServiceModel#IClientChannel#AllowInitializationUI
  id: System#ServiceModel#IClientChannel#AllowInitializationUI
  isEii: true
  parent: System.ServiceModel.ClientBase`1.ChannelBase`1
  langs:
  - csharp
  - vb
  name: IClientChannel.AllowInitializationUI
  fullName: System.ServiceModel.ClientBase<TChannel>.ChannelBase<T>.System.ServiceModel.IClientChannel.AllowInitializationUI
  type: Property
  source:
    remote:
      path: src/System.ServiceModel.Primitives/ref/System.ServiceModel.Primitives.cs
      branch: master
      repo: https://github.com/dotnet/wcf.git
    id: System.ServiceModel.IClientChannel.AllowInitializationUI
    path: src/System.ServiceModel.Primitives/ref/System.ServiceModel.Primitives.cs
    startLine: 97
  assemblies:
  - System.ServiceModel.Primitives
  namespace: System.ServiceModel
  summary: "\n<p>Gets or sets a value that indicates whether the client channel allows an initialization UI.</p>\n"
  syntax:
    content: bool IClientChannel.AllowInitializationUI { get; set; }
    content.vb: ReadOnly WriteOnly Property System.ServiceModel.IClientChannel.AllowInitializationUI As Boolean Implements IClientChannel.AllowInitializationUI
    parameters: []
    return:
      type: System.Boolean
      description: "\n<p>\n<strong>True</strong> if the client channel allows an initialization UR; otherwise, <strong>false</strong>.</p>\n"
  implements:
  - System.ServiceModel.IClientChannel.AllowInitializationUI
  modifiers.csharp:
  - get
  - set
  fullName.vb: System.ServiceModel.ClientBase(Of TChannel).ChannelBase(Of T).System.ServiceModel.IClientChannel.AllowInitializationUI
  name.vb: System.ServiceModel.IClientChannel.AllowInitializationUI
  nameWithType: ClientBase<TChannel>.ChannelBase<T>.IClientChannel.AllowInitializationUI
  nameWithType.vb: ClientBase(Of TChannel).ChannelBase(Of T).System.ServiceModel.IClientChannel.AllowInitializationUI
- uid: System.ServiceModel.ClientBase`1.ChannelBase`1.System#ServiceModel#IClientChannel#DidInteractiveInitialization
  commentId: P:System.ServiceModel.ClientBase`1.ChannelBase`1.System#ServiceModel#IClientChannel#DidInteractiveInitialization
  id: System#ServiceModel#IClientChannel#DidInteractiveInitialization
  isEii: true
  parent: System.ServiceModel.ClientBase`1.ChannelBase`1
  langs:
  - csharp
  - vb
  name: IClientChannel.DidInteractiveInitialization
  fullName: System.ServiceModel.ClientBase<TChannel>.ChannelBase<T>.System.ServiceModel.IClientChannel.DidInteractiveInitialization
  type: Property
  source:
    remote:
      path: src/System.ServiceModel.Primitives/ref/System.ServiceModel.Primitives.cs
      branch: master
      repo: https://github.com/dotnet/wcf.git
    id: System.ServiceModel.IClientChannel.DidInteractiveInitialization
    path: src/System.ServiceModel.Primitives/ref/System.ServiceModel.Primitives.cs
    startLine: 98
  assemblies:
  - System.ServiceModel.Primitives
  namespace: System.ServiceModel
  summary: "\n<p>Gets a value that indicates whether a call was done to a user interface to obtain credential information.</p>\n"
  syntax:
    content: bool IClientChannel.DidInteractiveInitialization { get; }
    content.vb: ReadOnly WriteOnly Property System.ServiceModel.IClientChannel.DidInteractiveInitialization As Boolean Implements IClientChannel.DidInteractiveInitialization
    parameters: []
    return:
      type: System.Boolean
      description: "\n<p>\n<strong>True</strong> if a call was done to a user interface to obtain credential information; otherwise, <strong>false</strong>.</p>\n"
  implements:
  - System.ServiceModel.IClientChannel.DidInteractiveInitialization
  modifiers.csharp:
  - get
  modifiers.vb:
  - ReadOnly
  fullName.vb: System.ServiceModel.ClientBase(Of TChannel).ChannelBase(Of T).System.ServiceModel.IClientChannel.DidInteractiveInitialization
  name.vb: System.ServiceModel.IClientChannel.DidInteractiveInitialization
  nameWithType: ClientBase<TChannel>.ChannelBase<T>.IClientChannel.DidInteractiveInitialization
  nameWithType.vb: ClientBase(Of TChannel).ChannelBase(Of T).System.ServiceModel.IClientChannel.DidInteractiveInitialization
- uid: System.ServiceModel.ClientBase`1.ChannelBase`1.System#ServiceModel#IClientChannel#Via
  commentId: P:System.ServiceModel.ClientBase`1.ChannelBase`1.System#ServiceModel#IClientChannel#Via
  id: System#ServiceModel#IClientChannel#Via
  isEii: true
  parent: System.ServiceModel.ClientBase`1.ChannelBase`1
  langs:
  - csharp
  - vb
  name: IClientChannel.Via
  fullName: System.ServiceModel.ClientBase<TChannel>.ChannelBase<T>.System.ServiceModel.IClientChannel.Via
  type: Property
  source:
    remote:
      path: src/System.ServiceModel.Primitives/ref/System.ServiceModel.Primitives.cs
      branch: master
      repo: https://github.com/dotnet/wcf.git
    id: System.ServiceModel.IClientChannel.Via
    path: src/System.ServiceModel.Primitives/ref/System.ServiceModel.Primitives.cs
    startLine: 99
  assemblies:
  - System.ServiceModel.Primitives
  namespace: System.ServiceModel
  summary: "\n<p>Gets the URI that contains the transport address to which messages are sent on the client channel.</p>\n"
  syntax:
    content: Uri IClientChannel.Via { get; }
    content.vb: ReadOnly WriteOnly Property System.ServiceModel.IClientChannel.Via As Uri Implements IClientChannel.Via
    parameters: []
    return:
      type: System.Uri
      description: "\n<p>The URI that contains the transport address to which messages are sent on the channel.</p>\n"
  implements:
  - System.ServiceModel.IClientChannel.Via
  modifiers.csharp:
  - get
  modifiers.vb:
  - ReadOnly
  fullName.vb: System.ServiceModel.ClientBase(Of TChannel).ChannelBase(Of T).System.ServiceModel.IClientChannel.Via
  name.vb: System.ServiceModel.IClientChannel.Via
  nameWithType: ClientBase<TChannel>.ChannelBase<T>.IClientChannel.Via
  nameWithType.vb: ClientBase(Of TChannel).ChannelBase(Of T).System.ServiceModel.IClientChannel.Via
- uid: System.ServiceModel.ClientBase`1.ChannelBase`1.System#ServiceModel#ICommunicationObject#State
  commentId: P:System.ServiceModel.ClientBase`1.ChannelBase`1.System#ServiceModel#ICommunicationObject#State
  id: System#ServiceModel#ICommunicationObject#State
  isEii: true
  parent: System.ServiceModel.ClientBase`1.ChannelBase`1
  langs:
  - csharp
  - vb
  name: ICommunicationObject.State
  fullName: System.ServiceModel.ClientBase<TChannel>.ChannelBase<T>.System.ServiceModel.ICommunicationObject.State
  type: Property
  source:
    remote:
      path: src/System.ServiceModel.Primitives/ref/System.ServiceModel.Primitives.cs
      branch: master
      repo: https://github.com/dotnet/wcf.git
    id: System.ServiceModel.ICommunicationObject.State
    path: src/System.ServiceModel.Primitives/ref/System.ServiceModel.Primitives.cs
    startLine: 100
  assemblies:
  - System.ServiceModel.Primitives
  namespace: System.ServiceModel
  summary: "\n<p>Gets the current state of the communication-oriented object.</p>\n"
  syntax:
    content: CommunicationState ICommunicationObject.State { get; }
    content.vb: ReadOnly WriteOnly Property System.ServiceModel.ICommunicationObject.State As CommunicationState Implements ICommunicationObject.State
    parameters: []
    return:
      type: System.ServiceModel.CommunicationState
      description: "\n<p>The value of the <xref href=\"System.ServiceModel.CommunicationState\" data-throw-if-not-resolved=\"false\"></xref> of the object.</p>\n"
  implements:
  - System.ServiceModel.ICommunicationObject.State
  modifiers.csharp:
  - get
  modifiers.vb:
  - ReadOnly
  fullName.vb: System.ServiceModel.ClientBase(Of TChannel).ChannelBase(Of T).System.ServiceModel.ICommunicationObject.State
  name.vb: System.ServiceModel.ICommunicationObject.State
  nameWithType: ClientBase<TChannel>.ChannelBase<T>.ICommunicationObject.State
  nameWithType.vb: ClientBase(Of TChannel).ChannelBase(Of T).System.ServiceModel.ICommunicationObject.State
- uid: System.ServiceModel.ClientBase`1.ChannelBase`1.System#ServiceModel#IContextChannel#AllowOutputBatching
  commentId: P:System.ServiceModel.ClientBase`1.ChannelBase`1.System#ServiceModel#IContextChannel#AllowOutputBatching
  id: System#ServiceModel#IContextChannel#AllowOutputBatching
  isEii: true
  parent: System.ServiceModel.ClientBase`1.ChannelBase`1
  langs:
  - csharp
  - vb
  name: IContextChannel.AllowOutputBatching
  fullName: System.ServiceModel.ClientBase<TChannel>.ChannelBase<T>.System.ServiceModel.IContextChannel.AllowOutputBatching
  type: Property
  source:
    remote:
      path: src/System.ServiceModel.Primitives/ref/System.ServiceModel.Primitives.cs
      branch: master
      repo: https://github.com/dotnet/wcf.git
    id: System.ServiceModel.IContextChannel.AllowOutputBatching
    path: src/System.ServiceModel.Primitives/ref/System.ServiceModel.Primitives.cs
    startLine: 101
  assemblies:
  - System.ServiceModel.Primitives
  namespace: System.ServiceModel
  summary: "\n<p>Gets or sets a value that indicates whether the batching of outgoing messages is allowed; otherwise, false.</p>\n"
  syntax:
    content: bool IContextChannel.AllowOutputBatching { get; set; }
    content.vb: ReadOnly WriteOnly Property System.ServiceModel.IContextChannel.AllowOutputBatching As Boolean Implements IContextChannel.AllowOutputBatching
    parameters: []
    return:
      type: System.Boolean
      description: "\n<p>\n<strong>True</strong> if the batching of outgoing messages is allowed; otherwise, <strong>false</strong>.</p>\n"
  implements:
  - System.ServiceModel.IContextChannel.AllowOutputBatching
  modifiers.csharp:
  - get
  - set
  fullName.vb: System.ServiceModel.ClientBase(Of TChannel).ChannelBase(Of T).System.ServiceModel.IContextChannel.AllowOutputBatching
  name.vb: System.ServiceModel.IContextChannel.AllowOutputBatching
  nameWithType: ClientBase<TChannel>.ChannelBase<T>.IContextChannel.AllowOutputBatching
  nameWithType.vb: ClientBase(Of TChannel).ChannelBase(Of T).System.ServiceModel.IContextChannel.AllowOutputBatching
- uid: System.ServiceModel.ClientBase`1.ChannelBase`1.System#ServiceModel#IContextChannel#InputSession
  commentId: P:System.ServiceModel.ClientBase`1.ChannelBase`1.System#ServiceModel#IContextChannel#InputSession
  id: System#ServiceModel#IContextChannel#InputSession
  isEii: true
  parent: System.ServiceModel.ClientBase`1.ChannelBase`1
  langs:
  - csharp
  - vb
  name: IContextChannel.InputSession
  fullName: System.ServiceModel.ClientBase<TChannel>.ChannelBase<T>.System.ServiceModel.IContextChannel.InputSession
  type: Property
  source:
    remote:
      path: src/System.ServiceModel.Primitives/ref/System.ServiceModel.Primitives.cs
      branch: master
      repo: https://github.com/dotnet/wcf.git
    id: System.ServiceModel.IContextChannel.InputSession
    path: src/System.ServiceModel.Primitives/ref/System.ServiceModel.Primitives.cs
    startLine: 102
  assemblies:
  - System.ServiceModel.Primitives
  namespace: System.ServiceModel
  summary: "\n<p>Gets the input session for the channel.</p>\n"
  syntax:
    content: IInputSession IContextChannel.InputSession { get; }
    content.vb: ReadOnly WriteOnly Property System.ServiceModel.IContextChannel.InputSession As IInputSession Implements IContextChannel.InputSession
    parameters: []
    return:
      type: System.ServiceModel.Channels.IInputSession
      description: "\n<p>The input session for the channel.</p>\n"
  implements:
  - System.ServiceModel.IContextChannel.InputSession
  modifiers.csharp:
  - get
  modifiers.vb:
  - ReadOnly
  fullName.vb: System.ServiceModel.ClientBase(Of TChannel).ChannelBase(Of T).System.ServiceModel.IContextChannel.InputSession
  name.vb: System.ServiceModel.IContextChannel.InputSession
  nameWithType: ClientBase<TChannel>.ChannelBase<T>.IContextChannel.InputSession
  nameWithType.vb: ClientBase(Of TChannel).ChannelBase(Of T).System.ServiceModel.IContextChannel.InputSession
- uid: System.ServiceModel.ClientBase`1.ChannelBase`1.System#ServiceModel#IContextChannel#LocalAddress
  commentId: P:System.ServiceModel.ClientBase`1.ChannelBase`1.System#ServiceModel#IContextChannel#LocalAddress
  id: System#ServiceModel#IContextChannel#LocalAddress
  isEii: true
  parent: System.ServiceModel.ClientBase`1.ChannelBase`1
  langs:
  - csharp
  - vb
  name: IContextChannel.LocalAddress
  fullName: System.ServiceModel.ClientBase<TChannel>.ChannelBase<T>.System.ServiceModel.IContextChannel.LocalAddress
  type: Property
  source:
    remote:
      path: src/System.ServiceModel.Primitives/ref/System.ServiceModel.Primitives.cs
      branch: master
      repo: https://github.com/dotnet/wcf.git
    id: System.ServiceModel.IContextChannel.LocalAddress
    path: src/System.ServiceModel.Primitives/ref/System.ServiceModel.Primitives.cs
    startLine: 103
  assemblies:
  - System.ServiceModel.Primitives
  namespace: System.ServiceModel
  summary: "\n<p>Gets the local endpoint for the channel.</p>\n"
  syntax:
    content: EndpointAddress IContextChannel.LocalAddress { get; }
    content.vb: ReadOnly WriteOnly Property System.ServiceModel.IContextChannel.LocalAddress As EndpointAddress Implements IContextChannel.LocalAddress
    parameters: []
    return:
      type: System.ServiceModel.EndpointAddress
      description: "\n<p>The local endpoint for the channel.</p>\n"
  implements:
  - System.ServiceModel.IContextChannel.LocalAddress
  modifiers.csharp:
  - get
  modifiers.vb:
  - ReadOnly
  fullName.vb: System.ServiceModel.ClientBase(Of TChannel).ChannelBase(Of T).System.ServiceModel.IContextChannel.LocalAddress
  name.vb: System.ServiceModel.IContextChannel.LocalAddress
  nameWithType: ClientBase<TChannel>.ChannelBase<T>.IContextChannel.LocalAddress
  nameWithType.vb: ClientBase(Of TChannel).ChannelBase(Of T).System.ServiceModel.IContextChannel.LocalAddress
- uid: System.ServiceModel.ClientBase`1.ChannelBase`1.System#ServiceModel#IContextChannel#OperationTimeout
  commentId: P:System.ServiceModel.ClientBase`1.ChannelBase`1.System#ServiceModel#IContextChannel#OperationTimeout
  id: System#ServiceModel#IContextChannel#OperationTimeout
  isEii: true
  parent: System.ServiceModel.ClientBase`1.ChannelBase`1
  langs:
  - csharp
  - vb
  name: IContextChannel.OperationTimeout
  fullName: System.ServiceModel.ClientBase<TChannel>.ChannelBase<T>.System.ServiceModel.IContextChannel.OperationTimeout
  type: Property
  source:
    remote:
      path: src/System.ServiceModel.Primitives/ref/System.ServiceModel.Primitives.cs
      branch: master
      repo: https://github.com/dotnet/wcf.git
    id: System.ServiceModel.IContextChannel.OperationTimeout
    path: src/System.ServiceModel.Primitives/ref/System.ServiceModel.Primitives.cs
    startLine: 104
  assemblies:
  - System.ServiceModel.Primitives
  namespace: System.ServiceModel
  summary: "\n<p>Gets or sets the time period within which an operation must complete or an exception is thrown.</p>\n"
  syntax:
    content: TimeSpan IContextChannel.OperationTimeout { get; set; }
    content.vb: ReadOnly WriteOnly Property System.ServiceModel.IContextChannel.OperationTimeout As TimeSpan Implements IContextChannel.OperationTimeout
    parameters: []
    return:
      type: System.TimeSpan
      description: "\n<p>The timespan that specifies the time period within which an operation must complete.</p>\n"
  implements:
  - System.ServiceModel.IContextChannel.OperationTimeout
  modifiers.csharp:
  - get
  - set
  fullName.vb: System.ServiceModel.ClientBase(Of TChannel).ChannelBase(Of T).System.ServiceModel.IContextChannel.OperationTimeout
  name.vb: System.ServiceModel.IContextChannel.OperationTimeout
  nameWithType: ClientBase<TChannel>.ChannelBase<T>.IContextChannel.OperationTimeout
  nameWithType.vb: ClientBase(Of TChannel).ChannelBase(Of T).System.ServiceModel.IContextChannel.OperationTimeout
- uid: System.ServiceModel.ClientBase`1.ChannelBase`1.System#ServiceModel#IContextChannel#OutputSession
  commentId: P:System.ServiceModel.ClientBase`1.ChannelBase`1.System#ServiceModel#IContextChannel#OutputSession
  id: System#ServiceModel#IContextChannel#OutputSession
  isEii: true
  parent: System.ServiceModel.ClientBase`1.ChannelBase`1
  langs:
  - csharp
  - vb
  name: IContextChannel.OutputSession
  fullName: System.ServiceModel.ClientBase<TChannel>.ChannelBase<T>.System.ServiceModel.IContextChannel.OutputSession
  type: Property
  source:
    remote:
      path: src/System.ServiceModel.Primitives/ref/System.ServiceModel.Primitives.cs
      branch: master
      repo: https://github.com/dotnet/wcf.git
    id: System.ServiceModel.IContextChannel.OutputSession
    path: src/System.ServiceModel.Primitives/ref/System.ServiceModel.Primitives.cs
    startLine: 105
  assemblies:
  - System.ServiceModel.Primitives
  namespace: System.ServiceModel
  summary: "\n<p>Gets the output session associated with the channel, if any.</p>\n"
  syntax:
    content: IOutputSession IContextChannel.OutputSession { get; }
    content.vb: ReadOnly WriteOnly Property System.ServiceModel.IContextChannel.OutputSession As IOutputSession Implements IContextChannel.OutputSession
    parameters: []
    return:
      type: System.ServiceModel.Channels.IOutputSession
      description: "\n<p>A <xref href=\"System.ServiceModel.Channels.IOutputSession\" data-throw-if-not-resolved=\"false\"></xref> implementation if an input session exists; otherwise, null.</p>\n"
  implements:
  - System.ServiceModel.IContextChannel.OutputSession
  modifiers.csharp:
  - get
  modifiers.vb:
  - ReadOnly
  fullName.vb: System.ServiceModel.ClientBase(Of TChannel).ChannelBase(Of T).System.ServiceModel.IContextChannel.OutputSession
  name.vb: System.ServiceModel.IContextChannel.OutputSession
  nameWithType: ClientBase<TChannel>.ChannelBase<T>.IContextChannel.OutputSession
  nameWithType.vb: ClientBase(Of TChannel).ChannelBase(Of T).System.ServiceModel.IContextChannel.OutputSession
- uid: System.ServiceModel.ClientBase`1.ChannelBase`1.System#ServiceModel#IContextChannel#RemoteAddress
  commentId: P:System.ServiceModel.ClientBase`1.ChannelBase`1.System#ServiceModel#IContextChannel#RemoteAddress
  id: System#ServiceModel#IContextChannel#RemoteAddress
  isEii: true
  parent: System.ServiceModel.ClientBase`1.ChannelBase`1
  langs:
  - csharp
  - vb
  name: IContextChannel.RemoteAddress
  fullName: System.ServiceModel.ClientBase<TChannel>.ChannelBase<T>.System.ServiceModel.IContextChannel.RemoteAddress
  type: Property
  source:
    remote:
      path: src/System.ServiceModel.Primitives/ref/System.ServiceModel.Primitives.cs
      branch: master
      repo: https://github.com/dotnet/wcf.git
    id: System.ServiceModel.IContextChannel.RemoteAddress
    path: src/System.ServiceModel.Primitives/ref/System.ServiceModel.Primitives.cs
    startLine: 106
  assemblies:
  - System.ServiceModel.Primitives
  namespace: System.ServiceModel
  summary: "\n<p>Gets the remote address associated with the channel.</p>\n"
  syntax:
    content: EndpointAddress IContextChannel.RemoteAddress { get; }
    content.vb: ReadOnly WriteOnly Property System.ServiceModel.IContextChannel.RemoteAddress As EndpointAddress Implements IContextChannel.RemoteAddress
    parameters: []
    return:
      type: System.ServiceModel.EndpointAddress
      description: "\n<p>The remote <xref href=\"System.ServiceModel.EndpointAddress\" data-throw-if-not-resolved=\"false\"></xref> for the channel.</p>\n"
  implements:
  - System.ServiceModel.IContextChannel.RemoteAddress
  modifiers.csharp:
  - get
  modifiers.vb:
  - ReadOnly
  fullName.vb: System.ServiceModel.ClientBase(Of TChannel).ChannelBase(Of T).System.ServiceModel.IContextChannel.RemoteAddress
  name.vb: System.ServiceModel.IContextChannel.RemoteAddress
  nameWithType: ClientBase<TChannel>.ChannelBase<T>.IContextChannel.RemoteAddress
  nameWithType.vb: ClientBase(Of TChannel).ChannelBase(Of T).System.ServiceModel.IContextChannel.RemoteAddress
- uid: System.ServiceModel.ClientBase`1.ChannelBase`1.System#ServiceModel#IContextChannel#SessionId
  commentId: P:System.ServiceModel.ClientBase`1.ChannelBase`1.System#ServiceModel#IContextChannel#SessionId
  id: System#ServiceModel#IContextChannel#SessionId
  isEii: true
  parent: System.ServiceModel.ClientBase`1.ChannelBase`1
  langs:
  - csharp
  - vb
  name: IContextChannel.SessionId
  fullName: System.ServiceModel.ClientBase<TChannel>.ChannelBase<T>.System.ServiceModel.IContextChannel.SessionId
  type: Property
  source:
    remote:
      path: src/System.ServiceModel.Primitives/ref/System.ServiceModel.Primitives.cs
      branch: master
      repo: https://github.com/dotnet/wcf.git
    id: System.ServiceModel.IContextChannel.SessionId
    path: src/System.ServiceModel.Primitives/ref/System.ServiceModel.Primitives.cs
    startLine: 107
  assemblies:
  - System.ServiceModel.Primitives
  namespace: System.ServiceModel
  summary: "\n<p>Gets an identifier for the current session, if any.</p>\n"
  syntax:
    content: string IContextChannel.SessionId { get; }
    content.vb: ReadOnly WriteOnly Property System.ServiceModel.IContextChannel.SessionId As String Implements IContextChannel.SessionId
    parameters: []
    return:
      type: System.String
      description: "\n<p>The current session identifier, if any.</p>\n"
  implements:
  - System.ServiceModel.IContextChannel.SessionId
  modifiers.csharp:
  - get
  modifiers.vb:
  - ReadOnly
  fullName.vb: System.ServiceModel.ClientBase(Of TChannel).ChannelBase(Of T).System.ServiceModel.IContextChannel.SessionId
  name.vb: System.ServiceModel.IContextChannel.SessionId
  nameWithType: ClientBase<TChannel>.ChannelBase<T>.IContextChannel.SessionId
  nameWithType.vb: ClientBase(Of TChannel).ChannelBase(Of T).System.ServiceModel.IContextChannel.SessionId
- uid: System.ServiceModel.ClientBase`1.ChannelBase`1.System#ServiceModel#IExtensibleObject{System#ServiceModel#IContextChannel}#Extensions
  commentId: P:System.ServiceModel.ClientBase`1.ChannelBase`1.System#ServiceModel#IExtensibleObject{System#ServiceModel#IContextChannel}#Extensions
  id: System#ServiceModel#IExtensibleObject{System#ServiceModel#IContextChannel}#Extensions
  isEii: true
  parent: System.ServiceModel.ClientBase`1.ChannelBase`1
  langs:
  - csharp
  - vb
  name: IExtensibleObject<IContextChannel>.Extensions
  fullName: System.ServiceModel.ClientBase<TChannel>.ChannelBase<T>.System.ServiceModel.IExtensibleObject<System.ServiceModel.IContextChannel>.Extensions
  type: Property
  source:
    remote:
      path: src/System.ServiceModel.Primitives/ref/System.ServiceModel.Primitives.cs
      branch: master
      repo: https://github.com/dotnet/wcf.git
    id: System.ServiceModel.IExtensibleObject<System.ServiceModel.IContextChannel>.Extensions
    path: src/System.ServiceModel.Primitives/ref/System.ServiceModel.Primitives.cs
    startLine: 108
  assemblies:
  - System.ServiceModel.Primitives
  namespace: System.ServiceModel
  summary: "\n<p>Gets a collection of extension objects for this extensible object.</p>\n"
  syntax:
    content: IExtensionCollection<IContextChannel> IExtensibleObject<IContextChannel>.Extensions { get; }
    content.vb: ReadOnly WriteOnly Property System.ServiceModel.IExtensibleObject<System.ServiceModel.IContextChannel>.Extensions As IExtensionCollection(Of IContextChannel) Implements IExtensibleObject(Of IContextChannel).Extensions
    parameters: []
    return:
      type: System.ServiceModel.IExtensionCollection{System.ServiceModel.IContextChannel}
      description: "\n<p>The <xref href=\"System.ServiceModel.IExtensionCollection`1\" data-throw-if-not-resolved=\"false\"></xref> of extension objects.</p>\n"
  implements:
  - System.ServiceModel.IExtensibleObject{System.ServiceModel.IContextChannel}.Extensions
  modifiers.csharp:
  - get
  modifiers.vb:
  - ReadOnly
  fullName.vb: System.ServiceModel.ClientBase(Of TChannel).ChannelBase(Of T).System.ServiceModel.IExtensibleObject<System.ServiceModel.IContextChannel>.Extensions
  name.vb: System.ServiceModel.IExtensibleObject<System.ServiceModel.IContextChannel>.Extensions
  nameWithType: ClientBase<TChannel>.ChannelBase<T>.IExtensibleObject<IContextChannel>.Extensions
  nameWithType.vb: ClientBase(Of TChannel).ChannelBase(Of T).System.ServiceModel.IExtensibleObject<System.ServiceModel.IContextChannel>.Extensions
- uid: System.ServiceModel.ClientBase`1.ChannelBase`1.System#ServiceModel#IClientChannel#UnknownMessageReceived
  commentId: E:System.ServiceModel.ClientBase`1.ChannelBase`1.System#ServiceModel#IClientChannel#UnknownMessageReceived
  id: System#ServiceModel#IClientChannel#UnknownMessageReceived
  isEii: true
  parent: System.ServiceModel.ClientBase`1.ChannelBase`1
  langs:
  - csharp
  - vb
  name: IClientChannel.UnknownMessageReceived
  fullName: System.ServiceModel.ClientBase<TChannel>.ChannelBase<T>.System.ServiceModel.IClientChannel.UnknownMessageReceived
  type: Event
  source:
    remote:
      path: src/System.ServiceModel.Primitives/ref/System.ServiceModel.Primitives.cs
      branch: master
      repo: https://github.com/dotnet/wcf.git
    id: System.ServiceModel.IClientChannel.UnknownMessageReceived
    path: src/System.ServiceModel.Primitives/ref/System.ServiceModel.Primitives.cs
    startLine: 109
  assemblies:
  - System.ServiceModel.Primitives
  namespace: System.ServiceModel
  summary: "\n<p>The event handler that is invoked when the ClientBase object receives an unknown message.</p>\n"
  syntax:
    content: event EventHandler<UnknownMessageReceivedEventArgs> IClientChannel.UnknownMessageReceived
    content.vb: Event System.ServiceModel.IClientChannel.UnknownMessageReceived As EventHandler(Of UnknownMessageReceivedEventArgs) Implements IClientChannel.UnknownMessageReceived
    return:
      type: System.EventHandler{System.ServiceModel.UnknownMessageReceivedEventArgs}
  implements:
  - System.ServiceModel.IClientChannel.UnknownMessageReceived
  fullName.vb: System.ServiceModel.ClientBase(Of TChannel).ChannelBase(Of T).System.ServiceModel.IClientChannel.UnknownMessageReceived
  name.vb: System.ServiceModel.IClientChannel.UnknownMessageReceived
  nameWithType: ClientBase<TChannel>.ChannelBase<T>.IClientChannel.UnknownMessageReceived
  nameWithType.vb: ClientBase(Of TChannel).ChannelBase(Of T).System.ServiceModel.IClientChannel.UnknownMessageReceived
- uid: System.ServiceModel.ClientBase`1.ChannelBase`1.System#ServiceModel#ICommunicationObject#Closed
  commentId: E:System.ServiceModel.ClientBase`1.ChannelBase`1.System#ServiceModel#ICommunicationObject#Closed
  id: System#ServiceModel#ICommunicationObject#Closed
  isEii: true
  parent: System.ServiceModel.ClientBase`1.ChannelBase`1
  langs:
  - csharp
  - vb
  name: ICommunicationObject.Closed
  fullName: System.ServiceModel.ClientBase<TChannel>.ChannelBase<T>.System.ServiceModel.ICommunicationObject.Closed
  type: Event
  source:
    remote:
      path: src/System.ServiceModel.Primitives/ref/System.ServiceModel.Primitives.cs
      branch: master
      repo: https://github.com/dotnet/wcf.git
    id: System.ServiceModel.ICommunicationObject.Closed
    path: src/System.ServiceModel.Primitives/ref/System.ServiceModel.Primitives.cs
    startLine: 110
  assemblies:
  - System.ServiceModel.Primitives
  namespace: System.ServiceModel
  summary: "\n<p>The event handler that is invoked when the ClientBase object has transitioned from its current state to the closed state.</p>\n"
  syntax:
    content: event EventHandler ICommunicationObject.Closed
    content.vb: Event System.ServiceModel.ICommunicationObject.Closed As EventHandler Implements ICommunicationObject.Closed
    return:
      type: System.EventHandler
  implements:
  - System.ServiceModel.ICommunicationObject.Closed
  fullName.vb: System.ServiceModel.ClientBase(Of TChannel).ChannelBase(Of T).System.ServiceModel.ICommunicationObject.Closed
  name.vb: System.ServiceModel.ICommunicationObject.Closed
  nameWithType: ClientBase<TChannel>.ChannelBase<T>.ICommunicationObject.Closed
  nameWithType.vb: ClientBase(Of TChannel).ChannelBase(Of T).System.ServiceModel.ICommunicationObject.Closed
- uid: System.ServiceModel.ClientBase`1.ChannelBase`1.System#ServiceModel#ICommunicationObject#Closing
  commentId: E:System.ServiceModel.ClientBase`1.ChannelBase`1.System#ServiceModel#ICommunicationObject#Closing
  id: System#ServiceModel#ICommunicationObject#Closing
  isEii: true
  parent: System.ServiceModel.ClientBase`1.ChannelBase`1
  langs:
  - csharp
  - vb
  name: ICommunicationObject.Closing
  fullName: System.ServiceModel.ClientBase<TChannel>.ChannelBase<T>.System.ServiceModel.ICommunicationObject.Closing
  type: Event
  source:
    remote:
      path: src/System.ServiceModel.Primitives/ref/System.ServiceModel.Primitives.cs
      branch: master
      repo: https://github.com/dotnet/wcf.git
    id: System.ServiceModel.ICommunicationObject.Closing
    path: src/System.ServiceModel.Primitives/ref/System.ServiceModel.Primitives.cs
    startLine: 111
  assemblies:
  - System.ServiceModel.Primitives
  namespace: System.ServiceModel
  summary: "\n<p>The event handler that is invoked when the ClientBase object transitions from its current state to the closed state.</p>\n"
  syntax:
    content: event EventHandler ICommunicationObject.Closing
    content.vb: Event System.ServiceModel.ICommunicationObject.Closing As EventHandler Implements ICommunicationObject.Closing
    return:
      type: System.EventHandler
  implements:
  - System.ServiceModel.ICommunicationObject.Closing
  fullName.vb: System.ServiceModel.ClientBase(Of TChannel).ChannelBase(Of T).System.ServiceModel.ICommunicationObject.Closing
  name.vb: System.ServiceModel.ICommunicationObject.Closing
  nameWithType: ClientBase<TChannel>.ChannelBase<T>.ICommunicationObject.Closing
  nameWithType.vb: ClientBase(Of TChannel).ChannelBase(Of T).System.ServiceModel.ICommunicationObject.Closing
- uid: System.ServiceModel.ClientBase`1.ChannelBase`1.System#ServiceModel#ICommunicationObject#Faulted
  commentId: E:System.ServiceModel.ClientBase`1.ChannelBase`1.System#ServiceModel#ICommunicationObject#Faulted
  id: System#ServiceModel#ICommunicationObject#Faulted
  isEii: true
  parent: System.ServiceModel.ClientBase`1.ChannelBase`1
  langs:
  - csharp
  - vb
  name: ICommunicationObject.Faulted
  fullName: System.ServiceModel.ClientBase<TChannel>.ChannelBase<T>.System.ServiceModel.ICommunicationObject.Faulted
  type: Event
  source:
    remote:
      path: src/System.ServiceModel.Primitives/ref/System.ServiceModel.Primitives.cs
      branch: master
      repo: https://github.com/dotnet/wcf.git
    id: System.ServiceModel.ICommunicationObject.Faulted
    path: src/System.ServiceModel.Primitives/ref/System.ServiceModel.Primitives.cs
    startLine: 112
  assemblies:
  - System.ServiceModel.Primitives
  namespace: System.ServiceModel
  summary: "\n<p>The event handler that is invoked when fault occurs while performing an operation on the ClientBase object.</p>\n"
  syntax:
    content: event EventHandler ICommunicationObject.Faulted
    content.vb: Event System.ServiceModel.ICommunicationObject.Faulted As EventHandler Implements ICommunicationObject.Faulted
    return:
      type: System.EventHandler
  implements:
  - System.ServiceModel.ICommunicationObject.Faulted
  fullName.vb: System.ServiceModel.ClientBase(Of TChannel).ChannelBase(Of T).System.ServiceModel.ICommunicationObject.Faulted
  name.vb: System.ServiceModel.ICommunicationObject.Faulted
  nameWithType: ClientBase<TChannel>.ChannelBase<T>.ICommunicationObject.Faulted
  nameWithType.vb: ClientBase(Of TChannel).ChannelBase(Of T).System.ServiceModel.ICommunicationObject.Faulted
- uid: System.ServiceModel.ClientBase`1.ChannelBase`1.System#ServiceModel#ICommunicationObject#Opened
  commentId: E:System.ServiceModel.ClientBase`1.ChannelBase`1.System#ServiceModel#ICommunicationObject#Opened
  id: System#ServiceModel#ICommunicationObject#Opened
  isEii: true
  parent: System.ServiceModel.ClientBase`1.ChannelBase`1
  langs:
  - csharp
  - vb
  name: ICommunicationObject.Opened
  fullName: System.ServiceModel.ClientBase<TChannel>.ChannelBase<T>.System.ServiceModel.ICommunicationObject.Opened
  type: Event
  source:
    remote:
      path: src/System.ServiceModel.Primitives/ref/System.ServiceModel.Primitives.cs
      branch: master
      repo: https://github.com/dotnet/wcf.git
    id: System.ServiceModel.ICommunicationObject.Opened
    path: src/System.ServiceModel.Primitives/ref/System.ServiceModel.Primitives.cs
    startLine: 113
  assemblies:
  - System.ServiceModel.Primitives
  namespace: System.ServiceModel
  summary: "\n<p>The event handler that is invoked when the ClientBase object has transitioned from the created state to the opened state.</p>\n"
  syntax:
    content: event EventHandler ICommunicationObject.Opened
    content.vb: Event System.ServiceModel.ICommunicationObject.Opened As EventHandler Implements ICommunicationObject.Opened
    return:
      type: System.EventHandler
  implements:
  - System.ServiceModel.ICommunicationObject.Opened
  fullName.vb: System.ServiceModel.ClientBase(Of TChannel).ChannelBase(Of T).System.ServiceModel.ICommunicationObject.Opened
  name.vb: System.ServiceModel.ICommunicationObject.Opened
  nameWithType: ClientBase<TChannel>.ChannelBase<T>.ICommunicationObject.Opened
  nameWithType.vb: ClientBase(Of TChannel).ChannelBase(Of T).System.ServiceModel.ICommunicationObject.Opened
- uid: System.ServiceModel.ClientBase`1.ChannelBase`1.System#ServiceModel#ICommunicationObject#Opening
  commentId: E:System.ServiceModel.ClientBase`1.ChannelBase`1.System#ServiceModel#ICommunicationObject#Opening
  id: System#ServiceModel#ICommunicationObject#Opening
  isEii: true
  parent: System.ServiceModel.ClientBase`1.ChannelBase`1
  langs:
  - csharp
  - vb
  name: ICommunicationObject.Opening
  fullName: System.ServiceModel.ClientBase<TChannel>.ChannelBase<T>.System.ServiceModel.ICommunicationObject.Opening
  type: Event
  source:
    remote:
      path: src/System.ServiceModel.Primitives/ref/System.ServiceModel.Primitives.cs
      branch: master
      repo: https://github.com/dotnet/wcf.git
    id: System.ServiceModel.ICommunicationObject.Opening
    path: src/System.ServiceModel.Primitives/ref/System.ServiceModel.Primitives.cs
    startLine: 114
  assemblies:
  - System.ServiceModel.Primitives
  namespace: System.ServiceModel
  summary: "\n<p>The event handler that is invoked when the ClientBase object transitions from the created state to the opened state.</p>\n"
  syntax:
    content: event EventHandler ICommunicationObject.Opening
    content.vb: Event System.ServiceModel.ICommunicationObject.Opening As EventHandler Implements ICommunicationObject.Opening
    return:
      type: System.EventHandler
  implements:
  - System.ServiceModel.ICommunicationObject.Opening
  fullName.vb: System.ServiceModel.ClientBase(Of TChannel).ChannelBase(Of T).System.ServiceModel.ICommunicationObject.Opening
  name.vb: System.ServiceModel.ICommunicationObject.Opening
  nameWithType: ClientBase<TChannel>.ChannelBase<T>.ICommunicationObject.Opening
  nameWithType.vb: ClientBase(Of TChannel).ChannelBase(Of T).System.ServiceModel.ICommunicationObject.Opening
- uid: System.ServiceModel.ClientBase`1.ChannelBase`1.BeginInvoke(System.String,System.Object[],System.AsyncCallback,System.Object)
  commentId: M:System.ServiceModel.ClientBase`1.ChannelBase`1.BeginInvoke(System.String,System.Object[],System.AsyncCallback,System.Object)
  id: BeginInvoke(System.String,System.Object[],System.AsyncCallback,System.Object)
  parent: System.ServiceModel.ClientBase`1.ChannelBase`1
  langs:
  - csharp
  - vb
  name: BeginInvoke(String, Object[], AsyncCallback, Object)
  fullName: System.ServiceModel.ClientBase<TChannel>.ChannelBase<T>.BeginInvoke(System.String, System.Object[], System.AsyncCallback, System.Object)
  type: Method
  source:
    remote:
      path: src/System.ServiceModel.Primitives/ref/System.ServiceModel.Primitives.cs
      branch: master
      repo: https://github.com/dotnet/wcf.git
    id: BeginInvoke
    path: src/System.ServiceModel.Primitives/ref/System.ServiceModel.Primitives.cs
    startLine: 115
  assemblies:
  - System.ServiceModel.Primitives
  namespace: System.ServiceModel
  summary: "\n<p>Starts an asynchronous call of a specified method by name.</p>\n"
  syntax:
    content: >-
      [SecuritySafeCritical]

      protected IAsyncResult BeginInvoke(string methodName, object[] args, AsyncCallback callback, object state)
    content.vb: >-
      <SecuritySafeCritical>

      Protected Function BeginInvoke(methodName As String, args As Object(), callback As AsyncCallback, state As Object) As IAsyncResult
    parameters:
    - id: methodName
      type: System.String
      description: "\n<p>The name of the method to be called asynchronously.</p>\n"
    - id: args
      type: System.Object[]
      description: "\n<p>An array of arguments for the method invoked.</p>\n"
    - id: callback
      type: System.AsyncCallback
      description: "\n<p>The <xref href=\"System.AsyncCallback\" data-throw-if-not-resolved=\"false\"></xref> delegate.</p>\n"
    - id: state
      type: System.Object
      description: "\n<p>The state object.</p>\n"
    return:
      type: System.IAsyncResult
      description: "\n<p>The <xref href=\"System.IAsyncResult\" data-throw-if-not-resolved=\"false\"></xref> that references the asynchronous method invoked.</p>\n"
  attributes:
  - type: System.Security.SecuritySafeCriticalAttribute
    ctor: System.Security.SecuritySafeCriticalAttribute.#ctor
    arguments: []
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
  fullName.vb: System.ServiceModel.ClientBase(Of TChannel).ChannelBase(Of T).BeginInvoke(System.String, System.Object(), System.AsyncCallback, System.Object)
  name.vb: BeginInvoke(String, Object(), AsyncCallback, Object)
  nameWithType: ClientBase<TChannel>.ChannelBase<T>.BeginInvoke(String, Object[], AsyncCallback, Object)
  nameWithType.vb: ClientBase(Of TChannel).ChannelBase(Of T).BeginInvoke(String, Object(), AsyncCallback, Object)
- uid: System.ServiceModel.ClientBase`1.ChannelBase`1.EndInvoke(System.String,System.Object[],System.IAsyncResult)
  commentId: M:System.ServiceModel.ClientBase`1.ChannelBase`1.EndInvoke(System.String,System.Object[],System.IAsyncResult)
  id: EndInvoke(System.String,System.Object[],System.IAsyncResult)
  parent: System.ServiceModel.ClientBase`1.ChannelBase`1
  langs:
  - csharp
  - vb
  name: EndInvoke(String, Object[], IAsyncResult)
  fullName: System.ServiceModel.ClientBase<TChannel>.ChannelBase<T>.EndInvoke(System.String, System.Object[], System.IAsyncResult)
  type: Method
  source:
    remote:
      path: src/System.ServiceModel.Primitives/ref/System.ServiceModel.Primitives.cs
      branch: master
      repo: https://github.com/dotnet/wcf.git
    id: EndInvoke
    path: src/System.ServiceModel.Primitives/ref/System.ServiceModel.Primitives.cs
    startLine: 117
  assemblies:
  - System.ServiceModel.Primitives
  namespace: System.ServiceModel
  summary: "\n<p>Completes an asynchronous invocation by name of a specified method.</p>\n"
  syntax:
    content: >-
      [SecuritySafeCritical]

      protected object EndInvoke(string methodName, object[] args, IAsyncResult result)
    content.vb: >-
      <SecuritySafeCritical>

      Protected Function EndInvoke(methodName As String, args As Object(), result As IAsyncResult) As Object
    parameters:
    - id: methodName
      type: System.String
      description: "\n<p>The name of the method called asynchronously.</p>\n"
    - id: args
      type: System.Object[]
      description: "\n<p>An array of arguments for the method invoked.</p>\n"
    - id: result
      type: System.IAsyncResult
      description: "\n<p>The result returned by a call.</p>\n"
    return:
      type: System.Object
      description: "\n<p>The <xref href=\"System.Object\" data-throw-if-not-resolved=\"false\"></xref> output by the method invoked.</p>\n"
  attributes:
  - type: System.Security.SecuritySafeCriticalAttribute
    ctor: System.Security.SecuritySafeCriticalAttribute.#ctor
    arguments: []
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
  fullName.vb: System.ServiceModel.ClientBase(Of TChannel).ChannelBase(Of T).EndInvoke(System.String, System.Object(), System.IAsyncResult)
  name.vb: EndInvoke(String, Object(), IAsyncResult)
  nameWithType: ClientBase<TChannel>.ChannelBase<T>.EndInvoke(String, Object[], IAsyncResult)
  nameWithType.vb: ClientBase(Of TChannel).ChannelBase(Of T).EndInvoke(String, Object(), IAsyncResult)
- uid: System.ServiceModel.ClientBase`1.ChannelBase`1.System#IDisposable#Dispose
  commentId: M:System.ServiceModel.ClientBase`1.ChannelBase`1.System#IDisposable#Dispose
  id: System#IDisposable#Dispose
  isEii: true
  parent: System.ServiceModel.ClientBase`1.ChannelBase`1
  langs:
  - csharp
  - vb
  name: IDisposable.Dispose()
  fullName: System.ServiceModel.ClientBase<TChannel>.ChannelBase<T>.System.IDisposable.Dispose()
  type: Method
  source:
    remote:
      path: src/System.ServiceModel.Primitives/ref/System.ServiceModel.Primitives.cs
      branch: master
      repo: https://github.com/dotnet/wcf.git
    id: System.IDisposable.Dispose
    path: src/System.ServiceModel.Primitives/ref/System.ServiceModel.Primitives.cs
    startLine: 119
  assemblies:
  - System.ServiceModel.Primitives
  namespace: System.ServiceModel
  summary: "\n<p>Performs application-defined tasks with freeing, releasing, or resetting unmanaged resources associated with the channel.</p>\n"
  syntax:
    content: void IDisposable.Dispose()
    content.vb: Sub System.IDisposable.Dispose Implements IDisposable.Dispose
  implements:
  - System.IDisposable.Dispose
  fullName.vb: System.ServiceModel.ClientBase(Of TChannel).ChannelBase(Of T).System.IDisposable.Dispose()
  name.vb: System.IDisposable.Dispose()
  nameWithType: ClientBase<TChannel>.ChannelBase<T>.IDisposable.Dispose()
  nameWithType.vb: ClientBase(Of TChannel).ChannelBase(Of T).System.IDisposable.Dispose()
- uid: System.ServiceModel.ClientBase`1.ChannelBase`1.System#ServiceModel#Channels#IChannel#GetProperty``1
  commentId: M:System.ServiceModel.ClientBase`1.ChannelBase`1.System#ServiceModel#Channels#IChannel#GetProperty``1
  id: System#ServiceModel#Channels#IChannel#GetProperty``1
  isEii: true
  parent: System.ServiceModel.ClientBase`1.ChannelBase`1
  langs:
  - csharp
  - vb
  name: IChannel.GetProperty<T>()
  fullName: System.ServiceModel.ClientBase<TChannel>.ChannelBase<T>.System.ServiceModel.Channels.IChannel.GetProperty<T>()
  type: Method
  source:
    remote:
      path: src/System.ServiceModel.Primitives/ref/System.ServiceModel.Primitives.cs
      branch: master
      repo: https://github.com/dotnet/wcf.git
    id: System.ServiceModel.Channels.IChannel.GetProperty
    path: src/System.ServiceModel.Primitives/ref/System.ServiceModel.Primitives.cs
    startLine: 120
  assemblies:
  - System.ServiceModel.Primitives
  namespace: System.ServiceModel
  summary: "\n<p>Returns a typed object requested, if present from the appropriate layer in the channel stack.</p>\n"
  syntax:
    content: 'TProperty IChannel.GetProperty<TProperty>()where TProperty : class'
    content.vb: Function System.ServiceModel.Channels.IChannel.GetProperty(Of TProperty As Class) As TProperty Implements IChannel.GetProperty
    typeParameters:
    - id: TProperty
      description: "\n<p>The type object for which the method is querying.</p>\n"
    return:
      type: '{TProperty}'
      description: "\n<p>The typed object T requested if it is present or null if it is not.</p>\n"
  implements:
  - System.ServiceModel.Channels.IChannel.GetProperty``1
  fullName.vb: System.ServiceModel.ClientBase(Of TChannel).ChannelBase(Of T).System.ServiceModel.Channels.IChannel.GetProperty(Of TProperty)()
  name.vb: System.ServiceModel.Channels.IChannel.GetProperty(Of TProperty)()
  nameWithType: ClientBase<TChannel>.ChannelBase<T>.IChannel.GetProperty<T>()
  nameWithType.vb: ClientBase(Of TChannel).ChannelBase(Of T).System.ServiceModel.Channels.IChannel.GetProperty(Of TProperty)()
- uid: System.ServiceModel.ClientBase`1.ChannelBase`1.System#ServiceModel#Channels#IOutputChannel#BeginSend(System.ServiceModel.Channels.Message,System.AsyncCallback,System.Object)
  commentId: M:System.ServiceModel.ClientBase`1.ChannelBase`1.System#ServiceModel#Channels#IOutputChannel#BeginSend(System.ServiceModel.Channels.Message,System.AsyncCallback,System.Object)
  id: System#ServiceModel#Channels#IOutputChannel#BeginSend(System.ServiceModel.Channels.Message,System.AsyncCallback,System.Object)
  isEii: true
  parent: System.ServiceModel.ClientBase`1.ChannelBase`1
  langs:
  - csharp
  - vb
  name: IOutputChannel.BeginSend(Message, AsyncCallback, Object)
  fullName: System.ServiceModel.ClientBase<TChannel>.ChannelBase<T>.System.ServiceModel.Channels.IOutputChannel.BeginSend(System.ServiceModel.Channels.Message, System.AsyncCallback, System.Object)
  type: Method
  source:
    remote:
      path: src/System.ServiceModel.Primitives/ref/System.ServiceModel.Primitives.cs
      branch: master
      repo: https://github.com/dotnet/wcf.git
    id: System.ServiceModel.Channels.IOutputChannel.BeginSend
    path: src/System.ServiceModel.Primitives/ref/System.ServiceModel.Primitives.cs
    startLine: 121
  assemblies:
  - System.ServiceModel.Primitives
  namespace: System.ServiceModel
  summary: "\n<p>Begins an asynchronous operation to transmit a message to the destination of the output channel.</p>\n"
  syntax:
    content: IAsyncResult IOutputChannel.BeginSend(Message message, AsyncCallback callback, object state)
    content.vb: Function System.ServiceModel.Channels.IOutputChannel.BeginSend(message As Message, callback As AsyncCallback, state As Object) As IAsyncResult Implements IOutputChannel.BeginSend
    parameters:
    - id: message
      type: System.ServiceModel.Channels.Message
      description: "\n<p>The message being sent on the output channel.</p>\n"
    - id: callback
      type: System.AsyncCallback
      description: "\n<p>The <xref href=\"System.AsyncCallback\" data-throw-if-not-resolved=\"false\"></xref> delegate.</p>\n"
    - id: state
      type: System.Object
      description: "\n<p>An object, specified by the application, that contains state information associated with the asynchronous send operation.</p>\n"
    return:
      type: System.IAsyncResult
      description: "\n<p>The <xref href=\"System.IAsyncResult\" data-throw-if-not-resolved=\"false\"></xref> that references the asynchronous message transmission.</p>\n"
  implements:
  - System.ServiceModel.Channels.IOutputChannel.BeginSend(System.ServiceModel.Channels.Message,System.AsyncCallback,System.Object)
  fullName.vb: System.ServiceModel.ClientBase(Of TChannel).ChannelBase(Of T).System.ServiceModel.Channels.IOutputChannel.BeginSend(System.ServiceModel.Channels.Message, System.AsyncCallback, System.Object)
  name.vb: System.ServiceModel.Channels.IOutputChannel.BeginSend(Message, AsyncCallback, Object)
  nameWithType: ClientBase<TChannel>.ChannelBase<T>.IOutputChannel.BeginSend(Message, AsyncCallback, Object)
  nameWithType.vb: ClientBase(Of TChannel).ChannelBase(Of T).System.ServiceModel.Channels.IOutputChannel.BeginSend(Message, AsyncCallback, Object)
- uid: System.ServiceModel.ClientBase`1.ChannelBase`1.System#ServiceModel#Channels#IOutputChannel#BeginSend(System.ServiceModel.Channels.Message,System.TimeSpan,System.AsyncCallback,System.Object)
  commentId: M:System.ServiceModel.ClientBase`1.ChannelBase`1.System#ServiceModel#Channels#IOutputChannel#BeginSend(System.ServiceModel.Channels.Message,System.TimeSpan,System.AsyncCallback,System.Object)
  id: System#ServiceModel#Channels#IOutputChannel#BeginSend(System.ServiceModel.Channels.Message,System.TimeSpan,System.AsyncCallback,System.Object)
  isEii: true
  parent: System.ServiceModel.ClientBase`1.ChannelBase`1
  langs:
  - csharp
  - vb
  name: IOutputChannel.BeginSend(Message, TimeSpan, AsyncCallback, Object)
  fullName: System.ServiceModel.ClientBase<TChannel>.ChannelBase<T>.System.ServiceModel.Channels.IOutputChannel.BeginSend(System.ServiceModel.Channels.Message, System.TimeSpan, System.AsyncCallback, System.Object)
  type: Method
  source:
    remote:
      path: src/System.ServiceModel.Primitives/ref/System.ServiceModel.Primitives.cs
      branch: master
      repo: https://github.com/dotnet/wcf.git
    id: System.ServiceModel.Channels.IOutputChannel.BeginSend
    path: src/System.ServiceModel.Primitives/ref/System.ServiceModel.Primitives.cs
    startLine: 122
  assemblies:
  - System.ServiceModel.Primitives
  namespace: System.ServiceModel
  summary: "\n<p>Begins an asynchronous operation to transmit a message to the destination of the output channel within a specified interval of time.</p>\n"
  syntax:
    content: IAsyncResult IOutputChannel.BeginSend(Message message, TimeSpan timeout, AsyncCallback callback, object state)
    content.vb: Function System.ServiceModel.Channels.IOutputChannel.BeginSend(message As Message, timeout As TimeSpan, callback As AsyncCallback, state As Object) As IAsyncResult Implements IOutputChannel.BeginSend
    parameters:
    - id: message
      type: System.ServiceModel.Channels.Message
      description: "\n<p>The message being sent on the output channel.</p>\n"
    - id: timeout
      type: System.TimeSpan
      description: "\n<p>The timespan that specifies how long the send operation has to complete before timing out.</p>\n"
    - id: callback
      type: System.AsyncCallback
      description: "\n<p>The <xref href=\"System.AsyncCallback\" data-throw-if-not-resolved=\"false\"></xref> delegate that receives the notification of the asynchronous operation send completion.</p>\n"
    - id: state
      type: System.Object
      description: "\n<p>An object, specified by the application, that contains state information associated with the asynchronous send operation.</p>\n"
    return:
      type: System.IAsyncResult
      description: "\n<p>The <xref href=\"System.IAsyncResult\" data-throw-if-not-resolved=\"false\"></xref> that references the asynchronous send operation.</p>\n"
  implements:
  - System.ServiceModel.Channels.IOutputChannel.BeginSend(System.ServiceModel.Channels.Message,System.TimeSpan,System.AsyncCallback,System.Object)
  fullName.vb: System.ServiceModel.ClientBase(Of TChannel).ChannelBase(Of T).System.ServiceModel.Channels.IOutputChannel.BeginSend(System.ServiceModel.Channels.Message, System.TimeSpan, System.AsyncCallback, System.Object)
  name.vb: System.ServiceModel.Channels.IOutputChannel.BeginSend(Message, TimeSpan, AsyncCallback, Object)
  nameWithType: ClientBase<TChannel>.ChannelBase<T>.IOutputChannel.BeginSend(Message, TimeSpan, AsyncCallback, Object)
  nameWithType.vb: ClientBase(Of TChannel).ChannelBase(Of T).System.ServiceModel.Channels.IOutputChannel.BeginSend(Message, TimeSpan, AsyncCallback, Object)
- uid: System.ServiceModel.ClientBase`1.ChannelBase`1.System#ServiceModel#Channels#IOutputChannel#EndSend(System.IAsyncResult)
  commentId: M:System.ServiceModel.ClientBase`1.ChannelBase`1.System#ServiceModel#Channels#IOutputChannel#EndSend(System.IAsyncResult)
  id: System#ServiceModel#Channels#IOutputChannel#EndSend(System.IAsyncResult)
  isEii: true
  parent: System.ServiceModel.ClientBase`1.ChannelBase`1
  langs:
  - csharp
  - vb
  name: IOutputChannel.EndSend(IAsyncResult)
  fullName: System.ServiceModel.ClientBase<TChannel>.ChannelBase<T>.System.ServiceModel.Channels.IOutputChannel.EndSend(System.IAsyncResult)
  type: Method
  source:
    remote:
      path: src/System.ServiceModel.Primitives/ref/System.ServiceModel.Primitives.cs
      branch: master
      repo: https://github.com/dotnet/wcf.git
    id: System.ServiceModel.Channels.IOutputChannel.EndSend
    path: src/System.ServiceModel.Primitives/ref/System.ServiceModel.Primitives.cs
    startLine: 123
  assemblies:
  - System.ServiceModel.Primitives
  namespace: System.ServiceModel
  summary: "\n<p>Completes an asynchronous operation to transmit a message to the destination of the output channel.</p>\n"
  syntax:
    content: void IOutputChannel.EndSend(IAsyncResult result)
    content.vb: Sub System.ServiceModel.Channels.IOutputChannel.EndSend(result As IAsyncResult) Implements IOutputChannel.EndSend
    parameters:
    - id: result
      type: System.IAsyncResult
      description: "\n<p>The result returned by a call.</p>\n"
  implements:
  - System.ServiceModel.Channels.IOutputChannel.EndSend(System.IAsyncResult)
  fullName.vb: System.ServiceModel.ClientBase(Of TChannel).ChannelBase(Of T).System.ServiceModel.Channels.IOutputChannel.EndSend(System.IAsyncResult)
  name.vb: System.ServiceModel.Channels.IOutputChannel.EndSend(IAsyncResult)
  nameWithType: ClientBase<TChannel>.ChannelBase<T>.IOutputChannel.EndSend(IAsyncResult)
  nameWithType.vb: ClientBase(Of TChannel).ChannelBase(Of T).System.ServiceModel.Channels.IOutputChannel.EndSend(IAsyncResult)
- uid: System.ServiceModel.ClientBase`1.ChannelBase`1.System#ServiceModel#Channels#IOutputChannel#Send(System.ServiceModel.Channels.Message)
  commentId: M:System.ServiceModel.ClientBase`1.ChannelBase`1.System#ServiceModel#Channels#IOutputChannel#Send(System.ServiceModel.Channels.Message)
  id: System#ServiceModel#Channels#IOutputChannel#Send(System.ServiceModel.Channels.Message)
  isEii: true
  parent: System.ServiceModel.ClientBase`1.ChannelBase`1
  langs:
  - csharp
  - vb
  name: IOutputChannel.Send(Message)
  fullName: System.ServiceModel.ClientBase<TChannel>.ChannelBase<T>.System.ServiceModel.Channels.IOutputChannel.Send(System.ServiceModel.Channels.Message)
  type: Method
  source:
    remote:
      path: src/System.ServiceModel.Primitives/ref/System.ServiceModel.Primitives.cs
      branch: master
      repo: https://github.com/dotnet/wcf.git
    id: System.ServiceModel.Channels.IOutputChannel.Send
    path: src/System.ServiceModel.Primitives/ref/System.ServiceModel.Primitives.cs
    startLine: 124
  assemblies:
  - System.ServiceModel.Primitives
  namespace: System.ServiceModel
  summary: "\n<p>Transmits a message to the destination of the output channel.</p>\n"
  syntax:
    content: void IOutputChannel.Send(Message message)
    content.vb: Sub System.ServiceModel.Channels.IOutputChannel.Send(message As Message) Implements IOutputChannel.Send
    parameters:
    - id: message
      type: System.ServiceModel.Channels.Message
      description: "\n<p>The message being sent on the output channel.</p>\n"
  implements:
  - System.ServiceModel.Channels.IOutputChannel.Send(System.ServiceModel.Channels.Message)
  fullName.vb: System.ServiceModel.ClientBase(Of TChannel).ChannelBase(Of T).System.ServiceModel.Channels.IOutputChannel.Send(System.ServiceModel.Channels.Message)
  name.vb: System.ServiceModel.Channels.IOutputChannel.Send(Message)
  nameWithType: ClientBase<TChannel>.ChannelBase<T>.IOutputChannel.Send(Message)
  nameWithType.vb: ClientBase(Of TChannel).ChannelBase(Of T).System.ServiceModel.Channels.IOutputChannel.Send(Message)
- uid: System.ServiceModel.ClientBase`1.ChannelBase`1.System#ServiceModel#Channels#IOutputChannel#Send(System.ServiceModel.Channels.Message,System.TimeSpan)
  commentId: M:System.ServiceModel.ClientBase`1.ChannelBase`1.System#ServiceModel#Channels#IOutputChannel#Send(System.ServiceModel.Channels.Message,System.TimeSpan)
  id: System#ServiceModel#Channels#IOutputChannel#Send(System.ServiceModel.Channels.Message,System.TimeSpan)
  isEii: true
  parent: System.ServiceModel.ClientBase`1.ChannelBase`1
  langs:
  - csharp
  - vb
  name: IOutputChannel.Send(Message, TimeSpan)
  fullName: System.ServiceModel.ClientBase<TChannel>.ChannelBase<T>.System.ServiceModel.Channels.IOutputChannel.Send(System.ServiceModel.Channels.Message, System.TimeSpan)
  type: Method
  source:
    remote:
      path: src/System.ServiceModel.Primitives/ref/System.ServiceModel.Primitives.cs
      branch: master
      repo: https://github.com/dotnet/wcf.git
    id: System.ServiceModel.Channels.IOutputChannel.Send
    path: src/System.ServiceModel.Primitives/ref/System.ServiceModel.Primitives.cs
    startLine: 125
  assemblies:
  - System.ServiceModel.Primitives
  namespace: System.ServiceModel
  summary: "\n<p>Sends a message on the current output channel within a specified interval of time.</p>\n"
  syntax:
    content: void IOutputChannel.Send(Message message, TimeSpan timeout)
    content.vb: Sub System.ServiceModel.Channels.IOutputChannel.Send(message As Message, timeout As TimeSpan) Implements IOutputChannel.Send
    parameters:
    - id: message
      type: System.ServiceModel.Channels.Message
      description: "\n<p>The message being sent on the output channel.</p>\n"
    - id: timeout
      type: System.TimeSpan
      description: "\n<p>The timespan that specifies how long the send operation has to complete before timing out.</p>\n"
  implements:
  - System.ServiceModel.Channels.IOutputChannel.Send(System.ServiceModel.Channels.Message,System.TimeSpan)
  fullName.vb: System.ServiceModel.ClientBase(Of TChannel).ChannelBase(Of T).System.ServiceModel.Channels.IOutputChannel.Send(System.ServiceModel.Channels.Message, System.TimeSpan)
  name.vb: System.ServiceModel.Channels.IOutputChannel.Send(Message, TimeSpan)
  nameWithType: ClientBase<TChannel>.ChannelBase<T>.IOutputChannel.Send(Message, TimeSpan)
  nameWithType.vb: ClientBase(Of TChannel).ChannelBase(Of T).System.ServiceModel.Channels.IOutputChannel.Send(Message, TimeSpan)
- uid: System.ServiceModel.ClientBase`1.ChannelBase`1.System#ServiceModel#Channels#IRequestChannel#BeginRequest(System.ServiceModel.Channels.Message,System.AsyncCallback,System.Object)
  commentId: M:System.ServiceModel.ClientBase`1.ChannelBase`1.System#ServiceModel#Channels#IRequestChannel#BeginRequest(System.ServiceModel.Channels.Message,System.AsyncCallback,System.Object)
  id: System#ServiceModel#Channels#IRequestChannel#BeginRequest(System.ServiceModel.Channels.Message,System.AsyncCallback,System.Object)
  isEii: true
  parent: System.ServiceModel.ClientBase`1.ChannelBase`1
  langs:
  - csharp
  - vb
  name: IRequestChannel.BeginRequest(Message, AsyncCallback, Object)
  fullName: System.ServiceModel.ClientBase<TChannel>.ChannelBase<T>.System.ServiceModel.Channels.IRequestChannel.BeginRequest(System.ServiceModel.Channels.Message, System.AsyncCallback, System.Object)
  type: Method
  source:
    remote:
      path: src/System.ServiceModel.Primitives/ref/System.ServiceModel.Primitives.cs
      branch: master
      repo: https://github.com/dotnet/wcf.git
    id: System.ServiceModel.Channels.IRequestChannel.BeginRequest
    path: src/System.ServiceModel.Primitives/ref/System.ServiceModel.Primitives.cs
    startLine: 126
  assemblies:
  - System.ServiceModel.Primitives
  namespace: System.ServiceModel
  summary: "\n<p>Begins an asynchronous operation to transmit a request message to the reply-side of a request-reply message exchange.</p>\n"
  syntax:
    content: IAsyncResult IRequestChannel.BeginRequest(Message message, AsyncCallback callback, object state)
    content.vb: Function System.ServiceModel.Channels.IRequestChannel.BeginRequest(message As Message, callback As AsyncCallback, state As Object) As IAsyncResult Implements IRequestChannel.BeginRequest
    parameters:
    - id: message
      type: System.ServiceModel.Channels.Message
      description: "\n<p>The request message to be transmitted.</p>\n"
    - id: callback
      type: System.AsyncCallback
      description: "\n<p>The <xref href=\"System.AsyncCallback\" data-throw-if-not-resolved=\"false\"></xref> delegate that receives the notification of the completion of the asynchronous operation transmitting a request message.</p>\n"
    - id: state
      type: System.Object
      description: "\n<p>An object, specified by the application, that contains state information associated with the asynchronous operation transmitting a request message.</p>\n"
    return:
      type: System.IAsyncResult
      description: "\n<p>The <xref href=\"System.IAsyncResult\" data-throw-if-not-resolved=\"false\"></xref> that references the asynchronous message transmission.</p>\n"
  implements:
  - System.ServiceModel.Channels.IRequestChannel.BeginRequest(System.ServiceModel.Channels.Message,System.AsyncCallback,System.Object)
  fullName.vb: System.ServiceModel.ClientBase(Of TChannel).ChannelBase(Of T).System.ServiceModel.Channels.IRequestChannel.BeginRequest(System.ServiceModel.Channels.Message, System.AsyncCallback, System.Object)
  name.vb: System.ServiceModel.Channels.IRequestChannel.BeginRequest(Message, AsyncCallback, Object)
  nameWithType: ClientBase<TChannel>.ChannelBase<T>.IRequestChannel.BeginRequest(Message, AsyncCallback, Object)
  nameWithType.vb: ClientBase(Of TChannel).ChannelBase(Of T).System.ServiceModel.Channels.IRequestChannel.BeginRequest(Message, AsyncCallback, Object)
- uid: System.ServiceModel.ClientBase`1.ChannelBase`1.System#ServiceModel#Channels#IRequestChannel#BeginRequest(System.ServiceModel.Channels.Message,System.TimeSpan,System.AsyncCallback,System.Object)
  commentId: M:System.ServiceModel.ClientBase`1.ChannelBase`1.System#ServiceModel#Channels#IRequestChannel#BeginRequest(System.ServiceModel.Channels.Message,System.TimeSpan,System.AsyncCallback,System.Object)
  id: System#ServiceModel#Channels#IRequestChannel#BeginRequest(System.ServiceModel.Channels.Message,System.TimeSpan,System.AsyncCallback,System.Object)
  isEii: true
  parent: System.ServiceModel.ClientBase`1.ChannelBase`1
  langs:
  - csharp
  - vb
  name: IRequestChannel.BeginRequest(Message, TimeSpan, AsyncCallback, Object)
  fullName: System.ServiceModel.ClientBase<TChannel>.ChannelBase<T>.System.ServiceModel.Channels.IRequestChannel.BeginRequest(System.ServiceModel.Channels.Message, System.TimeSpan, System.AsyncCallback, System.Object)
  type: Method
  source:
    remote:
      path: src/System.ServiceModel.Primitives/ref/System.ServiceModel.Primitives.cs
      branch: master
      repo: https://github.com/dotnet/wcf.git
    id: System.ServiceModel.Channels.IRequestChannel.BeginRequest
    path: src/System.ServiceModel.Primitives/ref/System.ServiceModel.Primitives.cs
    startLine: 127
  assemblies:
  - System.ServiceModel.Primitives
  namespace: System.ServiceModel
  summary: "\n<p>Begins an asynchronous operation to transmit a request message to the reply-side of a request-reply message exchange within a specified interval of time.</p>\n"
  syntax:
    content: IAsyncResult IRequestChannel.BeginRequest(Message message, TimeSpan timeout, AsyncCallback callback, object state)
    content.vb: Function System.ServiceModel.Channels.IRequestChannel.BeginRequest(message As Message, timeout As TimeSpan, callback As AsyncCallback, state As Object) As IAsyncResult Implements IRequestChannel.BeginRequest
    parameters:
    - id: message
      type: System.ServiceModel.Channels.Message
      description: "\n<p>The request message to be transmitted.</p>\n"
    - id: timeout
      type: System.TimeSpan
      description: "\n<p>The timespan that specifies the interval of time within which a response must be received.</p>\n"
    - id: callback
      type: System.AsyncCallback
      description: "\n<p>The <xref href=\"System.AsyncCallback\" data-throw-if-not-resolved=\"false\"></xref> delegate that receives the notification of the completion of the asynchronous operation transmitting a request message.</p>\n"
    - id: state
      type: System.Object
      description: "\n<p>An object, specified by the application, that contains state information associated with the asynchronous operation transmitting a request message.</p>\n"
    return:
      type: System.IAsyncResult
      description: "\n<p>The <xref href=\"System.IAsyncResult\" data-throw-if-not-resolved=\"false\"></xref> that references the asynchronous message transmission.</p>\n"
  implements:
  - System.ServiceModel.Channels.IRequestChannel.BeginRequest(System.ServiceModel.Channels.Message,System.TimeSpan,System.AsyncCallback,System.Object)
  fullName.vb: System.ServiceModel.ClientBase(Of TChannel).ChannelBase(Of T).System.ServiceModel.Channels.IRequestChannel.BeginRequest(System.ServiceModel.Channels.Message, System.TimeSpan, System.AsyncCallback, System.Object)
  name.vb: System.ServiceModel.Channels.IRequestChannel.BeginRequest(Message, TimeSpan, AsyncCallback, Object)
  nameWithType: ClientBase<TChannel>.ChannelBase<T>.IRequestChannel.BeginRequest(Message, TimeSpan, AsyncCallback, Object)
  nameWithType.vb: ClientBase(Of TChannel).ChannelBase(Of T).System.ServiceModel.Channels.IRequestChannel.BeginRequest(Message, TimeSpan, AsyncCallback, Object)
- uid: System.ServiceModel.ClientBase`1.ChannelBase`1.System#ServiceModel#Channels#IRequestChannel#EndRequest(System.IAsyncResult)
  commentId: M:System.ServiceModel.ClientBase`1.ChannelBase`1.System#ServiceModel#Channels#IRequestChannel#EndRequest(System.IAsyncResult)
  id: System#ServiceModel#Channels#IRequestChannel#EndRequest(System.IAsyncResult)
  isEii: true
  parent: System.ServiceModel.ClientBase`1.ChannelBase`1
  langs:
  - csharp
  - vb
  name: IRequestChannel.EndRequest(IAsyncResult)
  fullName: System.ServiceModel.ClientBase<TChannel>.ChannelBase<T>.System.ServiceModel.Channels.IRequestChannel.EndRequest(System.IAsyncResult)
  type: Method
  source:
    remote:
      path: src/System.ServiceModel.Primitives/ref/System.ServiceModel.Primitives.cs
      branch: master
      repo: https://github.com/dotnet/wcf.git
    id: System.ServiceModel.Channels.IRequestChannel.EndRequest
    path: src/System.ServiceModel.Primitives/ref/System.ServiceModel.Primitives.cs
    startLine: 128
  assemblies:
  - System.ServiceModel.Primitives
  namespace: System.ServiceModel
  summary: "\n<p>Completes an asynchronous operation to return a message-based response to a transmitted request.</p>\n"
  syntax:
    content: Message IRequestChannel.EndRequest(IAsyncResult result)
    content.vb: Function System.ServiceModel.Channels.IRequestChannel.EndRequest(result As IAsyncResult) As Message Implements IRequestChannel.EndRequest
    parameters:
    - id: result
      type: System.IAsyncResult
      description: "\n<p>The result of the operation.</p>\n"
    return:
      type: System.ServiceModel.Channels.Message
      description: "\n<p>The message received in response to the request.</p>\n"
  implements:
  - System.ServiceModel.Channels.IRequestChannel.EndRequest(System.IAsyncResult)
  fullName.vb: System.ServiceModel.ClientBase(Of TChannel).ChannelBase(Of T).System.ServiceModel.Channels.IRequestChannel.EndRequest(System.IAsyncResult)
  name.vb: System.ServiceModel.Channels.IRequestChannel.EndRequest(IAsyncResult)
  nameWithType: ClientBase<TChannel>.ChannelBase<T>.IRequestChannel.EndRequest(IAsyncResult)
  nameWithType.vb: ClientBase(Of TChannel).ChannelBase(Of T).System.ServiceModel.Channels.IRequestChannel.EndRequest(IAsyncResult)
- uid: System.ServiceModel.ClientBase`1.ChannelBase`1.System#ServiceModel#Channels#IRequestChannel#Request(System.ServiceModel.Channels.Message)
  commentId: M:System.ServiceModel.ClientBase`1.ChannelBase`1.System#ServiceModel#Channels#IRequestChannel#Request(System.ServiceModel.Channels.Message)
  id: System#ServiceModel#Channels#IRequestChannel#Request(System.ServiceModel.Channels.Message)
  isEii: true
  parent: System.ServiceModel.ClientBase`1.ChannelBase`1
  langs:
  - csharp
  - vb
  name: IRequestChannel.Request(Message)
  fullName: System.ServiceModel.ClientBase<TChannel>.ChannelBase<T>.System.ServiceModel.Channels.IRequestChannel.Request(System.ServiceModel.Channels.Message)
  type: Method
  source:
    remote:
      path: src/System.ServiceModel.Primitives/ref/System.ServiceModel.Primitives.cs
      branch: master
      repo: https://github.com/dotnet/wcf.git
    id: System.ServiceModel.Channels.IRequestChannel.Request
    path: src/System.ServiceModel.Primitives/ref/System.ServiceModel.Primitives.cs
    startLine: 129
  assemblies:
  - System.ServiceModel.Primitives
  namespace: System.ServiceModel
  summary: "\n<p>Sends a message-based request and returns the correlated message-based response.</p>\n"
  syntax:
    content: Message IRequestChannel.Request(Message message)
    content.vb: Function System.ServiceModel.Channels.IRequestChannel.Request(message As Message) As Message Implements IRequestChannel.Request
    parameters:
    - id: message
      type: System.ServiceModel.Channels.Message
      description: "\n<p>The request message to be transmitted.</p>\n"
    return:
      type: System.ServiceModel.Channels.Message
      description: "\n<p>The message received in response to the request.</p>\n"
  implements:
  - System.ServiceModel.Channels.IRequestChannel.Request(System.ServiceModel.Channels.Message)
  fullName.vb: System.ServiceModel.ClientBase(Of TChannel).ChannelBase(Of T).System.ServiceModel.Channels.IRequestChannel.Request(System.ServiceModel.Channels.Message)
  name.vb: System.ServiceModel.Channels.IRequestChannel.Request(Message)
  nameWithType: ClientBase<TChannel>.ChannelBase<T>.IRequestChannel.Request(Message)
  nameWithType.vb: ClientBase(Of TChannel).ChannelBase(Of T).System.ServiceModel.Channels.IRequestChannel.Request(Message)
- uid: System.ServiceModel.ClientBase`1.ChannelBase`1.System#ServiceModel#Channels#IRequestChannel#Request(System.ServiceModel.Channels.Message,System.TimeSpan)
  commentId: M:System.ServiceModel.ClientBase`1.ChannelBase`1.System#ServiceModel#Channels#IRequestChannel#Request(System.ServiceModel.Channels.Message,System.TimeSpan)
  id: System#ServiceModel#Channels#IRequestChannel#Request(System.ServiceModel.Channels.Message,System.TimeSpan)
  isEii: true
  parent: System.ServiceModel.ClientBase`1.ChannelBase`1
  langs:
  - csharp
  - vb
  name: IRequestChannel.Request(Message, TimeSpan)
  fullName: System.ServiceModel.ClientBase<TChannel>.ChannelBase<T>.System.ServiceModel.Channels.IRequestChannel.Request(System.ServiceModel.Channels.Message, System.TimeSpan)
  type: Method
  source:
    remote:
      path: src/System.ServiceModel.Primitives/ref/System.ServiceModel.Primitives.cs
      branch: master
      repo: https://github.com/dotnet/wcf.git
    id: System.ServiceModel.Channels.IRequestChannel.Request
    path: src/System.ServiceModel.Primitives/ref/System.ServiceModel.Primitives.cs
    startLine: 130
  assemblies:
  - System.ServiceModel.Primitives
  namespace: System.ServiceModel
  summary: "\n<p>Sends a message-based request and returns the correlated message-based response within a specified interval of time.</p>\n"
  syntax:
    content: Message IRequestChannel.Request(Message message, TimeSpan timeout)
    content.vb: Function System.ServiceModel.Channels.IRequestChannel.Request(message As Message, timeout As TimeSpan) As Message Implements IRequestChannel.Request
    parameters:
    - id: message
      type: System.ServiceModel.Channels.Message
      description: "\n<p>The request message to be transmitted.</p>\n"
    - id: timeout
      type: System.TimeSpan
      description: "\n<p>The timespan that specifies the interval of time within which a response must be received.</p>\n"
    return:
      type: System.ServiceModel.Channels.Message
      description: "\n<p>The message received in response to the request.</p>\n"
  implements:
  - System.ServiceModel.Channels.IRequestChannel.Request(System.ServiceModel.Channels.Message,System.TimeSpan)
  fullName.vb: System.ServiceModel.ClientBase(Of TChannel).ChannelBase(Of T).System.ServiceModel.Channels.IRequestChannel.Request(System.ServiceModel.Channels.Message, System.TimeSpan)
  name.vb: System.ServiceModel.Channels.IRequestChannel.Request(Message, TimeSpan)
  nameWithType: ClientBase<TChannel>.ChannelBase<T>.IRequestChannel.Request(Message, TimeSpan)
  nameWithType.vb: ClientBase(Of TChannel).ChannelBase(Of T).System.ServiceModel.Channels.IRequestChannel.Request(Message, TimeSpan)
- uid: System.ServiceModel.ClientBase`1.ChannelBase`1.System#ServiceModel#IClientChannel#BeginDisplayInitializationUI(System.AsyncCallback,System.Object)
  commentId: M:System.ServiceModel.ClientBase`1.ChannelBase`1.System#ServiceModel#IClientChannel#BeginDisplayInitializationUI(System.AsyncCallback,System.Object)
  id: System#ServiceModel#IClientChannel#BeginDisplayInitializationUI(System.AsyncCallback,System.Object)
  isEii: true
  parent: System.ServiceModel.ClientBase`1.ChannelBase`1
  langs:
  - csharp
  - vb
  name: IClientChannel.BeginDisplayInitializationUI(AsyncCallback, Object)
  fullName: System.ServiceModel.ClientBase<TChannel>.ChannelBase<T>.System.ServiceModel.IClientChannel.BeginDisplayInitializationUI(System.AsyncCallback, System.Object)
  type: Method
  source:
    remote:
      path: src/System.ServiceModel.Primitives/ref/System.ServiceModel.Primitives.cs
      branch: master
      repo: https://github.com/dotnet/wcf.git
    id: System.ServiceModel.IClientChannel.BeginDisplayInitializationUI
    path: src/System.ServiceModel.Primitives/ref/System.ServiceModel.Primitives.cs
    startLine: 131
  assemblies:
  - System.ServiceModel.Primitives
  namespace: System.ServiceModel
  summary: "\n<p>An asynchronous call to begin using a user interface to obtain credential information.</p>\n"
  syntax:
    content: IAsyncResult IClientChannel.BeginDisplayInitializationUI(AsyncCallback callback, object state)
    content.vb: Function System.ServiceModel.IClientChannel.BeginDisplayInitializationUI(callback As AsyncCallback, state As Object) As IAsyncResult Implements IClientChannel.BeginDisplayInitializationUI
    parameters:
    - id: callback
      type: System.AsyncCallback
      description: "\n<p>That method that is called when this method completes.</p>\n"
    - id: state
      type: System.Object
      description: "\n<p>Information about the state of the channel.</p>\n"
    return:
      type: System.IAsyncResult
      description: "\n<p>The <xref href=\"System.IAsyncResult\" data-throw-if-not-resolved=\"false\"></xref> to use to call back when processing has completed.</p>\n"
  implements:
  - System.ServiceModel.IClientChannel.BeginDisplayInitializationUI(System.AsyncCallback,System.Object)
  fullName.vb: System.ServiceModel.ClientBase(Of TChannel).ChannelBase(Of T).System.ServiceModel.IClientChannel.BeginDisplayInitializationUI(System.AsyncCallback, System.Object)
  name.vb: System.ServiceModel.IClientChannel.BeginDisplayInitializationUI(AsyncCallback, Object)
  nameWithType: ClientBase<TChannel>.ChannelBase<T>.IClientChannel.BeginDisplayInitializationUI(AsyncCallback, Object)
  nameWithType.vb: ClientBase(Of TChannel).ChannelBase(Of T).System.ServiceModel.IClientChannel.BeginDisplayInitializationUI(AsyncCallback, Object)
- uid: System.ServiceModel.ClientBase`1.ChannelBase`1.System#ServiceModel#IClientChannel#DisplayInitializationUI
  commentId: M:System.ServiceModel.ClientBase`1.ChannelBase`1.System#ServiceModel#IClientChannel#DisplayInitializationUI
  id: System#ServiceModel#IClientChannel#DisplayInitializationUI
  isEii: true
  parent: System.ServiceModel.ClientBase`1.ChannelBase`1
  langs:
  - csharp
  - vb
  name: IClientChannel.DisplayInitializationUI()
  fullName: System.ServiceModel.ClientBase<TChannel>.ChannelBase<T>.System.ServiceModel.IClientChannel.DisplayInitializationUI()
  type: Method
  source:
    remote:
      path: src/System.ServiceModel.Primitives/ref/System.ServiceModel.Primitives.cs
      branch: master
      repo: https://github.com/dotnet/wcf.git
    id: System.ServiceModel.IClientChannel.DisplayInitializationUI
    path: src/System.ServiceModel.Primitives/ref/System.ServiceModel.Primitives.cs
    startLine: 132
  assemblies:
  - System.ServiceModel.Primitives
  namespace: System.ServiceModel
  summary: "\n<p>Specifies a call to a user interface to obtain credential information.</p>\n"
  syntax:
    content: void IClientChannel.DisplayInitializationUI()
    content.vb: Sub System.ServiceModel.IClientChannel.DisplayInitializationUI Implements IClientChannel.DisplayInitializationUI
  implements:
  - System.ServiceModel.IClientChannel.DisplayInitializationUI
  fullName.vb: System.ServiceModel.ClientBase(Of TChannel).ChannelBase(Of T).System.ServiceModel.IClientChannel.DisplayInitializationUI()
  name.vb: System.ServiceModel.IClientChannel.DisplayInitializationUI()
  nameWithType: ClientBase<TChannel>.ChannelBase<T>.IClientChannel.DisplayInitializationUI()
  nameWithType.vb: ClientBase(Of TChannel).ChannelBase(Of T).System.ServiceModel.IClientChannel.DisplayInitializationUI()
- uid: System.ServiceModel.ClientBase`1.ChannelBase`1.System#ServiceModel#IClientChannel#EndDisplayInitializationUI(System.IAsyncResult)
  commentId: M:System.ServiceModel.ClientBase`1.ChannelBase`1.System#ServiceModel#IClientChannel#EndDisplayInitializationUI(System.IAsyncResult)
  id: System#ServiceModel#IClientChannel#EndDisplayInitializationUI(System.IAsyncResult)
  isEii: true
  parent: System.ServiceModel.ClientBase`1.ChannelBase`1
  langs:
  - csharp
  - vb
  name: IClientChannel.EndDisplayInitializationUI(IAsyncResult)
  fullName: System.ServiceModel.ClientBase<TChannel>.ChannelBase<T>.System.ServiceModel.IClientChannel.EndDisplayInitializationUI(System.IAsyncResult)
  type: Method
  source:
    remote:
      path: src/System.ServiceModel.Primitives/ref/System.ServiceModel.Primitives.cs
      branch: master
      repo: https://github.com/dotnet/wcf.git
    id: System.ServiceModel.IClientChannel.EndDisplayInitializationUI
    path: src/System.ServiceModel.Primitives/ref/System.ServiceModel.Primitives.cs
    startLine: 133
  assemblies:
  - System.ServiceModel.Primitives
  namespace: System.ServiceModel
  summary: "\n<p>Called when the call to BeginDisplayInitializationUI has finished.</p>\n"
  syntax:
    content: void IClientChannel.EndDisplayInitializationUI(IAsyncResult result)
    content.vb: Sub System.ServiceModel.IClientChannel.EndDisplayInitializationUI(result As IAsyncResult) Implements IClientChannel.EndDisplayInitializationUI
    parameters:
    - id: result
      type: System.IAsyncResult
      description: "\n<p>The result of the operation.</p>\n"
  implements:
  - System.ServiceModel.IClientChannel.EndDisplayInitializationUI(System.IAsyncResult)
  fullName.vb: System.ServiceModel.ClientBase(Of TChannel).ChannelBase(Of T).System.ServiceModel.IClientChannel.EndDisplayInitializationUI(System.IAsyncResult)
  name.vb: System.ServiceModel.IClientChannel.EndDisplayInitializationUI(IAsyncResult)
  nameWithType: ClientBase<TChannel>.ChannelBase<T>.IClientChannel.EndDisplayInitializationUI(IAsyncResult)
  nameWithType.vb: ClientBase(Of TChannel).ChannelBase(Of T).System.ServiceModel.IClientChannel.EndDisplayInitializationUI(IAsyncResult)
- uid: System.ServiceModel.ClientBase`1.ChannelBase`1.System#ServiceModel#ICommunicationObject#Abort
  commentId: M:System.ServiceModel.ClientBase`1.ChannelBase`1.System#ServiceModel#ICommunicationObject#Abort
  id: System#ServiceModel#ICommunicationObject#Abort
  isEii: true
  parent: System.ServiceModel.ClientBase`1.ChannelBase`1
  langs:
  - csharp
  - vb
  name: ICommunicationObject.Abort()
  fullName: System.ServiceModel.ClientBase<TChannel>.ChannelBase<T>.System.ServiceModel.ICommunicationObject.Abort()
  type: Method
  source:
    remote:
      path: src/System.ServiceModel.Primitives/ref/System.ServiceModel.Primitives.cs
      branch: master
      repo: https://github.com/dotnet/wcf.git
    id: System.ServiceModel.ICommunicationObject.Abort
    path: src/System.ServiceModel.Primitives/ref/System.ServiceModel.Primitives.cs
    startLine: 134
  assemblies:
  - System.ServiceModel.Primitives
  namespace: System.ServiceModel
  summary: "\n<p>Causes a communication object to transition immediately from its current state into the closed state.</p>\n"
  syntax:
    content: void ICommunicationObject.Abort()
    content.vb: Sub System.ServiceModel.ICommunicationObject.Abort Implements ICommunicationObject.Abort
  implements:
  - System.ServiceModel.ICommunicationObject.Abort
  fullName.vb: System.ServiceModel.ClientBase(Of TChannel).ChannelBase(Of T).System.ServiceModel.ICommunicationObject.Abort()
  name.vb: System.ServiceModel.ICommunicationObject.Abort()
  nameWithType: ClientBase<TChannel>.ChannelBase<T>.ICommunicationObject.Abort()
  nameWithType.vb: ClientBase(Of TChannel).ChannelBase(Of T).System.ServiceModel.ICommunicationObject.Abort()
- uid: System.ServiceModel.ClientBase`1.ChannelBase`1.System#ServiceModel#ICommunicationObject#BeginClose(System.AsyncCallback,System.Object)
  commentId: M:System.ServiceModel.ClientBase`1.ChannelBase`1.System#ServiceModel#ICommunicationObject#BeginClose(System.AsyncCallback,System.Object)
  id: System#ServiceModel#ICommunicationObject#BeginClose(System.AsyncCallback,System.Object)
  isEii: true
  parent: System.ServiceModel.ClientBase`1.ChannelBase`1
  langs:
  - csharp
  - vb
  name: ICommunicationObject.BeginClose(AsyncCallback, Object)
  fullName: System.ServiceModel.ClientBase<TChannel>.ChannelBase<T>.System.ServiceModel.ICommunicationObject.BeginClose(System.AsyncCallback, System.Object)
  type: Method
  source:
    remote:
      path: src/System.ServiceModel.Primitives/ref/System.ServiceModel.Primitives.cs
      branch: master
      repo: https://github.com/dotnet/wcf.git
    id: System.ServiceModel.ICommunicationObject.BeginClose
    path: src/System.ServiceModel.Primitives/ref/System.ServiceModel.Primitives.cs
    startLine: 135
  assemblies:
  - System.ServiceModel.Primitives
  namespace: System.ServiceModel
  summary: "\n<p>Begins an asynchronous operation to close a communication object.</p>\n"
  syntax:
    content: IAsyncResult ICommunicationObject.BeginClose(AsyncCallback callback, object state)
    content.vb: Function System.ServiceModel.ICommunicationObject.BeginClose(callback As AsyncCallback, state As Object) As IAsyncResult Implements ICommunicationObject.BeginClose
    parameters:
    - id: callback
      type: System.AsyncCallback
      description: "\n<p>The <xref href=\"System.AsyncCallback\" data-throw-if-not-resolved=\"false\"></xref> delegate that receives notification of the completion of the asynchronous close operation.</p>\n"
    - id: state
      type: System.Object
      description: "\n<p>An object specified by the application, that contains state information associated with the asynchronous close operation.</p>\n"
    return:
      type: System.IAsyncResult
      description: "\n<p>An <xref href=\"System.IAsyncResult\" data-throw-if-not-resolved=\"false\"></xref> that references the asynchronous close operation.</p>\n"
  implements:
  - System.ServiceModel.ICommunicationObject.BeginClose(System.AsyncCallback,System.Object)
  fullName.vb: System.ServiceModel.ClientBase(Of TChannel).ChannelBase(Of T).System.ServiceModel.ICommunicationObject.BeginClose(System.AsyncCallback, System.Object)
  name.vb: System.ServiceModel.ICommunicationObject.BeginClose(AsyncCallback, Object)
  nameWithType: ClientBase<TChannel>.ChannelBase<T>.ICommunicationObject.BeginClose(AsyncCallback, Object)
  nameWithType.vb: ClientBase(Of TChannel).ChannelBase(Of T).System.ServiceModel.ICommunicationObject.BeginClose(AsyncCallback, Object)
- uid: System.ServiceModel.ClientBase`1.ChannelBase`1.System#ServiceModel#ICommunicationObject#BeginClose(System.TimeSpan,System.AsyncCallback,System.Object)
  commentId: M:System.ServiceModel.ClientBase`1.ChannelBase`1.System#ServiceModel#ICommunicationObject#BeginClose(System.TimeSpan,System.AsyncCallback,System.Object)
  id: System#ServiceModel#ICommunicationObject#BeginClose(System.TimeSpan,System.AsyncCallback,System.Object)
  isEii: true
  parent: System.ServiceModel.ClientBase`1.ChannelBase`1
  langs:
  - csharp
  - vb
  name: ICommunicationObject.BeginClose(TimeSpan, AsyncCallback, Object)
  fullName: System.ServiceModel.ClientBase<TChannel>.ChannelBase<T>.System.ServiceModel.ICommunicationObject.BeginClose(System.TimeSpan, System.AsyncCallback, System.Object)
  type: Method
  source:
    remote:
      path: src/System.ServiceModel.Primitives/ref/System.ServiceModel.Primitives.cs
      branch: master
      repo: https://github.com/dotnet/wcf.git
    id: System.ServiceModel.ICommunicationObject.BeginClose
    path: src/System.ServiceModel.Primitives/ref/System.ServiceModel.Primitives.cs
    startLine: 136
  assemblies:
  - System.ServiceModel.Primitives
  namespace: System.ServiceModel
  summary: "\n<p>Begins an asynchronous operation to close a communication object with a specified time-out.</p>\n"
  syntax:
    content: IAsyncResult ICommunicationObject.BeginClose(TimeSpan timeout, AsyncCallback callback, object state)
    content.vb: Function System.ServiceModel.ICommunicationObject.BeginClose(timeout As TimeSpan, callback As AsyncCallback, state As Object) As IAsyncResult Implements ICommunicationObject.BeginClose
    parameters:
    - id: timeout
      type: System.TimeSpan
      description: "\n<p>The timespan that specifies how long the send operation has to complete before timing out.</p>\n"
    - id: callback
      type: System.AsyncCallback
      description: "\n<p>The <xref href=\"System.AsyncCallback\" data-throw-if-not-resolved=\"false\"></xref> delegate that receives notification of the completion of the asynchronous close operation.</p>\n"
    - id: state
      type: System.Object
      description: "\n<p>An object, specified by the application, that contains state information associated with the asynchronous close operation.</p>\n"
    return:
      type: System.IAsyncResult
      description: "\n<p>The <xref href=\"System.IAsyncResult\" data-throw-if-not-resolved=\"false\"></xref> that references the asynchronous close operation.</p>\n"
  implements:
  - System.ServiceModel.ICommunicationObject.BeginClose(System.TimeSpan,System.AsyncCallback,System.Object)
  fullName.vb: System.ServiceModel.ClientBase(Of TChannel).ChannelBase(Of T).System.ServiceModel.ICommunicationObject.BeginClose(System.TimeSpan, System.AsyncCallback, System.Object)
  name.vb: System.ServiceModel.ICommunicationObject.BeginClose(TimeSpan, AsyncCallback, Object)
  nameWithType: ClientBase<TChannel>.ChannelBase<T>.ICommunicationObject.BeginClose(TimeSpan, AsyncCallback, Object)
  nameWithType.vb: ClientBase(Of TChannel).ChannelBase(Of T).System.ServiceModel.ICommunicationObject.BeginClose(TimeSpan, AsyncCallback, Object)
- uid: System.ServiceModel.ClientBase`1.ChannelBase`1.System#ServiceModel#ICommunicationObject#BeginOpen(System.AsyncCallback,System.Object)
  commentId: M:System.ServiceModel.ClientBase`1.ChannelBase`1.System#ServiceModel#ICommunicationObject#BeginOpen(System.AsyncCallback,System.Object)
  id: System#ServiceModel#ICommunicationObject#BeginOpen(System.AsyncCallback,System.Object)
  isEii: true
  parent: System.ServiceModel.ClientBase`1.ChannelBase`1
  langs:
  - csharp
  - vb
  name: ICommunicationObject.BeginOpen(AsyncCallback, Object)
  fullName: System.ServiceModel.ClientBase<TChannel>.ChannelBase<T>.System.ServiceModel.ICommunicationObject.BeginOpen(System.AsyncCallback, System.Object)
  type: Method
  source:
    remote:
      path: src/System.ServiceModel.Primitives/ref/System.ServiceModel.Primitives.cs
      branch: master
      repo: https://github.com/dotnet/wcf.git
    id: System.ServiceModel.ICommunicationObject.BeginOpen
    path: src/System.ServiceModel.Primitives/ref/System.ServiceModel.Primitives.cs
    startLine: 137
  assemblies:
  - System.ServiceModel.Primitives
  namespace: System.ServiceModel
  summary: "\n<p>Begins an asynchronous operation to open a communication object.</p>\n"
  syntax:
    content: IAsyncResult ICommunicationObject.BeginOpen(AsyncCallback callback, object state)
    content.vb: Function System.ServiceModel.ICommunicationObject.BeginOpen(callback As AsyncCallback, state As Object) As IAsyncResult Implements ICommunicationObject.BeginOpen
    parameters:
    - id: callback
      type: System.AsyncCallback
      description: "\n<p>The <xref href=\"System.AsyncCallback\" data-throw-if-not-resolved=\"false\"></xref> delegate that receives notification of the completion of the asynchronous open operation.</p>\n"
    - id: state
      type: System.Object
      description: "\n<p>An object, specified by the application, that contains state information associated with the asynchronous open operation.</p>\n"
    return:
      type: System.IAsyncResult
      description: "\n<p>The <xref href=\"System.IAsyncResult\" data-throw-if-not-resolved=\"false\"></xref> that references the asynchronous open operation.</p>\n"
  implements:
  - System.ServiceModel.ICommunicationObject.BeginOpen(System.AsyncCallback,System.Object)
  fullName.vb: System.ServiceModel.ClientBase(Of TChannel).ChannelBase(Of T).System.ServiceModel.ICommunicationObject.BeginOpen(System.AsyncCallback, System.Object)
  name.vb: System.ServiceModel.ICommunicationObject.BeginOpen(AsyncCallback, Object)
  nameWithType: ClientBase<TChannel>.ChannelBase<T>.ICommunicationObject.BeginOpen(AsyncCallback, Object)
  nameWithType.vb: ClientBase(Of TChannel).ChannelBase(Of T).System.ServiceModel.ICommunicationObject.BeginOpen(AsyncCallback, Object)
- uid: System.ServiceModel.ClientBase`1.ChannelBase`1.System#ServiceModel#ICommunicationObject#BeginOpen(System.TimeSpan,System.AsyncCallback,System.Object)
  commentId: M:System.ServiceModel.ClientBase`1.ChannelBase`1.System#ServiceModel#ICommunicationObject#BeginOpen(System.TimeSpan,System.AsyncCallback,System.Object)
  id: System#ServiceModel#ICommunicationObject#BeginOpen(System.TimeSpan,System.AsyncCallback,System.Object)
  isEii: true
  parent: System.ServiceModel.ClientBase`1.ChannelBase`1
  langs:
  - csharp
  - vb
  name: ICommunicationObject.BeginOpen(TimeSpan, AsyncCallback, Object)
  fullName: System.ServiceModel.ClientBase<TChannel>.ChannelBase<T>.System.ServiceModel.ICommunicationObject.BeginOpen(System.TimeSpan, System.AsyncCallback, System.Object)
  type: Method
  source:
    remote:
      path: src/System.ServiceModel.Primitives/ref/System.ServiceModel.Primitives.cs
      branch: master
      repo: https://github.com/dotnet/wcf.git
    id: System.ServiceModel.ICommunicationObject.BeginOpen
    path: src/System.ServiceModel.Primitives/ref/System.ServiceModel.Primitives.cs
    startLine: 138
  assemblies:
  - System.ServiceModel.Primitives
  namespace: System.ServiceModel
  summary: "\n<p>Begins an asynchronous operation to open a communication object within a specified interval of time.</p>\n"
  syntax:
    content: IAsyncResult ICommunicationObject.BeginOpen(TimeSpan timeout, AsyncCallback callback, object state)
    content.vb: Function System.ServiceModel.ICommunicationObject.BeginOpen(timeout As TimeSpan, callback As AsyncCallback, state As Object) As IAsyncResult Implements ICommunicationObject.BeginOpen
    parameters:
    - id: timeout
      type: System.TimeSpan
      description: "\n<p>The timespan that specifies how long the send operation has to complete before timing out.</p>\n"
    - id: callback
      type: System.AsyncCallback
      description: "\n<p>The <xref href=\"System.AsyncCallback\" data-throw-if-not-resolved=\"false\"></xref> delegate that receives notification of the completion of the asynchronous open operation.</p>\n"
    - id: state
      type: System.Object
      description: "\n<p>An object, specified by the application, that contains state information associated with the asynchronous open operation.</p>\n"
    return:
      type: System.IAsyncResult
      description: "\n<p>The <xref href=\"System.IAsyncResult\" data-throw-if-not-resolved=\"false\"></xref> that references the asynchronous open operation.</p>\n"
  implements:
  - System.ServiceModel.ICommunicationObject.BeginOpen(System.TimeSpan,System.AsyncCallback,System.Object)
  fullName.vb: System.ServiceModel.ClientBase(Of TChannel).ChannelBase(Of T).System.ServiceModel.ICommunicationObject.BeginOpen(System.TimeSpan, System.AsyncCallback, System.Object)
  name.vb: System.ServiceModel.ICommunicationObject.BeginOpen(TimeSpan, AsyncCallback, Object)
  nameWithType: ClientBase<TChannel>.ChannelBase<T>.ICommunicationObject.BeginOpen(TimeSpan, AsyncCallback, Object)
  nameWithType.vb: ClientBase(Of TChannel).ChannelBase(Of T).System.ServiceModel.ICommunicationObject.BeginOpen(TimeSpan, AsyncCallback, Object)
- uid: System.ServiceModel.ClientBase`1.ChannelBase`1.System#ServiceModel#ICommunicationObject#Close
  commentId: M:System.ServiceModel.ClientBase`1.ChannelBase`1.System#ServiceModel#ICommunicationObject#Close
  id: System#ServiceModel#ICommunicationObject#Close
  isEii: true
  parent: System.ServiceModel.ClientBase`1.ChannelBase`1
  langs:
  - csharp
  - vb
  name: ICommunicationObject.Close()
  fullName: System.ServiceModel.ClientBase<TChannel>.ChannelBase<T>.System.ServiceModel.ICommunicationObject.Close()
  type: Method
  source:
    remote:
      path: src/System.ServiceModel.Primitives/ref/System.ServiceModel.Primitives.cs
      branch: master
      repo: https://github.com/dotnet/wcf.git
    id: System.ServiceModel.ICommunicationObject.Close
    path: src/System.ServiceModel.Primitives/ref/System.ServiceModel.Primitives.cs
    startLine: 139
  assemblies:
  - System.ServiceModel.Primitives
  namespace: System.ServiceModel
  summary: "\n<p>Causes a communication object to transition from its current state into the closed state.</p>\n"
  syntax:
    content: void ICommunicationObject.Close()
    content.vb: Sub System.ServiceModel.ICommunicationObject.Close Implements ICommunicationObject.Close
  implements:
  - System.ServiceModel.ICommunicationObject.Close
  fullName.vb: System.ServiceModel.ClientBase(Of TChannel).ChannelBase(Of T).System.ServiceModel.ICommunicationObject.Close()
  name.vb: System.ServiceModel.ICommunicationObject.Close()
  nameWithType: ClientBase<TChannel>.ChannelBase<T>.ICommunicationObject.Close()
  nameWithType.vb: ClientBase(Of TChannel).ChannelBase(Of T).System.ServiceModel.ICommunicationObject.Close()
- uid: System.ServiceModel.ClientBase`1.ChannelBase`1.System#ServiceModel#ICommunicationObject#Close(System.TimeSpan)
  commentId: M:System.ServiceModel.ClientBase`1.ChannelBase`1.System#ServiceModel#ICommunicationObject#Close(System.TimeSpan)
  id: System#ServiceModel#ICommunicationObject#Close(System.TimeSpan)
  isEii: true
  parent: System.ServiceModel.ClientBase`1.ChannelBase`1
  langs:
  - csharp
  - vb
  name: ICommunicationObject.Close(TimeSpan)
  fullName: System.ServiceModel.ClientBase<TChannel>.ChannelBase<T>.System.ServiceModel.ICommunicationObject.Close(System.TimeSpan)
  type: Method
  source:
    remote:
      path: src/System.ServiceModel.Primitives/ref/System.ServiceModel.Primitives.cs
      branch: master
      repo: https://github.com/dotnet/wcf.git
    id: System.ServiceModel.ICommunicationObject.Close
    path: src/System.ServiceModel.Primitives/ref/System.ServiceModel.Primitives.cs
    startLine: 140
  assemblies:
  - System.ServiceModel.Primitives
  namespace: System.ServiceModel
  summary: "\n<p>Causes a communication object to transition from its current state into the closed state.</p>\n"
  syntax:
    content: void ICommunicationObject.Close(TimeSpan timeout)
    content.vb: Sub System.ServiceModel.ICommunicationObject.Close(timeout As TimeSpan) Implements ICommunicationObject.Close
    parameters:
    - id: timeout
      type: System.TimeSpan
      description: "\n<p>The timespan that specifies how long the send operation has to complete before timing out.</p>\n"
  implements:
  - System.ServiceModel.ICommunicationObject.Close(System.TimeSpan)
  fullName.vb: System.ServiceModel.ClientBase(Of TChannel).ChannelBase(Of T).System.ServiceModel.ICommunicationObject.Close(System.TimeSpan)
  name.vb: System.ServiceModel.ICommunicationObject.Close(TimeSpan)
  nameWithType: ClientBase<TChannel>.ChannelBase<T>.ICommunicationObject.Close(TimeSpan)
  nameWithType.vb: ClientBase(Of TChannel).ChannelBase(Of T).System.ServiceModel.ICommunicationObject.Close(TimeSpan)
- uid: System.ServiceModel.ClientBase`1.ChannelBase`1.System#ServiceModel#ICommunicationObject#EndClose(System.IAsyncResult)
  commentId: M:System.ServiceModel.ClientBase`1.ChannelBase`1.System#ServiceModel#ICommunicationObject#EndClose(System.IAsyncResult)
  id: System#ServiceModel#ICommunicationObject#EndClose(System.IAsyncResult)
  isEii: true
  parent: System.ServiceModel.ClientBase`1.ChannelBase`1
  langs:
  - csharp
  - vb
  name: ICommunicationObject.EndClose(IAsyncResult)
  fullName: System.ServiceModel.ClientBase<TChannel>.ChannelBase<T>.System.ServiceModel.ICommunicationObject.EndClose(System.IAsyncResult)
  type: Method
  source:
    remote:
      path: src/System.ServiceModel.Primitives/ref/System.ServiceModel.Primitives.cs
      branch: master
      repo: https://github.com/dotnet/wcf.git
    id: System.ServiceModel.ICommunicationObject.EndClose
    path: src/System.ServiceModel.Primitives/ref/System.ServiceModel.Primitives.cs
    startLine: 141
  assemblies:
  - System.ServiceModel.Primitives
  namespace: System.ServiceModel
  summary: "\n<p>Completes an asynchronous operation to close a communication object.</p>\n"
  syntax:
    content: void ICommunicationObject.EndClose(IAsyncResult result)
    content.vb: Sub System.ServiceModel.ICommunicationObject.EndClose(result As IAsyncResult) Implements ICommunicationObject.EndClose
    parameters:
    - id: result
      type: System.IAsyncResult
      description: "\n<p>The <xref href=\"System.IAsyncResult\" data-throw-if-not-resolved=\"false\"></xref> that is returned by a call to the BeginClose() method.</p>\n"
  implements:
  - System.ServiceModel.ICommunicationObject.EndClose(System.IAsyncResult)
  fullName.vb: System.ServiceModel.ClientBase(Of TChannel).ChannelBase(Of T).System.ServiceModel.ICommunicationObject.EndClose(System.IAsyncResult)
  name.vb: System.ServiceModel.ICommunicationObject.EndClose(IAsyncResult)
  nameWithType: ClientBase<TChannel>.ChannelBase<T>.ICommunicationObject.EndClose(IAsyncResult)
  nameWithType.vb: ClientBase(Of TChannel).ChannelBase(Of T).System.ServiceModel.ICommunicationObject.EndClose(IAsyncResult)
- uid: System.ServiceModel.ClientBase`1.ChannelBase`1.System#ServiceModel#ICommunicationObject#EndOpen(System.IAsyncResult)
  commentId: M:System.ServiceModel.ClientBase`1.ChannelBase`1.System#ServiceModel#ICommunicationObject#EndOpen(System.IAsyncResult)
  id: System#ServiceModel#ICommunicationObject#EndOpen(System.IAsyncResult)
  isEii: true
  parent: System.ServiceModel.ClientBase`1.ChannelBase`1
  langs:
  - csharp
  - vb
  name: ICommunicationObject.EndOpen(IAsyncResult)
  fullName: System.ServiceModel.ClientBase<TChannel>.ChannelBase<T>.System.ServiceModel.ICommunicationObject.EndOpen(System.IAsyncResult)
  type: Method
  source:
    remote:
      path: src/System.ServiceModel.Primitives/ref/System.ServiceModel.Primitives.cs
      branch: master
      repo: https://github.com/dotnet/wcf.git
    id: System.ServiceModel.ICommunicationObject.EndOpen
    path: src/System.ServiceModel.Primitives/ref/System.ServiceModel.Primitives.cs
    startLine: 142
  assemblies:
  - System.ServiceModel.Primitives
  namespace: System.ServiceModel
  summary: "\n<p>Completes an asynchronous operation to open a communication object.</p>\n"
  syntax:
    content: void ICommunicationObject.EndOpen(IAsyncResult result)
    content.vb: Sub System.ServiceModel.ICommunicationObject.EndOpen(result As IAsyncResult) Implements ICommunicationObject.EndOpen
    parameters:
    - id: result
      type: System.IAsyncResult
      description: "\n<p>The <xref href=\"System.IAsyncResult\" data-throw-if-not-resolved=\"false\"></xref> that is returned by a call to the BeginOpen() method.</p>\n"
  implements:
  - System.ServiceModel.ICommunicationObject.EndOpen(System.IAsyncResult)
  fullName.vb: System.ServiceModel.ClientBase(Of TChannel).ChannelBase(Of T).System.ServiceModel.ICommunicationObject.EndOpen(System.IAsyncResult)
  name.vb: System.ServiceModel.ICommunicationObject.EndOpen(IAsyncResult)
  nameWithType: ClientBase<TChannel>.ChannelBase<T>.ICommunicationObject.EndOpen(IAsyncResult)
  nameWithType.vb: ClientBase(Of TChannel).ChannelBase(Of T).System.ServiceModel.ICommunicationObject.EndOpen(IAsyncResult)
- uid: System.ServiceModel.ClientBase`1.ChannelBase`1.System#ServiceModel#ICommunicationObject#Open
  commentId: M:System.ServiceModel.ClientBase`1.ChannelBase`1.System#ServiceModel#ICommunicationObject#Open
  id: System#ServiceModel#ICommunicationObject#Open
  isEii: true
  parent: System.ServiceModel.ClientBase`1.ChannelBase`1
  langs:
  - csharp
  - vb
  name: ICommunicationObject.Open()
  fullName: System.ServiceModel.ClientBase<TChannel>.ChannelBase<T>.System.ServiceModel.ICommunicationObject.Open()
  type: Method
  source:
    remote:
      path: src/System.ServiceModel.Primitives/ref/System.ServiceModel.Primitives.cs
      branch: master
      repo: https://github.com/dotnet/wcf.git
    id: System.ServiceModel.ICommunicationObject.Open
    path: src/System.ServiceModel.Primitives/ref/System.ServiceModel.Primitives.cs
    startLine: 143
  assemblies:
  - System.ServiceModel.Primitives
  namespace: System.ServiceModel
  summary: "\n<p>Causes a communication object to transition from the created state into the opened state.</p>\n"
  syntax:
    content: void ICommunicationObject.Open()
    content.vb: Sub System.ServiceModel.ICommunicationObject.Open Implements ICommunicationObject.Open
  implements:
  - System.ServiceModel.ICommunicationObject.Open
  fullName.vb: System.ServiceModel.ClientBase(Of TChannel).ChannelBase(Of T).System.ServiceModel.ICommunicationObject.Open()
  name.vb: System.ServiceModel.ICommunicationObject.Open()
  nameWithType: ClientBase<TChannel>.ChannelBase<T>.ICommunicationObject.Open()
  nameWithType.vb: ClientBase(Of TChannel).ChannelBase(Of T).System.ServiceModel.ICommunicationObject.Open()
- uid: System.ServiceModel.ClientBase`1.ChannelBase`1.System#ServiceModel#ICommunicationObject#Open(System.TimeSpan)
  commentId: M:System.ServiceModel.ClientBase`1.ChannelBase`1.System#ServiceModel#ICommunicationObject#Open(System.TimeSpan)
  id: System#ServiceModel#ICommunicationObject#Open(System.TimeSpan)
  isEii: true
  parent: System.ServiceModel.ClientBase`1.ChannelBase`1
  langs:
  - csharp
  - vb
  name: ICommunicationObject.Open(TimeSpan)
  fullName: System.ServiceModel.ClientBase<TChannel>.ChannelBase<T>.System.ServiceModel.ICommunicationObject.Open(System.TimeSpan)
  type: Method
  source:
    remote:
      path: src/System.ServiceModel.Primitives/ref/System.ServiceModel.Primitives.cs
      branch: master
      repo: https://github.com/dotnet/wcf.git
    id: System.ServiceModel.ICommunicationObject.Open
    path: src/System.ServiceModel.Primitives/ref/System.ServiceModel.Primitives.cs
    startLine: 144
  assemblies:
  - System.ServiceModel.Primitives
  namespace: System.ServiceModel
  summary: "\n<p>Causes a communication object to transition from the created state into the opened state within a specified interval of time.</p>\n"
  syntax:
    content: void ICommunicationObject.Open(TimeSpan timeout)
    content.vb: Sub System.ServiceModel.ICommunicationObject.Open(timeout As TimeSpan) Implements ICommunicationObject.Open
    parameters:
    - id: timeout
      type: System.TimeSpan
      description: "\n<p>The timespan that specifies how long the send operation has to complete before timing out.</p>\n"
  implements:
  - System.ServiceModel.ICommunicationObject.Open(System.TimeSpan)
  fullName.vb: System.ServiceModel.ClientBase(Of TChannel).ChannelBase(Of T).System.ServiceModel.ICommunicationObject.Open(System.TimeSpan)
  name.vb: System.ServiceModel.ICommunicationObject.Open(TimeSpan)
  nameWithType: ClientBase<TChannel>.ChannelBase<T>.ICommunicationObject.Open(TimeSpan)
  nameWithType.vb: ClientBase(Of TChannel).ChannelBase(Of T).System.ServiceModel.ICommunicationObject.Open(TimeSpan)
references:
- uid: System.ServiceModel
  isExternal: false
  name: System.ServiceModel
  fullName: System.ServiceModel
  commentId: N:System.ServiceModel
  nameWithType: System.ServiceModel
- uid: System.Object
  parent: System
  isExternal: false
  name: Object
  fullName: System.Object
  commentId: T:System.Object
  nameWithType: Object
- uid: System.ServiceModel.Channels.IOutputChannel
  parent: System.ServiceModel.Channels
  isExternal: false
  name: IOutputChannel
  fullName: System.ServiceModel.Channels.IOutputChannel
  commentId: T:System.ServiceModel.Channels.IOutputChannel
  nameWithType: IOutputChannel
- uid: System.ServiceModel.Channels.IRequestChannel
  parent: System.ServiceModel.Channels
  isExternal: false
  name: IRequestChannel
  fullName: System.ServiceModel.Channels.IRequestChannel
  commentId: T:System.ServiceModel.Channels.IRequestChannel
  nameWithType: IRequestChannel
- uid: System.ServiceModel.IClientChannel
  parent: System.ServiceModel
  isExternal: false
  name: IClientChannel
  fullName: System.ServiceModel.IClientChannel
  commentId: T:System.ServiceModel.IClientChannel
  nameWithType: IClientChannel
- uid: System.IDisposable
  parent: System
  isExternal: false
  name: IDisposable
  fullName: System.IDisposable
  commentId: T:System.IDisposable
  nameWithType: IDisposable
- uid: System.ServiceModel.IContextChannel
  parent: System.ServiceModel
  isExternal: false
  name: IContextChannel
  fullName: System.ServiceModel.IContextChannel
  commentId: T:System.ServiceModel.IContextChannel
  nameWithType: IContextChannel
- uid: System.ServiceModel.Channels.IChannel
  parent: System.ServiceModel.Channels
  isExternal: false
  name: IChannel
  fullName: System.ServiceModel.Channels.IChannel
  commentId: T:System.ServiceModel.Channels.IChannel
  nameWithType: IChannel
- uid: System.ServiceModel.ICommunicationObject
  parent: System.ServiceModel
  isExternal: false
  name: ICommunicationObject
  fullName: System.ServiceModel.ICommunicationObject
  commentId: T:System.ServiceModel.ICommunicationObject
  nameWithType: ICommunicationObject
- uid: System.ServiceModel.IExtensibleObject{System.ServiceModel.IContextChannel}
  parent: System.ServiceModel
  definition: System.ServiceModel.IExtensibleObject`1
  name: IExtensibleObject<IContextChannel>
  fullName: System.ServiceModel.IExtensibleObject<System.ServiceModel.IContextChannel>
  fullname.vb: System.ServiceModel.IExtensibleObject(Of System.ServiceModel.IContextChannel)
  name.vb: IExtensibleObject(Of IContextChannel)
  spec.csharp:
  - uid: System.ServiceModel.IExtensibleObject`1
    name: IExtensibleObject
    fullName: System.ServiceModel.IExtensibleObject
  - name: <
    fullName: <
  - uid: System.ServiceModel.IContextChannel
    name: IContextChannel
    fullName: System.ServiceModel.IContextChannel
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: System.ServiceModel.IExtensibleObject`1
    name: IExtensibleObject
    fullName: System.ServiceModel.IExtensibleObject
  - name: '(Of '
    fullName: '(Of '
  - uid: System.ServiceModel.IContextChannel
    name: IContextChannel
    fullName: System.ServiceModel.IContextChannel
  - name: )
    fullName: )
  commentId: T:System.ServiceModel.IExtensibleObject{System.ServiceModel.IContextChannel}
  nameWithType: IExtensibleObject<IContextChannel>
  nameWithType.vb: IExtensibleObject(Of IContextChannel)
- uid: System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  commentId: M:System.Object.ToString
  nameWithType: Object.ToString()
- uid: System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
  commentId: M:System.Object.Equals(System.Object)
  nameWithType: Object.Equals(Object)
- uid: System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
  commentId: M:System.Object.Equals(System.Object,System.Object)
  nameWithType: Object.Equals(Object, Object)
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
- uid: System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  commentId: M:System.Object.GetHashCode
  nameWithType: Object.GetHashCode()
- uid: System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  commentId: M:System.Object.GetType
  nameWithType: Object.GetType()
- uid: System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  commentId: M:System.Object.MemberwiseClone
  nameWithType: Object.MemberwiseClone()
- uid: System
  isExternal: false
  name: System
  fullName: System
  commentId: N:System
  nameWithType: System
- uid: System.ServiceModel.Channels
  isExternal: false
  name: System.ServiceModel.Channels
  fullName: System.ServiceModel.Channels
  commentId: N:System.ServiceModel.Channels
  nameWithType: System.ServiceModel.Channels
- uid: System.ServiceModel.IExtensibleObject`1
  isExternal: false
  name: IExtensibleObject<T>
  fullName: System.ServiceModel.IExtensibleObject<T>
  fullname.vb: System.ServiceModel.IExtensibleObject(Of T)
  name.vb: IExtensibleObject(Of T)
  spec.csharp:
  - uid: System.ServiceModel.IExtensibleObject`1
    name: IExtensibleObject
    fullName: System.ServiceModel.IExtensibleObject
  - name: <
    fullName: <
  - name: T
    fullName: T
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: System.ServiceModel.IExtensibleObject`1
    name: IExtensibleObject
    fullName: System.ServiceModel.IExtensibleObject
  - name: '(Of '
    fullName: '(Of '
  - name: T
    fullName: T
  - name: )
    fullName: )
  commentId: T:System.ServiceModel.IExtensibleObject`1
  nameWithType: IExtensibleObject<T>
  nameWithType.vb: IExtensibleObject(Of T)
- uid: System.ServiceModel.ClientBase{{T}}
  parent: System.ServiceModel
  definition: System.ServiceModel.ClientBase`1
  name: ClientBase<T>
  fullName: System.ServiceModel.ClientBase<T>
  fullname.vb: System.ServiceModel.ClientBase(Of T)
  name.vb: ClientBase(Of T)
  spec.csharp:
  - uid: System.ServiceModel.ClientBase`1
    name: ClientBase
    fullName: System.ServiceModel.ClientBase
  - name: <
    fullName: <
  - name: T
    fullName: T
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: System.ServiceModel.ClientBase`1
    name: ClientBase
    fullName: System.ServiceModel.ClientBase
  - name: '(Of '
    fullName: '(Of '
  - name: T
    fullName: T
  - name: )
    fullName: )
  commentId: T:System.ServiceModel.ClientBase{`1}
  nameWithType: ClientBase<T>
  nameWithType.vb: ClientBase(Of T)
- uid: System.ServiceModel.ClientBase`1
  isExternal: false
  name: ClientBase<TChannel>
  fullName: System.ServiceModel.ClientBase<TChannel>
  fullname.vb: System.ServiceModel.ClientBase(Of TChannel)
  name.vb: ClientBase(Of TChannel)
  spec.csharp:
  - uid: System.ServiceModel.ClientBase`1
    name: ClientBase
    fullName: System.ServiceModel.ClientBase
  - name: <
    fullName: <
  - name: TChannel
    fullName: TChannel
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: System.ServiceModel.ClientBase`1
    name: ClientBase
    fullName: System.ServiceModel.ClientBase
  - name: '(Of '
    fullName: '(Of '
  - name: TChannel
    fullName: TChannel
  - name: )
    fullName: )
  commentId: T:System.ServiceModel.ClientBase`1
  nameWithType: ClientBase<TChannel>
  nameWithType.vb: ClientBase(Of TChannel)
- uid: System.ServiceModel.Channels.IOutputChannel.RemoteAddress
  parent: System.ServiceModel.Channels.IOutputChannel
  isExternal: false
  name: RemoteAddress
  fullName: System.ServiceModel.Channels.IOutputChannel.RemoteAddress
  commentId: P:System.ServiceModel.Channels.IOutputChannel.RemoteAddress
  nameWithType: IOutputChannel.RemoteAddress
- uid: System.ServiceModel.EndpointAddress
  parent: System.ServiceModel
  isExternal: false
  name: EndpointAddress
  fullName: System.ServiceModel.EndpointAddress
  commentId: T:System.ServiceModel.EndpointAddress
  nameWithType: EndpointAddress
- uid: System.ServiceModel.Channels.IOutputChannel.Via
  parent: System.ServiceModel.Channels.IOutputChannel
  isExternal: false
  name: Via
  fullName: System.ServiceModel.Channels.IOutputChannel.Via
  commentId: P:System.ServiceModel.Channels.IOutputChannel.Via
  nameWithType: IOutputChannel.Via
- uid: System.Uri
  parent: System
  isExternal: false
  name: Uri
  fullName: System.Uri
  commentId: T:System.Uri
  nameWithType: Uri
- uid: System.ServiceModel.Channels.IRequestChannel.RemoteAddress
  parent: System.ServiceModel.Channels.IRequestChannel
  isExternal: false
  name: RemoteAddress
  fullName: System.ServiceModel.Channels.IRequestChannel.RemoteAddress
  commentId: P:System.ServiceModel.Channels.IRequestChannel.RemoteAddress
  nameWithType: IRequestChannel.RemoteAddress
- uid: System.ServiceModel.Channels.IRequestChannel.Via
  parent: System.ServiceModel.Channels.IRequestChannel
  isExternal: false
  name: Via
  fullName: System.ServiceModel.Channels.IRequestChannel.Via
  commentId: P:System.ServiceModel.Channels.IRequestChannel.Via
  nameWithType: IRequestChannel.Via
- uid: System.ServiceModel.IClientChannel.AllowInitializationUI
  parent: System.ServiceModel.IClientChannel
  isExternal: false
  name: AllowInitializationUI
  fullName: System.ServiceModel.IClientChannel.AllowInitializationUI
  commentId: P:System.ServiceModel.IClientChannel.AllowInitializationUI
  nameWithType: IClientChannel.AllowInitializationUI
- uid: System.Boolean
  parent: System
  isExternal: false
  name: Boolean
  fullName: System.Boolean
  commentId: T:System.Boolean
  nameWithType: Boolean
- uid: System.ServiceModel.IClientChannel.DidInteractiveInitialization
  parent: System.ServiceModel.IClientChannel
  isExternal: false
  name: DidInteractiveInitialization
  fullName: System.ServiceModel.IClientChannel.DidInteractiveInitialization
  commentId: P:System.ServiceModel.IClientChannel.DidInteractiveInitialization
  nameWithType: IClientChannel.DidInteractiveInitialization
- uid: System.ServiceModel.IClientChannel.Via
  parent: System.ServiceModel.IClientChannel
  isExternal: false
  name: Via
  fullName: System.ServiceModel.IClientChannel.Via
  commentId: P:System.ServiceModel.IClientChannel.Via
  nameWithType: IClientChannel.Via
- uid: System.ServiceModel.ICommunicationObject.State
  parent: System.ServiceModel.ICommunicationObject
  isExternal: false
  name: State
  fullName: System.ServiceModel.ICommunicationObject.State
  commentId: P:System.ServiceModel.ICommunicationObject.State
  nameWithType: ICommunicationObject.State
- uid: System.ServiceModel.CommunicationState
  parent: System.ServiceModel
  isExternal: false
  name: CommunicationState
  fullName: System.ServiceModel.CommunicationState
  commentId: T:System.ServiceModel.CommunicationState
  nameWithType: CommunicationState
- uid: System.ServiceModel.IContextChannel.AllowOutputBatching
  parent: System.ServiceModel.IContextChannel
  isExternal: false
  name: AllowOutputBatching
  fullName: System.ServiceModel.IContextChannel.AllowOutputBatching
  commentId: P:System.ServiceModel.IContextChannel.AllowOutputBatching
  nameWithType: IContextChannel.AllowOutputBatching
- uid: System.ServiceModel.IContextChannel.InputSession
  parent: System.ServiceModel.IContextChannel
  isExternal: false
  name: InputSession
  fullName: System.ServiceModel.IContextChannel.InputSession
  commentId: P:System.ServiceModel.IContextChannel.InputSession
  nameWithType: IContextChannel.InputSession
- uid: System.ServiceModel.Channels.IInputSession
  parent: System.ServiceModel.Channels
  isExternal: false
  name: IInputSession
  fullName: System.ServiceModel.Channels.IInputSession
  commentId: T:System.ServiceModel.Channels.IInputSession
  nameWithType: IInputSession
- uid: System.ServiceModel.IContextChannel.LocalAddress
  parent: System.ServiceModel.IContextChannel
  isExternal: false
  name: LocalAddress
  fullName: System.ServiceModel.IContextChannel.LocalAddress
  commentId: P:System.ServiceModel.IContextChannel.LocalAddress
  nameWithType: IContextChannel.LocalAddress
- uid: System.ServiceModel.IContextChannel.OperationTimeout
  parent: System.ServiceModel.IContextChannel
  isExternal: false
  name: OperationTimeout
  fullName: System.ServiceModel.IContextChannel.OperationTimeout
  commentId: P:System.ServiceModel.IContextChannel.OperationTimeout
  nameWithType: IContextChannel.OperationTimeout
- uid: System.TimeSpan
  parent: System
  isExternal: false
  name: TimeSpan
  fullName: System.TimeSpan
  commentId: T:System.TimeSpan
  nameWithType: TimeSpan
- uid: System.ServiceModel.IContextChannel.OutputSession
  parent: System.ServiceModel.IContextChannel
  isExternal: false
  name: OutputSession
  fullName: System.ServiceModel.IContextChannel.OutputSession
  commentId: P:System.ServiceModel.IContextChannel.OutputSession
  nameWithType: IContextChannel.OutputSession
- uid: System.ServiceModel.Channels.IOutputSession
  parent: System.ServiceModel.Channels
  isExternal: false
  name: IOutputSession
  fullName: System.ServiceModel.Channels.IOutputSession
  commentId: T:System.ServiceModel.Channels.IOutputSession
  nameWithType: IOutputSession
- uid: System.ServiceModel.IContextChannel.RemoteAddress
  parent: System.ServiceModel.IContextChannel
  isExternal: false
  name: RemoteAddress
  fullName: System.ServiceModel.IContextChannel.RemoteAddress
  commentId: P:System.ServiceModel.IContextChannel.RemoteAddress
  nameWithType: IContextChannel.RemoteAddress
- uid: System.ServiceModel.IContextChannel.SessionId
  parent: System.ServiceModel.IContextChannel
  isExternal: false
  name: SessionId
  fullName: System.ServiceModel.IContextChannel.SessionId
  commentId: P:System.ServiceModel.IContextChannel.SessionId
  nameWithType: IContextChannel.SessionId
- uid: System.String
  parent: System
  isExternal: false
  name: String
  fullName: System.String
  commentId: T:System.String
  nameWithType: String
- uid: System.ServiceModel.IExtensibleObject{System.ServiceModel.IContextChannel}.Extensions
  parent: System.ServiceModel.IExtensibleObject{System.ServiceModel.IContextChannel}
  definition: System.ServiceModel.IExtensibleObject`1.Extensions
  name: Extensions
  fullName: System.ServiceModel.IExtensibleObject<System.ServiceModel.IContextChannel>.Extensions
  fullname.vb: System.ServiceModel.IExtensibleObject(Of System.ServiceModel.IContextChannel).Extensions
  commentId: P:System.ServiceModel.IExtensibleObject{System.ServiceModel.IContextChannel}.Extensions
  nameWithType: IExtensibleObject<IContextChannel>.Extensions
  nameWithType.vb: IExtensibleObject(Of IContextChannel).Extensions
- uid: System.ServiceModel.IExtensionCollection{System.ServiceModel.IContextChannel}
  parent: System.ServiceModel
  definition: System.ServiceModel.IExtensionCollection`1
  name: IExtensionCollection<IContextChannel>
  fullName: System.ServiceModel.IExtensionCollection<System.ServiceModel.IContextChannel>
  fullname.vb: System.ServiceModel.IExtensionCollection(Of System.ServiceModel.IContextChannel)
  name.vb: IExtensionCollection(Of IContextChannel)
  spec.csharp:
  - uid: System.ServiceModel.IExtensionCollection`1
    name: IExtensionCollection
    fullName: System.ServiceModel.IExtensionCollection
  - name: <
    fullName: <
  - uid: System.ServiceModel.IContextChannel
    name: IContextChannel
    fullName: System.ServiceModel.IContextChannel
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: System.ServiceModel.IExtensionCollection`1
    name: IExtensionCollection
    fullName: System.ServiceModel.IExtensionCollection
  - name: '(Of '
    fullName: '(Of '
  - uid: System.ServiceModel.IContextChannel
    name: IContextChannel
    fullName: System.ServiceModel.IContextChannel
  - name: )
    fullName: )
  commentId: T:System.ServiceModel.IExtensionCollection{System.ServiceModel.IContextChannel}
  nameWithType: IExtensionCollection<IContextChannel>
  nameWithType.vb: IExtensionCollection(Of IContextChannel)
- uid: System.ServiceModel.IExtensibleObject`1.Extensions
  isExternal: false
  name: Extensions
  fullName: System.ServiceModel.IExtensibleObject<T>.Extensions
  fullname.vb: System.ServiceModel.IExtensibleObject(Of T).Extensions
  commentId: P:System.ServiceModel.IExtensibleObject`1.Extensions
  nameWithType: IExtensibleObject<T>.Extensions
  nameWithType.vb: IExtensibleObject(Of T).Extensions
- uid: System.ServiceModel.IExtensionCollection`1
  isExternal: false
  name: IExtensionCollection<T>
  fullName: System.ServiceModel.IExtensionCollection<T>
  fullname.vb: System.ServiceModel.IExtensionCollection(Of T)
  name.vb: IExtensionCollection(Of T)
  spec.csharp:
  - uid: System.ServiceModel.IExtensionCollection`1
    name: IExtensionCollection
    fullName: System.ServiceModel.IExtensionCollection
  - name: <
    fullName: <
  - name: T
    fullName: T
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: System.ServiceModel.IExtensionCollection`1
    name: IExtensionCollection
    fullName: System.ServiceModel.IExtensionCollection
  - name: '(Of '
    fullName: '(Of '
  - name: T
    fullName: T
  - name: )
    fullName: )
  commentId: T:System.ServiceModel.IExtensionCollection`1
  nameWithType: IExtensionCollection<T>
  nameWithType.vb: IExtensionCollection(Of T)
- uid: System.ServiceModel.IClientChannel.UnknownMessageReceived
  parent: System.ServiceModel.IClientChannel
  isExternal: false
  name: UnknownMessageReceived
  fullName: System.ServiceModel.IClientChannel.UnknownMessageReceived
  commentId: E:System.ServiceModel.IClientChannel.UnknownMessageReceived
  nameWithType: IClientChannel.UnknownMessageReceived
- uid: System.EventHandler{System.ServiceModel.UnknownMessageReceivedEventArgs}
  parent: System
  definition: System.EventHandler`1
  name: EventHandler<UnknownMessageReceivedEventArgs>
  fullName: System.EventHandler<System.ServiceModel.UnknownMessageReceivedEventArgs>
  fullname.vb: System.EventHandler(Of System.ServiceModel.UnknownMessageReceivedEventArgs)
  name.vb: EventHandler(Of UnknownMessageReceivedEventArgs)
  spec.csharp:
  - uid: System.EventHandler`1
    name: EventHandler
    fullName: System.EventHandler
    isExternal: true
  - name: <
    fullName: <
  - uid: System.ServiceModel.UnknownMessageReceivedEventArgs
    name: UnknownMessageReceivedEventArgs
    fullName: System.ServiceModel.UnknownMessageReceivedEventArgs
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: System.EventHandler`1
    name: EventHandler
    fullName: System.EventHandler
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - uid: System.ServiceModel.UnknownMessageReceivedEventArgs
    name: UnknownMessageReceivedEventArgs
    fullName: System.ServiceModel.UnknownMessageReceivedEventArgs
  - name: )
    fullName: )
  commentId: T:System.EventHandler{System.ServiceModel.UnknownMessageReceivedEventArgs}
  nameWithType: EventHandler<UnknownMessageReceivedEventArgs>
  nameWithType.vb: EventHandler(Of UnknownMessageReceivedEventArgs)
- uid: System.EventHandler`1
  isExternal: false
  name: EventHandler<TEventArgs>
  fullName: System.EventHandler<TEventArgs>
  fullname.vb: System.EventHandler(Of TEventArgs)
  name.vb: EventHandler(Of TEventArgs)
  spec.csharp:
  - uid: System.EventHandler`1
    name: EventHandler
    fullName: System.EventHandler
  - name: <
    fullName: <
  - name: TEventArgs
    fullName: TEventArgs
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: System.EventHandler`1
    name: EventHandler
    fullName: System.EventHandler
  - name: '(Of '
    fullName: '(Of '
  - name: TEventArgs
    fullName: TEventArgs
  - name: )
    fullName: )
  commentId: T:System.EventHandler`1
  nameWithType: EventHandler<TEventArgs>
  nameWithType.vb: EventHandler(Of TEventArgs)
- uid: System.ServiceModel.ICommunicationObject.Closed
  parent: System.ServiceModel.ICommunicationObject
  isExternal: false
  name: Closed
  fullName: System.ServiceModel.ICommunicationObject.Closed
  commentId: E:System.ServiceModel.ICommunicationObject.Closed
  nameWithType: ICommunicationObject.Closed
- uid: System.EventHandler
  parent: System
  isExternal: false
  name: EventHandler
  fullName: System.EventHandler
  commentId: T:System.EventHandler
  nameWithType: EventHandler
- uid: System.ServiceModel.ICommunicationObject.Closing
  parent: System.ServiceModel.ICommunicationObject
  isExternal: false
  name: Closing
  fullName: System.ServiceModel.ICommunicationObject.Closing
  commentId: E:System.ServiceModel.ICommunicationObject.Closing
  nameWithType: ICommunicationObject.Closing
- uid: System.ServiceModel.ICommunicationObject.Faulted
  parent: System.ServiceModel.ICommunicationObject
  isExternal: false
  name: Faulted
  fullName: System.ServiceModel.ICommunicationObject.Faulted
  commentId: E:System.ServiceModel.ICommunicationObject.Faulted
  nameWithType: ICommunicationObject.Faulted
- uid: System.ServiceModel.ICommunicationObject.Opened
  parent: System.ServiceModel.ICommunicationObject
  isExternal: false
  name: Opened
  fullName: System.ServiceModel.ICommunicationObject.Opened
  commentId: E:System.ServiceModel.ICommunicationObject.Opened
  nameWithType: ICommunicationObject.Opened
- uid: System.ServiceModel.ICommunicationObject.Opening
  parent: System.ServiceModel.ICommunicationObject
  isExternal: false
  name: Opening
  fullName: System.ServiceModel.ICommunicationObject.Opening
  commentId: E:System.ServiceModel.ICommunicationObject.Opening
  nameWithType: ICommunicationObject.Opening
- uid: System.Object[]
  name: Object[]
  fullName: System.Object[]
  fullname.vb: System.Object()
  name.vb: Object()
  spec.csharp:
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: '[]'
    fullName: '[]'
  spec.vb:
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ()
    fullName: ()
  nameWithType: Object[]
  nameWithType.vb: Object()
- uid: System.AsyncCallback
  parent: System
  isExternal: false
  name: AsyncCallback
  fullName: System.AsyncCallback
  commentId: T:System.AsyncCallback
  nameWithType: AsyncCallback
- uid: System.IAsyncResult
  parent: System
  isExternal: false
  name: IAsyncResult
  fullName: System.IAsyncResult
  commentId: T:System.IAsyncResult
  nameWithType: IAsyncResult
- uid: System.IDisposable.Dispose
  parent: System.IDisposable
  isExternal: false
  name: Dispose()
  fullName: System.IDisposable.Dispose()
  spec.csharp:
  - uid: System.IDisposable.Dispose
    name: Dispose
    fullName: System.IDisposable.Dispose
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.IDisposable.Dispose
    name: Dispose
    fullName: System.IDisposable.Dispose
  - name: (
    fullName: (
  - name: )
    fullName: )
  commentId: M:System.IDisposable.Dispose
  nameWithType: IDisposable.Dispose()
- uid: System.ServiceModel.Channels.IChannel.GetProperty``1
  parent: System.ServiceModel.Channels.IChannel
  definition: System.ServiceModel.Channels.IChannel.GetProperty``1
  isExternal: false
  name: GetProperty<T>()
  fullName: System.ServiceModel.Channels.IChannel.GetProperty<T>()
  fullname.vb: System.ServiceModel.Channels.IChannel.GetProperty(Of T)()
  name.vb: GetProperty(Of T)()
  spec.csharp:
  - uid: System.ServiceModel.Channels.IChannel.GetProperty``1
    name: GetProperty<T>
    fullName: System.ServiceModel.Channels.IChannel.GetProperty<T>
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.ServiceModel.Channels.IChannel.GetProperty``1
    name: GetProperty(Of T)
    fullName: System.ServiceModel.Channels.IChannel.GetProperty(Of T)
  - name: (
    fullName: (
  - name: )
    fullName: )
  commentId: M:System.ServiceModel.Channels.IChannel.GetProperty``1
  nameWithType: IChannel.GetProperty<T>()
  nameWithType.vb: IChannel.GetProperty(Of T)()
- uid: '{TProperty}'
  definition: TProperty
  name: TProperty
  fullName: TProperty
  commentId: '!:TProperty'
  nameWithType: TProperty
- uid: TProperty
  isExternal: false
  name: TProperty
  fullName: TProperty
  commentId: '!:TProperty'
  nameWithType: TProperty
- uid: System.ServiceModel.Channels.IOutputChannel.BeginSend(System.ServiceModel.Channels.Message,System.AsyncCallback,System.Object)
  parent: System.ServiceModel.Channels.IOutputChannel
  isExternal: true
  name: BeginSend(Message, AsyncCallback, Object)
  fullName: System.ServiceModel.Channels.IOutputChannel.BeginSend(System.ServiceModel.Channels.Message, System.AsyncCallback, System.Object)
  spec.csharp:
  - uid: System.ServiceModel.Channels.IOutputChannel.BeginSend(System.ServiceModel.Channels.Message,System.AsyncCallback,System.Object)
    name: BeginSend
    fullName: System.ServiceModel.Channels.IOutputChannel.BeginSend
  - name: (
    fullName: (
  - uid: System.ServiceModel.Channels.Message
    name: Message
    fullName: System.ServiceModel.Channels.Message
  - name: ', '
    fullName: ', '
  - uid: System.AsyncCallback
    name: AsyncCallback
    fullName: System.AsyncCallback
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.ServiceModel.Channels.IOutputChannel.BeginSend(System.ServiceModel.Channels.Message,System.AsyncCallback,System.Object)
    name: BeginSend
    fullName: System.ServiceModel.Channels.IOutputChannel.BeginSend
  - name: (
    fullName: (
  - uid: System.ServiceModel.Channels.Message
    name: Message
    fullName: System.ServiceModel.Channels.Message
  - name: ', '
    fullName: ', '
  - uid: System.AsyncCallback
    name: AsyncCallback
    fullName: System.AsyncCallback
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
  commentId: M:System.ServiceModel.Channels.IOutputChannel.BeginSend(System.ServiceModel.Channels.Message,System.AsyncCallback,System.Object)
  nameWithType: IOutputChannel.BeginSend(Message, AsyncCallback, Object)
- uid: System.ServiceModel.Channels.Message
  parent: System.ServiceModel.Channels
  isExternal: false
  name: Message
  fullName: System.ServiceModel.Channels.Message
  commentId: T:System.ServiceModel.Channels.Message
  nameWithType: Message
- uid: System.ServiceModel.Channels.IOutputChannel.BeginSend(System.ServiceModel.Channels.Message,System.TimeSpan,System.AsyncCallback,System.Object)
  parent: System.ServiceModel.Channels.IOutputChannel
  isExternal: true
  name: BeginSend(Message, TimeSpan, AsyncCallback, Object)
  fullName: System.ServiceModel.Channels.IOutputChannel.BeginSend(System.ServiceModel.Channels.Message, System.TimeSpan, System.AsyncCallback, System.Object)
  spec.csharp:
  - uid: System.ServiceModel.Channels.IOutputChannel.BeginSend(System.ServiceModel.Channels.Message,System.TimeSpan,System.AsyncCallback,System.Object)
    name: BeginSend
    fullName: System.ServiceModel.Channels.IOutputChannel.BeginSend
  - name: (
    fullName: (
  - uid: System.ServiceModel.Channels.Message
    name: Message
    fullName: System.ServiceModel.Channels.Message
  - name: ', '
    fullName: ', '
  - uid: System.TimeSpan
    name: TimeSpan
    fullName: System.TimeSpan
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.AsyncCallback
    name: AsyncCallback
    fullName: System.AsyncCallback
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.ServiceModel.Channels.IOutputChannel.BeginSend(System.ServiceModel.Channels.Message,System.TimeSpan,System.AsyncCallback,System.Object)
    name: BeginSend
    fullName: System.ServiceModel.Channels.IOutputChannel.BeginSend
  - name: (
    fullName: (
  - uid: System.ServiceModel.Channels.Message
    name: Message
    fullName: System.ServiceModel.Channels.Message
  - name: ', '
    fullName: ', '
  - uid: System.TimeSpan
    name: TimeSpan
    fullName: System.TimeSpan
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.AsyncCallback
    name: AsyncCallback
    fullName: System.AsyncCallback
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
  commentId: M:System.ServiceModel.Channels.IOutputChannel.BeginSend(System.ServiceModel.Channels.Message,System.TimeSpan,System.AsyncCallback,System.Object)
  nameWithType: IOutputChannel.BeginSend(Message, TimeSpan, AsyncCallback, Object)
- uid: System.ServiceModel.Channels.IOutputChannel.EndSend(System.IAsyncResult)
  parent: System.ServiceModel.Channels.IOutputChannel
  isExternal: true
  name: EndSend(IAsyncResult)
  fullName: System.ServiceModel.Channels.IOutputChannel.EndSend(System.IAsyncResult)
  spec.csharp:
  - uid: System.ServiceModel.Channels.IOutputChannel.EndSend(System.IAsyncResult)
    name: EndSend
    fullName: System.ServiceModel.Channels.IOutputChannel.EndSend
  - name: (
    fullName: (
  - uid: System.IAsyncResult
    name: IAsyncResult
    fullName: System.IAsyncResult
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.ServiceModel.Channels.IOutputChannel.EndSend(System.IAsyncResult)
    name: EndSend
    fullName: System.ServiceModel.Channels.IOutputChannel.EndSend
  - name: (
    fullName: (
  - uid: System.IAsyncResult
    name: IAsyncResult
    fullName: System.IAsyncResult
    isExternal: true
  - name: )
    fullName: )
  commentId: M:System.ServiceModel.Channels.IOutputChannel.EndSend(System.IAsyncResult)
  nameWithType: IOutputChannel.EndSend(IAsyncResult)
- uid: System.ServiceModel.Channels.IOutputChannel.Send(System.ServiceModel.Channels.Message)
  parent: System.ServiceModel.Channels.IOutputChannel
  isExternal: false
  name: Send(Message)
  fullName: System.ServiceModel.Channels.IOutputChannel.Send(System.ServiceModel.Channels.Message)
  spec.csharp:
  - uid: System.ServiceModel.Channels.IOutputChannel.Send(System.ServiceModel.Channels.Message)
    name: Send
    fullName: System.ServiceModel.Channels.IOutputChannel.Send
  - name: (
    fullName: (
  - uid: System.ServiceModel.Channels.Message
    name: Message
    fullName: System.ServiceModel.Channels.Message
  - name: )
    fullName: )
  spec.vb:
  - uid: System.ServiceModel.Channels.IOutputChannel.Send(System.ServiceModel.Channels.Message)
    name: Send
    fullName: System.ServiceModel.Channels.IOutputChannel.Send
  - name: (
    fullName: (
  - uid: System.ServiceModel.Channels.Message
    name: Message
    fullName: System.ServiceModel.Channels.Message
  - name: )
    fullName: )
  commentId: M:System.ServiceModel.Channels.IOutputChannel.Send(System.ServiceModel.Channels.Message)
  nameWithType: IOutputChannel.Send(Message)
- uid: System.ServiceModel.Channels.IOutputChannel.Send(System.ServiceModel.Channels.Message,System.TimeSpan)
  parent: System.ServiceModel.Channels.IOutputChannel
  isExternal: true
  name: Send(Message, TimeSpan)
  fullName: System.ServiceModel.Channels.IOutputChannel.Send(System.ServiceModel.Channels.Message, System.TimeSpan)
  spec.csharp:
  - uid: System.ServiceModel.Channels.IOutputChannel.Send(System.ServiceModel.Channels.Message,System.TimeSpan)
    name: Send
    fullName: System.ServiceModel.Channels.IOutputChannel.Send
  - name: (
    fullName: (
  - uid: System.ServiceModel.Channels.Message
    name: Message
    fullName: System.ServiceModel.Channels.Message
  - name: ', '
    fullName: ', '
  - uid: System.TimeSpan
    name: TimeSpan
    fullName: System.TimeSpan
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.ServiceModel.Channels.IOutputChannel.Send(System.ServiceModel.Channels.Message,System.TimeSpan)
    name: Send
    fullName: System.ServiceModel.Channels.IOutputChannel.Send
  - name: (
    fullName: (
  - uid: System.ServiceModel.Channels.Message
    name: Message
    fullName: System.ServiceModel.Channels.Message
  - name: ', '
    fullName: ', '
  - uid: System.TimeSpan
    name: TimeSpan
    fullName: System.TimeSpan
    isExternal: true
  - name: )
    fullName: )
  commentId: M:System.ServiceModel.Channels.IOutputChannel.Send(System.ServiceModel.Channels.Message,System.TimeSpan)
  nameWithType: IOutputChannel.Send(Message, TimeSpan)
- uid: System.ServiceModel.Channels.IRequestChannel.BeginRequest(System.ServiceModel.Channels.Message,System.AsyncCallback,System.Object)
  parent: System.ServiceModel.Channels.IRequestChannel
  isExternal: true
  name: BeginRequest(Message, AsyncCallback, Object)
  fullName: System.ServiceModel.Channels.IRequestChannel.BeginRequest(System.ServiceModel.Channels.Message, System.AsyncCallback, System.Object)
  spec.csharp:
  - uid: System.ServiceModel.Channels.IRequestChannel.BeginRequest(System.ServiceModel.Channels.Message,System.AsyncCallback,System.Object)
    name: BeginRequest
    fullName: System.ServiceModel.Channels.IRequestChannel.BeginRequest
  - name: (
    fullName: (
  - uid: System.ServiceModel.Channels.Message
    name: Message
    fullName: System.ServiceModel.Channels.Message
  - name: ', '
    fullName: ', '
  - uid: System.AsyncCallback
    name: AsyncCallback
    fullName: System.AsyncCallback
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.ServiceModel.Channels.IRequestChannel.BeginRequest(System.ServiceModel.Channels.Message,System.AsyncCallback,System.Object)
    name: BeginRequest
    fullName: System.ServiceModel.Channels.IRequestChannel.BeginRequest
  - name: (
    fullName: (
  - uid: System.ServiceModel.Channels.Message
    name: Message
    fullName: System.ServiceModel.Channels.Message
  - name: ', '
    fullName: ', '
  - uid: System.AsyncCallback
    name: AsyncCallback
    fullName: System.AsyncCallback
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
  commentId: M:System.ServiceModel.Channels.IRequestChannel.BeginRequest(System.ServiceModel.Channels.Message,System.AsyncCallback,System.Object)
  nameWithType: IRequestChannel.BeginRequest(Message, AsyncCallback, Object)
- uid: System.ServiceModel.Channels.IRequestChannel.BeginRequest(System.ServiceModel.Channels.Message,System.TimeSpan,System.AsyncCallback,System.Object)
  parent: System.ServiceModel.Channels.IRequestChannel
  isExternal: true
  name: BeginRequest(Message, TimeSpan, AsyncCallback, Object)
  fullName: System.ServiceModel.Channels.IRequestChannel.BeginRequest(System.ServiceModel.Channels.Message, System.TimeSpan, System.AsyncCallback, System.Object)
  spec.csharp:
  - uid: System.ServiceModel.Channels.IRequestChannel.BeginRequest(System.ServiceModel.Channels.Message,System.TimeSpan,System.AsyncCallback,System.Object)
    name: BeginRequest
    fullName: System.ServiceModel.Channels.IRequestChannel.BeginRequest
  - name: (
    fullName: (
  - uid: System.ServiceModel.Channels.Message
    name: Message
    fullName: System.ServiceModel.Channels.Message
  - name: ', '
    fullName: ', '
  - uid: System.TimeSpan
    name: TimeSpan
    fullName: System.TimeSpan
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.AsyncCallback
    name: AsyncCallback
    fullName: System.AsyncCallback
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.ServiceModel.Channels.IRequestChannel.BeginRequest(System.ServiceModel.Channels.Message,System.TimeSpan,System.AsyncCallback,System.Object)
    name: BeginRequest
    fullName: System.ServiceModel.Channels.IRequestChannel.BeginRequest
  - name: (
    fullName: (
  - uid: System.ServiceModel.Channels.Message
    name: Message
    fullName: System.ServiceModel.Channels.Message
  - name: ', '
    fullName: ', '
  - uid: System.TimeSpan
    name: TimeSpan
    fullName: System.TimeSpan
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.AsyncCallback
    name: AsyncCallback
    fullName: System.AsyncCallback
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
  commentId: M:System.ServiceModel.Channels.IRequestChannel.BeginRequest(System.ServiceModel.Channels.Message,System.TimeSpan,System.AsyncCallback,System.Object)
  nameWithType: IRequestChannel.BeginRequest(Message, TimeSpan, AsyncCallback, Object)
- uid: System.ServiceModel.Channels.IRequestChannel.EndRequest(System.IAsyncResult)
  parent: System.ServiceModel.Channels.IRequestChannel
  isExternal: true
  name: EndRequest(IAsyncResult)
  fullName: System.ServiceModel.Channels.IRequestChannel.EndRequest(System.IAsyncResult)
  spec.csharp:
  - uid: System.ServiceModel.Channels.IRequestChannel.EndRequest(System.IAsyncResult)
    name: EndRequest
    fullName: System.ServiceModel.Channels.IRequestChannel.EndRequest
  - name: (
    fullName: (
  - uid: System.IAsyncResult
    name: IAsyncResult
    fullName: System.IAsyncResult
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.ServiceModel.Channels.IRequestChannel.EndRequest(System.IAsyncResult)
    name: EndRequest
    fullName: System.ServiceModel.Channels.IRequestChannel.EndRequest
  - name: (
    fullName: (
  - uid: System.IAsyncResult
    name: IAsyncResult
    fullName: System.IAsyncResult
    isExternal: true
  - name: )
    fullName: )
  commentId: M:System.ServiceModel.Channels.IRequestChannel.EndRequest(System.IAsyncResult)
  nameWithType: IRequestChannel.EndRequest(IAsyncResult)
- uid: System.ServiceModel.Channels.IRequestChannel.Request(System.ServiceModel.Channels.Message)
  parent: System.ServiceModel.Channels.IRequestChannel
  isExternal: false
  name: Request(Message)
  fullName: System.ServiceModel.Channels.IRequestChannel.Request(System.ServiceModel.Channels.Message)
  spec.csharp:
  - uid: System.ServiceModel.Channels.IRequestChannel.Request(System.ServiceModel.Channels.Message)
    name: Request
    fullName: System.ServiceModel.Channels.IRequestChannel.Request
  - name: (
    fullName: (
  - uid: System.ServiceModel.Channels.Message
    name: Message
    fullName: System.ServiceModel.Channels.Message
  - name: )
    fullName: )
  spec.vb:
  - uid: System.ServiceModel.Channels.IRequestChannel.Request(System.ServiceModel.Channels.Message)
    name: Request
    fullName: System.ServiceModel.Channels.IRequestChannel.Request
  - name: (
    fullName: (
  - uid: System.ServiceModel.Channels.Message
    name: Message
    fullName: System.ServiceModel.Channels.Message
  - name: )
    fullName: )
  commentId: M:System.ServiceModel.Channels.IRequestChannel.Request(System.ServiceModel.Channels.Message)
  nameWithType: IRequestChannel.Request(Message)
- uid: System.ServiceModel.Channels.IRequestChannel.Request(System.ServiceModel.Channels.Message,System.TimeSpan)
  parent: System.ServiceModel.Channels.IRequestChannel
  isExternal: true
  name: Request(Message, TimeSpan)
  fullName: System.ServiceModel.Channels.IRequestChannel.Request(System.ServiceModel.Channels.Message, System.TimeSpan)
  spec.csharp:
  - uid: System.ServiceModel.Channels.IRequestChannel.Request(System.ServiceModel.Channels.Message,System.TimeSpan)
    name: Request
    fullName: System.ServiceModel.Channels.IRequestChannel.Request
  - name: (
    fullName: (
  - uid: System.ServiceModel.Channels.Message
    name: Message
    fullName: System.ServiceModel.Channels.Message
  - name: ', '
    fullName: ', '
  - uid: System.TimeSpan
    name: TimeSpan
    fullName: System.TimeSpan
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.ServiceModel.Channels.IRequestChannel.Request(System.ServiceModel.Channels.Message,System.TimeSpan)
    name: Request
    fullName: System.ServiceModel.Channels.IRequestChannel.Request
  - name: (
    fullName: (
  - uid: System.ServiceModel.Channels.Message
    name: Message
    fullName: System.ServiceModel.Channels.Message
  - name: ', '
    fullName: ', '
  - uid: System.TimeSpan
    name: TimeSpan
    fullName: System.TimeSpan
    isExternal: true
  - name: )
    fullName: )
  commentId: M:System.ServiceModel.Channels.IRequestChannel.Request(System.ServiceModel.Channels.Message,System.TimeSpan)
  nameWithType: IRequestChannel.Request(Message, TimeSpan)
- uid: System.ServiceModel.IClientChannel.BeginDisplayInitializationUI(System.AsyncCallback,System.Object)
  parent: System.ServiceModel.IClientChannel
  isExternal: true
  name: BeginDisplayInitializationUI(AsyncCallback, Object)
  fullName: System.ServiceModel.IClientChannel.BeginDisplayInitializationUI(System.AsyncCallback, System.Object)
  spec.csharp:
  - uid: System.ServiceModel.IClientChannel.BeginDisplayInitializationUI(System.AsyncCallback,System.Object)
    name: BeginDisplayInitializationUI
    fullName: System.ServiceModel.IClientChannel.BeginDisplayInitializationUI
  - name: (
    fullName: (
  - uid: System.AsyncCallback
    name: AsyncCallback
    fullName: System.AsyncCallback
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.ServiceModel.IClientChannel.BeginDisplayInitializationUI(System.AsyncCallback,System.Object)
    name: BeginDisplayInitializationUI
    fullName: System.ServiceModel.IClientChannel.BeginDisplayInitializationUI
  - name: (
    fullName: (
  - uid: System.AsyncCallback
    name: AsyncCallback
    fullName: System.AsyncCallback
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
  commentId: M:System.ServiceModel.IClientChannel.BeginDisplayInitializationUI(System.AsyncCallback,System.Object)
  nameWithType: IClientChannel.BeginDisplayInitializationUI(AsyncCallback, Object)
- uid: System.ServiceModel.IClientChannel.DisplayInitializationUI
  parent: System.ServiceModel.IClientChannel
  isExternal: false
  name: DisplayInitializationUI()
  fullName: System.ServiceModel.IClientChannel.DisplayInitializationUI()
  spec.csharp:
  - uid: System.ServiceModel.IClientChannel.DisplayInitializationUI
    name: DisplayInitializationUI
    fullName: System.ServiceModel.IClientChannel.DisplayInitializationUI
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.ServiceModel.IClientChannel.DisplayInitializationUI
    name: DisplayInitializationUI
    fullName: System.ServiceModel.IClientChannel.DisplayInitializationUI
  - name: (
    fullName: (
  - name: )
    fullName: )
  commentId: M:System.ServiceModel.IClientChannel.DisplayInitializationUI
  nameWithType: IClientChannel.DisplayInitializationUI()
- uid: System.ServiceModel.IClientChannel.EndDisplayInitializationUI(System.IAsyncResult)
  parent: System.ServiceModel.IClientChannel
  isExternal: true
  name: EndDisplayInitializationUI(IAsyncResult)
  fullName: System.ServiceModel.IClientChannel.EndDisplayInitializationUI(System.IAsyncResult)
  spec.csharp:
  - uid: System.ServiceModel.IClientChannel.EndDisplayInitializationUI(System.IAsyncResult)
    name: EndDisplayInitializationUI
    fullName: System.ServiceModel.IClientChannel.EndDisplayInitializationUI
  - name: (
    fullName: (
  - uid: System.IAsyncResult
    name: IAsyncResult
    fullName: System.IAsyncResult
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.ServiceModel.IClientChannel.EndDisplayInitializationUI(System.IAsyncResult)
    name: EndDisplayInitializationUI
    fullName: System.ServiceModel.IClientChannel.EndDisplayInitializationUI
  - name: (
    fullName: (
  - uid: System.IAsyncResult
    name: IAsyncResult
    fullName: System.IAsyncResult
    isExternal: true
  - name: )
    fullName: )
  commentId: M:System.ServiceModel.IClientChannel.EndDisplayInitializationUI(System.IAsyncResult)
  nameWithType: IClientChannel.EndDisplayInitializationUI(IAsyncResult)
- uid: System.ServiceModel.ICommunicationObject.Abort
  parent: System.ServiceModel.ICommunicationObject
  isExternal: false
  name: Abort()
  fullName: System.ServiceModel.ICommunicationObject.Abort()
  spec.csharp:
  - uid: System.ServiceModel.ICommunicationObject.Abort
    name: Abort
    fullName: System.ServiceModel.ICommunicationObject.Abort
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.ServiceModel.ICommunicationObject.Abort
    name: Abort
    fullName: System.ServiceModel.ICommunicationObject.Abort
  - name: (
    fullName: (
  - name: )
    fullName: )
  commentId: M:System.ServiceModel.ICommunicationObject.Abort
  nameWithType: ICommunicationObject.Abort()
- uid: System.ServiceModel.ICommunicationObject.BeginClose(System.AsyncCallback,System.Object)
  parent: System.ServiceModel.ICommunicationObject
  isExternal: true
  name: BeginClose(AsyncCallback, Object)
  fullName: System.ServiceModel.ICommunicationObject.BeginClose(System.AsyncCallback, System.Object)
  spec.csharp:
  - uid: System.ServiceModel.ICommunicationObject.BeginClose(System.AsyncCallback,System.Object)
    name: BeginClose
    fullName: System.ServiceModel.ICommunicationObject.BeginClose
  - name: (
    fullName: (
  - uid: System.AsyncCallback
    name: AsyncCallback
    fullName: System.AsyncCallback
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.ServiceModel.ICommunicationObject.BeginClose(System.AsyncCallback,System.Object)
    name: BeginClose
    fullName: System.ServiceModel.ICommunicationObject.BeginClose
  - name: (
    fullName: (
  - uid: System.AsyncCallback
    name: AsyncCallback
    fullName: System.AsyncCallback
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
  commentId: M:System.ServiceModel.ICommunicationObject.BeginClose(System.AsyncCallback,System.Object)
  nameWithType: ICommunicationObject.BeginClose(AsyncCallback, Object)
- uid: System.ServiceModel.ICommunicationObject.BeginClose(System.TimeSpan,System.AsyncCallback,System.Object)
  parent: System.ServiceModel.ICommunicationObject
  isExternal: true
  name: BeginClose(TimeSpan, AsyncCallback, Object)
  fullName: System.ServiceModel.ICommunicationObject.BeginClose(System.TimeSpan, System.AsyncCallback, System.Object)
  spec.csharp:
  - uid: System.ServiceModel.ICommunicationObject.BeginClose(System.TimeSpan,System.AsyncCallback,System.Object)
    name: BeginClose
    fullName: System.ServiceModel.ICommunicationObject.BeginClose
  - name: (
    fullName: (
  - uid: System.TimeSpan
    name: TimeSpan
    fullName: System.TimeSpan
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.AsyncCallback
    name: AsyncCallback
    fullName: System.AsyncCallback
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.ServiceModel.ICommunicationObject.BeginClose(System.TimeSpan,System.AsyncCallback,System.Object)
    name: BeginClose
    fullName: System.ServiceModel.ICommunicationObject.BeginClose
  - name: (
    fullName: (
  - uid: System.TimeSpan
    name: TimeSpan
    fullName: System.TimeSpan
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.AsyncCallback
    name: AsyncCallback
    fullName: System.AsyncCallback
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
  commentId: M:System.ServiceModel.ICommunicationObject.BeginClose(System.TimeSpan,System.AsyncCallback,System.Object)
  nameWithType: ICommunicationObject.BeginClose(TimeSpan, AsyncCallback, Object)
- uid: System.ServiceModel.ICommunicationObject.BeginOpen(System.AsyncCallback,System.Object)
  parent: System.ServiceModel.ICommunicationObject
  isExternal: true
  name: BeginOpen(AsyncCallback, Object)
  fullName: System.ServiceModel.ICommunicationObject.BeginOpen(System.AsyncCallback, System.Object)
  spec.csharp:
  - uid: System.ServiceModel.ICommunicationObject.BeginOpen(System.AsyncCallback,System.Object)
    name: BeginOpen
    fullName: System.ServiceModel.ICommunicationObject.BeginOpen
  - name: (
    fullName: (
  - uid: System.AsyncCallback
    name: AsyncCallback
    fullName: System.AsyncCallback
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.ServiceModel.ICommunicationObject.BeginOpen(System.AsyncCallback,System.Object)
    name: BeginOpen
    fullName: System.ServiceModel.ICommunicationObject.BeginOpen
  - name: (
    fullName: (
  - uid: System.AsyncCallback
    name: AsyncCallback
    fullName: System.AsyncCallback
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
  commentId: M:System.ServiceModel.ICommunicationObject.BeginOpen(System.AsyncCallback,System.Object)
  nameWithType: ICommunicationObject.BeginOpen(AsyncCallback, Object)
- uid: System.ServiceModel.ICommunicationObject.BeginOpen(System.TimeSpan,System.AsyncCallback,System.Object)
  parent: System.ServiceModel.ICommunicationObject
  isExternal: true
  name: BeginOpen(TimeSpan, AsyncCallback, Object)
  fullName: System.ServiceModel.ICommunicationObject.BeginOpen(System.TimeSpan, System.AsyncCallback, System.Object)
  spec.csharp:
  - uid: System.ServiceModel.ICommunicationObject.BeginOpen(System.TimeSpan,System.AsyncCallback,System.Object)
    name: BeginOpen
    fullName: System.ServiceModel.ICommunicationObject.BeginOpen
  - name: (
    fullName: (
  - uid: System.TimeSpan
    name: TimeSpan
    fullName: System.TimeSpan
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.AsyncCallback
    name: AsyncCallback
    fullName: System.AsyncCallback
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.ServiceModel.ICommunicationObject.BeginOpen(System.TimeSpan,System.AsyncCallback,System.Object)
    name: BeginOpen
    fullName: System.ServiceModel.ICommunicationObject.BeginOpen
  - name: (
    fullName: (
  - uid: System.TimeSpan
    name: TimeSpan
    fullName: System.TimeSpan
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.AsyncCallback
    name: AsyncCallback
    fullName: System.AsyncCallback
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
  commentId: M:System.ServiceModel.ICommunicationObject.BeginOpen(System.TimeSpan,System.AsyncCallback,System.Object)
  nameWithType: ICommunicationObject.BeginOpen(TimeSpan, AsyncCallback, Object)
- uid: System.ServiceModel.ICommunicationObject.Close
  parent: System.ServiceModel.ICommunicationObject
  isExternal: false
  name: Close()
  fullName: System.ServiceModel.ICommunicationObject.Close()
  spec.csharp:
  - uid: System.ServiceModel.ICommunicationObject.Close
    name: Close
    fullName: System.ServiceModel.ICommunicationObject.Close
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.ServiceModel.ICommunicationObject.Close
    name: Close
    fullName: System.ServiceModel.ICommunicationObject.Close
  - name: (
    fullName: (
  - name: )
    fullName: )
  commentId: M:System.ServiceModel.ICommunicationObject.Close
  nameWithType: ICommunicationObject.Close()
- uid: System.ServiceModel.ICommunicationObject.Close(System.TimeSpan)
  parent: System.ServiceModel.ICommunicationObject
  isExternal: true
  name: Close(TimeSpan)
  fullName: System.ServiceModel.ICommunicationObject.Close(System.TimeSpan)
  spec.csharp:
  - uid: System.ServiceModel.ICommunicationObject.Close(System.TimeSpan)
    name: Close
    fullName: System.ServiceModel.ICommunicationObject.Close
  - name: (
    fullName: (
  - uid: System.TimeSpan
    name: TimeSpan
    fullName: System.TimeSpan
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.ServiceModel.ICommunicationObject.Close(System.TimeSpan)
    name: Close
    fullName: System.ServiceModel.ICommunicationObject.Close
  - name: (
    fullName: (
  - uid: System.TimeSpan
    name: TimeSpan
    fullName: System.TimeSpan
    isExternal: true
  - name: )
    fullName: )
  commentId: M:System.ServiceModel.ICommunicationObject.Close(System.TimeSpan)
  nameWithType: ICommunicationObject.Close(TimeSpan)
- uid: System.ServiceModel.ICommunicationObject.EndClose(System.IAsyncResult)
  parent: System.ServiceModel.ICommunicationObject
  isExternal: true
  name: EndClose(IAsyncResult)
  fullName: System.ServiceModel.ICommunicationObject.EndClose(System.IAsyncResult)
  spec.csharp:
  - uid: System.ServiceModel.ICommunicationObject.EndClose(System.IAsyncResult)
    name: EndClose
    fullName: System.ServiceModel.ICommunicationObject.EndClose
  - name: (
    fullName: (
  - uid: System.IAsyncResult
    name: IAsyncResult
    fullName: System.IAsyncResult
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.ServiceModel.ICommunicationObject.EndClose(System.IAsyncResult)
    name: EndClose
    fullName: System.ServiceModel.ICommunicationObject.EndClose
  - name: (
    fullName: (
  - uid: System.IAsyncResult
    name: IAsyncResult
    fullName: System.IAsyncResult
    isExternal: true
  - name: )
    fullName: )
  commentId: M:System.ServiceModel.ICommunicationObject.EndClose(System.IAsyncResult)
  nameWithType: ICommunicationObject.EndClose(IAsyncResult)
- uid: System.ServiceModel.ICommunicationObject.EndOpen(System.IAsyncResult)
  parent: System.ServiceModel.ICommunicationObject
  isExternal: true
  name: EndOpen(IAsyncResult)
  fullName: System.ServiceModel.ICommunicationObject.EndOpen(System.IAsyncResult)
  spec.csharp:
  - uid: System.ServiceModel.ICommunicationObject.EndOpen(System.IAsyncResult)
    name: EndOpen
    fullName: System.ServiceModel.ICommunicationObject.EndOpen
  - name: (
    fullName: (
  - uid: System.IAsyncResult
    name: IAsyncResult
    fullName: System.IAsyncResult
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.ServiceModel.ICommunicationObject.EndOpen(System.IAsyncResult)
    name: EndOpen
    fullName: System.ServiceModel.ICommunicationObject.EndOpen
  - name: (
    fullName: (
  - uid: System.IAsyncResult
    name: IAsyncResult
    fullName: System.IAsyncResult
    isExternal: true
  - name: )
    fullName: )
  commentId: M:System.ServiceModel.ICommunicationObject.EndOpen(System.IAsyncResult)
  nameWithType: ICommunicationObject.EndOpen(IAsyncResult)
- uid: System.ServiceModel.ICommunicationObject.Open
  parent: System.ServiceModel.ICommunicationObject
  isExternal: false
  name: Open()
  fullName: System.ServiceModel.ICommunicationObject.Open()
  spec.csharp:
  - uid: System.ServiceModel.ICommunicationObject.Open
    name: Open
    fullName: System.ServiceModel.ICommunicationObject.Open
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.ServiceModel.ICommunicationObject.Open
    name: Open
    fullName: System.ServiceModel.ICommunicationObject.Open
  - name: (
    fullName: (
  - name: )
    fullName: )
  commentId: M:System.ServiceModel.ICommunicationObject.Open
  nameWithType: ICommunicationObject.Open()
- uid: System.ServiceModel.ICommunicationObject.Open(System.TimeSpan)
  parent: System.ServiceModel.ICommunicationObject
  isExternal: true
  name: Open(TimeSpan)
  fullName: System.ServiceModel.ICommunicationObject.Open(System.TimeSpan)
  spec.csharp:
  - uid: System.ServiceModel.ICommunicationObject.Open(System.TimeSpan)
    name: Open
    fullName: System.ServiceModel.ICommunicationObject.Open
  - name: (
    fullName: (
  - uid: System.TimeSpan
    name: TimeSpan
    fullName: System.TimeSpan
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.ServiceModel.ICommunicationObject.Open(System.TimeSpan)
    name: Open
    fullName: System.ServiceModel.ICommunicationObject.Open
  - name: (
    fullName: (
  - uid: System.TimeSpan
    name: TimeSpan
    fullName: System.TimeSpan
    isExternal: true
  - name: )
    fullName: )
  commentId: M:System.ServiceModel.ICommunicationObject.Open(System.TimeSpan)
  nameWithType: ICommunicationObject.Open(TimeSpan)
