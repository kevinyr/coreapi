### YamlMime:ManagedReference
items:
- uid: System.ComponentModel.EventHandlerList
  commentId: T:System.ComponentModel.EventHandlerList
  id: EventHandlerList
  parent: System.ComponentModel
  children:
  - System.ComponentModel.EventHandlerList.#ctor
  - System.ComponentModel.EventHandlerList.AddHandler(System.Object,System.Delegate)
  - System.ComponentModel.EventHandlerList.AddHandlers(System.ComponentModel.EventHandlerList)
  - System.ComponentModel.EventHandlerList.Dispose
  - System.ComponentModel.EventHandlerList.Item(System.Object)
  - System.ComponentModel.EventHandlerList.RemoveHandler(System.Object,System.Delegate)
  langs:
  - csharp
  - vb
  name: EventHandlerList
  nameWithType: EventHandlerList
  fullName: System.ComponentModel.EventHandlerList
  type: Class
  source:
    remote:
      path: src/System.ComponentModel.Primitives/src/System/ComponentModel/EventHandlerList.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: EventHandlerList
    path: src/System.ComponentModel.Primitives/src/System/ComponentModel/EventHandlerList.cs
    startLine: 11
  assemblies:
  - System.ComponentModel.Primitives
  namespace: System.ComponentModel
  summary: "\n<p>Provides a simple list of delegates. This class cannot be inherited.</p>\n"
  syntax:
    content: 'public sealed class EventHandlerList : IDisposable'
    content.vb: >-
      Public NotInheritable Class EventHandlerList
          Implements IDisposable
  inheritance:
  - System.Object
  implements:
  - System.IDisposable
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  modifiers.csharp:
  - public
  - sealed
  - class
  modifiers.vb:
  - Public
  - NotInheritable
  - Class
- uid: System.ComponentModel.EventHandlerList.#ctor
  commentId: M:System.ComponentModel.EventHandlerList.#ctor
  id: '#ctor'
  parent: System.ComponentModel.EventHandlerList
  langs:
  - csharp
  - vb
  name: EventHandlerList()
  nameWithType: EventHandlerList.EventHandlerList()
  fullName: System.ComponentModel.EventHandlerList.EventHandlerList()
  type: Constructor
  source:
    remote:
      path: src/System.ComponentModel.Primitives/src/System/ComponentModel/EventHandlerList.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: .ctor
    path: src/System.ComponentModel.Primitives/src/System/ComponentModel/EventHandlerList.cs
    startLine: 18
  assemblies:
  - System.ComponentModel.Primitives
  namespace: System.ComponentModel
  summary: "\n<p>Initializes a new instance of the <xref href=\"System.ComponentModel.EventHandlerList\" data-throw-if-not-resolved=\"false\"></xref> class. </p>\n"
  syntax:
    content: >-
      [SuppressMessage("Microsoft.Security", "CA2122:DoNotIndirectlyExposeMethodsWithLinkDemands")]

      public EventHandlerList()
    content.vb: >-
      <SuppressMessage("Microsoft.Security", "CA2122:DoNotIndirectlyExposeMethodsWithLinkDemands")>

      Public Sub New
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: System.ComponentModel.EventHandlerList.Item(System.Object)
  commentId: P:System.ComponentModel.EventHandlerList.Item(System.Object)
  id: Item(System.Object)
  parent: System.ComponentModel.EventHandlerList
  langs:
  - csharp
  - vb
  name: Item[Object]
  nameWithType: EventHandlerList.Item[Object]
  fullName: System.ComponentModel.EventHandlerList.Item[System.Object]
  type: Property
  source:
    remote:
      path: src/System.ComponentModel.Primitives/src/System/ComponentModel/EventHandlerList.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: this[]
    path: src/System.ComponentModel.Primitives/src/System/ComponentModel/EventHandlerList.cs
    startLine: 26
  assemblies:
  - System.ComponentModel.Primitives
  namespace: System.ComponentModel
  summary: "\n<p>Gets or sets the delegate for the specified object.</p>\n"
  syntax:
    content: >-
      public Delegate this[object key]

      {
          [SuppressMessage("Microsoft.Security", "CA2122:DoNotIndirectlyExposeMethodsWithLinkDemands")]
          get;
          set;
      }
    content.vb: 'Public Property Item(key As Object) As '
    parameters:
    - id: key
      type: System.Object
      description: "\n<p>An object to find in the list. </p>\n"
    return:
      type: System.Delegate
      description: "\n<p>The delegate for the specified key, or <strong>null</strong> if a delegate does not exist.</p>\n"
  seealso:
  - linkId: System.ComponentModel.EventHandlerList
    commentId: T:System.ComponentModel.EventHandlerList
  nameWithType.vb: EventHandlerList.Item(Object)
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
  fullName.vb: System.ComponentModel.EventHandlerList.Item(System.Object)
  name.vb: Item(Object)
- uid: System.ComponentModel.EventHandlerList.AddHandler(System.Object,System.Delegate)
  commentId: M:System.ComponentModel.EventHandlerList.AddHandler(System.Object,System.Delegate)
  id: AddHandler(System.Object,System.Delegate)
  parent: System.ComponentModel.EventHandlerList
  langs:
  - csharp
  - vb
  name: AddHandler(Object, Delegate)
  nameWithType: EventHandlerList.AddHandler(Object, Delegate)
  fullName: System.ComponentModel.EventHandlerList.AddHandler(System.Object, System.Delegate)
  type: Method
  source:
    remote:
      path: src/System.ComponentModel.Primitives/src/System/ComponentModel/EventHandlerList.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: AddHandler
    path: src/System.ComponentModel.Primitives/src/System/ComponentModel/EventHandlerList.cs
    startLine: 58
  assemblies:
  - System.ComponentModel.Primitives
  namespace: System.ComponentModel
  summary: "\n<p>Adds a delegate to the list.</p>\n"
  syntax:
    content: >-
      [SuppressMessage("Microsoft.Security", "CA2122:DoNotIndirectlyExposeMethodsWithLinkDemands")]

      public void AddHandler(object key, Delegate value)
    content.vb: >-
      <SuppressMessage("Microsoft.Security", "CA2122:DoNotIndirectlyExposeMethodsWithLinkDemands")>

      Public Sub AddHandler(key As Object, value As  Delegate)
    parameters:
    - id: key
      type: System.Object
      description: "\n<p>The object that owns the event. </p>\n"
    - id: value
      type: System.Delegate
      description: "\n<p>The delegate to add to the list. </p>\n"
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: System.ComponentModel.EventHandlerList.AddHandlers(System.ComponentModel.EventHandlerList)
  commentId: M:System.ComponentModel.EventHandlerList.AddHandlers(System.ComponentModel.EventHandlerList)
  id: AddHandlers(System.ComponentModel.EventHandlerList)
  parent: System.ComponentModel.EventHandlerList
  langs:
  - csharp
  - vb
  name: AddHandlers(EventHandlerList)
  nameWithType: EventHandlerList.AddHandlers(EventHandlerList)
  fullName: System.ComponentModel.EventHandlerList.AddHandlers(System.ComponentModel.EventHandlerList)
  type: Method
  source:
    remote:
      path: src/System.ComponentModel.Primitives/src/System/ComponentModel/EventHandlerList.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: AddHandlers
    path: src/System.ComponentModel.Primitives/src/System/ComponentModel/EventHandlerList.cs
    startLine: 73
  assemblies:
  - System.ComponentModel.Primitives
  namespace: System.ComponentModel
  summary: "\n<p>Adds a list of delegates to the current list.</p>\n"
  syntax:
    content: public void AddHandlers(EventHandlerList listToAddFrom)
    content.vb: Public Sub AddHandlers(listToAddFrom As EventHandlerList)
    parameters:
    - id: listToAddFrom
      type: System.ComponentModel.EventHandlerList
      description: "\n<p>The list to add.</p>\n"
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: System.ComponentModel.EventHandlerList.Dispose
  commentId: M:System.ComponentModel.EventHandlerList.Dispose
  id: Dispose
  parent: System.ComponentModel.EventHandlerList
  langs:
  - csharp
  - vb
  name: Dispose()
  nameWithType: EventHandlerList.Dispose()
  fullName: System.ComponentModel.EventHandlerList.Dispose()
  type: Method
  source:
    remote:
      path: src/System.ComponentModel.Primitives/src/System/ComponentModel/EventHandlerList.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: Dispose
    path: src/System.ComponentModel.Primitives/src/System/ComponentModel/EventHandlerList.cs
    startLine: 86
  assemblies:
  - System.ComponentModel.Primitives
  namespace: System.ComponentModel
  summary: "\n<p>Disposes the delegate list.</p>\n"
  syntax:
    content: public void Dispose()
    content.vb: Public Sub Dispose
  implements:
  - System.IDisposable.Dispose
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: System.ComponentModel.EventHandlerList.RemoveHandler(System.Object,System.Delegate)
  commentId: M:System.ComponentModel.EventHandlerList.RemoveHandler(System.Object,System.Delegate)
  id: RemoveHandler(System.Object,System.Delegate)
  parent: System.ComponentModel.EventHandlerList
  langs:
  - csharp
  - vb
  name: RemoveHandler(Object, Delegate)
  nameWithType: EventHandlerList.RemoveHandler(Object, Delegate)
  fullName: System.ComponentModel.EventHandlerList.RemoveHandler(System.Object, System.Delegate)
  type: Method
  source:
    remote:
      path: src/System.ComponentModel.Primitives/src/System/ComponentModel/EventHandlerList.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: RemoveHandler
    path: src/System.ComponentModel.Primitives/src/System/ComponentModel/EventHandlerList.cs
    startLine: 108
  assemblies:
  - System.ComponentModel.Primitives
  namespace: System.ComponentModel
  summary: "\n<p>Removes a delegate from the list.</p>\n"
  syntax:
    content: >-
      [SuppressMessage("Microsoft.Security", "CA2122:DoNotIndirectlyExposeMethodsWithLinkDemands")]

      public void RemoveHandler(object key, Delegate value)
    content.vb: >-
      <SuppressMessage("Microsoft.Security", "CA2122:DoNotIndirectlyExposeMethodsWithLinkDemands")>

      Public Sub RemoveHandler(key As Object, value As  Delegate)
    parameters:
    - id: key
      type: System.Object
      description: "\n<p>The object that owns the event. </p>\n"
    - id: value
      type: System.Delegate
      description: "\n<p>The delegate to remove from the list. </p>\n"
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
references:
- uid: System.ComponentModel
  commentId: N:System.ComponentModel
  isExternal: false
  name: System.ComponentModel
  nameWithType: System.ComponentModel
  fullName: System.ComponentModel
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: false
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.IDisposable
  commentId: T:System.IDisposable
  parent: System
  isExternal: false
  name: IDisposable
  nameWithType: IDisposable
  fullName: System.IDisposable
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: System.Delegate
  commentId: T:System.Delegate
  parent: System
  isExternal: false
  name: Delegate
  nameWithType: Delegate
  fullName: System.Delegate
- uid: System.ComponentModel.EventHandlerList
  commentId: T:System.ComponentModel.EventHandlerList
  parent: System.ComponentModel
  isExternal: false
  name: EventHandlerList
  nameWithType: EventHandlerList
  fullName: System.ComponentModel.EventHandlerList
- uid: System.IDisposable.Dispose
  commentId: M:System.IDisposable.Dispose
  parent: System.IDisposable
  isExternal: false
  name: Dispose()
  nameWithType: IDisposable.Dispose()
  fullName: System.IDisposable.Dispose()
  spec.csharp:
  - uid: System.IDisposable.Dispose
    name: Dispose
    nameWithType: IDisposable.Dispose
    fullName: System.IDisposable.Dispose
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.IDisposable.Dispose
    name: Dispose
    nameWithType: IDisposable.Dispose
    fullName: System.IDisposable.Dispose
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
