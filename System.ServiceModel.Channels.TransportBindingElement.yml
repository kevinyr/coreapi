items:
- uid: System.ServiceModel.Channels.TransportBindingElement
  commentId: T:System.ServiceModel.Channels.TransportBindingElement
  id: TransportBindingElement
  parent: System.ServiceModel.Channels
  children:
  - System.ServiceModel.Channels.TransportBindingElement.#ctor
  - System.ServiceModel.Channels.TransportBindingElement.#ctor(System.ServiceModel.Channels.TransportBindingElement)
  - System.ServiceModel.Channels.TransportBindingElement.GetProperty``1(System.ServiceModel.Channels.BindingContext)
  - System.ServiceModel.Channels.TransportBindingElement.ManualAddressing
  - System.ServiceModel.Channels.TransportBindingElement.MaxReceivedMessageSize
  - System.ServiceModel.Channels.TransportBindingElement.Scheme
  langs:
  - csharp
  - vb
  name: TransportBindingElement
  fullName: System.ServiceModel.Channels.TransportBindingElement
  type: Class
  source:
    remote:
      path: src/System.Private.ServiceModel/src/System/ServiceModel/Channels/TransportBindingElement.cs
      branch: master
      repo: https://github.com/dotnet/wcf.git
    id: TransportBindingElement
    path: src/System.Private.ServiceModel/src/System/ServiceModel/Channels/TransportBindingElement.cs
    startLine: 12
  assemblies:
  - System.ServiceModel.Primitives
  namespace: System.ServiceModel.Channels
  summary: "\n<p>An <strong>abstract</strong> base class that represents a transport binding element.</p>\n"
  syntax:
    content: 'public abstract class TransportBindingElement : BindingElement'
    content.vb: >-
      Public MustInherit Class TransportBindingElement
          Inherits BindingElement
  inheritance:
  - System.Object
  - System.ServiceModel.Channels.BindingElement
  inheritedMembers:
  - System.ServiceModel.Channels.BindingElement.BuildChannelFactory``1(System.ServiceModel.Channels.BindingContext)
  - System.ServiceModel.Channels.BindingElement.CanBuildChannelFactory``1(System.ServiceModel.Channels.BindingContext)
  - System.ServiceModel.Channels.BindingElement.Clone
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  modifiers.csharp:
  - public
  - abstract
  - class
  modifiers.vb:
  - Public
  - MustInherit
  - Class
  nameWithType: TransportBindingElement
- uid: System.ServiceModel.Channels.TransportBindingElement.#ctor
  commentId: M:System.ServiceModel.Channels.TransportBindingElement.#ctor
  id: '#ctor'
  parent: System.ServiceModel.Channels.TransportBindingElement
  langs:
  - csharp
  - vb
  name: TransportBindingElement()
  fullName: System.ServiceModel.Channels.TransportBindingElement.TransportBindingElement()
  type: Constructor
  source:
    remote:
      path: src/System.Private.ServiceModel/src/System/ServiceModel/Channels/TransportBindingElement.cs
      branch: master
      repo: https://github.com/dotnet/wcf.git
    id: .ctor
    path: src/System.Private.ServiceModel/src/System/ServiceModel/Channels/TransportBindingElement.cs
    startLine: 19
  assemblies:
  - System.ServiceModel.Primitives
  namespace: System.ServiceModel.Channels
  summary: "\n<p>Creates a new instance of this class.</p>\n"
  syntax:
    content: protected TransportBindingElement()
    content.vb: Protected Sub New
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
  nameWithType: TransportBindingElement.TransportBindingElement()
- uid: System.ServiceModel.Channels.TransportBindingElement.#ctor(System.ServiceModel.Channels.TransportBindingElement)
  commentId: M:System.ServiceModel.Channels.TransportBindingElement.#ctor(System.ServiceModel.Channels.TransportBindingElement)
  id: '#ctor(System.ServiceModel.Channels.TransportBindingElement)'
  parent: System.ServiceModel.Channels.TransportBindingElement
  langs:
  - csharp
  - vb
  name: TransportBindingElement(TransportBindingElement)
  fullName: System.ServiceModel.Channels.TransportBindingElement.TransportBindingElement(System.ServiceModel.Channels.TransportBindingElement)
  type: Constructor
  source:
    remote:
      path: src/System.Private.ServiceModel/src/System/ServiceModel/Channels/TransportBindingElement.cs
      branch: master
      repo: https://github.com/dotnet/wcf.git
    id: .ctor
    path: src/System.Private.ServiceModel/src/System/ServiceModel/Channels/TransportBindingElement.cs
    startLine: 26
  assemblies:
  - System.ServiceModel.Primitives
  namespace: System.ServiceModel.Channels
  summary: "\n<p>Creates a new instance of this class from an existing instance.</p>\n"
  syntax:
    content: protected TransportBindingElement(TransportBindingElement elementToBeCloned)
    content.vb: Protected Sub New(elementToBeCloned As TransportBindingElement)
    parameters:
    - id: elementToBeCloned
      type: System.ServiceModel.Channels.TransportBindingElement
      description: "\n<p>The <xref href=\"System.ServiceModel.Channels.TransportBindingElement\" data-throw-if-not-resolved=\"false\"></xref>     to be cloned. </p>\n"
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
  nameWithType: TransportBindingElement.TransportBindingElement(TransportBindingElement)
- uid: System.ServiceModel.Channels.TransportBindingElement.ManualAddressing
  commentId: P:System.ServiceModel.Channels.TransportBindingElement.ManualAddressing
  id: ManualAddressing
  parent: System.ServiceModel.Channels.TransportBindingElement
  langs:
  - csharp
  - vb
  name: ManualAddressing
  fullName: System.ServiceModel.Channels.TransportBindingElement.ManualAddressing
  type: Property
  source:
    remote:
      path: src/System.Private.ServiceModel/src/System/ServiceModel/Channels/TransportBindingElement.cs
      branch: master
      repo: https://github.com/dotnet/wcf.git
    id: ManualAddressing
    path: src/System.Private.ServiceModel/src/System/ServiceModel/Channels/TransportBindingElement.cs
    startLine: 34
  assemblies:
  - System.ServiceModel.Primitives
  namespace: System.ServiceModel.Channels
  summary: "\n<p>Gets or sets a value that indicates whether manual addressing of the message is required.</p>\n"
  syntax:
    content: public virtual bool ManualAddressing { get; set; }
    content.vb: Public Overridable Property ManualAddressing As Boolean
    parameters: []
    return:
      type: System.Boolean
      description: "\n<p>\n<strong>true</strong> if manual addressing of the message is required; otherwise<strong> false</strong>. The default is <strong>false</strong>.</p>\n"
  modifiers.csharp:
  - public
  - virtual
  - get
  - set
  modifiers.vb:
  - Public
  - Overridable
  nameWithType: TransportBindingElement.ManualAddressing
- uid: System.ServiceModel.Channels.TransportBindingElement.MaxReceivedMessageSize
  commentId: P:System.ServiceModel.Channels.TransportBindingElement.MaxReceivedMessageSize
  id: MaxReceivedMessageSize
  parent: System.ServiceModel.Channels.TransportBindingElement
  langs:
  - csharp
  - vb
  name: MaxReceivedMessageSize
  fullName: System.ServiceModel.Channels.TransportBindingElement.MaxReceivedMessageSize
  type: Property
  source:
    remote:
      path: src/System.Private.ServiceModel/src/System/ServiceModel/Channels/TransportBindingElement.cs
      branch: master
      repo: https://github.com/dotnet/wcf.git
    id: MaxReceivedMessageSize
    path: src/System.Private.ServiceModel/src/System/ServiceModel/Channels/TransportBindingElement.cs
    startLine: 66
  assemblies:
  - System.ServiceModel.Primitives
  namespace: System.ServiceModel.Channels
  summary: "\n<p>Gets and sets the maximum allowable message size, in bytes, that can be received.</p>\n"
  syntax:
    content: public virtual long MaxReceivedMessageSize { get; set; }
    content.vb: Public Overridable Property MaxReceivedMessageSize As Long
    parameters: []
    return:
      type: System.Int64
      description: "\n<p>The maximum allowable message size that can be received. The default is 65,536 bytes.</p>\n"
  modifiers.csharp:
  - public
  - virtual
  - get
  - set
  modifiers.vb:
  - Public
  - Overridable
  nameWithType: TransportBindingElement.MaxReceivedMessageSize
- uid: System.ServiceModel.Channels.TransportBindingElement.Scheme
  commentId: P:System.ServiceModel.Channels.TransportBindingElement.Scheme
  id: Scheme
  parent: System.ServiceModel.Channels.TransportBindingElement
  langs:
  - csharp
  - vb
  name: Scheme
  fullName: System.ServiceModel.Channels.TransportBindingElement.Scheme
  type: Property
  source:
    remote:
      path: src/System.Private.ServiceModel/src/System/ServiceModel/Channels/TransportBindingElement.cs
      branch: master
      repo: https://github.com/dotnet/wcf.git
    id: Scheme
    path: src/System.Private.ServiceModel/src/System/ServiceModel/Channels/TransportBindingElement.cs
    startLine: 84
  assemblies:
  - System.ServiceModel.Primitives
  namespace: System.ServiceModel.Channels
  summary: "\n<p>Gets the URI scheme for the transport.</p>\n"
  syntax:
    content: public abstract string Scheme { get; }
    content.vb: Public MustOverride ReadOnly Property Scheme As String
    parameters: []
    return:
      type: System.String
      description: "\n<p>Returns the URI scheme for the transport, which varies depending on what derived class implements this method.</p>\n"
  modifiers.csharp:
  - public
  - abstract
  - get
  modifiers.vb:
  - Public
  - MustOverride
  - ReadOnly
  nameWithType: TransportBindingElement.Scheme
- uid: System.ServiceModel.Channels.TransportBindingElement.GetProperty``1(System.ServiceModel.Channels.BindingContext)
  commentId: M:System.ServiceModel.Channels.TransportBindingElement.GetProperty``1(System.ServiceModel.Channels.BindingContext)
  id: GetProperty``1(System.ServiceModel.Channels.BindingContext)
  parent: System.ServiceModel.Channels.TransportBindingElement
  langs:
  - csharp
  - vb
  name: GetProperty<T>(BindingContext)
  fullName: System.ServiceModel.Channels.TransportBindingElement.GetProperty<T>(System.ServiceModel.Channels.BindingContext)
  type: Method
  source:
    remote:
      path: src/System.Private.ServiceModel/src/System/ServiceModel/Channels/TransportBindingElement.cs
      branch: master
      repo: https://github.com/dotnet/wcf.git
    id: GetProperty
    path: src/System.Private.ServiceModel/src/System/ServiceModel/Channels/TransportBindingElement.cs
    startLine: 93
  assemblies:
  - System.ServiceModel.Primitives
  namespace: System.ServiceModel.Channels
  summary: "\n<p>Gets a property from the specified <xref href=\"System.ServiceModel.Channels.BindingContext\" data-throw-if-not-resolved=\"false\"></xref>.</p>\n"
  syntax:
    content: 'public override T GetProperty<T>(BindingContext context)where T : class'
    content.vb: Public Overrides Function GetProperty(Of T As Class)(context As BindingContext) As T
    parameters:
    - id: context
      type: System.ServiceModel.Channels.BindingContext
      description: "\n<p>A <xref href=\"System.ServiceModel.Channels.BindingContext\" data-throw-if-not-resolved=\"false\"></xref>.</p>\n"
    typeParameters:
    - id: T
      description: "\n<p>The property to get.</p>\n"
    return:
      type: '{T}'
      description: "\n<p>The property from the specified <xref href=\"System.ServiceModel.Channels.BindingContext\" data-throw-if-not-resolved=\"false\"></xref>.</p>\n"
  overridden: System.ServiceModel.Channels.BindingElement.GetProperty``1(System.ServiceModel.Channels.BindingContext)
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
  fullName.vb: System.ServiceModel.Channels.TransportBindingElement.GetProperty(Of T)(System.ServiceModel.Channels.BindingContext)
  name.vb: GetProperty(Of T)(BindingContext)
  nameWithType: TransportBindingElement.GetProperty<T>(BindingContext)
  nameWithType.vb: TransportBindingElement.GetProperty(Of T)(BindingContext)
references:
- uid: System.ServiceModel.Channels
  isExternal: false
  name: System.ServiceModel.Channels
  fullName: System.ServiceModel.Channels
  nameWithType: System.ServiceModel.Channels
  commentId: N:System.ServiceModel.Channels
- uid: System.Object
  parent: System
  isExternal: false
  name: Object
  fullName: System.Object
  nameWithType: Object
  commentId: T:System.Object
- uid: System.ServiceModel.Channels.BindingElement
  parent: System.ServiceModel.Channels
  isExternal: false
  name: BindingElement
  fullName: System.ServiceModel.Channels.BindingElement
  nameWithType: BindingElement
  commentId: T:System.ServiceModel.Channels.BindingElement
- uid: System.ServiceModel.Channels.BindingElement.BuildChannelFactory``1(System.ServiceModel.Channels.BindingContext)
  parent: System.ServiceModel.Channels.BindingElement
  isExternal: false
  name: BuildChannelFactory<TChannel>(BindingContext)
  fullName: System.ServiceModel.Channels.BindingElement.BuildChannelFactory<TChannel>(System.ServiceModel.Channels.BindingContext)
  fullname.vb: System.ServiceModel.Channels.BindingElement.BuildChannelFactory(Of TChannel)(System.ServiceModel.Channels.BindingContext)
  name.vb: BuildChannelFactory(Of TChannel)(BindingContext)
  spec.csharp:
  - uid: System.ServiceModel.Channels.BindingElement.BuildChannelFactory``1(System.ServiceModel.Channels.BindingContext)
    name: BuildChannelFactory<TChannel>
    fullName: System.ServiceModel.Channels.BindingElement.BuildChannelFactory<TChannel>
  - name: (
    fullName: (
  - uid: System.ServiceModel.Channels.BindingContext
    name: BindingContext
    fullName: System.ServiceModel.Channels.BindingContext
  - name: )
    fullName: )
  spec.vb:
  - uid: System.ServiceModel.Channels.BindingElement.BuildChannelFactory``1(System.ServiceModel.Channels.BindingContext)
    name: BuildChannelFactory(Of TChannel)
    fullName: System.ServiceModel.Channels.BindingElement.BuildChannelFactory(Of TChannel)
  - name: (
    fullName: (
  - uid: System.ServiceModel.Channels.BindingContext
    name: BindingContext
    fullName: System.ServiceModel.Channels.BindingContext
  - name: )
    fullName: )
  nameWithType: BindingElement.BuildChannelFactory<TChannel>(BindingContext)
  nameWithType.vb: BindingElement.BuildChannelFactory(Of TChannel)(BindingContext)
  commentId: M:System.ServiceModel.Channels.BindingElement.BuildChannelFactory``1(System.ServiceModel.Channels.BindingContext)
- uid: System.ServiceModel.Channels.BindingElement.CanBuildChannelFactory``1(System.ServiceModel.Channels.BindingContext)
  parent: System.ServiceModel.Channels.BindingElement
  isExternal: false
  name: CanBuildChannelFactory<TChannel>(BindingContext)
  fullName: System.ServiceModel.Channels.BindingElement.CanBuildChannelFactory<TChannel>(System.ServiceModel.Channels.BindingContext)
  fullname.vb: System.ServiceModel.Channels.BindingElement.CanBuildChannelFactory(Of TChannel)(System.ServiceModel.Channels.BindingContext)
  name.vb: CanBuildChannelFactory(Of TChannel)(BindingContext)
  spec.csharp:
  - uid: System.ServiceModel.Channels.BindingElement.CanBuildChannelFactory``1(System.ServiceModel.Channels.BindingContext)
    name: CanBuildChannelFactory<TChannel>
    fullName: System.ServiceModel.Channels.BindingElement.CanBuildChannelFactory<TChannel>
  - name: (
    fullName: (
  - uid: System.ServiceModel.Channels.BindingContext
    name: BindingContext
    fullName: System.ServiceModel.Channels.BindingContext
  - name: )
    fullName: )
  spec.vb:
  - uid: System.ServiceModel.Channels.BindingElement.CanBuildChannelFactory``1(System.ServiceModel.Channels.BindingContext)
    name: CanBuildChannelFactory(Of TChannel)
    fullName: System.ServiceModel.Channels.BindingElement.CanBuildChannelFactory(Of TChannel)
  - name: (
    fullName: (
  - uid: System.ServiceModel.Channels.BindingContext
    name: BindingContext
    fullName: System.ServiceModel.Channels.BindingContext
  - name: )
    fullName: )
  nameWithType: BindingElement.CanBuildChannelFactory<TChannel>(BindingContext)
  nameWithType.vb: BindingElement.CanBuildChannelFactory(Of TChannel)(BindingContext)
  commentId: M:System.ServiceModel.Channels.BindingElement.CanBuildChannelFactory``1(System.ServiceModel.Channels.BindingContext)
- uid: System.ServiceModel.Channels.BindingElement.Clone
  parent: System.ServiceModel.Channels.BindingElement
  isExternal: false
  name: Clone()
  fullName: System.ServiceModel.Channels.BindingElement.Clone()
  spec.csharp:
  - uid: System.ServiceModel.Channels.BindingElement.Clone
    name: Clone
    fullName: System.ServiceModel.Channels.BindingElement.Clone
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.ServiceModel.Channels.BindingElement.Clone
    name: Clone
    fullName: System.ServiceModel.Channels.BindingElement.Clone
  - name: (
    fullName: (
  - name: )
    fullName: )
  nameWithType: BindingElement.Clone()
  commentId: M:System.ServiceModel.Channels.BindingElement.Clone
- uid: System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  nameWithType: Object.ToString()
  commentId: M:System.Object.ToString
- uid: System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
  nameWithType: Object.Equals(Object)
  commentId: M:System.Object.Equals(System.Object)
- uid: System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
  nameWithType: Object.Equals(Object, Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
  nameWithType: Object.ReferenceEquals(Object, Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
- uid: System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  nameWithType: Object.GetHashCode()
  commentId: M:System.Object.GetHashCode
- uid: System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  nameWithType: Object.GetType()
  commentId: M:System.Object.GetType
- uid: System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  nameWithType: Object.MemberwiseClone()
  commentId: M:System.Object.MemberwiseClone
- uid: System
  isExternal: false
  name: System
  fullName: System
  nameWithType: System
  commentId: N:System
- uid: System.ServiceModel.Channels.TransportBindingElement
  parent: System.ServiceModel.Channels
  isExternal: false
  name: TransportBindingElement
  fullName: System.ServiceModel.Channels.TransportBindingElement
  nameWithType: TransportBindingElement
  commentId: T:System.ServiceModel.Channels.TransportBindingElement
- uid: System.Boolean
  parent: System
  isExternal: false
  name: Boolean
  fullName: System.Boolean
  nameWithType: Boolean
  commentId: T:System.Boolean
- uid: System.Int64
  parent: System
  isExternal: false
  name: Int64
  fullName: System.Int64
  nameWithType: Int64
  commentId: T:System.Int64
- uid: System.String
  parent: System
  isExternal: false
  name: String
  fullName: System.String
  nameWithType: String
  commentId: T:System.String
- uid: System.ServiceModel.Channels.BindingElement.GetProperty``1(System.ServiceModel.Channels.BindingContext)
  parent: System.ServiceModel.Channels.BindingElement
  isExternal: false
  name: GetProperty<T>(BindingContext)
  fullName: System.ServiceModel.Channels.BindingElement.GetProperty<T>(System.ServiceModel.Channels.BindingContext)
  fullname.vb: System.ServiceModel.Channels.BindingElement.GetProperty(Of T)(System.ServiceModel.Channels.BindingContext)
  name.vb: GetProperty(Of T)(BindingContext)
  spec.csharp:
  - uid: System.ServiceModel.Channels.BindingElement.GetProperty``1(System.ServiceModel.Channels.BindingContext)
    name: GetProperty<T>
    fullName: System.ServiceModel.Channels.BindingElement.GetProperty<T>
  - name: (
    fullName: (
  - uid: System.ServiceModel.Channels.BindingContext
    name: BindingContext
    fullName: System.ServiceModel.Channels.BindingContext
  - name: )
    fullName: )
  spec.vb:
  - uid: System.ServiceModel.Channels.BindingElement.GetProperty``1(System.ServiceModel.Channels.BindingContext)
    name: GetProperty(Of T)
    fullName: System.ServiceModel.Channels.BindingElement.GetProperty(Of T)
  - name: (
    fullName: (
  - uid: System.ServiceModel.Channels.BindingContext
    name: BindingContext
    fullName: System.ServiceModel.Channels.BindingContext
  - name: )
    fullName: )
  nameWithType: BindingElement.GetProperty<T>(BindingContext)
  nameWithType.vb: BindingElement.GetProperty(Of T)(BindingContext)
  commentId: M:System.ServiceModel.Channels.BindingElement.GetProperty``1(System.ServiceModel.Channels.BindingContext)
- uid: System.ServiceModel.Channels.BindingContext
  parent: System.ServiceModel.Channels
  isExternal: false
  name: BindingContext
  fullName: System.ServiceModel.Channels.BindingContext
  nameWithType: BindingContext
  commentId: T:System.ServiceModel.Channels.BindingContext
- uid: '{T}'
  definition: T
  name: T
  fullName: T
  nameWithType: T
  commentId: '!:T'
- uid: T
  isExternal: false
  name: T
  fullName: T
  nameWithType: T
