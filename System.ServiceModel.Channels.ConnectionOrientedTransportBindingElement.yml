items:
- uid: System.ServiceModel.Channels.ConnectionOrientedTransportBindingElement
  commentId: T:System.ServiceModel.Channels.ConnectionOrientedTransportBindingElement
  id: ConnectionOrientedTransportBindingElement
  parent: System.ServiceModel.Channels
  children:
  - System.ServiceModel.Channels.ConnectionOrientedTransportBindingElement.CanBuildChannelFactory``1(System.ServiceModel.Channels.BindingContext)
  - System.ServiceModel.Channels.ConnectionOrientedTransportBindingElement.ConnectionBufferSize
  - System.ServiceModel.Channels.ConnectionOrientedTransportBindingElement.GetProperty``1(System.ServiceModel.Channels.BindingContext)
  - System.ServiceModel.Channels.ConnectionOrientedTransportBindingElement.MaxBufferSize
  - System.ServiceModel.Channels.ConnectionOrientedTransportBindingElement.TransferMode
  langs:
  - csharp
  - vb
  name: ConnectionOrientedTransportBindingElement
  fullName: System.ServiceModel.Channels.ConnectionOrientedTransportBindingElement
  type: Class
  source:
    remote:
      path: src/System.Private.ServiceModel/src/System/ServiceModel/Channels/ConnectionOrientedTransportBindingElement.cs
      branch: master
      repo: https://github.com/dotnet/wcf.git
    id: ConnectionOrientedTransportBindingElement
    path: src/System.Private.ServiceModel/src/System/ServiceModel/Channels/ConnectionOrientedTransportBindingElement.cs
    startLine: 9
  assemblies:
  - System.ServiceModel.NetTcp
  namespace: System.ServiceModel.Channels
  summary: "\n<p>An abstract class that supplements the base <xref href=\"System.ServiceModel.Channels.TransportBindingElement\" data-throw-if-not-resolved=\"false\"></xref> with additional properties that are common to connection-oriented transports such as TCP and named pipes.  </p>\n"
  syntax:
    content: 'public abstract class ConnectionOrientedTransportBindingElement : TransportBindingElement'
    content.vb: >-
      Public MustInherit Class ConnectionOrientedTransportBindingElement
          Inherits TransportBindingElement
  inheritance:
  - System.Object
  modifiers.csharp:
  - public
  - abstract
  - class
  modifiers.vb:
  - Public
  - MustInherit
  - Class
  nameWithType: ConnectionOrientedTransportBindingElement
- uid: System.ServiceModel.Channels.ConnectionOrientedTransportBindingElement.ConnectionBufferSize
  commentId: P:System.ServiceModel.Channels.ConnectionOrientedTransportBindingElement.ConnectionBufferSize
  id: ConnectionBufferSize
  parent: System.ServiceModel.Channels.ConnectionOrientedTransportBindingElement
  langs:
  - csharp
  - vb
  name: ConnectionBufferSize
  fullName: System.ServiceModel.Channels.ConnectionOrientedTransportBindingElement.ConnectionBufferSize
  type: Property
  source:
    remote:
      path: src/System.Private.ServiceModel/src/System/ServiceModel/Channels/ConnectionOrientedTransportBindingElement.cs
      branch: master
      repo: https://github.com/dotnet/wcf.git
    id: ConnectionBufferSize
    path: src/System.Private.ServiceModel/src/System/ServiceModel/Channels/ConnectionOrientedTransportBindingElement.cs
    startLine: 41
  assemblies:
  - System.ServiceModel.NetTcp
  namespace: System.ServiceModel.Channels
  summary: "\n<p>Gets or sets the size of the buffer used to transmit a chunk of the serialized message on the wire from the client or service.</p>\n"
  syntax:
    content: public int ConnectionBufferSize { get; set; }
    content.vb: Public Property ConnectionBufferSize As Integer
    parameters: []
    return:
      type: System.Int32
      description: "\n<p>The size of the connection buffer. The default value is 8192 bytes.</p>\n"
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "\n<p>The value is less than zero.</p>\n"
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
  nameWithType: ConnectionOrientedTransportBindingElement.ConnectionBufferSize
- uid: System.ServiceModel.Channels.ConnectionOrientedTransportBindingElement.MaxBufferSize
  commentId: P:System.ServiceModel.Channels.ConnectionOrientedTransportBindingElement.MaxBufferSize
  id: MaxBufferSize
  parent: System.ServiceModel.Channels.ConnectionOrientedTransportBindingElement
  langs:
  - csharp
  - vb
  name: MaxBufferSize
  fullName: System.ServiceModel.Channels.ConnectionOrientedTransportBindingElement.MaxBufferSize
  type: Property
  source:
    remote:
      path: src/System.Private.ServiceModel/src/System/ServiceModel/Channels/ConnectionOrientedTransportBindingElement.cs
      branch: master
      repo: https://github.com/dotnet/wcf.git
    id: MaxBufferSize
    path: src/System.Private.ServiceModel/src/System/ServiceModel/Channels/ConnectionOrientedTransportBindingElement.cs
    startLine: 74
  assemblies:
  - System.ServiceModel.NetTcp
  namespace: System.ServiceModel.Channels
  summary: "\n<p>Gets or sets the maximum size of the buffer to use. For streamed messages, this value should be at least the maximum possible size of the message headers, which are read in buffered mode.</p>\n"
  syntax:
    content: public int MaxBufferSize { get; set; }
    content.vb: Public Property MaxBufferSize As Integer
    parameters: []
    return:
      type: System.Int32
      description: "\n<p>The maximum number of bytes that are used to buffer incoming messages in memory. The default value is 65,536 bytes.</p>\n"
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "\n<p>The value is less than or equal to zero.</p>\n"
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
  nameWithType: ConnectionOrientedTransportBindingElement.MaxBufferSize
- uid: System.ServiceModel.Channels.ConnectionOrientedTransportBindingElement.TransferMode
  commentId: P:System.ServiceModel.Channels.ConnectionOrientedTransportBindingElement.TransferMode
  id: TransferMode
  parent: System.ServiceModel.Channels.ConnectionOrientedTransportBindingElement
  langs:
  - csharp
  - vb
  name: TransferMode
  fullName: System.ServiceModel.Channels.ConnectionOrientedTransportBindingElement.TransferMode
  type: Property
  source:
    remote:
      path: src/System.Private.ServiceModel/src/System/ServiceModel/Channels/ConnectionOrientedTransportBindingElement.cs
      branch: master
      repo: https://github.com/dotnet/wcf.git
    id: TransferMode
    path: src/System.Private.ServiceModel/src/System/ServiceModel/Channels/ConnectionOrientedTransportBindingElement.cs
    startLine: 115
  assemblies:
  - System.ServiceModel.NetTcp
  namespace: System.ServiceModel.Channels
  summary: "\n<p>Gets or sets a value that indicates whether the messages are buffered or streamed with the connection-oriented transport.</p>\n"
  syntax:
    content: public TransferMode TransferMode { get; set; }
    content.vb: Public Property TransferMode As TransferMode
    parameters: []
    return:
      type: System.ServiceModel.TransferMode
      description: "\n<p>A <xref href=\"System.ServiceModel.TransferMode\" data-throw-if-not-resolved=\"false\"></xref> value which indicates whether a channel uses streamed or buffered modes of message transfer. The default is <xref href=\"System.ServiceModel.TransferMode.Buffered\" data-throw-if-not-resolved=\"false\"></xref>.</p>\n"
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "\n<p>The value is not a valid <xref href=\"System.ServiceModel.TransferMode\" data-throw-if-not-resolved=\"false\"></xref>.</p>\n"
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
  nameWithType: ConnectionOrientedTransportBindingElement.TransferMode
- uid: System.ServiceModel.Channels.ConnectionOrientedTransportBindingElement.CanBuildChannelFactory``1(System.ServiceModel.Channels.BindingContext)
  commentId: M:System.ServiceModel.Channels.ConnectionOrientedTransportBindingElement.CanBuildChannelFactory``1(System.ServiceModel.Channels.BindingContext)
  id: CanBuildChannelFactory``1(System.ServiceModel.Channels.BindingContext)
  parent: System.ServiceModel.Channels.ConnectionOrientedTransportBindingElement
  langs:
  - csharp
  - vb
  name: CanBuildChannelFactory<TChannel>(BindingContext)
  fullName: System.ServiceModel.Channels.ConnectionOrientedTransportBindingElement.CanBuildChannelFactory<TChannel>(System.ServiceModel.Channels.BindingContext)
  type: Method
  source:
    remote:
      path: src/System.Private.ServiceModel/src/System/ServiceModel/Channels/ConnectionOrientedTransportBindingElement.cs
      branch: master
      repo: https://github.com/dotnet/wcf.git
    id: CanBuildChannelFactory
    path: src/System.Private.ServiceModel/src/System/ServiceModel/Channels/ConnectionOrientedTransportBindingElement.cs
    startLine: 129
  assemblies:
  - System.ServiceModel.NetTcp
  namespace: System.ServiceModel.Channels
  summary: "\n<p>Determines whether a channel factory of the specified type can be built.</p>\n"
  syntax:
    content: public override bool CanBuildChannelFactory<TChannel>(BindingContext context)
    content.vb: Public Overrides Function CanBuildChannelFactory(Of TChannel)(context As BindingContext) As Boolean
    parameters:
    - id: context
      type: System.ServiceModel.Channels.BindingContext
      description: "\n<p>The <xref href=\"System.ServiceModel.Channels.BindingContext\" data-throw-if-not-resolved=\"false\"></xref> for the channel.</p>\n"
    typeParameters:
    - id: TChannel
      description: "\n<p>The type of channel to check.</p>\n"
    return:
      type: System.Boolean
      description: "\n<p>\n<strong>true</strong> if a channel factory can be built; otherwise <strong>false</strong>.</p>\n"
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "\n<p>\n<em>context</em> is <strong>null</strong>.</p>\n"
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
  fullName.vb: System.ServiceModel.Channels.ConnectionOrientedTransportBindingElement.CanBuildChannelFactory(Of TChannel)(System.ServiceModel.Channels.BindingContext)
  name.vb: CanBuildChannelFactory(Of TChannel)(BindingContext)
  nameWithType: ConnectionOrientedTransportBindingElement.CanBuildChannelFactory<TChannel>(BindingContext)
  nameWithType.vb: ConnectionOrientedTransportBindingElement.CanBuildChannelFactory(Of TChannel)(BindingContext)
- uid: System.ServiceModel.Channels.ConnectionOrientedTransportBindingElement.GetProperty``1(System.ServiceModel.Channels.BindingContext)
  commentId: M:System.ServiceModel.Channels.ConnectionOrientedTransportBindingElement.GetProperty``1(System.ServiceModel.Channels.BindingContext)
  id: GetProperty``1(System.ServiceModel.Channels.BindingContext)
  parent: System.ServiceModel.Channels.ConnectionOrientedTransportBindingElement
  langs:
  - csharp
  - vb
  name: GetProperty<T>(BindingContext)
  fullName: System.ServiceModel.Channels.ConnectionOrientedTransportBindingElement.GetProperty<T>(System.ServiceModel.Channels.BindingContext)
  type: Method
  source:
    remote:
      path: src/System.Private.ServiceModel/src/System/ServiceModel/Channels/ConnectionOrientedTransportBindingElement.cs
      branch: master
      repo: https://github.com/dotnet/wcf.git
    id: GetProperty
    path: src/System.Private.ServiceModel/src/System/ServiceModel/Channels/ConnectionOrientedTransportBindingElement.cs
    startLine: 146
  assemblies:
  - System.ServiceModel.NetTcp
  namespace: System.ServiceModel.Channels
  summary: "\n<p>Gets properties from the binding stack, if present.</p>\n"
  syntax:
    content: 'public override T GetProperty<T>(BindingContext context)where T : class'
    content.vb: Public Overrides Function GetProperty(Of T As Class)(context As BindingContext) As T
    parameters:
    - id: context
      type: System.ServiceModel.Channels.BindingContext
      description: "\n<p>The binding context.</p>\n"
    typeParameters:
    - id: T
      description: "\n<p>Type of the property.</p>\n"
    return:
      type: '{T}'
      description: "\n<p>A <em>T</em> object from the binding stack, if present.</p>\n"
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
  fullName.vb: System.ServiceModel.Channels.ConnectionOrientedTransportBindingElement.GetProperty(Of T)(System.ServiceModel.Channels.BindingContext)
  name.vb: GetProperty(Of T)(BindingContext)
  nameWithType: ConnectionOrientedTransportBindingElement.GetProperty<T>(BindingContext)
  nameWithType.vb: ConnectionOrientedTransportBindingElement.GetProperty(Of T)(BindingContext)
references:
- uid: System.ServiceModel.Channels
  isExternal: false
  name: System.ServiceModel.Channels
  fullName: System.ServiceModel.Channels
  nameWithType: System.ServiceModel.Channels
  commentId: N:System.ServiceModel.Channels
- uid: System.Object
  parent: System
  isExternal: false
  name: Object
  fullName: System.Object
  nameWithType: Object
  commentId: T:System.Object
- uid: System
  isExternal: false
  name: System
  fullName: System
  nameWithType: System
  commentId: N:System
- uid: System.Int32
  parent: System
  isExternal: false
  name: Int32
  fullName: System.Int32
  nameWithType: Int32
  commentId: T:System.Int32
- uid: System.ServiceModel.TransferMode
  parent: System.ServiceModel
  isExternal: false
  name: TransferMode
  fullName: System.ServiceModel.TransferMode
  nameWithType: TransferMode
  commentId: T:System.ServiceModel.TransferMode
- uid: System.ServiceModel
  isExternal: false
  name: System.ServiceModel
  fullName: System.ServiceModel
  nameWithType: System.ServiceModel
  commentId: N:System.ServiceModel
- uid: System.ServiceModel.Channels.BindingContext
  parent: System.ServiceModel.Channels
  isExternal: false
  name: BindingContext
  fullName: System.ServiceModel.Channels.BindingContext
  nameWithType: BindingContext
  commentId: T:System.ServiceModel.Channels.BindingContext
- uid: System.Boolean
  parent: System
  isExternal: false
  name: Boolean
  fullName: System.Boolean
  nameWithType: Boolean
  commentId: T:System.Boolean
- uid: '{T}'
  definition: T
  name: T
  fullName: T
  nameWithType: T
  commentId: '!:T'
- uid: T
  isExternal: false
  name: T
  fullName: T
  nameWithType: T
- uid: System.ArgumentOutOfRangeException
  isExternal: false
  name: ArgumentOutOfRangeException
  fullName: System.ArgumentOutOfRangeException
  nameWithType: ArgumentOutOfRangeException
  commentId: T:System.ArgumentOutOfRangeException
- uid: System.ArgumentNullException
  isExternal: false
  name: ArgumentNullException
  fullName: System.ArgumentNullException
  nameWithType: ArgumentNullException
  commentId: T:System.ArgumentNullException
