### YamlMime:ManagedReference
items:
- uid: System.Xml.Serialization.XmlSerializer
  commentId: T:System.Xml.Serialization.XmlSerializer
  id: XmlSerializer
  parent: System.Xml.Serialization
  children:
  - System.Xml.Serialization.XmlSerializer.#ctor
  - System.Xml.Serialization.XmlSerializer.#ctor(System.Type)
  - System.Xml.Serialization.XmlSerializer.#ctor(System.Type,System.String)
  - System.Xml.Serialization.XmlSerializer.#ctor(System.Type,System.Type[])
  - System.Xml.Serialization.XmlSerializer.#ctor(System.Type,System.Xml.Serialization.XmlAttributeOverrides)
  - System.Xml.Serialization.XmlSerializer.#ctor(System.Type,System.Xml.Serialization.XmlAttributeOverrides,System.Type[],System.Xml.Serialization.XmlRootAttribute,System.String)
  - System.Xml.Serialization.XmlSerializer.#ctor(System.Type,System.Xml.Serialization.XmlRootAttribute)
  - System.Xml.Serialization.XmlSerializer.CanDeserialize(System.Xml.XmlReader)
  - System.Xml.Serialization.XmlSerializer.Deserialize(System.IO.Stream)
  - System.Xml.Serialization.XmlSerializer.Deserialize(System.IO.TextReader)
  - System.Xml.Serialization.XmlSerializer.Deserialize(System.Xml.XmlReader)
  - System.Xml.Serialization.XmlSerializer.FromTypes(System.Type[])
  - System.Xml.Serialization.XmlSerializer.Serialize(System.IO.Stream,System.Object)
  - System.Xml.Serialization.XmlSerializer.Serialize(System.IO.Stream,System.Object,System.Xml.Serialization.XmlSerializerNamespaces)
  - System.Xml.Serialization.XmlSerializer.Serialize(System.IO.TextWriter,System.Object)
  - System.Xml.Serialization.XmlSerializer.Serialize(System.IO.TextWriter,System.Object,System.Xml.Serialization.XmlSerializerNamespaces)
  - System.Xml.Serialization.XmlSerializer.Serialize(System.Xml.XmlWriter,System.Object)
  - System.Xml.Serialization.XmlSerializer.Serialize(System.Xml.XmlWriter,System.Object,System.Xml.Serialization.XmlSerializerNamespaces)
  langs:
  - csharp
  - vb
  name: XmlSerializer
  nameWithType: XmlSerializer
  fullName: System.Xml.Serialization.XmlSerializer
  type: Class
  source:
    remote:
      path: src/System.Xml.XmlSerializer/src/System/Xml/Serialization/XmlSerializer.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: XmlSerializer
    path: src/System.Xml.XmlSerializer/src/System/Xml/Serialization/XmlSerializer.cs
    startLine: 51
  assemblies:
  - System.Xml.XmlSerializer
  namespace: System.Xml.Serialization
  summary: "\n<p>Serializes and deserializes objects into and from XML documents. The <xref href=\"System.Xml.Serialization.XmlSerializer\" data-throw-if-not-resolved=\"false\"></xref> enables you to control how objects are encoded into XML.</p>\n"
  syntax:
    content: public class XmlSerializer
    content.vb: Public Class XmlSerializer
  seealso:
  - linkId: System.Xml.Serialization.XmlAttributeOverrides
    commentId: T:System.Xml.Serialization.XmlAttributeOverrides
  - linkId: System.Xml.Serialization.XmlAttributes
    commentId: T:System.Xml.Serialization.XmlAttributes
  - linkId: System.Xml.Serialization.XmlSerializer
    commentId: T:System.Xml.Serialization.XmlSerializer
  - linkId: System.Xml.Serialization.XmlAttributes.XmlText
    commentId: P:System.Xml.Serialization.XmlAttributes.XmlText
  - linkId: System.Xml.Serialization.XmlAttributes
    commentId: T:System.Xml.Serialization.XmlAttributes
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: System.Xml.Serialization.XmlSerializer.#ctor
  commentId: M:System.Xml.Serialization.XmlSerializer.#ctor
  id: '#ctor'
  parent: System.Xml.Serialization.XmlSerializer
  langs:
  - csharp
  - vb
  name: XmlSerializer()
  nameWithType: XmlSerializer.XmlSerializer()
  fullName: System.Xml.Serialization.XmlSerializer.XmlSerializer()
  type: Constructor
  source:
    remote:
      path: src/System.Xml.XmlSerializer/src/System/Xml/Serialization/XmlSerializer.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: .ctor
    path: src/System.Xml.XmlSerializer/src/System/Xml/Serialization/XmlSerializer.cs
    startLine: 88
  assemblies:
  - System.Xml.XmlSerializer
  namespace: System.Xml.Serialization
  summary: "\n<p>Initializes a new instance of the <xref href=\"System.Xml.Serialization.XmlSerializer\" data-throw-if-not-resolved=\"false\"></xref> class.</p>\n"
  syntax:
    content: protected XmlSerializer()
    content.vb: Protected Sub New
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: System.Xml.Serialization.XmlSerializer.#ctor(System.Type)
  commentId: M:System.Xml.Serialization.XmlSerializer.#ctor(System.Type)
  id: '#ctor(System.Type)'
  parent: System.Xml.Serialization.XmlSerializer
  langs:
  - csharp
  - vb
  name: XmlSerializer(Type)
  nameWithType: XmlSerializer.XmlSerializer(Type)
  fullName: System.Xml.Serialization.XmlSerializer.XmlSerializer(System.Type)
  type: Constructor
  source:
    remote:
      path: src/System.Xml.XmlSerializer/src/System/Xml/Serialization/XmlSerializer.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: .ctor
    path: src/System.Xml.XmlSerializer/src/System/Xml/Serialization/XmlSerializer.cs
    startLine: 143
  assemblies:
  - System.Xml.XmlSerializer
  namespace: System.Xml.Serialization
  summary: "\n<p>Initializes a new instance of the <xref href=\"System.Xml.Serialization.XmlSerializer\" data-throw-if-not-resolved=\"false\"></xref> class that can serialize objects of the specified type into XML documents, and deserialize XML documents into objects of the specified type.</p>\n"
  syntax:
    content: public XmlSerializer(Type type)
    content.vb: Public Sub New(type As Type)
    parameters:
    - id: type
      type: System.Type
      description: "\n<p>The type of the object that this <xref href=\"System.Xml.Serialization.XmlSerializer\" data-throw-if-not-resolved=\"false\"></xref> can serialize. </p>\n"
  seealso:
  - linkId: System.Xml.Serialization.XmlSerializer.Serialize(System.IO.TextWriter,System.Object)
    commentId: M:System.Xml.Serialization.XmlSerializer.Serialize(System.IO.TextWriter,System.Object)
  - linkId: System.Xml.Serialization.XmlSerializer.Deserialize(System.IO.Stream)
    commentId: M:System.Xml.Serialization.XmlSerializer.Deserialize(System.IO.Stream)
  - linkId: System.Xml.Serialization.XmlAttributes
    commentId: T:System.Xml.Serialization.XmlAttributes
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: System.Xml.Serialization.XmlSerializer.#ctor(System.Type,System.String)
  commentId: M:System.Xml.Serialization.XmlSerializer.#ctor(System.Type,System.String)
  id: '#ctor(System.Type,System.String)'
  parent: System.Xml.Serialization.XmlSerializer
  langs:
  - csharp
  - vb
  name: XmlSerializer(Type, String)
  nameWithType: XmlSerializer.XmlSerializer(Type, String)
  fullName: System.Xml.Serialization.XmlSerializer.XmlSerializer(System.Type, System.String)
  type: Constructor
  source:
    remote:
      path: src/System.Xml.XmlSerializer/src/System/Xml/Serialization/XmlSerializer.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: .ctor
    path: src/System.Xml.XmlSerializer/src/System/Xml/Serialization/XmlSerializer.cs
    startLine: 151
  assemblies:
  - System.Xml.XmlSerializer
  namespace: System.Xml.Serialization
  summary: "\n<p>Initializes a new instance of the <xref href=\"System.Xml.Serialization.XmlSerializer\" data-throw-if-not-resolved=\"false\"></xref> class that can serialize objects of the specified type into XML documents, and deserialize XML documents into objects of the specified type. Specifies the default namespace for all the XML elements.</p>\n"
  syntax:
    content: public XmlSerializer(Type type, string defaultNamespace)
    content.vb: Public Sub New(type As Type, defaultNamespace As String)
    parameters:
    - id: type
      type: System.Type
      description: "\n<p>The type of the object that this <xref href=\"System.Xml.Serialization.XmlSerializer\" data-throw-if-not-resolved=\"false\"></xref> can serialize. </p>\n"
    - id: defaultNamespace
      type: System.String
      description: "\n<p>The default namespace to use for all the XML elements. </p>\n"
  seealso:
  - linkId: System.Xml.Serialization.XmlAttributes
    commentId: T:System.Xml.Serialization.XmlAttributes
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: System.Xml.Serialization.XmlSerializer.#ctor(System.Type,System.Type[])
  commentId: M:System.Xml.Serialization.XmlSerializer.#ctor(System.Type,System.Type[])
  id: '#ctor(System.Type,System.Type[])'
  parent: System.Xml.Serialization.XmlSerializer
  langs:
  - csharp
  - vb
  name: XmlSerializer(Type, Type[])
  nameWithType: XmlSerializer.XmlSerializer(Type, Type[])
  fullName: System.Xml.Serialization.XmlSerializer.XmlSerializer(System.Type, System.Type[])
  type: Constructor
  source:
    remote:
      path: src/System.Xml.XmlSerializer/src/System/Xml/Serialization/XmlSerializer.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: .ctor
    path: src/System.Xml.XmlSerializer/src/System/Xml/Serialization/XmlSerializer.cs
    startLine: 114
  assemblies:
  - System.Xml.XmlSerializer
  namespace: System.Xml.Serialization
  summary: "\n<p>Initializes a new instance of the <xref href=\"System.Xml.Serialization.XmlSerializer\" data-throw-if-not-resolved=\"false\"></xref> class that can serialize objects of the specified type into XML documents, and deserialize XML documents into object of a specified type. If a property or field returns an array, the <em>extraTypes</em> parameter specifies objects that can be inserted into the array.</p>\n"
  syntax:
    content: public XmlSerializer(Type type, Type[] extraTypes)
    content.vb: Public Sub New(type As Type, extraTypes As Type())
    parameters:
    - id: type
      type: System.Type
      description: "\n<p>The type of the object that this <xref href=\"System.Xml.Serialization.XmlSerializer\" data-throw-if-not-resolved=\"false\"></xref> can serialize. </p>\n"
    - id: extraTypes
      type: System.Type[]
      description: "\n<p>A <xref href=\"System.Type\" data-throw-if-not-resolved=\"false\"></xref> array of additional object types to serialize. </p>\n"
  seealso:
  - linkId: System.Xml.Serialization.XmlAttributes
    commentId: T:System.Xml.Serialization.XmlAttributes
  nameWithType.vb: XmlSerializer.XmlSerializer(Type, Type())
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: System.Xml.Serialization.XmlSerializer.XmlSerializer(System.Type, System.Type())
  name.vb: XmlSerializer(Type, Type())
- uid: System.Xml.Serialization.XmlSerializer.#ctor(System.Type,System.Xml.Serialization.XmlAttributeOverrides)
  commentId: M:System.Xml.Serialization.XmlSerializer.#ctor(System.Type,System.Xml.Serialization.XmlAttributeOverrides)
  id: '#ctor(System.Type,System.Xml.Serialization.XmlAttributeOverrides)'
  parent: System.Xml.Serialization.XmlSerializer
  langs:
  - csharp
  - vb
  name: XmlSerializer(Type, XmlAttributeOverrides)
  nameWithType: XmlSerializer.XmlSerializer(Type, XmlAttributeOverrides)
  fullName: System.Xml.Serialization.XmlSerializer.XmlSerializer(System.Type, System.Xml.Serialization.XmlAttributeOverrides)
  type: Constructor
  source:
    remote:
      path: src/System.Xml.XmlSerializer/src/System/Xml/Serialization/XmlSerializer.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: .ctor
    path: src/System.Xml.XmlSerializer/src/System/Xml/Serialization/XmlSerializer.cs
    startLine: 125
  assemblies:
  - System.Xml.XmlSerializer
  namespace: System.Xml.Serialization
  summary: "\n<p>Initializes a new instance of the <xref href=\"System.Xml.Serialization.XmlSerializer\" data-throw-if-not-resolved=\"false\"></xref> class that can serialize objects of the specified type into XML documents, and deserialize XML documents into objects of the specified type. Each object to be serialized can itself contain instances of classes, which this overload can override with other classes.</p>\n"
  syntax:
    content: public XmlSerializer(Type type, XmlAttributeOverrides overrides)
    content.vb: Public Sub New(type As Type, overrides As XmlAttributeOverrides)
    parameters:
    - id: type
      type: System.Type
      description: "\n<p>The type of the object to serialize. </p>\n"
    - id: overrides
      type: System.Xml.Serialization.XmlAttributeOverrides
      description: "\n<p>An <xref href=\"System.Xml.Serialization.XmlAttributeOverrides\" data-throw-if-not-resolved=\"false\"></xref>. </p>\n"
  seealso:
  - linkId: System.Xml.Serialization.XmlAttributeOverrides
    commentId: T:System.Xml.Serialization.XmlAttributeOverrides
  - linkId: System.Xml.Serialization.XmlAttributes
    commentId: T:System.Xml.Serialization.XmlAttributes
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: System.Xml.Serialization.XmlSerializer.#ctor(System.Type,System.Xml.Serialization.XmlAttributeOverrides,System.Type[],System.Xml.Serialization.XmlRootAttribute,System.String)
  commentId: M:System.Xml.Serialization.XmlSerializer.#ctor(System.Type,System.Xml.Serialization.XmlAttributeOverrides,System.Type[],System.Xml.Serialization.XmlRootAttribute,System.String)
  id: '#ctor(System.Type,System.Xml.Serialization.XmlAttributeOverrides,System.Type[],System.Xml.Serialization.XmlRootAttribute,System.String)'
  parent: System.Xml.Serialization.XmlSerializer
  langs:
  - csharp
  - vb
  name: XmlSerializer(Type, XmlAttributeOverrides, Type[], XmlRootAttribute, String)
  nameWithType: XmlSerializer.XmlSerializer(Type, XmlAttributeOverrides, Type[], XmlRootAttribute, String)
  fullName: System.Xml.Serialization.XmlSerializer.XmlSerializer(System.Type, System.Xml.Serialization.XmlAttributeOverrides, System.Type[], System.Xml.Serialization.XmlRootAttribute, System.String)
  type: Constructor
  source:
    remote:
      path: src/System.Xml.XmlSerializer/src/System/Xml/Serialization/XmlSerializer.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: .ctor
    path: src/System.Xml.XmlSerializer/src/System/Xml/Serialization/XmlSerializer.cs
    startLine: 96
  assemblies:
  - System.Xml.XmlSerializer
  namespace: System.Xml.Serialization
  summary: "\n<p>Initializes a new instance of the <xref href=\"System.Xml.Serialization.XmlSerializer\" data-throw-if-not-resolved=\"false\"></xref> class that can serialize objects of type <xref href=\"System.Object\" data-throw-if-not-resolved=\"false\"></xref> into XML document instances, and deserialize XML document instances into objects of type <xref href=\"System.Object\" data-throw-if-not-resolved=\"false\"></xref>. Each object to be serialized can itself contain instances of classes, which this overload overrides with other classes. This overload also specifies the default namespace for all the XML elements and the class to use as the XML root element.</p>\n"
  syntax:
    content: public XmlSerializer(Type type, XmlAttributeOverrides overrides, Type[] extraTypes, XmlRootAttribute root, string defaultNamespace)
    content.vb: Public Sub New(type As Type, overrides As XmlAttributeOverrides, extraTypes As Type(), root As XmlRootAttribute, defaultNamespace As String)
    parameters:
    - id: type
      type: System.Type
      description: "\n<p>The type of the object that this <xref href=\"System.Xml.Serialization.XmlSerializer\" data-throw-if-not-resolved=\"false\"></xref> can serialize. </p>\n"
    - id: overrides
      type: System.Xml.Serialization.XmlAttributeOverrides
      description: "\n<p>An <xref href=\"System.Xml.Serialization.XmlAttributeOverrides\" data-throw-if-not-resolved=\"false\"></xref> that extends or overrides the behavior of the class specified in the <em>type</em> parameter. </p>\n"
    - id: extraTypes
      type: System.Type[]
      description: "\n<p>A <xref href=\"System.Type\" data-throw-if-not-resolved=\"false\"></xref> array of additional object types to serialize. </p>\n"
    - id: root
      type: System.Xml.Serialization.XmlRootAttribute
      description: "\n<p>An <xref href=\"System.Xml.Serialization.XmlRootAttribute\" data-throw-if-not-resolved=\"false\"></xref> that defines the XML root element properties. </p>\n"
    - id: defaultNamespace
      type: System.String
      description: "\n<p>The default namespace of all XML elements in the XML document. </p>\n"
  seealso:
  - linkId: System.Xml.Serialization.XmlAttributeOverrides
    commentId: T:System.Xml.Serialization.XmlAttributeOverrides
  - linkId: System.Xml.Serialization.XmlRootAttribute
    commentId: T:System.Xml.Serialization.XmlRootAttribute
  - linkId: System.Xml.Serialization.XmlAttributes
    commentId: T:System.Xml.Serialization.XmlAttributes
  nameWithType.vb: XmlSerializer.XmlSerializer(Type, XmlAttributeOverrides, Type(), XmlRootAttribute, String)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: System.Xml.Serialization.XmlSerializer.XmlSerializer(System.Type, System.Xml.Serialization.XmlAttributeOverrides, System.Type(), System.Xml.Serialization.XmlRootAttribute, System.String)
  name.vb: XmlSerializer(Type, XmlAttributeOverrides, Type(), XmlRootAttribute, String)
- uid: System.Xml.Serialization.XmlSerializer.#ctor(System.Type,System.Xml.Serialization.XmlRootAttribute)
  commentId: M:System.Xml.Serialization.XmlSerializer.#ctor(System.Type,System.Xml.Serialization.XmlRootAttribute)
  id: '#ctor(System.Type,System.Xml.Serialization.XmlRootAttribute)'
  parent: System.Xml.Serialization.XmlSerializer
  langs:
  - csharp
  - vb
  name: XmlSerializer(Type, XmlRootAttribute)
  nameWithType: XmlSerializer.XmlSerializer(Type, XmlRootAttribute)
  fullName: System.Xml.Serialization.XmlSerializer.XmlSerializer(System.Type, System.Xml.Serialization.XmlRootAttribute)
  type: Constructor
  source:
    remote:
      path: src/System.Xml.XmlSerializer/src/System/Xml/Serialization/XmlSerializer.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: .ctor
    path: src/System.Xml.XmlSerializer/src/System/Xml/Serialization/XmlSerializer.cs
    startLine: 105
  assemblies:
  - System.Xml.XmlSerializer
  namespace: System.Xml.Serialization
  summary: "\n<p>Initializes a new instance of the <xref href=\"System.Xml.Serialization.XmlSerializer\" data-throw-if-not-resolved=\"false\"></xref> class that can serialize objects of the specified type into XML documents, and deserialize an XML document into object of the specified type. It also specifies the class to use as the XML root element.</p>\n"
  syntax:
    content: public XmlSerializer(Type type, XmlRootAttribute root)
    content.vb: Public Sub New(type As Type, root As XmlRootAttribute)
    parameters:
    - id: type
      type: System.Type
      description: "\n<p>The type of the object that this <xref href=\"System.Xml.Serialization.XmlSerializer\" data-throw-if-not-resolved=\"false\"></xref> can serialize. </p>\n"
    - id: root
      type: System.Xml.Serialization.XmlRootAttribute
      description: "\n<p>An <xref href=\"System.Xml.Serialization.XmlRootAttribute\" data-throw-if-not-resolved=\"false\"></xref> that represents the XML root element. </p>\n"
  seealso:
  - linkId: System.Xml.Serialization.XmlAttributes
    commentId: T:System.Xml.Serialization.XmlAttributes
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: System.Xml.Serialization.XmlSerializer.CanDeserialize(System.Xml.XmlReader)
  commentId: M:System.Xml.Serialization.XmlSerializer.CanDeserialize(System.Xml.XmlReader)
  id: CanDeserialize(System.Xml.XmlReader)
  parent: System.Xml.Serialization.XmlSerializer
  langs:
  - csharp
  - vb
  name: CanDeserialize(XmlReader)
  nameWithType: XmlSerializer.CanDeserialize(XmlReader)
  fullName: System.Xml.Serialization.XmlSerializer.CanDeserialize(System.Xml.XmlReader)
  type: Method
  source:
    remote:
      path: src/System.Xml.XmlSerializer/ref/System.Xml.XmlSerializer.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: CanDeserialize
    path: src/System.Xml.XmlSerializer/ref/System.Xml.XmlSerializer.cs
    startLine: 187
  assemblies:
  - System.Xml.XmlSerializer
  namespace: System.Xml.Serialization
  summary: "\n<p>Gets a value that indicates whether this <xref href=\"System.Xml.Serialization.XmlSerializer\" data-throw-if-not-resolved=\"false\"></xref> can deserialize a specified XML document.</p>\n"
  syntax:
    content: public virtual bool CanDeserialize(XmlReader xmlReader)
    content.vb: Public Overridable Function CanDeserialize(xmlReader As XmlReader) As Boolean
    parameters:
    - id: xmlReader
      type: System.Xml.XmlReader
      description: "\n<p>An <xref href=\"System.Xml.XmlReader\" data-throw-if-not-resolved=\"false\"></xref> that points to the document to deserialize. </p>\n"
    return:
      type: System.Boolean
      description: "\n<p>\n<strong>true</strong> if this <xref href=\"System.Xml.Serialization.XmlSerializer\" data-throw-if-not-resolved=\"false\"></xref> can deserialize the object that the <xref href=\"System.Xml.XmlReader\" data-throw-if-not-resolved=\"false\"></xref> points to; otherwise, <strong>false</strong>.</p>\n"
  seealso:
  - linkId: System.Xml.Serialization.XmlSerializer.Deserialize(System.IO.Stream)
    commentId: M:System.Xml.Serialization.XmlSerializer.Deserialize(System.IO.Stream)
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: System.Xml.Serialization.XmlSerializer.Deserialize(System.IO.Stream)
  commentId: M:System.Xml.Serialization.XmlSerializer.Deserialize(System.IO.Stream)
  id: Deserialize(System.IO.Stream)
  parent: System.Xml.Serialization.XmlSerializer
  langs:
  - csharp
  - vb
  name: Deserialize(Stream)
  nameWithType: XmlSerializer.Deserialize(Stream)
  fullName: System.Xml.Serialization.XmlSerializer.Deserialize(System.IO.Stream)
  type: Method
  source:
    remote:
      path: src/System.Xml.XmlSerializer/src/System/Xml/Serialization/XmlSerializer.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: Deserialize
    path: src/System.Xml.XmlSerializer/src/System/Xml/Serialization/XmlSerializer.cs
    startLine: 370
  assemblies:
  - System.Xml.XmlSerializer
  namespace: System.Xml.Serialization
  summary: "\n<p>Deserializes the XML document contained by the specified <xref href=\"System.IO.Stream\" data-throw-if-not-resolved=\"false\"></xref>.</p>\n"
  syntax:
    content: public object Deserialize(Stream stream)
    content.vb: Public Function Deserialize(stream As Stream) As Object
    parameters:
    - id: stream
      type: System.IO.Stream
      description: "\n<p>The <xref href=\"System.IO.Stream\" data-throw-if-not-resolved=\"false\"></xref> that contains the XML document to deserialize. </p>\n"
    return:
      type: System.Object
      description: "\n<p>The <xref href=\"System.Object\" data-throw-if-not-resolved=\"false\"></xref> being deserialized.</p>\n"
  seealso:
  - linkId: System.Xml.Serialization.XmlAttributes
    commentId: T:System.Xml.Serialization.XmlAttributes
  - linkId: System.Xml.Serialization.XmlSerializer.CanDeserialize(System.Xml.XmlReader)
    commentId: M:System.Xml.Serialization.XmlSerializer.CanDeserialize(System.Xml.XmlReader)
  - linkId: System.Xml.Serialization.XmlSerializer.Serialize(System.IO.TextWriter,System.Object)
    commentId: M:System.Xml.Serialization.XmlSerializer.Serialize(System.IO.TextWriter,System.Object)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: System.Xml.Serialization.XmlSerializer.Deserialize(System.IO.TextReader)
  commentId: M:System.Xml.Serialization.XmlSerializer.Deserialize(System.IO.TextReader)
  id: Deserialize(System.IO.TextReader)
  parent: System.Xml.Serialization.XmlSerializer
  langs:
  - csharp
  - vb
  name: Deserialize(TextReader)
  nameWithType: XmlSerializer.Deserialize(TextReader)
  fullName: System.Xml.Serialization.XmlSerializer.Deserialize(System.IO.TextReader)
  type: Method
  source:
    remote:
      path: src/System.Xml.XmlSerializer/src/System/Xml/Serialization/XmlSerializer.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: Deserialize
    path: src/System.Xml.XmlSerializer/src/System/Xml/Serialization/XmlSerializer.cs
    startLine: 391
  assemblies:
  - System.Xml.XmlSerializer
  namespace: System.Xml.Serialization
  summary: "\n<p>Deserializes the XML document contained by the specified <xref href=\"System.IO.TextReader\" data-throw-if-not-resolved=\"false\"></xref>.</p>\n"
  syntax:
    content: public object Deserialize(TextReader textReader)
    content.vb: Public Function Deserialize(textReader As TextReader) As Object
    parameters:
    - id: textReader
      type: System.IO.TextReader
      description: "\n<p>The <xref href=\"System.IO.TextReader\" data-throw-if-not-resolved=\"false\"></xref> that contains the XML document to deserialize. </p>\n"
    return:
      type: System.Object
      description: "\n<p>The <xref href=\"System.Object\" data-throw-if-not-resolved=\"false\"></xref> being deserialized.</p>\n"
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "\n<p>An error occurred during deserialization. The original exception is available using the <xref href=\"System.Exception.InnerException\" data-throw-if-not-resolved=\"false\"></xref> property. </p>\n"
  seealso:
  - linkId: System.Xml.Serialization.XmlAttributes
    commentId: T:System.Xml.Serialization.XmlAttributes
  - linkId: System.Xml.Serialization.XmlSerializer.CanDeserialize(System.Xml.XmlReader)
    commentId: M:System.Xml.Serialization.XmlSerializer.CanDeserialize(System.Xml.XmlReader)
  - linkId: System.Xml.Serialization.XmlSerializer.Serialize(System.IO.TextWriter,System.Object)
    commentId: M:System.Xml.Serialization.XmlSerializer.Serialize(System.IO.TextWriter,System.Object)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: System.Xml.Serialization.XmlSerializer.Deserialize(System.Xml.XmlReader)
  commentId: M:System.Xml.Serialization.XmlSerializer.Deserialize(System.Xml.XmlReader)
  id: Deserialize(System.Xml.XmlReader)
  parent: System.Xml.Serialization.XmlSerializer
  langs:
  - csharp
  - vb
  name: Deserialize(XmlReader)
  nameWithType: XmlSerializer.Deserialize(XmlReader)
  fullName: System.Xml.Serialization.XmlSerializer.Deserialize(System.Xml.XmlReader)
  type: Method
  source:
    remote:
      path: src/System.Xml.XmlSerializer/ref/System.Xml.XmlSerializer.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: Deserialize
    path: src/System.Xml.XmlSerializer/ref/System.Xml.XmlSerializer.cs
    startLine: 190
  assemblies:
  - System.Xml.XmlSerializer
  namespace: System.Xml.Serialization
  summary: "\n<p>Deserializes the XML document contained by the specified <xref href=\"System.Xml.XmlReader\" data-throw-if-not-resolved=\"false\"></xref>.</p>\n"
  syntax:
    content: public object Deserialize(XmlReader xmlReader)
    content.vb: Public Function Deserialize(xmlReader As XmlReader) As Object
    parameters:
    - id: xmlReader
      type: System.Xml.XmlReader
      description: "\n<p>The <xref href=\"System.Xml.XmlReader\" data-throw-if-not-resolved=\"false\"></xref> that contains the XML document to deserialize. </p>\n"
    return:
      type: System.Object
      description: "\n<p>The <xref href=\"System.Object\" data-throw-if-not-resolved=\"false\"></xref> being deserialized.</p>\n"
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "\n<p>An error occurred during deserialization. The original exception is available using the <xref href=\"System.Exception.InnerException\" data-throw-if-not-resolved=\"false\"></xref> property. </p>\n"
  seealso:
  - linkId: System.Xml.Serialization.XmlAttributes
    commentId: T:System.Xml.Serialization.XmlAttributes
  - linkId: System.Xml.Serialization.XmlSerializer.CanDeserialize(System.Xml.XmlReader)
    commentId: M:System.Xml.Serialization.XmlSerializer.CanDeserialize(System.Xml.XmlReader)
  - linkId: System.Xml.Serialization.XmlSerializer.Serialize(System.IO.TextWriter,System.Object)
    commentId: M:System.Xml.Serialization.XmlSerializer.Serialize(System.IO.TextWriter,System.Object)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: System.Xml.Serialization.XmlSerializer.FromTypes(System.Type[])
  commentId: M:System.Xml.Serialization.XmlSerializer.FromTypes(System.Type[])
  id: FromTypes(System.Type[])
  parent: System.Xml.Serialization.XmlSerializer
  langs:
  - csharp
  - vb
  name: FromTypes(Type[])
  nameWithType: XmlSerializer.FromTypes(Type[])
  fullName: System.Xml.Serialization.XmlSerializer.FromTypes(System.Type[])
  type: Method
  source:
    remote:
      path: src/System.Xml.XmlSerializer/src/System/Xml/Serialization/XmlSerializer.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: FromTypes
    path: src/System.Xml.XmlSerializer/src/System/Xml/Serialization/XmlSerializer.cs
    startLine: 631
  assemblies:
  - System.Xml.XmlSerializer
  namespace: System.Xml.Serialization
  summary: "\n<p>Returns an array of <xref href=\"System.Xml.Serialization.XmlSerializer\" data-throw-if-not-resolved=\"false\"></xref> objects created from an array of types.</p>\n"
  syntax:
    content: public static XmlSerializer[] FromTypes(Type[] types)
    content.vb: Public Shared Function FromTypes(types As Type()) As XmlSerializer()
    parameters:
    - id: types
      type: System.Type[]
      description: "\n<p>An array of <xref href=\"System.Type\" data-throw-if-not-resolved=\"false\"></xref> objects. </p>\n"
    return:
      type: System.Xml.Serialization.XmlSerializer[]
      description: "\n<p>An array of <xref href=\"System.Xml.Serialization.XmlSerializer\" data-throw-if-not-resolved=\"false\"></xref> objects.</p>\n"
  seealso:
  - linkId: System.Xml.Serialization.XmlAttributes
    commentId: T:System.Xml.Serialization.XmlAttributes
  nameWithType.vb: XmlSerializer.FromTypes(Type())
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: System.Xml.Serialization.XmlSerializer.FromTypes(System.Type())
  name.vb: FromTypes(Type())
- uid: System.Xml.Serialization.XmlSerializer.Serialize(System.IO.Stream,System.Object)
  commentId: M:System.Xml.Serialization.XmlSerializer.Serialize(System.IO.Stream,System.Object)
  id: Serialize(System.IO.Stream,System.Object)
  parent: System.Xml.Serialization.XmlSerializer
  langs:
  - csharp
  - vb
  name: Serialize(Stream, Object)
  nameWithType: XmlSerializer.Serialize(Stream, Object)
  fullName: System.Xml.Serialization.XmlSerializer.Serialize(System.IO.Stream, System.Object)
  type: Method
  source:
    remote:
      path: src/System.Xml.XmlSerializer/src/System/Xml/Serialization/XmlSerializer.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: Serialize
    path: src/System.Xml.XmlSerializer/src/System/Xml/Serialization/XmlSerializer.cs
    startLine: 262
  assemblies:
  - System.Xml.XmlSerializer
  namespace: System.Xml.Serialization
  summary: "\n<p>Serializes the specified <xref href=\"System.Object\" data-throw-if-not-resolved=\"false\"></xref> and writes the XML document to a file using the specified <xref href=\"System.IO.Stream\" data-throw-if-not-resolved=\"false\"></xref>.</p>\n"
  syntax:
    content: public void Serialize(Stream stream, object o)
    content.vb: Public Sub Serialize(stream As Stream, o As Object)
    parameters:
    - id: stream
      type: System.IO.Stream
      description: "\n<p>The <xref href=\"System.IO.Stream\" data-throw-if-not-resolved=\"false\"></xref> used to write the XML document. </p>\n"
    - id: o
      type: System.Object
      description: "\n<p>The <xref href=\"System.Object\" data-throw-if-not-resolved=\"false\"></xref> to serialize. </p>\n"
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "\n<p>An error occurred during serialization. The original exception is available using the <xref href=\"System.Exception.InnerException\" data-throw-if-not-resolved=\"false\"></xref> property. </p>\n"
  seealso:
  - linkId: System.Xml.Serialization.XmlAttributes
    commentId: T:System.Xml.Serialization.XmlAttributes
  - linkId: System.Xml.Serialization.XmlSerializer.Deserialize(System.IO.Stream)
    commentId: M:System.Xml.Serialization.XmlSerializer.Deserialize(System.IO.Stream)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: System.Xml.Serialization.XmlSerializer.Serialize(System.IO.Stream,System.Object,System.Xml.Serialization.XmlSerializerNamespaces)
  commentId: M:System.Xml.Serialization.XmlSerializer.Serialize(System.IO.Stream,System.Object,System.Xml.Serialization.XmlSerializerNamespaces)
  id: Serialize(System.IO.Stream,System.Object,System.Xml.Serialization.XmlSerializerNamespaces)
  parent: System.Xml.Serialization.XmlSerializer
  langs:
  - csharp
  - vb
  name: Serialize(Stream, Object, XmlSerializerNamespaces)
  nameWithType: XmlSerializer.Serialize(Stream, Object, XmlSerializerNamespaces)
  fullName: System.Xml.Serialization.XmlSerializer.Serialize(System.IO.Stream, System.Object, System.Xml.Serialization.XmlSerializerNamespaces)
  type: Method
  source:
    remote:
      path: src/System.Xml.XmlSerializer/src/System/Xml/Serialization/XmlSerializer.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: Serialize
    path: src/System.Xml.XmlSerializer/src/System/Xml/Serialization/XmlSerializer.cs
    startLine: 271
  assemblies:
  - System.Xml.XmlSerializer
  namespace: System.Xml.Serialization
  summary: "\n<p>Serializes the specified <xref href=\"System.Object\" data-throw-if-not-resolved=\"false\"></xref> and writes the XML document to a file using the specified <xref href=\"System.IO.Stream\" data-throw-if-not-resolved=\"false\"></xref>that references the specified namespaces.</p>\n"
  syntax:
    content: public void Serialize(Stream stream, object o, XmlSerializerNamespaces namespaces)
    content.vb: Public Sub Serialize(stream As Stream, o As Object, namespaces As XmlSerializerNamespaces)
    parameters:
    - id: stream
      type: System.IO.Stream
      description: "\n<p>The <xref href=\"System.IO.Stream\" data-throw-if-not-resolved=\"false\"></xref> used to write the XML document. </p>\n"
    - id: o
      type: System.Object
      description: "\n<p>The <xref href=\"System.Object\" data-throw-if-not-resolved=\"false\"></xref> to serialize. </p>\n"
    - id: namespaces
      type: System.Xml.Serialization.XmlSerializerNamespaces
      description: "\n<p>The <xref href=\"System.Xml.Serialization.XmlSerializerNamespaces\" data-throw-if-not-resolved=\"false\"></xref> referenced by the object. </p>\n"
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "\n<p>An error occurred during serialization. The original exception is available using the <xref href=\"System.Exception.InnerException\" data-throw-if-not-resolved=\"false\"></xref> property. </p>\n"
  seealso:
  - linkId: System.Xml.Serialization.XmlAttributes
    commentId: T:System.Xml.Serialization.XmlAttributes
  - linkId: System.Xml.Serialization.XmlSerializer.Deserialize(System.IO.Stream)
    commentId: M:System.Xml.Serialization.XmlSerializer.Deserialize(System.IO.Stream)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: System.Xml.Serialization.XmlSerializer.Serialize(System.IO.TextWriter,System.Object)
  commentId: M:System.Xml.Serialization.XmlSerializer.Serialize(System.IO.TextWriter,System.Object)
  id: Serialize(System.IO.TextWriter,System.Object)
  parent: System.Xml.Serialization.XmlSerializer
  langs:
  - csharp
  - vb
  name: Serialize(TextWriter, Object)
  nameWithType: XmlSerializer.Serialize(TextWriter, Object)
  fullName: System.Xml.Serialization.XmlSerializer.Serialize(System.IO.TextWriter, System.Object)
  type: Method
  source:
    remote:
      path: src/System.Xml.XmlSerializer/src/System/Xml/Serialization/XmlSerializer.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: Serialize
    path: src/System.Xml.XmlSerializer/src/System/Xml/Serialization/XmlSerializer.cs
    startLine: 240
  assemblies:
  - System.Xml.XmlSerializer
  namespace: System.Xml.Serialization
  summary: "\n<p>Serializes the specified <xref href=\"System.Object\" data-throw-if-not-resolved=\"false\"></xref> and writes the XML document to a file using the specified <xref href=\"System.IO.TextWriter\" data-throw-if-not-resolved=\"false\"></xref>.</p>\n"
  syntax:
    content: public void Serialize(TextWriter textWriter, object o)
    content.vb: Public Sub Serialize(textWriter As TextWriter, o As Object)
    parameters:
    - id: textWriter
      type: System.IO.TextWriter
      description: "\n<p>The <xref href=\"System.IO.TextWriter\" data-throw-if-not-resolved=\"false\"></xref> used to write the XML document. </p>\n"
    - id: o
      type: System.Object
      description: "\n<p>The <xref href=\"System.Object\" data-throw-if-not-resolved=\"false\"></xref> to serialize. </p>\n"
  seealso:
  - linkId: System.Xml.Serialization.XmlAttributes
    commentId: T:System.Xml.Serialization.XmlAttributes
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: System.Xml.Serialization.XmlSerializer.Serialize(System.IO.TextWriter,System.Object,System.Xml.Serialization.XmlSerializerNamespaces)
  commentId: M:System.Xml.Serialization.XmlSerializer.Serialize(System.IO.TextWriter,System.Object,System.Xml.Serialization.XmlSerializerNamespaces)
  id: Serialize(System.IO.TextWriter,System.Object,System.Xml.Serialization.XmlSerializerNamespaces)
  parent: System.Xml.Serialization.XmlSerializer
  langs:
  - csharp
  - vb
  name: Serialize(TextWriter, Object, XmlSerializerNamespaces)
  nameWithType: XmlSerializer.Serialize(TextWriter, Object, XmlSerializerNamespaces)
  fullName: System.Xml.Serialization.XmlSerializer.Serialize(System.IO.TextWriter, System.Object, System.Xml.Serialization.XmlSerializerNamespaces)
  type: Method
  source:
    remote:
      path: src/System.Xml.XmlSerializer/src/System/Xml/Serialization/XmlSerializer.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: Serialize
    path: src/System.Xml.XmlSerializer/src/System/Xml/Serialization/XmlSerializer.cs
    startLine: 249
  assemblies:
  - System.Xml.XmlSerializer
  namespace: System.Xml.Serialization
  summary: "\n<p>Serializes the specified <xref href=\"System.Object\" data-throw-if-not-resolved=\"false\"></xref> and writes the XML document to a file using the specified <xref href=\"System.IO.TextWriter\" data-throw-if-not-resolved=\"false\"></xref> and references the specified namespaces.</p>\n"
  syntax:
    content: public void Serialize(TextWriter textWriter, object o, XmlSerializerNamespaces namespaces)
    content.vb: Public Sub Serialize(textWriter As TextWriter, o As Object, namespaces As XmlSerializerNamespaces)
    parameters:
    - id: textWriter
      type: System.IO.TextWriter
      description: "\n<p>The <xref href=\"System.IO.TextWriter\" data-throw-if-not-resolved=\"false\"></xref> used to write the XML document. </p>\n"
    - id: o
      type: System.Object
      description: "\n<p>The <xref href=\"System.Object\" data-throw-if-not-resolved=\"false\"></xref> to serialize. </p>\n"
    - id: namespaces
      type: System.Xml.Serialization.XmlSerializerNamespaces
      description: "\n<p>The <xref href=\"System.Xml.Serialization.XmlSerializerNamespaces\" data-throw-if-not-resolved=\"false\"></xref> that contains namespaces for the generated XML document. </p>\n"
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "\n<p>An error occurred during serialization. The original exception is available using the <xref href=\"System.Exception.InnerException\" data-throw-if-not-resolved=\"false\"></xref> property. </p>\n"
  seealso:
  - linkId: System.Xml.Serialization.XmlAttributes
    commentId: T:System.Xml.Serialization.XmlAttributes
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: System.Xml.Serialization.XmlSerializer.Serialize(System.Xml.XmlWriter,System.Object)
  commentId: M:System.Xml.Serialization.XmlSerializer.Serialize(System.Xml.XmlWriter,System.Object)
  id: Serialize(System.Xml.XmlWriter,System.Object)
  parent: System.Xml.Serialization.XmlSerializer
  langs:
  - csharp
  - vb
  name: Serialize(XmlWriter, Object)
  nameWithType: XmlSerializer.Serialize(XmlWriter, Object)
  fullName: System.Xml.Serialization.XmlSerializer.Serialize(System.Xml.XmlWriter, System.Object)
  type: Method
  source:
    remote:
      path: src/System.Xml.XmlSerializer/ref/System.Xml.XmlSerializer.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: Serialize
    path: src/System.Xml.XmlSerializer/ref/System.Xml.XmlSerializer.cs
    startLine: 196
  assemblies:
  - System.Xml.XmlSerializer
  namespace: System.Xml.Serialization
  summary: "\n<p>Serializes the specified <xref href=\"System.Object\" data-throw-if-not-resolved=\"false\"></xref> and writes the XML document to a file using the specified <xref href=\"System.Xml.XmlWriter\" data-throw-if-not-resolved=\"false\"></xref>.</p>\n"
  syntax:
    content: public void Serialize(XmlWriter xmlWriter, object o)
    content.vb: Public Sub Serialize(xmlWriter As XmlWriter, o As Object)
    parameters:
    - id: xmlWriter
      type: System.Xml.XmlWriter
      description: "\n<p>The <xref href=\"System.Xml.XmlWriter\" data-throw-if-not-resolved=\"false\"></xref> used to write the XML document. </p>\n"
    - id: o
      type: System.Object
      description: "\n<p>The <xref href=\"System.Object\" data-throw-if-not-resolved=\"false\"></xref> to serialize. </p>\n"
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "\n<p>An error occurred during serialization. The original exception is available using the <xref href=\"System.Exception.InnerException\" data-throw-if-not-resolved=\"false\"></xref> property. </p>\n"
  seealso:
  - linkId: System.Xml.Serialization.XmlAttributes
    commentId: T:System.Xml.Serialization.XmlAttributes
  - linkId: System.Xml.Serialization.XmlSerializer.Deserialize(System.IO.Stream)
    commentId: M:System.Xml.Serialization.XmlSerializer.Deserialize(System.IO.Stream)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: System.Xml.Serialization.XmlSerializer.Serialize(System.Xml.XmlWriter,System.Object,System.Xml.Serialization.XmlSerializerNamespaces)
  commentId: M:System.Xml.Serialization.XmlSerializer.Serialize(System.Xml.XmlWriter,System.Object,System.Xml.Serialization.XmlSerializerNamespaces)
  id: Serialize(System.Xml.XmlWriter,System.Object,System.Xml.Serialization.XmlSerializerNamespaces)
  parent: System.Xml.Serialization.XmlSerializer
  langs:
  - csharp
  - vb
  name: Serialize(XmlWriter, Object, XmlSerializerNamespaces)
  nameWithType: XmlSerializer.Serialize(XmlWriter, Object, XmlSerializerNamespaces)
  fullName: System.Xml.Serialization.XmlSerializer.Serialize(System.Xml.XmlWriter, System.Object, System.Xml.Serialization.XmlSerializerNamespaces)
  type: Method
  source:
    remote:
      path: src/System.Xml.XmlSerializer/ref/System.Xml.XmlSerializer.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: Serialize
    path: src/System.Xml.XmlSerializer/ref/System.Xml.XmlSerializer.cs
    startLine: 197
  assemblies:
  - System.Xml.XmlSerializer
  namespace: System.Xml.Serialization
  summary: "\n<p>Serializes the specified <xref href=\"System.Object\" data-throw-if-not-resolved=\"false\"></xref> and writes the XML document to a file using the specified <xref href=\"System.Xml.XmlWriter\" data-throw-if-not-resolved=\"false\"></xref> and references the specified namespaces.</p>\n"
  syntax:
    content: public void Serialize(XmlWriter xmlWriter, object o, XmlSerializerNamespaces namespaces)
    content.vb: Public Sub Serialize(xmlWriter As XmlWriter, o As Object, namespaces As XmlSerializerNamespaces)
    parameters:
    - id: xmlWriter
      type: System.Xml.XmlWriter
      description: "\n<p>The <xref href=\"System.Xml.XmlWriter\" data-throw-if-not-resolved=\"false\"></xref> used to write the XML document. </p>\n"
    - id: o
      type: System.Object
      description: "\n<p>The <xref href=\"System.Object\" data-throw-if-not-resolved=\"false\"></xref> to serialize. </p>\n"
    - id: namespaces
      type: System.Xml.Serialization.XmlSerializerNamespaces
      description: "\n<p>The <xref href=\"System.Xml.Serialization.XmlSerializerNamespaces\" data-throw-if-not-resolved=\"false\"></xref> referenced by the object. </p>\n"
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "\n<p>An error occurred during serialization. The original exception is available using the <xref href=\"System.Exception.InnerException\" data-throw-if-not-resolved=\"false\"></xref> property. </p>\n"
  seealso:
  - linkId: System.Xml.Serialization.XmlAttributes
    commentId: T:System.Xml.Serialization.XmlAttributes
  - linkId: System.Xml.Serialization.XmlSerializer.Deserialize(System.IO.Stream)
    commentId: M:System.Xml.Serialization.XmlSerializer.Deserialize(System.IO.Stream)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
references:
- uid: System.Xml.Serialization
  commentId: N:System.Xml.Serialization
  isExternal: false
  name: System.Xml.Serialization
  nameWithType: System.Xml.Serialization
  fullName: System.Xml.Serialization
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: false
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: System.Type
  commentId: T:System.Type
  parent: System
  isExternal: false
  name: Type
  nameWithType: Type
  fullName: System.Type
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: false
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Type[]
  name: Type[]
  nameWithType: Type[]
  fullName: System.Type[]
  nameWithType.vb: Type()
  fullname.vb: System.Type()
  name.vb: Type()
  spec.csharp:
  - uid: System.Type
    name: Type
    nameWithType: Type
    fullName: System.Type
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  spec.vb:
  - uid: System.Type
    name: Type
    nameWithType: Type
    fullName: System.Type
  - name: ()
    nameWithType: ()
    fullName: ()
- uid: System.Xml.Serialization.XmlAttributeOverrides
  commentId: T:System.Xml.Serialization.XmlAttributeOverrides
  parent: System.Xml.Serialization
  isExternal: false
  name: XmlAttributeOverrides
  nameWithType: XmlAttributeOverrides
  fullName: System.Xml.Serialization.XmlAttributeOverrides
- uid: System.Xml.Serialization.XmlRootAttribute
  commentId: T:System.Xml.Serialization.XmlRootAttribute
  parent: System.Xml.Serialization
  isExternal: false
  name: XmlRootAttribute
  nameWithType: XmlRootAttribute
  fullName: System.Xml.Serialization.XmlRootAttribute
- uid: System.Xml.XmlReader
  commentId: T:System.Xml.XmlReader
  parent: System.Xml
  isExternal: false
  name: XmlReader
  nameWithType: XmlReader
  fullName: System.Xml.XmlReader
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: false
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Xml
  commentId: N:System.Xml
  isExternal: false
  name: System.Xml
  nameWithType: System.Xml
  fullName: System.Xml
- uid: System.IO.Stream
  commentId: T:System.IO.Stream
  parent: System.IO
  isExternal: false
  name: Stream
  nameWithType: Stream
  fullName: System.IO.Stream
- uid: System.IO
  commentId: N:System.IO
  isExternal: false
  name: System.IO
  nameWithType: System.IO
  fullName: System.IO
- uid: System.IO.TextReader
  commentId: T:System.IO.TextReader
  parent: System.IO
  isExternal: false
  name: TextReader
  nameWithType: TextReader
  fullName: System.IO.TextReader
- uid: System.Xml.Serialization.XmlSerializer[]
  name: XmlSerializer[]
  nameWithType: XmlSerializer[]
  fullName: System.Xml.Serialization.XmlSerializer[]
  nameWithType.vb: XmlSerializer()
  fullname.vb: System.Xml.Serialization.XmlSerializer()
  name.vb: XmlSerializer()
  spec.csharp:
  - uid: System.Xml.Serialization.XmlSerializer
    name: XmlSerializer
    nameWithType: XmlSerializer
    fullName: System.Xml.Serialization.XmlSerializer
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  spec.vb:
  - uid: System.Xml.Serialization.XmlSerializer
    name: XmlSerializer
    nameWithType: XmlSerializer
    fullName: System.Xml.Serialization.XmlSerializer
  - name: ()
    nameWithType: ()
    fullName: ()
- uid: System.Xml.Serialization.XmlSerializerNamespaces
  commentId: T:System.Xml.Serialization.XmlSerializerNamespaces
  parent: System.Xml.Serialization
  isExternal: false
  name: XmlSerializerNamespaces
  nameWithType: XmlSerializerNamespaces
  fullName: System.Xml.Serialization.XmlSerializerNamespaces
- uid: System.IO.TextWriter
  commentId: T:System.IO.TextWriter
  parent: System.IO
  isExternal: false
  name: TextWriter
  nameWithType: TextWriter
  fullName: System.IO.TextWriter
- uid: System.Xml.XmlWriter
  commentId: T:System.Xml.XmlWriter
  parent: System.Xml
  isExternal: false
  name: XmlWriter
  nameWithType: XmlWriter
  fullName: System.Xml.XmlWriter
- uid: System.InvalidOperationException
  commentId: T:System.InvalidOperationException
  parent: System
  isExternal: false
  name: InvalidOperationException
  nameWithType: InvalidOperationException
  fullName: System.InvalidOperationException
