items:
- uid: System.Net.WebRequest
  commentId: T:System.Net.WebRequest
  id: WebRequest
  parent: System.Net
  children:
  - System.Net.WebRequest.#ctor
  - System.Net.WebRequest.Abort
  - System.Net.WebRequest.BeginGetRequestStream(System.AsyncCallback,System.Object)
  - System.Net.WebRequest.BeginGetResponse(System.AsyncCallback,System.Object)
  - System.Net.WebRequest.ContentType
  - System.Net.WebRequest.Create(System.String)
  - System.Net.WebRequest.Create(System.Uri)
  - System.Net.WebRequest.CreateHttp(System.String)
  - System.Net.WebRequest.CreateHttp(System.Uri)
  - System.Net.WebRequest.Credentials
  - System.Net.WebRequest.DefaultWebProxy
  - System.Net.WebRequest.EndGetRequestStream(System.IAsyncResult)
  - System.Net.WebRequest.EndGetResponse(System.IAsyncResult)
  - System.Net.WebRequest.GetRequestStreamAsync
  - System.Net.WebRequest.GetResponseAsync
  - System.Net.WebRequest.Headers
  - System.Net.WebRequest.Method
  - System.Net.WebRequest.Proxy
  - System.Net.WebRequest.RegisterPrefix(System.String,System.Net.IWebRequestCreate)
  - System.Net.WebRequest.RequestUri
  - System.Net.WebRequest.UseDefaultCredentials
  langs:
  - csharp
  - vb
  name: WebRequest
  fullName: System.Net.WebRequest
  type: Class
  source:
    remote:
      path: src/System.Net.Requests/ref/System.Net.Requests.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: WebRequest
    path: src/System.Net.Requests/ref/System.Net.Requests.cs
    startLine: 89
  assemblies:
  - System.Net.Requests
  namespace: System.Net
  summary: "\n<p>Makes a request to a Uniform Resource Identifier (URI). This is an <strong>abstract</strong> class.</p>\n"
  syntax:
    content: public abstract class WebRequest
    content.vb: Public MustInherit Class WebRequest
  seealso:
  - type: System.Net.HttpWebRequest
    commentId: T:System.Net.HttpWebRequest
  see:
  - type: System.Net.WebPermission
    commentId: T:System.Net.WebPermission
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  modifiers.csharp:
  - public
  - abstract
  - class
  modifiers.vb:
  - Public
  - MustInherit
  - Class
  nameWithType: WebRequest
- uid: System.Net.WebRequest.#ctor
  commentId: M:System.Net.WebRequest.#ctor
  id: '#ctor'
  parent: System.Net.WebRequest
  langs:
  - csharp
  - vb
  name: WebRequest()
  fullName: System.Net.WebRequest.WebRequest()
  type: Constructor
  source:
    remote:
      path: src/System.Net.Requests/ref/System.Net.Requests.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: .ctor
    path: src/System.Net.Requests/ref/System.Net.Requests.cs
    startLine: 91
  assemblies:
  - System.Net.Requests
  namespace: System.Net
  summary: "\n<p>Initializes a new instance of the <xref href=\"System.Net.WebRequest\" data-throw-if-not-resolved=\"false\"></xref> class.</p>\n"
  syntax:
    content: protected WebRequest()
    content.vb: Protected Sub New
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
  nameWithType: WebRequest.WebRequest()
- uid: System.Net.WebRequest.ContentType
  commentId: P:System.Net.WebRequest.ContentType
  id: ContentType
  parent: System.Net.WebRequest
  langs:
  - csharp
  - vb
  name: ContentType
  fullName: System.Net.WebRequest.ContentType
  type: Property
  source:
    remote:
      path: src/System.Net.Requests/ref/System.Net.Requests.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: ContentType
    path: src/System.Net.Requests/ref/System.Net.Requests.cs
    startLine: 92
  assemblies:
  - System.Net.Requests
  namespace: System.Net
  summary: "\n<p>When overridden in a descendant class, gets or sets the content type of the request data being sent.</p>\n"
  syntax:
    content: public abstract string ContentType { get; set; }
    content.vb: Public MustOverride Property ContentType As String
    parameters: []
    return:
      type: System.String
      description: "\n<p>The content type of the request data.</p>\n"
  exceptions:
  - type: System.NotImplementedException
    commentId: T:System.NotImplementedException
    description: "\n<p>Any attempt is made to get or set the property, when the property is not overridden in a descendant class. </p>\n"
  seealso:
  - type: System.Net.HttpWebRequest.ContentType
    commentId: P:System.Net.HttpWebRequest.ContentType
  modifiers.csharp:
  - public
  - abstract
  - get
  - set
  modifiers.vb:
  - Public
  - MustOverride
  nameWithType: WebRequest.ContentType
- uid: System.Net.WebRequest.Credentials
  commentId: P:System.Net.WebRequest.Credentials
  id: Credentials
  parent: System.Net.WebRequest
  langs:
  - csharp
  - vb
  name: Credentials
  fullName: System.Net.WebRequest.Credentials
  type: Property
  source:
    remote:
      path: src/System.Net.Requests/ref/System.Net.Requests.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: Credentials
    path: src/System.Net.Requests/ref/System.Net.Requests.cs
    startLine: 93
  assemblies:
  - System.Net.Requests
  namespace: System.Net
  summary: "\n<p>When overridden in a descendant class, gets or sets the network credentials used for authenticating the request with the Internet resource.</p>\n"
  syntax:
    content: public virtual ICredentials Credentials { get; set; }
    content.vb: Public Overridable Property Credentials As ICredentials
    parameters: []
    return:
      type: System.Net.ICredentials
      description: "\n<p>An <xref href=\"System.Net.ICredentials\" data-throw-if-not-resolved=\"false\"></xref> containing the authentication credentials associated with the request. The default is <strong>null</strong>.</p>\n"
  exceptions:
  - type: System.NotImplementedException
    commentId: T:System.NotImplementedException
    description: "\n<p>Any attempt is made to get or set the property, when the property is not overridden in a descendant class. </p>\n"
  seealso:
  - type: System.Net.NetworkCredential
    commentId: T:System.Net.NetworkCredential
  - type: System.Net.CredentialCache
    commentId: T:System.Net.CredentialCache
  - type: System.Net.HttpWebRequest.Credentials
    commentId: P:System.Net.HttpWebRequest.Credentials
  modifiers.csharp:
  - public
  - virtual
  - get
  - set
  modifiers.vb:
  - Public
  - Overridable
  nameWithType: WebRequest.Credentials
- uid: System.Net.WebRequest.DefaultWebProxy
  commentId: P:System.Net.WebRequest.DefaultWebProxy
  id: DefaultWebProxy
  parent: System.Net.WebRequest
  langs:
  - csharp
  - vb
  name: DefaultWebProxy
  fullName: System.Net.WebRequest.DefaultWebProxy
  type: Property
  source:
    remote:
      path: src/System.Net.Requests/ref/System.Net.Requests.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: DefaultWebProxy
    path: src/System.Net.Requests/ref/System.Net.Requests.cs
    startLine: 94
  assemblies:
  - System.Net.Requests
  namespace: System.Net
  summary: "\n<p>Gets or sets the global HTTP proxy.</p>\n"
  syntax:
    content: public static IWebProxy DefaultWebProxy { get; set; }
    content.vb: Public Shared Property DefaultWebProxy As IWebProxy
    parameters: []
    return:
      type: System.Net.IWebProxy
      description: "\n<p>An <xref href=\"System.Net.IWebProxy\" data-throw-if-not-resolved=\"false\"></xref> used by every call to instances of <xref href=\"System.Net.WebRequest\" data-throw-if-not-resolved=\"false\"></xref>.</p>\n"
  see:
  - type: System.Net.WebPermission
    commentId: T:System.Net.WebPermission
  modifiers.csharp:
  - public
  - static
  - get
  - set
  modifiers.vb:
  - Public
  - Shared
  nameWithType: WebRequest.DefaultWebProxy
- uid: System.Net.WebRequest.Headers
  commentId: P:System.Net.WebRequest.Headers
  id: Headers
  parent: System.Net.WebRequest
  langs:
  - csharp
  - vb
  name: Headers
  fullName: System.Net.WebRequest.Headers
  type: Property
  source:
    remote:
      path: src/System.Net.Requests/ref/System.Net.Requests.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: Headers
    path: src/System.Net.Requests/ref/System.Net.Requests.cs
    startLine: 95
  assemblies:
  - System.Net.Requests
  namespace: System.Net
  summary: "\n<p>When overridden in a descendant class, gets or sets the collection of header name/value pairs associated with the request.</p>\n"
  syntax:
    content: public abstract WebHeaderCollection Headers { get; set; }
    content.vb: Public MustOverride Property Headers As WebHeaderCollection
    parameters: []
    return:
      type: System.Net.WebHeaderCollection
      description: "\n<p>A <xref href=\"System.Net.WebHeaderCollection\" data-throw-if-not-resolved=\"false\"></xref> containing the header name/value pairs associated with this request.</p>\n"
  exceptions:
  - type: System.NotImplementedException
    commentId: T:System.NotImplementedException
    description: "\n<p>Any attempt is made to get or set the property, when the property is not overridden in a descendant class. </p>\n"
  seealso:
  - type: System.Net.WebHeaderCollection
    commentId: T:System.Net.WebHeaderCollection
  - type: System.Net.HttpWebRequest.Headers
    commentId: P:System.Net.HttpWebRequest.Headers
  modifiers.csharp:
  - public
  - abstract
  - get
  - set
  modifiers.vb:
  - Public
  - MustOverride
  nameWithType: WebRequest.Headers
- uid: System.Net.WebRequest.Method
  commentId: P:System.Net.WebRequest.Method
  id: Method
  parent: System.Net.WebRequest
  langs:
  - csharp
  - vb
  name: Method
  fullName: System.Net.WebRequest.Method
  type: Property
  source:
    remote:
      path: src/System.Net.Requests/ref/System.Net.Requests.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: Method
    path: src/System.Net.Requests/ref/System.Net.Requests.cs
    startLine: 96
  assemblies:
  - System.Net.Requests
  namespace: System.Net
  summary: "\n<p>When overridden in a descendant class, gets or sets the protocol method to use in this request.</p>\n"
  syntax:
    content: public abstract string Method { get; set; }
    content.vb: Public MustOverride Property Method As String
    parameters: []
    return:
      type: System.String
      description: "\n<p>The protocol method to use in this request.</p>\n"
  exceptions:
  - type: System.NotImplementedException
    commentId: T:System.NotImplementedException
    description: "\n<p>If the property is not overridden in a descendant class, any attempt is made to get or set the property. </p>\n"
  seealso:
  - type: System.Net.HttpWebRequest.Method
    commentId: P:System.Net.HttpWebRequest.Method
  modifiers.csharp:
  - public
  - abstract
  - get
  - set
  modifiers.vb:
  - Public
  - MustOverride
  nameWithType: WebRequest.Method
- uid: System.Net.WebRequest.Proxy
  commentId: P:System.Net.WebRequest.Proxy
  id: Proxy
  parent: System.Net.WebRequest
  langs:
  - csharp
  - vb
  name: Proxy
  fullName: System.Net.WebRequest.Proxy
  type: Property
  source:
    remote:
      path: src/System.Net.Requests/ref/System.Net.Requests.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: Proxy
    path: src/System.Net.Requests/ref/System.Net.Requests.cs
    startLine: 97
  assemblies:
  - System.Net.Requests
  namespace: System.Net
  summary: "\n<p>When overridden in a descendant class, gets or sets the network proxy to use to access this Internet resource.</p>\n"
  syntax:
    content: public virtual IWebProxy Proxy { get; set; }
    content.vb: Public Overridable Property Proxy As IWebProxy
    parameters: []
    return:
      type: System.Net.IWebProxy
      description: "\n<p>The <xref href=\"System.Net.IWebProxy\" data-throw-if-not-resolved=\"false\"></xref> to use to access the Internet resource.</p>\n"
  exceptions:
  - type: System.NotImplementedException
    commentId: T:System.NotImplementedException
    description: "\n<p>Any attempt is made to get or set the property, when the property is not overridden in a descendant class. </p>\n"
  seealso:
  - type: System.Net.IWebProxy
    commentId: T:System.Net.IWebProxy
  - type: System.Net.WebProxy
    commentId: T:System.Net.WebProxy
  - type: System.Net.HttpWebRequest.Proxy
    commentId: P:System.Net.HttpWebRequest.Proxy
  modifiers.csharp:
  - public
  - virtual
  - get
  - set
  modifiers.vb:
  - Public
  - Overridable
  nameWithType: WebRequest.Proxy
- uid: System.Net.WebRequest.RequestUri
  commentId: P:System.Net.WebRequest.RequestUri
  id: RequestUri
  parent: System.Net.WebRequest
  langs:
  - csharp
  - vb
  name: RequestUri
  fullName: System.Net.WebRequest.RequestUri
  type: Property
  source:
    remote:
      path: src/System.Net.Requests/ref/System.Net.Requests.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: RequestUri
    path: src/System.Net.Requests/ref/System.Net.Requests.cs
    startLine: 98
  assemblies:
  - System.Net.Requests
  namespace: System.Net
  summary: "\n<p>When overridden in a descendant class, gets the URI of the Internet resource associated with the request.</p>\n"
  syntax:
    content: public abstract Uri RequestUri { get; }
    content.vb: Public MustOverride ReadOnly Property RequestUri As Uri
    parameters: []
    return:
      type: System.Uri
      description: "\n<p>A <xref href=\"System.Uri\" data-throw-if-not-resolved=\"false\"></xref> representing the resource associated with the request </p>\n"
  exceptions:
  - type: System.NotImplementedException
    commentId: T:System.NotImplementedException
    description: "\n<p>Any attempt is made to get or set the property, when the property is not overridden in a descendant class. </p>\n"
  seealso:
  - type: System.Net.HttpWebRequest.RequestUri
    commentId: P:System.Net.HttpWebRequest.RequestUri
  - type: System.Net.HttpWebRequest.Address
    commentId: P:System.Net.HttpWebRequest.Address
  modifiers.csharp:
  - public
  - abstract
  - get
  modifiers.vb:
  - Public
  - MustOverride
  - ReadOnly
  nameWithType: WebRequest.RequestUri
- uid: System.Net.WebRequest.UseDefaultCredentials
  commentId: P:System.Net.WebRequest.UseDefaultCredentials
  id: UseDefaultCredentials
  parent: System.Net.WebRequest
  langs:
  - csharp
  - vb
  name: UseDefaultCredentials
  fullName: System.Net.WebRequest.UseDefaultCredentials
  type: Property
  source:
    remote:
      path: src/System.Net.Requests/ref/System.Net.Requests.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: UseDefaultCredentials
    path: src/System.Net.Requests/ref/System.Net.Requests.cs
    startLine: 99
  assemblies:
  - System.Net.Requests
  namespace: System.Net
  summary: "\n<p>When overridden in a descendant class, gets or sets a <xref href=\"System.Boolean\" data-throw-if-not-resolved=\"false\"></xref> value that controls whether <xref href=\"System.Net.CredentialCache.DefaultCredentials\" data-throw-if-not-resolved=\"false\"></xref> are sent with requests.</p>\n"
  syntax:
    content: public virtual bool UseDefaultCredentials { get; set; }
    content.vb: Public Overridable Property UseDefaultCredentials As Boolean
    parameters: []
    return:
      type: System.Boolean
      description: "\n<p>\n<strong>true</strong> if the default credentials are used; otherwise <strong>false</strong>. The default value is <strong>false</strong>.</p>\n"
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "\n<p>You attempted to set this property after the request was sent.</p>\n"
  - type: System.NotImplementedException
    commentId: T:System.NotImplementedException
    description: "\n<p>Any attempt is made to access the property, when the property is not overridden in a descendant class. </p>\n"
  modifiers.csharp:
  - public
  - virtual
  - get
  - set
  modifiers.vb:
  - Public
  - Overridable
  nameWithType: WebRequest.UseDefaultCredentials
- uid: System.Net.WebRequest.Abort
  commentId: M:System.Net.WebRequest.Abort
  id: Abort
  parent: System.Net.WebRequest
  langs:
  - csharp
  - vb
  name: Abort()
  fullName: System.Net.WebRequest.Abort()
  type: Method
  source:
    remote:
      path: src/System.Net.Requests/ref/System.Net.Requests.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: Abort
    path: src/System.Net.Requests/ref/System.Net.Requests.cs
    startLine: 100
  assemblies:
  - System.Net.Requests
  namespace: System.Net
  summary: "\n<p>Aborts the Request </p>\n"
  syntax:
    content: public abstract void Abort()
    content.vb: Public MustOverride Sub Abort
  exceptions:
  - type: System.NotImplementedException
    commentId: T:System.NotImplementedException
    description: "\n<p>Any attempt is made to access the method, when the method is not overridden in a descendant class. </p>\n"
  modifiers.csharp:
  - public
  - abstract
  modifiers.vb:
  - Public
  - MustOverride
  nameWithType: WebRequest.Abort()
- uid: System.Net.WebRequest.BeginGetRequestStream(System.AsyncCallback,System.Object)
  commentId: M:System.Net.WebRequest.BeginGetRequestStream(System.AsyncCallback,System.Object)
  id: BeginGetRequestStream(System.AsyncCallback,System.Object)
  parent: System.Net.WebRequest
  langs:
  - csharp
  - vb
  name: BeginGetRequestStream(AsyncCallback, Object)
  fullName: System.Net.WebRequest.BeginGetRequestStream(System.AsyncCallback, System.Object)
  type: Method
  source:
    remote:
      path: src/System.Net.Requests/ref/System.Net.Requests.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: BeginGetRequestStream
    path: src/System.Net.Requests/ref/System.Net.Requests.cs
    startLine: 101
  assemblies:
  - System.Net.Requests
  namespace: System.Net
  summary: "\n<p>When overridden in a descendant class, provides an asynchronous version of the <xref href=\"System.Net.WebRequest.GetRequestStream\" data-throw-if-not-resolved=\"false\"></xref> method.</p>\n"
  syntax:
    content: public abstract IAsyncResult BeginGetRequestStream(AsyncCallback callback, object state)
    content.vb: Public MustOverride Function BeginGetRequestStream(callback As AsyncCallback, state As Object) As IAsyncResult
    parameters:
    - id: callback
      type: System.AsyncCallback
      description: "\n<p>The <xref href=\"System.AsyncCallback\" data-throw-if-not-resolved=\"false\"></xref> delegate. </p>\n"
    - id: state
      type: System.Object
      description: "\n<p>An object containing state information for this asynchronous request. </p>\n"
    return:
      type: System.IAsyncResult
      description: "\n<p>An <xref href=\"System.IAsyncResult\" data-throw-if-not-resolved=\"false\"></xref> that references the asynchronous request.</p>\n"
  exceptions:
  - type: System.NotImplementedException
    commentId: T:System.NotImplementedException
    description: "\n<p>Any attempt is made to access the method, when the method is not overridden in a descendant class. </p>\n"
  seealso:
  - type: System.Net.WebRequest.EndGetRequestStream(System.IAsyncResult)
    commentId: M:System.Net.WebRequest.EndGetRequestStream(System.IAsyncResult)
  modifiers.csharp:
  - public
  - abstract
  modifiers.vb:
  - Public
  - MustOverride
  nameWithType: WebRequest.BeginGetRequestStream(AsyncCallback, Object)
- uid: System.Net.WebRequest.BeginGetResponse(System.AsyncCallback,System.Object)
  commentId: M:System.Net.WebRequest.BeginGetResponse(System.AsyncCallback,System.Object)
  id: BeginGetResponse(System.AsyncCallback,System.Object)
  parent: System.Net.WebRequest
  langs:
  - csharp
  - vb
  name: BeginGetResponse(AsyncCallback, Object)
  fullName: System.Net.WebRequest.BeginGetResponse(System.AsyncCallback, System.Object)
  type: Method
  source:
    remote:
      path: src/System.Net.Requests/ref/System.Net.Requests.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: BeginGetResponse
    path: src/System.Net.Requests/ref/System.Net.Requests.cs
    startLine: 102
  assemblies:
  - System.Net.Requests
  namespace: System.Net
  summary: "\n<p>When overridden in a descendant class, begins an asynchronous request for an Internet resource.</p>\n"
  syntax:
    content: public abstract IAsyncResult BeginGetResponse(AsyncCallback callback, object state)
    content.vb: Public MustOverride Function BeginGetResponse(callback As AsyncCallback, state As Object) As IAsyncResult
    parameters:
    - id: callback
      type: System.AsyncCallback
      description: "\n<p>The <xref href=\"System.AsyncCallback\" data-throw-if-not-resolved=\"false\"></xref> delegate. </p>\n"
    - id: state
      type: System.Object
      description: "\n<p>An object containing state information for this asynchronous request. </p>\n"
    return:
      type: System.IAsyncResult
      description: "\n<p>An <xref href=\"System.IAsyncResult\" data-throw-if-not-resolved=\"false\"></xref> that references the asynchronous request.</p>\n"
  exceptions:
  - type: System.NotImplementedException
    commentId: T:System.NotImplementedException
    description: "\n<p>Any attempt is made to access the method, when the method is not overridden in a descendant class. </p>\n"
  seealso:
  - type: System.Net.WebRequest.EndGetResponse(System.IAsyncResult)
    commentId: M:System.Net.WebRequest.EndGetResponse(System.IAsyncResult)
  - type: System.Net.WebRequest.GetResponse
    commentId: M:System.Net.WebRequest.GetResponse
  modifiers.csharp:
  - public
  - abstract
  modifiers.vb:
  - Public
  - MustOverride
  nameWithType: WebRequest.BeginGetResponse(AsyncCallback, Object)
- uid: System.Net.WebRequest.Create(System.String)
  commentId: M:System.Net.WebRequest.Create(System.String)
  id: Create(System.String)
  parent: System.Net.WebRequest
  langs:
  - csharp
  - vb
  name: Create(String)
  fullName: System.Net.WebRequest.Create(System.String)
  type: Method
  source:
    remote:
      path: src/System.Net.Requests/ref/System.Net.Requests.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: Create
    path: src/System.Net.Requests/ref/System.Net.Requests.cs
    startLine: 103
  assemblies:
  - System.Net.Requests
  namespace: System.Net
  summary: "\n<p>Initializes a new <xref href=\"System.Net.WebRequest\" data-throw-if-not-resolved=\"false\"></xref> instance for the specified URI scheme.</p>\n"
  syntax:
    content: public static WebRequest Create(string requestUriString)
    content.vb: Public Shared Function Create(requestUriString As String) As WebRequest
    parameters:
    - id: requestUriString
      type: System.String
      description: "\n<p>The URI that identifies the Internet resource. </p>\n"
    return:
      type: System.Net.WebRequest
      description: "\n<p>A <xref href=\"System.Net.WebRequest\" data-throw-if-not-resolved=\"false\"></xref> descendant for the specific URI scheme.</p>\n"
  exceptions:
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "\n<p>The request scheme specified in <em>requestUriString</em> has not been registered. </p>\n"
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "\n<p>\n<em>requestUriString</em> is <strong>null</strong>. </p>\n"
  - type: System.Security.SecurityException
    commentId: T:System.Security.SecurityException
    description: "\n<p>The caller does not have permission to connect to the requested URI or a URI that the request is redirected to. </p>\n"
  - type: System.UriFormatException
    commentId: T:System.UriFormatException
    description: "\n<p>In the <see href=\"http://go.microsoft.com/fwlink/?LinkID=247912\">.NET for Windows Store apps</see> or the Portable Class Library, catch the base class exception, <xref href=\"System.FormatException\" data-throw-if-not-resolved=\"false\"></xref>, instead.</p>\n<p>The URI specified in <em>requestUriString</em> is not a valid URI. </p>\n"
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  nameWithType: WebRequest.Create(String)
- uid: System.Net.WebRequest.Create(System.Uri)
  commentId: M:System.Net.WebRequest.Create(System.Uri)
  id: Create(System.Uri)
  parent: System.Net.WebRequest
  langs:
  - csharp
  - vb
  name: Create(Uri)
  fullName: System.Net.WebRequest.Create(System.Uri)
  type: Method
  source:
    remote:
      path: src/System.Net.Requests/ref/System.Net.Requests.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: Create
    path: src/System.Net.Requests/ref/System.Net.Requests.cs
    startLine: 104
  assemblies:
  - System.Net.Requests
  namespace: System.Net
  summary: "\n<p>Initializes a new <xref href=\"System.Net.WebRequest\" data-throw-if-not-resolved=\"false\"></xref> instance for the specified URI scheme.</p>\n"
  syntax:
    content: public static WebRequest Create(Uri requestUri)
    content.vb: Public Shared Function Create(requestUri As Uri) As WebRequest
    parameters:
    - id: requestUri
      type: System.Uri
      description: "\n<p>A <xref href=\"System.Uri\" data-throw-if-not-resolved=\"false\"></xref> containing the URI of the requested resource. </p>\n"
    return:
      type: System.Net.WebRequest
      description: "\n<p>A <xref href=\"System.Net.WebRequest\" data-throw-if-not-resolved=\"false\"></xref> descendant for the specified URI scheme.</p>\n"
  exceptions:
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "\n<p>The request scheme specified in <em>requestUri</em> is not registered. </p>\n"
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "\n<p>\n<em>requestUri</em> is <strong>null</strong>. </p>\n"
  - type: System.Security.SecurityException
    commentId: T:System.Security.SecurityException
    description: "\n<p>The caller does not have permission to connect to the requested URI or a URI that the request is redirected to. </p>\n"
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  nameWithType: WebRequest.Create(Uri)
- uid: System.Net.WebRequest.CreateHttp(System.String)
  commentId: M:System.Net.WebRequest.CreateHttp(System.String)
  id: CreateHttp(System.String)
  parent: System.Net.WebRequest
  langs:
  - csharp
  - vb
  name: CreateHttp(String)
  fullName: System.Net.WebRequest.CreateHttp(System.String)
  type: Method
  source:
    remote:
      path: src/System.Net.Requests/ref/System.Net.Requests.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: CreateHttp
    path: src/System.Net.Requests/ref/System.Net.Requests.cs
    startLine: 105
  assemblies:
  - System.Net.Requests
  namespace: System.Net
  summary: "\n<p>Initializes a new <xref href=\"System.Net.HttpWebRequest\" data-throw-if-not-resolved=\"false\"></xref> instance for the specified URI string.</p>\n"
  syntax:
    content: public static HttpWebRequest CreateHttp(string requestUriString)
    content.vb: Public Shared Function CreateHttp(requestUriString As String) As HttpWebRequest
    parameters:
    - id: requestUriString
      type: System.String
      description: "\n<p>A URI string that identifies the Internet resource. </p>\n"
    return:
      type: System.Net.HttpWebRequest
      description: "\n<p>Returns <xref href=\"System.Net.HttpWebRequest\" data-throw-if-not-resolved=\"false\"></xref>.</p>\n<p>An <xref href=\"System.Net.HttpWebRequest\" data-throw-if-not-resolved=\"false\"></xref>  instance for the specific URI string.</p>\n"
  exceptions:
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "\n<p>The request scheme specified in <em>requestUriString</em> is the http or https scheme. </p>\n"
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "\n<p>\n<em>requestUriString</em> is <strong>null</strong>. </p>\n"
  - type: System.Security.SecurityException
    commentId: T:System.Security.SecurityException
    description: "\n<p>The caller does not have permission to connect to the requested URI or a URI that the request is redirected to. </p>\n"
  - type: System.UriFormatException
    commentId: T:System.UriFormatException
    description: "\n<p>The URI specified in <em>requestUriString</em> is not a valid URI. </p>\n"
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  nameWithType: WebRequest.CreateHttp(String)
- uid: System.Net.WebRequest.CreateHttp(System.Uri)
  commentId: M:System.Net.WebRequest.CreateHttp(System.Uri)
  id: CreateHttp(System.Uri)
  parent: System.Net.WebRequest
  langs:
  - csharp
  - vb
  name: CreateHttp(Uri)
  fullName: System.Net.WebRequest.CreateHttp(System.Uri)
  type: Method
  source:
    remote:
      path: src/System.Net.Requests/ref/System.Net.Requests.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: CreateHttp
    path: src/System.Net.Requests/ref/System.Net.Requests.cs
    startLine: 106
  assemblies:
  - System.Net.Requests
  namespace: System.Net
  summary: "\n<p>Initializes a new <xref href=\"System.Net.HttpWebRequest\" data-throw-if-not-resolved=\"false\"></xref> instance for the specified URI.</p>\n"
  syntax:
    content: public static HttpWebRequest CreateHttp(Uri requestUri)
    content.vb: Public Shared Function CreateHttp(requestUri As Uri) As HttpWebRequest
    parameters:
    - id: requestUri
      type: System.Uri
      description: "\n<p>A URI that identifies the Internet resource.</p>\n"
    return:
      type: System.Net.HttpWebRequest
      description: "\n<p>Returns <xref href=\"System.Net.HttpWebRequest\" data-throw-if-not-resolved=\"false\"></xref>.</p>\n<p>An <xref href=\"System.Net.HttpWebRequest\" data-throw-if-not-resolved=\"false\"></xref> instance for the specific URI string.</p>\n"
  exceptions:
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "\n<p>The request scheme specified in <em>requestUri</em> is the http or https scheme. </p>\n"
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "\n<p>\n<em>requestUri</em> is <strong>null</strong>. </p>\n"
  - type: System.Security.SecurityException
    commentId: T:System.Security.SecurityException
    description: "\n<p>The caller does not have permission to connect to the requested URI or a URI that the request is redirected to. </p>\n"
  - type: System.UriFormatException
    commentId: T:System.UriFormatException
    description: "\n<p>The URI specified in <em>requestUri</em> is not a valid URI. </p>\n"
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  nameWithType: WebRequest.CreateHttp(Uri)
- uid: System.Net.WebRequest.EndGetRequestStream(System.IAsyncResult)
  commentId: M:System.Net.WebRequest.EndGetRequestStream(System.IAsyncResult)
  id: EndGetRequestStream(System.IAsyncResult)
  parent: System.Net.WebRequest
  langs:
  - csharp
  - vb
  name: EndGetRequestStream(IAsyncResult)
  fullName: System.Net.WebRequest.EndGetRequestStream(System.IAsyncResult)
  type: Method
  source:
    remote:
      path: src/System.Net.Requests/ref/System.Net.Requests.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: EndGetRequestStream
    path: src/System.Net.Requests/ref/System.Net.Requests.cs
    startLine: 107
  assemblies:
  - System.Net.Requests
  namespace: System.Net
  summary: "\n<p>When overridden in a descendant class, returns a <xref href=\"System.IO.Stream\" data-throw-if-not-resolved=\"false\"></xref> for writing data to the Internet resource.</p>\n"
  syntax:
    content: public abstract Stream EndGetRequestStream(IAsyncResult asyncResult)
    content.vb: Public MustOverride Function EndGetRequestStream(asyncResult As IAsyncResult) As Stream
    parameters:
    - id: asyncResult
      type: System.IAsyncResult
      description: "\n<p>An <xref href=\"System.IAsyncResult\" data-throw-if-not-resolved=\"false\"></xref> that references a pending request for a stream. </p>\n"
    return:
      type: System.IO.Stream
      description: "\n<p>A <xref href=\"System.IO.Stream\" data-throw-if-not-resolved=\"false\"></xref> to write data to.</p>\n"
  exceptions:
  - type: System.NotImplementedException
    commentId: T:System.NotImplementedException
    description: "\n<p>Any attempt is made to access the method, when the method is not overridden in a descendant class. </p>\n"
  seealso:
  - type: System.Net.WebRequest.BeginGetRequestStream(System.AsyncCallback,System.Object)
    commentId: M:System.Net.WebRequest.BeginGetRequestStream(System.AsyncCallback,System.Object)
  modifiers.csharp:
  - public
  - abstract
  modifiers.vb:
  - Public
  - MustOverride
  nameWithType: WebRequest.EndGetRequestStream(IAsyncResult)
- uid: System.Net.WebRequest.EndGetResponse(System.IAsyncResult)
  commentId: M:System.Net.WebRequest.EndGetResponse(System.IAsyncResult)
  id: EndGetResponse(System.IAsyncResult)
  parent: System.Net.WebRequest
  langs:
  - csharp
  - vb
  name: EndGetResponse(IAsyncResult)
  fullName: System.Net.WebRequest.EndGetResponse(System.IAsyncResult)
  type: Method
  source:
    remote:
      path: src/System.Net.Requests/ref/System.Net.Requests.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: EndGetResponse
    path: src/System.Net.Requests/ref/System.Net.Requests.cs
    startLine: 108
  assemblies:
  - System.Net.Requests
  namespace: System.Net
  summary: "\n<p>When overridden in a descendant class, returns a <xref href=\"System.Net.WebResponse\" data-throw-if-not-resolved=\"false\"></xref>.</p>\n"
  syntax:
    content: public abstract WebResponse EndGetResponse(IAsyncResult asyncResult)
    content.vb: Public MustOverride Function EndGetResponse(asyncResult As IAsyncResult) As WebResponse
    parameters:
    - id: asyncResult
      type: System.IAsyncResult
      description: "\n<p>An <xref href=\"System.IAsyncResult\" data-throw-if-not-resolved=\"false\"></xref> that references a pending request for a response. </p>\n"
    return:
      type: System.Net.WebResponse
      description: "\n<p>A <xref href=\"System.Net.WebResponse\" data-throw-if-not-resolved=\"false\"></xref> that contains a response to the Internet request.</p>\n"
  exceptions:
  - type: System.NotImplementedException
    commentId: T:System.NotImplementedException
    description: "\n<p>Any attempt is made to access the method, when the method is not overridden in a descendant class. </p>\n"
  seealso:
  - type: System.Net.WebRequest.BeginGetResponse(System.AsyncCallback,System.Object)
    commentId: M:System.Net.WebRequest.BeginGetResponse(System.AsyncCallback,System.Object)
  modifiers.csharp:
  - public
  - abstract
  modifiers.vb:
  - Public
  - MustOverride
  nameWithType: WebRequest.EndGetResponse(IAsyncResult)
- uid: System.Net.WebRequest.GetRequestStreamAsync
  commentId: M:System.Net.WebRequest.GetRequestStreamAsync
  id: GetRequestStreamAsync
  parent: System.Net.WebRequest
  langs:
  - csharp
  - vb
  name: GetRequestStreamAsync()
  fullName: System.Net.WebRequest.GetRequestStreamAsync()
  type: Method
  source:
    remote:
      path: src/System.Net.Requests/ref/System.Net.Requests.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: GetRequestStreamAsync
    path: src/System.Net.Requests/ref/System.Net.Requests.cs
    startLine: 109
  assemblies:
  - System.Net.Requests
  namespace: System.Net
  summary: "\n<p>When overridden in a descendant class, returns a <xref href=\"System.IO.Stream\" data-throw-if-not-resolved=\"false\"></xref> for writing data to the Internet resource as an asynchronous operation.</p>\n"
  syntax:
    content: public virtual Task<Stream> GetRequestStreamAsync()
    content.vb: Public Overridable Function GetRequestStreamAsync As Task(Of Stream)
    return:
      type: System.Threading.Tasks.Task{System.IO.Stream}
      description: "\n<p>Returns <xref href=\"System.Threading.Tasks.Task`1\" data-throw-if-not-resolved=\"false\"></xref>.</p>\n<p>The task object representing the asynchronous operation.</p>\n"
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
  nameWithType: WebRequest.GetRequestStreamAsync()
- uid: System.Net.WebRequest.GetResponseAsync
  commentId: M:System.Net.WebRequest.GetResponseAsync
  id: GetResponseAsync
  parent: System.Net.WebRequest
  langs:
  - csharp
  - vb
  name: GetResponseAsync()
  fullName: System.Net.WebRequest.GetResponseAsync()
  type: Method
  source:
    remote:
      path: src/System.Net.Requests/ref/System.Net.Requests.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: GetResponseAsync
    path: src/System.Net.Requests/ref/System.Net.Requests.cs
    startLine: 110
  assemblies:
  - System.Net.Requests
  namespace: System.Net
  summary: "\n<p>When overridden in a descendant class, returns a response to an Internet request as an asynchronous operation.</p>\n"
  syntax:
    content: public virtual Task<WebResponse> GetResponseAsync()
    content.vb: Public Overridable Function GetResponseAsync As Task(Of WebResponse)
    return:
      type: System.Threading.Tasks.Task{System.Net.WebResponse}
      description: "\n<p>Returns <xref href=\"System.Threading.Tasks.Task`1\" data-throw-if-not-resolved=\"false\"></xref>.</p>\n<p>The task object representing the asynchronous operation.</p>\n"
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
  nameWithType: WebRequest.GetResponseAsync()
- uid: System.Net.WebRequest.RegisterPrefix(System.String,System.Net.IWebRequestCreate)
  commentId: M:System.Net.WebRequest.RegisterPrefix(System.String,System.Net.IWebRequestCreate)
  id: RegisterPrefix(System.String,System.Net.IWebRequestCreate)
  parent: System.Net.WebRequest
  langs:
  - csharp
  - vb
  name: RegisterPrefix(String, IWebRequestCreate)
  fullName: System.Net.WebRequest.RegisterPrefix(System.String, System.Net.IWebRequestCreate)
  type: Method
  source:
    remote:
      path: src/System.Net.Requests/ref/System.Net.Requests.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: RegisterPrefix
    path: src/System.Net.Requests/ref/System.Net.Requests.cs
    startLine: 111
  assemblies:
  - System.Net.Requests
  namespace: System.Net
  summary: "\n<p>Registers a <xref href=\"System.Net.WebRequest\" data-throw-if-not-resolved=\"false\"></xref> descendant for the specified URI.</p>\n"
  syntax:
    content: public static bool RegisterPrefix(string prefix, IWebRequestCreate creator)
    content.vb: Public Shared Function RegisterPrefix(prefix As String, creator As IWebRequestCreate) As Boolean
    parameters:
    - id: prefix
      type: System.String
      description: "\n<p>The complete URI or URI prefix that the <xref href=\"System.Net.WebRequest\" data-throw-if-not-resolved=\"false\"></xref> descendant services. </p>\n"
    - id: creator
      type: System.Net.IWebRequestCreate
      description: "\n<p>The create method that the <xref href=\"System.Net.WebRequest\" data-throw-if-not-resolved=\"false\"></xref> calls to create the <xref href=\"System.Net.WebRequest\" data-throw-if-not-resolved=\"false\"></xref> descendant. </p>\n"
    return:
      type: System.Boolean
      description: "\n<p>\n<strong>true</strong> if registration is successful; otherwise, <strong>false</strong>.</p>\n"
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "\n<p>\n<em>prefix</em> is <strong>null</strong></p>\n<p>-or- </p>\n<p>\n<em>creator</em> is <strong>null</strong>. </p>\n"
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  nameWithType: WebRequest.RegisterPrefix(String, IWebRequestCreate)
references:
- uid: System.Net
  isExternal: false
  name: System.Net
  fullName: System.Net
  commentId: N:System.Net
  nameWithType: System.Net
- uid: System.Object
  parent: System
  isExternal: false
  name: Object
  fullName: System.Object
  commentId: T:System.Object
  nameWithType: Object
- uid: System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  commentId: M:System.Object.ToString
  nameWithType: Object.ToString()
- uid: System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
  commentId: M:System.Object.Equals(System.Object)
  nameWithType: Object.Equals(Object)
- uid: System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
  commentId: M:System.Object.Equals(System.Object,System.Object)
  nameWithType: Object.Equals(Object, Object)
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
- uid: System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  commentId: M:System.Object.GetHashCode
  nameWithType: Object.GetHashCode()
- uid: System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  commentId: M:System.Object.GetType
  nameWithType: Object.GetType()
- uid: System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  commentId: M:System.Object.MemberwiseClone
  nameWithType: Object.MemberwiseClone()
- uid: System
  isExternal: false
  name: System
  fullName: System
  commentId: N:System
  nameWithType: System
- uid: System.String
  parent: System
  isExternal: false
  name: String
  fullName: System.String
  commentId: T:System.String
  nameWithType: String
- uid: System.Net.ICredentials
  parent: System.Net
  isExternal: false
  name: ICredentials
  fullName: System.Net.ICredentials
  commentId: T:System.Net.ICredentials
  nameWithType: ICredentials
- uid: System.Net.IWebProxy
  isExternal: false
  name: IWebProxy
  fullName: System.Net.IWebProxy
  commentId: T:System.Net.IWebProxy
  nameWithType: IWebProxy
- uid: System.Net.WebHeaderCollection
  isExternal: false
  name: Net.WebHeaderCollection
  fullName: System.Net.WebHeaderCollection
  commentId: T:System.Net.WebHeaderCollection
  nameWithType: Net.WebHeaderCollection
- uid: System.Uri
  parent: System
  isExternal: false
  name: Uri
  fullName: System.Uri
  commentId: T:System.Uri
  nameWithType: Uri
- uid: System.Boolean
  parent: System
  isExternal: false
  name: Boolean
  fullName: System.Boolean
  commentId: T:System.Boolean
  nameWithType: Boolean
- uid: System.AsyncCallback
  parent: System
  isExternal: false
  name: AsyncCallback
  fullName: System.AsyncCallback
  commentId: T:System.AsyncCallback
  nameWithType: AsyncCallback
- uid: System.IAsyncResult
  parent: System
  isExternal: false
  name: IAsyncResult
  fullName: System.IAsyncResult
  commentId: T:System.IAsyncResult
  nameWithType: IAsyncResult
- uid: System.Net.WebRequest
  parent: System.Net
  isExternal: false
  name: WebRequest
  fullName: System.Net.WebRequest
  commentId: T:System.Net.WebRequest
  nameWithType: WebRequest
- uid: System.Net.HttpWebRequest
  parent: System.Net
  isExternal: false
  name: HttpWebRequest
  fullName: System.Net.HttpWebRequest
  commentId: T:System.Net.HttpWebRequest
  nameWithType: HttpWebRequest
- uid: System.IO.Stream
  parent: System.IO
  isExternal: false
  name: Stream
  fullName: System.IO.Stream
  commentId: T:System.IO.Stream
  nameWithType: Stream
- uid: System.IO
  isExternal: false
  name: System.IO
  fullName: System.IO
  commentId: N:System.IO
  nameWithType: System.IO
- uid: System.Net.WebResponse
  parent: System.Net
  isExternal: false
  name: WebResponse
  fullName: System.Net.WebResponse
  commentId: T:System.Net.WebResponse
  nameWithType: WebResponse
- uid: System.Threading.Tasks.Task{System.IO.Stream}
  parent: System.Threading.Tasks
  definition: System.Threading.Tasks.Task`1
  name: Task<Stream>
  fullName: System.Threading.Tasks.Task<System.IO.Stream>
  fullname.vb: System.Threading.Tasks.Task(Of System.IO.Stream)
  name.vb: Task(Of Stream)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    fullName: <
  - uid: System.IO.Stream
    name: Stream
    fullName: System.IO.Stream
    isExternal: true
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - uid: System.IO.Stream
    name: Stream
    fullName: System.IO.Stream
    isExternal: true
  - name: )
    fullName: )
  commentId: T:System.Threading.Tasks.Task{System.IO.Stream}
  nameWithType: Task<Stream>
  nameWithType.vb: Task(Of Stream)
- uid: System.Threading.Tasks.Task`1
  isExternal: false
  name: Task<TResult>
  fullName: System.Threading.Tasks.Task<TResult>
  fullname.vb: System.Threading.Tasks.Task(Of TResult)
  name.vb: Task(Of TResult)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    fullName: System.Threading.Tasks.Task
  - name: <
    fullName: <
  - name: TResult
    fullName: TResult
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    fullName: System.Threading.Tasks.Task
  - name: '(Of '
    fullName: '(Of '
  - name: TResult
    fullName: TResult
  - name: )
    fullName: )
  commentId: T:System.Threading.Tasks.Task`1
  nameWithType: Task<TResult>
  nameWithType.vb: Task(Of TResult)
- uid: System.Threading.Tasks
  isExternal: false
  name: System.Threading.Tasks
  fullName: System.Threading.Tasks
  commentId: N:System.Threading.Tasks
  nameWithType: System.Threading.Tasks
- uid: System.Threading.Tasks.Task{System.Net.WebResponse}
  parent: System.Threading.Tasks
  definition: System.Threading.Tasks.Task`1
  name: Task<WebResponse>
  fullName: System.Threading.Tasks.Task<System.Net.WebResponse>
  fullname.vb: System.Threading.Tasks.Task(Of System.Net.WebResponse)
  name.vb: Task(Of WebResponse)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    fullName: <
  - uid: System.Net.WebResponse
    name: WebResponse
    fullName: System.Net.WebResponse
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - uid: System.Net.WebResponse
    name: WebResponse
    fullName: System.Net.WebResponse
  - name: )
    fullName: )
  commentId: T:System.Threading.Tasks.Task{System.Net.WebResponse}
  nameWithType: Task<WebResponse>
  nameWithType.vb: Task(Of WebResponse)
- uid: System.Net.IWebRequestCreate
  parent: System.Net
  isExternal: false
  name: IWebRequestCreate
  fullName: System.Net.IWebRequestCreate
  commentId: T:System.Net.IWebRequestCreate
  nameWithType: IWebRequestCreate
- uid: System.NotImplementedException
  isExternal: false
  name: NotImplementedException
  fullName: System.NotImplementedException
  nameWithType: NotImplementedException
  commentId: T:System.NotImplementedException
- uid: System.InvalidOperationException
  parent: System
  isExternal: false
  name: InvalidOperationException
  fullName: System.InvalidOperationException
  nameWithType: InvalidOperationException
  commentId: T:System.InvalidOperationException
- uid: System.NotSupportedException
  parent: System
  isExternal: false
  name: NotSupportedException
  fullName: System.NotSupportedException
  nameWithType: NotSupportedException
  commentId: T:System.NotSupportedException
- uid: System.ArgumentNullException
  isExternal: false
  name: ArgumentNullException
  fullName: System.ArgumentNullException
  nameWithType: ArgumentNullException
  commentId: T:System.ArgumentNullException
- uid: System.Security.SecurityException
  isExternal: false
  name: SecurityException
  fullName: System.Security.SecurityException
  nameWithType: SecurityException
  commentId: T:System.Security.SecurityException
- uid: System.UriFormatException
  isExternal: false
  name: UriFormatException
  fullName: System.UriFormatException
  nameWithType: UriFormatException
  commentId: T:System.UriFormatException
