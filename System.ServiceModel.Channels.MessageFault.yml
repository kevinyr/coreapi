### YamlMime:ManagedReference
items:
- uid: System.ServiceModel.Channels.MessageFault
  commentId: T:System.ServiceModel.Channels.MessageFault
  id: MessageFault
  parent: System.ServiceModel.Channels
  children:
  - System.ServiceModel.Channels.MessageFault.#ctor
  - System.ServiceModel.Channels.MessageFault.Actor
  - System.ServiceModel.Channels.MessageFault.Code
  - System.ServiceModel.Channels.MessageFault.CreateFault(System.ServiceModel.Channels.Message,System.Int32)
  - System.ServiceModel.Channels.MessageFault.GetDetail``1
  - System.ServiceModel.Channels.MessageFault.GetDetail``1(System.Runtime.Serialization.XmlObjectSerializer)
  - System.ServiceModel.Channels.MessageFault.GetReaderAtDetailContents
  - System.ServiceModel.Channels.MessageFault.HasDetail
  - System.ServiceModel.Channels.MessageFault.Node
  - System.ServiceModel.Channels.MessageFault.OnGetReaderAtDetailContents
  - System.ServiceModel.Channels.MessageFault.OnWriteDetail(System.Xml.XmlDictionaryWriter,System.ServiceModel.EnvelopeVersion)
  - System.ServiceModel.Channels.MessageFault.OnWriteDetailContents(System.Xml.XmlDictionaryWriter)
  - System.ServiceModel.Channels.MessageFault.OnWriteStartDetail(System.Xml.XmlDictionaryWriter,System.ServiceModel.EnvelopeVersion)
  - System.ServiceModel.Channels.MessageFault.Reason
  langs:
  - csharp
  - vb
  name: MessageFault
  nameWithType: MessageFault
  fullName: System.ServiceModel.Channels.MessageFault
  type: Class
  source:
    remote:
      path: src/System.ServiceModel.Primitives/ref/System.ServiceModel.Primitives.cs
      branch: master
      repo: https://github.com/dotnet/wcf.git
    id: MessageFault
    path: src/System.ServiceModel.Primitives/ref/System.ServiceModel.Primitives.cs
    startLine: 980
  assemblies:
  - System.ServiceModel.Primitives
  namespace: System.ServiceModel.Channels
  summary: "\n<p>Represents an in-memory representation of a SOAP fault that can be passed to <xref href=\"System.ServiceModel.Channels.Message.CreateMessage\" data-throw-if-not-resolved=\"false\"></xref> to create a message that contains a fault. </p>\n"
  syntax:
    content: public abstract class MessageFault
    content.vb: Public MustInherit Class MessageFault
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  modifiers.csharp:
  - public
  - abstract
  - class
  modifiers.vb:
  - Public
  - MustInherit
  - Class
- uid: System.ServiceModel.Channels.MessageFault.#ctor
  commentId: M:System.ServiceModel.Channels.MessageFault.#ctor
  id: '#ctor'
  parent: System.ServiceModel.Channels.MessageFault
  langs:
  - csharp
  - vb
  name: MessageFault()
  nameWithType: MessageFault.MessageFault()
  fullName: System.ServiceModel.Channels.MessageFault.MessageFault()
  type: Constructor
  source:
    remote:
      path: src/System.ServiceModel.Primitives/ref/System.ServiceModel.Primitives.cs
      branch: master
      repo: https://github.com/dotnet/wcf.git
    id: .ctor
    path: src/System.ServiceModel.Primitives/ref/System.ServiceModel.Primitives.cs
    startLine: 982
  assemblies:
  - System.ServiceModel.Primitives
  namespace: System.ServiceModel.Channels
  summary: "\n<p>When called in a derived class, initializes a new instance of the <xref href=\"System.ServiceModel.Channels.MessageFault\" data-throw-if-not-resolved=\"false\"></xref> class.  </p>\n"
  syntax:
    content: protected MessageFault()
    content.vb: Protected Sub New
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: System.ServiceModel.Channels.MessageFault.Actor
  commentId: P:System.ServiceModel.Channels.MessageFault.Actor
  id: Actor
  parent: System.ServiceModel.Channels.MessageFault
  langs:
  - csharp
  - vb
  name: Actor
  nameWithType: MessageFault.Actor
  fullName: System.ServiceModel.Channels.MessageFault.Actor
  type: Property
  source:
    remote:
      path: src/System.ServiceModel.Primitives/ref/System.ServiceModel.Primitives.cs
      branch: master
      repo: https://github.com/dotnet/wcf.git
    id: Actor
    path: src/System.ServiceModel.Primitives/ref/System.ServiceModel.Primitives.cs
    startLine: 983
  assemblies:
  - System.ServiceModel.Primitives
  namespace: System.ServiceModel.Channels
  summary: "\n<p>Gets or sets the value of the actor.</p>\n"
  syntax:
    content: public virtual string Actor { get; }
    content.vb: Public Overridable ReadOnly Property Actor As String
    parameters: []
    return:
      type: System.String
      description: "\n<p>The value of the actor.</p>\n"
  modifiers.csharp:
  - public
  - virtual
  - get
  modifiers.vb:
  - Public
  - Overridable
  - ReadOnly
- uid: System.ServiceModel.Channels.MessageFault.Code
  commentId: P:System.ServiceModel.Channels.MessageFault.Code
  id: Code
  parent: System.ServiceModel.Channels.MessageFault
  langs:
  - csharp
  - vb
  name: Code
  nameWithType: MessageFault.Code
  fullName: System.ServiceModel.Channels.MessageFault.Code
  type: Property
  source:
    remote:
      path: src/System.ServiceModel.Primitives/ref/System.ServiceModel.Primitives.cs
      branch: master
      repo: https://github.com/dotnet/wcf.git
    id: Code
    path: src/System.ServiceModel.Primitives/ref/System.ServiceModel.Primitives.cs
    startLine: 984
  assemblies:
  - System.ServiceModel.Primitives
  namespace: System.ServiceModel.Channels
  summary: "\n<p>Gets the SOAP fault code. </p>\n"
  syntax:
    content: public abstract FaultCode Code { get; }
    content.vb: Public MustOverride ReadOnly Property Code As FaultCode
    parameters: []
    return:
      type: System.ServiceModel.FaultCode
      description: "\n<p>A <xref href=\"System.ServiceModel.FaultCode\" data-throw-if-not-resolved=\"false\"></xref> that contains the SOAP fault code.</p>\n"
  modifiers.csharp:
  - public
  - abstract
  - get
  modifiers.vb:
  - Public
  - MustOverride
  - ReadOnly
- uid: System.ServiceModel.Channels.MessageFault.HasDetail
  commentId: P:System.ServiceModel.Channels.MessageFault.HasDetail
  id: HasDetail
  parent: System.ServiceModel.Channels.MessageFault
  langs:
  - csharp
  - vb
  name: HasDetail
  nameWithType: MessageFault.HasDetail
  fullName: System.ServiceModel.Channels.MessageFault.HasDetail
  type: Property
  source:
    remote:
      path: src/System.ServiceModel.Primitives/ref/System.ServiceModel.Primitives.cs
      branch: master
      repo: https://github.com/dotnet/wcf.git
    id: HasDetail
    path: src/System.ServiceModel.Primitives/ref/System.ServiceModel.Primitives.cs
    startLine: 985
  assemblies:
  - System.ServiceModel.Primitives
  namespace: System.ServiceModel.Channels
  summary: "\n<p>Gets a value that indicates whether the <xref href=\"System.ServiceModel.Channels.MessageFault\" data-throw-if-not-resolved=\"false\"></xref> has a detail object.</p>\n"
  syntax:
    content: public abstract bool HasDetail { get; }
    content.vb: Public MustOverride ReadOnly Property HasDetail As Boolean
    parameters: []
    return:
      type: System.Boolean
      description: "\n<p>\n<strong>true</strong> if the <xref href=\"System.ServiceModel.Channels.MessageFault\" data-throw-if-not-resolved=\"false\"></xref> has a detail object; otherwise, <strong>false</strong>.</p>\n"
  modifiers.csharp:
  - public
  - abstract
  - get
  modifiers.vb:
  - Public
  - MustOverride
  - ReadOnly
- uid: System.ServiceModel.Channels.MessageFault.Node
  commentId: P:System.ServiceModel.Channels.MessageFault.Node
  id: Node
  parent: System.ServiceModel.Channels.MessageFault
  langs:
  - csharp
  - vb
  name: Node
  nameWithType: MessageFault.Node
  fullName: System.ServiceModel.Channels.MessageFault.Node
  type: Property
  source:
    remote:
      path: src/System.ServiceModel.Primitives/ref/System.ServiceModel.Primitives.cs
      branch: master
      repo: https://github.com/dotnet/wcf.git
    id: Node
    path: src/System.ServiceModel.Primitives/ref/System.ServiceModel.Primitives.cs
    startLine: 986
  assemblies:
  - System.ServiceModel.Primitives
  namespace: System.ServiceModel.Channels
  summary: "\n<p>Gets the SOAP node containing information about which SOAP node on a message path cause the fault.</p>\n"
  syntax:
    content: public virtual string Node { get; }
    content.vb: Public Overridable ReadOnly Property Node As String
    parameters: []
    return:
      type: System.String
      description: "\n<p>The SOAP node containing information about which SOAP node on a message path cause the fault.</p>\n"
  modifiers.csharp:
  - public
  - virtual
  - get
  modifiers.vb:
  - Public
  - Overridable
  - ReadOnly
- uid: System.ServiceModel.Channels.MessageFault.Reason
  commentId: P:System.ServiceModel.Channels.MessageFault.Reason
  id: Reason
  parent: System.ServiceModel.Channels.MessageFault
  langs:
  - csharp
  - vb
  name: Reason
  nameWithType: MessageFault.Reason
  fullName: System.ServiceModel.Channels.MessageFault.Reason
  type: Property
  source:
    remote:
      path: src/System.ServiceModel.Primitives/ref/System.ServiceModel.Primitives.cs
      branch: master
      repo: https://github.com/dotnet/wcf.git
    id: Reason
    path: src/System.ServiceModel.Primitives/ref/System.ServiceModel.Primitives.cs
    startLine: 987
  assemblies:
  - System.ServiceModel.Primitives
  namespace: System.ServiceModel.Channels
  summary: "\n<p>Gets a textual description of a SOAP fault. </p>\n"
  syntax:
    content: public abstract FaultReason Reason { get; }
    content.vb: Public MustOverride ReadOnly Property Reason As FaultReason
    parameters: []
    return:
      type: System.ServiceModel.FaultReason
      description: "\n<p>A <xref href=\"System.ServiceModel.FaultReason\" data-throw-if-not-resolved=\"false\"></xref> that contains a textual description of a SOAP fault.</p>\n"
  modifiers.csharp:
  - public
  - abstract
  - get
  modifiers.vb:
  - Public
  - MustOverride
  - ReadOnly
- uid: System.ServiceModel.Channels.MessageFault.CreateFault(System.ServiceModel.Channels.Message,System.Int32)
  commentId: M:System.ServiceModel.Channels.MessageFault.CreateFault(System.ServiceModel.Channels.Message,System.Int32)
  id: CreateFault(System.ServiceModel.Channels.Message,System.Int32)
  parent: System.ServiceModel.Channels.MessageFault
  langs:
  - csharp
  - vb
  name: CreateFault(Message, Int32)
  nameWithType: MessageFault.CreateFault(Message, Int32)
  fullName: System.ServiceModel.Channels.MessageFault.CreateFault(System.ServiceModel.Channels.Message, System.Int32)
  type: Method
  source:
    remote:
      path: src/System.ServiceModel.Primitives/ref/System.ServiceModel.Primitives.cs
      branch: master
      repo: https://github.com/dotnet/wcf.git
    id: CreateFault
    path: src/System.ServiceModel.Primitives/ref/System.ServiceModel.Primitives.cs
    startLine: 988
  assemblies:
  - System.ServiceModel.Primitives
  namespace: System.ServiceModel.Channels
  summary: "\n<p>Returns a new <xref href=\"System.ServiceModel.Channels.MessageFault\" data-throw-if-not-resolved=\"false\"></xref> object that uses the specified <xref href=\"System.ServiceModel.Channels.Message\" data-throw-if-not-resolved=\"false\"></xref> and the specified maximum buffer size for the message buffer.</p>\n"
  syntax:
    content: public static MessageFault CreateFault(Message message, int maxBufferSize)
    content.vb: Public Shared Function CreateFault(message As Message, maxBufferSize As Integer) As MessageFault
    parameters:
    - id: message
      type: System.ServiceModel.Channels.Message
      description: "\n<p>The specified <xref href=\"System.ServiceModel.Channels.Message\" data-throw-if-not-resolved=\"false\"></xref> to be used to create the <xref href=\"System.ServiceModel.Channels.MessageFault\" data-throw-if-not-resolved=\"false\"></xref> object.</p>\n"
    - id: maxBufferSize
      type: System.Int32
      description: "\n<p>The specified maximum buffer size for the message buffer</p>\n"
    return:
      type: System.ServiceModel.Channels.MessageFault
      description: "\n<p>A <xref href=\"System.ServiceModel.Channels.MessageFault\" data-throw-if-not-resolved=\"false\"></xref> object with initial values from the passed in parameters.</p>\n"
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: System.ServiceModel.Channels.MessageFault.GetDetail``1
  commentId: M:System.ServiceModel.Channels.MessageFault.GetDetail``1
  id: GetDetail``1
  parent: System.ServiceModel.Channels.MessageFault
  langs:
  - csharp
  - vb
  name: GetDetail<T>()
  nameWithType: MessageFault.GetDetail<T>()
  fullName: System.ServiceModel.Channels.MessageFault.GetDetail<T>()
  type: Method
  source:
    remote:
      path: src/System.ServiceModel.Primitives/ref/System.ServiceModel.Primitives.cs
      branch: master
      repo: https://github.com/dotnet/wcf.git
    id: GetDetail
    path: src/System.ServiceModel.Primitives/ref/System.ServiceModel.Primitives.cs
    startLine: 989
  assemblies:
  - System.ServiceModel.Primitives
  namespace: System.ServiceModel.Channels
  summary: "\n<p>Returns the detail object of the message fault.</p>\n"
  syntax:
    content: public T GetDetail<T>()
    content.vb: Public Function GetDetail(Of T) As T
    typeParameters:
    - id: T
      description: "\n<p>The type of the detail object.</p>\n"
    return:
      type: '{T}'
      description: "\n<p>The detail object of the message fault.</p>\n"
  nameWithType.vb: MessageFault.GetDetail(Of T)()
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: System.ServiceModel.Channels.MessageFault.GetDetail(Of T)()
  name.vb: GetDetail(Of T)()
- uid: System.ServiceModel.Channels.MessageFault.GetDetail``1(System.Runtime.Serialization.XmlObjectSerializer)
  commentId: M:System.ServiceModel.Channels.MessageFault.GetDetail``1(System.Runtime.Serialization.XmlObjectSerializer)
  id: GetDetail``1(System.Runtime.Serialization.XmlObjectSerializer)
  parent: System.ServiceModel.Channels.MessageFault
  langs:
  - csharp
  - vb
  name: GetDetail<T>(XmlObjectSerializer)
  nameWithType: MessageFault.GetDetail<T>(XmlObjectSerializer)
  fullName: System.ServiceModel.Channels.MessageFault.GetDetail<T>(System.Runtime.Serialization.XmlObjectSerializer)
  type: Method
  source:
    remote:
      path: src/System.ServiceModel.Primitives/ref/System.ServiceModel.Primitives.cs
      branch: master
      repo: https://github.com/dotnet/wcf.git
    id: GetDetail
    path: src/System.ServiceModel.Primitives/ref/System.ServiceModel.Primitives.cs
    startLine: 990
  assemblies:
  - System.ServiceModel.Primitives
  namespace: System.ServiceModel.Channels
  summary: "\n<p>Returns the detail object that uses the specified <xref href=\"System.Runtime.Serialization.XmlObjectSerializer\" data-throw-if-not-resolved=\"false\"></xref>.</p>\n"
  syntax:
    content: public T GetDetail<T>(XmlObjectSerializer serializer)
    content.vb: Public Function GetDetail(Of T)(serializer As XmlObjectSerializer) As T
    parameters:
    - id: serializer
      type: System.Runtime.Serialization.XmlObjectSerializer
      description: "\n<p>The <xref href=\"System.Runtime.Serialization.XmlObjectSerializer\" data-throw-if-not-resolved=\"false\"></xref> to use when deserializing the detail object. </p>\n"
    typeParameters:
    - id: T
      description: "\n<p>The type of the detail object.</p>\n"
    return:
      type: '{T}'
      description: "\n<p>The detail object contained in the <xref href=\"System.ServiceModel.Channels.MessageFault\" data-throw-if-not-resolved=\"false\"></xref>.</p>\n"
  nameWithType.vb: MessageFault.GetDetail(Of T)(XmlObjectSerializer)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: System.ServiceModel.Channels.MessageFault.GetDetail(Of T)(System.Runtime.Serialization.XmlObjectSerializer)
  name.vb: GetDetail(Of T)(XmlObjectSerializer)
- uid: System.ServiceModel.Channels.MessageFault.GetReaderAtDetailContents
  commentId: M:System.ServiceModel.Channels.MessageFault.GetReaderAtDetailContents
  id: GetReaderAtDetailContents
  parent: System.ServiceModel.Channels.MessageFault
  langs:
  - csharp
  - vb
  name: GetReaderAtDetailContents()
  nameWithType: MessageFault.GetReaderAtDetailContents()
  fullName: System.ServiceModel.Channels.MessageFault.GetReaderAtDetailContents()
  type: Method
  source:
    remote:
      path: src/System.ServiceModel.Primitives/ref/System.ServiceModel.Primitives.cs
      branch: master
      repo: https://github.com/dotnet/wcf.git
    id: GetReaderAtDetailContents
    path: src/System.ServiceModel.Primitives/ref/System.ServiceModel.Primitives.cs
    startLine: 991
  assemblies:
  - System.ServiceModel.Primitives
  namespace: System.ServiceModel.Channels
  summary: "\n<p>Returns an <xref href=\"System.Xml.XmlDictionaryReader\" data-throw-if-not-resolved=\"false\"></xref> object that is positioned on the detail object of the <xref href=\"System.ServiceModel.Channels.MessageFault\" data-throw-if-not-resolved=\"false\"></xref>.</p>\n"
  syntax:
    content: public Xml.XmlDictionaryReader GetReaderAtDetailContents()
    content.vb: Public Function GetReaderAtDetailContents As Xml.XmlDictionaryReader
    return:
      type: System.Xml.XmlDictionaryReader
      description: "\n<p>An <xref href=\"System.Xml.XmlDictionaryReader\" data-throw-if-not-resolved=\"false\"></xref> object that is positioned on the detail object of the <xref href=\"System.ServiceModel.Channels.MessageFault\" data-throw-if-not-resolved=\"false\"></xref>.</p>\n"
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: System.ServiceModel.Channels.MessageFault.OnGetReaderAtDetailContents
  commentId: M:System.ServiceModel.Channels.MessageFault.OnGetReaderAtDetailContents
  id: OnGetReaderAtDetailContents
  parent: System.ServiceModel.Channels.MessageFault
  langs:
  - csharp
  - vb
  name: OnGetReaderAtDetailContents()
  nameWithType: MessageFault.OnGetReaderAtDetailContents()
  fullName: System.ServiceModel.Channels.MessageFault.OnGetReaderAtDetailContents()
  type: Method
  source:
    remote:
      path: src/System.ServiceModel.Primitives/ref/System.ServiceModel.Primitives.cs
      branch: master
      repo: https://github.com/dotnet/wcf.git
    id: OnGetReaderAtDetailContents
    path: src/System.ServiceModel.Primitives/ref/System.ServiceModel.Primitives.cs
    startLine: 992
  assemblies:
  - System.ServiceModel.Primitives
  namespace: System.ServiceModel.Channels
  summary: "\n<p>When called in a derived class, returns an <xref href=\"System.Xml.XmlDictionaryReader\" data-throw-if-not-resolved=\"false\"></xref> object that is positioned on the detail object of the <xref href=\"System.ServiceModel.Channels.MessageFault\" data-throw-if-not-resolved=\"false\"></xref>.</p>\n"
  syntax:
    content: protected virtual Xml.XmlDictionaryReader OnGetReaderAtDetailContents()
    content.vb: Protected Overridable Function OnGetReaderAtDetailContents As Xml.XmlDictionaryReader
    return:
      type: System.Xml.XmlDictionaryReader
      description: "\n<p>An <xref href=\"System.Xml.XmlDictionaryReader\" data-throw-if-not-resolved=\"false\"></xref> object that is positioned on the detail object of the <xref href=\"System.ServiceModel.Channels.MessageFault\" data-throw-if-not-resolved=\"false\"></xref>.</p>\n"
  modifiers.csharp:
  - protected
  - virtual
  modifiers.vb:
  - Protected
  - Overridable
- uid: System.ServiceModel.Channels.MessageFault.OnWriteDetail(System.Xml.XmlDictionaryWriter,System.ServiceModel.EnvelopeVersion)
  commentId: M:System.ServiceModel.Channels.MessageFault.OnWriteDetail(System.Xml.XmlDictionaryWriter,System.ServiceModel.EnvelopeVersion)
  id: OnWriteDetail(System.Xml.XmlDictionaryWriter,System.ServiceModel.EnvelopeVersion)
  parent: System.ServiceModel.Channels.MessageFault
  langs:
  - csharp
  - vb
  name: OnWriteDetail(Xml.XmlDictionaryWriter, EnvelopeVersion)
  nameWithType: MessageFault.OnWriteDetail(Xml.XmlDictionaryWriter, EnvelopeVersion)
  fullName: System.ServiceModel.Channels.MessageFault.OnWriteDetail(System.Xml.XmlDictionaryWriter, System.ServiceModel.EnvelopeVersion)
  type: Method
  source:
    remote:
      path: src/System.ServiceModel.Primitives/ref/System.ServiceModel.Primitives.cs
      branch: master
      repo: https://github.com/dotnet/wcf.git
    id: OnWriteDetail
    path: src/System.ServiceModel.Primitives/ref/System.ServiceModel.Primitives.cs
    startLine: 993
  assemblies:
  - System.ServiceModel.Primitives
  namespace: System.ServiceModel.Channels
  summary: "\n<p>Invoked prior to writing the detail contents.</p>\n"
  syntax:
    content: protected virtual void OnWriteDetail(Xml.XmlDictionaryWriter writer, EnvelopeVersion version)
    content.vb: Protected Overridable Sub OnWriteDetail(writer As Xml.XmlDictionaryWriter, version As EnvelopeVersion)
    parameters:
    - id: writer
      type: System.Xml.XmlDictionaryWriter
      description: "\n<p>The <xref href=\"System.Xml.XmlDictionaryWriter\" data-throw-if-not-resolved=\"false\"></xref> used to write the detail element.</p>\n"
    - id: version
      type: System.ServiceModel.EnvelopeVersion
      description: "\n<p>The version of the SOAP envelope to write.</p>\n"
  modifiers.csharp:
  - protected
  - virtual
  modifiers.vb:
  - Protected
  - Overridable
- uid: System.ServiceModel.Channels.MessageFault.OnWriteDetailContents(System.Xml.XmlDictionaryWriter)
  commentId: M:System.ServiceModel.Channels.MessageFault.OnWriteDetailContents(System.Xml.XmlDictionaryWriter)
  id: OnWriteDetailContents(System.Xml.XmlDictionaryWriter)
  parent: System.ServiceModel.Channels.MessageFault
  langs:
  - csharp
  - vb
  name: OnWriteDetailContents(Xml.XmlDictionaryWriter)
  nameWithType: MessageFault.OnWriteDetailContents(Xml.XmlDictionaryWriter)
  fullName: System.ServiceModel.Channels.MessageFault.OnWriteDetailContents(System.Xml.XmlDictionaryWriter)
  type: Method
  source:
    remote:
      path: src/System.ServiceModel.Primitives/ref/System.ServiceModel.Primitives.cs
      branch: master
      repo: https://github.com/dotnet/wcf.git
    id: OnWriteDetailContents
    path: src/System.ServiceModel.Primitives/ref/System.ServiceModel.Primitives.cs
    startLine: 994
  assemblies:
  - System.ServiceModel.Primitives
  namespace: System.ServiceModel.Channels
  summary: "\n<p>When overridden in a non-abstract derived class, writes the contents of the detail element. </p>\n"
  syntax:
    content: protected abstract void OnWriteDetailContents(Xml.XmlDictionaryWriter writer)
    content.vb: Protected MustOverride Sub OnWriteDetailContents(writer As Xml.XmlDictionaryWriter)
    parameters:
    - id: writer
      type: System.Xml.XmlDictionaryWriter
      description: "\n<p>The <xref href=\"System.Xml.XmlDictionaryWriter\" data-throw-if-not-resolved=\"false\"></xref> used to write the detail element.</p>\n"
  modifiers.csharp:
  - protected
  - abstract
  modifiers.vb:
  - Protected
  - MustOverride
- uid: System.ServiceModel.Channels.MessageFault.OnWriteStartDetail(System.Xml.XmlDictionaryWriter,System.ServiceModel.EnvelopeVersion)
  commentId: M:System.ServiceModel.Channels.MessageFault.OnWriteStartDetail(System.Xml.XmlDictionaryWriter,System.ServiceModel.EnvelopeVersion)
  id: OnWriteStartDetail(System.Xml.XmlDictionaryWriter,System.ServiceModel.EnvelopeVersion)
  parent: System.ServiceModel.Channels.MessageFault
  langs:
  - csharp
  - vb
  name: OnWriteStartDetail(Xml.XmlDictionaryWriter, EnvelopeVersion)
  nameWithType: MessageFault.OnWriteStartDetail(Xml.XmlDictionaryWriter, EnvelopeVersion)
  fullName: System.ServiceModel.Channels.MessageFault.OnWriteStartDetail(System.Xml.XmlDictionaryWriter, System.ServiceModel.EnvelopeVersion)
  type: Method
  source:
    remote:
      path: src/System.ServiceModel.Primitives/ref/System.ServiceModel.Primitives.cs
      branch: master
      repo: https://github.com/dotnet/wcf.git
    id: OnWriteStartDetail
    path: src/System.ServiceModel.Primitives/ref/System.ServiceModel.Primitives.cs
    startLine: 995
  assemblies:
  - System.ServiceModel.Primitives
  namespace: System.ServiceModel.Channels
  summary: "\n<p>Writes the start element using the specified <xref href=\"System.Xml.XmlDictionaryWriter\" data-throw-if-not-resolved=\"false\"></xref> and SOAP envelope version.</p>\n"
  syntax:
    content: protected virtual void OnWriteStartDetail(Xml.XmlDictionaryWriter writer, EnvelopeVersion version)
    content.vb: Protected Overridable Sub OnWriteStartDetail(writer As Xml.XmlDictionaryWriter, version As EnvelopeVersion)
    parameters:
    - id: writer
      type: System.Xml.XmlDictionaryWriter
      description: "\n<p>The <xref href=\"System.Xml.XmlDictionaryWriter\" data-throw-if-not-resolved=\"false\"></xref> used to write the detail element.</p>\n"
    - id: version
      type: System.ServiceModel.EnvelopeVersion
      description: "\n<p>The version of the SOAP envelope to write.</p>\n"
  modifiers.csharp:
  - protected
  - virtual
  modifiers.vb:
  - Protected
  - Overridable
references:
- uid: System.ServiceModel.Channels
  commentId: N:System.ServiceModel.Channels
  isExternal: false
  name: System.ServiceModel.Channels
  nameWithType: System.ServiceModel.Channels
  fullName: System.ServiceModel.Channels
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: false
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: false
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.ServiceModel.FaultCode
  commentId: T:System.ServiceModel.FaultCode
  parent: System.ServiceModel
  isExternal: false
  name: FaultCode
  nameWithType: FaultCode
  fullName: System.ServiceModel.FaultCode
- uid: System.ServiceModel
  commentId: N:System.ServiceModel
  isExternal: false
  name: System.ServiceModel
  nameWithType: System.ServiceModel
  fullName: System.ServiceModel
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: false
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.ServiceModel.FaultReason
  commentId: T:System.ServiceModel.FaultReason
  parent: System.ServiceModel
  isExternal: false
  name: FaultReason
  nameWithType: FaultReason
  fullName: System.ServiceModel.FaultReason
- uid: System.ServiceModel.Channels.Message
  commentId: T:System.ServiceModel.Channels.Message
  parent: System.ServiceModel.Channels
  isExternal: false
  name: Message
  nameWithType: Message
  fullName: System.ServiceModel.Channels.Message
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: false
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.ServiceModel.Channels.MessageFault
  commentId: T:System.ServiceModel.Channels.MessageFault
  parent: System.ServiceModel.Channels
  isExternal: false
  name: MessageFault
  nameWithType: MessageFault
  fullName: System.ServiceModel.Channels.MessageFault
- uid: '{T}'
  commentId: '!:T'
  definition: T
  name: T
  nameWithType: T
  fullName: T
- uid: T
  isExternal: false
  name: T
  nameWithType: T
  fullName: T
- uid: System.Runtime.Serialization.XmlObjectSerializer
  commentId: T:System.Runtime.Serialization.XmlObjectSerializer
  parent: System.Runtime.Serialization
  isExternal: false
  name: XmlObjectSerializer
  nameWithType: XmlObjectSerializer
  fullName: System.Runtime.Serialization.XmlObjectSerializer
- uid: System.Runtime.Serialization
  commentId: N:System.Runtime.Serialization
  isExternal: false
  name: System.Runtime.Serialization
  nameWithType: System.Runtime.Serialization
  fullName: System.Runtime.Serialization
- uid: System.Xml.XmlDictionaryReader
  commentId: T:System.Xml.XmlDictionaryReader
  parent: System.Xml
  isExternal: false
  name: Xml.XmlDictionaryReader
  nameWithType: Xml.XmlDictionaryReader
  fullName: System.Xml.XmlDictionaryReader
- uid: System.Xml
  commentId: N:System.Xml
  isExternal: false
  name: System.Xml
  nameWithType: System.Xml
  fullName: System.Xml
- uid: System.Xml.XmlDictionaryWriter
  commentId: T:System.Xml.XmlDictionaryWriter
  parent: System.Xml
  isExternal: false
  name: Xml.XmlDictionaryWriter
  nameWithType: Xml.XmlDictionaryWriter
  fullName: System.Xml.XmlDictionaryWriter
- uid: System.ServiceModel.EnvelopeVersion
  commentId: T:System.ServiceModel.EnvelopeVersion
  parent: System.ServiceModel
  isExternal: false
  name: EnvelopeVersion
  nameWithType: EnvelopeVersion
  fullName: System.ServiceModel.EnvelopeVersion
