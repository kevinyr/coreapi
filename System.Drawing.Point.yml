items:
- uid: System.Drawing.Point
  commentId: T:System.Drawing.Point
  id: Point
  parent: System.Drawing
  children:
  - System.Drawing.Point.#ctor(System.Drawing.Size)
  - System.Drawing.Point.#ctor(System.Int32)
  - System.Drawing.Point.#ctor(System.Int32,System.Int32)
  - System.Drawing.Point.Add(System.Drawing.Point,System.Drawing.Size)
  - System.Drawing.Point.Ceiling(System.Drawing.PointF)
  - System.Drawing.Point.Empty
  - System.Drawing.Point.Equals(System.Object)
  - System.Drawing.Point.GetHashCode
  - System.Drawing.Point.IsEmpty
  - System.Drawing.Point.Offset(System.Drawing.Point)
  - System.Drawing.Point.Offset(System.Int32,System.Int32)
  - System.Drawing.Point.op_Addition(System.Drawing.Point,System.Drawing.Size)
  - System.Drawing.Point.op_Equality(System.Drawing.Point,System.Drawing.Point)
  - System.Drawing.Point.op_Explicit(System.Drawing.Point)~System.Drawing.Size
  - System.Drawing.Point.op_Implicit(System.Drawing.Point)~System.Drawing.PointF
  - System.Drawing.Point.op_Inequality(System.Drawing.Point,System.Drawing.Point)
  - System.Drawing.Point.op_Subtraction(System.Drawing.Point,System.Drawing.Size)
  - System.Drawing.Point.Round(System.Drawing.PointF)
  - System.Drawing.Point.Subtract(System.Drawing.Point,System.Drawing.Size)
  - System.Drawing.Point.ToString
  - System.Drawing.Point.Truncate(System.Drawing.PointF)
  - System.Drawing.Point.X
  - System.Drawing.Point.Y
  langs:
  - csharp
  - vb
  name: Point
  fullName: System.Drawing.Point
  type: Struct
  source:
    remote:
      path: src/System.Drawing.Primitives/src/System/Drawing/Point.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: Point
    path: src/System.Drawing.Primitives/src/System/Drawing/Point.cs
    startLine: 10
  assemblies:
  - System.Drawing.Primitives
  namespace: System.Drawing
  summary: "\n<p>Represents an ordered pair of integer x- and y-coordinates that defines a point in a two-dimensional plane.</p>\n"
  syntax:
    content: public struct Point
    content.vb: Public Structure Point
  inheritedMembers:
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetType
  modifiers.csharp:
  - public
  - struct
  modifiers.vb:
  - Public
  - Structure
  nameWithType: Point
- uid: System.Drawing.Point.Empty
  commentId: F:System.Drawing.Point.Empty
  id: Empty
  parent: System.Drawing.Point
  langs:
  - csharp
  - vb
  name: Empty
  fullName: System.Drawing.Point.Empty
  type: Field
  source:
    remote:
      path: src/System.Drawing.Primitives/src/System/Drawing/Point.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: Empty
    path: src/System.Drawing.Primitives/src/System/Drawing/Point.cs
    startLine: 16
  assemblies:
  - System.Drawing.Primitives
  namespace: System.Drawing
  summary: "\n<p>Represents a <xref href=\"System.Drawing.Point\" data-throw-if-not-resolved=\"false\"></xref> that has <xref href=\"System.Drawing.Point.X\" data-throw-if-not-resolved=\"false\"></xref> and <xref href=\"System.Drawing.Point.Y\" data-throw-if-not-resolved=\"false\"></xref> values set to zero. </p>\n"
  syntax:
    content: public static readonly Point Empty
    content.vb: Public Shared ReadOnly Empty As Point
    return:
      type: System.Drawing.Point
  modifiers.csharp:
  - public
  - static
  - readonly
  modifiers.vb:
  - Public
  - Shared
  - ReadOnly
  nameWithType: Point.Empty
- uid: System.Drawing.Point.#ctor(System.Drawing.Size)
  commentId: M:System.Drawing.Point.#ctor(System.Drawing.Size)
  id: '#ctor(System.Drawing.Size)'
  parent: System.Drawing.Point
  langs:
  - csharp
  - vb
  name: Point(Size)
  fullName: System.Drawing.Point.Point(System.Drawing.Size)
  type: Constructor
  source:
    remote:
      path: src/System.Drawing.Primitives/src/System/Drawing/Point.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: .ctor
    path: src/System.Drawing.Primitives/src/System/Drawing/Point.cs
    startLine: 37
  assemblies:
  - System.Drawing.Primitives
  namespace: System.Drawing
  summary: "\n<p>Initializes a new instance of the <xref href=\"System.Drawing.Point\" data-throw-if-not-resolved=\"false\"></xref> class from a <xref href=\"System.Drawing.Size\" data-throw-if-not-resolved=\"false\"></xref>.</p>\n"
  syntax:
    content: public Point(Size sz)
    content.vb: Public Sub New(sz As Size)
    parameters:
    - id: sz
      type: System.Drawing.Size
      description: "\n<p>A <xref href=\"System.Drawing.Size\" data-throw-if-not-resolved=\"false\"></xref> that specifies the coordinates for the new <xref href=\"System.Drawing.Point\" data-throw-if-not-resolved=\"false\"></xref>. </p>\n"
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  nameWithType: Point.Point(Size)
- uid: System.Drawing.Point.#ctor(System.Int32)
  commentId: M:System.Drawing.Point.#ctor(System.Int32)
  id: '#ctor(System.Int32)'
  parent: System.Drawing.Point
  langs:
  - csharp
  - vb
  name: Point(Int32)
  fullName: System.Drawing.Point.Point(System.Int32)
  type: Constructor
  source:
    remote:
      path: src/System.Drawing.Primitives/src/System/Drawing/Point.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: .ctor
    path: src/System.Drawing.Primitives/src/System/Drawing/Point.cs
    startLine: 47
  assemblies:
  - System.Drawing.Primitives
  namespace: System.Drawing
  summary: "\n<p>Initializes a new instance of the <xref href=\"System.Drawing.Point\" data-throw-if-not-resolved=\"false\"></xref> class using coordinates specified by an integer value.</p>\n"
  syntax:
    content: public Point(int dw)
    content.vb: Public Sub New(dw As Integer)
    parameters:
    - id: dw
      type: System.Int32
      description: "\n<p>A 32-bit integer that specifies the coordinates for the new <xref href=\"System.Drawing.Point\" data-throw-if-not-resolved=\"false\"></xref>. </p>\n"
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  nameWithType: Point.Point(Int32)
- uid: System.Drawing.Point.#ctor(System.Int32,System.Int32)
  commentId: M:System.Drawing.Point.#ctor(System.Int32,System.Int32)
  id: '#ctor(System.Int32,System.Int32)'
  parent: System.Drawing.Point
  langs:
  - csharp
  - vb
  name: Point(Int32, Int32)
  fullName: System.Drawing.Point.Point(System.Int32, System.Int32)
  type: Constructor
  source:
    remote:
      path: src/System.Drawing.Primitives/src/System/Drawing/Point.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: .ctor
    path: src/System.Drawing.Primitives/src/System/Drawing/Point.cs
    startLine: 25
  assemblies:
  - System.Drawing.Primitives
  namespace: System.Drawing
  summary: "\n<p>Initializes a new instance of the <xref href=\"System.Drawing.Point\" data-throw-if-not-resolved=\"false\"></xref> class with the specified coordinates.</p>\n"
  syntax:
    content: public Point(int x, int y)
    content.vb: Public Sub New(x As Integer, y As Integer)
    parameters:
    - id: x
      type: System.Int32
      description: "\n<p>The horizontal position of the point. </p>\n"
    - id: y
      type: System.Int32
      description: "\n<p>The vertical position of the point. </p>\n"
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  nameWithType: Point.Point(Int32, Int32)
- uid: System.Drawing.Point.IsEmpty
  commentId: P:System.Drawing.Point.IsEmpty
  id: IsEmpty
  parent: System.Drawing.Point
  langs:
  - csharp
  - vb
  name: IsEmpty
  fullName: System.Drawing.Point.IsEmpty
  type: Property
  source:
    remote:
      path: src/System.Drawing.Primitives/src/System/Drawing/Point.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: IsEmpty
    path: src/System.Drawing.Primitives/src/System/Drawing/Point.cs
    startLine: 58
  assemblies:
  - System.Drawing.Primitives
  namespace: System.Drawing
  summary: "\n<p>Gets a value indicating whether this <xref href=\"System.Drawing.Point\" data-throw-if-not-resolved=\"false\"></xref> is empty.</p>\n"
  syntax:
    content: public bool IsEmpty { get; }
    content.vb: Public ReadOnly Property IsEmpty As Boolean
    parameters: []
    return:
      type: System.Boolean
      description: "\n<p>\n<strong>true</strong> if both <xref href=\"System.Drawing.Point.X\" data-throw-if-not-resolved=\"false\"></xref> and <xref href=\"System.Drawing.Point.Y\" data-throw-if-not-resolved=\"false\"></xref> are 0; otherwise, <strong>false</strong>.</p>\n"
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
  nameWithType: Point.IsEmpty
- uid: System.Drawing.Point.X
  commentId: P:System.Drawing.Point.X
  id: X
  parent: System.Drawing.Point
  langs:
  - csharp
  - vb
  name: X
  fullName: System.Drawing.Point.X
  type: Property
  source:
    remote:
      path: src/System.Drawing.Primitives/src/System/Drawing/Point.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: X
    path: src/System.Drawing.Primitives/src/System/Drawing/Point.cs
    startLine: 69
  assemblies:
  - System.Drawing.Primitives
  namespace: System.Drawing
  summary: "\n<p>Gets or sets the x-coordinate of this <xref href=\"System.Drawing.Point\" data-throw-if-not-resolved=\"false\"></xref>.</p>\n"
  syntax:
    content: public int X { get; set; }
    content.vb: Public Property X As Integer
    parameters: []
    return:
      type: System.Int32
      description: "\n<p>The x-coordinate of this <xref href=\"System.Drawing.Point\" data-throw-if-not-resolved=\"false\"></xref>.</p>\n"
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
  nameWithType: Point.X
- uid: System.Drawing.Point.Y
  commentId: P:System.Drawing.Point.Y
  id: Y
  parent: System.Drawing.Point
  langs:
  - csharp
  - vb
  name: Y
  fullName: System.Drawing.Point.Y
  type: Property
  source:
    remote:
      path: src/System.Drawing.Primitives/src/System/Drawing/Point.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: Y
    path: src/System.Drawing.Primitives/src/System/Drawing/Point.cs
    startLine: 86
  assemblies:
  - System.Drawing.Primitives
  namespace: System.Drawing
  summary: "\n<p>Gets or sets the y-coordinate of this <xref href=\"System.Drawing.Point\" data-throw-if-not-resolved=\"false\"></xref>.</p>\n"
  syntax:
    content: public int Y { get; set; }
    content.vb: Public Property Y As Integer
    parameters: []
    return:
      type: System.Int32
      description: "\n<p>The y-coordinate of this <xref href=\"System.Drawing.Point\" data-throw-if-not-resolved=\"false\"></xref>.</p>\n"
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
  nameWithType: Point.Y
- uid: System.Drawing.Point.Add(System.Drawing.Point,System.Drawing.Size)
  commentId: M:System.Drawing.Point.Add(System.Drawing.Point,System.Drawing.Size)
  id: Add(System.Drawing.Point,System.Drawing.Size)
  parent: System.Drawing.Point
  langs:
  - csharp
  - vb
  name: Add(Point, Size)
  fullName: System.Drawing.Point.Add(System.Drawing.Point, System.Drawing.Size)
  type: Method
  source:
    remote:
      path: src/System.Drawing.Primitives/src/System/Drawing/Point.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: Add
    path: src/System.Drawing.Primitives/src/System/Drawing/Point.cs
    startLine: 169
  assemblies:
  - System.Drawing.Primitives
  namespace: System.Drawing
  summary: "\n<p>Adds the specified <xref href=\"System.Drawing.Size\" data-throw-if-not-resolved=\"false\"></xref> to the specified <xref href=\"System.Drawing.Point\" data-throw-if-not-resolved=\"false\"></xref>.</p>\n"
  syntax:
    content: public static Point Add(Point pt, Size sz)
    content.vb: Public Shared Function Add(pt As Point, sz As Size) As Point
    parameters:
    - id: pt
      type: System.Drawing.Point
      description: "\n<p>The <xref href=\"System.Drawing.Point\" data-throw-if-not-resolved=\"false\"></xref> to add.</p>\n"
    - id: sz
      type: System.Drawing.Size
      description: "\n<p>The <xref href=\"System.Drawing.Size\" data-throw-if-not-resolved=\"false\"></xref> to add</p>\n"
    return:
      type: System.Drawing.Point
      description: "\n<p>The <xref href=\"System.Drawing.Point\" data-throw-if-not-resolved=\"false\"></xref> that is the result of the addition operation.</p>\n"
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  nameWithType: Point.Add(Point, Size)
- uid: System.Drawing.Point.Ceiling(System.Drawing.PointF)
  commentId: M:System.Drawing.Point.Ceiling(System.Drawing.PointF)
  id: Ceiling(System.Drawing.PointF)
  parent: System.Drawing.Point
  langs:
  - csharp
  - vb
  name: Ceiling(PointF)
  fullName: System.Drawing.Point.Ceiling(System.Drawing.PointF)
  type: Method
  source:
    remote:
      path: src/System.Drawing.Primitives/src/System/Drawing/Point.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: Ceiling
    path: src/System.Drawing.Primitives/src/System/Drawing/Point.cs
    startLine: 188
  assemblies:
  - System.Drawing.Primitives
  namespace: System.Drawing
  summary: "\n<p>Converts the specified <xref href=\"System.Drawing.PointF\" data-throw-if-not-resolved=\"false\"></xref> to a <xref href=\"System.Drawing.Point\" data-throw-if-not-resolved=\"false\"></xref> by rounding the values of the <xref href=\"System.Drawing.PointF\" data-throw-if-not-resolved=\"false\"></xref> to the next higher integer values.</p>\n"
  syntax:
    content: public static Point Ceiling(PointF value)
    content.vb: Public Shared Function Ceiling(value As PointF) As Point
    parameters:
    - id: value
      type: System.Drawing.PointF
      description: "\n<p>The <xref href=\"System.Drawing.PointF\" data-throw-if-not-resolved=\"false\"></xref> to convert. </p>\n"
    return:
      type: System.Drawing.Point
      description: "\n<p>The <xref href=\"System.Drawing.Point\" data-throw-if-not-resolved=\"false\"></xref> this method converts to.</p>\n"
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  nameWithType: Point.Ceiling(PointF)
- uid: System.Drawing.Point.Equals(System.Object)
  commentId: M:System.Drawing.Point.Equals(System.Object)
  id: Equals(System.Object)
  parent: System.Drawing.Point
  langs:
  - csharp
  - vb
  name: Equals(Object)
  fullName: System.Drawing.Point.Equals(System.Object)
  type: Method
  source:
    remote:
      path: src/System.Drawing.Primitives/src/System/Drawing/Point.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: Equals
    path: src/System.Drawing.Primitives/src/System/Drawing/Point.cs
    startLine: 217
  assemblies:
  - System.Drawing.Primitives
  namespace: System.Drawing
  summary: "\n<p>Specifies whether this <xref href=\"System.Drawing.Point\" data-throw-if-not-resolved=\"false\"></xref> contains the same coordinates as the specified <xref href=\"System.Object\" data-throw-if-not-resolved=\"false\"></xref>.</p>\n"
  syntax:
    content: public override bool Equals(object obj)
    content.vb: Public Overrides Function Equals(obj As Object) As Boolean
    parameters:
    - id: obj
      type: System.Object
      description: "\n<p>The <xref href=\"System.Object\" data-throw-if-not-resolved=\"false\"></xref> to test. </p>\n"
    return:
      type: System.Boolean
      description: "\n<p>\n<strong>true</strong> if <em>obj</em> is a <xref href=\"System.Drawing.Point\" data-throw-if-not-resolved=\"false\"></xref> and has the same coordinates as this <xref href=\"System.Drawing.Point\" data-throw-if-not-resolved=\"false\"></xref>.</p>\n"
  overridden: System.ValueType.Equals(System.Object)
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
  nameWithType: Point.Equals(Object)
- uid: System.Drawing.Point.GetHashCode
  commentId: M:System.Drawing.Point.GetHashCode
  id: GetHashCode
  parent: System.Drawing.Point
  langs:
  - csharp
  - vb
  name: GetHashCode()
  fullName: System.Drawing.Point.GetHashCode()
  type: Method
  source:
    remote:
      path: src/System.Drawing.Primitives/src/System/Drawing/Point.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: GetHashCode
    path: src/System.Drawing.Primitives/src/System/Drawing/Point.cs
    startLine: 230
  assemblies:
  - System.Drawing.Primitives
  namespace: System.Drawing
  summary: "\n<p>Returns a hash code for this <xref href=\"System.Drawing.Point\" data-throw-if-not-resolved=\"false\"></xref>.</p>\n"
  syntax:
    content: public override int GetHashCode()
    content.vb: Public Overrides Function GetHashCode As Integer
    return:
      type: System.Int32
      description: "\n<p>An integer value that specifies a hash value for this <xref href=\"System.Drawing.Point\" data-throw-if-not-resolved=\"false\"></xref>.</p>\n"
  overridden: System.ValueType.GetHashCode
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
  nameWithType: Point.GetHashCode()
- uid: System.Drawing.Point.Offset(System.Drawing.Point)
  commentId: M:System.Drawing.Point.Offset(System.Drawing.Point)
  id: Offset(System.Drawing.Point)
  parent: System.Drawing.Point
  langs:
  - csharp
  - vb
  name: Offset(Point)
  fullName: System.Drawing.Point.Offset(System.Drawing.Point)
  type: Method
  source:
    remote:
      path: src/System.Drawing.Primitives/src/System/Drawing/Point.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: Offset
    path: src/System.Drawing.Primitives/src/System/Drawing/Point.cs
    startLine: 247
  assemblies:
  - System.Drawing.Primitives
  namespace: System.Drawing
  summary: "\n<p>Translates this <xref href=\"System.Drawing.Point\" data-throw-if-not-resolved=\"false\"></xref> by the specified <xref href=\"System.Drawing.Point\" data-throw-if-not-resolved=\"false\"></xref>.</p>\n"
  syntax:
    content: public void Offset(Point p)
    content.vb: Public Sub Offset(p As Point)
    parameters:
    - id: p
      type: System.Drawing.Point
      description: "\n<p>The <xref href=\"System.Drawing.Point\" data-throw-if-not-resolved=\"false\"></xref> used offset this <xref href=\"System.Drawing.Point\" data-throw-if-not-resolved=\"false\"></xref>.</p>\n"
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  nameWithType: Point.Offset(Point)
- uid: System.Drawing.Point.Offset(System.Int32,System.Int32)
  commentId: M:System.Drawing.Point.Offset(System.Int32,System.Int32)
  id: Offset(System.Int32,System.Int32)
  parent: System.Drawing.Point
  langs:
  - csharp
  - vb
  name: Offset(Int32, Int32)
  fullName: System.Drawing.Point.Offset(System.Int32, System.Int32)
  type: Method
  source:
    remote:
      path: src/System.Drawing.Primitives/src/System/Drawing/Point.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: Offset
    path: src/System.Drawing.Primitives/src/System/Drawing/Point.cs
    startLine: 238
  assemblies:
  - System.Drawing.Primitives
  namespace: System.Drawing
  summary: "\n<p>Translates this <xref href=\"System.Drawing.Point\" data-throw-if-not-resolved=\"false\"></xref> by the specified amount.</p>\n"
  syntax:
    content: public void Offset(int dx, int dy)
    content.vb: Public Sub Offset(dx As Integer, dy As Integer)
    parameters:
    - id: dx
      type: System.Int32
      description: "\n<p>The amount to offset the x-coordinate. </p>\n"
    - id: dy
      type: System.Int32
      description: "\n<p>The amount to offset the y-coordinate. </p>\n"
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  nameWithType: Point.Offset(Int32, Int32)
- uid: System.Drawing.Point.op_Addition(System.Drawing.Point,System.Drawing.Size)
  commentId: M:System.Drawing.Point.op_Addition(System.Drawing.Point,System.Drawing.Size)
  id: op_Addition(System.Drawing.Point,System.Drawing.Size)
  parent: System.Drawing.Point
  langs:
  - csharp
  - vb
  name: Addition(Point, Size)
  fullName: System.Drawing.Point.Addition(System.Drawing.Point, System.Drawing.Size)
  type: Operator
  source:
    remote:
      path: src/System.Drawing.Primitives/src/System/Drawing/Point.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: op_Addition
    path: src/System.Drawing.Primitives/src/System/Drawing/Point.cs
    startLine: 124
  assemblies:
  - System.Drawing.Primitives
  namespace: System.Drawing
  summary: "\n<p>Translates a <xref href=\"System.Drawing.Point\" data-throw-if-not-resolved=\"false\"></xref> by a given <xref href=\"System.Drawing.Size\" data-throw-if-not-resolved=\"false\"></xref>.</p>\n"
  syntax:
    content: public static Point operator +(Point pt, Size sz)
    content.vb: Public Shared Operator +(pt As Point, sz As Size) As Point
    parameters:
    - id: pt
      type: System.Drawing.Point
      description: "\n<p>The <xref href=\"System.Drawing.Point\" data-throw-if-not-resolved=\"false\"></xref> to translate. </p>\n"
    - id: sz
      type: System.Drawing.Size
      description: "\n<p>A <xref href=\"System.Drawing.Size\" data-throw-if-not-resolved=\"false\"></xref> that specifies the pair of numbers to add to the coordinates of <em>pt</em>. </p>\n"
    return:
      type: System.Drawing.Point
      description: "\n<p>The translated <xref href=\"System.Drawing.Point\" data-throw-if-not-resolved=\"false\"></xref>.</p>\n"
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  nameWithType: Point.Addition(Point, Size)
- uid: System.Drawing.Point.op_Equality(System.Drawing.Point,System.Drawing.Point)
  commentId: M:System.Drawing.Point.op_Equality(System.Drawing.Point,System.Drawing.Point)
  id: op_Equality(System.Drawing.Point,System.Drawing.Point)
  parent: System.Drawing.Point
  langs:
  - csharp
  - vb
  name: Equality(Point, Point)
  fullName: System.Drawing.Point.Equality(System.Drawing.Point, System.Drawing.Point)
  type: Operator
  source:
    remote:
      path: src/System.Drawing.Primitives/src/System/Drawing/Point.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: op_Equality
    path: src/System.Drawing.Primitives/src/System/Drawing/Point.cs
    startLine: 146
  assemblies:
  - System.Drawing.Primitives
  namespace: System.Drawing
  summary: "\n<p>Compares two <xref href=\"System.Drawing.Point\" data-throw-if-not-resolved=\"false\"></xref> objects. The result specifies whether the values of the <xref href=\"System.Drawing.Point.X\" data-throw-if-not-resolved=\"false\"></xref> and <xref href=\"System.Drawing.Point.Y\" data-throw-if-not-resolved=\"false\"></xref> properties of the two <xref href=\"System.Drawing.Point\" data-throw-if-not-resolved=\"false\"></xref> objects are equal.</p>\n"
  syntax:
    content: public static bool operator ==(Point left, Point right)
    content.vb: Public Shared Operator =(left As Point, right As Point) As Boolean
    parameters:
    - id: left
      type: System.Drawing.Point
      description: "\n<p>A <xref href=\"System.Drawing.Point\" data-throw-if-not-resolved=\"false\"></xref> to compare. </p>\n"
    - id: right
      type: System.Drawing.Point
      description: "\n<p>A <xref href=\"System.Drawing.Point\" data-throw-if-not-resolved=\"false\"></xref> to compare. </p>\n"
    return:
      type: System.Boolean
      description: "\n<p>\n<strong>true</strong> if the <xref href=\"System.Drawing.Point.X\" data-throw-if-not-resolved=\"false\"></xref> and <xref href=\"System.Drawing.Point.Y\" data-throw-if-not-resolved=\"false\"></xref> values of <em>left</em> and <em>right</em> are equal; otherwise, <strong>false</strong>.</p>\n"
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  nameWithType: Point.Equality(Point, Point)
- uid: System.Drawing.Point.op_Explicit(System.Drawing.Point)~System.Drawing.Size
  commentId: M:System.Drawing.Point.op_Explicit(System.Drawing.Point)~System.Drawing.Size
  id: op_Explicit(System.Drawing.Point)~System.Drawing.Size
  parent: System.Drawing.Point
  langs:
  - csharp
  - vb
  name: Explicit(Point to Size)
  fullName: System.Drawing.Point.Explicit(System.Drawing.Point to System.Drawing.Size)
  type: Operator
  source:
    remote:
      path: src/System.Drawing.Primitives/src/System/Drawing/Point.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: op_Explicit
    path: src/System.Drawing.Primitives/src/System/Drawing/Point.cs
    startLine: 114
  assemblies:
  - System.Drawing.Primitives
  namespace: System.Drawing
  summary: "\n<p>Converts the specified <xref href=\"System.Drawing.Point\" data-throw-if-not-resolved=\"false\"></xref> structure to a <xref href=\"System.Drawing.Size\" data-throw-if-not-resolved=\"false\"></xref> structure.</p>\n"
  syntax:
    content: public static explicit operator Size(Point p)
    content.vb: Public Shared Narrowing Operator CType(p As Point) As Size
    parameters:
    - id: p
      type: System.Drawing.Point
      description: "\n<p>The <xref href=\"System.Drawing.Point\" data-throw-if-not-resolved=\"false\"></xref> to be converted.</p>\n"
    return:
      type: System.Drawing.Size
      description: "\n<p>The <xref href=\"System.Drawing.Size\" data-throw-if-not-resolved=\"false\"></xref> that results from the conversion.</p>\n"
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: System.Drawing.Point.Narrowing(System.Drawing.Point to System.Drawing.Size)
  name.vb: Narrowing(Point to Size)
  nameWithType: Point.Explicit(Point to Size)
  nameWithType.vb: Point.Narrowing(Point to Size)
- uid: System.Drawing.Point.op_Implicit(System.Drawing.Point)~System.Drawing.PointF
  commentId: M:System.Drawing.Point.op_Implicit(System.Drawing.Point)~System.Drawing.PointF
  id: op_Implicit(System.Drawing.Point)~System.Drawing.PointF
  parent: System.Drawing.Point
  langs:
  - csharp
  - vb
  name: Implicit(Point to PointF)
  fullName: System.Drawing.Point.Implicit(System.Drawing.Point to System.Drawing.PointF)
  type: Operator
  source:
    remote:
      path: src/System.Drawing.Primitives/src/System/Drawing/Point.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: op_Implicit
    path: src/System.Drawing.Primitives/src/System/Drawing/Point.cs
    startLine: 104
  assemblies:
  - System.Drawing.Primitives
  namespace: System.Drawing
  summary: "\n<p>Converts the specified <xref href=\"System.Drawing.Point\" data-throw-if-not-resolved=\"false\"></xref> structure to a <xref href=\"System.Drawing.PointF\" data-throw-if-not-resolved=\"false\"></xref> structure.</p>\n"
  syntax:
    content: public static implicit operator PointF(Point p)
    content.vb: Public Shared Widening Operator CType(p As Point) As PointF
    parameters:
    - id: p
      type: System.Drawing.Point
      description: "\n<p>The <xref href=\"System.Drawing.Point\" data-throw-if-not-resolved=\"false\"></xref> to be converted.</p>\n"
    return:
      type: System.Drawing.PointF
      description: "\n<p>The <xref href=\"System.Drawing.PointF\" data-throw-if-not-resolved=\"false\"></xref> that results from the conversion.</p>\n"
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: System.Drawing.Point.Widening(System.Drawing.Point to System.Drawing.PointF)
  name.vb: Widening(Point to PointF)
  nameWithType: Point.Implicit(Point to PointF)
  nameWithType.vb: Point.Widening(Point to PointF)
- uid: System.Drawing.Point.op_Inequality(System.Drawing.Point,System.Drawing.Point)
  commentId: M:System.Drawing.Point.op_Inequality(System.Drawing.Point,System.Drawing.Point)
  id: op_Inequality(System.Drawing.Point,System.Drawing.Point)
  parent: System.Drawing.Point
  langs:
  - csharp
  - vb
  name: Inequality(Point, Point)
  fullName: System.Drawing.Point.Inequality(System.Drawing.Point, System.Drawing.Point)
  type: Operator
  source:
    remote:
      path: src/System.Drawing.Primitives/src/System/Drawing/Point.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: op_Inequality
    path: src/System.Drawing.Primitives/src/System/Drawing/Point.cs
    startLine: 159
  assemblies:
  - System.Drawing.Primitives
  namespace: System.Drawing
  summary: "\n<p>Compares two <xref href=\"System.Drawing.Point\" data-throw-if-not-resolved=\"false\"></xref> objects. The result specifies whether the values of the <xref href=\"System.Drawing.Point.X\" data-throw-if-not-resolved=\"false\"></xref> or <xref href=\"System.Drawing.Point.Y\" data-throw-if-not-resolved=\"false\"></xref> properties of the two <xref href=\"System.Drawing.Point\" data-throw-if-not-resolved=\"false\"></xref> objects are unequal.</p>\n"
  syntax:
    content: public static bool operator !=(Point left, Point right)
    content.vb: Public Shared Operator <>(left As Point, right As Point) As Boolean
    parameters:
    - id: left
      type: System.Drawing.Point
      description: "\n<p>A <xref href=\"System.Drawing.Point\" data-throw-if-not-resolved=\"false\"></xref> to compare. </p>\n"
    - id: right
      type: System.Drawing.Point
      description: "\n<p>A <xref href=\"System.Drawing.Point\" data-throw-if-not-resolved=\"false\"></xref> to compare. </p>\n"
    return:
      type: System.Boolean
      description: "\n<p>\n<strong>true</strong> if the values of either the <xref href=\"System.Drawing.Point.X\" data-throw-if-not-resolved=\"false\"></xref> properties or the <xref href=\"System.Drawing.Point.Y\" data-throw-if-not-resolved=\"false\"></xref> properties of <em>left</em> and <em>right</em> differ; otherwise, <strong>false</strong>.</p>\n"
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  nameWithType: Point.Inequality(Point, Point)
- uid: System.Drawing.Point.op_Subtraction(System.Drawing.Point,System.Drawing.Size)
  commentId: M:System.Drawing.Point.op_Subtraction(System.Drawing.Point,System.Drawing.Size)
  id: op_Subtraction(System.Drawing.Point,System.Drawing.Size)
  parent: System.Drawing.Point
  langs:
  - csharp
  - vb
  name: Subtraction(Point, Size)
  fullName: System.Drawing.Point.Subtraction(System.Drawing.Point, System.Drawing.Size)
  type: Operator
  source:
    remote:
      path: src/System.Drawing.Primitives/src/System/Drawing/Point.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: op_Subtraction
    path: src/System.Drawing.Primitives/src/System/Drawing/Point.cs
    startLine: 134
  assemblies:
  - System.Drawing.Primitives
  namespace: System.Drawing
  summary: "\n<p>Translates a <xref href=\"System.Drawing.Point\" data-throw-if-not-resolved=\"false\"></xref> by the negative of a given <xref href=\"System.Drawing.Size\" data-throw-if-not-resolved=\"false\"></xref>.</p>\n"
  syntax:
    content: public static Point operator -(Point pt, Size sz)
    content.vb: Public Shared Operator -(pt As Point, sz As Size) As Point
    parameters:
    - id: pt
      type: System.Drawing.Point
      description: "\n<p>The <xref href=\"System.Drawing.Point\" data-throw-if-not-resolved=\"false\"></xref> to translate. </p>\n"
    - id: sz
      type: System.Drawing.Size
      description: "\n<p>A <xref href=\"System.Drawing.Size\" data-throw-if-not-resolved=\"false\"></xref> that specifies the pair of numbers to subtract from the coordinates of <em>pt</em>. </p>\n"
    return:
      type: System.Drawing.Point
      description: "\n<p>A <xref href=\"System.Drawing.Point\" data-throw-if-not-resolved=\"false\"></xref> structure that is translated by the negative of a given <xref href=\"System.Drawing.Size\" data-throw-if-not-resolved=\"false\"></xref> structure.</p>\n"
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  nameWithType: Point.Subtraction(Point, Size)
- uid: System.Drawing.Point.Round(System.Drawing.PointF)
  commentId: M:System.Drawing.Point.Round(System.Drawing.PointF)
  id: Round(System.Drawing.PointF)
  parent: System.Drawing.Point
  langs:
  - csharp
  - vb
  name: Round(PointF)
  fullName: System.Drawing.Point.Round(System.Drawing.PointF)
  type: Method
  source:
    remote:
      path: src/System.Drawing.Primitives/src/System/Drawing/Point.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: Round
    path: src/System.Drawing.Primitives/src/System/Drawing/Point.cs
    startLine: 206
  assemblies:
  - System.Drawing.Primitives
  namespace: System.Drawing
  summary: "\n<p>Converts the specified <xref href=\"System.Drawing.PointF\" data-throw-if-not-resolved=\"false\"></xref> to a <xref href=\"System.Drawing.Point\" data-throw-if-not-resolved=\"false\"></xref> object by rounding the <xref href=\"System.Drawing.Point\" data-throw-if-not-resolved=\"false\"></xref> values to the nearest integer.</p>\n"
  syntax:
    content: public static Point Round(PointF value)
    content.vb: Public Shared Function Round(value As PointF) As Point
    parameters:
    - id: value
      type: System.Drawing.PointF
      description: "\n<p>The <xref href=\"System.Drawing.PointF\" data-throw-if-not-resolved=\"false\"></xref> to convert. </p>\n"
    return:
      type: System.Drawing.Point
      description: "\n<p>The <xref href=\"System.Drawing.Point\" data-throw-if-not-resolved=\"false\"></xref> this method converts to.</p>\n"
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  nameWithType: Point.Round(PointF)
- uid: System.Drawing.Point.Subtract(System.Drawing.Point,System.Drawing.Size)
  commentId: M:System.Drawing.Point.Subtract(System.Drawing.Point,System.Drawing.Size)
  id: Subtract(System.Drawing.Point,System.Drawing.Size)
  parent: System.Drawing.Point
  langs:
  - csharp
  - vb
  name: Subtract(Point, Size)
  fullName: System.Drawing.Point.Subtract(System.Drawing.Point, System.Drawing.Size)
  type: Method
  source:
    remote:
      path: src/System.Drawing.Primitives/src/System/Drawing/Point.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: Subtract
    path: src/System.Drawing.Primitives/src/System/Drawing/Point.cs
    startLine: 179
  assemblies:
  - System.Drawing.Primitives
  namespace: System.Drawing
  summary: "\n<p>Returns the result of subtracting specified <xref href=\"System.Drawing.Size\" data-throw-if-not-resolved=\"false\"></xref> from the specified <xref href=\"System.Drawing.Point\" data-throw-if-not-resolved=\"false\"></xref>.</p>\n"
  syntax:
    content: public static Point Subtract(Point pt, Size sz)
    content.vb: Public Shared Function Subtract(pt As Point, sz As Size) As Point
    parameters:
    - id: pt
      type: System.Drawing.Point
      description: "\n<p>The <xref href=\"System.Drawing.Point\" data-throw-if-not-resolved=\"false\"></xref> to be subtracted from. </p>\n"
    - id: sz
      type: System.Drawing.Size
      description: "\n<p>The <xref href=\"System.Drawing.Size\" data-throw-if-not-resolved=\"false\"></xref> to subtract from the <xref href=\"System.Drawing.Point\" data-throw-if-not-resolved=\"false\"></xref>.</p>\n"
    return:
      type: System.Drawing.Point
      description: "\n<p>The <xref href=\"System.Drawing.Point\" data-throw-if-not-resolved=\"false\"></xref> that is the result of the subtraction operation.</p>\n"
  seealso:
  - type: System.Drawing.Point.op_Subtraction(System.Drawing.Point,System.Drawing.Size)
    commentId: M:System.Drawing.Point.op_Subtraction(System.Drawing.Point,System.Drawing.Size)
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  nameWithType: Point.Subtract(Point, Size)
- uid: System.Drawing.Point.ToString
  commentId: M:System.Drawing.Point.ToString
  id: ToString
  parent: System.Drawing.Point
  langs:
  - csharp
  - vb
  name: ToString()
  fullName: System.Drawing.Point.ToString()
  type: Method
  source:
    remote:
      path: src/System.Drawing.Primitives/src/System/Drawing/Point.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: ToString
    path: src/System.Drawing.Primitives/src/System/Drawing/Point.cs
    startLine: 259
  assemblies:
  - System.Drawing.Primitives
  namespace: System.Drawing
  summary: "\n<p>Converts this <xref href=\"System.Drawing.Point\" data-throw-if-not-resolved=\"false\"></xref> to a human-readable string.</p>\n"
  syntax:
    content: public override string ToString()
    content.vb: Public Overrides Function ToString As String
    return:
      type: System.String
      description: "\n<p>A string that represents this <xref href=\"System.Drawing.Point\" data-throw-if-not-resolved=\"false\"></xref>.</p>\n"
  overridden: System.ValueType.ToString
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
  nameWithType: Point.ToString()
- uid: System.Drawing.Point.Truncate(System.Drawing.PointF)
  commentId: M:System.Drawing.Point.Truncate(System.Drawing.PointF)
  id: Truncate(System.Drawing.PointF)
  parent: System.Drawing.Point
  langs:
  - csharp
  - vb
  name: Truncate(PointF)
  fullName: System.Drawing.Point.Truncate(System.Drawing.PointF)
  type: Method
  source:
    remote:
      path: src/System.Drawing.Primitives/src/System/Drawing/Point.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: Truncate
    path: src/System.Drawing.Primitives/src/System/Drawing/Point.cs
    startLine: 197
  assemblies:
  - System.Drawing.Primitives
  namespace: System.Drawing
  summary: "\n<p>Converts the specified <xref href=\"System.Drawing.PointF\" data-throw-if-not-resolved=\"false\"></xref> to a <xref href=\"System.Drawing.Point\" data-throw-if-not-resolved=\"false\"></xref> by truncating the values of the <xref href=\"System.Drawing.Point\" data-throw-if-not-resolved=\"false\"></xref>.</p>\n"
  syntax:
    content: public static Point Truncate(PointF value)
    content.vb: Public Shared Function Truncate(value As PointF) As Point
    parameters:
    - id: value
      type: System.Drawing.PointF
      description: "\n<p>The <xref href=\"System.Drawing.PointF\" data-throw-if-not-resolved=\"false\"></xref> to convert. </p>\n"
    return:
      type: System.Drawing.Point
      description: "\n<p>The <xref href=\"System.Drawing.Point\" data-throw-if-not-resolved=\"false\"></xref> this method converts to.</p>\n"
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  nameWithType: Point.Truncate(PointF)
references:
- uid: System.Drawing
  isExternal: false
  name: System.Drawing
  fullName: System.Drawing
  nameWithType: System.Drawing
  commentId: N:System.Drawing
- uid: System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
  nameWithType: Object.Equals(Object, Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
  nameWithType: Object.ReferenceEquals(Object, Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
- uid: System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  nameWithType: Object.GetType()
  commentId: M:System.Object.GetType
- uid: System.Object
  parent: System
  isExternal: false
  name: Object
  fullName: System.Object
  nameWithType: Object
  commentId: T:System.Object
- uid: System
  isExternal: false
  name: System
  fullName: System
  nameWithType: System
  commentId: N:System
- uid: System.Drawing.Point
  parent: System.Drawing
  isExternal: false
  name: Point
  fullName: System.Drawing.Point
  nameWithType: Point
  commentId: T:System.Drawing.Point
- uid: System.Drawing.Size
  parent: System.Drawing
  isExternal: false
  name: Size
  fullName: System.Drawing.Size
  nameWithType: Size
  commentId: T:System.Drawing.Size
- uid: System.Int32
  parent: System
  isExternal: false
  name: Int32
  fullName: System.Int32
  nameWithType: Int32
  commentId: T:System.Int32
- uid: System.Boolean
  parent: System
  isExternal: false
  name: Boolean
  fullName: System.Boolean
  nameWithType: Boolean
  commentId: T:System.Boolean
- uid: System.Drawing.PointF
  parent: System.Drawing
  isExternal: false
  name: PointF
  fullName: System.Drawing.PointF
  nameWithType: PointF
  commentId: T:System.Drawing.PointF
- uid: System.ValueType.Equals(System.Object)
  parent: System.ValueType
  isExternal: true
  name: Equals(Object)
  fullName: System.ValueType.Equals(System.Object)
  spec.csharp:
  - uid: System.ValueType.Equals(System.Object)
    name: Equals
    fullName: System.ValueType.Equals
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.ValueType.Equals(System.Object)
    name: Equals
    fullName: System.ValueType.Equals
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
  nameWithType: ValueType.Equals(Object)
  commentId: M:System.ValueType.Equals(System.Object)
- uid: System.ValueType
  parent: System
  isExternal: false
  name: ValueType
  fullName: System.ValueType
  nameWithType: ValueType
  commentId: T:System.ValueType
- uid: System.ValueType.GetHashCode
  parent: System.ValueType
  isExternal: false
  name: GetHashCode()
  fullName: System.ValueType.GetHashCode()
  spec.csharp:
  - uid: System.ValueType.GetHashCode
    name: GetHashCode
    fullName: System.ValueType.GetHashCode
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.ValueType.GetHashCode
    name: GetHashCode
    fullName: System.ValueType.GetHashCode
  - name: (
    fullName: (
  - name: )
    fullName: )
  nameWithType: ValueType.GetHashCode()
  commentId: M:System.ValueType.GetHashCode
- uid: System.ValueType.ToString
  parent: System.ValueType
  isExternal: false
  name: ToString()
  fullName: System.ValueType.ToString()
  spec.csharp:
  - uid: System.ValueType.ToString
    name: ToString
    fullName: System.ValueType.ToString
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.ValueType.ToString
    name: ToString
    fullName: System.ValueType.ToString
  - name: (
    fullName: (
  - name: )
    fullName: )
  nameWithType: ValueType.ToString()
  commentId: M:System.ValueType.ToString
- uid: System.String
  parent: System
  isExternal: false
  name: String
  fullName: System.String
  nameWithType: String
  commentId: T:System.String
