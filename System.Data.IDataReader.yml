### YamlMime:ManagedReference
items:
- uid: System.Data.IDataReader
  commentId: T:System.Data.IDataReader
  id: IDataReader
  parent: System.Data
  children:
  - System.Data.IDataReader.Close
  - System.Data.IDataReader.Depth
  - System.Data.IDataReader.GetSchemaTable
  - System.Data.IDataReader.IsClosed
  - System.Data.IDataReader.NextResult
  - System.Data.IDataReader.Read
  - System.Data.IDataReader.RecordsAffected
  langs:
  - csharp
  - vb
  name: IDataReader
  nameWithType: IDataReader
  fullName: System.Data.IDataReader
  type: Interface
  source:
    remote:
      path: src/System.Data.Common/src/System/Data/IDataReader.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: IDataReader
    path: src/System.Data.Common/src/System/Data/IDataReader.cs
    startLine: 8
  assemblies:
  - System.Data.Common
  namespace: System.Data
  summary: "\n<p>Provides a means of reading one or more forward-only streams of result sets obtained by executing a command at a data source, and is implemented by .NET Framework data providers that access relational databases.</p>\n"
  syntax:
    content: 'public interface IDataReader : IDisposable, IDataRecord'
    content.vb: >-
      Public Interface IDataReader
          Inherits IDisposable, IDataRecord
  inheritedMembers:
  - System.Data.IDataRecord.FieldCount
  - System.Data.IDataRecord.Item(System.Int32)
  - System.Data.IDataRecord.Item(System.String)
  - System.Data.IDataRecord.GetBoolean(System.Int32)
  - System.Data.IDataRecord.GetByte(System.Int32)
  - System.Data.IDataRecord.GetBytes(System.Int32,System.Int64,System.Byte[],System.Int32,System.Int32)
  - System.Data.IDataRecord.GetChar(System.Int32)
  - System.Data.IDataRecord.GetChars(System.Int32,System.Int64,System.Char[],System.Int32,System.Int32)
  - System.Data.IDataRecord.GetData(System.Int32)
  - System.Data.IDataRecord.GetDataTypeName(System.Int32)
  - System.Data.IDataRecord.GetDateTime(System.Int32)
  - System.Data.IDataRecord.GetDecimal(System.Int32)
  - System.Data.IDataRecord.GetDouble(System.Int32)
  - System.Data.IDataRecord.GetFieldType(System.Int32)
  - System.Data.IDataRecord.GetFloat(System.Int32)
  - System.Data.IDataRecord.GetGuid(System.Int32)
  - System.Data.IDataRecord.GetInt16(System.Int32)
  - System.Data.IDataRecord.GetInt32(System.Int32)
  - System.Data.IDataRecord.GetInt64(System.Int32)
  - System.Data.IDataRecord.GetName(System.Int32)
  - System.Data.IDataRecord.GetOrdinal(System.String)
  - System.Data.IDataRecord.GetString(System.Int32)
  - System.Data.IDataRecord.GetValue(System.Int32)
  - System.Data.IDataRecord.GetValues(System.Object[])
  - System.Data.IDataRecord.IsDBNull(System.Int32)
  - System.IDisposable.Dispose
  modifiers.csharp:
  - public
  - interface
  modifiers.vb:
  - Public
  - Interface
- uid: System.Data.IDataReader.Depth
  commentId: P:System.Data.IDataReader.Depth
  id: Depth
  parent: System.Data.IDataReader
  langs:
  - csharp
  - vb
  name: Depth
  nameWithType: IDataReader.Depth
  fullName: System.Data.IDataReader.Depth
  type: Property
  source:
    remote:
      path: src/System.Data.Common/src/System/Data/IDataReader.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: Depth
    path: src/System.Data.Common/src/System/Data/IDataReader.cs
    startLine: 11
  assemblies:
  - System.Data.Common
  namespace: System.Data
  summary: "\n<p>Gets a value indicating the depth of nesting for the current row.</p>\n"
  syntax:
    content: int Depth { get; }
    content.vb: ReadOnly Property Depth As Integer
    parameters: []
    return:
      type: System.Int32
      description: "\n<p>The level of nesting.</p>\n"
  modifiers.csharp:
  - get
  modifiers.vb:
  - ReadOnly
- uid: System.Data.IDataReader.IsClosed
  commentId: P:System.Data.IDataReader.IsClosed
  id: IsClosed
  parent: System.Data.IDataReader
  langs:
  - csharp
  - vb
  name: IsClosed
  nameWithType: IDataReader.IsClosed
  fullName: System.Data.IDataReader.IsClosed
  type: Property
  source:
    remote:
      path: src/System.Data.Common/src/System/Data/IDataReader.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: IsClosed
    path: src/System.Data.Common/src/System/Data/IDataReader.cs
    startLine: 16
  assemblies:
  - System.Data.Common
  namespace: System.Data
  summary: "\n<p>Gets a value indicating whether the data reader is closed.</p>\n"
  syntax:
    content: bool IsClosed { get; }
    content.vb: ReadOnly Property IsClosed As Boolean
    parameters: []
    return:
      type: System.Boolean
      description: "\n<p>\n<strong>true</strong> if the data reader is closed; otherwise, <strong>false</strong>.</p>\n"
  modifiers.csharp:
  - get
  modifiers.vb:
  - ReadOnly
- uid: System.Data.IDataReader.RecordsAffected
  commentId: P:System.Data.IDataReader.RecordsAffected
  id: RecordsAffected
  parent: System.Data.IDataReader
  langs:
  - csharp
  - vb
  name: RecordsAffected
  nameWithType: IDataReader.RecordsAffected
  fullName: System.Data.IDataReader.RecordsAffected
  type: Property
  source:
    remote:
      path: src/System.Data.Common/src/System/Data/IDataReader.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: RecordsAffected
    path: src/System.Data.Common/src/System/Data/IDataReader.cs
    startLine: 21
  assemblies:
  - System.Data.Common
  namespace: System.Data
  summary: "\n<p>Gets the number of rows changed, inserted, or deleted by execution of the SQL statement.</p>\n"
  syntax:
    content: int RecordsAffected { get; }
    content.vb: ReadOnly Property RecordsAffected As Integer
    parameters: []
    return:
      type: System.Int32
      description: "\n<p>The number of rows changed, inserted, or deleted; 0 if no rows were affected or the statement failed; and -1 for SELECT statements.</p>\n"
  modifiers.csharp:
  - get
  modifiers.vb:
  - ReadOnly
- uid: System.Data.IDataReader.Close
  commentId: M:System.Data.IDataReader.Close
  id: Close
  parent: System.Data.IDataReader
  langs:
  - csharp
  - vb
  name: Close()
  nameWithType: IDataReader.Close()
  fullName: System.Data.IDataReader.Close()
  type: Method
  source:
    remote:
      path: src/System.Data.Common/src/System/Data/IDataReader.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: Close
    path: src/System.Data.Common/src/System/Data/IDataReader.cs
    startLine: 26
  assemblies:
  - System.Data.Common
  namespace: System.Data
  summary: "\n<p>Closes the <xref href=\"System.Data.IDataReader\" data-throw-if-not-resolved=\"false\"></xref> Object.</p>\n"
  syntax:
    content: void Close()
    content.vb: Sub Close
- uid: System.Data.IDataReader.GetSchemaTable
  commentId: M:System.Data.IDataReader.GetSchemaTable
  id: GetSchemaTable
  parent: System.Data.IDataReader
  langs:
  - csharp
  - vb
  name: GetSchemaTable()
  nameWithType: IDataReader.GetSchemaTable()
  fullName: System.Data.IDataReader.GetSchemaTable()
  type: Method
  source:
    remote:
      path: src/System.Data.Common/src/System/Data/IDataReader.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: GetSchemaTable
    path: src/System.Data.Common/src/System/Data/IDataReader.cs
    startLine: 28
  assemblies:
  - System.Data.Common
  namespace: System.Data
  summary: "\n<p>Returns a <xref href=\"System.Data.DataTable\" data-throw-if-not-resolved=\"false\"></xref> that describes the column metadata of the <xref href=\"System.Data.IDataReader\" data-throw-if-not-resolved=\"false\"></xref>.</p>\n"
  syntax:
    content: DataTable GetSchemaTable()
    content.vb: Function GetSchemaTable As DataTable
    return:
      type: System.Data.DataTable
      description: "\n<p>A <xref href=\"System.Data.DataTable\" data-throw-if-not-resolved=\"false\"></xref> that describes the column metadata.</p>\n"
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "\n<p>The <xref href=\"System.Data.IDataReader\" data-throw-if-not-resolved=\"false\"></xref> is closed. </p>\n"
- uid: System.Data.IDataReader.NextResult
  commentId: M:System.Data.IDataReader.NextResult
  id: NextResult
  parent: System.Data.IDataReader
  langs:
  - csharp
  - vb
  name: NextResult()
  nameWithType: IDataReader.NextResult()
  fullName: System.Data.IDataReader.NextResult()
  type: Method
  source:
    remote:
      path: src/System.Data.Common/src/System/Data/IDataReader.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: NextResult
    path: src/System.Data.Common/src/System/Data/IDataReader.cs
    startLine: 30
  assemblies:
  - System.Data.Common
  namespace: System.Data
  summary: "\n<p>Advances the data reader to the next result, when reading the results of batch SQL statements.</p>\n"
  syntax:
    content: bool NextResult()
    content.vb: Function NextResult As Boolean
    return:
      type: System.Boolean
      description: "\n<p>\n<strong>true</strong> if there are more rows; otherwise, <strong>false</strong>.</p>\n"
- uid: System.Data.IDataReader.Read
  commentId: M:System.Data.IDataReader.Read
  id: Read
  parent: System.Data.IDataReader
  langs:
  - csharp
  - vb
  name: Read()
  nameWithType: IDataReader.Read()
  fullName: System.Data.IDataReader.Read()
  type: Method
  source:
    remote:
      path: src/System.Data.Common/src/System/Data/IDataReader.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: Read
    path: src/System.Data.Common/src/System/Data/IDataReader.cs
    startLine: 32
  assemblies:
  - System.Data.Common
  namespace: System.Data
  summary: "\n<p>Advances the <xref href=\"System.Data.IDataReader\" data-throw-if-not-resolved=\"false\"></xref> to the next record.</p>\n"
  syntax:
    content: bool Read()
    content.vb: Function Read As Boolean
    return:
      type: System.Boolean
      description: "\n<p>\n<strong>true</strong> if there are more rows; otherwise, <strong>false</strong>.</p>\n"
references:
- uid: System.Data
  commentId: N:System.Data
  isExternal: false
  name: System.Data
  nameWithType: System.Data
  fullName: System.Data
- uid: System.Data.IDataRecord.FieldCount
  commentId: P:System.Data.IDataRecord.FieldCount
  parent: System.Data.IDataRecord
  isExternal: false
  name: FieldCount
  nameWithType: IDataRecord.FieldCount
  fullName: System.Data.IDataRecord.FieldCount
- uid: System.Data.IDataRecord.Item(System.Int32)
  commentId: P:System.Data.IDataRecord.Item(System.Int32)
  parent: System.Data.IDataRecord
  isExternal: true
  name: Item[Int32]
  nameWithType: IDataRecord.Item[Int32]
  fullName: System.Data.IDataRecord.Item[System.Int32]
  nameWithType.vb: IDataRecord.Item(Int32)
  fullname.vb: System.Data.IDataRecord.Item(System.Int32)
  name.vb: Item(Int32)
  spec.csharp:
  - uid: System.Data.IDataRecord.Item(System.Int32)
    name: Item
    nameWithType: IDataRecord.Item
    fullName: System.Data.IDataRecord.Item
  - name: '['
    nameWithType: '['
    fullName: '['
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ']'
    nameWithType: ']'
    fullName: ']'
  spec.vb:
  - uid: System.Data.IDataRecord.Item(System.Int32)
    name: Item
    nameWithType: IDataRecord.Item
    fullName: System.Data.IDataRecord.Item
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Data.IDataRecord.Item(System.String)
  commentId: P:System.Data.IDataRecord.Item(System.String)
  parent: System.Data.IDataRecord
  isExternal: true
  name: Item[String]
  nameWithType: IDataRecord.Item[String]
  fullName: System.Data.IDataRecord.Item[System.String]
  nameWithType.vb: IDataRecord.Item(String)
  fullname.vb: System.Data.IDataRecord.Item(System.String)
  name.vb: Item(String)
  spec.csharp:
  - uid: System.Data.IDataRecord.Item(System.String)
    name: Item
    nameWithType: IDataRecord.Item
    fullName: System.Data.IDataRecord.Item
  - name: '['
    nameWithType: '['
    fullName: '['
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ']'
    nameWithType: ']'
    fullName: ']'
  spec.vb:
  - uid: System.Data.IDataRecord.Item(System.String)
    name: Item
    nameWithType: IDataRecord.Item
    fullName: System.Data.IDataRecord.Item
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Data.IDataRecord.GetBoolean(System.Int32)
  commentId: M:System.Data.IDataRecord.GetBoolean(System.Int32)
  parent: System.Data.IDataRecord
  isExternal: true
  name: GetBoolean(Int32)
  nameWithType: IDataRecord.GetBoolean(Int32)
  fullName: System.Data.IDataRecord.GetBoolean(System.Int32)
  spec.csharp:
  - uid: System.Data.IDataRecord.GetBoolean(System.Int32)
    name: GetBoolean
    nameWithType: IDataRecord.GetBoolean
    fullName: System.Data.IDataRecord.GetBoolean
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Data.IDataRecord.GetBoolean(System.Int32)
    name: GetBoolean
    nameWithType: IDataRecord.GetBoolean
    fullName: System.Data.IDataRecord.GetBoolean
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Data.IDataRecord.GetByte(System.Int32)
  commentId: M:System.Data.IDataRecord.GetByte(System.Int32)
  parent: System.Data.IDataRecord
  isExternal: true
  name: GetByte(Int32)
  nameWithType: IDataRecord.GetByte(Int32)
  fullName: System.Data.IDataRecord.GetByte(System.Int32)
  spec.csharp:
  - uid: System.Data.IDataRecord.GetByte(System.Int32)
    name: GetByte
    nameWithType: IDataRecord.GetByte
    fullName: System.Data.IDataRecord.GetByte
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Data.IDataRecord.GetByte(System.Int32)
    name: GetByte
    nameWithType: IDataRecord.GetByte
    fullName: System.Data.IDataRecord.GetByte
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Data.IDataRecord.GetBytes(System.Int32,System.Int64,System.Byte[],System.Int32,System.Int32)
  commentId: M:System.Data.IDataRecord.GetBytes(System.Int32,System.Int64,System.Byte[],System.Int32,System.Int32)
  parent: System.Data.IDataRecord
  isExternal: true
  name: GetBytes(Int32, Int64, Byte[], Int32, Int32)
  nameWithType: IDataRecord.GetBytes(Int32, Int64, Byte[], Int32, Int32)
  fullName: System.Data.IDataRecord.GetBytes(System.Int32, System.Int64, System.Byte[], System.Int32, System.Int32)
  nameWithType.vb: IDataRecord.GetBytes(Int32, Int64, Byte(), Int32, Int32)
  fullname.vb: System.Data.IDataRecord.GetBytes(System.Int32, System.Int64, System.Byte(), System.Int32, System.Int32)
  name.vb: GetBytes(Int32, Int64, Byte(), Int32, Int32)
  spec.csharp:
  - uid: System.Data.IDataRecord.GetBytes(System.Int32,System.Int64,System.Byte[],System.Int32,System.Int32)
    name: GetBytes
    nameWithType: IDataRecord.GetBytes
    fullName: System.Data.IDataRecord.GetBytes
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int64
    name: Int64
    nameWithType: Int64
    fullName: System.Int64
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: System.Byte
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Data.IDataRecord.GetBytes(System.Int32,System.Int64,System.Byte[],System.Int32,System.Int32)
    name: GetBytes
    nameWithType: IDataRecord.GetBytes
    fullName: System.Data.IDataRecord.GetBytes
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int64
    name: Int64
    nameWithType: Int64
    fullName: System.Int64
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: System.Byte
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Data.IDataRecord.GetChar(System.Int32)
  commentId: M:System.Data.IDataRecord.GetChar(System.Int32)
  parent: System.Data.IDataRecord
  isExternal: true
  name: GetChar(Int32)
  nameWithType: IDataRecord.GetChar(Int32)
  fullName: System.Data.IDataRecord.GetChar(System.Int32)
  spec.csharp:
  - uid: System.Data.IDataRecord.GetChar(System.Int32)
    name: GetChar
    nameWithType: IDataRecord.GetChar
    fullName: System.Data.IDataRecord.GetChar
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Data.IDataRecord.GetChar(System.Int32)
    name: GetChar
    nameWithType: IDataRecord.GetChar
    fullName: System.Data.IDataRecord.GetChar
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Data.IDataRecord.GetChars(System.Int32,System.Int64,System.Char[],System.Int32,System.Int32)
  commentId: M:System.Data.IDataRecord.GetChars(System.Int32,System.Int64,System.Char[],System.Int32,System.Int32)
  parent: System.Data.IDataRecord
  isExternal: true
  name: GetChars(Int32, Int64, Char[], Int32, Int32)
  nameWithType: IDataRecord.GetChars(Int32, Int64, Char[], Int32, Int32)
  fullName: System.Data.IDataRecord.GetChars(System.Int32, System.Int64, System.Char[], System.Int32, System.Int32)
  nameWithType.vb: IDataRecord.GetChars(Int32, Int64, Char(), Int32, Int32)
  fullname.vb: System.Data.IDataRecord.GetChars(System.Int32, System.Int64, System.Char(), System.Int32, System.Int32)
  name.vb: GetChars(Int32, Int64, Char(), Int32, Int32)
  spec.csharp:
  - uid: System.Data.IDataRecord.GetChars(System.Int32,System.Int64,System.Char[],System.Int32,System.Int32)
    name: GetChars
    nameWithType: IDataRecord.GetChars
    fullName: System.Data.IDataRecord.GetChars
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int64
    name: Int64
    nameWithType: Int64
    fullName: System.Int64
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Char
    name: Char
    nameWithType: Char
    fullName: System.Char
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Data.IDataRecord.GetChars(System.Int32,System.Int64,System.Char[],System.Int32,System.Int32)
    name: GetChars
    nameWithType: IDataRecord.GetChars
    fullName: System.Data.IDataRecord.GetChars
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int64
    name: Int64
    nameWithType: Int64
    fullName: System.Int64
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Char
    name: Char
    nameWithType: Char
    fullName: System.Char
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Data.IDataRecord.GetData(System.Int32)
  commentId: M:System.Data.IDataRecord.GetData(System.Int32)
  parent: System.Data.IDataRecord
  isExternal: true
  name: GetData(Int32)
  nameWithType: IDataRecord.GetData(Int32)
  fullName: System.Data.IDataRecord.GetData(System.Int32)
  spec.csharp:
  - uid: System.Data.IDataRecord.GetData(System.Int32)
    name: GetData
    nameWithType: IDataRecord.GetData
    fullName: System.Data.IDataRecord.GetData
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Data.IDataRecord.GetData(System.Int32)
    name: GetData
    nameWithType: IDataRecord.GetData
    fullName: System.Data.IDataRecord.GetData
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Data.IDataRecord.GetDataTypeName(System.Int32)
  commentId: M:System.Data.IDataRecord.GetDataTypeName(System.Int32)
  parent: System.Data.IDataRecord
  isExternal: true
  name: GetDataTypeName(Int32)
  nameWithType: IDataRecord.GetDataTypeName(Int32)
  fullName: System.Data.IDataRecord.GetDataTypeName(System.Int32)
  spec.csharp:
  - uid: System.Data.IDataRecord.GetDataTypeName(System.Int32)
    name: GetDataTypeName
    nameWithType: IDataRecord.GetDataTypeName
    fullName: System.Data.IDataRecord.GetDataTypeName
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Data.IDataRecord.GetDataTypeName(System.Int32)
    name: GetDataTypeName
    nameWithType: IDataRecord.GetDataTypeName
    fullName: System.Data.IDataRecord.GetDataTypeName
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Data.IDataRecord.GetDateTime(System.Int32)
  commentId: M:System.Data.IDataRecord.GetDateTime(System.Int32)
  parent: System.Data.IDataRecord
  isExternal: true
  name: GetDateTime(Int32)
  nameWithType: IDataRecord.GetDateTime(Int32)
  fullName: System.Data.IDataRecord.GetDateTime(System.Int32)
  spec.csharp:
  - uid: System.Data.IDataRecord.GetDateTime(System.Int32)
    name: GetDateTime
    nameWithType: IDataRecord.GetDateTime
    fullName: System.Data.IDataRecord.GetDateTime
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Data.IDataRecord.GetDateTime(System.Int32)
    name: GetDateTime
    nameWithType: IDataRecord.GetDateTime
    fullName: System.Data.IDataRecord.GetDateTime
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Data.IDataRecord.GetDecimal(System.Int32)
  commentId: M:System.Data.IDataRecord.GetDecimal(System.Int32)
  parent: System.Data.IDataRecord
  isExternal: true
  name: GetDecimal(Int32)
  nameWithType: IDataRecord.GetDecimal(Int32)
  fullName: System.Data.IDataRecord.GetDecimal(System.Int32)
  spec.csharp:
  - uid: System.Data.IDataRecord.GetDecimal(System.Int32)
    name: GetDecimal
    nameWithType: IDataRecord.GetDecimal
    fullName: System.Data.IDataRecord.GetDecimal
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Data.IDataRecord.GetDecimal(System.Int32)
    name: GetDecimal
    nameWithType: IDataRecord.GetDecimal
    fullName: System.Data.IDataRecord.GetDecimal
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Data.IDataRecord.GetDouble(System.Int32)
  commentId: M:System.Data.IDataRecord.GetDouble(System.Int32)
  parent: System.Data.IDataRecord
  isExternal: true
  name: GetDouble(Int32)
  nameWithType: IDataRecord.GetDouble(Int32)
  fullName: System.Data.IDataRecord.GetDouble(System.Int32)
  spec.csharp:
  - uid: System.Data.IDataRecord.GetDouble(System.Int32)
    name: GetDouble
    nameWithType: IDataRecord.GetDouble
    fullName: System.Data.IDataRecord.GetDouble
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Data.IDataRecord.GetDouble(System.Int32)
    name: GetDouble
    nameWithType: IDataRecord.GetDouble
    fullName: System.Data.IDataRecord.GetDouble
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Data.IDataRecord.GetFieldType(System.Int32)
  commentId: M:System.Data.IDataRecord.GetFieldType(System.Int32)
  parent: System.Data.IDataRecord
  isExternal: true
  name: GetFieldType(Int32)
  nameWithType: IDataRecord.GetFieldType(Int32)
  fullName: System.Data.IDataRecord.GetFieldType(System.Int32)
  spec.csharp:
  - uid: System.Data.IDataRecord.GetFieldType(System.Int32)
    name: GetFieldType
    nameWithType: IDataRecord.GetFieldType
    fullName: System.Data.IDataRecord.GetFieldType
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Data.IDataRecord.GetFieldType(System.Int32)
    name: GetFieldType
    nameWithType: IDataRecord.GetFieldType
    fullName: System.Data.IDataRecord.GetFieldType
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Data.IDataRecord.GetFloat(System.Int32)
  commentId: M:System.Data.IDataRecord.GetFloat(System.Int32)
  parent: System.Data.IDataRecord
  isExternal: true
  name: GetFloat(Int32)
  nameWithType: IDataRecord.GetFloat(Int32)
  fullName: System.Data.IDataRecord.GetFloat(System.Int32)
  spec.csharp:
  - uid: System.Data.IDataRecord.GetFloat(System.Int32)
    name: GetFloat
    nameWithType: IDataRecord.GetFloat
    fullName: System.Data.IDataRecord.GetFloat
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Data.IDataRecord.GetFloat(System.Int32)
    name: GetFloat
    nameWithType: IDataRecord.GetFloat
    fullName: System.Data.IDataRecord.GetFloat
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Data.IDataRecord.GetGuid(System.Int32)
  commentId: M:System.Data.IDataRecord.GetGuid(System.Int32)
  parent: System.Data.IDataRecord
  isExternal: true
  name: GetGuid(Int32)
  nameWithType: IDataRecord.GetGuid(Int32)
  fullName: System.Data.IDataRecord.GetGuid(System.Int32)
  spec.csharp:
  - uid: System.Data.IDataRecord.GetGuid(System.Int32)
    name: GetGuid
    nameWithType: IDataRecord.GetGuid
    fullName: System.Data.IDataRecord.GetGuid
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Data.IDataRecord.GetGuid(System.Int32)
    name: GetGuid
    nameWithType: IDataRecord.GetGuid
    fullName: System.Data.IDataRecord.GetGuid
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Data.IDataRecord.GetInt16(System.Int32)
  commentId: M:System.Data.IDataRecord.GetInt16(System.Int32)
  parent: System.Data.IDataRecord
  isExternal: true
  name: GetInt16(Int32)
  nameWithType: IDataRecord.GetInt16(Int32)
  fullName: System.Data.IDataRecord.GetInt16(System.Int32)
  spec.csharp:
  - uid: System.Data.IDataRecord.GetInt16(System.Int32)
    name: GetInt16
    nameWithType: IDataRecord.GetInt16
    fullName: System.Data.IDataRecord.GetInt16
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Data.IDataRecord.GetInt16(System.Int32)
    name: GetInt16
    nameWithType: IDataRecord.GetInt16
    fullName: System.Data.IDataRecord.GetInt16
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Data.IDataRecord.GetInt32(System.Int32)
  commentId: M:System.Data.IDataRecord.GetInt32(System.Int32)
  parent: System.Data.IDataRecord
  isExternal: true
  name: GetInt32(Int32)
  nameWithType: IDataRecord.GetInt32(Int32)
  fullName: System.Data.IDataRecord.GetInt32(System.Int32)
  spec.csharp:
  - uid: System.Data.IDataRecord.GetInt32(System.Int32)
    name: GetInt32
    nameWithType: IDataRecord.GetInt32
    fullName: System.Data.IDataRecord.GetInt32
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Data.IDataRecord.GetInt32(System.Int32)
    name: GetInt32
    nameWithType: IDataRecord.GetInt32
    fullName: System.Data.IDataRecord.GetInt32
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Data.IDataRecord.GetInt64(System.Int32)
  commentId: M:System.Data.IDataRecord.GetInt64(System.Int32)
  parent: System.Data.IDataRecord
  isExternal: true
  name: GetInt64(Int32)
  nameWithType: IDataRecord.GetInt64(Int32)
  fullName: System.Data.IDataRecord.GetInt64(System.Int32)
  spec.csharp:
  - uid: System.Data.IDataRecord.GetInt64(System.Int32)
    name: GetInt64
    nameWithType: IDataRecord.GetInt64
    fullName: System.Data.IDataRecord.GetInt64
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Data.IDataRecord.GetInt64(System.Int32)
    name: GetInt64
    nameWithType: IDataRecord.GetInt64
    fullName: System.Data.IDataRecord.GetInt64
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Data.IDataRecord.GetName(System.Int32)
  commentId: M:System.Data.IDataRecord.GetName(System.Int32)
  parent: System.Data.IDataRecord
  isExternal: true
  name: GetName(Int32)
  nameWithType: IDataRecord.GetName(Int32)
  fullName: System.Data.IDataRecord.GetName(System.Int32)
  spec.csharp:
  - uid: System.Data.IDataRecord.GetName(System.Int32)
    name: GetName
    nameWithType: IDataRecord.GetName
    fullName: System.Data.IDataRecord.GetName
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Data.IDataRecord.GetName(System.Int32)
    name: GetName
    nameWithType: IDataRecord.GetName
    fullName: System.Data.IDataRecord.GetName
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Data.IDataRecord.GetOrdinal(System.String)
  commentId: M:System.Data.IDataRecord.GetOrdinal(System.String)
  parent: System.Data.IDataRecord
  isExternal: true
  name: GetOrdinal(String)
  nameWithType: IDataRecord.GetOrdinal(String)
  fullName: System.Data.IDataRecord.GetOrdinal(System.String)
  spec.csharp:
  - uid: System.Data.IDataRecord.GetOrdinal(System.String)
    name: GetOrdinal
    nameWithType: IDataRecord.GetOrdinal
    fullName: System.Data.IDataRecord.GetOrdinal
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Data.IDataRecord.GetOrdinal(System.String)
    name: GetOrdinal
    nameWithType: IDataRecord.GetOrdinal
    fullName: System.Data.IDataRecord.GetOrdinal
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Data.IDataRecord.GetString(System.Int32)
  commentId: M:System.Data.IDataRecord.GetString(System.Int32)
  parent: System.Data.IDataRecord
  isExternal: true
  name: GetString(Int32)
  nameWithType: IDataRecord.GetString(Int32)
  fullName: System.Data.IDataRecord.GetString(System.Int32)
  spec.csharp:
  - uid: System.Data.IDataRecord.GetString(System.Int32)
    name: GetString
    nameWithType: IDataRecord.GetString
    fullName: System.Data.IDataRecord.GetString
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Data.IDataRecord.GetString(System.Int32)
    name: GetString
    nameWithType: IDataRecord.GetString
    fullName: System.Data.IDataRecord.GetString
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Data.IDataRecord.GetValue(System.Int32)
  commentId: M:System.Data.IDataRecord.GetValue(System.Int32)
  parent: System.Data.IDataRecord
  isExternal: true
  name: GetValue(Int32)
  nameWithType: IDataRecord.GetValue(Int32)
  fullName: System.Data.IDataRecord.GetValue(System.Int32)
  spec.csharp:
  - uid: System.Data.IDataRecord.GetValue(System.Int32)
    name: GetValue
    nameWithType: IDataRecord.GetValue
    fullName: System.Data.IDataRecord.GetValue
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Data.IDataRecord.GetValue(System.Int32)
    name: GetValue
    nameWithType: IDataRecord.GetValue
    fullName: System.Data.IDataRecord.GetValue
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Data.IDataRecord.GetValues(System.Object[])
  commentId: M:System.Data.IDataRecord.GetValues(System.Object[])
  parent: System.Data.IDataRecord
  isExternal: true
  name: GetValues(Object[])
  nameWithType: IDataRecord.GetValues(Object[])
  fullName: System.Data.IDataRecord.GetValues(System.Object[])
  nameWithType.vb: IDataRecord.GetValues(Object())
  fullname.vb: System.Data.IDataRecord.GetValues(System.Object())
  name.vb: GetValues(Object())
  spec.csharp:
  - uid: System.Data.IDataRecord.GetValues(System.Object[])
    name: GetValues
    nameWithType: IDataRecord.GetValues
    fullName: System.Data.IDataRecord.GetValues
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Data.IDataRecord.GetValues(System.Object[])
    name: GetValues
    nameWithType: IDataRecord.GetValues
    fullName: System.Data.IDataRecord.GetValues
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Data.IDataRecord.IsDBNull(System.Int32)
  commentId: M:System.Data.IDataRecord.IsDBNull(System.Int32)
  parent: System.Data.IDataRecord
  isExternal: true
  name: IsDBNull(Int32)
  nameWithType: IDataRecord.IsDBNull(Int32)
  fullName: System.Data.IDataRecord.IsDBNull(System.Int32)
  spec.csharp:
  - uid: System.Data.IDataRecord.IsDBNull(System.Int32)
    name: IsDBNull
    nameWithType: IDataRecord.IsDBNull
    fullName: System.Data.IDataRecord.IsDBNull
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Data.IDataRecord.IsDBNull(System.Int32)
    name: IsDBNull
    nameWithType: IDataRecord.IsDBNull
    fullName: System.Data.IDataRecord.IsDBNull
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.IDisposable.Dispose
  commentId: M:System.IDisposable.Dispose
  parent: System.IDisposable
  isExternal: false
  name: Dispose()
  nameWithType: IDisposable.Dispose()
  fullName: System.IDisposable.Dispose()
  spec.csharp:
  - uid: System.IDisposable.Dispose
    name: Dispose
    nameWithType: IDisposable.Dispose
    fullName: System.IDisposable.Dispose
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.IDisposable.Dispose
    name: Dispose
    nameWithType: IDisposable.Dispose
    fullName: System.IDisposable.Dispose
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Data.IDataRecord
  commentId: T:System.Data.IDataRecord
  parent: System.Data
  isExternal: false
  name: IDataRecord
  nameWithType: IDataRecord
  fullName: System.Data.IDataRecord
- uid: System.IDisposable
  commentId: T:System.IDisposable
  parent: System
  isExternal: false
  name: IDisposable
  nameWithType: IDisposable
  fullName: System.IDisposable
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: false
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: false
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Data.DataTable
  commentId: T:System.Data.DataTable
  parent: System.Data
  isExternal: false
  name: DataTable
  nameWithType: DataTable
  fullName: System.Data.DataTable
- uid: System.InvalidOperationException
  commentId: T:System.InvalidOperationException
  parent: System
  isExternal: false
  name: InvalidOperationException
  nameWithType: InvalidOperationException
  fullName: System.InvalidOperationException
