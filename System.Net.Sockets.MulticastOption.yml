### YamlMime:ManagedReference
items:
- uid: System.Net.Sockets.MulticastOption
  commentId: T:System.Net.Sockets.MulticastOption
  id: MulticastOption
  parent: System.Net.Sockets
  children:
  - System.Net.Sockets.MulticastOption.#ctor(System.Net.IPAddress)
  - System.Net.Sockets.MulticastOption.#ctor(System.Net.IPAddress,System.Int32)
  - System.Net.Sockets.MulticastOption.#ctor(System.Net.IPAddress,System.Net.IPAddress)
  - System.Net.Sockets.MulticastOption.Group
  - System.Net.Sockets.MulticastOption.InterfaceIndex
  - System.Net.Sockets.MulticastOption.LocalAddress
  langs:
  - csharp
  - vb
  name: MulticastOption
  nameWithType: MulticastOption
  fullName: System.Net.Sockets.MulticastOption
  type: Class
  source:
    remote:
      path: src/System.Net.Sockets/ref/System.Net.Sockets.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: MulticastOption
    path: src/System.Net.Sockets/ref/System.Net.Sockets.cs
    startLine: 77
  assemblies:
  - System.Net.Sockets
  namespace: System.Net.Sockets
  summary: "\n<p>Contains <xref href=\"System.Net.IPAddress\" data-throw-if-not-resolved=\"false\"></xref> values used to join and drop multicast groups.</p>\n"
  syntax:
    content: public class MulticastOption
    content.vb: Public Class MulticastOption
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: System.Net.Sockets.MulticastOption.#ctor(System.Net.IPAddress)
  commentId: M:System.Net.Sockets.MulticastOption.#ctor(System.Net.IPAddress)
  id: '#ctor(System.Net.IPAddress)'
  parent: System.Net.Sockets.MulticastOption
  langs:
  - csharp
  - vb
  name: MulticastOption(IPAddress)
  nameWithType: MulticastOption.MulticastOption(IPAddress)
  fullName: System.Net.Sockets.MulticastOption.MulticastOption(System.Net.IPAddress)
  type: Constructor
  source:
    remote:
      path: src/System.Net.Sockets/ref/System.Net.Sockets.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: .ctor
    path: src/System.Net.Sockets/ref/System.Net.Sockets.cs
    startLine: 79
  assemblies:
  - System.Net.Sockets
  namespace: System.Net.Sockets
  summary: "\n<p>Initializes a new version of the <xref href=\"System.Net.Sockets.MulticastOption\" data-throw-if-not-resolved=\"false\"></xref> class for the specified IP multicast group.</p>\n"
  syntax:
    content: public MulticastOption(IPAddress group)
    content.vb: Public Sub New(group As IPAddress)
    parameters:
    - id: group
      type: System.Net.IPAddress
      description: "\n<p>The <xref href=\"System.Net.IPAddress\" data-throw-if-not-resolved=\"false\"></xref> of the multicast group. </p>\n"
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "\n<p>\n<em>group</em> is <strong>null</strong>. </p>\n"
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: System.Net.Sockets.MulticastOption.#ctor(System.Net.IPAddress,System.Int32)
  commentId: M:System.Net.Sockets.MulticastOption.#ctor(System.Net.IPAddress,System.Int32)
  id: '#ctor(System.Net.IPAddress,System.Int32)'
  parent: System.Net.Sockets.MulticastOption
  langs:
  - csharp
  - vb
  name: MulticastOption(IPAddress, Int32)
  nameWithType: MulticastOption.MulticastOption(IPAddress, Int32)
  fullName: System.Net.Sockets.MulticastOption.MulticastOption(System.Net.IPAddress, System.Int32)
  type: Constructor
  source:
    remote:
      path: src/System.Net.Sockets/ref/System.Net.Sockets.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: .ctor
    path: src/System.Net.Sockets/ref/System.Net.Sockets.cs
    startLine: 80
  assemblies:
  - System.Net.Sockets
  namespace: System.Net.Sockets
  summary: "\n<p>Initializes a new instance of the <xref href=\"System.Net.Sockets.MulticastOption\" data-throw-if-not-resolved=\"false\"></xref> class with the specified IP multicast group address and interface index.</p>\n"
  syntax:
    content: public MulticastOption(IPAddress group, int interfaceIndex)
    content.vb: Public Sub New(group As IPAddress, interfaceIndex As Integer)
    parameters:
    - id: group
      type: System.Net.IPAddress
      description: "\n<p>The <xref href=\"System.Net.IPAddress\" data-throw-if-not-resolved=\"false\"></xref> of the multicast group.</p>\n"
    - id: interfaceIndex
      type: System.Int32
      description: "\n<p>The index of the interface that is used to send and receive multicast packets.</p>\n"
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: System.Net.Sockets.MulticastOption.#ctor(System.Net.IPAddress,System.Net.IPAddress)
  commentId: M:System.Net.Sockets.MulticastOption.#ctor(System.Net.IPAddress,System.Net.IPAddress)
  id: '#ctor(System.Net.IPAddress,System.Net.IPAddress)'
  parent: System.Net.Sockets.MulticastOption
  langs:
  - csharp
  - vb
  name: MulticastOption(IPAddress, IPAddress)
  nameWithType: MulticastOption.MulticastOption(IPAddress, IPAddress)
  fullName: System.Net.Sockets.MulticastOption.MulticastOption(System.Net.IPAddress, System.Net.IPAddress)
  type: Constructor
  source:
    remote:
      path: src/System.Net.Sockets/ref/System.Net.Sockets.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: .ctor
    path: src/System.Net.Sockets/ref/System.Net.Sockets.cs
    startLine: 81
  assemblies:
  - System.Net.Sockets
  namespace: System.Net.Sockets
  summary: "\n<p>Initializes a new instance of the <xref href=\"System.Net.Sockets.MulticastOption\" data-throw-if-not-resolved=\"false\"></xref> class with the specified IP multicast group address and local IP address associated with a network interface.</p>\n"
  syntax:
    content: public MulticastOption(IPAddress group, IPAddress mcint)
    content.vb: Public Sub New(group As IPAddress, mcint As IPAddress)
    parameters:
    - id: group
      type: System.Net.IPAddress
      description: "\n<p>The group <xref href=\"System.Net.IPAddress\" data-throw-if-not-resolved=\"false\"></xref>. </p>\n"
    - id: mcint
      type: System.Net.IPAddress
      description: "\n<p>The local <xref href=\"System.Net.IPAddress\" data-throw-if-not-resolved=\"false\"></xref>. </p>\n"
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "\n<p>\n<em>group</em> is <strong>null</strong>.</p>\n<p>-or- </p>\n<p>\n<em>mcint</em> is <strong>null</strong>. </p>\n"
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: System.Net.Sockets.MulticastOption.Group
  commentId: P:System.Net.Sockets.MulticastOption.Group
  id: Group
  parent: System.Net.Sockets.MulticastOption
  langs:
  - csharp
  - vb
  name: Group
  nameWithType: MulticastOption.Group
  fullName: System.Net.Sockets.MulticastOption.Group
  type: Property
  source:
    remote:
      path: src/System.Net.Sockets/ref/System.Net.Sockets.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: Group
    path: src/System.Net.Sockets/ref/System.Net.Sockets.cs
    startLine: 82
  assemblies:
  - System.Net.Sockets
  namespace: System.Net.Sockets
  summary: "\n<p>Gets or sets the IP address of a multicast group.</p>\n"
  syntax:
    content: public IPAddress Group { get; set; }
    content.vb: Public Property Group As IPAddress
    parameters: []
    return:
      type: System.Net.IPAddress
      description: "\n<p>An <xref href=\"System.Net.IPAddress\" data-throw-if-not-resolved=\"false\"></xref> that contains the Internet address of a multicast group.</p>\n"
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: System.Net.Sockets.MulticastOption.InterfaceIndex
  commentId: P:System.Net.Sockets.MulticastOption.InterfaceIndex
  id: InterfaceIndex
  parent: System.Net.Sockets.MulticastOption
  langs:
  - csharp
  - vb
  name: InterfaceIndex
  nameWithType: MulticastOption.InterfaceIndex
  fullName: System.Net.Sockets.MulticastOption.InterfaceIndex
  type: Property
  source:
    remote:
      path: src/System.Net.Sockets/ref/System.Net.Sockets.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: InterfaceIndex
    path: src/System.Net.Sockets/ref/System.Net.Sockets.cs
    startLine: 83
  assemblies:
  - System.Net.Sockets
  namespace: System.Net.Sockets
  summary: "\n<p>Gets or sets the index of the interface that is used to send and receive multicast packets. </p>\n"
  syntax:
    content: public int InterfaceIndex { get; set; }
    content.vb: Public Property InterfaceIndex As Integer
    parameters: []
    return:
      type: System.Int32
      description: "\n<p>An integer that represents the index of a <xref href=\"System.Net.NetworkInformation.NetworkInterface\" data-throw-if-not-resolved=\"false\"></xref> array element.</p>\n"
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: System.Net.Sockets.MulticastOption.LocalAddress
  commentId: P:System.Net.Sockets.MulticastOption.LocalAddress
  id: LocalAddress
  parent: System.Net.Sockets.MulticastOption
  langs:
  - csharp
  - vb
  name: LocalAddress
  nameWithType: MulticastOption.LocalAddress
  fullName: System.Net.Sockets.MulticastOption.LocalAddress
  type: Property
  source:
    remote:
      path: src/System.Net.Sockets/ref/System.Net.Sockets.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: LocalAddress
    path: src/System.Net.Sockets/ref/System.Net.Sockets.cs
    startLine: 84
  assemblies:
  - System.Net.Sockets
  namespace: System.Net.Sockets
  summary: "\n<p>Gets or sets the local address associated with a multicast group.</p>\n"
  syntax:
    content: public IPAddress LocalAddress { get; set; }
    content.vb: Public Property LocalAddress As IPAddress
    parameters: []
    return:
      type: System.Net.IPAddress
      description: "\n<p>An <xref href=\"System.Net.IPAddress\" data-throw-if-not-resolved=\"false\"></xref> that contains the local address associated with a multicast group.</p>\n"
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
references:
- uid: System.Net.Sockets
  commentId: N:System.Net.Sockets
  isExternal: false
  name: System.Net.Sockets
  nameWithType: System.Net.Sockets
  fullName: System.Net.Sockets
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: false
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: System.Net.IPAddress
  commentId: T:System.Net.IPAddress
  parent: System.Net
  isExternal: false
  name: IPAddress
  nameWithType: IPAddress
  fullName: System.Net.IPAddress
- uid: System.Net
  commentId: N:System.Net
  isExternal: false
  name: System.Net
  nameWithType: System.Net
  fullName: System.Net
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: false
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.ArgumentNullException
  commentId: T:System.ArgumentNullException
  isExternal: false
  name: ArgumentNullException
  nameWithType: ArgumentNullException
  fullName: System.ArgumentNullException
