### YamlMime:ManagedReference
items:
- uid: System.ServiceModel.Security.TrustVersion
  commentId: T:System.ServiceModel.Security.TrustVersion
  id: TrustVersion
  parent: System.ServiceModel.Security
  children:
  - System.ServiceModel.Security.TrustVersion.Default
  - System.ServiceModel.Security.TrustVersion.Namespace
  - System.ServiceModel.Security.TrustVersion.Prefix
  - System.ServiceModel.Security.TrustVersion.WSTrustFeb2005
  langs:
  - csharp
  - vb
  name: TrustVersion
  nameWithType: TrustVersion
  fullName: System.ServiceModel.Security.TrustVersion
  type: Class
  source:
    remote:
      path: src/System.ServiceModel.Security/ref/System.ServiceModel.Security.cs
      branch: master
      repo: https://github.com/dotnet/wcf.git
    id: TrustVersion
    path: src/System.ServiceModel.Security/ref/System.ServiceModel.Security.cs
    startLine: 102
  assemblies:
  - System.ServiceModel.Security
  namespace: System.ServiceModel.Security
  summary: "\n<p>Contains the set of supported WS-Trust versions. This is an abstract class.</p>\n"
  syntax:
    content: public abstract class TrustVersion
    content.vb: Public MustInherit Class TrustVersion
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  modifiers.csharp:
  - public
  - abstract
  - class
  modifiers.vb:
  - Public
  - MustInherit
  - Class
- uid: System.ServiceModel.Security.TrustVersion.Default
  commentId: P:System.ServiceModel.Security.TrustVersion.Default
  id: Default
  parent: System.ServiceModel.Security.TrustVersion
  langs:
  - csharp
  - vb
  name: Default
  nameWithType: TrustVersion.Default
  fullName: System.ServiceModel.Security.TrustVersion.Default
  type: Property
  source:
    remote:
      path: src/System.ServiceModel.Security/ref/System.ServiceModel.Security.cs
      branch: master
      repo: https://github.com/dotnet/wcf.git
    id: Default
    path: src/System.ServiceModel.Security/ref/System.ServiceModel.Security.cs
    startLine: 105
  assemblies:
  - System.ServiceModel.Security
  namespace: System.ServiceModel.Security
  summary: "\n<p>Gets the default version.</p>\n"
  syntax:
    content: public static TrustVersion Default { get; }
    content.vb: Public Shared ReadOnly Property Default As TrustVersion
    parameters: []
    return:
      type: System.ServiceModel.Security.TrustVersion
      description: "\n<p>The default version.</p>\n"
  modifiers.csharp:
  - public
  - static
  - get
  modifiers.vb:
  - Public
  - Shared
  - ReadOnly
- uid: System.ServiceModel.Security.TrustVersion.Namespace
  commentId: P:System.ServiceModel.Security.TrustVersion.Namespace
  id: Namespace
  parent: System.ServiceModel.Security.TrustVersion
  langs:
  - csharp
  - vb
  name: Namespace
  nameWithType: TrustVersion.Namespace
  fullName: System.ServiceModel.Security.TrustVersion.Namespace
  type: Property
  source:
    remote:
      path: src/System.ServiceModel.Security/ref/System.ServiceModel.Security.cs
      branch: master
      repo: https://github.com/dotnet/wcf.git
    id: Namespace
    path: src/System.ServiceModel.Security/ref/System.ServiceModel.Security.cs
    startLine: 106
  assemblies:
  - System.ServiceModel.Security
  namespace: System.ServiceModel.Security
  summary: "\n<p>Gets the namespace for this trust version.</p>\n"
  syntax:
    content: public Xml.XmlDictionaryString Namespace { get; }
    content.vb: Public ReadOnly Property Namespace As Xml.XmlDictionaryString
    parameters: []
    return:
      type: System.Xml.XmlDictionaryString
      description: "\n<p>The namespace for this trust version.</p>\n"
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: System.ServiceModel.Security.TrustVersion.Prefix
  commentId: P:System.ServiceModel.Security.TrustVersion.Prefix
  id: Prefix
  parent: System.ServiceModel.Security.TrustVersion
  langs:
  - csharp
  - vb
  name: Prefix
  nameWithType: TrustVersion.Prefix
  fullName: System.ServiceModel.Security.TrustVersion.Prefix
  type: Property
  source:
    remote:
      path: src/System.ServiceModel.Security/ref/System.ServiceModel.Security.cs
      branch: master
      repo: https://github.com/dotnet/wcf.git
    id: Prefix
    path: src/System.ServiceModel.Security/ref/System.ServiceModel.Security.cs
    startLine: 107
  assemblies:
  - System.ServiceModel.Security
  namespace: System.ServiceModel.Security
  summary: "\n<p>Gets the prefix.</p>\n"
  syntax:
    content: public Xml.XmlDictionaryString Prefix { get; }
    content.vb: Public ReadOnly Property Prefix As Xml.XmlDictionaryString
    parameters: []
    return:
      type: System.Xml.XmlDictionaryString
      description: "\n<p>The prefix.</p>\n"
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: System.ServiceModel.Security.TrustVersion.WSTrustFeb2005
  commentId: P:System.ServiceModel.Security.TrustVersion.WSTrustFeb2005
  id: WSTrustFeb2005
  parent: System.ServiceModel.Security.TrustVersion
  langs:
  - csharp
  - vb
  name: WSTrustFeb2005
  nameWithType: TrustVersion.WSTrustFeb2005
  fullName: System.ServiceModel.Security.TrustVersion.WSTrustFeb2005
  type: Property
  source:
    remote:
      path: src/System.ServiceModel.Security/ref/System.ServiceModel.Security.cs
      branch: master
      repo: https://github.com/dotnet/wcf.git
    id: WSTrustFeb2005
    path: src/System.ServiceModel.Security/ref/System.ServiceModel.Security.cs
    startLine: 108
  assemblies:
  - System.ServiceModel.Security
  namespace: System.ServiceModel.Security
  summary: "\n<p>Gets the February 2005 version of WS-Trust.</p>\n"
  syntax:
    content: public static TrustVersion WSTrustFeb2005 { get; }
    content.vb: Public Shared ReadOnly Property WSTrustFeb2005 As TrustVersion
    parameters: []
    return:
      type: System.ServiceModel.Security.TrustVersion
      description: "\n<p>The February 2005 version of WS-Trust.</p>\n"
  modifiers.csharp:
  - public
  - static
  - get
  modifiers.vb:
  - Public
  - Shared
  - ReadOnly
references:
- uid: System.ServiceModel.Security
  commentId: N:System.ServiceModel.Security
  isExternal: false
  name: System.ServiceModel.Security
  nameWithType: System.ServiceModel.Security
  fullName: System.ServiceModel.Security
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: false
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: System.ServiceModel.Security.TrustVersion
  commentId: T:System.ServiceModel.Security.TrustVersion
  parent: System.ServiceModel.Security
  isExternal: false
  name: TrustVersion
  nameWithType: TrustVersion
  fullName: System.ServiceModel.Security.TrustVersion
- uid: System.Xml.XmlDictionaryString
  commentId: T:System.Xml.XmlDictionaryString
  parent: System.Xml
  isExternal: false
  name: XmlDictionaryString
  nameWithType: XmlDictionaryString
  fullName: System.Xml.XmlDictionaryString
- uid: System.Xml
  commentId: N:System.Xml
  isExternal: false
  name: System.Xml
  nameWithType: System.Xml
  fullName: System.Xml
