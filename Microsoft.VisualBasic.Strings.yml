### YamlMime:ManagedReference
items:
- uid: Microsoft.VisualBasic.Strings
  commentId: T:Microsoft.VisualBasic.Strings
  id: Strings
  parent: Microsoft.VisualBasic
  children:
  - Microsoft.VisualBasic.Strings.AscW(System.Char)
  - Microsoft.VisualBasic.Strings.AscW(System.String)
  - Microsoft.VisualBasic.Strings.ChrW(System.Int32)
  langs:
  - csharp
  - vb
  name: Strings
  nameWithType: Strings
  fullName: Microsoft.VisualBasic.Strings
  type: Class
  source:
    remote:
      path: src/Microsoft.VisualBasic/ref/Microsoft.VisualBasic.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: Strings
    path: src/Microsoft.VisualBasic/ref/Microsoft.VisualBasic.cs
    startLine: 38
  assemblies:
  - Microsoft.VisualBasic
  namespace: Microsoft.VisualBasic
  summary: "\n<p>The <strong>Strings</strong> module contains procedures used to perform string operations. </p>\n"
  syntax:
    content: >-
      [StandardModule]

      public sealed class Strings
    content.vb: >-
      <StandardModule>

      Public NotInheritable Class Strings
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  attributes:
  - type: Microsoft.VisualBasic.CompilerServices.StandardModuleAttribute
    ctor: Microsoft.VisualBasic.CompilerServices.StandardModuleAttribute.#ctor
    arguments: []
  modifiers.csharp:
  - public
  - sealed
  - class
  modifiers.vb:
  - Public
  - NotInheritable
  - Class
- uid: Microsoft.VisualBasic.Strings.AscW(System.Char)
  commentId: M:Microsoft.VisualBasic.Strings.AscW(System.Char)
  id: AscW(System.Char)
  parent: Microsoft.VisualBasic.Strings
  langs:
  - csharp
  - vb
  name: AscW(Char)
  nameWithType: Strings.AscW(Char)
  fullName: Microsoft.VisualBasic.Strings.AscW(System.Char)
  type: Method
  source:
    remote:
      path: src/Microsoft.VisualBasic/ref/Microsoft.VisualBasic.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: AscW
    path: src/Microsoft.VisualBasic/ref/Microsoft.VisualBasic.cs
    startLine: 42
  assemblies:
  - Microsoft.VisualBasic
  namespace: Microsoft.VisualBasic
  summary: "\n<p>Returns an <strong>Integer</strong> value representing the character code corresponding to a character.</p>\n"
  syntax:
    content: public static int AscW(char String)
    content.vb: Public Shared Function AscW(String As Char) As Integer
    parameters:
    - id: String
      type: System.Char
      description: "\n<p>Required. Any valid <strong>Char</strong> or <strong>String</strong> expression. If <em>String</em> is a <strong>String</strong> expression, only the first character of the string is used for input. If <em>String</em> is <strong>Nothing</strong> or contains no characters, an <xref href=\"System.ArgumentException\" data-throw-if-not-resolved=\"false\"></xref> error occurs.</p>\n"
    return:
      type: System.Int32
      description: "\n<p>Returns an <strong>Integer</strong> value representing the character code corresponding to a character.</p>\n"
  seealso:
  - linkId: Microsoft.VisualBasic.Strings.Chr(System.Int32)
    commentId: M:Microsoft.VisualBasic.Strings.Chr(System.Int32)
  - linkId: Microsoft.VisualBasic.Strings.ChrW(System.Int32)
    commentId: M:Microsoft.VisualBasic.Strings.ChrW(System.Int32)
  - linkId: System.Globalization
    commentId: N:System.Globalization
  - linkId: System.Globalization.CultureInfo
    commentId: T:System.Globalization.CultureInfo
  - linkId: System.Globalization.TextInfo.ANSICodePage
    commentId: P:System.Globalization.TextInfo.ANSICodePage
  - linkId: System.ArgumentException
    commentId: T:System.ArgumentException
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Microsoft.VisualBasic.Strings.AscW(System.String)
  commentId: M:Microsoft.VisualBasic.Strings.AscW(System.String)
  id: AscW(System.String)
  parent: Microsoft.VisualBasic.Strings
  langs:
  - csharp
  - vb
  name: AscW(String)
  nameWithType: Strings.AscW(String)
  fullName: Microsoft.VisualBasic.Strings.AscW(System.String)
  type: Method
  source:
    remote:
      path: src/Microsoft.VisualBasic/ref/Microsoft.VisualBasic.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: AscW
    path: src/Microsoft.VisualBasic/ref/Microsoft.VisualBasic.cs
    startLine: 43
  assemblies:
  - Microsoft.VisualBasic
  namespace: Microsoft.VisualBasic
  summary: "\n<p>Returns an <strong>Integer</strong> value representing the character code corresponding to a character.</p>\n"
  syntax:
    content: public static int AscW(string String)
    content.vb: Public Shared Function AscW(String As String) As Integer
    parameters:
    - id: String
      type: System.String
      description: "\n<p>Required. Any valid <strong>Char</strong> or <strong>String</strong> expression. If <em>String</em> is a <strong>String</strong> expression, only the first character of the string is used for input. If <em>String</em> is <strong>Nothing</strong> or contains no characters, an <xref href=\"System.ArgumentException\" data-throw-if-not-resolved=\"false\"></xref> error occurs.</p>\n"
    return:
      type: System.Int32
      description: "\n<p>Returns an <strong>Integer</strong> value representing the character code corresponding to a character.</p>\n"
  seealso:
  - linkId: Microsoft.VisualBasic.Strings.Chr(System.Int32)
    commentId: M:Microsoft.VisualBasic.Strings.Chr(System.Int32)
  - linkId: Microsoft.VisualBasic.Strings.ChrW(System.Int32)
    commentId: M:Microsoft.VisualBasic.Strings.ChrW(System.Int32)
  - linkId: System.Globalization
    commentId: N:System.Globalization
  - linkId: System.Globalization.CultureInfo
    commentId: T:System.Globalization.CultureInfo
  - linkId: System.Globalization.TextInfo.ANSICodePage
    commentId: P:System.Globalization.TextInfo.ANSICodePage
  - linkId: System.ArgumentException
    commentId: T:System.ArgumentException
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Microsoft.VisualBasic.Strings.ChrW(System.Int32)
  commentId: M:Microsoft.VisualBasic.Strings.ChrW(System.Int32)
  id: ChrW(System.Int32)
  parent: Microsoft.VisualBasic.Strings
  langs:
  - csharp
  - vb
  name: ChrW(Int32)
  nameWithType: Strings.ChrW(Int32)
  fullName: Microsoft.VisualBasic.Strings.ChrW(System.Int32)
  type: Method
  source:
    remote:
      path: src/Microsoft.VisualBasic/ref/Microsoft.VisualBasic.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: ChrW
    path: src/Microsoft.VisualBasic/ref/Microsoft.VisualBasic.cs
    startLine: 44
  assemblies:
  - Microsoft.VisualBasic
  namespace: Microsoft.VisualBasic
  summary: "\n<p>Returns the character associated with the specified character code.</p>\n"
  syntax:
    content: public static char ChrW(int CharCode)
    content.vb: Public Shared Function ChrW(CharCode As Integer) As Char
    parameters:
    - id: CharCode
      type: System.Int32
      description: "\n<p>Required. An <strong>Integer</strong> expression representing the <em>code point</em>, or character code, for the character. </p>\n"
    return:
      type: System.Char
      description: "\n<p>Returns the character associated with the specified character code.</p>\n"
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "\n<p>\n<em>CharCode</em> &lt; -32768 or &gt; 65535 for <strong>ChrW</strong>.</p>\n"
  seealso:
  - linkId: Microsoft.VisualBasic.Strings.Chr(System.Int32)
    commentId: M:Microsoft.VisualBasic.Strings.Chr(System.Int32)
  - linkId: erload:Microsoft.VisualBasic.Strings.Asc
    commentId: Overload:Microsoft.VisualBasic.Strings.Asc
  - linkId: Microsoft.VisualBasic.Strings.AscW(System.Char)
    commentId: M:Microsoft.VisualBasic.Strings.AscW(System.Char)
  - linkId: Microsoft.VisualBasic.Conversion.Str(System.Object)
    commentId: M:Microsoft.VisualBasic.Conversion.Str(System.Object)
  - linkId: System.Globalization.CultureInfo
    commentId: T:System.Globalization.CultureInfo
  - linkId: System.ArgumentException
    commentId: T:System.ArgumentException
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
references:
- uid: Microsoft.VisualBasic
  commentId: N:Microsoft.VisualBasic
  isExternal: false
  name: Microsoft.VisualBasic
  nameWithType: Microsoft.VisualBasic
  fullName: Microsoft.VisualBasic
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: false
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: System.Char
  commentId: T:System.Char
  parent: System
  isExternal: false
  name: Char
  nameWithType: Char
  fullName: System.Char
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: false
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: false
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.ArgumentException
  commentId: T:System.ArgumentException
  parent: System
  isExternal: false
  name: ArgumentException
  nameWithType: ArgumentException
  fullName: System.ArgumentException
