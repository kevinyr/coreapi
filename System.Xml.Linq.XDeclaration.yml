### YamlMime:ManagedReference
items:
- uid: System.Xml.Linq.XDeclaration
  commentId: T:System.Xml.Linq.XDeclaration
  id: XDeclaration
  parent: System.Xml.Linq
  children:
  - System.Xml.Linq.XDeclaration.#ctor(System.String,System.String,System.String)
  - System.Xml.Linq.XDeclaration.#ctor(System.Xml.Linq.XDeclaration)
  - System.Xml.Linq.XDeclaration.Encoding
  - System.Xml.Linq.XDeclaration.Standalone
  - System.Xml.Linq.XDeclaration.ToString
  - System.Xml.Linq.XDeclaration.Version
  langs:
  - csharp
  - vb
  name: XDeclaration
  nameWithType: XDeclaration
  fullName: System.Xml.Linq.XDeclaration
  type: Class
  source:
    remote:
      path: src/System.Xml.XDocument/src/System/Xml/Linq/XDeclaration.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: XDeclaration
    path: src/System.Xml.XDocument/src/System/Xml/Linq/XDeclaration.cs
    startLine: 16
  assemblies:
  - System.Xml.XDocument
  namespace: System.Xml.Linq
  summary: "\n<p>Represents an XML declaration.</p>\n"
  syntax:
    content: public class XDeclaration
    content.vb: Public Class XDeclaration
  seealso:
  - linkId: System.Xml.Linq.XDocument.Declaration
    commentId: P:System.Xml.Linq.XDocument.Declaration
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: System.Xml.Linq.XDeclaration.#ctor(System.String,System.String,System.String)
  commentId: M:System.Xml.Linq.XDeclaration.#ctor(System.String,System.String,System.String)
  id: '#ctor(System.String,System.String,System.String)'
  parent: System.Xml.Linq.XDeclaration
  langs:
  - csharp
  - vb
  name: XDeclaration(String, String, String)
  nameWithType: XDeclaration.XDeclaration(String, String, String)
  fullName: System.Xml.Linq.XDeclaration.XDeclaration(System.String, System.String, System.String)
  type: Constructor
  source:
    remote:
      path: src/System.Xml.XDocument/src/System/Xml/Linq/XDeclaration.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: .ctor
    path: src/System.Xml.XDocument/src/System/Xml/Linq/XDeclaration.cs
    startLine: 36
  assemblies:
  - System.Xml.XDocument
  namespace: System.Xml.Linq
  summary: "\n<p>Initializes a new instance of the <xref href=\"System.Xml.Linq.XDeclaration\" data-throw-if-not-resolved=\"false\"></xref> class with the specified version, encoding, and standalone status.</p>\n"
  syntax:
    content: public XDeclaration(string version, string encoding, string standalone)
    content.vb: Public Sub New(version As String, encoding As String, standalone As String)
    parameters:
    - id: version
      type: System.String
      description: "\n<p>The version of the XML, usually \"1.0\".</p>\n"
    - id: encoding
      type: System.String
      description: "\n<p>The encoding for the XML document.</p>\n"
    - id: standalone
      type: System.String
      description: "\n<p>A string containing \"yes\" or \"no\" that specifies whether the XML is standalone or requires external entities to be resolved.</p>\n"
  seealso:
  - linkId: System.Xml.Linq.XDeclaration.ToString
    commentId: M:System.Xml.Linq.XDeclaration.ToString
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: System.Xml.Linq.XDeclaration.#ctor(System.Xml.Linq.XDeclaration)
  commentId: M:System.Xml.Linq.XDeclaration.#ctor(System.Xml.Linq.XDeclaration)
  id: '#ctor(System.Xml.Linq.XDeclaration)'
  parent: System.Xml.Linq.XDeclaration
  langs:
  - csharp
  - vb
  name: XDeclaration(XDeclaration)
  nameWithType: XDeclaration.XDeclaration(XDeclaration)
  fullName: System.Xml.Linq.XDeclaration.XDeclaration(System.Xml.Linq.XDeclaration)
  type: Constructor
  source:
    remote:
      path: src/System.Xml.XDocument/src/System/Xml/Linq/XDeclaration.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: .ctor
    path: src/System.Xml.XDocument/src/System/Xml/Linq/XDeclaration.cs
    startLine: 50
  assemblies:
  - System.Xml.XDocument
  namespace: System.Xml.Linq
  summary: "\n<p>Initializes a new instance of the <xref href=\"System.Xml.Linq.XDeclaration\" data-throw-if-not-resolved=\"false\"></xref> class from another <xref href=\"System.Xml.Linq.XDeclaration\" data-throw-if-not-resolved=\"false\"></xref> object. </p>\n"
  syntax:
    content: public XDeclaration(XDeclaration other)
    content.vb: Public Sub New(other As XDeclaration)
    parameters:
    - id: other
      type: System.Xml.Linq.XDeclaration
      description: "\n<p>The <xref href=\"System.Xml.Linq.XDeclaration\" data-throw-if-not-resolved=\"false\"></xref> used to initialize this <xref href=\"System.Xml.Linq.XDeclaration\" data-throw-if-not-resolved=\"false\"></xref> object.</p>\n"
  seealso:
  - linkId: System.Xml.Linq.XDeclaration.ToString
    commentId: M:System.Xml.Linq.XDeclaration.ToString
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: System.Xml.Linq.XDeclaration.Encoding
  commentId: P:System.Xml.Linq.XDeclaration.Encoding
  id: Encoding
  parent: System.Xml.Linq.XDeclaration
  langs:
  - csharp
  - vb
  name: Encoding
  nameWithType: XDeclaration.Encoding
  fullName: System.Xml.Linq.XDeclaration.Encoding
  type: Property
  source:
    remote:
      path: src/System.Xml.XDocument/src/System/Xml/Linq/XDeclaration.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: Encoding
    path: src/System.Xml.XDocument/src/System/Xml/Linq/XDeclaration.cs
    startLine: 69
  assemblies:
  - System.Xml.XDocument
  namespace: System.Xml.Linq
  summary: "\n<p>Gets or sets the encoding for this document.</p>\n"
  syntax:
    content: public string Encoding { get; set; }
    content.vb: Public Property Encoding As String
    parameters: []
    return:
      type: System.String
      description: "\n<p>A <xref href=\"System.String\" data-throw-if-not-resolved=\"false\"></xref> containing the code page name for this document.</p>\n"
  seealso:
  - linkId: System.Xml.Linq.XDeclaration.ToString
    commentId: M:System.Xml.Linq.XDeclaration.ToString
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: System.Xml.Linq.XDeclaration.Standalone
  commentId: P:System.Xml.Linq.XDeclaration.Standalone
  id: Standalone
  parent: System.Xml.Linq.XDeclaration
  langs:
  - csharp
  - vb
  name: Standalone
  nameWithType: XDeclaration.Standalone
  fullName: System.Xml.Linq.XDeclaration.Standalone
  type: Property
  source:
    remote:
      path: src/System.Xml.XDocument/src/System/Xml/Linq/XDeclaration.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: Standalone
    path: src/System.Xml.XDocument/src/System/Xml/Linq/XDeclaration.cs
    startLine: 81
  assemblies:
  - System.Xml.XDocument
  namespace: System.Xml.Linq
  summary: "\n<p>Gets or sets the standalone property for this document.</p>\n"
  syntax:
    content: public string Standalone { get; set; }
    content.vb: Public Property Standalone As String
    parameters: []
    return:
      type: System.String
      description: "\n<p>A <xref href=\"System.String\" data-throw-if-not-resolved=\"false\"></xref> containing the standalone property for this document.</p>\n"
  seealso:
  - linkId: System.Xml.Linq.XDeclaration.Version
    commentId: P:System.Xml.Linq.XDeclaration.Version
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: System.Xml.Linq.XDeclaration.Version
  commentId: P:System.Xml.Linq.XDeclaration.Version
  id: Version
  parent: System.Xml.Linq.XDeclaration
  langs:
  - csharp
  - vb
  name: Version
  nameWithType: XDeclaration.Version
  fullName: System.Xml.Linq.XDeclaration.Version
  type: Property
  source:
    remote:
      path: src/System.Xml.XDocument/src/System/Xml/Linq/XDeclaration.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: Version
    path: src/System.Xml.XDocument/src/System/Xml/Linq/XDeclaration.cs
    startLine: 93
  assemblies:
  - System.Xml.XDocument
  namespace: System.Xml.Linq
  summary: "\n<p>Gets or sets the version property for this document.</p>\n"
  syntax:
    content: public string Version { get; set; }
    content.vb: Public Property Version As String
    parameters: []
    return:
      type: System.String
      description: "\n<p>A <xref href=\"System.String\" data-throw-if-not-resolved=\"false\"></xref> containing the version property for this document.</p>\n"
  seealso:
  - linkId: System.Xml.Linq.XDeclaration.Standalone
    commentId: P:System.Xml.Linq.XDeclaration.Standalone
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: System.Xml.Linq.XDeclaration.ToString
  commentId: M:System.Xml.Linq.XDeclaration.ToString
  id: ToString
  parent: System.Xml.Linq.XDeclaration
  langs:
  - csharp
  - vb
  name: ToString()
  nameWithType: XDeclaration.ToString()
  fullName: System.Xml.Linq.XDeclaration.ToString()
  type: Method
  source:
    remote:
      path: src/System.Xml.XDocument/src/System/Xml/Linq/XDeclaration.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: ToString
    path: src/System.Xml.XDocument/src/System/Xml/Linq/XDeclaration.cs
    startLine: 103
  assemblies:
  - System.Xml.XDocument
  namespace: System.Xml.Linq
  summary: "\n<p>Provides the declaration as a formatted string.</p>\n"
  syntax:
    content: public override string ToString()
    content.vb: Public Overrides Function ToString As String
    return:
      type: System.String
      description: "\n<p>A <xref href=\"System.String\" data-throw-if-not-resolved=\"false\"></xref> that contains the formatted XML string.</p>\n"
  overridden: System.Object.ToString
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
references:
- uid: System.Xml.Linq
  commentId: N:System.Xml.Linq
  isExternal: false
  name: System.Xml.Linq
  nameWithType: System.Xml.Linq
  fullName: System.Xml.Linq
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: false
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: false
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Xml.Linq.XDeclaration
  commentId: T:System.Xml.Linq.XDeclaration
  parent: System.Xml.Linq
  isExternal: false
  name: XDeclaration
  nameWithType: XDeclaration
  fullName: System.Xml.Linq.XDeclaration
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
