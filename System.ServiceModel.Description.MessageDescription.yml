items:
- uid: System.ServiceModel.Description.MessageDescription
  commentId: T:System.ServiceModel.Description.MessageDescription
  id: MessageDescription
  parent: System.ServiceModel.Description
  children:
  - System.ServiceModel.Description.MessageDescription.#ctor(System.String,System.ServiceModel.Description.MessageDirection)
  - System.ServiceModel.Description.MessageDescription.Action
  - System.ServiceModel.Description.MessageDescription.Body
  - System.ServiceModel.Description.MessageDescription.Direction
  - System.ServiceModel.Description.MessageDescription.Headers
  - System.ServiceModel.Description.MessageDescription.MessageType
  - System.ServiceModel.Description.MessageDescription.Properties
  langs:
  - csharp
  - vb
  name: MessageDescription
  fullName: System.ServiceModel.Description.MessageDescription
  type: Class
  source:
    remote:
      path: src/System.ServiceModel.Primitives/ref/System.ServiceModel.Primitives.cs
      branch: master
      repo: https://github.com/dotnet/wcf.git
    id: MessageDescription
    path: src/System.ServiceModel.Primitives/ref/System.ServiceModel.Primitives.cs
    startLine: 1255
  assemblies:
  - System.ServiceModel.Primitives
  namespace: System.ServiceModel.Description
  summary: "\n<p>Represents the description of a message.</p>\n"
  syntax:
    content: public class MessageDescription
    content.vb: Public Class MessageDescription
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
  nameWithType: MessageDescription
- uid: System.ServiceModel.Description.MessageDescription.#ctor(System.String,System.ServiceModel.Description.MessageDirection)
  commentId: M:System.ServiceModel.Description.MessageDescription.#ctor(System.String,System.ServiceModel.Description.MessageDirection)
  id: '#ctor(System.String,System.ServiceModel.Description.MessageDirection)'
  parent: System.ServiceModel.Description.MessageDescription
  langs:
  - csharp
  - vb
  name: MessageDescription(String, MessageDirection)
  fullName: System.ServiceModel.Description.MessageDescription.MessageDescription(System.String, System.ServiceModel.Description.MessageDirection)
  type: Constructor
  source:
    remote:
      path: src/System.ServiceModel.Primitives/ref/System.ServiceModel.Primitives.cs
      branch: master
      repo: https://github.com/dotnet/wcf.git
    id: .ctor
    path: src/System.ServiceModel.Primitives/ref/System.ServiceModel.Primitives.cs
    startLine: 1257
  assemblies:
  - System.ServiceModel.Primitives
  namespace: System.ServiceModel.Description
  summary: "\n<p>Initializes a new instance of the <xref href=\"System.ServiceModel.Description.MessageDescription\" data-throw-if-not-resolved=\"false\"></xref> class with a specified action and direction.</p>\n"
  syntax:
    content: public MessageDescription(string action, MessageDirection direction)
    content.vb: Public Sub New(action As String, direction As MessageDirection)
    parameters:
    - id: action
      type: System.String
      description: "\n<p>The action parameter of the SOAP message that identifies the intent of the message.</p>\n"
    - id: direction
      type: System.ServiceModel.Description.MessageDirection
      description: "\n<p>\n<xref href=\"System.ServiceModel.Description.MessageDirection.Input\" data-throw-if-not-resolved=\"false\"></xref> if the message is incoming or <xref href=\"System.ServiceModel.Description.MessageDirection.Output\" data-throw-if-not-resolved=\"false\"></xref> if the message is outgoing.</p>\n"
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "\n<p>The <em>direction</em> is neither <xref href=\"System.ServiceModel.Description.MessageDirection.Input\" data-throw-if-not-resolved=\"false\"></xref> or <xref href=\"System.ServiceModel.Description.MessageDirection.Output\" data-throw-if-not-resolved=\"false\"></xref>.</p>\n"
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  nameWithType: MessageDescription.MessageDescription(String, MessageDirection)
- uid: System.ServiceModel.Description.MessageDescription.Action
  commentId: P:System.ServiceModel.Description.MessageDescription.Action
  id: Action
  parent: System.ServiceModel.Description.MessageDescription
  langs:
  - csharp
  - vb
  name: Action
  fullName: System.ServiceModel.Description.MessageDescription.Action
  type: Property
  source:
    remote:
      path: src/System.ServiceModel.Primitives/ref/System.ServiceModel.Primitives.cs
      branch: master
      repo: https://github.com/dotnet/wcf.git
    id: Action
    path: src/System.ServiceModel.Primitives/ref/System.ServiceModel.Primitives.cs
    startLine: 1258
  assemblies:
  - System.ServiceModel.Primitives
  namespace: System.ServiceModel.Description
  summary: "\n<p>Gets or sets the action parameter of the SOAP message that identifies the intent of the message.</p>\n"
  syntax:
    content: public string Action { get; }
    content.vb: Public ReadOnly Property Action As String
    parameters: []
    return:
      type: System.String
      description: "\n<p>A <xref href=\"System.String\" data-throw-if-not-resolved=\"false\"></xref> that contains the action URI.</p>\n"
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
  nameWithType: MessageDescription.Action
- uid: System.ServiceModel.Description.MessageDescription.Body
  commentId: P:System.ServiceModel.Description.MessageDescription.Body
  id: Body
  parent: System.ServiceModel.Description.MessageDescription
  langs:
  - csharp
  - vb
  name: Body
  fullName: System.ServiceModel.Description.MessageDescription.Body
  type: Property
  source:
    remote:
      path: src/System.ServiceModel.Primitives/ref/System.ServiceModel.Primitives.cs
      branch: master
      repo: https://github.com/dotnet/wcf.git
    id: Body
    path: src/System.ServiceModel.Primitives/ref/System.ServiceModel.Primitives.cs
    startLine: 1259
  assemblies:
  - System.ServiceModel.Primitives
  namespace: System.ServiceModel.Description
  summary: "\n<p>Gets the body of the SOAP message.</p>\n"
  syntax:
    content: public MessageBodyDescription Body { get; }
    content.vb: Public ReadOnly Property Body As MessageBodyDescription
    parameters: []
    return:
      type: System.ServiceModel.Description.MessageBodyDescription
      description: "\n<p>The <xref href=\"System.ServiceModel.Description.MessagePartDescriptionCollection\" data-throw-if-not-resolved=\"false\"></xref> that contains the body of the message.</p>\n"
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
  nameWithType: MessageDescription.Body
- uid: System.ServiceModel.Description.MessageDescription.Direction
  commentId: P:System.ServiceModel.Description.MessageDescription.Direction
  id: Direction
  parent: System.ServiceModel.Description.MessageDescription
  langs:
  - csharp
  - vb
  name: Direction
  fullName: System.ServiceModel.Description.MessageDescription.Direction
  type: Property
  source:
    remote:
      path: src/System.ServiceModel.Primitives/ref/System.ServiceModel.Primitives.cs
      branch: master
      repo: https://github.com/dotnet/wcf.git
    id: Direction
    path: src/System.ServiceModel.Primitives/ref/System.ServiceModel.Primitives.cs
    startLine: 1260
  assemblies:
  - System.ServiceModel.Primitives
  namespace: System.ServiceModel.Description
  summary: "\n<p>Gets the direction that indicates whether the message is incoming or outgoing.</p>\n"
  syntax:
    content: public MessageDirection Direction { get; }
    content.vb: Public ReadOnly Property Direction As MessageDirection
    parameters: []
    return:
      type: System.ServiceModel.Description.MessageDirection
      description: "\n<p>The <xref href=\"System.ServiceModel.Description.MessageDirection\" data-throw-if-not-resolved=\"false\"></xref> that indicates whether the message is incoming to or outgoing from the service.</p>\n"
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
  nameWithType: MessageDescription.Direction
- uid: System.ServiceModel.Description.MessageDescription.Headers
  commentId: P:System.ServiceModel.Description.MessageDescription.Headers
  id: Headers
  parent: System.ServiceModel.Description.MessageDescription
  langs:
  - csharp
  - vb
  name: Headers
  fullName: System.ServiceModel.Description.MessageDescription.Headers
  type: Property
  source:
    remote:
      path: src/System.ServiceModel.Primitives/ref/System.ServiceModel.Primitives.cs
      branch: master
      repo: https://github.com/dotnet/wcf.git
    id: Headers
    path: src/System.ServiceModel.Primitives/ref/System.ServiceModel.Primitives.cs
    startLine: 1261
  assemblies:
  - System.ServiceModel.Primitives
  namespace: System.ServiceModel.Description
  summary: "\n<p>Gets the description of the headers of the SOAP message.</p>\n"
  syntax:
    content: public MessageHeaderDescriptionCollection Headers { get; }
    content.vb: Public ReadOnly Property Headers As MessageHeaderDescriptionCollection
    parameters: []
    return:
      type: System.ServiceModel.Description.MessageHeaderDescriptionCollection
      description: "\n<p>The <xref href=\"System.ServiceModel.Description.MessageHeaderDescriptionCollection\" data-throw-if-not-resolved=\"false\"></xref> that contains descriptions of the headers of the SOAP message.</p>\n"
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
  nameWithType: MessageDescription.Headers
- uid: System.ServiceModel.Description.MessageDescription.MessageType
  commentId: P:System.ServiceModel.Description.MessageDescription.MessageType
  id: MessageType
  parent: System.ServiceModel.Description.MessageDescription
  langs:
  - csharp
  - vb
  name: MessageType
  fullName: System.ServiceModel.Description.MessageDescription.MessageType
  type: Property
  source:
    remote:
      path: src/System.ServiceModel.Primitives/ref/System.ServiceModel.Primitives.cs
      branch: master
      repo: https://github.com/dotnet/wcf.git
    id: MessageType
    path: src/System.ServiceModel.Primitives/ref/System.ServiceModel.Primitives.cs
    startLine: 1262
  assemblies:
  - System.ServiceModel.Primitives
  namespace: System.ServiceModel.Description
  summary: "\n<p>Gets or sets a type that identifies the type of message contract.</p>\n"
  syntax:
    content: public Type MessageType { get; set; }
    content.vb: Public Property MessageType As Type
    parameters: []
    return:
      type: System.Type
      description: "\n<p>A <xref href=\"System.Type\" data-throw-if-not-resolved=\"false\"></xref> that identifies the type of message contract.</p>\n"
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
  nameWithType: MessageDescription.MessageType
- uid: System.ServiceModel.Description.MessageDescription.Properties
  commentId: P:System.ServiceModel.Description.MessageDescription.Properties
  id: Properties
  parent: System.ServiceModel.Description.MessageDescription
  langs:
  - csharp
  - vb
  name: Properties
  fullName: System.ServiceModel.Description.MessageDescription.Properties
  type: Property
  source:
    remote:
      path: src/System.ServiceModel.Primitives/ref/System.ServiceModel.Primitives.cs
      branch: master
      repo: https://github.com/dotnet/wcf.git
    id: Properties
    path: src/System.ServiceModel.Primitives/ref/System.ServiceModel.Primitives.cs
    startLine: 1264
  assemblies:
  - System.ServiceModel.Primitives
  namespace: System.ServiceModel.Description
  summary: "\n<p>Gets a description of the properties of the SOAP message.</p>\n"
  syntax:
    content: public MessagePropertyDescriptionCollection Properties { get; }
    content.vb: Public ReadOnly Property Properties As MessagePropertyDescriptionCollection
    parameters: []
    return:
      type: System.ServiceModel.Description.MessagePropertyDescriptionCollection
      description: "\n<p>The <xref href=\"System.ServiceModel.Description.MessagePropertyDescriptionCollection\" data-throw-if-not-resolved=\"false\"></xref> that contains the descriptions of the properties of the SOAP message.</p>\n"
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
  nameWithType: MessageDescription.Properties
references:
- uid: System.ServiceModel.Description
  isExternal: false
  name: System.ServiceModel.Description
  fullName: System.ServiceModel.Description
  commentId: N:System.ServiceModel.Description
  nameWithType: System.ServiceModel.Description
- uid: System.Object
  parent: System
  isExternal: false
  name: Object
  fullName: System.Object
  commentId: T:System.Object
  nameWithType: Object
- uid: System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  commentId: M:System.Object.ToString
  nameWithType: Object.ToString()
- uid: System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
  commentId: M:System.Object.Equals(System.Object)
  nameWithType: Object.Equals(Object)
- uid: System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
  commentId: M:System.Object.Equals(System.Object,System.Object)
  nameWithType: Object.Equals(Object, Object)
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
- uid: System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  commentId: M:System.Object.GetHashCode
  nameWithType: Object.GetHashCode()
- uid: System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  commentId: M:System.Object.GetType
  nameWithType: Object.GetType()
- uid: System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  commentId: M:System.Object.MemberwiseClone
  nameWithType: Object.MemberwiseClone()
- uid: System
  isExternal: false
  name: System
  fullName: System
  commentId: N:System
  nameWithType: System
- uid: System.String
  parent: System
  isExternal: false
  name: String
  fullName: System.String
  commentId: T:System.String
  nameWithType: String
- uid: System.ServiceModel.Description.MessageDirection
  parent: System.ServiceModel.Description
  isExternal: false
  name: MessageDirection
  fullName: System.ServiceModel.Description.MessageDirection
  commentId: T:System.ServiceModel.Description.MessageDirection
  nameWithType: MessageDirection
- uid: System.ServiceModel.Description.MessageBodyDescription
  parent: System.ServiceModel.Description
  isExternal: false
  name: MessageBodyDescription
  fullName: System.ServiceModel.Description.MessageBodyDescription
  commentId: T:System.ServiceModel.Description.MessageBodyDescription
  nameWithType: MessageBodyDescription
- uid: System.ServiceModel.Description.MessageHeaderDescriptionCollection
  parent: System.ServiceModel.Description
  isExternal: false
  name: MessageHeaderDescriptionCollection
  fullName: System.ServiceModel.Description.MessageHeaderDescriptionCollection
  commentId: T:System.ServiceModel.Description.MessageHeaderDescriptionCollection
  nameWithType: MessageHeaderDescriptionCollection
- uid: System.Type
  parent: System
  isExternal: false
  name: Type
  fullName: System.Type
  commentId: T:System.Type
  nameWithType: Type
- uid: System.ServiceModel.Description.MessagePropertyDescriptionCollection
  parent: System.ServiceModel.Description
  isExternal: false
  name: MessagePropertyDescriptionCollection
  fullName: System.ServiceModel.Description.MessagePropertyDescriptionCollection
  commentId: T:System.ServiceModel.Description.MessagePropertyDescriptionCollection
  nameWithType: MessagePropertyDescriptionCollection
- uid: System.ArgumentOutOfRangeException
  isExternal: false
  name: ArgumentOutOfRangeException
  fullName: System.ArgumentOutOfRangeException
  nameWithType: ArgumentOutOfRangeException
  commentId: T:System.ArgumentOutOfRangeException
