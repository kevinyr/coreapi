items:
- uid: System.ServiceModel.Security.WindowsClientCredential
  commentId: T:System.ServiceModel.Security.WindowsClientCredential
  id: WindowsClientCredential
  parent: System.ServiceModel.Security
  children:
  - System.ServiceModel.Security.WindowsClientCredential.AllowedImpersonationLevel
  - System.ServiceModel.Security.WindowsClientCredential.ClientCredential
  langs:
  - csharp
  - vb
  name: WindowsClientCredential
  fullName: System.ServiceModel.Security.WindowsClientCredential
  type: Class
  source:
    remote:
      path: src/System.Private.ServiceModel/src/System/ServiceModel/Security/WindowsClientCredential.cs
      branch: master
      repo: https://github.com/dotnet/wcf.git
    id: WindowsClientCredential
    path: src/System.Private.ServiceModel/src/System/ServiceModel/Security/WindowsClientCredential.cs
    startLine: 10
  assemblies:
  - System.ServiceModel.Primitives
  namespace: System.ServiceModel.Security
  summary: "\n<p>Allows you to specify properties related to Windows credentials to be used to represent the client.</p>\n"
  syntax:
    content: public sealed class WindowsClientCredential
    content.vb: Public NotInheritable Class WindowsClientCredential
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  modifiers.csharp:
  - public
  - sealed
  - class
  modifiers.vb:
  - Public
  - NotInheritable
  - Class
  nameWithType: WindowsClientCredential
- uid: System.ServiceModel.Security.WindowsClientCredential.AllowedImpersonationLevel
  commentId: P:System.ServiceModel.Security.WindowsClientCredential.AllowedImpersonationLevel
  id: AllowedImpersonationLevel
  parent: System.ServiceModel.Security.WindowsClientCredential
  langs:
  - csharp
  - vb
  name: AllowedImpersonationLevel
  fullName: System.ServiceModel.Security.WindowsClientCredential.AllowedImpersonationLevel
  type: Property
  source:
    remote:
      path: src/System.Private.ServiceModel/src/System/ServiceModel/Security/WindowsClientCredential.cs
      branch: master
      repo: https://github.com/dotnet/wcf.git
    id: AllowedImpersonationLevel
    path: src/System.Private.ServiceModel/src/System/ServiceModel/Security/WindowsClientCredential.cs
    startLine: 31
  assemblies:
  - System.ServiceModel.Primitives
  namespace: System.ServiceModel.Security
  summary: "\n<p>Gets or sets the allowed impersonation level. </p>\n"
  syntax:
    content: public TokenImpersonationLevel AllowedImpersonationLevel { get; set; }
    content.vb: Public Property AllowedImpersonationLevel As TokenImpersonationLevel
    parameters: []
    return:
      type: System.Security.Principal.TokenImpersonationLevel
      description: "\n<p>One of the <xref href=\"System.Security.Principal.TokenImpersonationLevel\" data-throw-if-not-resolved=\"false\"></xref> values.</p>\n"
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
  nameWithType: WindowsClientCredential.AllowedImpersonationLevel
- uid: System.ServiceModel.Security.WindowsClientCredential.ClientCredential
  commentId: P:System.ServiceModel.Security.WindowsClientCredential.ClientCredential
  id: ClientCredential
  parent: System.ServiceModel.Security.WindowsClientCredential
  langs:
  - csharp
  - vb
  name: ClientCredential
  fullName: System.ServiceModel.Security.WindowsClientCredential.ClientCredential
  type: Property
  source:
    remote:
      path: src/System.Private.ServiceModel/src/System/ServiceModel/Security/WindowsClientCredential.cs
      branch: master
      repo: https://github.com/dotnet/wcf.git
    id: ClientCredential
    path: src/System.Private.ServiceModel/src/System/ServiceModel/Security/WindowsClientCredential.cs
    startLine: 51
  assemblies:
  - System.ServiceModel.Primitives
  namespace: System.ServiceModel.Security
  summary: "\n<p>Gets or sets the Windows client credential.</p>\n"
  syntax:
    content: public NetworkCredential ClientCredential { get; set; }
    content.vb: Public Property ClientCredential As NetworkCredential
    parameters: []
    return:
      type: NetworkCredential
      description: "\n<p>The <xref href=\"System.Net.NetworkCredential\" data-throw-if-not-resolved=\"false\"></xref> for the client.</p>\n"
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
  nameWithType: WindowsClientCredential.ClientCredential
references:
- uid: System.ServiceModel.Security
  isExternal: false
  name: System.ServiceModel.Security
  fullName: System.ServiceModel.Security
  nameWithType: System.ServiceModel.Security
  commentId: N:System.ServiceModel.Security
- uid: System.Object
  parent: System
  isExternal: false
  name: Object
  fullName: System.Object
  nameWithType: Object
  commentId: T:System.Object
- uid: System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  nameWithType: Object.ToString()
  commentId: M:System.Object.ToString
- uid: System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
  nameWithType: Object.Equals(Object)
  commentId: M:System.Object.Equals(System.Object)
- uid: System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
  nameWithType: Object.Equals(Object, Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
  nameWithType: Object.ReferenceEquals(Object, Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
- uid: System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  nameWithType: Object.GetHashCode()
  commentId: M:System.Object.GetHashCode
- uid: System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  nameWithType: Object.GetType()
  commentId: M:System.Object.GetType
- uid: System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  nameWithType: Object.MemberwiseClone()
  commentId: M:System.Object.MemberwiseClone
- uid: System
  isExternal: false
  name: System
  fullName: System
  nameWithType: System
  commentId: N:System
- uid: System.Security.Principal.TokenImpersonationLevel
  parent: System.Security.Principal
  isExternal: false
  name: TokenImpersonationLevel
  fullName: System.Security.Principal.TokenImpersonationLevel
  nameWithType: TokenImpersonationLevel
  commentId: T:System.Security.Principal.TokenImpersonationLevel
- uid: System.Security.Principal
  isExternal: false
  name: System.Security.Principal
  fullName: System.Security.Principal
  nameWithType: System.Security.Principal
  commentId: N:System.Security.Principal
- uid: System.Net.NetworkCredential
  parent: System.Net
  isExternal: false
  name: NetworkCredential
  fullName: System.Net.NetworkCredential
  nameWithType: NetworkCredential
  commentId: T:System.Net.NetworkCredential
- uid: System.Net
  isExternal: false
  name: System.Net
  fullName: System.Net
  nameWithType: System.Net
  commentId: N:System.Net
