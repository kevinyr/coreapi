items:
- uid: System.Data.SqlClient.SqlTransaction
  commentId: T:System.Data.SqlClient.SqlTransaction
  id: SqlTransaction
  parent: System.Data.SqlClient
  children:
  - System.Data.SqlClient.SqlTransaction.Commit
  - System.Data.SqlClient.SqlTransaction.Connection
  - System.Data.SqlClient.SqlTransaction.DbConnection
  - System.Data.SqlClient.SqlTransaction.Dispose(System.Boolean)
  - System.Data.SqlClient.SqlTransaction.IsolationLevel
  - System.Data.SqlClient.SqlTransaction.Rollback
  - System.Data.SqlClient.SqlTransaction.Rollback(System.String)
  - System.Data.SqlClient.SqlTransaction.Save(System.String)
  langs:
  - csharp
  - vb
  name: SqlTransaction
  fullName: System.Data.SqlClient.SqlTransaction
  type: Class
  source:
    remote:
      path: src/System.Data.SqlClient/src/System/Data/SqlClient/SqlTransaction.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: SqlTransaction
    path: src/System.Data.SqlClient/src/System/Data/SqlClient/SqlTransaction.cs
    startLine: 13
  assemblies:
  - System.Data.SqlClient
  namespace: System.Data.SqlClient
  summary: "\n<p>Represents a Transact-SQL transaction to be made in a SQL Server database. This class cannot be inherited. </p>\n"
  syntax:
    content: 'public sealed class SqlTransaction : DbTransaction'
    content.vb: >-
      Public NotInheritable Class SqlTransaction
          Inherits DbTransaction
  inheritance:
  - System.Object
  modifiers.csharp:
  - public
  - sealed
  - class
  modifiers.vb:
  - Public
  - NotInheritable
  - Class
  nameWithType: SqlTransaction
- uid: System.Data.SqlClient.SqlTransaction.Connection
  commentId: P:System.Data.SqlClient.SqlTransaction.Connection
  id: Connection
  parent: System.Data.SqlClient.SqlTransaction
  langs:
  - csharp
  - vb
  name: Connection
  fullName: System.Data.SqlClient.SqlTransaction.Connection
  type: Property
  source:
    remote:
      path: src/System.Data.SqlClient/src/System/Data/SqlClient/SqlTransaction.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: Connection
    path: src/System.Data.SqlClient/src/System/Data/SqlClient/SqlTransaction.cs
    startLine: 44
  assemblies:
  - System.Data.SqlClient
  namespace: System.Data.SqlClient
  summary: "\n<p>Gets the <xref href=\"System.Data.SqlClient.SqlConnection\" data-throw-if-not-resolved=\"false\"></xref> object associated with the transaction, or <strong>null</strong> if the transaction is no longer valid.</p>\n"
  syntax:
    content: public SqlConnection Connection { get; }
    content.vb: Public ReadOnly Property Connection As SqlConnection
    parameters: []
    return:
      type: System.Data.SqlClient.SqlConnection
      description: "\n<p>The <xref href=\"System.Data.SqlClient.SqlConnection\" data-throw-if-not-resolved=\"false\"></xref> object associated with the transaction.</p>\n"
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
  nameWithType: SqlTransaction.Connection
- uid: System.Data.SqlClient.SqlTransaction.DbConnection
  commentId: P:System.Data.SqlClient.SqlTransaction.DbConnection
  id: DbConnection
  parent: System.Data.SqlClient.SqlTransaction
  langs:
  - csharp
  - vb
  name: DbConnection
  fullName: System.Data.SqlClient.SqlTransaction.DbConnection
  type: Property
  source:
    remote:
      path: src/System.Data.SqlClient/src/System/Data/SqlClient/SqlTransaction.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: DbConnection
    path: src/System.Data.SqlClient/src/System/Data/SqlClient/SqlTransaction.cs
    startLine: 59
  assemblies:
  - System.Data.SqlClient
  namespace: System.Data.SqlClient
  syntax:
    content: protected override DbConnection DbConnection { get; }
    content.vb: Protected Overrides ReadOnly Property DbConnection As DbConnection
    parameters: []
    return:
      type: DbConnection
  modifiers.csharp:
  - protected
  - override
  - get
  modifiers.vb:
  - Protected
  - Overrides
  - ReadOnly
  nameWithType: SqlTransaction.DbConnection
- uid: System.Data.SqlClient.SqlTransaction.IsolationLevel
  commentId: P:System.Data.SqlClient.SqlTransaction.IsolationLevel
  id: IsolationLevel
  parent: System.Data.SqlClient.SqlTransaction
  langs:
  - csharp
  - vb
  name: IsolationLevel
  fullName: System.Data.SqlClient.SqlTransaction.IsolationLevel
  type: Property
  source:
    remote:
      path: src/System.Data.SqlClient/src/System/Data/SqlClient/SqlTransaction.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: IsolationLevel
    path: src/System.Data.SqlClient/src/System/Data/SqlClient/SqlTransaction.cs
    startLine: 75
  assemblies:
  - System.Data.SqlClient
  namespace: System.Data.SqlClient
  summary: "\n<p>Specifies the <xref href=\"System.Data.IsolationLevel\" data-throw-if-not-resolved=\"false\"></xref> for this transaction.</p>\n"
  syntax:
    content: public override IsolationLevel IsolationLevel { get; }
    content.vb: Public Overrides ReadOnly Property IsolationLevel As IsolationLevel
    parameters: []
    return:
      type: IsolationLevel
      description: "\n<p>The <xref href=\"System.Data.IsolationLevel\" data-throw-if-not-resolved=\"false\"></xref> for this transaction. The default is <strong>ReadCommitted</strong>.</p>\n"
  modifiers.csharp:
  - public
  - override
  - get
  modifiers.vb:
  - Public
  - Overrides
  - ReadOnly
  nameWithType: SqlTransaction.IsolationLevel
- uid: System.Data.SqlClient.SqlTransaction.Commit
  commentId: M:System.Data.SqlClient.SqlTransaction.Commit
  id: Commit
  parent: System.Data.SqlClient.SqlTransaction
  langs:
  - csharp
  - vb
  name: Commit()
  fullName: System.Data.SqlClient.SqlTransaction.Commit()
  type: Method
  source:
    remote:
      path: src/System.Data.SqlClient/src/System/Data/SqlClient/SqlTransaction.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: Commit
    path: src/System.Data.SqlClient/src/System/Data/SqlClient/SqlTransaction.cs
    startLine: 120
  assemblies:
  - System.Data.SqlClient
  namespace: System.Data.SqlClient
  summary: "\n<p>Commits the database transaction.</p>\n"
  syntax:
    content: public override void Commit()
    content.vb: Public Overrides Sub Commit
  exceptions:
  - type: System.Exception
    commentId: T:System.Exception
    description: "\n<p>An error occurred while trying to commit the transaction. </p>\n"
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "\n<p>The transaction has already been committed or rolled back.</p>\n<p>-or- </p>\n<p>The connection is broken. </p>\n"
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
  nameWithType: SqlTransaction.Commit()
- uid: System.Data.SqlClient.SqlTransaction.Dispose(System.Boolean)
  commentId: M:System.Data.SqlClient.SqlTransaction.Dispose(System.Boolean)
  id: Dispose(System.Boolean)
  parent: System.Data.SqlClient.SqlTransaction
  langs:
  - csharp
  - vb
  name: Dispose(Boolean)
  fullName: System.Data.SqlClient.SqlTransaction.Dispose(System.Boolean)
  type: Method
  source:
    remote:
      path: src/System.Data.SqlClient/src/System/Data/SqlClient/SqlTransaction.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: Dispose
    path: src/System.Data.SqlClient/src/System/Data/SqlClient/SqlTransaction.cs
    startLine: 141
  assemblies:
  - System.Data.SqlClient
  namespace: System.Data.SqlClient
  syntax:
    content: protected override void Dispose(bool disposing)
    content.vb: Protected Overrides Sub Dispose(disposing As Boolean)
    parameters:
    - id: disposing
      type: System.Boolean
  modifiers.csharp:
  - protected
  - override
  modifiers.vb:
  - Protected
  - Overrides
  nameWithType: SqlTransaction.Dispose(Boolean)
- uid: System.Data.SqlClient.SqlTransaction.Rollback
  commentId: M:System.Data.SqlClient.SqlTransaction.Rollback
  id: Rollback
  parent: System.Data.SqlClient.SqlTransaction
  langs:
  - csharp
  - vb
  name: Rollback()
  fullName: System.Data.SqlClient.SqlTransaction.Rollback()
  type: Method
  source:
    remote:
      path: src/System.Data.SqlClient/src/System/Data/SqlClient/SqlTransaction.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: Rollback
    path: src/System.Data.SqlClient/src/System/Data/SqlClient/SqlTransaction.cs
    startLine: 153
  assemblies:
  - System.Data.SqlClient
  namespace: System.Data.SqlClient
  summary: "\n<p>Rolls back a transaction from a pending state.</p>\n"
  syntax:
    content: public override void Rollback()
    content.vb: Public Overrides Sub Rollback
  exceptions:
  - type: System.Exception
    commentId: T:System.Exception
    description: "\n<p>An error occurred while trying to commit the transaction. </p>\n"
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "\n<p>The transaction has already been committed or rolled back.</p>\n<p>-or- </p>\n<p>The connection is broken. </p>\n"
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
  nameWithType: SqlTransaction.Rollback()
- uid: System.Data.SqlClient.SqlTransaction.Rollback(System.String)
  commentId: M:System.Data.SqlClient.SqlTransaction.Rollback(System.String)
  id: Rollback(System.String)
  parent: System.Data.SqlClient.SqlTransaction
  langs:
  - csharp
  - vb
  name: Rollback(String)
  fullName: System.Data.SqlClient.SqlTransaction.Rollback(System.String)
  type: Method
  source:
    remote:
      path: src/System.Data.SqlClient/src/System/Data/SqlClient/SqlTransaction.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: Rollback
    path: src/System.Data.SqlClient/src/System/Data/SqlClient/SqlTransaction.cs
    startLine: 182
  assemblies:
  - System.Data.SqlClient
  namespace: System.Data.SqlClient
  summary: "\n<p>Rolls back a transaction from a pending state, and specifies the transaction or savepoint name.</p>\n"
  syntax:
    content: public void Rollback(string transactionName)
    content.vb: Public Sub Rollback(transactionName As String)
    parameters:
    - id: transactionName
      type: System.String
      description: "\n<p>The name of the transaction to roll back, or the savepoint to which to roll back. </p>\n"
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "\n<p>No transaction name was specified. </p>\n"
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "\n<p>The transaction has already been committed or rolled back.</p>\n<p>-or- </p>\n<p>The connection is broken. </p>\n"
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  nameWithType: SqlTransaction.Rollback(String)
- uid: System.Data.SqlClient.SqlTransaction.Save(System.String)
  commentId: M:System.Data.SqlClient.SqlTransaction.Save(System.String)
  id: Save(System.String)
  parent: System.Data.SqlClient.SqlTransaction
  langs:
  - csharp
  - vb
  name: Save(String)
  fullName: System.Data.SqlClient.SqlTransaction.Save(System.String)
  type: Method
  source:
    remote:
      path: src/System.Data.SqlClient/src/System/Data/SqlClient/SqlTransaction.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: Save
    path: src/System.Data.SqlClient/src/System/Data/SqlClient/SqlTransaction.cs
    startLine: 203
  assemblies:
  - System.Data.SqlClient
  namespace: System.Data.SqlClient
  summary: "\n<p>Creates a savepoint in the transaction that can be used to roll back a part of the transaction, and specifies the savepoint name.</p>\n"
  syntax:
    content: public void Save(string savePointName)
    content.vb: Public Sub Save(savePointName As String)
    parameters:
    - id: savePointName
      type: System.String
      description: "\n<p>The name of the savepoint. </p>\n"
  exceptions:
  - type: System.Exception
    commentId: T:System.Exception
    description: "\n<p>An error occurred while trying to commit the transaction. </p>\n"
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "\n<p>The transaction has already been committed or rolled back.</p>\n<p>-or- </p>\n<p>The connection is broken. </p>\n"
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  nameWithType: SqlTransaction.Save(String)
references:
- uid: System.Data.SqlClient
  isExternal: false
  name: System.Data.SqlClient
  fullName: System.Data.SqlClient
  nameWithType: System.Data.SqlClient
  commentId: N:System.Data.SqlClient
- uid: System.Object
  parent: System
  isExternal: false
  name: Object
  fullName: System.Object
  nameWithType: Object
  commentId: T:System.Object
- uid: System
  isExternal: false
  name: System
  fullName: System
  nameWithType: System
  commentId: N:System
- uid: System.Data.SqlClient.SqlConnection
  parent: System.Data.SqlClient
  isExternal: false
  name: SqlConnection
  fullName: System.Data.SqlClient.SqlConnection
  nameWithType: SqlConnection
  commentId: T:System.Data.SqlClient.SqlConnection
- uid: System.Data.Common.DbConnection
  parent: System.Data.Common
  isExternal: false
  name: Common.DbConnection
  fullName: System.Data.Common.DbConnection
  nameWithType: Common.DbConnection
  commentId: T:System.Data.Common.DbConnection
- uid: System.Data.Common
  isExternal: false
  name: System.Data.Common
  fullName: System.Data.Common
  nameWithType: System.Data.Common
  commentId: N:System.Data.Common
- uid: System.Data.IsolationLevel
  parent: System.Data
  isExternal: false
  name: IsolationLevel
  fullName: System.Data.IsolationLevel
  nameWithType: IsolationLevel
  commentId: T:System.Data.IsolationLevel
- uid: System.Data
  isExternal: false
  name: System.Data
  fullName: System.Data
  nameWithType: System.Data
  commentId: N:System.Data
- uid: System.Boolean
  parent: System
  isExternal: false
  name: Boolean
  fullName: System.Boolean
  nameWithType: Boolean
  commentId: T:System.Boolean
- uid: System.String
  parent: System
  isExternal: false
  name: String
  fullName: System.String
  nameWithType: String
  commentId: T:System.String
- uid: System.Exception
  parent: System
  isExternal: false
  name: Exception
  fullName: System.Exception
  nameWithType: Exception
  commentId: T:System.Exception
- uid: System.InvalidOperationException
  parent: System
  isExternal: false
  name: InvalidOperationException
  fullName: System.InvalidOperationException
  nameWithType: InvalidOperationException
  commentId: T:System.InvalidOperationException
- uid: System.ArgumentException
  parent: System
  isExternal: false
  name: ArgumentException
  fullName: System.ArgumentException
  nameWithType: ArgumentException
  commentId: T:System.ArgumentException
