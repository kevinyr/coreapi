### YamlMime:ManagedReference
items:
- uid: System.ServiceModel.DuplexChannelFactory`1
  commentId: T:System.ServiceModel.DuplexChannelFactory`1
  id: DuplexChannelFactory`1
  parent: System.ServiceModel
  children:
  - System.ServiceModel.DuplexChannelFactory`1.#ctor(System.ServiceModel.InstanceContext,System.ServiceModel.Channels.Binding)
  - System.ServiceModel.DuplexChannelFactory`1.#ctor(System.ServiceModel.InstanceContext,System.ServiceModel.Channels.Binding,System.ServiceModel.EndpointAddress)
  - System.ServiceModel.DuplexChannelFactory`1.#ctor(System.ServiceModel.InstanceContext,System.ServiceModel.Channels.Binding,System.String)
  - System.ServiceModel.DuplexChannelFactory`1.#ctor(System.ServiceModel.InstanceContext,System.String)
  - System.ServiceModel.DuplexChannelFactory`1.#ctor(System.ServiceModel.InstanceContext,System.String,System.ServiceModel.EndpointAddress)
  - System.ServiceModel.DuplexChannelFactory`1.CreateChannel(System.ServiceModel.EndpointAddress,System.Uri)
  - System.ServiceModel.DuplexChannelFactory`1.CreateChannel(System.ServiceModel.InstanceContext)
  - System.ServiceModel.DuplexChannelFactory`1.CreateChannel(System.ServiceModel.InstanceContext,System.ServiceModel.EndpointAddress)
  - System.ServiceModel.DuplexChannelFactory`1.CreateChannel(System.ServiceModel.InstanceContext,System.ServiceModel.EndpointAddress,System.Uri)
  langs:
  - csharp
  - vb
  name: DuplexChannelFactory<TChannel>
  nameWithType: DuplexChannelFactory<TChannel>
  fullName: System.ServiceModel.DuplexChannelFactory<TChannel>
  type: Class
  source:
    remote:
      path: src/System.ServiceModel.Duplex/ref/System.ServiceModel.Duplex.cs
      branch: master
      repo: https://github.com/dotnet/wcf.git
    id: DuplexChannelFactory
    path: src/System.ServiceModel.Duplex/ref/System.ServiceModel.Duplex.cs
    startLine: 20
  assemblies:
  - System.ServiceModel.Duplex
  namespace: System.ServiceModel
  summary: "\n<p>Provides the means to create and manage duplex channels of different types that are used by clients to send and receive messages to and from service endpoints.</p>\n"
  syntax:
    content: 'public class DuplexChannelFactory<TChannel> : ChannelFactory<TChannel>'
    content.vb: >-
      Public Class DuplexChannelFactory(Of TChannel)
          Inherits ChannelFactory(Of TChannel)
    typeParameters:
    - id: TChannel
      description: "\n<p>The type of channel produced by the channel factory.</p>\n"
  inheritance:
  - System.Object
  nameWithType.vb: DuplexChannelFactory(Of TChannel)
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
  fullName.vb: System.ServiceModel.DuplexChannelFactory(Of TChannel)
  name.vb: DuplexChannelFactory(Of TChannel)
- uid: System.ServiceModel.DuplexChannelFactory`1.#ctor(System.ServiceModel.InstanceContext,System.ServiceModel.Channels.Binding)
  commentId: M:System.ServiceModel.DuplexChannelFactory`1.#ctor(System.ServiceModel.InstanceContext,System.ServiceModel.Channels.Binding)
  id: '#ctor(System.ServiceModel.InstanceContext,System.ServiceModel.Channels.Binding)'
  parent: System.ServiceModel.DuplexChannelFactory`1
  langs:
  - csharp
  - vb
  name: DuplexChannelFactory(InstanceContext, Channels.Binding)
  nameWithType: DuplexChannelFactory<TChannel>.DuplexChannelFactory(InstanceContext, Channels.Binding)
  fullName: System.ServiceModel.DuplexChannelFactory<TChannel>.DuplexChannelFactory(System.ServiceModel.InstanceContext, System.ServiceModel.Channels.Binding)
  type: Constructor
  source:
    remote:
      path: src/System.ServiceModel.Duplex/ref/System.ServiceModel.Duplex.cs
      branch: master
      repo: https://github.com/dotnet/wcf.git
    id: .ctor
    path: src/System.ServiceModel.Duplex/ref/System.ServiceModel.Duplex.cs
    startLine: 22
  assemblies:
  - System.ServiceModel.Duplex
  namespace: System.ServiceModel
  summary: "\n<p>Initializes a new instance of the <xref href=\"System.ServiceModel.DuplexChannelFactory`1\" data-throw-if-not-resolved=\"false\"></xref> class with a context that implements the callback contract and a specified binding.</p>\n"
  syntax:
    content: public DuplexChannelFactory(InstanceContext callbackInstance, Channels.Binding binding)
    content.vb: Public Sub New(callbackInstance As InstanceContext, binding As Channels.Binding)
    parameters:
    - id: callbackInstance
      type: System.ServiceModel.InstanceContext
      description: "\n<p>The <xref href=\"System.ServiceModel.InstanceContext\" data-throw-if-not-resolved=\"false\"></xref> that the client uses to listen for messages from the connected service.</p>\n"
    - id: binding
      type: System.ServiceModel.Channels.Binding
      description: "\n<p>The <xref href=\"System.ServiceModel.Channels.Binding\" data-throw-if-not-resolved=\"false\"></xref> used to connect to the service by channels produced by the factory.</p>\n"
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "\n<p>\n<em>callbackInstance</em> or <em>binding</em> is <strong>null</strong>.</p>\n"
  nameWithType.vb: DuplexChannelFactory(Of TChannel).DuplexChannelFactory(InstanceContext, Channels.Binding)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: System.ServiceModel.DuplexChannelFactory(Of TChannel).DuplexChannelFactory(System.ServiceModel.InstanceContext, System.ServiceModel.Channels.Binding)
- uid: System.ServiceModel.DuplexChannelFactory`1.#ctor(System.ServiceModel.InstanceContext,System.ServiceModel.Channels.Binding,System.ServiceModel.EndpointAddress)
  commentId: M:System.ServiceModel.DuplexChannelFactory`1.#ctor(System.ServiceModel.InstanceContext,System.ServiceModel.Channels.Binding,System.ServiceModel.EndpointAddress)
  id: '#ctor(System.ServiceModel.InstanceContext,System.ServiceModel.Channels.Binding,System.ServiceModel.EndpointAddress)'
  parent: System.ServiceModel.DuplexChannelFactory`1
  langs:
  - csharp
  - vb
  name: DuplexChannelFactory(InstanceContext, Channels.Binding, EndpointAddress)
  nameWithType: DuplexChannelFactory<TChannel>.DuplexChannelFactory(InstanceContext, Channels.Binding, EndpointAddress)
  fullName: System.ServiceModel.DuplexChannelFactory<TChannel>.DuplexChannelFactory(System.ServiceModel.InstanceContext, System.ServiceModel.Channels.Binding, System.ServiceModel.EndpointAddress)
  type: Constructor
  source:
    remote:
      path: src/System.ServiceModel.Duplex/ref/System.ServiceModel.Duplex.cs
      branch: master
      repo: https://github.com/dotnet/wcf.git
    id: .ctor
    path: src/System.ServiceModel.Duplex/ref/System.ServiceModel.Duplex.cs
    startLine: 23
  assemblies:
  - System.ServiceModel.Duplex
  namespace: System.ServiceModel
  summary: "\n<p>Initializes a new instance of the <xref href=\"System.ServiceModel.DuplexChannelFactory`1\" data-throw-if-not-resolved=\"false\"></xref> class with an object that implements the callback contract and a specified binding and endpoint address.</p>\n"
  syntax:
    content: public DuplexChannelFactory(InstanceContext callbackInstance, Channels.Binding binding, EndpointAddress remoteAddress)
    content.vb: Public Sub New(callbackInstance As InstanceContext, binding As Channels.Binding, remoteAddress As EndpointAddress)
    parameters:
    - id: callbackInstance
      type: System.ServiceModel.InstanceContext
      description: "\n<p>The <xref href=\"System.ServiceModel.InstanceContext\" data-throw-if-not-resolved=\"false\"></xref> that the client uses to listen for messages from the connected service.</p>\n"
    - id: binding
      type: System.ServiceModel.Channels.Binding
      description: "\n<p>The <xref href=\"System.ServiceModel.Channels.Binding\" data-throw-if-not-resolved=\"false\"></xref> used to connect to the service by channels produced by the factory.</p>\n"
    - id: remoteAddress
      type: System.ServiceModel.EndpointAddress
      description: "\n<p>The <xref href=\"System.ServiceModel.EndpointAddress\" data-throw-if-not-resolved=\"false\"></xref> that provides the location of the service.</p>\n"
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "\n<p>\n<em>callbackInstance</em> or <em>binding</em> or <em>remoteAddress</em> is <strong>null</strong>.</p>\n"
  nameWithType.vb: DuplexChannelFactory(Of TChannel).DuplexChannelFactory(InstanceContext, Channels.Binding, EndpointAddress)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: System.ServiceModel.DuplexChannelFactory(Of TChannel).DuplexChannelFactory(System.ServiceModel.InstanceContext, System.ServiceModel.Channels.Binding, System.ServiceModel.EndpointAddress)
- uid: System.ServiceModel.DuplexChannelFactory`1.#ctor(System.ServiceModel.InstanceContext,System.ServiceModel.Channels.Binding,System.String)
  commentId: M:System.ServiceModel.DuplexChannelFactory`1.#ctor(System.ServiceModel.InstanceContext,System.ServiceModel.Channels.Binding,System.String)
  id: '#ctor(System.ServiceModel.InstanceContext,System.ServiceModel.Channels.Binding,System.String)'
  parent: System.ServiceModel.DuplexChannelFactory`1
  langs:
  - csharp
  - vb
  name: DuplexChannelFactory(InstanceContext, Channels.Binding, String)
  nameWithType: DuplexChannelFactory<TChannel>.DuplexChannelFactory(InstanceContext, Channels.Binding, String)
  fullName: System.ServiceModel.DuplexChannelFactory<TChannel>.DuplexChannelFactory(System.ServiceModel.InstanceContext, System.ServiceModel.Channels.Binding, System.String)
  type: Constructor
  source:
    remote:
      path: src/System.ServiceModel.Duplex/ref/System.ServiceModel.Duplex.cs
      branch: master
      repo: https://github.com/dotnet/wcf.git
    id: .ctor
    path: src/System.ServiceModel.Duplex/ref/System.ServiceModel.Duplex.cs
    startLine: 24
  assemblies:
  - System.ServiceModel.Duplex
  namespace: System.ServiceModel
  summary: "\n<p>Initializes a new instance of the <xref href=\"System.ServiceModel.DuplexChannelFactory`1\" data-throw-if-not-resolved=\"false\"></xref> class with specified instance context, binding, and remote address.</p>\n"
  syntax:
    content: public DuplexChannelFactory(InstanceContext callbackInstance, Channels.Binding binding, string remoteAddress)
    content.vb: Public Sub New(callbackInstance As InstanceContext, binding As Channels.Binding, remoteAddress As String)
    parameters:
    - id: callbackInstance
      type: System.ServiceModel.InstanceContext
      description: "\n<p>The <xref href=\"System.ServiceModel.InstanceContext\" data-throw-if-not-resolved=\"false\"></xref> that the client uses to listen for messages from the connected service.</p>\n"
    - id: binding
      type: System.ServiceModel.Channels.Binding
      description: "\n<p>The <xref href=\"System.ServiceModel.Channels.Binding\" data-throw-if-not-resolved=\"false\"></xref> used to connect to the service by channels produced by the factory.</p>\n"
    - id: remoteAddress
      type: System.String
      description: "\n<p>The remote address that provides the location of the service.</p>\n"
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "\n<p>\n<em>callbackInstance</em> or <em>binding</em> or <em>remoteAddress</em> is <strong>null</strong>.</p>\n"
  nameWithType.vb: DuplexChannelFactory(Of TChannel).DuplexChannelFactory(InstanceContext, Channels.Binding, String)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: System.ServiceModel.DuplexChannelFactory(Of TChannel).DuplexChannelFactory(System.ServiceModel.InstanceContext, System.ServiceModel.Channels.Binding, System.String)
- uid: System.ServiceModel.DuplexChannelFactory`1.#ctor(System.ServiceModel.InstanceContext,System.String)
  commentId: M:System.ServiceModel.DuplexChannelFactory`1.#ctor(System.ServiceModel.InstanceContext,System.String)
  id: '#ctor(System.ServiceModel.InstanceContext,System.String)'
  parent: System.ServiceModel.DuplexChannelFactory`1
  langs:
  - csharp
  - vb
  name: DuplexChannelFactory(InstanceContext, String)
  nameWithType: DuplexChannelFactory<TChannel>.DuplexChannelFactory(InstanceContext, String)
  fullName: System.ServiceModel.DuplexChannelFactory<TChannel>.DuplexChannelFactory(System.ServiceModel.InstanceContext, System.String)
  type: Constructor
  source:
    remote:
      path: src/System.ServiceModel.Duplex/ref/System.ServiceModel.Duplex.cs
      branch: master
      repo: https://github.com/dotnet/wcf.git
    id: .ctor
    path: src/System.ServiceModel.Duplex/ref/System.ServiceModel.Duplex.cs
    startLine: 25
  assemblies:
  - System.ServiceModel.Duplex
  namespace: System.ServiceModel
  summary: "\n<p>Initializes a new instance of the <xref href=\"System.ServiceModel.DuplexChannelFactory`1\" data-throw-if-not-resolved=\"false\"></xref> class with an object that implements the callback contract and a specified configuration.</p>\n"
  syntax:
    content: public DuplexChannelFactory(InstanceContext callbackInstance, string endpointConfigurationName)
    content.vb: Public Sub New(callbackInstance As InstanceContext, endpointConfigurationName As String)
    parameters:
    - id: callbackInstance
      type: System.ServiceModel.InstanceContext
      description: "\n<p>The <xref href=\"System.ServiceModel.InstanceContext\" data-throw-if-not-resolved=\"false\"></xref> that the client uses to listen for messages from the connected service.</p>\n"
    - id: endpointConfigurationName
      type: System.String
      description: "\n<p>The name used for the endpoint configuration.</p>\n"
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "\n<p>\n<em>callbackInstance</em> or <em>endpointConfigurationName</em> is <strong>null</strong>.</p>\n"
  nameWithType.vb: DuplexChannelFactory(Of TChannel).DuplexChannelFactory(InstanceContext, String)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: System.ServiceModel.DuplexChannelFactory(Of TChannel).DuplexChannelFactory(System.ServiceModel.InstanceContext, System.String)
- uid: System.ServiceModel.DuplexChannelFactory`1.#ctor(System.ServiceModel.InstanceContext,System.String,System.ServiceModel.EndpointAddress)
  commentId: M:System.ServiceModel.DuplexChannelFactory`1.#ctor(System.ServiceModel.InstanceContext,System.String,System.ServiceModel.EndpointAddress)
  id: '#ctor(System.ServiceModel.InstanceContext,System.String,System.ServiceModel.EndpointAddress)'
  parent: System.ServiceModel.DuplexChannelFactory`1
  langs:
  - csharp
  - vb
  name: DuplexChannelFactory(InstanceContext, String, EndpointAddress)
  nameWithType: DuplexChannelFactory<TChannel>.DuplexChannelFactory(InstanceContext, String, EndpointAddress)
  fullName: System.ServiceModel.DuplexChannelFactory<TChannel>.DuplexChannelFactory(System.ServiceModel.InstanceContext, System.String, System.ServiceModel.EndpointAddress)
  type: Constructor
  source:
    remote:
      path: src/System.ServiceModel.Duplex/ref/System.ServiceModel.Duplex.cs
      branch: master
      repo: https://github.com/dotnet/wcf.git
    id: .ctor
    path: src/System.ServiceModel.Duplex/ref/System.ServiceModel.Duplex.cs
    startLine: 26
  assemblies:
  - System.ServiceModel.Duplex
  namespace: System.ServiceModel
  summary: "\n<p>Initializes a new instance of the <xref href=\"System.ServiceModel.DuplexChannelFactory`1\" data-throw-if-not-resolved=\"false\"></xref> class with an object that implements the callback contract and a specified configuration and endpoint address.</p>\n"
  syntax:
    content: public DuplexChannelFactory(InstanceContext callbackInstance, string endpointConfigurationName, EndpointAddress remoteAddress)
    content.vb: Public Sub New(callbackInstance As InstanceContext, endpointConfigurationName As String, remoteAddress As EndpointAddress)
    parameters:
    - id: callbackInstance
      type: System.ServiceModel.InstanceContext
      description: "\n<p>The <xref href=\"System.ServiceModel.InstanceContext\" data-throw-if-not-resolved=\"false\"></xref> that the client uses to listen for messages from the connected service.</p>\n"
    - id: endpointConfigurationName
      type: System.String
      description: "\n<p>The name used for the endpoint configuration.</p>\n"
    - id: remoteAddress
      type: System.ServiceModel.EndpointAddress
      description: "\n<p>The <xref href=\"System.ServiceModel.EndpointAddress\" data-throw-if-not-resolved=\"false\"></xref> that provides the location of the service.</p>\n"
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "\n<p>\n<em>callbackInstance</em> or <em>endpointConfigurationName</em> or <em>remoteAddress</em> is <strong>null</strong>.</p>\n"
  nameWithType.vb: DuplexChannelFactory(Of TChannel).DuplexChannelFactory(InstanceContext, String, EndpointAddress)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: System.ServiceModel.DuplexChannelFactory(Of TChannel).DuplexChannelFactory(System.ServiceModel.InstanceContext, System.String, System.ServiceModel.EndpointAddress)
- uid: System.ServiceModel.DuplexChannelFactory`1.CreateChannel(System.ServiceModel.EndpointAddress,System.Uri)
  commentId: M:System.ServiceModel.DuplexChannelFactory`1.CreateChannel(System.ServiceModel.EndpointAddress,System.Uri)
  id: CreateChannel(System.ServiceModel.EndpointAddress,System.Uri)
  parent: System.ServiceModel.DuplexChannelFactory`1
  langs:
  - csharp
  - vb
  name: CreateChannel(EndpointAddress, Uri)
  nameWithType: DuplexChannelFactory<TChannel>.CreateChannel(EndpointAddress, Uri)
  fullName: System.ServiceModel.DuplexChannelFactory<TChannel>.CreateChannel(System.ServiceModel.EndpointAddress, System.Uri)
  type: Method
  source:
    remote:
      path: src/System.ServiceModel.Duplex/ref/System.ServiceModel.Duplex.cs
      branch: master
      repo: https://github.com/dotnet/wcf.git
    id: CreateChannel
    path: src/System.ServiceModel.Duplex/ref/System.ServiceModel.Duplex.cs
    startLine: 27
  assemblies:
  - System.ServiceModel.Duplex
  namespace: System.ServiceModel
  summary: "\n<p>Creates a duplex channel between a service and a callback instance on the client.</p>\n"
  syntax:
    content: public override TChannel CreateChannel(EndpointAddress address, Uri via)
    content.vb: Public Overrides Function CreateChannel(address As EndpointAddress, via As Uri) As TChannel
    parameters:
    - id: address
      type: System.ServiceModel.EndpointAddress
      description: "\n<p>The <xref href=\"System.ServiceModel.EndpointAddress\" data-throw-if-not-resolved=\"false\"></xref> that provides the location of the service.</p>\n"
    - id: via
      type: System.Uri
      description: "\n<p>The <xref href=\"System.Uri\" data-throw-if-not-resolved=\"false\"></xref> that contains the transport address to which the message is sent.</p>\n"
    return:
      type: '{TChannel}'
      description: "\n<p>A duplex channel of type <em>TChannel</em>, the generic parameter for the factory, between the client and service.</p>\n"
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "\n<p>\n<em>address</em> is <strong>null</strong>.</p>\n"
  nameWithType.vb: DuplexChannelFactory(Of TChannel).CreateChannel(EndpointAddress, Uri)
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
  fullName.vb: System.ServiceModel.DuplexChannelFactory(Of TChannel).CreateChannel(System.ServiceModel.EndpointAddress, System.Uri)
- uid: System.ServiceModel.DuplexChannelFactory`1.CreateChannel(System.ServiceModel.InstanceContext)
  commentId: M:System.ServiceModel.DuplexChannelFactory`1.CreateChannel(System.ServiceModel.InstanceContext)
  id: CreateChannel(System.ServiceModel.InstanceContext)
  parent: System.ServiceModel.DuplexChannelFactory`1
  langs:
  - csharp
  - vb
  name: CreateChannel(InstanceContext)
  nameWithType: DuplexChannelFactory<TChannel>.CreateChannel(InstanceContext)
  fullName: System.ServiceModel.DuplexChannelFactory<TChannel>.CreateChannel(System.ServiceModel.InstanceContext)
  type: Method
  source:
    remote:
      path: src/System.ServiceModel.Duplex/ref/System.ServiceModel.Duplex.cs
      branch: master
      repo: https://github.com/dotnet/wcf.git
    id: CreateChannel
    path: src/System.ServiceModel.Duplex/ref/System.ServiceModel.Duplex.cs
    startLine: 28
  assemblies:
  - System.ServiceModel.Duplex
  namespace: System.ServiceModel
  summary: "\n<p>Creates a duplex channel between a service and a callback instance on the client.</p>\n"
  syntax:
    content: public TChannel CreateChannel(InstanceContext callbackInstance)
    content.vb: Public Function CreateChannel(callbackInstance As InstanceContext) As TChannel
    parameters:
    - id: callbackInstance
      type: System.ServiceModel.InstanceContext
      description: "\n<p>The <xref href=\"System.ServiceModel.InstanceContext\" data-throw-if-not-resolved=\"false\"></xref> that the client uses to listen for messages from the connected service.</p>\n"
    return:
      type: '{TChannel}'
      description: "\n<p>A duplex channel of type <em>TChannel</em>, the generic parameter for the factory, between the client and service.</p>\n"
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "\n<p>\n<em>callbackInstance</em> or <em>callbackInstance</em>.UserObject is <strong>null</strong>.</p>\n"
  nameWithType.vb: DuplexChannelFactory(Of TChannel).CreateChannel(InstanceContext)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: System.ServiceModel.DuplexChannelFactory(Of TChannel).CreateChannel(System.ServiceModel.InstanceContext)
- uid: System.ServiceModel.DuplexChannelFactory`1.CreateChannel(System.ServiceModel.InstanceContext,System.ServiceModel.EndpointAddress)
  commentId: M:System.ServiceModel.DuplexChannelFactory`1.CreateChannel(System.ServiceModel.InstanceContext,System.ServiceModel.EndpointAddress)
  id: CreateChannel(System.ServiceModel.InstanceContext,System.ServiceModel.EndpointAddress)
  parent: System.ServiceModel.DuplexChannelFactory`1
  langs:
  - csharp
  - vb
  name: CreateChannel(InstanceContext, EndpointAddress)
  nameWithType: DuplexChannelFactory<TChannel>.CreateChannel(InstanceContext, EndpointAddress)
  fullName: System.ServiceModel.DuplexChannelFactory<TChannel>.CreateChannel(System.ServiceModel.InstanceContext, System.ServiceModel.EndpointAddress)
  type: Method
  source:
    remote:
      path: src/System.ServiceModel.Duplex/ref/System.ServiceModel.Duplex.cs
      branch: master
      repo: https://github.com/dotnet/wcf.git
    id: CreateChannel
    path: src/System.ServiceModel.Duplex/ref/System.ServiceModel.Duplex.cs
    startLine: 29
  assemblies:
  - System.ServiceModel.Duplex
  namespace: System.ServiceModel
  summary: "\n<p>Creates a duplex channel between a service and a callback instance on the client.</p>\n"
  syntax:
    content: public TChannel CreateChannel(InstanceContext callbackInstance, EndpointAddress address)
    content.vb: Public Function CreateChannel(callbackInstance As InstanceContext, address As EndpointAddress) As TChannel
    parameters:
    - id: callbackInstance
      type: System.ServiceModel.InstanceContext
      description: "\n<p>The <xref href=\"System.ServiceModel.InstanceContext\" data-throw-if-not-resolved=\"false\"></xref> that the client uses to listen for messages from the connected service.</p>\n"
    - id: address
      type: System.ServiceModel.EndpointAddress
      description: "\n<p>The <xref href=\"System.ServiceModel.EndpointAddress\" data-throw-if-not-resolved=\"false\"></xref> that provides the location of the service.</p>\n"
    return:
      type: '{TChannel}'
      description: "\n<p>A duplex channel of type <em>TChannel</em>, the generic parameter for the factory, between the client and service.</p>\n"
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "\n<p>\n<em>address</em> is <strong>null</strong>.</p>\n"
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "\n<p>\n<em>callbackInstance</em> or <em>callbackInstance</em>.UserObject is <strong>null</strong>.</p>\n"
  nameWithType.vb: DuplexChannelFactory(Of TChannel).CreateChannel(InstanceContext, EndpointAddress)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: System.ServiceModel.DuplexChannelFactory(Of TChannel).CreateChannel(System.ServiceModel.InstanceContext, System.ServiceModel.EndpointAddress)
- uid: System.ServiceModel.DuplexChannelFactory`1.CreateChannel(System.ServiceModel.InstanceContext,System.ServiceModel.EndpointAddress,System.Uri)
  commentId: M:System.ServiceModel.DuplexChannelFactory`1.CreateChannel(System.ServiceModel.InstanceContext,System.ServiceModel.EndpointAddress,System.Uri)
  id: CreateChannel(System.ServiceModel.InstanceContext,System.ServiceModel.EndpointAddress,System.Uri)
  parent: System.ServiceModel.DuplexChannelFactory`1
  langs:
  - csharp
  - vb
  name: CreateChannel(InstanceContext, EndpointAddress, Uri)
  nameWithType: DuplexChannelFactory<TChannel>.CreateChannel(InstanceContext, EndpointAddress, Uri)
  fullName: System.ServiceModel.DuplexChannelFactory<TChannel>.CreateChannel(System.ServiceModel.InstanceContext, System.ServiceModel.EndpointAddress, System.Uri)
  type: Method
  source:
    remote:
      path: src/System.ServiceModel.Duplex/ref/System.ServiceModel.Duplex.cs
      branch: master
      repo: https://github.com/dotnet/wcf.git
    id: CreateChannel
    path: src/System.ServiceModel.Duplex/ref/System.ServiceModel.Duplex.cs
    startLine: 30
  assemblies:
  - System.ServiceModel.Duplex
  namespace: System.ServiceModel
  summary: "\n<p>Creates a duplex channel between a service and a callback instance on the client.</p>\n"
  syntax:
    content: public virtual TChannel CreateChannel(InstanceContext callbackInstance, EndpointAddress address, Uri via)
    content.vb: Public Overridable Function CreateChannel(callbackInstance As InstanceContext, address As EndpointAddress, via As Uri) As TChannel
    parameters:
    - id: callbackInstance
      type: System.ServiceModel.InstanceContext
      description: "\n<p>The <xref href=\"System.ServiceModel.InstanceContext\" data-throw-if-not-resolved=\"false\"></xref> that the client uses to listen for messages from the connected service.</p>\n"
    - id: address
      type: System.ServiceModel.EndpointAddress
      description: "\n<p>The <xref href=\"System.ServiceModel.EndpointAddress\" data-throw-if-not-resolved=\"false\"></xref> that provides the location of the service.</p>\n"
    - id: via
      type: System.Uri
      description: "\n<p>The <xref href=\"System.Uri\" data-throw-if-not-resolved=\"false\"></xref> that contains the transport address to which the message is sent.</p>\n"
    return:
      type: '{TChannel}'
      description: "\n<p>A channel of type <em>TChannel</em>, the generic parameter for the factory, between the client and service.</p>\n"
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "\n<p>\n<em>address</em> is <strong>null</strong>.</p>\n"
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "\n<p>\n<em>callbackInstance</em> or <em>callbackInstance</em>.UserObject is <strong>null</strong>.</p>\n"
  nameWithType.vb: DuplexChannelFactory(Of TChannel).CreateChannel(InstanceContext, EndpointAddress, Uri)
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
  fullName.vb: System.ServiceModel.DuplexChannelFactory(Of TChannel).CreateChannel(System.ServiceModel.InstanceContext, System.ServiceModel.EndpointAddress, System.Uri)
references:
- uid: System.ServiceModel
  commentId: N:System.ServiceModel
  isExternal: false
  name: System.ServiceModel
  nameWithType: System.ServiceModel
  fullName: System.ServiceModel
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: false
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: System.ServiceModel.InstanceContext
  commentId: T:System.ServiceModel.InstanceContext
  parent: System.ServiceModel
  isExternal: false
  name: InstanceContext
  nameWithType: InstanceContext
  fullName: System.ServiceModel.InstanceContext
- uid: System.ServiceModel.Channels.Binding
  commentId: T:System.ServiceModel.Channels.Binding
  parent: System.ServiceModel.Channels
  isExternal: false
  name: Binding
  nameWithType: Binding
  fullName: System.ServiceModel.Channels.Binding
- uid: System.ServiceModel.Channels
  commentId: N:System.ServiceModel.Channels
  isExternal: false
  name: System.ServiceModel.Channels
  nameWithType: System.ServiceModel.Channels
  fullName: System.ServiceModel.Channels
- uid: System.ServiceModel.EndpointAddress
  commentId: T:System.ServiceModel.EndpointAddress
  parent: System.ServiceModel
  isExternal: false
  name: EndpointAddress
  nameWithType: EndpointAddress
  fullName: System.ServiceModel.EndpointAddress
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: false
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Uri
  commentId: T:System.Uri
  parent: System
  isExternal: false
  name: Uri
  nameWithType: Uri
  fullName: System.Uri
- uid: '{TChannel}'
  commentId: '!:TChannel'
  definition: TChannel
  name: TChannel
  nameWithType: TChannel
  fullName: TChannel
- uid: TChannel
  isExternal: false
  name: TChannel
  nameWithType: TChannel
  fullName: TChannel
- uid: System.ArgumentNullException
  commentId: T:System.ArgumentNullException
  isExternal: false
  name: ArgumentNullException
  nameWithType: ArgumentNullException
  fullName: System.ArgumentNullException
- uid: System.InvalidOperationException
  commentId: T:System.InvalidOperationException
  parent: System
  isExternal: false
  name: InvalidOperationException
  nameWithType: InvalidOperationException
  fullName: System.InvalidOperationException
