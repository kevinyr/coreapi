### YamlMime:ManagedReference
items:
- uid: System.Diagnostics.Debug
  commentId: T:System.Diagnostics.Debug
  id: Debug
  parent: System.Diagnostics
  children:
  - System.Diagnostics.Debug.Assert(System.Boolean)
  - System.Diagnostics.Debug.Assert(System.Boolean,System.String)
  - System.Diagnostics.Debug.Assert(System.Boolean,System.String,System.String)
  - System.Diagnostics.Debug.Assert(System.Boolean,System.String,System.String,System.Object[])
  - System.Diagnostics.Debug.Fail(System.String)
  - System.Diagnostics.Debug.Fail(System.String,System.String)
  - System.Diagnostics.Debug.Write(System.Object)
  - System.Diagnostics.Debug.Write(System.Object,System.String)
  - System.Diagnostics.Debug.Write(System.String)
  - System.Diagnostics.Debug.Write(System.String,System.String)
  - System.Diagnostics.Debug.WriteIf(System.Boolean,System.Object)
  - System.Diagnostics.Debug.WriteIf(System.Boolean,System.Object,System.String)
  - System.Diagnostics.Debug.WriteIf(System.Boolean,System.String)
  - System.Diagnostics.Debug.WriteIf(System.Boolean,System.String,System.String)
  - System.Diagnostics.Debug.WriteLine(System.Object)
  - System.Diagnostics.Debug.WriteLine(System.Object,System.String)
  - System.Diagnostics.Debug.WriteLine(System.String)
  - System.Diagnostics.Debug.WriteLine(System.String,System.Object[])
  - System.Diagnostics.Debug.WriteLine(System.String,System.String)
  - System.Diagnostics.Debug.WriteLineIf(System.Boolean,System.Object)
  - System.Diagnostics.Debug.WriteLineIf(System.Boolean,System.Object,System.String)
  - System.Diagnostics.Debug.WriteLineIf(System.Boolean,System.String)
  - System.Diagnostics.Debug.WriteLineIf(System.Boolean,System.String,System.String)
  langs:
  - csharp
  - vb
  name: Debug
  nameWithType: Debug
  fullName: System.Diagnostics.Debug
  type: Class
  source:
    remote:
      path: src/System.Diagnostics.Debug/ref/System.Diagnostics.Debug.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: Debug
    path: src/System.Diagnostics.Debug/ref/System.Diagnostics.Debug.cs
    startLine: 10
  assemblies:
  - System.Diagnostics.Debug
  namespace: System.Diagnostics
  summary: "\n<p>Provides a set of methods and properties that help debug your code.</p>\n"
  syntax:
    content: public static class Debug
    content.vb: Public Module Debug
  seealso:
  - linkId: System.Diagnostics.Trace
    commentId: T:System.Diagnostics.Trace
  - linkId: System.Diagnostics.Switch
    commentId: T:System.Diagnostics.Switch
  - linkId: System.Diagnostics.BooleanSwitch
    commentId: T:System.Diagnostics.BooleanSwitch
  - linkId: System.Diagnostics.TraceSwitch
    commentId: T:System.Diagnostics.TraceSwitch
  - linkId: System.Diagnostics.TraceListener
    commentId: T:System.Diagnostics.TraceListener
  - linkId: System.Diagnostics.DefaultTraceListener
    commentId: T:System.Diagnostics.DefaultTraceListener
  - linkId: System.Diagnostics.ConsoleTraceListener
    commentId: T:System.Diagnostics.ConsoleTraceListener
  - linkId: System.Diagnostics.EventLogTraceListener
    commentId: T:System.Diagnostics.EventLogTraceListener
  - linkId: System.Diagnostics.TraceListenerCollection
    commentId: T:System.Diagnostics.TraceListenerCollection
  - linkId: System.Diagnostics.ConditionalAttribute
    commentId: T:System.Diagnostics.ConditionalAttribute
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  modifiers.csharp:
  - public
  - static
  - class
  modifiers.vb:
  - Public
  - Module
- uid: System.Diagnostics.Debug.Assert(System.Boolean)
  commentId: M:System.Diagnostics.Debug.Assert(System.Boolean)
  id: Assert(System.Boolean)
  parent: System.Diagnostics.Debug
  langs:
  - csharp
  - vb
  name: Assert(Boolean)
  nameWithType: Debug.Assert(Boolean)
  fullName: System.Diagnostics.Debug.Assert(System.Boolean)
  type: Method
  source:
    remote:
      path: src/System.Diagnostics.Debug/ref/System.Diagnostics.Debug.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: Assert
    path: src/System.Diagnostics.Debug/ref/System.Diagnostics.Debug.cs
    startLine: 12
  assemblies:
  - System.Diagnostics.Debug
  namespace: System.Diagnostics
  summary: "\n<p>Checks for a condition; if the condition is <strong>false</strong>, displays a message box that shows the call stack.</p>\n"
  syntax:
    content: >-
      [Conditional("DEBUG")]

      public static void Assert(bool condition)
    content.vb: >-
      <Conditional("DEBUG")>

      Public Shared Sub Assert(condition As Boolean)
    parameters:
    - id: condition
      type: System.Boolean
      description: "\n<p>The conditional expression to evaluate. If the condition is <strong>true</strong>, a failure message is not sent and the message box is not displayed.</p>\n"
  seealso:
  - linkId: System.Diagnostics.Debug
    commentId: T:System.Diagnostics.Debug
  - linkId: System.Diagnostics.Trace
    commentId: T:System.Diagnostics.Trace
  - linkId: System.Diagnostics.BooleanSwitch
    commentId: T:System.Diagnostics.BooleanSwitch
  - linkId: System.Diagnostics.TraceSwitch
    commentId: T:System.Diagnostics.TraceSwitch
  - linkId: System.Diagnostics.TraceListener
    commentId: T:System.Diagnostics.TraceListener
  - linkId: System.Diagnostics.DefaultTraceListener
    commentId: T:System.Diagnostics.DefaultTraceListener
  - linkId: System.Diagnostics.ConsoleTraceListener
    commentId: T:System.Diagnostics.ConsoleTraceListener
  - linkId: System.Diagnostics.ConditionalAttribute
    commentId: T:System.Diagnostics.ConditionalAttribute
  attributes:
  - type: System.Diagnostics.ConditionalAttribute
    ctor: System.Diagnostics.ConditionalAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: DEBUG
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: System.Diagnostics.Debug.Assert(System.Boolean,System.String)
  commentId: M:System.Diagnostics.Debug.Assert(System.Boolean,System.String)
  id: Assert(System.Boolean,System.String)
  parent: System.Diagnostics.Debug
  langs:
  - csharp
  - vb
  name: Assert(Boolean, String)
  nameWithType: Debug.Assert(Boolean, String)
  fullName: System.Diagnostics.Debug.Assert(System.Boolean, System.String)
  type: Method
  source:
    remote:
      path: src/System.Diagnostics.Debug/ref/System.Diagnostics.Debug.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: Assert
    path: src/System.Diagnostics.Debug/ref/System.Diagnostics.Debug.cs
    startLine: 14
  assemblies:
  - System.Diagnostics.Debug
  namespace: System.Diagnostics
  summary: "\n<p>Checks for a condition; if the condition is <strong>false</strong>, outputs a specified message and displays a message box that shows the call stack.</p>\n"
  syntax:
    content: >-
      [Conditional("DEBUG")]

      public static void Assert(bool condition, string message)
    content.vb: >-
      <Conditional("DEBUG")>

      Public Shared Sub Assert(condition As Boolean, message As String)
    parameters:
    - id: condition
      type: System.Boolean
      description: "\n<p>The conditional expression to evaluate. If the condition is <strong>true</strong>, the specified message is not sent and the message box is not displayed.  </p>\n"
    - id: message
      type: System.String
      description: "\n<p>The message to send to the <xref href=\"System.Diagnostics.Trace.Listeners\" data-throw-if-not-resolved=\"false\"></xref> collection. </p>\n"
  seealso:
  - linkId: System.Diagnostics.Debug
    commentId: T:System.Diagnostics.Debug
  - linkId: System.Diagnostics.Trace
    commentId: T:System.Diagnostics.Trace
  - linkId: System.Diagnostics.BooleanSwitch
    commentId: T:System.Diagnostics.BooleanSwitch
  - linkId: System.Diagnostics.TraceSwitch
    commentId: T:System.Diagnostics.TraceSwitch
  - linkId: System.Diagnostics.TraceListener
    commentId: T:System.Diagnostics.TraceListener
  - linkId: System.Diagnostics.DefaultTraceListener
    commentId: T:System.Diagnostics.DefaultTraceListener
  - linkId: System.Diagnostics.ConsoleTraceListener
    commentId: T:System.Diagnostics.ConsoleTraceListener
  - linkId: System.Diagnostics.ConditionalAttribute
    commentId: T:System.Diagnostics.ConditionalAttribute
  attributes:
  - type: System.Diagnostics.ConditionalAttribute
    ctor: System.Diagnostics.ConditionalAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: DEBUG
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: System.Diagnostics.Debug.Assert(System.Boolean,System.String,System.String)
  commentId: M:System.Diagnostics.Debug.Assert(System.Boolean,System.String,System.String)
  id: Assert(System.Boolean,System.String,System.String)
  parent: System.Diagnostics.Debug
  langs:
  - csharp
  - vb
  name: Assert(Boolean, String, String)
  nameWithType: Debug.Assert(Boolean, String, String)
  fullName: System.Diagnostics.Debug.Assert(System.Boolean, System.String, System.String)
  type: Method
  source:
    remote:
      path: src/System.Diagnostics.Debug/ref/System.Diagnostics.Debug.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: Assert
    path: src/System.Diagnostics.Debug/ref/System.Diagnostics.Debug.cs
    startLine: 16
  assemblies:
  - System.Diagnostics.Debug
  namespace: System.Diagnostics
  summary: "\n<p>Checks for a condition; if the condition is <strong>false</strong>, outputs two specified messages and displays a message box that shows the call stack.</p>\n"
  syntax:
    content: >-
      [Conditional("DEBUG")]

      public static void Assert(bool condition, string message, string detailMessage)
    content.vb: >-
      <Conditional("DEBUG")>

      Public Shared Sub Assert(condition As Boolean, message As String, detailMessage As String)
    parameters:
    - id: condition
      type: System.Boolean
      description: "\n<p>The conditional expression to evaluate. If the condition is <strong>true</strong>, the specified messages are not sent and the message box is not displayed.  </p>\n"
    - id: message
      type: System.String
      description: "\n<p>The message to send to the <xref href=\"System.Diagnostics.Trace.Listeners\" data-throw-if-not-resolved=\"false\"></xref> collection. </p>\n"
    - id: detailMessage
      type: System.String
      description: "\n<p>The detailed message to send to the <xref href=\"System.Diagnostics.Trace.Listeners\" data-throw-if-not-resolved=\"false\"></xref> collection. </p>\n"
  seealso:
  - linkId: System.Diagnostics.Debug
    commentId: T:System.Diagnostics.Debug
  - linkId: System.Diagnostics.Trace
    commentId: T:System.Diagnostics.Trace
  - linkId: System.Diagnostics.BooleanSwitch
    commentId: T:System.Diagnostics.BooleanSwitch
  - linkId: System.Diagnostics.TraceSwitch
    commentId: T:System.Diagnostics.TraceSwitch
  - linkId: System.Diagnostics.TraceListener
    commentId: T:System.Diagnostics.TraceListener
  - linkId: System.Diagnostics.DefaultTraceListener
    commentId: T:System.Diagnostics.DefaultTraceListener
  - linkId: System.Diagnostics.ConsoleTraceListener
    commentId: T:System.Diagnostics.ConsoleTraceListener
  - linkId: System.Diagnostics.ConditionalAttribute
    commentId: T:System.Diagnostics.ConditionalAttribute
  attributes:
  - type: System.Diagnostics.ConditionalAttribute
    ctor: System.Diagnostics.ConditionalAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: DEBUG
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: System.Diagnostics.Debug.Assert(System.Boolean,System.String,System.String,System.Object[])
  commentId: M:System.Diagnostics.Debug.Assert(System.Boolean,System.String,System.String,System.Object[])
  id: Assert(System.Boolean,System.String,System.String,System.Object[])
  parent: System.Diagnostics.Debug
  langs:
  - csharp
  - vb
  name: Assert(Boolean, String, String, Object[])
  nameWithType: Debug.Assert(Boolean, String, String, Object[])
  fullName: System.Diagnostics.Debug.Assert(System.Boolean, System.String, System.String, System.Object[])
  type: Method
  source:
    remote:
      path: src/System.Diagnostics.Debug/ref/System.Diagnostics.Debug.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: Assert
    path: src/System.Diagnostics.Debug/ref/System.Diagnostics.Debug.cs
    startLine: 18
  assemblies:
  - System.Diagnostics.Debug
  namespace: System.Diagnostics
  summary: "\n<p>Checks for a condition; if the condition is <strong>false</strong>, outputs two messages (simple and formatted) and displays a message box that shows the call stack.</p>\n"
  syntax:
    content: >-
      [Conditional("DEBUG")]

      public static void Assert(bool condition, string message, string detailMessageFormat, params object[] args)
    content.vb: >-
      <Conditional("DEBUG")>

      Public Shared Sub Assert(condition As Boolean, message As String, detailMessageFormat As String, ParamArray args As Object())
    parameters:
    - id: condition
      type: System.Boolean
      description: "\n<p>The conditional expression to evaluate. If the condition is <strong>true</strong>, the specified messages are not sent and the message box is not displayed.  </p>\n"
    - id: message
      type: System.String
      description: "\n<p>The message to send to the <xref href=\"System.Diagnostics.Trace.Listeners\" data-throw-if-not-resolved=\"false\"></xref> collection. </p>\n"
    - id: detailMessageFormat
      type: System.String
      description: "\n<p>The composite format string (see Remarks) to send to the <xref href=\"System.Diagnostics.Trace.Listeners\" data-throw-if-not-resolved=\"false\"></xref> collection. This message contains text intermixed with zero or more format items, which correspond to objects in the <em>args</em> array.</p>\n"
    - id: args
      type: System.Object[]
      description: "\n<p>An object array that contains zero or more objects to format.</p>\n"
  attributes:
  - type: System.Diagnostics.ConditionalAttribute
    ctor: System.Diagnostics.ConditionalAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: DEBUG
  nameWithType.vb: Debug.Assert(Boolean, String, String, Object())
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: System.Diagnostics.Debug.Assert(System.Boolean, System.String, System.String, System.Object())
  name.vb: Assert(Boolean, String, String, Object())
- uid: System.Diagnostics.Debug.Fail(System.String)
  commentId: M:System.Diagnostics.Debug.Fail(System.String)
  id: Fail(System.String)
  parent: System.Diagnostics.Debug
  langs:
  - csharp
  - vb
  name: Fail(String)
  nameWithType: Debug.Fail(String)
  fullName: System.Diagnostics.Debug.Fail(System.String)
  type: Method
  source:
    remote:
      path: src/System.Diagnostics.Debug/ref/System.Diagnostics.Debug.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: Fail
    path: src/System.Diagnostics.Debug/ref/System.Diagnostics.Debug.cs
    startLine: 20
  assemblies:
  - System.Diagnostics.Debug
  namespace: System.Diagnostics
  summary: "\n<p>Emits the specified error message.</p>\n"
  syntax:
    content: >-
      [Conditional("DEBUG")]

      public static void Fail(string message)
    content.vb: >-
      <Conditional("DEBUG")>

      Public Shared Sub Fail(message As String)
    parameters:
    - id: message
      type: System.String
      description: "\n<p>A message to emit. </p>\n"
  seealso:
  - linkId: System.Diagnostics.Debug
    commentId: T:System.Diagnostics.Debug
  - linkId: System.Diagnostics.Trace
    commentId: T:System.Diagnostics.Trace
  - linkId: System.Diagnostics.BooleanSwitch
    commentId: T:System.Diagnostics.BooleanSwitch
  - linkId: System.Diagnostics.TraceSwitch
    commentId: T:System.Diagnostics.TraceSwitch
  - linkId: System.Diagnostics.TraceListener
    commentId: T:System.Diagnostics.TraceListener
  - linkId: System.Diagnostics.DefaultTraceListener
    commentId: T:System.Diagnostics.DefaultTraceListener
  - linkId: System.Diagnostics.ConsoleTraceListener
    commentId: T:System.Diagnostics.ConsoleTraceListener
  - linkId: System.Diagnostics.ConditionalAttribute
    commentId: T:System.Diagnostics.ConditionalAttribute
  attributes:
  - type: System.Diagnostics.ConditionalAttribute
    ctor: System.Diagnostics.ConditionalAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: DEBUG
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: System.Diagnostics.Debug.Fail(System.String,System.String)
  commentId: M:System.Diagnostics.Debug.Fail(System.String,System.String)
  id: Fail(System.String,System.String)
  parent: System.Diagnostics.Debug
  langs:
  - csharp
  - vb
  name: Fail(String, String)
  nameWithType: Debug.Fail(String, String)
  fullName: System.Diagnostics.Debug.Fail(System.String, System.String)
  type: Method
  source:
    remote:
      path: src/System.Diagnostics.Debug/ref/System.Diagnostics.Debug.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: Fail
    path: src/System.Diagnostics.Debug/ref/System.Diagnostics.Debug.cs
    startLine: 22
  assemblies:
  - System.Diagnostics.Debug
  namespace: System.Diagnostics
  summary: "\n<p>Emits an error message and a detailed error message.</p>\n"
  syntax:
    content: >-
      [Conditional("DEBUG")]

      public static void Fail(string message, string detailMessage)
    content.vb: >-
      <Conditional("DEBUG")>

      Public Shared Sub Fail(message As String, detailMessage As String)
    parameters:
    - id: message
      type: System.String
      description: "\n<p>A message to emit. </p>\n"
    - id: detailMessage
      type: System.String
      description: "\n<p>A detailed message to emit. </p>\n"
  seealso:
  - linkId: System.Diagnostics.Debug
    commentId: T:System.Diagnostics.Debug
  - linkId: System.Diagnostics.Trace
    commentId: T:System.Diagnostics.Trace
  - linkId: System.Diagnostics.BooleanSwitch
    commentId: T:System.Diagnostics.BooleanSwitch
  - linkId: System.Diagnostics.TraceSwitch
    commentId: T:System.Diagnostics.TraceSwitch
  - linkId: System.Diagnostics.TraceListener
    commentId: T:System.Diagnostics.TraceListener
  - linkId: System.Diagnostics.DefaultTraceListener
    commentId: T:System.Diagnostics.DefaultTraceListener
  - linkId: System.Diagnostics.ConsoleTraceListener
    commentId: T:System.Diagnostics.ConsoleTraceListener
  - linkId: System.Diagnostics.ConditionalAttribute
    commentId: T:System.Diagnostics.ConditionalAttribute
  attributes:
  - type: System.Diagnostics.ConditionalAttribute
    ctor: System.Diagnostics.ConditionalAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: DEBUG
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: System.Diagnostics.Debug.Write(System.Object)
  commentId: M:System.Diagnostics.Debug.Write(System.Object)
  id: Write(System.Object)
  parent: System.Diagnostics.Debug
  langs:
  - csharp
  - vb
  name: Write(Object)
  nameWithType: Debug.Write(Object)
  fullName: System.Diagnostics.Debug.Write(System.Object)
  type: Method
  source:
    remote:
      path: src/System.Diagnostics.Debug/ref/System.Diagnostics.Debug.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: Write
    path: src/System.Diagnostics.Debug/ref/System.Diagnostics.Debug.cs
    startLine: 24
  assemblies:
  - System.Diagnostics.Debug
  namespace: System.Diagnostics
  summary: "\n<p>Writes the value of the object's <xref href=\"System.Object.ToString\" data-throw-if-not-resolved=\"false\"></xref> method to the trace listeners in the <xref href=\"System.Diagnostics.Debug.Listeners\" data-throw-if-not-resolved=\"false\"></xref> collection.</p>\n"
  syntax:
    content: >-
      [Conditional("DEBUG")]

      public static void Write(object value)
    content.vb: >-
      <Conditional("DEBUG")>

      Public Shared Sub Write(value As Object)
    parameters:
    - id: value
      type: System.Object
      description: "\n<p>An object whose name is sent to the <xref href=\"System.Diagnostics.Debug.Listeners\" data-throw-if-not-resolved=\"false\"></xref>. </p>\n"
  seealso:
  - linkId: System.Diagnostics.Debug
    commentId: T:System.Diagnostics.Debug
  - linkId: System.Diagnostics.Trace
    commentId: T:System.Diagnostics.Trace
  - linkId: System.Diagnostics.BooleanSwitch
    commentId: T:System.Diagnostics.BooleanSwitch
  - linkId: System.Diagnostics.TraceSwitch
    commentId: T:System.Diagnostics.TraceSwitch
  - linkId: System.Diagnostics.TraceListener
    commentId: T:System.Diagnostics.TraceListener
  - linkId: System.Diagnostics.DefaultTraceListener
    commentId: T:System.Diagnostics.DefaultTraceListener
  - linkId: System.Diagnostics.ConsoleTraceListener
    commentId: T:System.Diagnostics.ConsoleTraceListener
  - linkId: System.Diagnostics.ConditionalAttribute
    commentId: T:System.Diagnostics.ConditionalAttribute
  attributes:
  - type: System.Diagnostics.ConditionalAttribute
    ctor: System.Diagnostics.ConditionalAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: DEBUG
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: System.Diagnostics.Debug.Write(System.Object,System.String)
  commentId: M:System.Diagnostics.Debug.Write(System.Object,System.String)
  id: Write(System.Object,System.String)
  parent: System.Diagnostics.Debug
  langs:
  - csharp
  - vb
  name: Write(Object, String)
  nameWithType: Debug.Write(Object, String)
  fullName: System.Diagnostics.Debug.Write(System.Object, System.String)
  type: Method
  source:
    remote:
      path: src/System.Diagnostics.Debug/ref/System.Diagnostics.Debug.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: Write
    path: src/System.Diagnostics.Debug/ref/System.Diagnostics.Debug.cs
    startLine: 26
  assemblies:
  - System.Diagnostics.Debug
  namespace: System.Diagnostics
  summary: "\n<p>Writes a category name and the value of the object's <xref href=\"System.Object.ToString\" data-throw-if-not-resolved=\"false\"></xref> method to the trace listeners in the <xref href=\"System.Diagnostics.Debug.Listeners\" data-throw-if-not-resolved=\"false\"></xref> collection.</p>\n"
  syntax:
    content: >-
      [Conditional("DEBUG")]

      public static void Write(object value, string category)
    content.vb: >-
      <Conditional("DEBUG")>

      Public Shared Sub Write(value As Object, category As String)
    parameters:
    - id: value
      type: System.Object
      description: "\n<p>An object whose name is sent to the <xref href=\"System.Diagnostics.Debug.Listeners\" data-throw-if-not-resolved=\"false\"></xref>. </p>\n"
    - id: category
      type: System.String
      description: "\n<p>A category name used to organize the output. </p>\n"
  seealso:
  - linkId: System.Diagnostics.Debug
    commentId: T:System.Diagnostics.Debug
  - linkId: System.Diagnostics.Trace
    commentId: T:System.Diagnostics.Trace
  - linkId: System.Diagnostics.BooleanSwitch
    commentId: T:System.Diagnostics.BooleanSwitch
  - linkId: System.Diagnostics.TraceSwitch
    commentId: T:System.Diagnostics.TraceSwitch
  - linkId: System.Diagnostics.TraceListener
    commentId: T:System.Diagnostics.TraceListener
  - linkId: System.Diagnostics.DefaultTraceListener
    commentId: T:System.Diagnostics.DefaultTraceListener
  - linkId: System.Diagnostics.ConsoleTraceListener
    commentId: T:System.Diagnostics.ConsoleTraceListener
  - linkId: System.Diagnostics.ConditionalAttribute
    commentId: T:System.Diagnostics.ConditionalAttribute
  attributes:
  - type: System.Diagnostics.ConditionalAttribute
    ctor: System.Diagnostics.ConditionalAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: DEBUG
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: System.Diagnostics.Debug.Write(System.String)
  commentId: M:System.Diagnostics.Debug.Write(System.String)
  id: Write(System.String)
  parent: System.Diagnostics.Debug
  langs:
  - csharp
  - vb
  name: Write(String)
  nameWithType: Debug.Write(String)
  fullName: System.Diagnostics.Debug.Write(System.String)
  type: Method
  source:
    remote:
      path: src/System.Diagnostics.Debug/ref/System.Diagnostics.Debug.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: Write
    path: src/System.Diagnostics.Debug/ref/System.Diagnostics.Debug.cs
    startLine: 28
  assemblies:
  - System.Diagnostics.Debug
  namespace: System.Diagnostics
  summary: "\n<p>Writes a message to the trace listeners in the <xref href=\"System.Diagnostics.Debug.Listeners\" data-throw-if-not-resolved=\"false\"></xref> collection.</p>\n"
  syntax:
    content: >-
      [Conditional("DEBUG")]

      public static void Write(string message)
    content.vb: >-
      <Conditional("DEBUG")>

      Public Shared Sub Write(message As String)
    parameters:
    - id: message
      type: System.String
      description: "\n<p>A message to write. </p>\n"
  seealso:
  - linkId: System.Diagnostics.Debug
    commentId: T:System.Diagnostics.Debug
  - linkId: System.Diagnostics.Trace
    commentId: T:System.Diagnostics.Trace
  - linkId: System.Diagnostics.BooleanSwitch
    commentId: T:System.Diagnostics.BooleanSwitch
  - linkId: System.Diagnostics.TraceSwitch
    commentId: T:System.Diagnostics.TraceSwitch
  - linkId: System.Diagnostics.TraceListener
    commentId: T:System.Diagnostics.TraceListener
  - linkId: System.Diagnostics.DefaultTraceListener
    commentId: T:System.Diagnostics.DefaultTraceListener
  - linkId: System.Diagnostics.ConsoleTraceListener
    commentId: T:System.Diagnostics.ConsoleTraceListener
  - linkId: System.Diagnostics.ConditionalAttribute
    commentId: T:System.Diagnostics.ConditionalAttribute
  attributes:
  - type: System.Diagnostics.ConditionalAttribute
    ctor: System.Diagnostics.ConditionalAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: DEBUG
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: System.Diagnostics.Debug.Write(System.String,System.String)
  commentId: M:System.Diagnostics.Debug.Write(System.String,System.String)
  id: Write(System.String,System.String)
  parent: System.Diagnostics.Debug
  langs:
  - csharp
  - vb
  name: Write(String, String)
  nameWithType: Debug.Write(String, String)
  fullName: System.Diagnostics.Debug.Write(System.String, System.String)
  type: Method
  source:
    remote:
      path: src/System.Diagnostics.Debug/ref/System.Diagnostics.Debug.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: Write
    path: src/System.Diagnostics.Debug/ref/System.Diagnostics.Debug.cs
    startLine: 30
  assemblies:
  - System.Diagnostics.Debug
  namespace: System.Diagnostics
  summary: "\n<p>Writes a category name and message to the trace listeners in the <xref href=\"System.Diagnostics.Debug.Listeners\" data-throw-if-not-resolved=\"false\"></xref> collection.</p>\n"
  syntax:
    content: >-
      [Conditional("DEBUG")]

      public static void Write(string message, string category)
    content.vb: >-
      <Conditional("DEBUG")>

      Public Shared Sub Write(message As String, category As String)
    parameters:
    - id: message
      type: System.String
      description: "\n<p>A message to write. </p>\n"
    - id: category
      type: System.String
      description: "\n<p>A category name used to organize the output. </p>\n"
  seealso:
  - linkId: System.Diagnostics.Debug
    commentId: T:System.Diagnostics.Debug
  - linkId: System.Diagnostics.Trace
    commentId: T:System.Diagnostics.Trace
  - linkId: System.Diagnostics.BooleanSwitch
    commentId: T:System.Diagnostics.BooleanSwitch
  - linkId: System.Diagnostics.TraceSwitch
    commentId: T:System.Diagnostics.TraceSwitch
  - linkId: System.Diagnostics.TraceListener
    commentId: T:System.Diagnostics.TraceListener
  - linkId: System.Diagnostics.DefaultTraceListener
    commentId: T:System.Diagnostics.DefaultTraceListener
  - linkId: System.Diagnostics.ConsoleTraceListener
    commentId: T:System.Diagnostics.ConsoleTraceListener
  - linkId: System.Diagnostics.ConditionalAttribute
    commentId: T:System.Diagnostics.ConditionalAttribute
  attributes:
  - type: System.Diagnostics.ConditionalAttribute
    ctor: System.Diagnostics.ConditionalAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: DEBUG
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: System.Diagnostics.Debug.WriteIf(System.Boolean,System.Object)
  commentId: M:System.Diagnostics.Debug.WriteIf(System.Boolean,System.Object)
  id: WriteIf(System.Boolean,System.Object)
  parent: System.Diagnostics.Debug
  langs:
  - csharp
  - vb
  name: WriteIf(Boolean, Object)
  nameWithType: Debug.WriteIf(Boolean, Object)
  fullName: System.Diagnostics.Debug.WriteIf(System.Boolean, System.Object)
  type: Method
  source:
    remote:
      path: src/System.Diagnostics.Debug/ref/System.Diagnostics.Debug.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: WriteIf
    path: src/System.Diagnostics.Debug/ref/System.Diagnostics.Debug.cs
    startLine: 32
  assemblies:
  - System.Diagnostics.Debug
  namespace: System.Diagnostics
  summary: "\n<p>Writes the value of the object's <xref href=\"System.Object.ToString\" data-throw-if-not-resolved=\"false\"></xref> method to the trace listeners in the <xref href=\"System.Diagnostics.Debug.Listeners\" data-throw-if-not-resolved=\"false\"></xref> collection if a condition is <strong>true</strong>.</p>\n"
  syntax:
    content: >-
      [Conditional("DEBUG")]

      public static void WriteIf(bool condition, object value)
    content.vb: >-
      <Conditional("DEBUG")>

      Public Shared Sub WriteIf(condition As Boolean, value As Object)
    parameters:
    - id: condition
      type: System.Boolean
      description: "\n<p>The conditional expression to evaluate. If the condition is <strong>true</strong>, the value is written to the trace listeners in the collection.</p>\n"
    - id: value
      type: System.Object
      description: "\n<p>An object whose name is sent to the <xref href=\"System.Diagnostics.Debug.Listeners\" data-throw-if-not-resolved=\"false\"></xref>. </p>\n"
  seealso:
  - linkId: System.Diagnostics.Debug
    commentId: T:System.Diagnostics.Debug
  - linkId: System.Diagnostics.Trace
    commentId: T:System.Diagnostics.Trace
  - linkId: System.Diagnostics.BooleanSwitch
    commentId: T:System.Diagnostics.BooleanSwitch
  - linkId: System.Diagnostics.TraceSwitch
    commentId: T:System.Diagnostics.TraceSwitch
  - linkId: System.Diagnostics.TraceListener
    commentId: T:System.Diagnostics.TraceListener
  - linkId: System.Diagnostics.DefaultTraceListener
    commentId: T:System.Diagnostics.DefaultTraceListener
  - linkId: System.Diagnostics.ConsoleTraceListener
    commentId: T:System.Diagnostics.ConsoleTraceListener
  - linkId: System.Diagnostics.ConditionalAttribute
    commentId: T:System.Diagnostics.ConditionalAttribute
  attributes:
  - type: System.Diagnostics.ConditionalAttribute
    ctor: System.Diagnostics.ConditionalAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: DEBUG
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: System.Diagnostics.Debug.WriteIf(System.Boolean,System.Object,System.String)
  commentId: M:System.Diagnostics.Debug.WriteIf(System.Boolean,System.Object,System.String)
  id: WriteIf(System.Boolean,System.Object,System.String)
  parent: System.Diagnostics.Debug
  langs:
  - csharp
  - vb
  name: WriteIf(Boolean, Object, String)
  nameWithType: Debug.WriteIf(Boolean, Object, String)
  fullName: System.Diagnostics.Debug.WriteIf(System.Boolean, System.Object, System.String)
  type: Method
  source:
    remote:
      path: src/System.Diagnostics.Debug/ref/System.Diagnostics.Debug.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: WriteIf
    path: src/System.Diagnostics.Debug/ref/System.Diagnostics.Debug.cs
    startLine: 34
  assemblies:
  - System.Diagnostics.Debug
  namespace: System.Diagnostics
  summary: "\n<p>Writes a category name and the value of the object's <xref href=\"System.Object.ToString\" data-throw-if-not-resolved=\"false\"></xref> method to the trace listeners in the <xref href=\"System.Diagnostics.Debug.Listeners\" data-throw-if-not-resolved=\"false\"></xref> collection if a condition is <strong>true</strong>.</p>\n"
  syntax:
    content: >-
      [Conditional("DEBUG")]

      public static void WriteIf(bool condition, object value, string category)
    content.vb: >-
      <Conditional("DEBUG")>

      Public Shared Sub WriteIf(condition As Boolean, value As Object, category As String)
    parameters:
    - id: condition
      type: System.Boolean
      description: "\n<p>The conditional expression to evaluate. If the condition is <strong>true</strong>, the category name and value are written to the trace listeners in the collection.</p>\n"
    - id: value
      type: System.Object
      description: "\n<p>An object whose name is sent to the <xref href=\"System.Diagnostics.Debug.Listeners\" data-throw-if-not-resolved=\"false\"></xref>. </p>\n"
    - id: category
      type: System.String
      description: "\n<p>A category name used to organize the output. </p>\n"
  seealso:
  - linkId: System.Diagnostics.Debug
    commentId: T:System.Diagnostics.Debug
  - linkId: System.Diagnostics.Trace
    commentId: T:System.Diagnostics.Trace
  - linkId: System.Diagnostics.BooleanSwitch
    commentId: T:System.Diagnostics.BooleanSwitch
  - linkId: System.Diagnostics.TraceSwitch
    commentId: T:System.Diagnostics.TraceSwitch
  - linkId: System.Diagnostics.TraceListener
    commentId: T:System.Diagnostics.TraceListener
  - linkId: System.Diagnostics.DefaultTraceListener
    commentId: T:System.Diagnostics.DefaultTraceListener
  - linkId: System.Diagnostics.ConsoleTraceListener
    commentId: T:System.Diagnostics.ConsoleTraceListener
  - linkId: System.Diagnostics.ConditionalAttribute
    commentId: T:System.Diagnostics.ConditionalAttribute
  attributes:
  - type: System.Diagnostics.ConditionalAttribute
    ctor: System.Diagnostics.ConditionalAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: DEBUG
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: System.Diagnostics.Debug.WriteIf(System.Boolean,System.String)
  commentId: M:System.Diagnostics.Debug.WriteIf(System.Boolean,System.String)
  id: WriteIf(System.Boolean,System.String)
  parent: System.Diagnostics.Debug
  langs:
  - csharp
  - vb
  name: WriteIf(Boolean, String)
  nameWithType: Debug.WriteIf(Boolean, String)
  fullName: System.Diagnostics.Debug.WriteIf(System.Boolean, System.String)
  type: Method
  source:
    remote:
      path: src/System.Diagnostics.Debug/ref/System.Diagnostics.Debug.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: WriteIf
    path: src/System.Diagnostics.Debug/ref/System.Diagnostics.Debug.cs
    startLine: 36
  assemblies:
  - System.Diagnostics.Debug
  namespace: System.Diagnostics
  summary: "\n<p>Writes a message to the trace listeners in the <xref href=\"System.Diagnostics.Debug.Listeners\" data-throw-if-not-resolved=\"false\"></xref> collection if a condition is <strong>true</strong>.</p>\n"
  syntax:
    content: >-
      [Conditional("DEBUG")]

      public static void WriteIf(bool condition, string message)
    content.vb: >-
      <Conditional("DEBUG")>

      Public Shared Sub WriteIf(condition As Boolean, message As String)
    parameters:
    - id: condition
      type: System.Boolean
      description: "\n<p>The conditional expression to evaluate. If the condition is <strong>true</strong>, the message is written to the trace listeners in the collection.</p>\n"
    - id: message
      type: System.String
      description: "\n<p>A message to write. </p>\n"
  seealso:
  - linkId: System.Diagnostics.Debug
    commentId: T:System.Diagnostics.Debug
  - linkId: System.Diagnostics.Trace
    commentId: T:System.Diagnostics.Trace
  - linkId: System.Diagnostics.BooleanSwitch
    commentId: T:System.Diagnostics.BooleanSwitch
  - linkId: System.Diagnostics.TraceSwitch
    commentId: T:System.Diagnostics.TraceSwitch
  - linkId: System.Diagnostics.TraceListener
    commentId: T:System.Diagnostics.TraceListener
  - linkId: System.Diagnostics.DefaultTraceListener
    commentId: T:System.Diagnostics.DefaultTraceListener
  - linkId: System.Diagnostics.ConsoleTraceListener
    commentId: T:System.Diagnostics.ConsoleTraceListener
  - linkId: System.Diagnostics.ConditionalAttribute
    commentId: T:System.Diagnostics.ConditionalAttribute
  attributes:
  - type: System.Diagnostics.ConditionalAttribute
    ctor: System.Diagnostics.ConditionalAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: DEBUG
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: System.Diagnostics.Debug.WriteIf(System.Boolean,System.String,System.String)
  commentId: M:System.Diagnostics.Debug.WriteIf(System.Boolean,System.String,System.String)
  id: WriteIf(System.Boolean,System.String,System.String)
  parent: System.Diagnostics.Debug
  langs:
  - csharp
  - vb
  name: WriteIf(Boolean, String, String)
  nameWithType: Debug.WriteIf(Boolean, String, String)
  fullName: System.Diagnostics.Debug.WriteIf(System.Boolean, System.String, System.String)
  type: Method
  source:
    remote:
      path: src/System.Diagnostics.Debug/ref/System.Diagnostics.Debug.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: WriteIf
    path: src/System.Diagnostics.Debug/ref/System.Diagnostics.Debug.cs
    startLine: 38
  assemblies:
  - System.Diagnostics.Debug
  namespace: System.Diagnostics
  summary: "\n<p>Writes a category name and message to the trace listeners in the <xref href=\"System.Diagnostics.Debug.Listeners\" data-throw-if-not-resolved=\"false\"></xref> collection if a condition is <strong>true</strong>.</p>\n"
  syntax:
    content: >-
      [Conditional("DEBUG")]

      public static void WriteIf(bool condition, string message, string category)
    content.vb: >-
      <Conditional("DEBUG")>

      Public Shared Sub WriteIf(condition As Boolean, message As String, category As String)
    parameters:
    - id: condition
      type: System.Boolean
      description: "\n<p>The conditional expression to evaluate. If the condition is <strong>true</strong>, the category name and message are written to the trace listeners in the collection.</p>\n"
    - id: message
      type: System.String
      description: "\n<p>A message to write. </p>\n"
    - id: category
      type: System.String
      description: "\n<p>A category name used to organize the output. </p>\n"
  seealso:
  - linkId: System.Diagnostics.Debug
    commentId: T:System.Diagnostics.Debug
  - linkId: System.Diagnostics.Trace
    commentId: T:System.Diagnostics.Trace
  - linkId: System.Diagnostics.BooleanSwitch
    commentId: T:System.Diagnostics.BooleanSwitch
  - linkId: System.Diagnostics.TraceSwitch
    commentId: T:System.Diagnostics.TraceSwitch
  - linkId: System.Diagnostics.TraceListener
    commentId: T:System.Diagnostics.TraceListener
  - linkId: System.Diagnostics.DefaultTraceListener
    commentId: T:System.Diagnostics.DefaultTraceListener
  - linkId: System.Diagnostics.ConsoleTraceListener
    commentId: T:System.Diagnostics.ConsoleTraceListener
  - linkId: System.Diagnostics.ConditionalAttribute
    commentId: T:System.Diagnostics.ConditionalAttribute
  attributes:
  - type: System.Diagnostics.ConditionalAttribute
    ctor: System.Diagnostics.ConditionalAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: DEBUG
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: System.Diagnostics.Debug.WriteLine(System.Object)
  commentId: M:System.Diagnostics.Debug.WriteLine(System.Object)
  id: WriteLine(System.Object)
  parent: System.Diagnostics.Debug
  langs:
  - csharp
  - vb
  name: WriteLine(Object)
  nameWithType: Debug.WriteLine(Object)
  fullName: System.Diagnostics.Debug.WriteLine(System.Object)
  type: Method
  source:
    remote:
      path: src/System.Diagnostics.Debug/ref/System.Diagnostics.Debug.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: WriteLine
    path: src/System.Diagnostics.Debug/ref/System.Diagnostics.Debug.cs
    startLine: 40
  assemblies:
  - System.Diagnostics.Debug
  namespace: System.Diagnostics
  summary: "\n<p>Writes the value of the object's <xref href=\"System.Object.ToString\" data-throw-if-not-resolved=\"false\"></xref> method to the trace listeners in the <xref href=\"System.Diagnostics.Debug.Listeners\" data-throw-if-not-resolved=\"false\"></xref> collection.</p>\n"
  syntax:
    content: >-
      [Conditional("DEBUG")]

      public static void WriteLine(object value)
    content.vb: >-
      <Conditional("DEBUG")>

      Public Shared Sub WriteLine(value As Object)
    parameters:
    - id: value
      type: System.Object
      description: "\n<p>An object whose name is sent to the <xref href=\"System.Diagnostics.Debug.Listeners\" data-throw-if-not-resolved=\"false\"></xref>. </p>\n"
  seealso:
  - linkId: System.Diagnostics.Debug
    commentId: T:System.Diagnostics.Debug
  - linkId: System.Diagnostics.Trace
    commentId: T:System.Diagnostics.Trace
  - linkId: System.Diagnostics.BooleanSwitch
    commentId: T:System.Diagnostics.BooleanSwitch
  - linkId: System.Diagnostics.TraceSwitch
    commentId: T:System.Diagnostics.TraceSwitch
  - linkId: System.Diagnostics.TraceListener
    commentId: T:System.Diagnostics.TraceListener
  - linkId: System.Diagnostics.DefaultTraceListener
    commentId: T:System.Diagnostics.DefaultTraceListener
  - linkId: System.Diagnostics.ConsoleTraceListener
    commentId: T:System.Diagnostics.ConsoleTraceListener
  - linkId: System.Diagnostics.ConditionalAttribute
    commentId: T:System.Diagnostics.ConditionalAttribute
  attributes:
  - type: System.Diagnostics.ConditionalAttribute
    ctor: System.Diagnostics.ConditionalAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: DEBUG
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: System.Diagnostics.Debug.WriteLine(System.Object,System.String)
  commentId: M:System.Diagnostics.Debug.WriteLine(System.Object,System.String)
  id: WriteLine(System.Object,System.String)
  parent: System.Diagnostics.Debug
  langs:
  - csharp
  - vb
  name: WriteLine(Object, String)
  nameWithType: Debug.WriteLine(Object, String)
  fullName: System.Diagnostics.Debug.WriteLine(System.Object, System.String)
  type: Method
  source:
    remote:
      path: src/System.Diagnostics.Debug/ref/System.Diagnostics.Debug.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: WriteLine
    path: src/System.Diagnostics.Debug/ref/System.Diagnostics.Debug.cs
    startLine: 42
  assemblies:
  - System.Diagnostics.Debug
  namespace: System.Diagnostics
  summary: "\n<p>Writes a category name and the value of the object's <xref href=\"System.Object.ToString\" data-throw-if-not-resolved=\"false\"></xref> method to the trace listeners in the <xref href=\"System.Diagnostics.Debug.Listeners\" data-throw-if-not-resolved=\"false\"></xref> collection.</p>\n"
  syntax:
    content: >-
      [Conditional("DEBUG")]

      public static void WriteLine(object value, string category)
    content.vb: >-
      <Conditional("DEBUG")>

      Public Shared Sub WriteLine(value As Object, category As String)
    parameters:
    - id: value
      type: System.Object
      description: "\n<p>An object whose name is sent to the <xref href=\"System.Diagnostics.Debug.Listeners\" data-throw-if-not-resolved=\"false\"></xref>. </p>\n"
    - id: category
      type: System.String
      description: "\n<p>A category name used to organize the output. </p>\n"
  seealso:
  - linkId: System.Diagnostics.Debug
    commentId: T:System.Diagnostics.Debug
  - linkId: System.Diagnostics.Trace
    commentId: T:System.Diagnostics.Trace
  - linkId: System.Diagnostics.BooleanSwitch
    commentId: T:System.Diagnostics.BooleanSwitch
  - linkId: System.Diagnostics.TraceSwitch
    commentId: T:System.Diagnostics.TraceSwitch
  - linkId: System.Diagnostics.TraceListener
    commentId: T:System.Diagnostics.TraceListener
  - linkId: System.Diagnostics.DefaultTraceListener
    commentId: T:System.Diagnostics.DefaultTraceListener
  - linkId: System.Diagnostics.ConsoleTraceListener
    commentId: T:System.Diagnostics.ConsoleTraceListener
  - linkId: System.Diagnostics.ConditionalAttribute
    commentId: T:System.Diagnostics.ConditionalAttribute
  attributes:
  - type: System.Diagnostics.ConditionalAttribute
    ctor: System.Diagnostics.ConditionalAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: DEBUG
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: System.Diagnostics.Debug.WriteLine(System.String)
  commentId: M:System.Diagnostics.Debug.WriteLine(System.String)
  id: WriteLine(System.String)
  parent: System.Diagnostics.Debug
  langs:
  - csharp
  - vb
  name: WriteLine(String)
  nameWithType: Debug.WriteLine(String)
  fullName: System.Diagnostics.Debug.WriteLine(System.String)
  type: Method
  source:
    remote:
      path: src/System.Diagnostics.Debug/ref/System.Diagnostics.Debug.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: WriteLine
    path: src/System.Diagnostics.Debug/ref/System.Diagnostics.Debug.cs
    startLine: 44
  assemblies:
  - System.Diagnostics.Debug
  namespace: System.Diagnostics
  summary: "\n<p>Writes a message followed by a line terminator to the trace listeners in the <xref href=\"System.Diagnostics.Debug.Listeners\" data-throw-if-not-resolved=\"false\"></xref> collection.</p>\n"
  syntax:
    content: >-
      [Conditional("DEBUG")]

      public static void WriteLine(string message)
    content.vb: >-
      <Conditional("DEBUG")>

      Public Shared Sub WriteLine(message As String)
    parameters:
    - id: message
      type: System.String
      description: "\n<p>A message to write. </p>\n"
  seealso:
  - linkId: System.Diagnostics.Debug
    commentId: T:System.Diagnostics.Debug
  - linkId: System.Diagnostics.Trace
    commentId: T:System.Diagnostics.Trace
  - linkId: System.Diagnostics.BooleanSwitch
    commentId: T:System.Diagnostics.BooleanSwitch
  - linkId: System.Diagnostics.TraceSwitch
    commentId: T:System.Diagnostics.TraceSwitch
  - linkId: System.Diagnostics.TraceListener
    commentId: T:System.Diagnostics.TraceListener
  - linkId: System.Diagnostics.DefaultTraceListener
    commentId: T:System.Diagnostics.DefaultTraceListener
  - linkId: System.Diagnostics.ConsoleTraceListener
    commentId: T:System.Diagnostics.ConsoleTraceListener
  - linkId: System.Diagnostics.ConditionalAttribute
    commentId: T:System.Diagnostics.ConditionalAttribute
  attributes:
  - type: System.Diagnostics.ConditionalAttribute
    ctor: System.Diagnostics.ConditionalAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: DEBUG
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: System.Diagnostics.Debug.WriteLine(System.String,System.Object[])
  commentId: M:System.Diagnostics.Debug.WriteLine(System.String,System.Object[])
  id: WriteLine(System.String,System.Object[])
  parent: System.Diagnostics.Debug
  langs:
  - csharp
  - vb
  name: WriteLine(String, Object[])
  nameWithType: Debug.WriteLine(String, Object[])
  fullName: System.Diagnostics.Debug.WriteLine(System.String, System.Object[])
  type: Method
  source:
    remote:
      path: src/System.Diagnostics.Debug/ref/System.Diagnostics.Debug.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: WriteLine
    path: src/System.Diagnostics.Debug/ref/System.Diagnostics.Debug.cs
    startLine: 46
  assemblies:
  - System.Diagnostics.Debug
  namespace: System.Diagnostics
  summary: "\n<p>Writes a formatted message followed by a line terminator to the trace listeners in the <xref href=\"System.Diagnostics.Debug.Listeners\" data-throw-if-not-resolved=\"false\"></xref> collection.</p>\n"
  syntax:
    content: >-
      [Conditional("DEBUG")]

      public static void WriteLine(string format, params object[] args)
    content.vb: >-
      <Conditional("DEBUG")>

      Public Shared Sub WriteLine(format As String, ParamArray args As Object())
    parameters:
    - id: format
      type: System.String
      description: "\n<p>A composite format string (see Remarks) that contains text intermixed with zero or more format items, which correspond to objects in the <em>args</em> array.</p>\n"
    - id: args
      type: System.Object[]
      description: "\n<p>An object array that contains zero or more objects to format. </p>\n"
  attributes:
  - type: System.Diagnostics.ConditionalAttribute
    ctor: System.Diagnostics.ConditionalAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: DEBUG
  nameWithType.vb: Debug.WriteLine(String, Object())
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: System.Diagnostics.Debug.WriteLine(System.String, System.Object())
  name.vb: WriteLine(String, Object())
- uid: System.Diagnostics.Debug.WriteLine(System.String,System.String)
  commentId: M:System.Diagnostics.Debug.WriteLine(System.String,System.String)
  id: WriteLine(System.String,System.String)
  parent: System.Diagnostics.Debug
  langs:
  - csharp
  - vb
  name: WriteLine(String, String)
  nameWithType: Debug.WriteLine(String, String)
  fullName: System.Diagnostics.Debug.WriteLine(System.String, System.String)
  type: Method
  source:
    remote:
      path: src/System.Diagnostics.Debug/ref/System.Diagnostics.Debug.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: WriteLine
    path: src/System.Diagnostics.Debug/ref/System.Diagnostics.Debug.cs
    startLine: 48
  assemblies:
  - System.Diagnostics.Debug
  namespace: System.Diagnostics
  summary: "\n<p>Writes a category name and message to the trace listeners in the <xref href=\"System.Diagnostics.Debug.Listeners\" data-throw-if-not-resolved=\"false\"></xref> collection.</p>\n"
  syntax:
    content: >-
      [Conditional("DEBUG")]

      public static void WriteLine(string message, string category)
    content.vb: >-
      <Conditional("DEBUG")>

      Public Shared Sub WriteLine(message As String, category As String)
    parameters:
    - id: message
      type: System.String
      description: "\n<p>A message to write. </p>\n"
    - id: category
      type: System.String
      description: "\n<p>A category name used to organize the output. </p>\n"
  seealso:
  - linkId: System.Diagnostics.Debug
    commentId: T:System.Diagnostics.Debug
  - linkId: System.Diagnostics.Trace
    commentId: T:System.Diagnostics.Trace
  - linkId: System.Diagnostics.BooleanSwitch
    commentId: T:System.Diagnostics.BooleanSwitch
  - linkId: System.Diagnostics.TraceSwitch
    commentId: T:System.Diagnostics.TraceSwitch
  - linkId: System.Diagnostics.TraceListener
    commentId: T:System.Diagnostics.TraceListener
  - linkId: System.Diagnostics.DefaultTraceListener
    commentId: T:System.Diagnostics.DefaultTraceListener
  - linkId: System.Diagnostics.ConsoleTraceListener
    commentId: T:System.Diagnostics.ConsoleTraceListener
  - linkId: System.Diagnostics.ConditionalAttribute
    commentId: T:System.Diagnostics.ConditionalAttribute
  attributes:
  - type: System.Diagnostics.ConditionalAttribute
    ctor: System.Diagnostics.ConditionalAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: DEBUG
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: System.Diagnostics.Debug.WriteLineIf(System.Boolean,System.Object)
  commentId: M:System.Diagnostics.Debug.WriteLineIf(System.Boolean,System.Object)
  id: WriteLineIf(System.Boolean,System.Object)
  parent: System.Diagnostics.Debug
  langs:
  - csharp
  - vb
  name: WriteLineIf(Boolean, Object)
  nameWithType: Debug.WriteLineIf(Boolean, Object)
  fullName: System.Diagnostics.Debug.WriteLineIf(System.Boolean, System.Object)
  type: Method
  source:
    remote:
      path: src/System.Diagnostics.Debug/ref/System.Diagnostics.Debug.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: WriteLineIf
    path: src/System.Diagnostics.Debug/ref/System.Diagnostics.Debug.cs
    startLine: 50
  assemblies:
  - System.Diagnostics.Debug
  namespace: System.Diagnostics
  summary: "\n<p>Writes the value of the object's <xref href=\"System.Object.ToString\" data-throw-if-not-resolved=\"false\"></xref> method to the trace listeners in the <xref href=\"System.Diagnostics.Debug.Listeners\" data-throw-if-not-resolved=\"false\"></xref> collection if a condition is <strong>true</strong>.</p>\n"
  syntax:
    content: >-
      [Conditional("DEBUG")]

      public static void WriteLineIf(bool condition, object value)
    content.vb: >-
      <Conditional("DEBUG")>

      Public Shared Sub WriteLineIf(condition As Boolean, value As Object)
    parameters:
    - id: condition
      type: System.Boolean
      description: "\n<p>The conditional expression to evaluate. If the condition is <strong>true</strong>, the value is written to the trace listeners in the collection.</p>\n"
    - id: value
      type: System.Object
      description: "\n<p>An object whose name is sent to the <xref href=\"System.Diagnostics.Debug.Listeners\" data-throw-if-not-resolved=\"false\"></xref>. </p>\n"
  seealso:
  - linkId: System.Diagnostics.Debug
    commentId: T:System.Diagnostics.Debug
  - linkId: System.Diagnostics.Trace
    commentId: T:System.Diagnostics.Trace
  - linkId: System.Diagnostics.BooleanSwitch
    commentId: T:System.Diagnostics.BooleanSwitch
  - linkId: System.Diagnostics.TraceSwitch
    commentId: T:System.Diagnostics.TraceSwitch
  - linkId: System.Diagnostics.TraceListener
    commentId: T:System.Diagnostics.TraceListener
  - linkId: System.Diagnostics.DefaultTraceListener
    commentId: T:System.Diagnostics.DefaultTraceListener
  - linkId: System.Diagnostics.ConsoleTraceListener
    commentId: T:System.Diagnostics.ConsoleTraceListener
  - linkId: System.Diagnostics.ConditionalAttribute
    commentId: T:System.Diagnostics.ConditionalAttribute
  attributes:
  - type: System.Diagnostics.ConditionalAttribute
    ctor: System.Diagnostics.ConditionalAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: DEBUG
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: System.Diagnostics.Debug.WriteLineIf(System.Boolean,System.Object,System.String)
  commentId: M:System.Diagnostics.Debug.WriteLineIf(System.Boolean,System.Object,System.String)
  id: WriteLineIf(System.Boolean,System.Object,System.String)
  parent: System.Diagnostics.Debug
  langs:
  - csharp
  - vb
  name: WriteLineIf(Boolean, Object, String)
  nameWithType: Debug.WriteLineIf(Boolean, Object, String)
  fullName: System.Diagnostics.Debug.WriteLineIf(System.Boolean, System.Object, System.String)
  type: Method
  source:
    remote:
      path: src/System.Diagnostics.Debug/ref/System.Diagnostics.Debug.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: WriteLineIf
    path: src/System.Diagnostics.Debug/ref/System.Diagnostics.Debug.cs
    startLine: 52
  assemblies:
  - System.Diagnostics.Debug
  namespace: System.Diagnostics
  summary: "\n<p>Writes a category name and the value of the object's <xref href=\"System.Object.ToString\" data-throw-if-not-resolved=\"false\"></xref> method to the trace listeners in the <xref href=\"System.Diagnostics.Debug.Listeners\" data-throw-if-not-resolved=\"false\"></xref> collection if a condition is <strong>true</strong>.</p>\n"
  syntax:
    content: >-
      [Conditional("DEBUG")]

      public static void WriteLineIf(bool condition, object value, string category)
    content.vb: >-
      <Conditional("DEBUG")>

      Public Shared Sub WriteLineIf(condition As Boolean, value As Object, category As String)
    parameters:
    - id: condition
      type: System.Boolean
      description: "\n<p>The conditional expression to evaluate. If the condition is <strong>true</strong>, the category name and value are written to the trace listeners in the collection.</p>\n"
    - id: value
      type: System.Object
      description: "\n<p>An object whose name is sent to the <xref href=\"System.Diagnostics.Debug.Listeners\" data-throw-if-not-resolved=\"false\"></xref>. </p>\n"
    - id: category
      type: System.String
      description: "\n<p>A category name used to organize the output. </p>\n"
  seealso:
  - linkId: System.Diagnostics.Debug
    commentId: T:System.Diagnostics.Debug
  - linkId: System.Diagnostics.Trace
    commentId: T:System.Diagnostics.Trace
  - linkId: System.Diagnostics.BooleanSwitch
    commentId: T:System.Diagnostics.BooleanSwitch
  - linkId: System.Diagnostics.TraceSwitch
    commentId: T:System.Diagnostics.TraceSwitch
  - linkId: System.Diagnostics.TraceListener
    commentId: T:System.Diagnostics.TraceListener
  - linkId: System.Diagnostics.DefaultTraceListener
    commentId: T:System.Diagnostics.DefaultTraceListener
  - linkId: System.Diagnostics.ConsoleTraceListener
    commentId: T:System.Diagnostics.ConsoleTraceListener
  - linkId: System.Diagnostics.ConditionalAttribute
    commentId: T:System.Diagnostics.ConditionalAttribute
  attributes:
  - type: System.Diagnostics.ConditionalAttribute
    ctor: System.Diagnostics.ConditionalAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: DEBUG
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: System.Diagnostics.Debug.WriteLineIf(System.Boolean,System.String)
  commentId: M:System.Diagnostics.Debug.WriteLineIf(System.Boolean,System.String)
  id: WriteLineIf(System.Boolean,System.String)
  parent: System.Diagnostics.Debug
  langs:
  - csharp
  - vb
  name: WriteLineIf(Boolean, String)
  nameWithType: Debug.WriteLineIf(Boolean, String)
  fullName: System.Diagnostics.Debug.WriteLineIf(System.Boolean, System.String)
  type: Method
  source:
    remote:
      path: src/System.Diagnostics.Debug/ref/System.Diagnostics.Debug.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: WriteLineIf
    path: src/System.Diagnostics.Debug/ref/System.Diagnostics.Debug.cs
    startLine: 54
  assemblies:
  - System.Diagnostics.Debug
  namespace: System.Diagnostics
  summary: "\n<p>Writes a message to the trace listeners in the <xref href=\"System.Diagnostics.Debug.Listeners\" data-throw-if-not-resolved=\"false\"></xref> collection if a condition is <strong>true</strong>.</p>\n"
  syntax:
    content: >-
      [Conditional("DEBUG")]

      public static void WriteLineIf(bool condition, string message)
    content.vb: >-
      <Conditional("DEBUG")>

      Public Shared Sub WriteLineIf(condition As Boolean, message As String)
    parameters:
    - id: condition
      type: System.Boolean
      description: "\n<p>The conditional expression to evaluate. If the condition is <strong>true</strong>, the message is written to the trace listeners in the collection.</p>\n"
    - id: message
      type: System.String
      description: "\n<p>A message to write. </p>\n"
  seealso:
  - linkId: System.Diagnostics.Debug
    commentId: T:System.Diagnostics.Debug
  - linkId: System.Diagnostics.Trace
    commentId: T:System.Diagnostics.Trace
  - linkId: System.Diagnostics.BooleanSwitch
    commentId: T:System.Diagnostics.BooleanSwitch
  - linkId: System.Diagnostics.TraceSwitch
    commentId: T:System.Diagnostics.TraceSwitch
  - linkId: System.Diagnostics.TraceListener
    commentId: T:System.Diagnostics.TraceListener
  - linkId: System.Diagnostics.DefaultTraceListener
    commentId: T:System.Diagnostics.DefaultTraceListener
  - linkId: System.Diagnostics.ConsoleTraceListener
    commentId: T:System.Diagnostics.ConsoleTraceListener
  - linkId: System.Diagnostics.ConditionalAttribute
    commentId: T:System.Diagnostics.ConditionalAttribute
  attributes:
  - type: System.Diagnostics.ConditionalAttribute
    ctor: System.Diagnostics.ConditionalAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: DEBUG
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: System.Diagnostics.Debug.WriteLineIf(System.Boolean,System.String,System.String)
  commentId: M:System.Diagnostics.Debug.WriteLineIf(System.Boolean,System.String,System.String)
  id: WriteLineIf(System.Boolean,System.String,System.String)
  parent: System.Diagnostics.Debug
  langs:
  - csharp
  - vb
  name: WriteLineIf(Boolean, String, String)
  nameWithType: Debug.WriteLineIf(Boolean, String, String)
  fullName: System.Diagnostics.Debug.WriteLineIf(System.Boolean, System.String, System.String)
  type: Method
  source:
    remote:
      path: src/System.Diagnostics.Debug/ref/System.Diagnostics.Debug.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: WriteLineIf
    path: src/System.Diagnostics.Debug/ref/System.Diagnostics.Debug.cs
    startLine: 56
  assemblies:
  - System.Diagnostics.Debug
  namespace: System.Diagnostics
  summary: "\n<p>Writes a category name and message to the trace listeners in the <xref href=\"System.Diagnostics.Debug.Listeners\" data-throw-if-not-resolved=\"false\"></xref> collection if a condition is <strong>true</strong>.</p>\n"
  syntax:
    content: >-
      [Conditional("DEBUG")]

      public static void WriteLineIf(bool condition, string message, string category)
    content.vb: >-
      <Conditional("DEBUG")>

      Public Shared Sub WriteLineIf(condition As Boolean, message As String, category As String)
    parameters:
    - id: condition
      type: System.Boolean
      description: "\n<p>\n<strong>true</strong> to cause a message to be written; otherwise, <strong>false</strong>. </p>\n"
    - id: message
      type: System.String
      description: "\n<p>A message to write. </p>\n"
    - id: category
      type: System.String
      description: "\n<p>A category name used to organize the output. </p>\n"
  seealso:
  - linkId: System.Diagnostics.Debug
    commentId: T:System.Diagnostics.Debug
  - linkId: System.Diagnostics.Trace
    commentId: T:System.Diagnostics.Trace
  - linkId: System.Diagnostics.BooleanSwitch
    commentId: T:System.Diagnostics.BooleanSwitch
  - linkId: System.Diagnostics.TraceSwitch
    commentId: T:System.Diagnostics.TraceSwitch
  - linkId: System.Diagnostics.TraceListener
    commentId: T:System.Diagnostics.TraceListener
  - linkId: System.Diagnostics.DefaultTraceListener
    commentId: T:System.Diagnostics.DefaultTraceListener
  - linkId: System.Diagnostics.ConsoleTraceListener
    commentId: T:System.Diagnostics.ConsoleTraceListener
  - linkId: System.Diagnostics.ConditionalAttribute
    commentId: T:System.Diagnostics.ConditionalAttribute
  attributes:
  - type: System.Diagnostics.ConditionalAttribute
    ctor: System.Diagnostics.ConditionalAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: DEBUG
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
references:
- uid: System.Diagnostics
  commentId: N:System.Diagnostics
  isExternal: false
  name: System.Diagnostics
  nameWithType: System.Diagnostics
  fullName: System.Diagnostics
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: false
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: false
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: false
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Object[]
  name: Object[]
  nameWithType: Object[]
  fullName: System.Object[]
  nameWithType.vb: Object()
  fullname.vb: System.Object()
  name.vb: Object()
  spec.csharp:
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  spec.vb:
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
