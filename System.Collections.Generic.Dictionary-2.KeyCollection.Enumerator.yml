### YamlMime:ManagedReference
items:
- uid: System.Collections.Generic.Dictionary`2.KeyCollection.Enumerator
  commentId: T:System.Collections.Generic.Dictionary`2.KeyCollection.Enumerator
  id: Dictionary`2.KeyCollection.Enumerator
  parent: System.Collections.Generic
  children:
  - System.Collections.Generic.Dictionary`2.KeyCollection.Enumerator.Current
  - System.Collections.Generic.Dictionary`2.KeyCollection.Enumerator.Dispose
  - System.Collections.Generic.Dictionary`2.KeyCollection.Enumerator.MoveNext
  - System.Collections.Generic.Dictionary`2.KeyCollection.Enumerator.System#Collections#IEnumerator#Current
  - System.Collections.Generic.Dictionary`2.KeyCollection.Enumerator.System#Collections#IEnumerator#Reset
  langs:
  - csharp
  - vb
  name: Dictionary<TKey, TValue>.KeyCollection.Enumerator
  nameWithType: Dictionary<TKey, TValue>.KeyCollection.Enumerator
  fullName: System.Collections.Generic.Dictionary<TKey, TValue>.KeyCollection.Enumerator
  type: Struct
  source:
    remote:
      path: src/mscorlib/src/System/Collections/Generic/Dictionary.cs
      branch: master
      repo: https://github.com/dotnet/coreclr.git
    id: Enumerator
    path: src/mscorlib/src/System/Collections/Generic/Dictionary.cs
    startLine: 938
  assemblies:
  - System.Collections
  namespace: System.Collections.Generic
  summary: "\n<p>Enumerates the elements of a <xref href=\"System.Collections.Generic.Dictionary`2.KeyCollection\" data-throw-if-not-resolved=\"false\"></xref>.</p>\n"
  syntax:
    content: >-
      [Serializable]

      public struct Enumerator : IEnumerator<TKey>, IDisposable, IEnumerator
    content.vb: >-
      <Serializable>

      Public Structure Enumerator
          Implements IEnumerator(Of TKey), IDisposable, IEnumerator
  seealso:
  - linkId: System.Collections.Generic.Dictionary`2.Enumerator
    commentId: T:System.Collections.Generic.Dictionary`2.Enumerator
  - linkId: System.Collections.Generic.Dictionary`2.ValueCollection.Enumerator
    commentId: T:System.Collections.Generic.Dictionary`2.ValueCollection.Enumerator
  - linkId: System.Collections.Generic.IEnumerable`1
    commentId: T:System.Collections.Generic.IEnumerable`1
  - linkId: System.Collections.Generic.IEnumerator`1
    commentId: T:System.Collections.Generic.IEnumerator`1
  implements:
  - System.Collections.Generic.IEnumerator{{TKey}}
  - System.Collections.IEnumerator
  - System.IDisposable
  inheritedMembers:
  - System.ValueType.Equals(System.Object)
  - System.ValueType.GetHashCode
  - System.ValueType.ToString
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetType
  attributes:
  - type: System.Runtime.InteropServices.StructLayoutAttribute
    ctor: System.Runtime.InteropServices.StructLayoutAttribute.#ctor(System.Runtime.InteropServices.LayoutKind)
    arguments:
    - type: System.Runtime.InteropServices.LayoutKind
      value: 0
  nameWithType.vb: Dictionary(Of TKey, TValue).KeyCollection.Enumerator
  modifiers.csharp:
  - public
  - struct
  modifiers.vb:
  - Public
  - Structure
  fullName.vb: System.Collections.Generic.Dictionary(Of TKey, TValue).KeyCollection.Enumerator
  name.vb: Dictionary(Of TKey, TValue).KeyCollection.Enumerator
- uid: System.Collections.Generic.Dictionary`2.KeyCollection.Enumerator.Current
  commentId: P:System.Collections.Generic.Dictionary`2.KeyCollection.Enumerator.Current
  id: Current
  parent: System.Collections.Generic.Dictionary`2.KeyCollection.Enumerator
  langs:
  - csharp
  - vb
  name: Current
  nameWithType: Dictionary<TKey, TValue>.KeyCollection.Enumerator.Current
  fullName: System.Collections.Generic.Dictionary<TKey, TValue>.KeyCollection.Enumerator.Current
  type: Property
  source:
    remote:
      path: src/mscorlib/src/System/Collections/Generic/Dictionary.cs
      branch: master
      repo: https://github.com/dotnet/coreclr.git
    id: Current
    path: src/mscorlib/src/System/Collections/Generic/Dictionary.cs
    startLine: 975
  assemblies:
  - System.Collections
  namespace: System.Collections.Generic
  summary: "\n<p>Gets the element at the current position of the enumerator.</p>\n"
  syntax:
    content: public TKey Current { get; }
    content.vb: Public ReadOnly Property Current As TKey
    parameters: []
    return:
      type: '{TKey}'
      description: "\n<p>The element in the <xref href=\"System.Collections.Generic.Dictionary`2.KeyCollection\" data-throw-if-not-resolved=\"false\"></xref> at the current position of the enumerator.</p>\n"
  seealso:
  - linkId: System.Collections.Generic.Dictionary`2.KeyCollection.Enumerator.MoveNext
    commentId: M:System.Collections.Generic.Dictionary`2.KeyCollection.Enumerator.MoveNext
  - linkId: System.Collections.IEnumerator
    commentId: T:System.Collections.IEnumerator
  implements:
  - System.Collections.Generic.IEnumerator{{TKey}}.Current
  nameWithType.vb: Dictionary(Of TKey, TValue).KeyCollection.Enumerator.Current
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
  fullName.vb: System.Collections.Generic.Dictionary(Of TKey, TValue).KeyCollection.Enumerator.Current
- uid: System.Collections.Generic.Dictionary`2.KeyCollection.Enumerator.System#Collections#IEnumerator#Current
  commentId: P:System.Collections.Generic.Dictionary`2.KeyCollection.Enumerator.System#Collections#IEnumerator#Current
  id: System#Collections#IEnumerator#Current
  isEii: true
  parent: System.Collections.Generic.Dictionary`2.KeyCollection.Enumerator
  langs:
  - csharp
  - vb
  name: IEnumerator.Current
  nameWithType: Dictionary<TKey, TValue>.KeyCollection.Enumerator.IEnumerator.Current
  fullName: System.Collections.Generic.Dictionary<TKey, TValue>.KeyCollection.Enumerator.System.Collections.IEnumerator.Current
  type: Property
  source:
    remote:
      path: src/mscorlib/src/System/Collections/Generic/Dictionary.cs
      branch: master
      repo: https://github.com/dotnet/coreclr.git
    id: System.Collections.IEnumerator.Current
    path: src/mscorlib/src/System/Collections/Generic/Dictionary.cs
    startLine: 981
  assemblies:
  - System.Collections
  namespace: System.Collections.Generic
  summary: "\n<p>Gets the element at the current position of the enumerator.</p>\n"
  syntax:
    content: object IEnumerator.Current { get; }
    content.vb: ReadOnly WriteOnly Property System.Collections.IEnumerator.Current As Object Implements IEnumerator.Current
    parameters: []
    return:
      type: System.Object
      description: "\n<p>The element in the collection at the current position of the enumerator.</p>\n"
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "\n<p>The enumerator is positioned before the first element of the collection or after the last element. </p>\n"
  seealso:
  - linkId: System.Collections.IEnumerator.Current
    commentId: P:System.Collections.IEnumerator.Current
  - linkId: System.Collections.IEnumerator.MoveNext
    commentId: M:System.Collections.IEnumerator.MoveNext
  - linkId: System.Collections.IEnumerator.Reset
    commentId: M:System.Collections.IEnumerator.Reset
  - linkId: System.Collections.IEnumerator
    commentId: T:System.Collections.IEnumerator
  implements:
  - System.Collections.IEnumerator.Current
  nameWithType.vb: Dictionary(Of TKey, TValue).KeyCollection.Enumerator.System.Collections.IEnumerator.Current
  modifiers.csharp:
  - get
  modifiers.vb:
  - ReadOnly
  fullName.vb: System.Collections.Generic.Dictionary(Of TKey, TValue).KeyCollection.Enumerator.System.Collections.IEnumerator.Current
  name.vb: System.Collections.IEnumerator.Current
- uid: System.Collections.Generic.Dictionary`2.KeyCollection.Enumerator.Dispose
  commentId: M:System.Collections.Generic.Dictionary`2.KeyCollection.Enumerator.Dispose
  id: Dispose
  parent: System.Collections.Generic.Dictionary`2.KeyCollection.Enumerator
  langs:
  - csharp
  - vb
  name: Dispose()
  nameWithType: Dictionary<TKey, TValue>.KeyCollection.Enumerator.Dispose()
  fullName: System.Collections.Generic.Dictionary<TKey, TValue>.KeyCollection.Enumerator.Dispose()
  type: Method
  source:
    remote:
      path: src/mscorlib/src/System/Collections/Generic/Dictionary.cs
      branch: master
      repo: https://github.com/dotnet/coreclr.git
    id: Dispose
    path: src/mscorlib/src/System/Collections/Generic/Dictionary.cs
    startLine: 953
  assemblies:
  - System.Collections
  namespace: System.Collections.Generic
  summary: "\n<p>Releases all resources used by the <xref href=\"System.Collections.Generic.Dictionary`2.KeyCollection.Enumerator\" data-throw-if-not-resolved=\"false\"></xref>.</p>\n"
  syntax:
    content: public void Dispose()
    content.vb: Public Sub Dispose
  seealso:
  - linkId: System.IDisposable.Dispose
    commentId: M:System.IDisposable.Dispose
  - linkId: System.Object.Finalize
    commentId: M:System.Object.Finalize
  implements:
  - System.IDisposable.Dispose
  nameWithType.vb: Dictionary(Of TKey, TValue).KeyCollection.Enumerator.Dispose()
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: System.Collections.Generic.Dictionary(Of TKey, TValue).KeyCollection.Enumerator.Dispose()
- uid: System.Collections.Generic.Dictionary`2.KeyCollection.Enumerator.MoveNext
  commentId: M:System.Collections.Generic.Dictionary`2.KeyCollection.Enumerator.MoveNext
  id: MoveNext
  parent: System.Collections.Generic.Dictionary`2.KeyCollection.Enumerator
  langs:
  - csharp
  - vb
  name: MoveNext()
  nameWithType: Dictionary<TKey, TValue>.KeyCollection.Enumerator.MoveNext()
  fullName: System.Collections.Generic.Dictionary<TKey, TValue>.KeyCollection.Enumerator.MoveNext()
  type: Method
  source:
    remote:
      path: src/mscorlib/src/System/Collections/Generic/Dictionary.cs
      branch: master
      repo: https://github.com/dotnet/coreclr.git
    id: MoveNext
    path: src/mscorlib/src/System/Collections/Generic/Dictionary.cs
    startLine: 956
  assemblies:
  - System.Collections
  namespace: System.Collections.Generic
  summary: "\n<p>Advances the enumerator to the next element of the <xref href=\"System.Collections.Generic.Dictionary`2.KeyCollection\" data-throw-if-not-resolved=\"false\"></xref>.</p>\n"
  syntax:
    content: public bool MoveNext()
    content.vb: Public Function MoveNext As Boolean
    return:
      type: System.Boolean
      description: "\n<p>\n<strong>true</strong> if the enumerator was successfully advanced to the next element; <strong>false</strong> if the enumerator has passed the end of the collection.</p>\n"
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "\n<p>The collection was modified after the enumerator was created. </p>\n"
  seealso:
  - linkId: System.Collections.Generic.Dictionary`2.KeyCollection.Enumerator.Current
    commentId: P:System.Collections.Generic.Dictionary`2.KeyCollection.Enumerator.Current
  implements:
  - System.Collections.IEnumerator.MoveNext
  nameWithType.vb: Dictionary(Of TKey, TValue).KeyCollection.Enumerator.MoveNext()
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: System.Collections.Generic.Dictionary(Of TKey, TValue).KeyCollection.Enumerator.MoveNext()
- uid: System.Collections.Generic.Dictionary`2.KeyCollection.Enumerator.System#Collections#IEnumerator#Reset
  commentId: M:System.Collections.Generic.Dictionary`2.KeyCollection.Enumerator.System#Collections#IEnumerator#Reset
  id: System#Collections#IEnumerator#Reset
  isEii: true
  parent: System.Collections.Generic.Dictionary`2.KeyCollection.Enumerator
  langs:
  - csharp
  - vb
  name: IEnumerator.Reset()
  nameWithType: Dictionary<TKey, TValue>.KeyCollection.Enumerator.IEnumerator.Reset()
  fullName: System.Collections.Generic.Dictionary<TKey, TValue>.KeyCollection.Enumerator.System.Collections.IEnumerator.Reset()
  type: Method
  source:
    remote:
      path: src/mscorlib/src/System/Collections/Generic/Dictionary.cs
      branch: master
      repo: https://github.com/dotnet/coreclr.git
    id: System.Collections.IEnumerator.Reset
    path: src/mscorlib/src/System/Collections/Generic/Dictionary.cs
    startLine: 991
  assemblies:
  - System.Collections
  namespace: System.Collections.Generic
  summary: "\n<p>Sets the enumerator to its initial position, which is before the first element in the collection.</p>\n"
  syntax:
    content: void IEnumerator.Reset()
    content.vb: Sub System.Collections.IEnumerator.Reset Implements IEnumerator.Reset
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "\n<p>The collection was modified after the enumerator was created. </p>\n"
  seealso:
  - linkId: System.Collections.IEnumerator.Current
    commentId: P:System.Collections.IEnumerator.Current
  - linkId: System.Collections.IEnumerator.MoveNext
    commentId: M:System.Collections.IEnumerator.MoveNext
  - linkId: System.Collections.IEnumerator.Reset
    commentId: M:System.Collections.IEnumerator.Reset
  - linkId: System.Collections.IEnumerator
    commentId: T:System.Collections.IEnumerator
  implements:
  - System.Collections.IEnumerator.Reset
  nameWithType.vb: Dictionary(Of TKey, TValue).KeyCollection.Enumerator.System.Collections.IEnumerator.Reset()
  fullName.vb: System.Collections.Generic.Dictionary(Of TKey, TValue).KeyCollection.Enumerator.System.Collections.IEnumerator.Reset()
  name.vb: System.Collections.IEnumerator.Reset()
references:
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: false
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
- uid: System.Collections.Generic.IEnumerator{{TKey}}
  commentId: T:System.Collections.Generic.IEnumerator{`0}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IEnumerator`1
  name: IEnumerator<TKey>
  nameWithType: IEnumerator<TKey>
  fullName: System.Collections.Generic.IEnumerator<TKey>
  nameWithType.vb: IEnumerator(Of TKey)
  fullname.vb: System.Collections.Generic.IEnumerator(Of TKey)
  name.vb: IEnumerator(Of TKey)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerator`1
    name: IEnumerator
    nameWithType: IEnumerator
    fullName: System.Collections.Generic.IEnumerator
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TKey
    nameWithType: TKey
    fullName: TKey
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerator`1
    name: IEnumerator
    nameWithType: IEnumerator
    fullName: System.Collections.Generic.IEnumerator
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TKey
    nameWithType: TKey
    fullName: TKey
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.IEnumerator
  commentId: T:System.Collections.IEnumerator
  parent: System.Collections
  isExternal: false
  name: IEnumerator
  nameWithType: IEnumerator
  fullName: System.Collections.IEnumerator
- uid: System.IDisposable
  commentId: T:System.IDisposable
  parent: System
  isExternal: false
  name: IDisposable
  nameWithType: IDisposable
  fullName: System.IDisposable
- uid: System.ValueType.Equals(System.Object)
  commentId: M:System.ValueType.Equals(System.Object)
  parent: System.ValueType
  isExternal: true
  name: Equals(Object)
  nameWithType: ValueType.Equals(Object)
  fullName: System.ValueType.Equals(System.Object)
  spec.csharp:
  - uid: System.ValueType.Equals(System.Object)
    name: Equals
    nameWithType: ValueType.Equals
    fullName: System.ValueType.Equals
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.ValueType.Equals(System.Object)
    name: Equals
    nameWithType: ValueType.Equals
    fullName: System.ValueType.Equals
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.ValueType.GetHashCode
  commentId: M:System.ValueType.GetHashCode
  parent: System.ValueType
  isExternal: false
  name: GetHashCode()
  nameWithType: ValueType.GetHashCode()
  fullName: System.ValueType.GetHashCode()
  spec.csharp:
  - uid: System.ValueType.GetHashCode
    name: GetHashCode
    nameWithType: ValueType.GetHashCode
    fullName: System.ValueType.GetHashCode
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.ValueType.GetHashCode
    name: GetHashCode
    nameWithType: ValueType.GetHashCode
    fullName: System.ValueType.GetHashCode
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.ValueType.ToString
  commentId: M:System.ValueType.ToString
  parent: System.ValueType
  isExternal: false
  name: ToString()
  nameWithType: ValueType.ToString()
  fullName: System.ValueType.ToString()
  spec.csharp:
  - uid: System.ValueType.ToString
    name: ToString
    nameWithType: ValueType.ToString
    fullName: System.ValueType.ToString
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.ValueType.ToString
    name: ToString
    nameWithType: ValueType.ToString
    fullName: System.ValueType.ToString
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.IEnumerator`1
  commentId: T:System.Collections.Generic.IEnumerator`1
  isExternal: false
  name: IEnumerator<T>
  nameWithType: IEnumerator<T>
  fullName: System.Collections.Generic.IEnumerator<T>
  nameWithType.vb: IEnumerator(Of T)
  fullname.vb: System.Collections.Generic.IEnumerator(Of T)
  name.vb: IEnumerator(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerator`1
    name: IEnumerator
    nameWithType: IEnumerator
    fullName: System.Collections.Generic.IEnumerator
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerator`1
    name: IEnumerator
    nameWithType: IEnumerator
    fullName: System.Collections.Generic.IEnumerator
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections
  commentId: N:System.Collections
  isExternal: false
  name: System.Collections
  nameWithType: System.Collections
  fullName: System.Collections
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: System.ValueType
  commentId: T:System.ValueType
  parent: System
  isExternal: false
  name: ValueType
  nameWithType: ValueType
  fullName: System.ValueType
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: false
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Collections.Generic.IEnumerator{{TKey}}.Current
  commentId: P:System.Collections.Generic.IEnumerator{`0}.Current
  parent: System.Collections.Generic.IEnumerator{{TKey}}
  definition: System.Collections.Generic.IEnumerator`1.Current
  name: Current
  nameWithType: IEnumerator<TKey>.Current
  fullName: System.Collections.Generic.IEnumerator<TKey>.Current
  nameWithType.vb: IEnumerator(Of TKey).Current
  fullname.vb: System.Collections.Generic.IEnumerator(Of TKey).Current
- uid: '{TKey}'
  commentId: '!:TKey'
  definition: TKey
  name: TKey
  nameWithType: TKey
  fullName: TKey
- uid: System.Collections.Generic.IEnumerator`1.Current
  commentId: P:System.Collections.Generic.IEnumerator`1.Current
  isExternal: true
  name: Current
  nameWithType: IEnumerator<T>.Current
  fullName: System.Collections.Generic.IEnumerator<T>.Current
  nameWithType.vb: IEnumerator(Of T).Current
  fullname.vb: System.Collections.Generic.IEnumerator(Of T).Current
- uid: TKey
  isExternal: false
  name: TKey
  nameWithType: TKey
  fullName: TKey
- uid: System.Collections.IEnumerator.Current
  commentId: P:System.Collections.IEnumerator.Current
  parent: System.Collections.IEnumerator
  isExternal: false
  name: Current
  nameWithType: IEnumerator.Current
  fullName: System.Collections.IEnumerator.Current
- uid: System.IDisposable.Dispose
  commentId: M:System.IDisposable.Dispose
  parent: System.IDisposable
  isExternal: false
  name: Dispose()
  nameWithType: IDisposable.Dispose()
  fullName: System.IDisposable.Dispose()
  spec.csharp:
  - uid: System.IDisposable.Dispose
    name: Dispose
    nameWithType: IDisposable.Dispose
    fullName: System.IDisposable.Dispose
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.IDisposable.Dispose
    name: Dispose
    nameWithType: IDisposable.Dispose
    fullName: System.IDisposable.Dispose
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.IEnumerator.MoveNext
  commentId: M:System.Collections.IEnumerator.MoveNext
  parent: System.Collections.IEnumerator
  isExternal: false
  name: MoveNext()
  nameWithType: IEnumerator.MoveNext()
  fullName: System.Collections.IEnumerator.MoveNext()
  spec.csharp:
  - uid: System.Collections.IEnumerator.MoveNext
    name: MoveNext
    nameWithType: IEnumerator.MoveNext
    fullName: System.Collections.IEnumerator.MoveNext
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.IEnumerator.MoveNext
    name: MoveNext
    nameWithType: IEnumerator.MoveNext
    fullName: System.Collections.IEnumerator.MoveNext
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: false
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Collections.IEnumerator.Reset
  commentId: M:System.Collections.IEnumerator.Reset
  parent: System.Collections.IEnumerator
  isExternal: false
  name: Reset()
  nameWithType: IEnumerator.Reset()
  fullName: System.Collections.IEnumerator.Reset()
  spec.csharp:
  - uid: System.Collections.IEnumerator.Reset
    name: Reset
    nameWithType: IEnumerator.Reset
    fullName: System.Collections.IEnumerator.Reset
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.IEnumerator.Reset
    name: Reset
    nameWithType: IEnumerator.Reset
    fullName: System.Collections.IEnumerator.Reset
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.InvalidOperationException
  commentId: T:System.InvalidOperationException
  parent: System
  isExternal: false
  name: InvalidOperationException
  nameWithType: InvalidOperationException
  fullName: System.InvalidOperationException
