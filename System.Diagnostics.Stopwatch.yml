### YamlMime:ManagedReference
items:
- uid: System.Diagnostics.Stopwatch
  commentId: T:System.Diagnostics.Stopwatch
  id: Stopwatch
  parent: System.Diagnostics
  children:
  - System.Diagnostics.Stopwatch.#ctor
  - System.Diagnostics.Stopwatch.Elapsed
  - System.Diagnostics.Stopwatch.ElapsedMilliseconds
  - System.Diagnostics.Stopwatch.ElapsedTicks
  - System.Diagnostics.Stopwatch.Frequency
  - System.Diagnostics.Stopwatch.GetTimestamp
  - System.Diagnostics.Stopwatch.IsHighResolution
  - System.Diagnostics.Stopwatch.IsRunning
  - System.Diagnostics.Stopwatch.Reset
  - System.Diagnostics.Stopwatch.Restart
  - System.Diagnostics.Stopwatch.Start
  - System.Diagnostics.Stopwatch.StartNew
  - System.Diagnostics.Stopwatch.Stop
  langs:
  - csharp
  - vb
  name: Stopwatch
  nameWithType: Stopwatch
  fullName: System.Diagnostics.Stopwatch
  type: Class
  source:
    remote:
      path: src/System.Runtime.Extensions/src/System/Diagnostics/Stopwatch.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: Stopwatch
    path: src/System.Runtime.Extensions/src/System/Diagnostics/Stopwatch.cs
    startLine: 10
  assemblies:
  - System.Runtime.Extensions
  namespace: System.Diagnostics
  summary: "\n<p>Provides a set of methods and properties that you can use to accurately measure elapsed time.</p>\n"
  syntax:
    content: public class Stopwatch
    content.vb: Public Class Stopwatch
  seealso:
  - linkId: System.TimeSpan
    commentId: T:System.TimeSpan
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: System.Diagnostics.Stopwatch.Frequency
  commentId: F:System.Diagnostics.Stopwatch.Frequency
  id: Frequency
  parent: System.Diagnostics.Stopwatch
  langs:
  - csharp
  - vb
  name: Frequency
  nameWithType: Stopwatch.Frequency
  fullName: System.Diagnostics.Stopwatch.Frequency
  type: Field
  source:
    remote:
      path: src/System.Runtime.Extensions/src/System/Diagnostics/Stopwatch.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: Frequency
    path: src/System.Runtime.Extensions/src/System/Diagnostics/Stopwatch.cs
    startLine: 23
  assemblies:
  - System.Runtime.Extensions
  namespace: System.Diagnostics
  summary: "\n<p>Gets the frequency of the timer as the number of ticks per second. This field is read-only.</p>\n"
  syntax:
    content: public static readonly long Frequency
    content.vb: Public Shared ReadOnly Frequency As Long
    return:
      type: System.Int64
  seealso:
  - linkId: System.Diagnostics.Stopwatch.IsHighResolution
    commentId: F:System.Diagnostics.Stopwatch.IsHighResolution
  modifiers.csharp:
  - public
  - static
  - readonly
  modifiers.vb:
  - Public
  - Shared
  - ReadOnly
- uid: System.Diagnostics.Stopwatch.IsHighResolution
  commentId: F:System.Diagnostics.Stopwatch.IsHighResolution
  id: IsHighResolution
  parent: System.Diagnostics.Stopwatch
  langs:
  - csharp
  - vb
  name: IsHighResolution
  nameWithType: Stopwatch.IsHighResolution
  fullName: System.Diagnostics.Stopwatch.IsHighResolution
  type: Field
  source:
    remote:
      path: src/System.Runtime.Extensions/src/System/Diagnostics/Stopwatch.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: IsHighResolution
    path: src/System.Runtime.Extensions/src/System/Diagnostics/Stopwatch.cs
    startLine: 24
  assemblies:
  - System.Runtime.Extensions
  namespace: System.Diagnostics
  summary: "\n<p>Indicates whether the timer is based on a high-resolution performance counter. This field is read-only.</p>\n"
  syntax:
    content: public static readonly bool IsHighResolution
    content.vb: Public Shared ReadOnly IsHighResolution As Boolean
    return:
      type: System.Boolean
  seealso:
  - linkId: System.Diagnostics.Stopwatch.Frequency
    commentId: F:System.Diagnostics.Stopwatch.Frequency
  modifiers.csharp:
  - public
  - static
  - readonly
  modifiers.vb:
  - Public
  - Shared
  - ReadOnly
- uid: System.Diagnostics.Stopwatch.#ctor
  commentId: M:System.Diagnostics.Stopwatch.#ctor
  id: '#ctor'
  parent: System.Diagnostics.Stopwatch
  langs:
  - csharp
  - vb
  name: Stopwatch()
  nameWithType: Stopwatch.Stopwatch()
  fullName: System.Diagnostics.Stopwatch.Stopwatch()
  type: Constructor
  source:
    remote:
      path: src/System.Runtime.Extensions/src/System/Diagnostics/Stopwatch.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: .ctor
    path: src/System.Runtime.Extensions/src/System/Diagnostics/Stopwatch.cs
    startLine: 49
  assemblies:
  - System.Runtime.Extensions
  namespace: System.Diagnostics
  summary: "\n<p>Initializes a new instance of the <xref href=\"System.Diagnostics.Stopwatch\" data-throw-if-not-resolved=\"false\"></xref> class.</p>\n"
  syntax:
    content: public Stopwatch()
    content.vb: Public Sub New
  seealso:
  - linkId: System.Diagnostics.Stopwatch.StartNew
    commentId: M:System.Diagnostics.Stopwatch.StartNew
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: System.Diagnostics.Stopwatch.Elapsed
  commentId: P:System.Diagnostics.Stopwatch.Elapsed
  id: Elapsed
  parent: System.Diagnostics.Stopwatch
  langs:
  - csharp
  - vb
  name: Elapsed
  nameWithType: Stopwatch.Elapsed
  fullName: System.Diagnostics.Stopwatch.Elapsed
  type: Property
  source:
    remote:
      path: src/System.Runtime.Extensions/src/System/Diagnostics/Stopwatch.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: Elapsed
    path: src/System.Runtime.Extensions/src/System/Diagnostics/Stopwatch.cs
    startLine: 114
  assemblies:
  - System.Runtime.Extensions
  namespace: System.Diagnostics
  summary: "\n<p>Gets the total elapsed time measured by the current instance.</p>\n"
  syntax:
    content: public TimeSpan Elapsed { get; }
    content.vb: Public ReadOnly Property Elapsed As TimeSpan
    parameters: []
    return:
      type: System.TimeSpan
      description: "\n<p>A read-only <xref href=\"System.TimeSpan\" data-throw-if-not-resolved=\"false\"></xref> representing the total elapsed time measured by the current instance.</p>\n"
  seealso:
  - linkId: System.TimeSpan
    commentId: T:System.TimeSpan
  - linkId: System.Diagnostics.Stopwatch.ElapsedMilliseconds
    commentId: P:System.Diagnostics.Stopwatch.ElapsedMilliseconds
  - linkId: System.Diagnostics.Stopwatch.ElapsedTicks
    commentId: P:System.Diagnostics.Stopwatch.ElapsedTicks
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: System.Diagnostics.Stopwatch.ElapsedMilliseconds
  commentId: P:System.Diagnostics.Stopwatch.ElapsedMilliseconds
  id: ElapsedMilliseconds
  parent: System.Diagnostics.Stopwatch
  langs:
  - csharp
  - vb
  name: ElapsedMilliseconds
  nameWithType: Stopwatch.ElapsedMilliseconds
  fullName: System.Diagnostics.Stopwatch.ElapsedMilliseconds
  type: Property
  source:
    remote:
      path: src/System.Runtime.Extensions/src/System/Diagnostics/Stopwatch.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: ElapsedMilliseconds
    path: src/System.Runtime.Extensions/src/System/Diagnostics/Stopwatch.cs
    startLine: 119
  assemblies:
  - System.Runtime.Extensions
  namespace: System.Diagnostics
  summary: "\n<p>Gets the total elapsed time measured by the current instance, in milliseconds.</p>\n"
  syntax:
    content: public long ElapsedMilliseconds { get; }
    content.vb: Public ReadOnly Property ElapsedMilliseconds As Long
    parameters: []
    return:
      type: System.Int64
      description: "\n<p>A read-only long integer representing the total number of milliseconds measured by the current instance.</p>\n"
  seealso:
  - linkId: System.Diagnostics.Stopwatch.Elapsed
    commentId: P:System.Diagnostics.Stopwatch.Elapsed
  - linkId: System.Diagnostics.Stopwatch.ElapsedTicks
    commentId: P:System.Diagnostics.Stopwatch.ElapsedTicks
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: System.Diagnostics.Stopwatch.ElapsedTicks
  commentId: P:System.Diagnostics.Stopwatch.ElapsedTicks
  id: ElapsedTicks
  parent: System.Diagnostics.Stopwatch
  langs:
  - csharp
  - vb
  name: ElapsedTicks
  nameWithType: Stopwatch.ElapsedTicks
  fullName: System.Diagnostics.Stopwatch.ElapsedTicks
  type: Property
  source:
    remote:
      path: src/System.Runtime.Extensions/src/System/Diagnostics/Stopwatch.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: ElapsedTicks
    path: src/System.Runtime.Extensions/src/System/Diagnostics/Stopwatch.cs
    startLine: 124
  assemblies:
  - System.Runtime.Extensions
  namespace: System.Diagnostics
  summary: "\n<p>Gets the total elapsed time measured by the current instance, in timer ticks.</p>\n"
  syntax:
    content: public long ElapsedTicks { get; }
    content.vb: Public ReadOnly Property ElapsedTicks As Long
    parameters: []
    return:
      type: System.Int64
      description: "\n<p>A read-only long integer representing the total number of timer ticks measured by the current instance.</p>\n"
  seealso:
  - linkId: System.Diagnostics.Stopwatch.Elapsed
    commentId: P:System.Diagnostics.Stopwatch.Elapsed
  - linkId: System.Diagnostics.Stopwatch.ElapsedMilliseconds
    commentId: P:System.Diagnostics.Stopwatch.ElapsedMilliseconds
  - linkId: System.Diagnostics.Stopwatch.Frequency
    commentId: F:System.Diagnostics.Stopwatch.Frequency
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: System.Diagnostics.Stopwatch.IsRunning
  commentId: P:System.Diagnostics.Stopwatch.IsRunning
  id: IsRunning
  parent: System.Diagnostics.Stopwatch
  langs:
  - csharp
  - vb
  name: IsRunning
  nameWithType: Stopwatch.IsRunning
  fullName: System.Diagnostics.Stopwatch.IsRunning
  type: Property
  source:
    remote:
      path: src/System.Runtime.Extensions/src/System/Diagnostics/Stopwatch.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: IsRunning
    path: src/System.Runtime.Extensions/src/System/Diagnostics/Stopwatch.cs
    startLine: 109
  assemblies:
  - System.Runtime.Extensions
  namespace: System.Diagnostics
  summary: "\n<p>Gets a value indicating whether the <xref href=\"System.Diagnostics.Stopwatch\" data-throw-if-not-resolved=\"false\"></xref> timer is running.</p>\n"
  syntax:
    content: public bool IsRunning { get; }
    content.vb: Public ReadOnly Property IsRunning As Boolean
    parameters: []
    return:
      type: System.Boolean
      description: "\n<p>\n<strong>true</strong> if the <xref href=\"System.Diagnostics.Stopwatch\" data-throw-if-not-resolved=\"false\"></xref> instance is currently running and measuring elapsed time for an interval; otherwise, <strong>false</strong>.</p>\n"
  seealso:
  - linkId: System.Diagnostics.Stopwatch.StartNew
    commentId: M:System.Diagnostics.Stopwatch.StartNew
  - linkId: System.Diagnostics.Stopwatch.Stop
    commentId: M:System.Diagnostics.Stopwatch.Stop
  - linkId: System.Diagnostics.Stopwatch.Start
    commentId: M:System.Diagnostics.Stopwatch.Start
  - linkId: System.Diagnostics.Stopwatch.Reset
    commentId: M:System.Diagnostics.Stopwatch.Reset
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: System.Diagnostics.Stopwatch.GetTimestamp
  commentId: M:System.Diagnostics.Stopwatch.GetTimestamp
  id: GetTimestamp
  parent: System.Diagnostics.Stopwatch
  langs:
  - csharp
  - vb
  name: GetTimestamp()
  nameWithType: Stopwatch.GetTimestamp()
  fullName: System.Diagnostics.Stopwatch.GetTimestamp()
  type: Method
  source:
    remote:
      path: src/System.Runtime.Extensions/src/System/Diagnostics/Stopwatch.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: GetTimestamp
    path: src/System.Runtime.Extensions/src/System/Diagnostics/Stopwatch.cs
    startLine: 129
  assemblies:
  - System.Runtime.Extensions
  namespace: System.Diagnostics
  summary: "\n<p>Gets the current number of ticks in the timer mechanism.</p>\n"
  syntax:
    content: public static long GetTimestamp()
    content.vb: Public Shared Function GetTimestamp As Long
    return:
      type: System.Int64
      description: "\n<p>A long integer representing the tick counter value of the underlying timer mechanism.</p>\n"
  seealso:
  - linkId: System.Diagnostics.Stopwatch.IsHighResolution
    commentId: F:System.Diagnostics.Stopwatch.IsHighResolution
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: System.Diagnostics.Stopwatch.Reset
  commentId: M:System.Diagnostics.Stopwatch.Reset
  id: Reset
  parent: System.Diagnostics.Stopwatch
  langs:
  - csharp
  - vb
  name: Reset()
  nameWithType: Stopwatch.Reset()
  fullName: System.Diagnostics.Stopwatch.Reset()
  type: Method
  source:
    remote:
      path: src/System.Runtime.Extensions/src/System/Diagnostics/Stopwatch.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: Reset
    path: src/System.Runtime.Extensions/src/System/Diagnostics/Stopwatch.cs
    startLine: 94
  assemblies:
  - System.Runtime.Extensions
  namespace: System.Diagnostics
  summary: "\n<p>Stops time interval measurement and resets the elapsed time to zero.</p>\n"
  syntax:
    content: public void Reset()
    content.vb: Public Sub Reset
  seealso:
  - linkId: System.Diagnostics.Stopwatch.StartNew
    commentId: M:System.Diagnostics.Stopwatch.StartNew
  - linkId: System.Diagnostics.Stopwatch.Stop
    commentId: M:System.Diagnostics.Stopwatch.Stop
  - linkId: System.Diagnostics.Stopwatch.IsRunning
    commentId: P:System.Diagnostics.Stopwatch.IsRunning
  - linkId: System.Diagnostics.Stopwatch.Start
    commentId: M:System.Diagnostics.Stopwatch.Start
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: System.Diagnostics.Stopwatch.Restart
  commentId: M:System.Diagnostics.Stopwatch.Restart
  id: Restart
  parent: System.Diagnostics.Stopwatch
  langs:
  - csharp
  - vb
  name: Restart()
  nameWithType: Stopwatch.Restart()
  fullName: System.Diagnostics.Stopwatch.Restart()
  type: Method
  source:
    remote:
      path: src/System.Runtime.Extensions/src/System/Diagnostics/Stopwatch.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: Restart
    path: src/System.Runtime.Extensions/src/System/Diagnostics/Stopwatch.cs
    startLine: 102
  assemblies:
  - System.Runtime.Extensions
  namespace: System.Diagnostics
  summary: "\n<p>Stops time interval measurement, resets the elapsed time to zero, and starts measuring elapsed time.</p>\n"
  syntax:
    content: public void Restart()
    content.vb: Public Sub Restart
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: System.Diagnostics.Stopwatch.Start
  commentId: M:System.Diagnostics.Stopwatch.Start
  id: Start
  parent: System.Diagnostics.Stopwatch
  langs:
  - csharp
  - vb
  name: Start()
  nameWithType: Stopwatch.Start()
  fullName: System.Diagnostics.Stopwatch.Start()
  type: Method
  source:
    remote:
      path: src/System.Runtime.Extensions/src/System/Diagnostics/Stopwatch.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: Start
    path: src/System.Runtime.Extensions/src/System/Diagnostics/Stopwatch.cs
    startLine: 54
  assemblies:
  - System.Runtime.Extensions
  namespace: System.Diagnostics
  summary: "\n<p>Starts, or resumes, measuring elapsed time for an interval.</p>\n"
  syntax:
    content: public void Start()
    content.vb: Public Sub Start
  seealso:
  - linkId: System.Diagnostics.Stopwatch.StartNew
    commentId: M:System.Diagnostics.Stopwatch.StartNew
  - linkId: System.Diagnostics.Stopwatch.Stop
    commentId: M:System.Diagnostics.Stopwatch.Stop
  - linkId: System.Diagnostics.Stopwatch.IsRunning
    commentId: P:System.Diagnostics.Stopwatch.IsRunning
  - linkId: System.Diagnostics.Stopwatch.Reset
    commentId: M:System.Diagnostics.Stopwatch.Reset
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: System.Diagnostics.Stopwatch.StartNew
  commentId: M:System.Diagnostics.Stopwatch.StartNew
  id: StartNew
  parent: System.Diagnostics.Stopwatch
  langs:
  - csharp
  - vb
  name: StartNew()
  nameWithType: Stopwatch.StartNew()
  fullName: System.Diagnostics.Stopwatch.StartNew()
  type: Method
  source:
    remote:
      path: src/System.Runtime.Extensions/src/System/Diagnostics/Stopwatch.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: StartNew
    path: src/System.Runtime.Extensions/src/System/Diagnostics/Stopwatch.cs
    startLine: 64
  assemblies:
  - System.Runtime.Extensions
  namespace: System.Diagnostics
  summary: "\n<p>Initializes a new <xref href=\"System.Diagnostics.Stopwatch\" data-throw-if-not-resolved=\"false\"></xref> instance, sets the elapsed time property to zero, and starts measuring elapsed time.</p>\n"
  syntax:
    content: public static Stopwatch StartNew()
    content.vb: Public Shared Function StartNew As Stopwatch
    return:
      type: System.Diagnostics.Stopwatch
      description: "\n<p>A <xref href=\"System.Diagnostics.Stopwatch\" data-throw-if-not-resolved=\"false\"></xref> that has just begun measuring elapsed time.</p>\n"
  seealso:
  - linkId: System.Diagnostics.Stopwatch.Start
    commentId: M:System.Diagnostics.Stopwatch.Start
  - linkId: System.Diagnostics.Stopwatch.Stop
    commentId: M:System.Diagnostics.Stopwatch.Stop
  - linkId: System.Diagnostics.Stopwatch.IsRunning
    commentId: P:System.Diagnostics.Stopwatch.IsRunning
  - linkId: System.Diagnostics.Stopwatch.Reset
    commentId: M:System.Diagnostics.Stopwatch.Reset
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: System.Diagnostics.Stopwatch.Stop
  commentId: M:System.Diagnostics.Stopwatch.Stop
  id: Stop
  parent: System.Diagnostics.Stopwatch
  langs:
  - csharp
  - vb
  name: Stop()
  nameWithType: Stopwatch.Stop()
  fullName: System.Diagnostics.Stopwatch.Stop()
  type: Method
  source:
    remote:
      path: src/System.Runtime.Extensions/src/System/Diagnostics/Stopwatch.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: Stop
    path: src/System.Runtime.Extensions/src/System/Diagnostics/Stopwatch.cs
    startLine: 71
  assemblies:
  - System.Runtime.Extensions
  namespace: System.Diagnostics
  summary: "\n<p>Stops measuring elapsed time for an interval.</p>\n"
  syntax:
    content: public void Stop()
    content.vb: Public Sub Stop
  seealso:
  - linkId: System.Diagnostics.Stopwatch.StartNew
    commentId: M:System.Diagnostics.Stopwatch.StartNew
  - linkId: System.Diagnostics.Stopwatch.IsRunning
    commentId: P:System.Diagnostics.Stopwatch.IsRunning
  - linkId: System.Diagnostics.Stopwatch.Start
    commentId: M:System.Diagnostics.Stopwatch.Start
  - linkId: System.Diagnostics.Stopwatch.Reset
    commentId: M:System.Diagnostics.Stopwatch.Reset
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
references:
- uid: System.Diagnostics
  commentId: N:System.Diagnostics
  isExternal: false
  name: System.Diagnostics
  nameWithType: System.Diagnostics
  fullName: System.Diagnostics
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: false
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: System.Int64
  commentId: T:System.Int64
  parent: System
  isExternal: false
  name: Int64
  nameWithType: Int64
  fullName: System.Int64
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: false
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.TimeSpan
  commentId: T:System.TimeSpan
  parent: System
  isExternal: false
  name: TimeSpan
  nameWithType: TimeSpan
  fullName: System.TimeSpan
- uid: System.Diagnostics.Stopwatch
  commentId: T:System.Diagnostics.Stopwatch
  parent: System.Diagnostics
  isExternal: false
  name: Stopwatch
  nameWithType: Stopwatch
  fullName: System.Diagnostics.Stopwatch
