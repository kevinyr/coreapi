### YamlMime:ManagedReference
items:
- uid: Windows.UI.Xaml.Duration
  commentId: T:Windows.UI.Xaml.Duration
  id: Duration
  parent: Windows.UI.Xaml
  children:
  - Windows.UI.Xaml.Duration.#ctor(System.TimeSpan)
  - Windows.UI.Xaml.Duration.Add(Windows.UI.Xaml.Duration)
  - Windows.UI.Xaml.Duration.Automatic
  - Windows.UI.Xaml.Duration.Compare(Windows.UI.Xaml.Duration,Windows.UI.Xaml.Duration)
  - Windows.UI.Xaml.Duration.Equals(System.Object)
  - Windows.UI.Xaml.Duration.Equals(Windows.UI.Xaml.Duration)
  - Windows.UI.Xaml.Duration.Equals(Windows.UI.Xaml.Duration,Windows.UI.Xaml.Duration)
  - Windows.UI.Xaml.Duration.Forever
  - Windows.UI.Xaml.Duration.GetHashCode
  - Windows.UI.Xaml.Duration.HasTimeSpan
  - Windows.UI.Xaml.Duration.op_Addition(Windows.UI.Xaml.Duration,Windows.UI.Xaml.Duration)
  - Windows.UI.Xaml.Duration.op_Equality(Windows.UI.Xaml.Duration,Windows.UI.Xaml.Duration)
  - Windows.UI.Xaml.Duration.op_GreaterThan(Windows.UI.Xaml.Duration,Windows.UI.Xaml.Duration)
  - Windows.UI.Xaml.Duration.op_GreaterThanOrEqual(Windows.UI.Xaml.Duration,Windows.UI.Xaml.Duration)
  - Windows.UI.Xaml.Duration.op_Implicit(System.TimeSpan)~Windows.UI.Xaml.Duration
  - Windows.UI.Xaml.Duration.op_Inequality(Windows.UI.Xaml.Duration,Windows.UI.Xaml.Duration)
  - Windows.UI.Xaml.Duration.op_LessThan(Windows.UI.Xaml.Duration,Windows.UI.Xaml.Duration)
  - Windows.UI.Xaml.Duration.op_LessThanOrEqual(Windows.UI.Xaml.Duration,Windows.UI.Xaml.Duration)
  - Windows.UI.Xaml.Duration.op_Subtraction(Windows.UI.Xaml.Duration,Windows.UI.Xaml.Duration)
  - Windows.UI.Xaml.Duration.op_UnaryPlus(Windows.UI.Xaml.Duration)
  - Windows.UI.Xaml.Duration.Subtract(Windows.UI.Xaml.Duration)
  - Windows.UI.Xaml.Duration.TimeSpan
  - Windows.UI.Xaml.Duration.ToString
  langs:
  - csharp
  - vb
  name: Duration
  nameWithType: Duration
  fullName: Windows.UI.Xaml.Duration
  type: Struct
  source:
    remote:
      path: src/System.Runtime.WindowsRuntime.UI.Xaml/ref/System.Runtime.WindowsRuntime.UI.Xaml.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: Duration
    path: src/System.Runtime.WindowsRuntime.UI.Xaml/ref/System.Runtime.WindowsRuntime.UI.Xaml.cs
    startLine: 30
  assemblies:
  - System.Runtime.WindowsRuntime.UI.Xaml
  namespace: Windows.UI.Xaml
  summary: Represents the duration of time that a Timeline is active, or more generally represents a duration of time that also supports two special values Automatic and Forever.
  syntax:
    content: >-
      [SecurityCritical]

      [StructLayout(LayoutKind.Sequential)]

      public struct Duration
    content.vb: >-
      <SecurityCritical>

      <StructLayout(LayoutKind.Sequential)>

      Public Structure Duration
  inheritedMembers:
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetType
  attributes:
  - type: System.Security.SecurityCriticalAttribute
    ctor: System.Security.SecurityCriticalAttribute.#ctor
    arguments: []
  - type: System.Runtime.InteropServices.StructLayoutAttribute
    ctor: System.Runtime.InteropServices.StructLayoutAttribute.#ctor(System.Runtime.InteropServices.LayoutKind)
    arguments:
    - type: System.Runtime.InteropServices.LayoutKind
      value: 0
  modifiers.csharp:
  - public
  - struct
  modifiers.vb:
  - Public
  - Structure
- uid: Windows.UI.Xaml.Duration.#ctor(System.TimeSpan)
  commentId: M:Windows.UI.Xaml.Duration.#ctor(System.TimeSpan)
  id: '#ctor(System.TimeSpan)'
  parent: Windows.UI.Xaml.Duration
  langs:
  - csharp
  - vb
  name: Duration(TimeSpan)
  nameWithType: Duration.Duration(TimeSpan)
  fullName: Windows.UI.Xaml.Duration.Duration(System.TimeSpan)
  type: Constructor
  source:
    remote:
      path: src/System.Runtime.WindowsRuntime.UI.Xaml/ref/System.Runtime.WindowsRuntime.UI.Xaml.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: .ctor
    path: src/System.Runtime.WindowsRuntime.UI.Xaml/ref/System.Runtime.WindowsRuntime.UI.Xaml.cs
    startLine: 34
  assemblies:
  - System.Runtime.WindowsRuntime.UI.Xaml
  namespace: Windows.UI.Xaml
  summary: Initializes a new instance of the Duration structure with the supplied TimeSpan value.
  syntax:
    content: public Duration(TimeSpan timeSpan)
    content.vb: Public Sub New(timeSpan As TimeSpan)
    parameters:
    - id: timeSpan
      type: System.TimeSpan
      description: Represents the initial time interval of this duration.
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Windows.UI.Xaml.Duration.Automatic
  commentId: P:Windows.UI.Xaml.Duration.Automatic
  id: Automatic
  parent: Windows.UI.Xaml.Duration
  langs:
  - csharp
  - vb
  name: Automatic
  nameWithType: Duration.Automatic
  fullName: Windows.UI.Xaml.Duration.Automatic
  type: Property
  source:
    remote:
      path: src/System.Runtime.WindowsRuntime.UI.Xaml/ref/System.Runtime.WindowsRuntime.UI.Xaml.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: Automatic
    path: src/System.Runtime.WindowsRuntime.UI.Xaml/ref/System.Runtime.WindowsRuntime.UI.Xaml.cs
    startLine: 35
  assemblies:
  - System.Runtime.WindowsRuntime.UI.Xaml
  namespace: Windows.UI.Xaml
  summary: Gets a Duration value that is automatically determined.
  syntax:
    content: public static Duration Automatic { get; }
    content.vb: Public Shared ReadOnly Property Automatic As Duration
    parameters: []
    return:
      type: Windows.UI.Xaml.Duration
      description: A Duration initialized to an automatic value.
  modifiers.csharp:
  - public
  - static
  - get
  modifiers.vb:
  - Public
  - Shared
  - ReadOnly
- uid: Windows.UI.Xaml.Duration.Forever
  commentId: P:Windows.UI.Xaml.Duration.Forever
  id: Forever
  parent: Windows.UI.Xaml.Duration
  langs:
  - csharp
  - vb
  name: Forever
  nameWithType: Duration.Forever
  fullName: Windows.UI.Xaml.Duration.Forever
  type: Property
  source:
    remote:
      path: src/System.Runtime.WindowsRuntime.UI.Xaml/ref/System.Runtime.WindowsRuntime.UI.Xaml.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: Forever
    path: src/System.Runtime.WindowsRuntime.UI.Xaml/ref/System.Runtime.WindowsRuntime.UI.Xaml.cs
    startLine: 36
  assemblies:
  - System.Runtime.WindowsRuntime.UI.Xaml
  namespace: Windows.UI.Xaml
  summary: Gets a Duration value that represents an infinite interval.
  syntax:
    content: public static Duration Forever { get; }
    content.vb: Public Shared ReadOnly Property Forever As Duration
    parameters: []
    return:
      type: Windows.UI.Xaml.Duration
      description: A Duration initialized to a forever value.
  modifiers.csharp:
  - public
  - static
  - get
  modifiers.vb:
  - Public
  - Shared
  - ReadOnly
- uid: Windows.UI.Xaml.Duration.HasTimeSpan
  commentId: P:Windows.UI.Xaml.Duration.HasTimeSpan
  id: HasTimeSpan
  parent: Windows.UI.Xaml.Duration
  langs:
  - csharp
  - vb
  name: HasTimeSpan
  nameWithType: Duration.HasTimeSpan
  fullName: Windows.UI.Xaml.Duration.HasTimeSpan
  type: Property
  source:
    remote:
      path: src/System.Runtime.WindowsRuntime.UI.Xaml/ref/System.Runtime.WindowsRuntime.UI.Xaml.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: HasTimeSpan
    path: src/System.Runtime.WindowsRuntime.UI.Xaml/ref/System.Runtime.WindowsRuntime.UI.Xaml.cs
    startLine: 37
  assemblies:
  - System.Runtime.WindowsRuntime.UI.Xaml
  namespace: Windows.UI.Xaml
  summary: Gets a value that indicates if this Duration represents a TimeSpan value.
  syntax:
    content: public bool HasTimeSpan { get; }
    content.vb: Public ReadOnly Property HasTimeSpan As Boolean
    parameters: []
    return:
      type: System.Boolean
      description: true if this Duration is a TimeSpan value; otherwise, false.
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Windows.UI.Xaml.Duration.TimeSpan
  commentId: P:Windows.UI.Xaml.Duration.TimeSpan
  id: TimeSpan
  parent: Windows.UI.Xaml.Duration
  langs:
  - csharp
  - vb
  name: TimeSpan
  nameWithType: Duration.TimeSpan
  fullName: Windows.UI.Xaml.Duration.TimeSpan
  type: Property
  source:
    remote:
      path: src/System.Runtime.WindowsRuntime.UI.Xaml/ref/System.Runtime.WindowsRuntime.UI.Xaml.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: TimeSpan
    path: src/System.Runtime.WindowsRuntime.UI.Xaml/ref/System.Runtime.WindowsRuntime.UI.Xaml.cs
    startLine: 38
  assemblies:
  - System.Runtime.WindowsRuntime.UI.Xaml
  namespace: Windows.UI.Xaml
  summary: Gets the TimeSpan value that this Duration represents.
  syntax:
    content: public TimeSpan TimeSpan { get; }
    content.vb: Public ReadOnly Property TimeSpan As TimeSpan
    parameters: []
    return:
      type: System.TimeSpan
      description: "The TimeSpan value that this Duration represents. Microsoft .NET uses System.TimeSpan, VisualÂ C++ component extensions (C++/CX) uses Windows::Foundation::TimeSpan, that structure projects differently per language."
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Windows.UI.Xaml.Duration.Add(Windows.UI.Xaml.Duration)
  commentId: M:Windows.UI.Xaml.Duration.Add(Windows.UI.Xaml.Duration)
  id: Add(Windows.UI.Xaml.Duration)
  parent: Windows.UI.Xaml.Duration
  langs:
  - csharp
  - vb
  name: Add(Duration)
  nameWithType: Duration.Add(Duration)
  fullName: Windows.UI.Xaml.Duration.Add(Windows.UI.Xaml.Duration)
  type: Method
  source:
    remote:
      path: src/System.Runtime.WindowsRuntime.UI.Xaml/ref/System.Runtime.WindowsRuntime.UI.Xaml.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: Add
    path: src/System.Runtime.WindowsRuntime.UI.Xaml/ref/System.Runtime.WindowsRuntime.UI.Xaml.cs
    startLine: 39
  assemblies:
  - System.Runtime.WindowsRuntime.UI.Xaml
  namespace: Windows.UI.Xaml
  summary: Adds the value of the specified Duration to this Duration.
  syntax:
    content: public Duration Add(Duration duration)
    content.vb: Public Function Add(duration As Duration) As Duration
    parameters:
    - id: duration
      type: Windows.UI.Xaml.Duration
      description: An instance of Duration that represents the value of the current instance plus duration.
    return:
      type: Windows.UI.Xaml.Duration
      description: If each involved Duration has values, a Duration that represents the combined values. Otherwise this method returns null.
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Windows.UI.Xaml.Duration.Compare(Windows.UI.Xaml.Duration,Windows.UI.Xaml.Duration)
  commentId: M:Windows.UI.Xaml.Duration.Compare(Windows.UI.Xaml.Duration,Windows.UI.Xaml.Duration)
  id: Compare(Windows.UI.Xaml.Duration,Windows.UI.Xaml.Duration)
  parent: Windows.UI.Xaml.Duration
  langs:
  - csharp
  - vb
  name: Compare(Duration, Duration)
  nameWithType: Duration.Compare(Duration, Duration)
  fullName: Windows.UI.Xaml.Duration.Compare(Windows.UI.Xaml.Duration, Windows.UI.Xaml.Duration)
  type: Method
  source:
    remote:
      path: src/System.Runtime.WindowsRuntime.UI.Xaml/ref/System.Runtime.WindowsRuntime.UI.Xaml.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: Compare
    path: src/System.Runtime.WindowsRuntime.UI.Xaml/ref/System.Runtime.WindowsRuntime.UI.Xaml.cs
    startLine: 40
  assemblies:
  - System.Runtime.WindowsRuntime.UI.Xaml
  namespace: Windows.UI.Xaml
  summary: Compares one Duration value to another.
  syntax:
    content: public static int Compare(Duration t1, Duration t2)
    content.vb: Public Shared Function Compare(t1 As Duration, t2 As Duration) As Integer
    parameters:
    - id: t1
      type: Windows.UI.Xaml.Duration
      description: The first instance of Duration to compare.
    - id: t2
      type: Windows.UI.Xaml.Duration
      description: The second instance of Duration to compare.
    return:
      type: System.Int32
      description: If t1 is less than t2, a negative value that represents the difference. If t1 is equal to t2, a value of 0. If t1 is greater than t2, a positive value that represents the difference.
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Windows.UI.Xaml.Duration.Equals(System.Object)
  commentId: M:Windows.UI.Xaml.Duration.Equals(System.Object)
  id: Equals(System.Object)
  parent: Windows.UI.Xaml.Duration
  langs:
  - csharp
  - vb
  name: Equals(Object)
  nameWithType: Duration.Equals(Object)
  fullName: Windows.UI.Xaml.Duration.Equals(System.Object)
  type: Method
  source:
    remote:
      path: src/System.Runtime.WindowsRuntime.UI.Xaml/ref/System.Runtime.WindowsRuntime.UI.Xaml.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: Equals
    path: src/System.Runtime.WindowsRuntime.UI.Xaml/ref/System.Runtime.WindowsRuntime.UI.Xaml.cs
    startLine: 41
  assemblies:
  - System.Runtime.WindowsRuntime.UI.Xaml
  namespace: Windows.UI.Xaml
  summary: Determines whether the specified object is equal to a Duration.
  syntax:
    content: >-
      [SecuritySafeCritical]

      public override bool Equals(object value)
    content.vb: >-
      <SecuritySafeCritical>

      Public Overrides Function Equals(value As Object) As Boolean
    parameters:
    - id: value
      type: System.Object
      description: Object to check for equality.
    return:
      type: System.Boolean
      description: true if value is equal to this Duration; otherwise, false.
  overridden: System.ValueType.Equals(System.Object)
  attributes:
  - type: System.Security.SecuritySafeCriticalAttribute
    ctor: System.Security.SecuritySafeCriticalAttribute.#ctor
    arguments: []
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
- uid: Windows.UI.Xaml.Duration.Equals(Windows.UI.Xaml.Duration)
  commentId: M:Windows.UI.Xaml.Duration.Equals(Windows.UI.Xaml.Duration)
  id: Equals(Windows.UI.Xaml.Duration)
  parent: Windows.UI.Xaml.Duration
  langs:
  - csharp
  - vb
  name: Equals(Duration)
  nameWithType: Duration.Equals(Duration)
  fullName: Windows.UI.Xaml.Duration.Equals(Windows.UI.Xaml.Duration)
  type: Method
  source:
    remote:
      path: src/System.Runtime.WindowsRuntime.UI.Xaml/ref/System.Runtime.WindowsRuntime.UI.Xaml.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: Equals
    path: src/System.Runtime.WindowsRuntime.UI.Xaml/ref/System.Runtime.WindowsRuntime.UI.Xaml.cs
    startLine: 43
  assemblies:
  - System.Runtime.WindowsRuntime.UI.Xaml
  namespace: Windows.UI.Xaml
  summary: Compares two Duration structures for equality.
  syntax:
    content: public bool Equals(Duration duration)
    content.vb: Public Function Equals(duration As Duration) As Boolean
    parameters:
    - id: duration
      type: Windows.UI.Xaml.Duration
      description: The Duration structure to compare to this Duration.
    return:
      type: System.Boolean
      description: true if both Duration structures contain the same values; otherwise, false.
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Windows.UI.Xaml.Duration.Equals(Windows.UI.Xaml.Duration,Windows.UI.Xaml.Duration)
  commentId: M:Windows.UI.Xaml.Duration.Equals(Windows.UI.Xaml.Duration,Windows.UI.Xaml.Duration)
  id: Equals(Windows.UI.Xaml.Duration,Windows.UI.Xaml.Duration)
  parent: Windows.UI.Xaml.Duration
  langs:
  - csharp
  - vb
  name: Equals(Duration, Duration)
  nameWithType: Duration.Equals(Duration, Duration)
  fullName: Windows.UI.Xaml.Duration.Equals(Windows.UI.Xaml.Duration, Windows.UI.Xaml.Duration)
  type: Method
  source:
    remote:
      path: src/System.Runtime.WindowsRuntime.UI.Xaml/ref/System.Runtime.WindowsRuntime.UI.Xaml.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: Equals
    path: src/System.Runtime.WindowsRuntime.UI.Xaml/ref/System.Runtime.WindowsRuntime.UI.Xaml.cs
    startLine: 44
  assemblies:
  - System.Runtime.WindowsRuntime.UI.Xaml
  namespace: Windows.UI.Xaml
  summary: Compares two Duration structures for equality, as a static helper method.
  syntax:
    content: public static bool Equals(Duration t1, Duration t2)
    content.vb: Public Shared Function Equals(t1 As Duration, t2 As Duration) As Boolean
    parameters:
    - id: t1
      type: Windows.UI.Xaml.Duration
      description: The first Duration structure to compare.
    - id: t2
      type: Windows.UI.Xaml.Duration
      description: The first Duration structure to compare.
    return:
      type: System.Boolean
      description: true if both Duration structures contain the same values; otherwise, false.
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Windows.UI.Xaml.Duration.GetHashCode
  commentId: M:Windows.UI.Xaml.Duration.GetHashCode
  id: GetHashCode
  parent: Windows.UI.Xaml.Duration
  langs:
  - csharp
  - vb
  name: GetHashCode()
  nameWithType: Duration.GetHashCode()
  fullName: Windows.UI.Xaml.Duration.GetHashCode()
  type: Method
  source:
    remote:
      path: src/System.Runtime.WindowsRuntime.UI.Xaml/ref/System.Runtime.WindowsRuntime.UI.Xaml.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: GetHashCode
    path: src/System.Runtime.WindowsRuntime.UI.Xaml/ref/System.Runtime.WindowsRuntime.UI.Xaml.cs
    startLine: 45
  assemblies:
  - System.Runtime.WindowsRuntime.UI.Xaml
  namespace: Windows.UI.Xaml
  syntax:
    content: >-
      [SecuritySafeCritical]

      public override int GetHashCode()
    content.vb: >-
      <SecuritySafeCritical>

      Public Overrides Function GetHashCode As Integer
    return:
      type: System.Int32
  overridden: System.ValueType.GetHashCode
  attributes:
  - type: System.Security.SecuritySafeCriticalAttribute
    ctor: System.Security.SecuritySafeCriticalAttribute.#ctor
    arguments: []
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
- uid: Windows.UI.Xaml.Duration.op_Addition(Windows.UI.Xaml.Duration,Windows.UI.Xaml.Duration)
  commentId: M:Windows.UI.Xaml.Duration.op_Addition(Windows.UI.Xaml.Duration,Windows.UI.Xaml.Duration)
  id: op_Addition(Windows.UI.Xaml.Duration,Windows.UI.Xaml.Duration)
  parent: Windows.UI.Xaml.Duration
  langs:
  - csharp
  - vb
  name: Addition(Duration, Duration)
  nameWithType: Duration.Addition(Duration, Duration)
  fullName: Windows.UI.Xaml.Duration.Addition(Windows.UI.Xaml.Duration, Windows.UI.Xaml.Duration)
  type: Operator
  source:
    remote:
      path: src/System.Runtime.WindowsRuntime.UI.Xaml/ref/System.Runtime.WindowsRuntime.UI.Xaml.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: op_Addition
    path: src/System.Runtime.WindowsRuntime.UI.Xaml/ref/System.Runtime.WindowsRuntime.UI.Xaml.cs
    startLine: 47
  assemblies:
  - System.Runtime.WindowsRuntime.UI.Xaml
  namespace: Windows.UI.Xaml
  summary: Adds the values of two Duration structures.
  syntax:
    content: public static Duration operator +(Duration t1, Duration t2)
    content.vb: Public Shared Operator +(t1 As Duration, t2 As Duration) As Duration
    parameters:
    - id: t1
      type: Windows.UI.Xaml.Duration
      description: The first Duration.
    - id: t2
      type: Windows.UI.Xaml.Duration
      description: The second Duration.
    return:
      type: Windows.UI.Xaml.Duration
      description: >-
        If both instances of Duration have TimeSpan values, this method returns the sum of those two values. If either value is set to Automatic, the method returns Automatic. If either value is set to Forever, the method returns Forever.

        If either t1 or t2 has no value, this method returns null.
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Windows.UI.Xaml.Duration.op_Equality(Windows.UI.Xaml.Duration,Windows.UI.Xaml.Duration)
  commentId: M:Windows.UI.Xaml.Duration.op_Equality(Windows.UI.Xaml.Duration,Windows.UI.Xaml.Duration)
  id: op_Equality(Windows.UI.Xaml.Duration,Windows.UI.Xaml.Duration)
  parent: Windows.UI.Xaml.Duration
  langs:
  - csharp
  - vb
  name: Equality(Duration, Duration)
  nameWithType: Duration.Equality(Duration, Duration)
  fullName: Windows.UI.Xaml.Duration.Equality(Windows.UI.Xaml.Duration, Windows.UI.Xaml.Duration)
  type: Operator
  source:
    remote:
      path: src/System.Runtime.WindowsRuntime.UI.Xaml/ref/System.Runtime.WindowsRuntime.UI.Xaml.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: op_Equality
    path: src/System.Runtime.WindowsRuntime.UI.Xaml/ref/System.Runtime.WindowsRuntime.UI.Xaml.cs
    startLine: 48
  assemblies:
  - System.Runtime.WindowsRuntime.UI.Xaml
  namespace: Windows.UI.Xaml
  summary: Compares two Duration structures for equality.
  syntax:
    content: public static bool operator ==(Duration t1, Duration t2)
    content.vb: Public Shared Operator =(t1 As Duration, t2 As Duration) As Boolean
    parameters:
    - id: t1
      type: Windows.UI.Xaml.Duration
      description: The first Duration structure to compare.
    - id: t2
      type: Windows.UI.Xaml.Duration
      description: The second Duration structure to compare.
    return:
      type: System.Boolean
      description: true if all values of t1 and t2 are equal; otherwise, false.
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Windows.UI.Xaml.Duration.op_GreaterThan(Windows.UI.Xaml.Duration,Windows.UI.Xaml.Duration)
  commentId: M:Windows.UI.Xaml.Duration.op_GreaterThan(Windows.UI.Xaml.Duration,Windows.UI.Xaml.Duration)
  id: op_GreaterThan(Windows.UI.Xaml.Duration,Windows.UI.Xaml.Duration)
  parent: Windows.UI.Xaml.Duration
  langs:
  - csharp
  - vb
  name: GreaterThan(Duration, Duration)
  nameWithType: Duration.GreaterThan(Duration, Duration)
  fullName: Windows.UI.Xaml.Duration.GreaterThan(Windows.UI.Xaml.Duration, Windows.UI.Xaml.Duration)
  type: Operator
  source:
    remote:
      path: src/System.Runtime.WindowsRuntime.UI.Xaml/ref/System.Runtime.WindowsRuntime.UI.Xaml.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: op_GreaterThan
    path: src/System.Runtime.WindowsRuntime.UI.Xaml/ref/System.Runtime.WindowsRuntime.UI.Xaml.cs
    startLine: 49
  assemblies:
  - System.Runtime.WindowsRuntime.UI.Xaml
  namespace: Windows.UI.Xaml
  summary: Determines if one Duration is greater than another.
  syntax:
    content: public static bool operator>(Duration t1, Duration t2)
    content.vb: Public Shared Operator>(t1 As Duration, t2 As Duration) As Boolean
    parameters:
    - id: t1
      type: Windows.UI.Xaml.Duration
      description: The first Duration.
    - id: t2
      type: Windows.UI.Xaml.Duration
      description: The second Duration.
    return:
      type: System.Boolean
      description: true if both t1 and t2 have values and t1 is greater than t2; otherwise, false.
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Windows.UI.Xaml.Duration.op_GreaterThanOrEqual(Windows.UI.Xaml.Duration,Windows.UI.Xaml.Duration)
  commentId: M:Windows.UI.Xaml.Duration.op_GreaterThanOrEqual(Windows.UI.Xaml.Duration,Windows.UI.Xaml.Duration)
  id: op_GreaterThanOrEqual(Windows.UI.Xaml.Duration,Windows.UI.Xaml.Duration)
  parent: Windows.UI.Xaml.Duration
  langs:
  - csharp
  - vb
  name: GreaterThanOrEqual(Duration, Duration)
  nameWithType: Duration.GreaterThanOrEqual(Duration, Duration)
  fullName: Windows.UI.Xaml.Duration.GreaterThanOrEqual(Windows.UI.Xaml.Duration, Windows.UI.Xaml.Duration)
  type: Operator
  source:
    remote:
      path: src/System.Runtime.WindowsRuntime.UI.Xaml/ref/System.Runtime.WindowsRuntime.UI.Xaml.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: op_GreaterThanOrEqual
    path: src/System.Runtime.WindowsRuntime.UI.Xaml/ref/System.Runtime.WindowsRuntime.UI.Xaml.cs
    startLine: 50
  assemblies:
  - System.Runtime.WindowsRuntime.UI.Xaml
  namespace: Windows.UI.Xaml
  summary: Determines if one Duration is greater than or equal to another.
  syntax:
    content: public static bool operator >=(Duration t1, Duration t2)
    content.vb: Public Shared Operator >=(t1 As Duration, t2 As Duration) As Boolean
    parameters:
    - id: t1
      type: Windows.UI.Xaml.Duration
      description: The first Duration.
    - id: t2
      type: Windows.UI.Xaml.Duration
      description: The second Duration.
    return:
      type: System.Boolean
      description: true if both t1 and t2 have values and t1 is greater than or equal to t2; otherwise, false.
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Windows.UI.Xaml.Duration.op_Implicit(System.TimeSpan)~Windows.UI.Xaml.Duration
  commentId: M:Windows.UI.Xaml.Duration.op_Implicit(System.TimeSpan)~Windows.UI.Xaml.Duration
  id: op_Implicit(System.TimeSpan)~Windows.UI.Xaml.Duration
  parent: Windows.UI.Xaml.Duration
  langs:
  - csharp
  - vb
  name: Implicit(TimeSpan to Duration)
  nameWithType: Duration.Implicit(TimeSpan to Duration)
  fullName: Windows.UI.Xaml.Duration.Implicit(System.TimeSpan to Windows.UI.Xaml.Duration)
  type: Operator
  source:
    remote:
      path: src/System.Runtime.WindowsRuntime.UI.Xaml/ref/System.Runtime.WindowsRuntime.UI.Xaml.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: op_Implicit
    path: src/System.Runtime.WindowsRuntime.UI.Xaml/ref/System.Runtime.WindowsRuntime.UI.Xaml.cs
    startLine: 51
  assemblies:
  - System.Runtime.WindowsRuntime.UI.Xaml
  namespace: Windows.UI.Xaml
  syntax:
    content: public static implicit operator Duration(TimeSpan timeSpan)
    content.vb: Public Shared Widening Operator CType(timeSpan As TimeSpan) As Duration
    parameters:
    - id: timeSpan
      type: System.TimeSpan
    return:
      type: Windows.UI.Xaml.Duration
  nameWithType.vb: Duration.Widening(TimeSpan to Duration)
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: Windows.UI.Xaml.Duration.Widening(System.TimeSpan to Windows.UI.Xaml.Duration)
  name.vb: Widening(TimeSpan to Duration)
- uid: Windows.UI.Xaml.Duration.op_Inequality(Windows.UI.Xaml.Duration,Windows.UI.Xaml.Duration)
  commentId: M:Windows.UI.Xaml.Duration.op_Inequality(Windows.UI.Xaml.Duration,Windows.UI.Xaml.Duration)
  id: op_Inequality(Windows.UI.Xaml.Duration,Windows.UI.Xaml.Duration)
  parent: Windows.UI.Xaml.Duration
  langs:
  - csharp
  - vb
  name: Inequality(Duration, Duration)
  nameWithType: Duration.Inequality(Duration, Duration)
  fullName: Windows.UI.Xaml.Duration.Inequality(Windows.UI.Xaml.Duration, Windows.UI.Xaml.Duration)
  type: Operator
  source:
    remote:
      path: src/System.Runtime.WindowsRuntime.UI.Xaml/ref/System.Runtime.WindowsRuntime.UI.Xaml.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: op_Inequality
    path: src/System.Runtime.WindowsRuntime.UI.Xaml/ref/System.Runtime.WindowsRuntime.UI.Xaml.cs
    startLine: 52
  assemblies:
  - System.Runtime.WindowsRuntime.UI.Xaml
  namespace: Windows.UI.Xaml
  summary: Compares two Duration structures for inequality.
  syntax:
    content: public static bool operator !=(Duration t1, Duration t2)
    content.vb: Public Shared Operator <>(t1 As Duration, t2 As Duration) As Boolean
    parameters:
    - id: t1
      type: Windows.UI.Xaml.Duration
      description: The first Duration structure to compare.
    - id: t2
      type: Windows.UI.Xaml.Duration
      description: The second Duration structure to compare.
    return:
      type: System.Boolean
      description: true if t1 and t2 have different values; false if t1 and t2 have the same values.
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Windows.UI.Xaml.Duration.op_LessThan(Windows.UI.Xaml.Duration,Windows.UI.Xaml.Duration)
  commentId: M:Windows.UI.Xaml.Duration.op_LessThan(Windows.UI.Xaml.Duration,Windows.UI.Xaml.Duration)
  id: op_LessThan(Windows.UI.Xaml.Duration,Windows.UI.Xaml.Duration)
  parent: Windows.UI.Xaml.Duration
  langs:
  - csharp
  - vb
  name: LessThan(Duration, Duration)
  nameWithType: Duration.LessThan(Duration, Duration)
  fullName: Windows.UI.Xaml.Duration.LessThan(Windows.UI.Xaml.Duration, Windows.UI.Xaml.Duration)
  type: Operator
  source:
    remote:
      path: src/System.Runtime.WindowsRuntime.UI.Xaml/ref/System.Runtime.WindowsRuntime.UI.Xaml.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: op_LessThan
    path: src/System.Runtime.WindowsRuntime.UI.Xaml/ref/System.Runtime.WindowsRuntime.UI.Xaml.cs
    startLine: 53
  assemblies:
  - System.Runtime.WindowsRuntime.UI.Xaml
  namespace: Windows.UI.Xaml
  summary: Determines if one Duration is less than another.
  syntax:
    content: public static bool operator <(Duration t1, Duration t2)
    content.vb: Public Shared Operator <(t1 As Duration, t2 As Duration) As Boolean
    parameters:
    - id: t1
      type: Windows.UI.Xaml.Duration
      description: The first Duration.
    - id: t2
      type: Windows.UI.Xaml.Duration
      description: The second Duration.
    return:
      type: System.Boolean
      description: true if both t1 and t2 have values and t1 is less than t2; otherwise, false.
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Windows.UI.Xaml.Duration.op_LessThanOrEqual(Windows.UI.Xaml.Duration,Windows.UI.Xaml.Duration)
  commentId: M:Windows.UI.Xaml.Duration.op_LessThanOrEqual(Windows.UI.Xaml.Duration,Windows.UI.Xaml.Duration)
  id: op_LessThanOrEqual(Windows.UI.Xaml.Duration,Windows.UI.Xaml.Duration)
  parent: Windows.UI.Xaml.Duration
  langs:
  - csharp
  - vb
  name: LessThanOrEqual(Duration, Duration)
  nameWithType: Duration.LessThanOrEqual(Duration, Duration)
  fullName: Windows.UI.Xaml.Duration.LessThanOrEqual(Windows.UI.Xaml.Duration, Windows.UI.Xaml.Duration)
  type: Operator
  source:
    remote:
      path: src/System.Runtime.WindowsRuntime.UI.Xaml/ref/System.Runtime.WindowsRuntime.UI.Xaml.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: op_LessThanOrEqual
    path: src/System.Runtime.WindowsRuntime.UI.Xaml/ref/System.Runtime.WindowsRuntime.UI.Xaml.cs
    startLine: 54
  assemblies:
  - System.Runtime.WindowsRuntime.UI.Xaml
  namespace: Windows.UI.Xaml
  summary: Determines if one Duration is less than or equal to another.
  syntax:
    content: public static bool operator <=(Duration t1, Duration t2)
    content.vb: Public Shared Operator <=(t1 As Duration, t2 As Duration) As Boolean
    parameters:
    - id: t1
      type: Windows.UI.Xaml.Duration
      description: The first Duration.
    - id: t2
      type: Windows.UI.Xaml.Duration
      description: The second Duration.
    return:
      type: System.Boolean
      description: true if both t1 and t2 have values and t1 is less than or equal to t2; otherwise, false.
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Windows.UI.Xaml.Duration.op_Subtraction(Windows.UI.Xaml.Duration,Windows.UI.Xaml.Duration)
  commentId: M:Windows.UI.Xaml.Duration.op_Subtraction(Windows.UI.Xaml.Duration,Windows.UI.Xaml.Duration)
  id: op_Subtraction(Windows.UI.Xaml.Duration,Windows.UI.Xaml.Duration)
  parent: Windows.UI.Xaml.Duration
  langs:
  - csharp
  - vb
  name: Subtraction(Duration, Duration)
  nameWithType: Duration.Subtraction(Duration, Duration)
  fullName: Windows.UI.Xaml.Duration.Subtraction(Windows.UI.Xaml.Duration, Windows.UI.Xaml.Duration)
  type: Operator
  source:
    remote:
      path: src/System.Runtime.WindowsRuntime.UI.Xaml/ref/System.Runtime.WindowsRuntime.UI.Xaml.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: op_Subtraction
    path: src/System.Runtime.WindowsRuntime.UI.Xaml/ref/System.Runtime.WindowsRuntime.UI.Xaml.cs
    startLine: 55
  assemblies:
  - System.Runtime.WindowsRuntime.UI.Xaml
  namespace: Windows.UI.Xaml
  summary: Subtracts the value of one Duration from another.
  syntax:
    content: public static Duration operator -(Duration t1, Duration t2)
    content.vb: Public Shared Operator -(t1 As Duration, t2 As Duration) As Duration
    parameters:
    - id: t1
      type: Windows.UI.Xaml.Duration
      description: The first Duration.
    - id: t2
      type: Windows.UI.Xaml.Duration
      description: The second Duration.
    return:
      type: Windows.UI.Xaml.Duration
      description: If each Duration has values, a Duration that represents the value of t1 minus t2. If t1 has a value of Forever and t2 has a value of TimeSpan, this method returns Forever. Otherwise this method returns null.
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Windows.UI.Xaml.Duration.op_UnaryPlus(Windows.UI.Xaml.Duration)
  commentId: M:Windows.UI.Xaml.Duration.op_UnaryPlus(Windows.UI.Xaml.Duration)
  id: op_UnaryPlus(Windows.UI.Xaml.Duration)
  parent: Windows.UI.Xaml.Duration
  langs:
  - csharp
  - vb
  name: UnaryPlus(Duration)
  nameWithType: Duration.UnaryPlus(Duration)
  fullName: Windows.UI.Xaml.Duration.UnaryPlus(Windows.UI.Xaml.Duration)
  type: Operator
  source:
    remote:
      path: src/System.Runtime.WindowsRuntime.UI.Xaml/ref/System.Runtime.WindowsRuntime.UI.Xaml.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: op_UnaryPlus
    path: src/System.Runtime.WindowsRuntime.UI.Xaml/ref/System.Runtime.WindowsRuntime.UI.Xaml.cs
    startLine: 56
  assemblies:
  - System.Runtime.WindowsRuntime.UI.Xaml
  namespace: Windows.UI.Xaml
  summary: Returns the specified Duration.
  syntax:
    content: public static Duration operator +(Duration duration)
    content.vb: Public Shared Operator +(duration As Duration) As Duration
    parameters:
    - id: duration
      type: Windows.UI.Xaml.Duration
      description: The Duration to specify.
    return:
      type: Windows.UI.Xaml.Duration
      description: A Duration value identical to duration.
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Windows.UI.Xaml.Duration.Subtract(Windows.UI.Xaml.Duration)
  commentId: M:Windows.UI.Xaml.Duration.Subtract(Windows.UI.Xaml.Duration)
  id: Subtract(Windows.UI.Xaml.Duration)
  parent: Windows.UI.Xaml.Duration
  langs:
  - csharp
  - vb
  name: Subtract(Duration)
  nameWithType: Duration.Subtract(Duration)
  fullName: Windows.UI.Xaml.Duration.Subtract(Windows.UI.Xaml.Duration)
  type: Method
  source:
    remote:
      path: src/System.Runtime.WindowsRuntime.UI.Xaml/ref/System.Runtime.WindowsRuntime.UI.Xaml.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: Subtract
    path: src/System.Runtime.WindowsRuntime.UI.Xaml/ref/System.Runtime.WindowsRuntime.UI.Xaml.cs
    startLine: 57
  assemblies:
  - System.Runtime.WindowsRuntime.UI.Xaml
  namespace: Windows.UI.Xaml
  summary: Subtracts the specified Duration from this Duration.
  syntax:
    content: public Duration Subtract(Duration duration)
    content.vb: Public Function Subtract(duration As Duration) As Duration
    parameters:
    - id: duration
      type: Windows.UI.Xaml.Duration
      description: The Duration to subtract from this Duration.
    return:
      type: Windows.UI.Xaml.Duration
      description: The subtracted Duration.
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Windows.UI.Xaml.Duration.ToString
  commentId: M:Windows.UI.Xaml.Duration.ToString
  id: ToString
  parent: Windows.UI.Xaml.Duration
  langs:
  - csharp
  - vb
  name: ToString()
  nameWithType: Duration.ToString()
  fullName: Windows.UI.Xaml.Duration.ToString()
  type: Method
  source:
    remote:
      path: src/System.Runtime.WindowsRuntime.UI.Xaml/ref/System.Runtime.WindowsRuntime.UI.Xaml.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: ToString
    path: src/System.Runtime.WindowsRuntime.UI.Xaml/ref/System.Runtime.WindowsRuntime.UI.Xaml.cs
    startLine: 58
  assemblies:
  - System.Runtime.WindowsRuntime.UI.Xaml
  namespace: Windows.UI.Xaml
  syntax:
    content: >-
      [SecuritySafeCritical]

      public override string ToString()
    content.vb: >-
      <SecuritySafeCritical>

      Public Overrides Function ToString As String
    return:
      type: System.String
  overridden: System.ValueType.ToString
  attributes:
  - type: System.Security.SecuritySafeCriticalAttribute
    ctor: System.Security.SecuritySafeCriticalAttribute.#ctor
    arguments: []
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
references:
- uid: Windows.UI.Xaml
  commentId: N:Windows.UI.Xaml
  isExternal: false
  name: Windows.UI.Xaml
  nameWithType: Windows.UI.Xaml
  fullName: Windows.UI.Xaml
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: false
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: System.TimeSpan
  commentId: T:System.TimeSpan
  parent: System
  isExternal: false
  name: TimeSpan
  nameWithType: TimeSpan
  fullName: System.TimeSpan
- uid: Windows.UI.Xaml.Duration
  commentId: T:Windows.UI.Xaml.Duration
  parent: Windows.UI.Xaml
  isExternal: false
  name: Duration
  nameWithType: Duration
  fullName: Windows.UI.Xaml.Duration
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: false
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: false
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.ValueType.Equals(System.Object)
  commentId: M:System.ValueType.Equals(System.Object)
  parent: System.ValueType
  isExternal: true
  name: Equals(Object)
  nameWithType: ValueType.Equals(Object)
  fullName: System.ValueType.Equals(System.Object)
  spec.csharp:
  - uid: System.ValueType.Equals(System.Object)
    name: Equals
    nameWithType: ValueType.Equals
    fullName: System.ValueType.Equals
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.ValueType.Equals(System.Object)
    name: Equals
    nameWithType: ValueType.Equals
    fullName: System.ValueType.Equals
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.ValueType
  commentId: T:System.ValueType
  parent: System
  isExternal: false
  name: ValueType
  nameWithType: ValueType
  fullName: System.ValueType
- uid: System.ValueType.GetHashCode
  commentId: M:System.ValueType.GetHashCode
  parent: System.ValueType
  isExternal: false
  name: GetHashCode()
  nameWithType: ValueType.GetHashCode()
  fullName: System.ValueType.GetHashCode()
  spec.csharp:
  - uid: System.ValueType.GetHashCode
    name: GetHashCode
    nameWithType: ValueType.GetHashCode
    fullName: System.ValueType.GetHashCode
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.ValueType.GetHashCode
    name: GetHashCode
    nameWithType: ValueType.GetHashCode
    fullName: System.ValueType.GetHashCode
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.ValueType.ToString
  commentId: M:System.ValueType.ToString
  parent: System.ValueType
  isExternal: false
  name: ToString()
  nameWithType: ValueType.ToString()
  fullName: System.ValueType.ToString()
  spec.csharp:
  - uid: System.ValueType.ToString
    name: ToString
    nameWithType: ValueType.ToString
    fullName: System.ValueType.ToString
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.ValueType.ToString
    name: ToString
    nameWithType: ValueType.ToString
    fullName: System.ValueType.ToString
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: false
  name: String
  nameWithType: String
  fullName: System.String
