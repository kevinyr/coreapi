### YamlMime:ManagedReference
items:
- uid: System.ServiceModel.Channels.FaultConverter
  commentId: T:System.ServiceModel.Channels.FaultConverter
  id: FaultConverter
  parent: System.ServiceModel.Channels
  children:
  - System.ServiceModel.Channels.FaultConverter.#ctor
  - System.ServiceModel.Channels.FaultConverter.GetDefaultFaultConverter(System.ServiceModel.Channels.MessageVersion)
  - System.ServiceModel.Channels.FaultConverter.OnTryCreateException(System.ServiceModel.Channels.Message,System.ServiceModel.Channels.MessageFault,System.Exception@)
  - System.ServiceModel.Channels.FaultConverter.OnTryCreateFaultMessage(System.Exception,System.ServiceModel.Channels.Message@)
  - System.ServiceModel.Channels.FaultConverter.TryCreateException(System.ServiceModel.Channels.Message,System.ServiceModel.Channels.MessageFault,System.Exception@)
  langs:
  - csharp
  - vb
  name: FaultConverter
  nameWithType: FaultConverter
  fullName: System.ServiceModel.Channels.FaultConverter
  type: Class
  source:
    remote:
      path: src/System.ServiceModel.Primitives/ref/System.ServiceModel.Primitives.cs
      branch: master
      repo: https://github.com/dotnet/wcf.git
    id: FaultConverter
    path: src/System.ServiceModel.Primitives/ref/System.ServiceModel.Primitives.cs
    startLine: 795
  assemblies:
  - System.ServiceModel.Primitives
  namespace: System.ServiceModel.Channels
  summary: "\n<p>Converts exceptions thrown by a channel into SOAP fault messages that conform to the channel's protocol.</p>\n"
  syntax:
    content: public abstract class FaultConverter
    content.vb: Public MustInherit Class FaultConverter
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  modifiers.csharp:
  - public
  - abstract
  - class
  modifiers.vb:
  - Public
  - MustInherit
  - Class
- uid: System.ServiceModel.Channels.FaultConverter.#ctor
  commentId: M:System.ServiceModel.Channels.FaultConverter.#ctor
  id: '#ctor'
  parent: System.ServiceModel.Channels.FaultConverter
  langs:
  - csharp
  - vb
  name: FaultConverter()
  nameWithType: FaultConverter.FaultConverter()
  fullName: System.ServiceModel.Channels.FaultConverter.FaultConverter()
  type: Constructor
  source:
    remote:
      path: src/System.ServiceModel.Primitives/ref/System.ServiceModel.Primitives.cs
      branch: master
      repo: https://github.com/dotnet/wcf.git
    id: .ctor
    path: src/System.ServiceModel.Primitives/ref/System.ServiceModel.Primitives.cs
    startLine: 797
  assemblies:
  - System.ServiceModel.Primitives
  namespace: System.ServiceModel.Channels
  summary: "\n<p>Initializes a new instance of the <xref href=\"System.ServiceModel.Channels.FaultConverter\" data-throw-if-not-resolved=\"false\"></xref> class.  </p>\n"
  syntax:
    content: protected FaultConverter()
    content.vb: Protected Sub New
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: System.ServiceModel.Channels.FaultConverter.GetDefaultFaultConverter(System.ServiceModel.Channels.MessageVersion)
  commentId: M:System.ServiceModel.Channels.FaultConverter.GetDefaultFaultConverter(System.ServiceModel.Channels.MessageVersion)
  id: GetDefaultFaultConverter(System.ServiceModel.Channels.MessageVersion)
  parent: System.ServiceModel.Channels.FaultConverter
  langs:
  - csharp
  - vb
  name: GetDefaultFaultConverter(MessageVersion)
  nameWithType: FaultConverter.GetDefaultFaultConverter(MessageVersion)
  fullName: System.ServiceModel.Channels.FaultConverter.GetDefaultFaultConverter(System.ServiceModel.Channels.MessageVersion)
  type: Method
  source:
    remote:
      path: src/System.ServiceModel.Primitives/ref/System.ServiceModel.Primitives.cs
      branch: master
      repo: https://github.com/dotnet/wcf.git
    id: GetDefaultFaultConverter
    path: src/System.ServiceModel.Primitives/ref/System.ServiceModel.Primitives.cs
    startLine: 798
  assemblies:
  - System.ServiceModel.Primitives
  namespace: System.ServiceModel.Channels
  summary: "\n<p>Gets the default fault converter.</p>\n"
  syntax:
    content: public static FaultConverter GetDefaultFaultConverter(MessageVersion version)
    content.vb: Public Shared Function GetDefaultFaultConverter(version As MessageVersion) As FaultConverter
    parameters:
    - id: version
      type: System.ServiceModel.Channels.MessageVersion
      description: "\n<p>The message version.</p>\n"
    return:
      type: System.ServiceModel.Channels.FaultConverter
      description: "\n<p>An instance of <xref href=\"System.ServiceModel.Channels.FaultConverter\" data-throw-if-not-resolved=\"false\"></xref>.</p>\n"
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: System.ServiceModel.Channels.FaultConverter.OnTryCreateException(System.ServiceModel.Channels.Message,System.ServiceModel.Channels.MessageFault,System.Exception@)
  commentId: M:System.ServiceModel.Channels.FaultConverter.OnTryCreateException(System.ServiceModel.Channels.Message,System.ServiceModel.Channels.MessageFault,System.Exception@)
  id: OnTryCreateException(System.ServiceModel.Channels.Message,System.ServiceModel.Channels.MessageFault,System.Exception@)
  parent: System.ServiceModel.Channels.FaultConverter
  langs:
  - csharp
  - vb
  name: OnTryCreateException(Message, MessageFault, out Exception)
  nameWithType: FaultConverter.OnTryCreateException(Message, MessageFault, out Exception)
  fullName: System.ServiceModel.Channels.FaultConverter.OnTryCreateException(System.ServiceModel.Channels.Message, System.ServiceModel.Channels.MessageFault, out System.Exception)
  type: Method
  source:
    remote:
      path: src/System.ServiceModel.Primitives/ref/System.ServiceModel.Primitives.cs
      branch: master
      repo: https://github.com/dotnet/wcf.git
    id: OnTryCreateException
    path: src/System.ServiceModel.Primitives/ref/System.ServiceModel.Primitives.cs
    startLine: 799
  assemblies:
  - System.ServiceModel.Primitives
  namespace: System.ServiceModel.Channels
  summary: "\n<p>Tries to create the exception.</p>\n"
  syntax:
    content: protected abstract bool OnTryCreateException(Message message, MessageFault fault, out Exception exception)
    content.vb: Protected MustOverride Function OnTryCreateException(message As Message, fault As MessageFault, ByRef exception As Exception) As Boolean
    parameters:
    - id: message
      type: System.ServiceModel.Channels.Message
      description: "\n<p>The fault message.</p>\n"
    - id: fault
      type: System.ServiceModel.Channels.MessageFault
      description: "\n<p>The fault.</p>\n"
    - id: exception
      type: System.Exception
      description: "\n<p>If conversion is successful, the SOAP exception, returned as an <strong>out</strong> parameter.</p>\n"
    return:
      type: System.Boolean
      description: "\n<p>\n<strong>true</strong> if fault was successfully converted; otherwise, <strong>false</strong>. The default is <strong>false</strong>.</p>\n"
  nameWithType.vb: FaultConverter.OnTryCreateException(Message, MessageFault, ByRef Exception)
  modifiers.csharp:
  - protected
  - abstract
  modifiers.vb:
  - Protected
  - MustOverride
  fullName.vb: System.ServiceModel.Channels.FaultConverter.OnTryCreateException(System.ServiceModel.Channels.Message, System.ServiceModel.Channels.MessageFault, ByRef System.Exception)
  name.vb: OnTryCreateException(Message, MessageFault, ByRef Exception)
- uid: System.ServiceModel.Channels.FaultConverter.OnTryCreateFaultMessage(System.Exception,System.ServiceModel.Channels.Message@)
  commentId: M:System.ServiceModel.Channels.FaultConverter.OnTryCreateFaultMessage(System.Exception,System.ServiceModel.Channels.Message@)
  id: OnTryCreateFaultMessage(System.Exception,System.ServiceModel.Channels.Message@)
  parent: System.ServiceModel.Channels.FaultConverter
  langs:
  - csharp
  - vb
  name: OnTryCreateFaultMessage(Exception, out Message)
  nameWithType: FaultConverter.OnTryCreateFaultMessage(Exception, out Message)
  fullName: System.ServiceModel.Channels.FaultConverter.OnTryCreateFaultMessage(System.Exception, out System.ServiceModel.Channels.Message)
  type: Method
  source:
    remote:
      path: src/System.ServiceModel.Primitives/ref/System.ServiceModel.Primitives.cs
      branch: master
      repo: https://github.com/dotnet/wcf.git
    id: OnTryCreateFaultMessage
    path: src/System.ServiceModel.Primitives/ref/System.ServiceModel.Primitives.cs
    startLine: 800
  assemblies:
  - System.ServiceModel.Primitives
  namespace: System.ServiceModel.Channels
  summary: "\n<p>Tries to create the fault message once the fault has been converted to a SOAP exception.</p>\n"
  syntax:
    content: protected abstract bool OnTryCreateFaultMessage(Exception exception, out Message message)
    content.vb: Protected MustOverride Function OnTryCreateFaultMessage(exception As Exception, ByRef message As Message) As Boolean
    parameters:
    - id: exception
      type: System.Exception
      description: "\n<p>The SOAP exception.</p>\n"
    - id: message
      type: System.ServiceModel.Channels.Message
      description: "\n<p>The fault message returned as an <strong>out</strong> parameter.</p>\n"
    return:
      type: System.Boolean
      description: "\n<p>\n<strong>true</strong> if fault message was successfully created; otherwise, <strong>false</strong>. The default is <strong>false</strong>.</p>\n"
  nameWithType.vb: FaultConverter.OnTryCreateFaultMessage(Exception, ByRef Message)
  modifiers.csharp:
  - protected
  - abstract
  modifiers.vb:
  - Protected
  - MustOverride
  fullName.vb: System.ServiceModel.Channels.FaultConverter.OnTryCreateFaultMessage(System.Exception, ByRef System.ServiceModel.Channels.Message)
  name.vb: OnTryCreateFaultMessage(Exception, ByRef Message)
- uid: System.ServiceModel.Channels.FaultConverter.TryCreateException(System.ServiceModel.Channels.Message,System.ServiceModel.Channels.MessageFault,System.Exception@)
  commentId: M:System.ServiceModel.Channels.FaultConverter.TryCreateException(System.ServiceModel.Channels.Message,System.ServiceModel.Channels.MessageFault,System.Exception@)
  id: TryCreateException(System.ServiceModel.Channels.Message,System.ServiceModel.Channels.MessageFault,System.Exception@)
  parent: System.ServiceModel.Channels.FaultConverter
  langs:
  - csharp
  - vb
  name: TryCreateException(Message, MessageFault, out Exception)
  nameWithType: FaultConverter.TryCreateException(Message, MessageFault, out Exception)
  fullName: System.ServiceModel.Channels.FaultConverter.TryCreateException(System.ServiceModel.Channels.Message, System.ServiceModel.Channels.MessageFault, out System.Exception)
  type: Method
  source:
    remote:
      path: src/System.ServiceModel.Primitives/ref/System.ServiceModel.Primitives.cs
      branch: master
      repo: https://github.com/dotnet/wcf.git
    id: TryCreateException
    path: src/System.ServiceModel.Primitives/ref/System.ServiceModel.Primitives.cs
    startLine: 801
  assemblies:
  - System.ServiceModel.Primitives
  namespace: System.ServiceModel.Channels
  summary: "\n<p>Wraps <xref href=\"System.ServiceModel.Channels.FaultConverter.OnTryCreateException(System.ServiceModel.Channels.Message,System.ServiceModel.Channels.MessageFault,System.Exception@)\" data-throw-if-not-resolved=\"false\"></xref> with error checking.</p>\n"
  syntax:
    content: public bool TryCreateException(Message message, MessageFault fault, out Exception exception)
    content.vb: Public Function TryCreateException(message As Message, fault As MessageFault, ByRef exception As Exception) As Boolean
    parameters:
    - id: message
      type: System.ServiceModel.Channels.Message
      description: "\n<p>The fault message.</p>\n"
    - id: fault
      type: System.ServiceModel.Channels.MessageFault
      description: "\n<p>The fault.</p>\n"
    - id: exception
      type: System.Exception
      description: "\n<p>If conversion is successful, the SOAP exception, returned as an <strong>out</strong> parameter.</p>\n"
    return:
      type: System.Boolean
      description: "\n<p>\n<strong>true</strong> if fault was successfully converted; otherwise, <strong>false</strong>. The default is <strong>false</strong>.</p>\n"
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "\n<p>\n<em>message</em> or <em>fault</em> is <strong>null</strong>.</p>\n"
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "\n<p>\n<xref href=\"System.ServiceModel.Channels.FaultConverter.OnTryCreateException(System.ServiceModel.Channels.Message,System.ServiceModel.Channels.MessageFault,System.Exception@)\" data-throw-if-not-resolved=\"false\"></xref> returned <strong>true</strong> but <em>exception</em> is <strong>null</strong>.</p>\n"
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "\n<p>\n<xref href=\"System.ServiceModel.Channels.FaultConverter.OnTryCreateException(System.ServiceModel.Channels.Message,System.ServiceModel.Channels.MessageFault,System.Exception@)\" data-throw-if-not-resolved=\"false\"></xref> returned <strong>false</strong> but <em>exception</em> is not <strong>null</strong>.</p>\n"
  nameWithType.vb: FaultConverter.TryCreateException(Message, MessageFault, ByRef Exception)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: System.ServiceModel.Channels.FaultConverter.TryCreateException(System.ServiceModel.Channels.Message, System.ServiceModel.Channels.MessageFault, ByRef System.Exception)
  name.vb: TryCreateException(Message, MessageFault, ByRef Exception)
references:
- uid: System.ServiceModel.Channels
  commentId: N:System.ServiceModel.Channels
  isExternal: false
  name: System.ServiceModel.Channels
  nameWithType: System.ServiceModel.Channels
  fullName: System.ServiceModel.Channels
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: false
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: System.ServiceModel.Channels.MessageVersion
  commentId: T:System.ServiceModel.Channels.MessageVersion
  parent: System.ServiceModel.Channels
  isExternal: false
  name: MessageVersion
  nameWithType: MessageVersion
  fullName: System.ServiceModel.Channels.MessageVersion
- uid: System.ServiceModel.Channels.FaultConverter
  commentId: T:System.ServiceModel.Channels.FaultConverter
  parent: System.ServiceModel.Channels
  isExternal: false
  name: FaultConverter
  nameWithType: FaultConverter
  fullName: System.ServiceModel.Channels.FaultConverter
- uid: System.ServiceModel.Channels.Message
  commentId: T:System.ServiceModel.Channels.Message
  parent: System.ServiceModel.Channels
  isExternal: false
  name: Message
  nameWithType: Message
  fullName: System.ServiceModel.Channels.Message
- uid: System.ServiceModel.Channels.MessageFault
  commentId: T:System.ServiceModel.Channels.MessageFault
  parent: System.ServiceModel.Channels
  isExternal: false
  name: MessageFault
  nameWithType: MessageFault
  fullName: System.ServiceModel.Channels.MessageFault
- uid: System.Exception
  commentId: T:System.Exception
  parent: System
  isExternal: false
  name: Exception
  nameWithType: Exception
  fullName: System.Exception
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: false
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.ArgumentNullException
  commentId: T:System.ArgumentNullException
  isExternal: false
  name: ArgumentNullException
  nameWithType: ArgumentNullException
  fullName: System.ArgumentNullException
