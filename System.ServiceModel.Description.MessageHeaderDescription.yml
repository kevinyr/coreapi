### YamlMime:ManagedReference
items:
- uid: System.ServiceModel.Description.MessageHeaderDescription
  commentId: T:System.ServiceModel.Description.MessageHeaderDescription
  id: MessageHeaderDescription
  parent: System.ServiceModel.Description
  children:
  - System.ServiceModel.Description.MessageHeaderDescription.#ctor(System.String,System.String)
  - System.ServiceModel.Description.MessageHeaderDescription.Actor
  - System.ServiceModel.Description.MessageHeaderDescription.MustUnderstand
  - System.ServiceModel.Description.MessageHeaderDescription.Relay
  - System.ServiceModel.Description.MessageHeaderDescription.TypedHeader
  langs:
  - csharp
  - vb
  name: MessageHeaderDescription
  nameWithType: MessageHeaderDescription
  fullName: System.ServiceModel.Description.MessageHeaderDescription
  type: Class
  source:
    remote:
      path: src/System.ServiceModel.Primitives/ref/System.ServiceModel.Primitives.cs
      branch: master
      repo: https://github.com/dotnet/wcf.git
    id: MessageHeaderDescription
    path: src/System.ServiceModel.Primitives/ref/System.ServiceModel.Primitives.cs
    startLine: 1277
  assemblies:
  - System.ServiceModel.Primitives
  namespace: System.ServiceModel.Description
  summary: "\n<p>Represents a SOAP message header.</p>\n"
  syntax:
    content: 'public class MessageHeaderDescription : MessagePartDescription'
    content.vb: >-
      Public Class MessageHeaderDescription
          Inherits MessagePartDescription
  inheritance:
  - System.Object
  - System.ServiceModel.Description.MessagePartDescription
  inheritedMembers:
  - System.ServiceModel.Description.MessagePartDescription.Index
  - System.ServiceModel.Description.MessagePartDescription.MemberInfo
  - System.ServiceModel.Description.MessagePartDescription.Multiple
  - System.ServiceModel.Description.MessagePartDescription.Name
  - System.ServiceModel.Description.MessagePartDescription.Namespace
  - System.ServiceModel.Description.MessagePartDescription.Type
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: System.ServiceModel.Description.MessageHeaderDescription.#ctor(System.String,System.String)
  commentId: M:System.ServiceModel.Description.MessageHeaderDescription.#ctor(System.String,System.String)
  id: '#ctor(System.String,System.String)'
  parent: System.ServiceModel.Description.MessageHeaderDescription
  langs:
  - csharp
  - vb
  name: MessageHeaderDescription(String, String)
  nameWithType: MessageHeaderDescription.MessageHeaderDescription(String, String)
  fullName: System.ServiceModel.Description.MessageHeaderDescription.MessageHeaderDescription(System.String, System.String)
  type: Constructor
  source:
    remote:
      path: src/System.ServiceModel.Primitives/ref/System.ServiceModel.Primitives.cs
      branch: master
      repo: https://github.com/dotnet/wcf.git
    id: .ctor
    path: src/System.ServiceModel.Primitives/ref/System.ServiceModel.Primitives.cs
    startLine: 1279
  assemblies:
  - System.ServiceModel.Primitives
  namespace: System.ServiceModel.Description
  summary: "\n<p>Initializes a new instance of the <xref href=\"System.ServiceModel.Description.MessageHeaderDescription\" data-throw-if-not-resolved=\"false\"></xref> class with a specified qualified name.</p>\n"
  syntax:
    content: public MessageHeaderDescription(string name, string ns)
    content.vb: Public Sub New(name As String, ns As String)
    parameters:
    - id: name
      type: System.String
      description: "\n<p>The name of the message header.</p>\n"
    - id: ns
      type: System.String
      description: "\n<p>The namespace of the message header.</p>\n"
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: System.ServiceModel.Description.MessageHeaderDescription.Actor
  commentId: P:System.ServiceModel.Description.MessageHeaderDescription.Actor
  id: Actor
  parent: System.ServiceModel.Description.MessageHeaderDescription
  langs:
  - csharp
  - vb
  name: Actor
  nameWithType: MessageHeaderDescription.Actor
  fullName: System.ServiceModel.Description.MessageHeaderDescription.Actor
  type: Property
  source:
    remote:
      path: src/System.ServiceModel.Primitives/ref/System.ServiceModel.Primitives.cs
      branch: master
      repo: https://github.com/dotnet/wcf.git
    id: Actor
    path: src/System.ServiceModel.Primitives/ref/System.ServiceModel.Primitives.cs
    startLine: 1280
  assemblies:
  - System.ServiceModel.Primitives
  namespace: System.ServiceModel.Description
  summary: "\n<p>Gets or sets the intended recipient of the message header.</p>\n"
  syntax:
    content: public string Actor { get; set; }
    content.vb: Public Property Actor As String
    parameters: []
    return:
      type: System.String
      description: "\n<p>A URI that indicates the intended recipient of the message header.</p>\n"
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: System.ServiceModel.Description.MessageHeaderDescription.MustUnderstand
  commentId: P:System.ServiceModel.Description.MessageHeaderDescription.MustUnderstand
  id: MustUnderstand
  parent: System.ServiceModel.Description.MessageHeaderDescription
  langs:
  - csharp
  - vb
  name: MustUnderstand
  nameWithType: MessageHeaderDescription.MustUnderstand
  fullName: System.ServiceModel.Description.MessageHeaderDescription.MustUnderstand
  type: Property
  source:
    remote:
      path: src/System.ServiceModel.Primitives/ref/System.ServiceModel.Primitives.cs
      branch: master
      repo: https://github.com/dotnet/wcf.git
    id: MustUnderstand
    path: src/System.ServiceModel.Primitives/ref/System.ServiceModel.Primitives.cs
    startLine: 1282
  assemblies:
  - System.ServiceModel.Primitives
  namespace: System.ServiceModel.Description
  summary: "\n<p>Gets or sets a value indicating if the header must be understood according to the SOAP 1.1 and 1.2 specification..</p>\n"
  syntax:
    content: public bool MustUnderstand { get; set; }
    content.vb: Public Property MustUnderstand As Boolean
    parameters: []
    return:
      type: System.Boolean
      description: "\n<p>\n<strong>true</strong> if processing the message header is mandatory; otherwise, <strong>false</strong>.</p>\n"
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: System.ServiceModel.Description.MessageHeaderDescription.Relay
  commentId: P:System.ServiceModel.Description.MessageHeaderDescription.Relay
  id: Relay
  parent: System.ServiceModel.Description.MessageHeaderDescription
  langs:
  - csharp
  - vb
  name: Relay
  nameWithType: MessageHeaderDescription.Relay
  fullName: System.ServiceModel.Description.MessageHeaderDescription.Relay
  type: Property
  source:
    remote:
      path: src/System.ServiceModel.Primitives/ref/System.ServiceModel.Primitives.cs
      branch: master
      repo: https://github.com/dotnet/wcf.git
    id: Relay
    path: src/System.ServiceModel.Primitives/ref/System.ServiceModel.Primitives.cs
    startLine: 1284
  assemblies:
  - System.ServiceModel.Primitives
  namespace: System.ServiceModel.Description
  summary: "\n<p>Gets a value that indicates whether the header should be relayed.</p>\n"
  syntax:
    content: public bool Relay { get; set; }
    content.vb: Public Property Relay As Boolean
    parameters: []
    return:
      type: System.Boolean
      description: "\n<p>\n<strong>true</strong> if the message header can be relayed; otherwise, <strong>false</strong>. The default is false according to the SOAP 1.1 specification.</p>\n"
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: System.ServiceModel.Description.MessageHeaderDescription.TypedHeader
  commentId: P:System.ServiceModel.Description.MessageHeaderDescription.TypedHeader
  id: TypedHeader
  parent: System.ServiceModel.Description.MessageHeaderDescription
  langs:
  - csharp
  - vb
  name: TypedHeader
  nameWithType: MessageHeaderDescription.TypedHeader
  fullName: System.ServiceModel.Description.MessageHeaderDescription.TypedHeader
  type: Property
  source:
    remote:
      path: src/System.ServiceModel.Primitives/ref/System.ServiceModel.Primitives.cs
      branch: master
      repo: https://github.com/dotnet/wcf.git
    id: TypedHeader
    path: src/System.ServiceModel.Primitives/ref/System.ServiceModel.Primitives.cs
    startLine: 1286
  assemblies:
  - System.ServiceModel.Primitives
  namespace: System.ServiceModel.Description
  summary: "\n<p>Gets or sets a value that indicates whether the message header is a message contract header.</p>\n"
  syntax:
    content: public bool TypedHeader { get; set; }
    content.vb: Public Property TypedHeader As Boolean
    parameters: []
    return:
      type: System.Boolean
      description: "\n<p>\n<strong>true</strong> if the message header is a message contract header; otherwise, <strong>false</strong>.</p>\n"
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
references:
- uid: System.ServiceModel.Description
  commentId: N:System.ServiceModel.Description
  isExternal: false
  name: System.ServiceModel.Description
  nameWithType: System.ServiceModel.Description
  fullName: System.ServiceModel.Description
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: false
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.ServiceModel.Description.MessagePartDescription
  commentId: T:System.ServiceModel.Description.MessagePartDescription
  parent: System.ServiceModel.Description
  isExternal: false
  name: MessagePartDescription
  nameWithType: MessagePartDescription
  fullName: System.ServiceModel.Description.MessagePartDescription
- uid: System.ServiceModel.Description.MessagePartDescription.Index
  commentId: P:System.ServiceModel.Description.MessagePartDescription.Index
  parent: System.ServiceModel.Description.MessagePartDescription
  isExternal: false
  name: Index
  nameWithType: MessagePartDescription.Index
  fullName: System.ServiceModel.Description.MessagePartDescription.Index
- uid: System.ServiceModel.Description.MessagePartDescription.MemberInfo
  commentId: P:System.ServiceModel.Description.MessagePartDescription.MemberInfo
  parent: System.ServiceModel.Description.MessagePartDescription
  isExternal: false
  name: MemberInfo
  nameWithType: MessagePartDescription.MemberInfo
  fullName: System.ServiceModel.Description.MessagePartDescription.MemberInfo
- uid: System.ServiceModel.Description.MessagePartDescription.Multiple
  commentId: P:System.ServiceModel.Description.MessagePartDescription.Multiple
  parent: System.ServiceModel.Description.MessagePartDescription
  isExternal: false
  name: Multiple
  nameWithType: MessagePartDescription.Multiple
  fullName: System.ServiceModel.Description.MessagePartDescription.Multiple
- uid: System.ServiceModel.Description.MessagePartDescription.Name
  commentId: P:System.ServiceModel.Description.MessagePartDescription.Name
  parent: System.ServiceModel.Description.MessagePartDescription
  isExternal: false
  name: Name
  nameWithType: MessagePartDescription.Name
  fullName: System.ServiceModel.Description.MessagePartDescription.Name
- uid: System.ServiceModel.Description.MessagePartDescription.Namespace
  commentId: P:System.ServiceModel.Description.MessagePartDescription.Namespace
  parent: System.ServiceModel.Description.MessagePartDescription
  isExternal: false
  name: Namespace
  nameWithType: MessagePartDescription.Namespace
  fullName: System.ServiceModel.Description.MessagePartDescription.Namespace
- uid: System.ServiceModel.Description.MessagePartDescription.Type
  commentId: P:System.ServiceModel.Description.MessagePartDescription.Type
  parent: System.ServiceModel.Description.MessagePartDescription
  isExternal: false
  name: Type
  nameWithType: MessagePartDescription.Type
  fullName: System.ServiceModel.Description.MessagePartDescription.Type
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: false
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: false
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
