items:
- uid: System.ServiceModel.MessageHeaderException
  commentId: T:System.ServiceModel.MessageHeaderException
  id: MessageHeaderException
  parent: System.ServiceModel
  children:
  - System.ServiceModel.MessageHeaderException.#ctor(System.String)
  - System.ServiceModel.MessageHeaderException.#ctor(System.String,System.Boolean)
  - System.ServiceModel.MessageHeaderException.#ctor(System.String,System.Exception)
  - System.ServiceModel.MessageHeaderException.#ctor(System.String,System.String,System.String)
  - System.ServiceModel.MessageHeaderException.#ctor(System.String,System.String,System.String,System.Boolean)
  - System.ServiceModel.MessageHeaderException.#ctor(System.String,System.String,System.String,System.Boolean,System.Exception)
  - System.ServiceModel.MessageHeaderException.#ctor(System.String,System.String,System.String,System.Exception)
  - System.ServiceModel.MessageHeaderException.HeaderName
  - System.ServiceModel.MessageHeaderException.HeaderNamespace
  - System.ServiceModel.MessageHeaderException.IsDuplicate
  langs:
  - csharp
  - vb
  name: MessageHeaderException
  fullName: System.ServiceModel.MessageHeaderException
  type: Class
  source:
    remote:
      path: src/System.ServiceModel.Primitives/ref/System.ServiceModel.Primitives.cs
      branch: master
      repo: https://github.com/dotnet/wcf.git
    id: MessageHeaderException
    path: src/System.ServiceModel.Primitives/ref/System.ServiceModel.Primitives.cs
    startLine: 425
  assemblies:
  - System.ServiceModel.Primitives
  namespace: System.ServiceModel
  summary: "\n<p>The exception that is thrown when the expectations regarding headers of a SOAP message are not satisfied when the message is processed.</p>\n"
  syntax:
    content: 'public class MessageHeaderException : ProtocolException, ISerializable, _Exception'
    content.vb: >-
      Public Class MessageHeaderException
          Inherits ProtocolException
          Implements ISerializable, _Exception
  inheritance:
  - System.Object
  - System.Exception
  - System.ServiceModel.CommunicationException
  - System.ServiceModel.ProtocolException
  implements:
  - System.Runtime.Serialization.ISerializable
  - System.Runtime.InteropServices._Exception
  inheritedMembers:
  - System.Exception.GetBaseException
  - System.Exception.ToString
  - System.Exception.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)
  - System.Exception.GetType
  - System.Exception.Message
  - System.Exception.Data
  - System.Exception.InnerException
  - System.Exception.TargetSite
  - System.Exception.StackTrace
  - System.Exception.HelpLink
  - System.Exception.Source
  - System.Exception.HResult
  - System.Exception.SerializeObjectState
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.MemberwiseClone
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
  nameWithType: MessageHeaderException
- uid: System.ServiceModel.MessageHeaderException.#ctor(System.String)
  commentId: M:System.ServiceModel.MessageHeaderException.#ctor(System.String)
  id: '#ctor(System.String)'
  parent: System.ServiceModel.MessageHeaderException
  langs:
  - csharp
  - vb
  name: MessageHeaderException(String)
  fullName: System.ServiceModel.MessageHeaderException.MessageHeaderException(System.String)
  type: Constructor
  source:
    remote:
      path: src/System.ServiceModel.Primitives/ref/System.ServiceModel.Primitives.cs
      branch: master
      repo: https://github.com/dotnet/wcf.git
    id: .ctor
    path: src/System.ServiceModel.Primitives/ref/System.ServiceModel.Primitives.cs
    startLine: 427
  assemblies:
  - System.ServiceModel.Primitives
  namespace: System.ServiceModel
  summary: "\n<p>Initializes a new instance of the <xref href=\"System.ServiceModel.MessageHeaderException\" data-throw-if-not-resolved=\"false\"></xref> class with the specified message.</p>\n"
  syntax:
    content: public MessageHeaderException(string message)
    content.vb: Public Sub New(message As String)
    parameters:
    - id: message
      type: System.String
      description: "\n<p>The message carried in the exception.</p>\n"
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  nameWithType: MessageHeaderException.MessageHeaderException(String)
- uid: System.ServiceModel.MessageHeaderException.#ctor(System.String,System.Boolean)
  commentId: M:System.ServiceModel.MessageHeaderException.#ctor(System.String,System.Boolean)
  id: '#ctor(System.String,System.Boolean)'
  parent: System.ServiceModel.MessageHeaderException
  langs:
  - csharp
  - vb
  name: MessageHeaderException(String, Boolean)
  fullName: System.ServiceModel.MessageHeaderException.MessageHeaderException(System.String, System.Boolean)
  type: Constructor
  source:
    remote:
      path: src/System.ServiceModel.Primitives/ref/System.ServiceModel.Primitives.cs
      branch: master
      repo: https://github.com/dotnet/wcf.git
    id: .ctor
    path: src/System.ServiceModel.Primitives/ref/System.ServiceModel.Primitives.cs
    startLine: 428
  assemblies:
  - System.ServiceModel.Primitives
  namespace: System.ServiceModel
  summary: "\n<p>Initializes a new instance of the <xref href=\"System.ServiceModel.MessageHeaderException\" data-throw-if-not-resolved=\"false\"></xref> class using the specified message and a value that indicates whether the message header is a duplicate or is missing.</p>\n"
  syntax:
    content: public MessageHeaderException(string message, bool isDuplicate)
    content.vb: Public Sub New(message As String, isDuplicate As Boolean)
    parameters:
    - id: message
      type: System.String
      description: "\n<p>The exception message.</p>\n"
    - id: isDuplicate
      type: System.Boolean
      description: "\n<p>\n<strong>true</strong> if the multiple message header is a duplicate; <strong>false</strong> if there are no message headers.</p>\n"
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  nameWithType: MessageHeaderException.MessageHeaderException(String, Boolean)
- uid: System.ServiceModel.MessageHeaderException.#ctor(System.String,System.Exception)
  commentId: M:System.ServiceModel.MessageHeaderException.#ctor(System.String,System.Exception)
  id: '#ctor(System.String,System.Exception)'
  parent: System.ServiceModel.MessageHeaderException
  langs:
  - csharp
  - vb
  name: MessageHeaderException(String, Exception)
  fullName: System.ServiceModel.MessageHeaderException.MessageHeaderException(System.String, System.Exception)
  type: Constructor
  source:
    remote:
      path: src/System.ServiceModel.Primitives/ref/System.ServiceModel.Primitives.cs
      branch: master
      repo: https://github.com/dotnet/wcf.git
    id: .ctor
    path: src/System.ServiceModel.Primitives/ref/System.ServiceModel.Primitives.cs
    startLine: 429
  assemblies:
  - System.ServiceModel.Primitives
  namespace: System.ServiceModel
  summary: "\n<p>Initializes a new instance of the <xref href=\"System.ServiceModel.MessageHeaderException\" data-throw-if-not-resolved=\"false\"></xref> class using the specified message and the inner exception that caused the exception.</p>\n"
  syntax:
    content: public MessageHeaderException(string message, Exception innerException)
    content.vb: Public Sub New(message As String, innerException As Exception)
    parameters:
    - id: message
      type: System.String
      description: "\n<p>The exception message.</p>\n"
    - id: innerException
      type: System.Exception
      description: "\n<p>The <xref href=\"System.Exception\" data-throw-if-not-resolved=\"false\"></xref> that contains the inner exception that caused the exception.</p>\n"
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  nameWithType: MessageHeaderException.MessageHeaderException(String, Exception)
- uid: System.ServiceModel.MessageHeaderException.#ctor(System.String,System.String,System.String)
  commentId: M:System.ServiceModel.MessageHeaderException.#ctor(System.String,System.String,System.String)
  id: '#ctor(System.String,System.String,System.String)'
  parent: System.ServiceModel.MessageHeaderException
  langs:
  - csharp
  - vb
  name: MessageHeaderException(String, String, String)
  fullName: System.ServiceModel.MessageHeaderException.MessageHeaderException(System.String, System.String, System.String)
  type: Constructor
  source:
    remote:
      path: src/System.ServiceModel.Primitives/ref/System.ServiceModel.Primitives.cs
      branch: master
      repo: https://github.com/dotnet/wcf.git
    id: .ctor
    path: src/System.ServiceModel.Primitives/ref/System.ServiceModel.Primitives.cs
    startLine: 430
  assemblies:
  - System.ServiceModel.Primitives
  namespace: System.ServiceModel
  summary: "\n<p>Initializes a new instance of the <xref href=\"System.ServiceModel.MessageHeaderException\" data-throw-if-not-resolved=\"false\"></xref> class using the specified message, header name and namespace.</p>\n"
  syntax:
    content: public MessageHeaderException(string message, string headerName, string ns)
    content.vb: Public Sub New(message As String, headerName As String, ns As String)
    parameters:
    - id: message
      type: System.String
      description: "\n<p>The exception message.</p>\n"
    - id: headerName
      type: System.String
      description: "\n<p>The name of the message header.</p>\n"
    - id: ns
      type: System.String
      description: "\n<p>The namespace of the message header.</p>\n"
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  nameWithType: MessageHeaderException.MessageHeaderException(String, String, String)
- uid: System.ServiceModel.MessageHeaderException.#ctor(System.String,System.String,System.String,System.Boolean)
  commentId: M:System.ServiceModel.MessageHeaderException.#ctor(System.String,System.String,System.String,System.Boolean)
  id: '#ctor(System.String,System.String,System.String,System.Boolean)'
  parent: System.ServiceModel.MessageHeaderException
  langs:
  - csharp
  - vb
  name: MessageHeaderException(String, String, String, Boolean)
  fullName: System.ServiceModel.MessageHeaderException.MessageHeaderException(System.String, System.String, System.String, System.Boolean)
  type: Constructor
  source:
    remote:
      path: src/System.ServiceModel.Primitives/ref/System.ServiceModel.Primitives.cs
      branch: master
      repo: https://github.com/dotnet/wcf.git
    id: .ctor
    path: src/System.ServiceModel.Primitives/ref/System.ServiceModel.Primitives.cs
    startLine: 431
  assemblies:
  - System.ServiceModel.Primitives
  namespace: System.ServiceModel
  summary: "\n<p>Initializes a new instance of the <xref href=\"System.ServiceModel.MessageHeaderException\" data-throw-if-not-resolved=\"false\"></xref> class using the specified message, header name and namespace, and a value that indicates whether the message header is a duplicate or is missing.</p>\n"
  syntax:
    content: public MessageHeaderException(string message, string headerName, string ns, bool isDuplicate)
    content.vb: Public Sub New(message As String, headerName As String, ns As String, isDuplicate As Boolean)
    parameters:
    - id: message
      type: System.String
      description: "\n<p>The exception message.</p>\n"
    - id: headerName
      type: System.String
      description: "\n<p>The name of the message header.</p>\n"
    - id: ns
      type: System.String
      description: "\n<p>The namespace of the message header.</p>\n"
    - id: isDuplicate
      type: System.Boolean
      description: "\n<p>\n<strong>true</strong> if the multiple message header is a duplicate; <strong>false</strong> if there are no message headers.</p>\n"
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  nameWithType: MessageHeaderException.MessageHeaderException(String, String, String, Boolean)
- uid: System.ServiceModel.MessageHeaderException.#ctor(System.String,System.String,System.String,System.Boolean,System.Exception)
  commentId: M:System.ServiceModel.MessageHeaderException.#ctor(System.String,System.String,System.String,System.Boolean,System.Exception)
  id: '#ctor(System.String,System.String,System.String,System.Boolean,System.Exception)'
  parent: System.ServiceModel.MessageHeaderException
  langs:
  - csharp
  - vb
  name: MessageHeaderException(String, String, String, Boolean, Exception)
  fullName: System.ServiceModel.MessageHeaderException.MessageHeaderException(System.String, System.String, System.String, System.Boolean, System.Exception)
  type: Constructor
  source:
    remote:
      path: src/System.ServiceModel.Primitives/ref/System.ServiceModel.Primitives.cs
      branch: master
      repo: https://github.com/dotnet/wcf.git
    id: .ctor
    path: src/System.ServiceModel.Primitives/ref/System.ServiceModel.Primitives.cs
    startLine: 432
  assemblies:
  - System.ServiceModel.Primitives
  namespace: System.ServiceModel
  summary: "\n<p>Initializes a new instance of the <xref href=\"System.ServiceModel.MessageHeaderException\" data-throw-if-not-resolved=\"false\"></xref> class using the specified message, header name and namespace, a value that indicates whether the message header is a duplicate or is missing, and the inner exception that caused the exception.</p>\n"
  syntax:
    content: public MessageHeaderException(string message, string headerName, string ns, bool isDuplicate, Exception innerException)
    content.vb: Public Sub New(message As String, headerName As String, ns As String, isDuplicate As Boolean, innerException As Exception)
    parameters:
    - id: message
      type: System.String
      description: "\n<p>The exception message.</p>\n"
    - id: headerName
      type: System.String
      description: "\n<p>The name of the message header.</p>\n"
    - id: ns
      type: System.String
      description: "\n<p>The namespace of the message header.</p>\n"
    - id: isDuplicate
      type: System.Boolean
      description: "\n<p>\n<strong>true</strong> if the multiple message header is a duplicate; <strong>false</strong> if there are no message headers.</p>\n"
    - id: innerException
      type: System.Exception
      description: "\n<p>The <xref href=\"System.Exception\" data-throw-if-not-resolved=\"false\"></xref> that contains the inner exception that caused the exception.</p>\n"
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  nameWithType: MessageHeaderException.MessageHeaderException(String, String, String, Boolean, Exception)
- uid: System.ServiceModel.MessageHeaderException.#ctor(System.String,System.String,System.String,System.Exception)
  commentId: M:System.ServiceModel.MessageHeaderException.#ctor(System.String,System.String,System.String,System.Exception)
  id: '#ctor(System.String,System.String,System.String,System.Exception)'
  parent: System.ServiceModel.MessageHeaderException
  langs:
  - csharp
  - vb
  name: MessageHeaderException(String, String, String, Exception)
  fullName: System.ServiceModel.MessageHeaderException.MessageHeaderException(System.String, System.String, System.String, System.Exception)
  type: Constructor
  source:
    remote:
      path: src/System.ServiceModel.Primitives/ref/System.ServiceModel.Primitives.cs
      branch: master
      repo: https://github.com/dotnet/wcf.git
    id: .ctor
    path: src/System.ServiceModel.Primitives/ref/System.ServiceModel.Primitives.cs
    startLine: 433
  assemblies:
  - System.ServiceModel.Primitives
  namespace: System.ServiceModel
  summary: "\n<p>Initializes a new instance of the <xref href=\"System.ServiceModel.MessageHeaderException\" data-throw-if-not-resolved=\"false\"></xref> class using the specified message, header name and namespace, and the inner exception that caused the exception.</p>\n"
  syntax:
    content: public MessageHeaderException(string message, string headerName, string ns, Exception innerException)
    content.vb: Public Sub New(message As String, headerName As String, ns As String, innerException As Exception)
    parameters:
    - id: message
      type: System.String
      description: "\n<p>The exception message.</p>\n"
    - id: headerName
      type: System.String
      description: "\n<p>The name of the message header.</p>\n"
    - id: ns
      type: System.String
      description: "\n<p>The namespace of the message header.</p>\n"
    - id: innerException
      type: System.Exception
      description: "\n<p>The <xref href=\"System.Exception\" data-throw-if-not-resolved=\"false\"></xref> that contains the inner exception that caused the exception.</p>\n"
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  nameWithType: MessageHeaderException.MessageHeaderException(String, String, String, Exception)
- uid: System.ServiceModel.MessageHeaderException.HeaderName
  commentId: P:System.ServiceModel.MessageHeaderException.HeaderName
  id: HeaderName
  parent: System.ServiceModel.MessageHeaderException
  langs:
  - csharp
  - vb
  name: HeaderName
  fullName: System.ServiceModel.MessageHeaderException.HeaderName
  type: Property
  source:
    remote:
      path: src/System.ServiceModel.Primitives/ref/System.ServiceModel.Primitives.cs
      branch: master
      repo: https://github.com/dotnet/wcf.git
    id: HeaderName
    path: src/System.ServiceModel.Primitives/ref/System.ServiceModel.Primitives.cs
    startLine: 434
  assemblies:
  - System.ServiceModel.Primitives
  namespace: System.ServiceModel
  summary: "\n<p>Gets the name of the SOAP header that caused the exception.</p>\n"
  syntax:
    content: public string HeaderName { get; }
    content.vb: Public ReadOnly Property HeaderName As String
    parameters: []
    return:
      type: System.String
      description: "\n<p>The name of the SOAP header.</p>\n"
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
  nameWithType: MessageHeaderException.HeaderName
- uid: System.ServiceModel.MessageHeaderException.HeaderNamespace
  commentId: P:System.ServiceModel.MessageHeaderException.HeaderNamespace
  id: HeaderNamespace
  parent: System.ServiceModel.MessageHeaderException
  langs:
  - csharp
  - vb
  name: HeaderNamespace
  fullName: System.ServiceModel.MessageHeaderException.HeaderNamespace
  type: Property
  source:
    remote:
      path: src/System.ServiceModel.Primitives/ref/System.ServiceModel.Primitives.cs
      branch: master
      repo: https://github.com/dotnet/wcf.git
    id: HeaderNamespace
    path: src/System.ServiceModel.Primitives/ref/System.ServiceModel.Primitives.cs
    startLine: 435
  assemblies:
  - System.ServiceModel.Primitives
  namespace: System.ServiceModel
  summary: "\n<p>Gets the namespace of the SOAP header that caused the exception.</p>\n"
  syntax:
    content: public string HeaderNamespace { get; }
    content.vb: Public ReadOnly Property HeaderNamespace As String
    parameters: []
    return:
      type: System.String
      description: "\n<p>The namespace of the SOAP header.</p>\n"
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
  nameWithType: MessageHeaderException.HeaderNamespace
- uid: System.ServiceModel.MessageHeaderException.IsDuplicate
  commentId: P:System.ServiceModel.MessageHeaderException.IsDuplicate
  id: IsDuplicate
  parent: System.ServiceModel.MessageHeaderException
  langs:
  - csharp
  - vb
  name: IsDuplicate
  fullName: System.ServiceModel.MessageHeaderException.IsDuplicate
  type: Property
  source:
    remote:
      path: src/System.ServiceModel.Primitives/ref/System.ServiceModel.Primitives.cs
      branch: master
      repo: https://github.com/dotnet/wcf.git
    id: IsDuplicate
    path: src/System.ServiceModel.Primitives/ref/System.ServiceModel.Primitives.cs
    startLine: 436
  assemblies:
  - System.ServiceModel.Primitives
  namespace: System.ServiceModel
  summary: "\n<p>Gets a value that indicates whether there are multiple message headers or no message headers.</p>\n"
  syntax:
    content: public bool IsDuplicate { get; }
    content.vb: Public ReadOnly Property IsDuplicate As Boolean
    parameters: []
    return:
      type: System.Boolean
      description: "\n<p>\n<strong>true</strong> if the multiple message header is a duplicate; <strong>false</strong> if there are no message headers.</p>\n"
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
  nameWithType: MessageHeaderException.IsDuplicate
references:
- uid: System.ServiceModel
  isExternal: false
  name: System.ServiceModel
  fullName: System.ServiceModel
  commentId: N:System.ServiceModel
  nameWithType: System.ServiceModel
- uid: System.Object
  parent: System
  isExternal: false
  name: Object
  fullName: System.Object
  commentId: T:System.Object
  nameWithType: Object
- uid: System.Exception
  parent: System
  isExternal: false
  name: Exception
  fullName: System.Exception
  commentId: T:System.Exception
  nameWithType: Exception
- uid: System.ServiceModel.CommunicationException
  parent: System.ServiceModel
  isExternal: false
  name: CommunicationException
  fullName: System.ServiceModel.CommunicationException
  commentId: T:System.ServiceModel.CommunicationException
  nameWithType: CommunicationException
- uid: System.ServiceModel.ProtocolException
  parent: System.ServiceModel
  isExternal: false
  name: ProtocolException
  fullName: System.ServiceModel.ProtocolException
  commentId: T:System.ServiceModel.ProtocolException
  nameWithType: ProtocolException
- uid: System.Runtime.Serialization.ISerializable
  parent: System.Runtime.Serialization
  isExternal: false
  name: ISerializable
  fullName: System.Runtime.Serialization.ISerializable
  commentId: T:System.Runtime.Serialization.ISerializable
  nameWithType: ISerializable
- uid: System.Runtime.InteropServices._Exception
  parent: System.Runtime.InteropServices
  isExternal: true
  name: _Exception
  fullName: System.Runtime.InteropServices._Exception
  commentId: T:System.Runtime.InteropServices._Exception
  nameWithType: _Exception
- uid: System.Exception.GetBaseException
  parent: System.Exception
  isExternal: false
  name: GetBaseException()
  fullName: System.Exception.GetBaseException()
  spec.csharp:
  - uid: System.Exception.GetBaseException
    name: GetBaseException
    fullName: System.Exception.GetBaseException
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Exception.GetBaseException
    name: GetBaseException
    fullName: System.Exception.GetBaseException
  - name: (
    fullName: (
  - name: )
    fullName: )
  commentId: M:System.Exception.GetBaseException
  nameWithType: Exception.GetBaseException()
- uid: System.Exception.ToString
  parent: System.Exception
  isExternal: false
  name: ToString()
  fullName: System.Exception.ToString()
  spec.csharp:
  - uid: System.Exception.ToString
    name: ToString
    fullName: System.Exception.ToString
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Exception.ToString
    name: ToString
    fullName: System.Exception.ToString
  - name: (
    fullName: (
  - name: )
    fullName: )
  commentId: M:System.Exception.ToString
  nameWithType: Exception.ToString()
- uid: System.Exception.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)
  parent: System.Exception
  isExternal: true
  name: GetObjectData(SerializationInfo, StreamingContext)
  fullName: System.Exception.GetObjectData(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext)
  spec.csharp:
  - uid: System.Exception.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)
    name: GetObjectData
    fullName: System.Exception.GetObjectData
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Runtime.Serialization.SerializationInfo
    name: SerializationInfo
    fullName: System.Runtime.Serialization.SerializationInfo
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Runtime.Serialization.StreamingContext
    name: StreamingContext
    fullName: System.Runtime.Serialization.StreamingContext
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Exception.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)
    name: GetObjectData
    fullName: System.Exception.GetObjectData
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Runtime.Serialization.SerializationInfo
    name: SerializationInfo
    fullName: System.Runtime.Serialization.SerializationInfo
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Runtime.Serialization.StreamingContext
    name: StreamingContext
    fullName: System.Runtime.Serialization.StreamingContext
    isExternal: true
  - name: )
    fullName: )
  commentId: M:System.Exception.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)
  nameWithType: Exception.GetObjectData(SerializationInfo, StreamingContext)
- uid: System.Exception.GetType
  parent: System.Exception
  isExternal: true
  name: GetType()
  fullName: System.Exception.GetType()
  spec.csharp:
  - uid: System.Exception.GetType
    name: GetType
    fullName: System.Exception.GetType
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Exception.GetType
    name: GetType
    fullName: System.Exception.GetType
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  commentId: M:System.Exception.GetType
  nameWithType: Exception.GetType()
- uid: System.Exception.Message
  parent: System.Exception
  isExternal: false
  name: Message
  fullName: System.Exception.Message
  commentId: P:System.Exception.Message
  nameWithType: Exception.Message
- uid: System.Exception.Data
  parent: System.Exception
  isExternal: false
  name: Data
  fullName: System.Exception.Data
  commentId: P:System.Exception.Data
  nameWithType: Exception.Data
- uid: System.Exception.InnerException
  parent: System.Exception
  isExternal: false
  name: InnerException
  fullName: System.Exception.InnerException
  commentId: P:System.Exception.InnerException
  nameWithType: Exception.InnerException
- uid: System.Exception.TargetSite
  parent: System.Exception
  isExternal: true
  name: TargetSite
  fullName: System.Exception.TargetSite
  commentId: P:System.Exception.TargetSite
  nameWithType: Exception.TargetSite
- uid: System.Exception.StackTrace
  parent: System.Exception
  isExternal: false
  name: StackTrace
  fullName: System.Exception.StackTrace
  commentId: P:System.Exception.StackTrace
  nameWithType: Exception.StackTrace
- uid: System.Exception.HelpLink
  parent: System.Exception
  isExternal: false
  name: HelpLink
  fullName: System.Exception.HelpLink
  commentId: P:System.Exception.HelpLink
  nameWithType: Exception.HelpLink
- uid: System.Exception.Source
  parent: System.Exception
  isExternal: false
  name: Source
  fullName: System.Exception.Source
  commentId: P:System.Exception.Source
  nameWithType: Exception.Source
- uid: System.Exception.HResult
  parent: System.Exception
  isExternal: false
  name: HResult
  fullName: System.Exception.HResult
  commentId: P:System.Exception.HResult
  nameWithType: Exception.HResult
- uid: System.Exception.SerializeObjectState
  parent: System.Exception
  isExternal: true
  name: SerializeObjectState
  fullName: System.Exception.SerializeObjectState
  commentId: E:System.Exception.SerializeObjectState
  nameWithType: Exception.SerializeObjectState
- uid: System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
  commentId: M:System.Object.Equals(System.Object)
  nameWithType: Object.Equals(Object)
- uid: System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
  commentId: M:System.Object.Equals(System.Object,System.Object)
  nameWithType: Object.Equals(Object, Object)
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
- uid: System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  commentId: M:System.Object.GetHashCode
  nameWithType: Object.GetHashCode()
- uid: System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  commentId: M:System.Object.MemberwiseClone
  nameWithType: Object.MemberwiseClone()
- uid: System
  isExternal: false
  name: System
  fullName: System
  commentId: N:System
  nameWithType: System
- uid: System.Runtime.Serialization
  isExternal: false
  name: System.Runtime.Serialization
  fullName: System.Runtime.Serialization
  commentId: N:System.Runtime.Serialization
  nameWithType: System.Runtime.Serialization
- uid: System.Runtime.InteropServices
  isExternal: false
  name: System.Runtime.InteropServices
  fullName: System.Runtime.InteropServices
  commentId: N:System.Runtime.InteropServices
  nameWithType: System.Runtime.InteropServices
- uid: System.String
  parent: System
  isExternal: false
  name: String
  fullName: System.String
  commentId: T:System.String
  nameWithType: String
- uid: System.Boolean
  parent: System
  isExternal: false
  name: Boolean
  fullName: System.Boolean
  commentId: T:System.Boolean
  nameWithType: Boolean
