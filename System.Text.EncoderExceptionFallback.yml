### YamlMime:ManagedReference
items:
- uid: System.Text.EncoderExceptionFallback
  commentId: T:System.Text.EncoderExceptionFallback
  id: EncoderExceptionFallback
  parent: System.Text
  children:
  - System.Text.EncoderExceptionFallback.#ctor
  - System.Text.EncoderExceptionFallback.CreateFallbackBuffer
  - System.Text.EncoderExceptionFallback.Equals(System.Object)
  - System.Text.EncoderExceptionFallback.GetHashCode
  - System.Text.EncoderExceptionFallback.MaxCharCount
  langs:
  - csharp
  - vb
  name: EncoderExceptionFallback
  nameWithType: EncoderExceptionFallback
  fullName: System.Text.EncoderExceptionFallback
  type: Class
  source:
    remote:
      path: src/mscorlib/src/System/Text/EncoderExceptionFallback.cs
      branch: master
      repo: https://github.com/dotnet/coreclr.git
    id: EncoderExceptionFallback
    path: src/mscorlib/src/System/Text/EncoderExceptionFallback.cs
    startLine: 10
  assemblies:
  - System.Text.Encoding
  namespace: System.Text
  summary: "\n<p>Provides a failure-handling mechanism, called a fallback, for an input character that cannot be converted to an output byte sequence. The fallback throws an exception if an input character cannot be converted to an output byte sequence. This class cannot be inherited.</p>\n"
  syntax:
    content: >-
      [Serializable]

      public sealed class EncoderExceptionFallback : EncoderFallback
    content.vb: >-
      <Serializable>

      Public NotInheritable Class EncoderExceptionFallback
          Inherits EncoderFallback
  inheritance:
  - System.Object
  - System.Text.EncoderFallback
  inheritedMembers:
  - System.Text.EncoderFallback.ExceptionFallback
  - System.Text.EncoderFallback.ReplacementFallback
  - System.Object.ToString
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetType
  - System.Object.MemberwiseClone
  modifiers.csharp:
  - public
  - sealed
  - class
  modifiers.vb:
  - Public
  - NotInheritable
  - Class
- uid: System.Text.EncoderExceptionFallback.#ctor
  commentId: M:System.Text.EncoderExceptionFallback.#ctor
  id: '#ctor'
  parent: System.Text.EncoderExceptionFallback
  langs:
  - csharp
  - vb
  name: EncoderExceptionFallback()
  nameWithType: EncoderExceptionFallback.EncoderExceptionFallback()
  fullName: System.Text.EncoderExceptionFallback.EncoderExceptionFallback()
  type: Constructor
  source:
    remote:
      path: src/mscorlib/src/System/Text/EncoderExceptionFallback.cs
      branch: master
      repo: https://github.com/dotnet/coreclr.git
    id: .ctor
    path: src/mscorlib/src/System/Text/EncoderExceptionFallback.cs
    startLine: 14
  assemblies:
  - System.Text.Encoding
  namespace: System.Text
  summary: "\n<p>Initializes a new instance of the <xref href=\"System.Text.EncoderExceptionFallback\" data-throw-if-not-resolved=\"false\"></xref> class.</p>\n"
  syntax:
    content: public EncoderExceptionFallback()
    content.vb: Public Sub New
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: System.Text.EncoderExceptionFallback.MaxCharCount
  commentId: P:System.Text.EncoderExceptionFallback.MaxCharCount
  id: MaxCharCount
  parent: System.Text.EncoderExceptionFallback
  langs:
  - csharp
  - vb
  name: MaxCharCount
  nameWithType: EncoderExceptionFallback.MaxCharCount
  fullName: System.Text.EncoderExceptionFallback.MaxCharCount
  type: Property
  source:
    remote:
      path: src/mscorlib/src/System/Text/EncoderExceptionFallback.cs
      branch: master
      repo: https://github.com/dotnet/coreclr.git
    id: MaxCharCount
    path: src/mscorlib/src/System/Text/EncoderExceptionFallback.cs
    startLine: 24
  assemblies:
  - System.Text.Encoding
  namespace: System.Text
  summary: "\n<p>Gets the maximum number of characters this instance can return.</p>\n"
  syntax:
    content: public override int MaxCharCount { get; }
    content.vb: Public Overrides ReadOnly Property MaxCharCount As Integer
    parameters: []
    return:
      type: System.Int32
      description: "\n<p>The return value is always zero.</p>\n"
  overridden: System.Text.EncoderFallback.MaxCharCount
  modifiers.csharp:
  - public
  - override
  - get
  modifiers.vb:
  - Public
  - Overrides
  - ReadOnly
- uid: System.Text.EncoderExceptionFallback.CreateFallbackBuffer
  commentId: M:System.Text.EncoderExceptionFallback.CreateFallbackBuffer
  id: CreateFallbackBuffer
  parent: System.Text.EncoderExceptionFallback
  langs:
  - csharp
  - vb
  name: CreateFallbackBuffer()
  nameWithType: EncoderExceptionFallback.CreateFallbackBuffer()
  fullName: System.Text.EncoderExceptionFallback.CreateFallbackBuffer()
  type: Method
  source:
    remote:
      path: src/mscorlib/src/System/Text/EncoderExceptionFallback.cs
      branch: master
      repo: https://github.com/dotnet/coreclr.git
    id: CreateFallbackBuffer
    path: src/mscorlib/src/System/Text/EncoderExceptionFallback.cs
    startLine: 18
  assemblies:
  - System.Text.Encoding
  namespace: System.Text
  summary: "\n<p>Returns an encoder fallback buffer that throws an exception if it cannot convert a character sequence to a byte sequence.</p>\n"
  syntax:
    content: public override EncoderFallbackBuffer CreateFallbackBuffer()
    content.vb: Public Overrides Function CreateFallbackBuffer As EncoderFallbackBuffer
    return:
      type: System.Text.EncoderFallbackBuffer
      description: "\n<p>An encoder fallback buffer that throws an exception when it cannot encode a character sequence.</p>\n"
  overridden: System.Text.EncoderFallback.CreateFallbackBuffer
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
- uid: System.Text.EncoderExceptionFallback.Equals(System.Object)
  commentId: M:System.Text.EncoderExceptionFallback.Equals(System.Object)
  id: Equals(System.Object)
  parent: System.Text.EncoderExceptionFallback
  langs:
  - csharp
  - vb
  name: Equals(Object)
  nameWithType: EncoderExceptionFallback.Equals(Object)
  fullName: System.Text.EncoderExceptionFallback.Equals(System.Object)
  type: Method
  source:
    remote:
      path: src/mscorlib/src/System/Text/EncoderExceptionFallback.cs
      branch: master
      repo: https://github.com/dotnet/coreclr.git
    id: Equals
    path: src/mscorlib/src/System/Text/EncoderExceptionFallback.cs
    startLine: 32
  assemblies:
  - System.Text.Encoding
  namespace: System.Text
  summary: "\n<p>Indicates whether the current <xref href=\"System.Text.EncoderExceptionFallback\" data-throw-if-not-resolved=\"false\"></xref> object and a specified object are equal.</p>\n"
  syntax:
    content: public override bool Equals(object value)
    content.vb: Public Overrides Function Equals(value As Object) As Boolean
    parameters:
    - id: value
      type: System.Object
      description: "\n<p>An object that derives from the <xref href=\"System.Text.EncoderExceptionFallback\" data-throw-if-not-resolved=\"false\"></xref> class.</p>\n"
    return:
      type: System.Boolean
      description: "\n<p>\n<strong>true</strong> if <em>value</em> is not <strong>null</strong> (<strong>Nothing</strong> in Visual Basic .NET) and is a <xref href=\"System.Text.EncoderExceptionFallback\" data-throw-if-not-resolved=\"false\"></xref> object; otherwise, <strong>false</strong>.</p>\n"
  overridden: System.Object.Equals(System.Object)
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
- uid: System.Text.EncoderExceptionFallback.GetHashCode
  commentId: M:System.Text.EncoderExceptionFallback.GetHashCode
  id: GetHashCode
  parent: System.Text.EncoderExceptionFallback
  langs:
  - csharp
  - vb
  name: GetHashCode()
  nameWithType: EncoderExceptionFallback.GetHashCode()
  fullName: System.Text.EncoderExceptionFallback.GetHashCode()
  type: Method
  source:
    remote:
      path: src/mscorlib/src/System/Text/EncoderExceptionFallback.cs
      branch: master
      repo: https://github.com/dotnet/coreclr.git
    id: GetHashCode
    path: src/mscorlib/src/System/Text/EncoderExceptionFallback.cs
    startLine: 42
  assemblies:
  - System.Text.Encoding
  namespace: System.Text
  summary: "\n<p>Retrieves the hash code for this instance.</p>\n"
  syntax:
    content: public override int GetHashCode()
    content.vb: Public Overrides Function GetHashCode As Integer
    return:
      type: System.Int32
      description: "\n<p>The return value is always the same arbitrary value, and has no special significance. </p>\n"
  overridden: System.Object.GetHashCode
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
references:
- uid: System.Text
  commentId: N:System.Text
  isExternal: false
  name: System.Text
  nameWithType: System.Text
  fullName: System.Text
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: false
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Text.EncoderFallback
  commentId: T:System.Text.EncoderFallback
  parent: System.Text
  isExternal: false
  name: EncoderFallback
  nameWithType: EncoderFallback
  fullName: System.Text.EncoderFallback
- uid: System.Text.EncoderFallback.ExceptionFallback
  commentId: P:System.Text.EncoderFallback.ExceptionFallback
  parent: System.Text.EncoderFallback
  isExternal: false
  name: ExceptionFallback
  nameWithType: EncoderFallback.ExceptionFallback
  fullName: System.Text.EncoderFallback.ExceptionFallback
- uid: System.Text.EncoderFallback.ReplacementFallback
  commentId: P:System.Text.EncoderFallback.ReplacementFallback
  parent: System.Text.EncoderFallback
  isExternal: false
  name: ReplacementFallback
  nameWithType: EncoderFallback.ReplacementFallback
  fullName: System.Text.EncoderFallback.ReplacementFallback
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: System.Text.EncoderFallback.MaxCharCount
  commentId: P:System.Text.EncoderFallback.MaxCharCount
  parent: System.Text.EncoderFallback
  isExternal: false
  name: MaxCharCount
  nameWithType: EncoderFallback.MaxCharCount
  fullName: System.Text.EncoderFallback.MaxCharCount
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: false
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Text.EncoderFallback.CreateFallbackBuffer
  commentId: M:System.Text.EncoderFallback.CreateFallbackBuffer
  parent: System.Text.EncoderFallback
  isExternal: false
  name: CreateFallbackBuffer()
  nameWithType: EncoderFallback.CreateFallbackBuffer()
  fullName: System.Text.EncoderFallback.CreateFallbackBuffer()
  spec.csharp:
  - uid: System.Text.EncoderFallback.CreateFallbackBuffer
    name: CreateFallbackBuffer
    nameWithType: EncoderFallback.CreateFallbackBuffer
    fullName: System.Text.EncoderFallback.CreateFallbackBuffer
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Text.EncoderFallback.CreateFallbackBuffer
    name: CreateFallbackBuffer
    nameWithType: EncoderFallback.CreateFallbackBuffer
    fullName: System.Text.EncoderFallback.CreateFallbackBuffer
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Text.EncoderFallbackBuffer
  commentId: T:System.Text.EncoderFallbackBuffer
  parent: System.Text
  isExternal: false
  name: EncoderFallbackBuffer
  nameWithType: EncoderFallbackBuffer
  fullName: System.Text.EncoderFallbackBuffer
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: false
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
