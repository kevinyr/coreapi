items:
- uid: System.Security.Cryptography.X509Certificates.X509Store
  commentId: T:System.Security.Cryptography.X509Certificates.X509Store
  id: X509Store
  parent: System.Security.Cryptography.X509Certificates
  children:
  - System.Security.Cryptography.X509Certificates.X509Store.#ctor
  - System.Security.Cryptography.X509Certificates.X509Store.#ctor(System.Security.Cryptography.X509Certificates.StoreName,System.Security.Cryptography.X509Certificates.StoreLocation)
  - System.Security.Cryptography.X509Certificates.X509Store.#ctor(System.String,System.Security.Cryptography.X509Certificates.StoreLocation)
  - System.Security.Cryptography.X509Certificates.X509Store.Add(System.Security.Cryptography.X509Certificates.X509Certificate2)
  - System.Security.Cryptography.X509Certificates.X509Store.Certificates
  - System.Security.Cryptography.X509Certificates.X509Store.Dispose
  - System.Security.Cryptography.X509Certificates.X509Store.Location
  - System.Security.Cryptography.X509Certificates.X509Store.Name
  - System.Security.Cryptography.X509Certificates.X509Store.Open(System.Security.Cryptography.X509Certificates.OpenFlags)
  - System.Security.Cryptography.X509Certificates.X509Store.Remove(System.Security.Cryptography.X509Certificates.X509Certificate2)
  langs:
  - csharp
  - vb
  name: X509Store
  fullName: System.Security.Cryptography.X509Certificates.X509Store
  type: Class
  source:
    remote:
      path: src/System.Security.Cryptography.X509Certificates/ref/4.0/System.Security.Cryptography.X509Certificates.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: X509Store
    path: src/System.Security.Cryptography.X509Certificates/ref/4.0/System.Security.Cryptography.X509Certificates.cs
    startLine: 417
  assemblies:
  - System.Security.Cryptography.X509Certificates
  namespace: System.Security.Cryptography.X509Certificates
  summary: "\n<p>Represents an X.509 store, which is a physical store where certificates are persisted and managed. This class cannot be inherited.</p>\n"
  syntax:
    content: 'public sealed class X509Store : IDisposable'
    content.vb: >-
      Public NotInheritable Class X509Store
          Implements IDisposable
  inheritance:
  - System.Object
  implements:
  - System.IDisposable
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  modifiers.csharp:
  - public
  - sealed
  - class
  modifiers.vb:
  - Public
  - NotInheritable
  - Class
  nameWithType: X509Store
- uid: System.Security.Cryptography.X509Certificates.X509Store.#ctor
  commentId: M:System.Security.Cryptography.X509Certificates.X509Store.#ctor
  id: '#ctor'
  parent: System.Security.Cryptography.X509Certificates.X509Store
  langs:
  - csharp
  - vb
  name: X509Store()
  fullName: System.Security.Cryptography.X509Certificates.X509Store.X509Store()
  type: Constructor
  source:
    remote:
      path: src/System.Security.Cryptography.X509Certificates/ref/4.0/System.Security.Cryptography.X509Certificates.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: .ctor
    path: src/System.Security.Cryptography.X509Certificates/ref/4.0/System.Security.Cryptography.X509Certificates.cs
    startLine: 419
  assemblies:
  - System.Security.Cryptography.X509Certificates
  namespace: System.Security.Cryptography.X509Certificates
  summary: "\n<p>Initializes a new instance of the <xref href=\"System.Security.Cryptography.X509Certificates.X509Store\" data-throw-if-not-resolved=\"false\"></xref> class using the personal certificates of the current user store.</p>\n"
  syntax:
    content: public X509Store()
    content.vb: Public Sub New
  see:
  - type: System.Security.Permissions.StorePermission
    commentId: T:System.Security.Permissions.StorePermission
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  nameWithType: X509Store.X509Store()
- uid: System.Security.Cryptography.X509Certificates.X509Store.#ctor(System.Security.Cryptography.X509Certificates.StoreName,System.Security.Cryptography.X509Certificates.StoreLocation)
  commentId: M:System.Security.Cryptography.X509Certificates.X509Store.#ctor(System.Security.Cryptography.X509Certificates.StoreName,System.Security.Cryptography.X509Certificates.StoreLocation)
  id: '#ctor(System.Security.Cryptography.X509Certificates.StoreName,System.Security.Cryptography.X509Certificates.StoreLocation)'
  parent: System.Security.Cryptography.X509Certificates.X509Store
  langs:
  - csharp
  - vb
  name: X509Store(StoreName, StoreLocation)
  fullName: System.Security.Cryptography.X509Certificates.X509Store.X509Store(System.Security.Cryptography.X509Certificates.StoreName, System.Security.Cryptography.X509Certificates.StoreLocation)
  type: Constructor
  source:
    remote:
      path: src/System.Security.Cryptography.X509Certificates/ref/4.0/System.Security.Cryptography.X509Certificates.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: .ctor
    path: src/System.Security.Cryptography.X509Certificates/ref/4.0/System.Security.Cryptography.X509Certificates.cs
    startLine: 420
  assemblies:
  - System.Security.Cryptography.X509Certificates
  namespace: System.Security.Cryptography.X509Certificates
  summary: "\n<p>Initializes a new instance of the <xref href=\"System.Security.Cryptography.X509Certificates.X509Store\" data-throw-if-not-resolved=\"false\"></xref> class using the specified <xref href=\"System.Security.Cryptography.X509Certificates.StoreName\" data-throw-if-not-resolved=\"false\"></xref> and <xref href=\"System.Security.Cryptography.X509Certificates.StoreLocation\" data-throw-if-not-resolved=\"false\"></xref> values.</p>\n"
  syntax:
    content: public X509Store(StoreName storeName, StoreLocation storeLocation)
    content.vb: Public Sub New(storeName As StoreName, storeLocation As StoreLocation)
    parameters:
    - id: storeName
      type: System.Security.Cryptography.X509Certificates.StoreName
      description: "\n<p>One of the enumeration values that specifies the name of the X.509 certificate store. </p>\n"
    - id: storeLocation
      type: System.Security.Cryptography.X509Certificates.StoreLocation
      description: "\n<p>One of the enumeration values that specifies the location of the X.509 certificate store. </p>\n"
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "\n<p>\n<em>storeLocation</em> is not a valid location or <em>storeName</em> is not a valid name. </p>\n"
  see:
  - type: System.Security.Permissions.StorePermission
    commentId: T:System.Security.Permissions.StorePermission
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  nameWithType: X509Store.X509Store(StoreName, StoreLocation)
- uid: System.Security.Cryptography.X509Certificates.X509Store.#ctor(System.String,System.Security.Cryptography.X509Certificates.StoreLocation)
  commentId: M:System.Security.Cryptography.X509Certificates.X509Store.#ctor(System.String,System.Security.Cryptography.X509Certificates.StoreLocation)
  id: '#ctor(System.String,System.Security.Cryptography.X509Certificates.StoreLocation)'
  parent: System.Security.Cryptography.X509Certificates.X509Store
  langs:
  - csharp
  - vb
  name: X509Store(String, StoreLocation)
  fullName: System.Security.Cryptography.X509Certificates.X509Store.X509Store(System.String, System.Security.Cryptography.X509Certificates.StoreLocation)
  type: Constructor
  source:
    remote:
      path: src/System.Security.Cryptography.X509Certificates/ref/4.0/System.Security.Cryptography.X509Certificates.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: .ctor
    path: src/System.Security.Cryptography.X509Certificates/ref/4.0/System.Security.Cryptography.X509Certificates.cs
    startLine: 421
  assemblies:
  - System.Security.Cryptography.X509Certificates
  namespace: System.Security.Cryptography.X509Certificates
  summary: "\n<p>Initializes a new instance of the <xref href=\"System.Security.Cryptography.X509Certificates.X509Store\" data-throw-if-not-resolved=\"false\"></xref> class using a string that represents a value from the <xref href=\"System.Security.Cryptography.X509Certificates.StoreName\" data-throw-if-not-resolved=\"false\"></xref> enumeration and a value from the <xref href=\"System.Security.Cryptography.X509Certificates.StoreLocation\" data-throw-if-not-resolved=\"false\"></xref> enumeration.</p>\n"
  syntax:
    content: public X509Store(string storeName, StoreLocation storeLocation)
    content.vb: Public Sub New(storeName As String, storeLocation As StoreLocation)
    parameters:
    - id: storeName
      type: System.String
      description: "\n<p>A string that represents a value from the <xref href=\"System.Security.Cryptography.X509Certificates.StoreName\" data-throw-if-not-resolved=\"false\"></xref> enumeration. </p>\n"
    - id: storeLocation
      type: System.Security.Cryptography.X509Certificates.StoreLocation
      description: "\n<p>One of the enumeration values that specifies the location of the X.509 certificate store. </p>\n"
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "\n<p>\n<em>storeLocation</em> contains invalid values. </p>\n"
  see:
  - type: System.Security.Permissions.StorePermission
    commentId: T:System.Security.Permissions.StorePermission
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  nameWithType: X509Store.X509Store(String, StoreLocation)
- uid: System.Security.Cryptography.X509Certificates.X509Store.Certificates
  commentId: P:System.Security.Cryptography.X509Certificates.X509Store.Certificates
  id: Certificates
  parent: System.Security.Cryptography.X509Certificates.X509Store
  langs:
  - csharp
  - vb
  name: Certificates
  fullName: System.Security.Cryptography.X509Certificates.X509Store.Certificates
  type: Property
  source:
    remote:
      path: src/System.Security.Cryptography.X509Certificates/ref/4.0/System.Security.Cryptography.X509Certificates.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: Certificates
    path: src/System.Security.Cryptography.X509Certificates/ref/4.0/System.Security.Cryptography.X509Certificates.cs
    startLine: 422
  assemblies:
  - System.Security.Cryptography.X509Certificates
  namespace: System.Security.Cryptography.X509Certificates
  summary: "\n<p>Returns a collection of certificates located in an X.509 certificate store.</p>\n"
  syntax:
    content: public X509Certificate2Collection Certificates { get; }
    content.vb: Public ReadOnly Property Certificates As X509Certificate2Collection
    parameters: []
    return:
      type: System.Security.Cryptography.X509Certificates.X509Certificate2Collection
      description: "\n<p>A collection of certificates.</p>\n"
  see:
  - type: System.Security.Permissions.StorePermission
    commentId: T:System.Security.Permissions.StorePermission
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
  nameWithType: X509Store.Certificates
- uid: System.Security.Cryptography.X509Certificates.X509Store.Location
  commentId: P:System.Security.Cryptography.X509Certificates.X509Store.Location
  id: Location
  parent: System.Security.Cryptography.X509Certificates.X509Store
  langs:
  - csharp
  - vb
  name: Location
  fullName: System.Security.Cryptography.X509Certificates.X509Store.Location
  type: Property
  source:
    remote:
      path: src/System.Security.Cryptography.X509Certificates/ref/4.0/System.Security.Cryptography.X509Certificates.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: Location
    path: src/System.Security.Cryptography.X509Certificates/ref/4.0/System.Security.Cryptography.X509Certificates.cs
    startLine: 423
  assemblies:
  - System.Security.Cryptography.X509Certificates
  namespace: System.Security.Cryptography.X509Certificates
  summary: "\n<p>Gets the location of the X.509 certificate store.</p>\n"
  syntax:
    content: public StoreLocation Location { get; }
    content.vb: Public ReadOnly Property Location As StoreLocation
    parameters: []
    return:
      type: System.Security.Cryptography.X509Certificates.StoreLocation
      description: "\n<p>The location of the certificate store.</p>\n"
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
  nameWithType: X509Store.Location
- uid: System.Security.Cryptography.X509Certificates.X509Store.Name
  commentId: P:System.Security.Cryptography.X509Certificates.X509Store.Name
  id: Name
  parent: System.Security.Cryptography.X509Certificates.X509Store
  langs:
  - csharp
  - vb
  name: Name
  fullName: System.Security.Cryptography.X509Certificates.X509Store.Name
  type: Property
  source:
    remote:
      path: src/System.Security.Cryptography.X509Certificates/ref/4.0/System.Security.Cryptography.X509Certificates.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: Name
    path: src/System.Security.Cryptography.X509Certificates/ref/4.0/System.Security.Cryptography.X509Certificates.cs
    startLine: 424
  assemblies:
  - System.Security.Cryptography.X509Certificates
  namespace: System.Security.Cryptography.X509Certificates
  summary: "\n<p>Gets the name of the X.509 certificate store.</p>\n"
  syntax:
    content: public string Name { get; }
    content.vb: Public ReadOnly Property Name As String
    parameters: []
    return:
      type: System.String
      description: "\n<p>The name of the certificate store.</p>\n"
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
  nameWithType: X509Store.Name
- uid: System.Security.Cryptography.X509Certificates.X509Store.Add(System.Security.Cryptography.X509Certificates.X509Certificate2)
  commentId: M:System.Security.Cryptography.X509Certificates.X509Store.Add(System.Security.Cryptography.X509Certificates.X509Certificate2)
  id: Add(System.Security.Cryptography.X509Certificates.X509Certificate2)
  parent: System.Security.Cryptography.X509Certificates.X509Store
  langs:
  - csharp
  - vb
  name: Add(X509Certificate2)
  fullName: System.Security.Cryptography.X509Certificates.X509Store.Add(System.Security.Cryptography.X509Certificates.X509Certificate2)
  type: Method
  source:
    remote:
      path: src/System.Security.Cryptography.X509Certificates/ref/4.0/System.Security.Cryptography.X509Certificates.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: Add
    path: src/System.Security.Cryptography.X509Certificates/ref/4.0/System.Security.Cryptography.X509Certificates.cs
    startLine: 425
  assemblies:
  - System.Security.Cryptography.X509Certificates
  namespace: System.Security.Cryptography.X509Certificates
  summary: "\n<p>Adds a certificate to an X.509 certificate store.</p>\n"
  syntax:
    content: public void Add(X509Certificate2 certificate)
    content.vb: Public Sub Add(certificate As X509Certificate2)
    parameters:
    - id: certificate
      type: System.Security.Cryptography.X509Certificates.X509Certificate2
      description: "\n<p>The certificate to add. </p>\n"
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "\n<p>\n<em>certificate</em> is <strong>null</strong>. </p>\n"
  - type: System.Security.Cryptography.CryptographicException
    commentId: T:System.Security.Cryptography.CryptographicException
    description: "\n<p>The certificate could not be added to the store.</p>\n"
  see:
  - type: System.Security.Permissions.StorePermission
    commentId: T:System.Security.Permissions.StorePermission
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  nameWithType: X509Store.Add(X509Certificate2)
- uid: System.Security.Cryptography.X509Certificates.X509Store.Dispose
  commentId: M:System.Security.Cryptography.X509Certificates.X509Store.Dispose
  id: Dispose
  parent: System.Security.Cryptography.X509Certificates.X509Store
  langs:
  - csharp
  - vb
  name: Dispose()
  fullName: System.Security.Cryptography.X509Certificates.X509Store.Dispose()
  type: Method
  source:
    remote:
      path: src/System.Security.Cryptography.X509Certificates/ref/4.0/System.Security.Cryptography.X509Certificates.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: Dispose
    path: src/System.Security.Cryptography.X509Certificates/ref/4.0/System.Security.Cryptography.X509Certificates.cs
    startLine: 426
  assemblies:
  - System.Security.Cryptography.X509Certificates
  namespace: System.Security.Cryptography.X509Certificates
  summary: "\n<p>Releases the resources used by this <xref href=\"System.Security.Cryptography.X509Certificates.X509Store\" data-throw-if-not-resolved=\"false\"></xref>.</p>\n"
  syntax:
    content: public void Dispose()
    content.vb: Public Sub Dispose
  implements:
  - System.IDisposable.Dispose
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  nameWithType: X509Store.Dispose()
- uid: System.Security.Cryptography.X509Certificates.X509Store.Open(System.Security.Cryptography.X509Certificates.OpenFlags)
  commentId: M:System.Security.Cryptography.X509Certificates.X509Store.Open(System.Security.Cryptography.X509Certificates.OpenFlags)
  id: Open(System.Security.Cryptography.X509Certificates.OpenFlags)
  parent: System.Security.Cryptography.X509Certificates.X509Store
  langs:
  - csharp
  - vb
  name: Open(OpenFlags)
  fullName: System.Security.Cryptography.X509Certificates.X509Store.Open(System.Security.Cryptography.X509Certificates.OpenFlags)
  type: Method
  source:
    remote:
      path: src/System.Security.Cryptography.X509Certificates/ref/4.0/System.Security.Cryptography.X509Certificates.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: Open
    path: src/System.Security.Cryptography.X509Certificates/ref/4.0/System.Security.Cryptography.X509Certificates.cs
    startLine: 427
  assemblies:
  - System.Security.Cryptography.X509Certificates
  namespace: System.Security.Cryptography.X509Certificates
  summary: "\n<p>Opens an X.509 certificate store or creates a new store, depending on <xref href=\"System.Security.Cryptography.X509Certificates.OpenFlags\" data-throw-if-not-resolved=\"false\"></xref> flag settings.</p>\n"
  syntax:
    content: public void Open(OpenFlags flags)
    content.vb: Public Sub Open(flags As OpenFlags)
    parameters:
    - id: flags
      type: System.Security.Cryptography.X509Certificates.OpenFlags
      description: "\n<p>A bitwise combination of enumeration values that specifies the way to open the X.509 certificate store. </p>\n"
  exceptions:
  - type: System.Security.Cryptography.CryptographicException
    commentId: T:System.Security.Cryptography.CryptographicException
    description: "\n<p>The store is unreadable. </p>\n"
  - type: System.Security.SecurityException
    commentId: T:System.Security.SecurityException
    description: "\n<p>The caller does not have the required permission. </p>\n"
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "\n<p>The store contains invalid values.</p>\n"
  see:
  - type: System.Security.Permissions.StorePermission
    commentId: T:System.Security.Permissions.StorePermission
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  nameWithType: X509Store.Open(OpenFlags)
- uid: System.Security.Cryptography.X509Certificates.X509Store.Remove(System.Security.Cryptography.X509Certificates.X509Certificate2)
  commentId: M:System.Security.Cryptography.X509Certificates.X509Store.Remove(System.Security.Cryptography.X509Certificates.X509Certificate2)
  id: Remove(System.Security.Cryptography.X509Certificates.X509Certificate2)
  parent: System.Security.Cryptography.X509Certificates.X509Store
  langs:
  - csharp
  - vb
  name: Remove(X509Certificate2)
  fullName: System.Security.Cryptography.X509Certificates.X509Store.Remove(System.Security.Cryptography.X509Certificates.X509Certificate2)
  type: Method
  source:
    remote:
      path: src/System.Security.Cryptography.X509Certificates/ref/4.0/System.Security.Cryptography.X509Certificates.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: Remove
    path: src/System.Security.Cryptography.X509Certificates/ref/4.0/System.Security.Cryptography.X509Certificates.cs
    startLine: 428
  assemblies:
  - System.Security.Cryptography.X509Certificates
  namespace: System.Security.Cryptography.X509Certificates
  summary: "\n<p>Removes a certificate from an X.509 certificate store.</p>\n"
  syntax:
    content: public void Remove(X509Certificate2 certificate)
    content.vb: Public Sub Remove(certificate As X509Certificate2)
    parameters:
    - id: certificate
      type: System.Security.Cryptography.X509Certificates.X509Certificate2
      description: "\n<p>The certificate to remove.</p>\n"
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "\n<p>\n<em>certificate</em> is <strong>null</strong>. </p>\n"
  - type: System.Security.SecurityException
    commentId: T:System.Security.SecurityException
    description: "\n<p>The caller does not have the required permission. </p>\n"
  see:
  - type: System.Security.Permissions.StorePermission
    commentId: T:System.Security.Permissions.StorePermission
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  nameWithType: X509Store.Remove(X509Certificate2)
references:
- uid: System.Security.Cryptography.X509Certificates
  isExternal: false
  name: System.Security.Cryptography.X509Certificates
  fullName: System.Security.Cryptography.X509Certificates
  commentId: N:System.Security.Cryptography.X509Certificates
  nameWithType: System.Security.Cryptography.X509Certificates
- uid: System.Object
  parent: System
  isExternal: false
  name: Object
  fullName: System.Object
  commentId: T:System.Object
  nameWithType: Object
- uid: System.IDisposable
  parent: System
  isExternal: false
  name: IDisposable
  fullName: System.IDisposable
  commentId: T:System.IDisposable
  nameWithType: IDisposable
- uid: System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  commentId: M:System.Object.ToString
  nameWithType: Object.ToString()
- uid: System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
  commentId: M:System.Object.Equals(System.Object)
  nameWithType: Object.Equals(Object)
- uid: System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
  commentId: M:System.Object.Equals(System.Object,System.Object)
  nameWithType: Object.Equals(Object, Object)
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
- uid: System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  commentId: M:System.Object.GetHashCode
  nameWithType: Object.GetHashCode()
- uid: System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  commentId: M:System.Object.GetType
  nameWithType: Object.GetType()
- uid: System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  commentId: M:System.Object.MemberwiseClone
  nameWithType: Object.MemberwiseClone()
- uid: System
  isExternal: false
  name: System
  fullName: System
  commentId: N:System
  nameWithType: System
- uid: System.Security.Cryptography.X509Certificates.StoreName
  parent: System.Security.Cryptography.X509Certificates
  isExternal: false
  name: StoreName
  fullName: System.Security.Cryptography.X509Certificates.StoreName
  commentId: T:System.Security.Cryptography.X509Certificates.StoreName
  nameWithType: StoreName
- uid: System.Security.Cryptography.X509Certificates.StoreLocation
  parent: System.Security.Cryptography.X509Certificates
  isExternal: false
  name: StoreLocation
  fullName: System.Security.Cryptography.X509Certificates.StoreLocation
  commentId: T:System.Security.Cryptography.X509Certificates.StoreLocation
  nameWithType: StoreLocation
- uid: System.String
  parent: System
  isExternal: false
  name: String
  fullName: System.String
  commentId: T:System.String
  nameWithType: String
- uid: System.Security.Cryptography.X509Certificates.X509Certificate2Collection
  parent: System.Security.Cryptography.X509Certificates
  isExternal: false
  name: X509Certificate2Collection
  fullName: System.Security.Cryptography.X509Certificates.X509Certificate2Collection
  commentId: T:System.Security.Cryptography.X509Certificates.X509Certificate2Collection
  nameWithType: X509Certificate2Collection
- uid: System.Security.Cryptography.X509Certificates.X509Certificate2
  parent: System.Security.Cryptography.X509Certificates
  isExternal: false
  name: X509Certificate2
  fullName: System.Security.Cryptography.X509Certificates.X509Certificate2
  commentId: T:System.Security.Cryptography.X509Certificates.X509Certificate2
  nameWithType: X509Certificate2
- uid: System.IDisposable.Dispose
  parent: System.IDisposable
  isExternal: false
  name: Dispose()
  fullName: System.IDisposable.Dispose()
  spec.csharp:
  - uid: System.IDisposable.Dispose
    name: Dispose
    fullName: System.IDisposable.Dispose
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.IDisposable.Dispose
    name: Dispose
    fullName: System.IDisposable.Dispose
  - name: (
    fullName: (
  - name: )
    fullName: )
  commentId: M:System.IDisposable.Dispose
  nameWithType: IDisposable.Dispose()
- uid: System.Security.Cryptography.X509Certificates.OpenFlags
  parent: System.Security.Cryptography.X509Certificates
  isExternal: false
  name: OpenFlags
  fullName: System.Security.Cryptography.X509Certificates.OpenFlags
  commentId: T:System.Security.Cryptography.X509Certificates.OpenFlags
  nameWithType: OpenFlags
- uid: System.ArgumentException
  parent: System
  isExternal: false
  name: ArgumentException
  fullName: System.ArgumentException
  nameWithType: ArgumentException
  commentId: T:System.ArgumentException
- uid: System.ArgumentNullException
  isExternal: false
  name: ArgumentNullException
  fullName: System.ArgumentNullException
  nameWithType: ArgumentNullException
  commentId: T:System.ArgumentNullException
- uid: System.Security.Cryptography.CryptographicException
  isExternal: false
  name: CryptographicException
  fullName: System.Security.Cryptography.CryptographicException
  commentId: T:System.Security.Cryptography.CryptographicException
  nameWithType: CryptographicException
- uid: System.Security.SecurityException
  isExternal: false
  name: SecurityException
  fullName: System.Security.SecurityException
  nameWithType: SecurityException
  commentId: T:System.Security.SecurityException
