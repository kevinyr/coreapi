### YamlMime:ManagedReference
items:
- uid: System.Xml.XmlDeclaration
  commentId: T:System.Xml.XmlDeclaration
  id: XmlDeclaration
  parent: System.Xml
  children:
  - System.Xml.XmlDeclaration.#ctor(System.String,System.String,System.String,System.Xml.XmlDocument)
  - System.Xml.XmlDeclaration.CloneNode(System.Boolean)
  - System.Xml.XmlDeclaration.Encoding
  - System.Xml.XmlDeclaration.InnerText
  - System.Xml.XmlDeclaration.LocalName
  - System.Xml.XmlDeclaration.Name
  - System.Xml.XmlDeclaration.NodeType
  - System.Xml.XmlDeclaration.Standalone
  - System.Xml.XmlDeclaration.Value
  - System.Xml.XmlDeclaration.Version
  - System.Xml.XmlDeclaration.WriteContentTo(System.Xml.XmlWriter)
  - System.Xml.XmlDeclaration.WriteTo(System.Xml.XmlWriter)
  langs:
  - csharp
  - vb
  name: XmlDeclaration
  nameWithType: XmlDeclaration
  fullName: System.Xml.XmlDeclaration
  type: Class
  source:
    remote:
      path: src/System.Xml.XmlDocument/ref/System.Xml.XmlDocument.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: XmlDeclaration
    path: src/System.Xml.XmlDocument/ref/System.Xml.XmlDocument.cs
    startLine: 93
  assemblies:
  - System.Xml.XmlDocument
  namespace: System.Xml
  summary: "\n<p>Represents the XML declaration node &lt;?xml version='1.0'...?&gt;.</p>\n"
  syntax:
    content: 'public class XmlDeclaration : XmlLinkedNode, IEnumerable'
    content.vb: >-
      Public Class XmlDeclaration
          Inherits XmlLinkedNode
          Implements IEnumerable
  seealso:
  - linkId: System.Xml.XmlDocument.CreateXmlDeclaration(System.String,System.String,System.String)
    commentId: M:System.Xml.XmlDocument.CreateXmlDeclaration(System.String,System.String,System.String)
  inheritance:
  - System.Object
  - System.Xml.XmlNode
  - System.Xml.XmlLinkedNode
  implements:
  - System.Collections.IEnumerable
  inheritedMembers:
  - System.Xml.XmlLinkedNode.NextSibling
  - System.Xml.XmlLinkedNode.PreviousSibling
  - System.Xml.XmlNode.Attributes
  - System.Xml.XmlNode.BaseURI
  - System.Xml.XmlNode.ChildNodes
  - System.Xml.XmlNode.FirstChild
  - System.Xml.XmlNode.HasChildNodes
  - System.Xml.XmlNode.InnerXml
  - System.Xml.XmlNode.IsReadOnly
  - System.Xml.XmlNode.Item(System.String)
  - System.Xml.XmlNode.Item(System.String,System.String)
  - System.Xml.XmlNode.LastChild
  - System.Xml.XmlNode.NamespaceURI
  - System.Xml.XmlNode.OuterXml
  - System.Xml.XmlNode.OwnerDocument
  - System.Xml.XmlNode.ParentNode
  - System.Xml.XmlNode.Prefix
  - System.Xml.XmlNode.PreviousText
  - System.Xml.XmlNode.AppendChild(System.Xml.XmlNode)
  - System.Xml.XmlNode.GetEnumerator
  - System.Xml.XmlNode.GetNamespaceOfPrefix(System.String)
  - System.Xml.XmlNode.GetPrefixOfNamespace(System.String)
  - System.Xml.XmlNode.InsertAfter(System.Xml.XmlNode,System.Xml.XmlNode)
  - System.Xml.XmlNode.InsertBefore(System.Xml.XmlNode,System.Xml.XmlNode)
  - System.Xml.XmlNode.Normalize
  - System.Xml.XmlNode.PrependChild(System.Xml.XmlNode)
  - System.Xml.XmlNode.RemoveAll
  - System.Xml.XmlNode.RemoveChild(System.Xml.XmlNode)
  - System.Xml.XmlNode.ReplaceChild(System.Xml.XmlNode,System.Xml.XmlNode)
  - System.Xml.XmlNode.Supports(System.String,System.String)
  - System.Xml.XmlNode.System#Collections#IEnumerable#GetEnumerator
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  extensionMethods:
  - System.Collections.IEnumerable.System.Linq.ParallelEnumerable.AsParallel
  - System.Collections.IEnumerable.System.Linq.Enumerable.Cast``1
  - System.Collections.IEnumerable.System.Linq.Enumerable.OfType``1
  - System.Collections.IEnumerable.System.Linq.Queryable.AsQueryable
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: System.Xml.XmlDeclaration.#ctor(System.String,System.String,System.String,System.Xml.XmlDocument)
  commentId: M:System.Xml.XmlDeclaration.#ctor(System.String,System.String,System.String,System.Xml.XmlDocument)
  id: '#ctor(System.String,System.String,System.String,System.Xml.XmlDocument)'
  parent: System.Xml.XmlDeclaration
  langs:
  - csharp
  - vb
  name: XmlDeclaration(String, String, String, XmlDocument)
  nameWithType: XmlDeclaration.XmlDeclaration(String, String, String, XmlDocument)
  fullName: System.Xml.XmlDeclaration.XmlDeclaration(System.String, System.String, System.String, System.Xml.XmlDocument)
  type: Constructor
  source:
    remote:
      path: src/System.Xml.XmlDocument/ref/System.Xml.XmlDocument.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: .ctor
    path: src/System.Xml.XmlDocument/ref/System.Xml.XmlDocument.cs
    startLine: 95
  assemblies:
  - System.Xml.XmlDocument
  namespace: System.Xml
  summary: "\n<p>Initializes a new instance of the <xref href=\"System.Xml.XmlDeclaration\" data-throw-if-not-resolved=\"false\"></xref> class.</p>\n"
  syntax:
    content: protected XmlDeclaration(string version, string encoding, string standalone, XmlDocument doc)
    content.vb: Protected Sub New(version As String, encoding As String, standalone As String, doc As XmlDocument)
    parameters:
    - id: version
      type: System.String
      description: "\n<p>The XML version; see the <xref href=\"System.Xml.XmlDeclaration.Version\" data-throw-if-not-resolved=\"false\"></xref> property.</p>\n"
    - id: encoding
      type: System.String
      description: "\n<p>The encoding scheme; see the <xref href=\"System.Xml.XmlDeclaration.Encoding\" data-throw-if-not-resolved=\"false\"></xref> property.</p>\n"
    - id: standalone
      type: System.String
      description: "\n<p>Indicates whether the XML document depends on an external DTD; see the <xref href=\"System.Xml.XmlDeclaration.Standalone\" data-throw-if-not-resolved=\"false\"></xref> property.</p>\n"
    - id: doc
      type: System.Xml.XmlDocument
      description: "\n<p>The parent XML document.</p>\n"
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: System.Xml.XmlDeclaration.Encoding
  commentId: P:System.Xml.XmlDeclaration.Encoding
  id: Encoding
  parent: System.Xml.XmlDeclaration
  langs:
  - csharp
  - vb
  name: Encoding
  nameWithType: XmlDeclaration.Encoding
  fullName: System.Xml.XmlDeclaration.Encoding
  type: Property
  source:
    remote:
      path: src/System.Xml.XmlDocument/ref/System.Xml.XmlDocument.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: Encoding
    path: src/System.Xml.XmlDocument/ref/System.Xml.XmlDocument.cs
    startLine: 96
  assemblies:
  - System.Xml.XmlDocument
  namespace: System.Xml
  summary: "\n<p>Gets or sets the encoding level of the XML document.</p>\n"
  syntax:
    content: public string Encoding { get; set; }
    content.vb: Public Property Encoding As String
    parameters: []
    return:
      type: System.String
      description: "\n<p>The valid character encoding name. The most commonly supported character encoding names for XML are the following: </p>\n<p>Category </p>\n<p>Encoding Names </p>\n<table><tbody><tr><td>\n<p>Unicode </p>\n</td><td>\n<p>UTF-8, UTF-16 </p>\n</td></tr><tr><td>\n<p>ISO 10646 </p>\n</td><td>\n<p>ISO-10646-UCS-2, ISO-10646-UCS-4 </p>\n</td></tr><tr><td>\n<p>ISO 8859 </p>\n</td><td>\n<p>ISO-8859-n (where \"n\" is a digit from 1 to 9) </p>\n</td></tr><tr><td>\n<p>JIS X-0208-1997 </p>\n</td><td>\n<p>ISO-2022-JP, Shift_JIS, EUC-JP </p>\n</td></tr></tbody></table>\n<p>This value is optional. If a value is not set, this property returns String.Empty.</p>\n<p>If an encoding attribute is not included, UTF-8 encoding is assumed when the document is written or saved out.</p>\n"
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: System.Xml.XmlDeclaration.InnerText
  commentId: P:System.Xml.XmlDeclaration.InnerText
  id: InnerText
  parent: System.Xml.XmlDeclaration
  langs:
  - csharp
  - vb
  name: InnerText
  nameWithType: XmlDeclaration.InnerText
  fullName: System.Xml.XmlDeclaration.InnerText
  type: Property
  source:
    remote:
      path: src/System.Xml.XmlDocument/ref/System.Xml.XmlDocument.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: InnerText
    path: src/System.Xml.XmlDocument/ref/System.Xml.XmlDocument.cs
    startLine: 97
  assemblies:
  - System.Xml.XmlDocument
  namespace: System.Xml
  summary: "\n<p>Gets or sets the concatenated values of the <strong>XmlDeclaration</strong>.</p>\n"
  syntax:
    content: public override string InnerText { get; set; }
    content.vb: Public Overrides Property InnerText As String
    parameters: []
    return:
      type: System.String
      description: "\n<p>The concatenated values of the <strong>XmlDeclaration</strong> (that is, everything between <code>&lt;?xml</code> and <code>?&gt;</code>).</p>\n"
  overridden: System.Xml.XmlNode.InnerText
  modifiers.csharp:
  - public
  - override
  - get
  - set
  modifiers.vb:
  - Public
  - Overrides
- uid: System.Xml.XmlDeclaration.LocalName
  commentId: P:System.Xml.XmlDeclaration.LocalName
  id: LocalName
  parent: System.Xml.XmlDeclaration
  langs:
  - csharp
  - vb
  name: LocalName
  nameWithType: XmlDeclaration.LocalName
  fullName: System.Xml.XmlDeclaration.LocalName
  type: Property
  source:
    remote:
      path: src/System.Xml.XmlDocument/ref/System.Xml.XmlDocument.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: LocalName
    path: src/System.Xml.XmlDocument/ref/System.Xml.XmlDocument.cs
    startLine: 98
  assemblies:
  - System.Xml.XmlDocument
  namespace: System.Xml
  summary: "\n<p>Gets the local name of the node.</p>\n"
  syntax:
    content: public override string LocalName { get; }
    content.vb: Public Overrides ReadOnly Property LocalName As String
    parameters: []
    return:
      type: System.String
      description: "\n<p>For <strong>XmlDeclaration</strong> nodes, the local name is <strong>xml</strong>.</p>\n"
  overridden: System.Xml.XmlNode.LocalName
  modifiers.csharp:
  - public
  - override
  - get
  modifiers.vb:
  - Public
  - Overrides
  - ReadOnly
- uid: System.Xml.XmlDeclaration.Name
  commentId: P:System.Xml.XmlDeclaration.Name
  id: Name
  parent: System.Xml.XmlDeclaration
  langs:
  - csharp
  - vb
  name: Name
  nameWithType: XmlDeclaration.Name
  fullName: System.Xml.XmlDeclaration.Name
  type: Property
  source:
    remote:
      path: src/System.Xml.XmlDocument/ref/System.Xml.XmlDocument.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: Name
    path: src/System.Xml.XmlDocument/ref/System.Xml.XmlDocument.cs
    startLine: 99
  assemblies:
  - System.Xml.XmlDocument
  namespace: System.Xml
  summary: "\n<p>Gets the qualified name of the node.</p>\n"
  syntax:
    content: public override string Name { get; }
    content.vb: Public Overrides ReadOnly Property Name As String
    parameters: []
    return:
      type: System.String
      description: "\n<p>For <strong>XmlDeclaration</strong> nodes, the name is <strong>xml</strong>.</p>\n"
  overridden: System.Xml.XmlNode.Name
  modifiers.csharp:
  - public
  - override
  - get
  modifiers.vb:
  - Public
  - Overrides
  - ReadOnly
- uid: System.Xml.XmlDeclaration.NodeType
  commentId: P:System.Xml.XmlDeclaration.NodeType
  id: NodeType
  parent: System.Xml.XmlDeclaration
  langs:
  - csharp
  - vb
  name: NodeType
  nameWithType: XmlDeclaration.NodeType
  fullName: System.Xml.XmlDeclaration.NodeType
  type: Property
  source:
    remote:
      path: src/System.Xml.XmlDocument/ref/System.Xml.XmlDocument.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: NodeType
    path: src/System.Xml.XmlDocument/ref/System.Xml.XmlDocument.cs
    startLine: 100
  assemblies:
  - System.Xml.XmlDocument
  namespace: System.Xml
  summary: "\n<p>Gets the type of the current node.</p>\n"
  syntax:
    content: public override XmlNodeType NodeType { get; }
    content.vb: Public Overrides ReadOnly Property NodeType As XmlNodeType
    parameters: []
    return:
      type: System.Xml.XmlNodeType
      description: "\n<p>For <strong>XmlDeclaration</strong> nodes, this value is XmlNodeType.XmlDeclaration.</p>\n"
  overridden: System.Xml.XmlNode.NodeType
  seealso:
  - linkId: System.Xml.XmlNodeType
    commentId: T:System.Xml.XmlNodeType
  modifiers.csharp:
  - public
  - override
  - get
  modifiers.vb:
  - Public
  - Overrides
  - ReadOnly
- uid: System.Xml.XmlDeclaration.Standalone
  commentId: P:System.Xml.XmlDeclaration.Standalone
  id: Standalone
  parent: System.Xml.XmlDeclaration
  langs:
  - csharp
  - vb
  name: Standalone
  nameWithType: XmlDeclaration.Standalone
  fullName: System.Xml.XmlDeclaration.Standalone
  type: Property
  source:
    remote:
      path: src/System.Xml.XmlDocument/ref/System.Xml.XmlDocument.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: Standalone
    path: src/System.Xml.XmlDocument/ref/System.Xml.XmlDocument.cs
    startLine: 101
  assemblies:
  - System.Xml.XmlDocument
  namespace: System.Xml
  summary: "\n<p>Gets or sets the value of the standalone attribute.</p>\n"
  syntax:
    content: public string Standalone { get; set; }
    content.vb: Public Property Standalone As String
    parameters: []
    return:
      type: System.String
      description: "\n<p>Valid values are <strong>yes</strong> if all entity declarations required by the XML document are contained within the document or <strong>no</strong> if an external document type definition (DTD) is required. If a standalone attribute is not present in the XML declaration, this property returns String.Empty.</p>\n"
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: System.Xml.XmlDeclaration.Value
  commentId: P:System.Xml.XmlDeclaration.Value
  id: Value
  parent: System.Xml.XmlDeclaration
  langs:
  - csharp
  - vb
  name: Value
  nameWithType: XmlDeclaration.Value
  fullName: System.Xml.XmlDeclaration.Value
  type: Property
  source:
    remote:
      path: src/System.Xml.XmlDocument/ref/System.Xml.XmlDocument.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: Value
    path: src/System.Xml.XmlDocument/ref/System.Xml.XmlDocument.cs
    startLine: 102
  assemblies:
  - System.Xml.XmlDocument
  namespace: System.Xml
  summary: "\n<p>Gets or sets the value of the <strong>XmlDeclaration</strong>.</p>\n"
  syntax:
    content: public override string Value { get; set; }
    content.vb: Public Overrides Property Value As String
    parameters: []
    return:
      type: System.String
      description: "\n<p>The contents of the <strong>XmlDeclaration</strong> (that is, everything between <code>&lt;?xml</code> and <code>?&gt;</code>).</p>\n"
  overridden: System.Xml.XmlNode.Value
  modifiers.csharp:
  - public
  - override
  - get
  - set
  modifiers.vb:
  - Public
  - Overrides
- uid: System.Xml.XmlDeclaration.Version
  commentId: P:System.Xml.XmlDeclaration.Version
  id: Version
  parent: System.Xml.XmlDeclaration
  langs:
  - csharp
  - vb
  name: Version
  nameWithType: XmlDeclaration.Version
  fullName: System.Xml.XmlDeclaration.Version
  type: Property
  source:
    remote:
      path: src/System.Xml.XmlDocument/ref/System.Xml.XmlDocument.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: Version
    path: src/System.Xml.XmlDocument/ref/System.Xml.XmlDocument.cs
    startLine: 103
  assemblies:
  - System.Xml.XmlDocument
  namespace: System.Xml
  summary: "\n<p>Gets the XML version of the document.</p>\n"
  syntax:
    content: public string Version { get; }
    content.vb: Public ReadOnly Property Version As String
    parameters: []
    return:
      type: System.String
      description: "\n<p>The value is always <strong>1.0</strong>.</p>\n"
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: System.Xml.XmlDeclaration.CloneNode(System.Boolean)
  commentId: M:System.Xml.XmlDeclaration.CloneNode(System.Boolean)
  id: CloneNode(System.Boolean)
  parent: System.Xml.XmlDeclaration
  langs:
  - csharp
  - vb
  name: CloneNode(Boolean)
  nameWithType: XmlDeclaration.CloneNode(Boolean)
  fullName: System.Xml.XmlDeclaration.CloneNode(System.Boolean)
  type: Method
  source:
    remote:
      path: src/System.Xml.XmlDocument/ref/System.Xml.XmlDocument.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: CloneNode
    path: src/System.Xml.XmlDocument/ref/System.Xml.XmlDocument.cs
    startLine: 104
  assemblies:
  - System.Xml.XmlDocument
  namespace: System.Xml
  summary: "\n<p>Creates a duplicate of this node.</p>\n"
  syntax:
    content: public override XmlNode CloneNode(bool deep)
    content.vb: Public Overrides Function CloneNode(deep As Boolean) As XmlNode
    parameters:
    - id: deep
      type: System.Boolean
      description: "\n<p>\n<strong>true</strong> to recursively clone the subtree under the specified node; <strong>false</strong> to clone only the node itself. Because <strong>XmlDeclaration</strong> nodes do not have children, the cloned node always includes the data value, regardless of the parameter setting. </p>\n"
    return:
      type: System.Xml.XmlNode
      description: "\n<p>The cloned node.</p>\n"
  overridden: System.Xml.XmlNode.CloneNode(System.Boolean)
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
- uid: System.Xml.XmlDeclaration.WriteContentTo(System.Xml.XmlWriter)
  commentId: M:System.Xml.XmlDeclaration.WriteContentTo(System.Xml.XmlWriter)
  id: WriteContentTo(System.Xml.XmlWriter)
  parent: System.Xml.XmlDeclaration
  langs:
  - csharp
  - vb
  name: WriteContentTo(XmlWriter)
  nameWithType: XmlDeclaration.WriteContentTo(XmlWriter)
  fullName: System.Xml.XmlDeclaration.WriteContentTo(System.Xml.XmlWriter)
  type: Method
  source:
    remote:
      path: src/System.Xml.XmlDocument/ref/System.Xml.XmlDocument.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: WriteContentTo
    path: src/System.Xml.XmlDocument/ref/System.Xml.XmlDocument.cs
    startLine: 105
  assemblies:
  - System.Xml.XmlDocument
  namespace: System.Xml
  summary: "\n<p>Saves the children of the node to the specified <xref href=\"System.Xml.XmlWriter\" data-throw-if-not-resolved=\"false\"></xref>. Because <strong>XmlDeclaration</strong> nodes do not have children, this method has no effect.</p>\n"
  syntax:
    content: public override void WriteContentTo(XmlWriter w)
    content.vb: Public Overrides Sub WriteContentTo(w As XmlWriter)
    parameters:
    - id: w
      type: System.Xml.XmlWriter
      description: "\n<p>The <strong>XmlWriter</strong> to which you want to save. </p>\n"
  overridden: System.Xml.XmlNode.WriteContentTo(System.Xml.XmlWriter)
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
- uid: System.Xml.XmlDeclaration.WriteTo(System.Xml.XmlWriter)
  commentId: M:System.Xml.XmlDeclaration.WriteTo(System.Xml.XmlWriter)
  id: WriteTo(System.Xml.XmlWriter)
  parent: System.Xml.XmlDeclaration
  langs:
  - csharp
  - vb
  name: WriteTo(XmlWriter)
  nameWithType: XmlDeclaration.WriteTo(XmlWriter)
  fullName: System.Xml.XmlDeclaration.WriteTo(System.Xml.XmlWriter)
  type: Method
  source:
    remote:
      path: src/System.Xml.XmlDocument/ref/System.Xml.XmlDocument.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: WriteTo
    path: src/System.Xml.XmlDocument/ref/System.Xml.XmlDocument.cs
    startLine: 106
  assemblies:
  - System.Xml.XmlDocument
  namespace: System.Xml
  summary: "\n<p>Saves the node to the specified <xref href=\"System.Xml.XmlWriter\" data-throw-if-not-resolved=\"false\"></xref>.</p>\n"
  syntax:
    content: public override void WriteTo(XmlWriter w)
    content.vb: Public Overrides Sub WriteTo(w As XmlWriter)
    parameters:
    - id: w
      type: System.Xml.XmlWriter
      description: "\n<p>The <strong>XmlWriter</strong> to which you want to save. </p>\n"
  overridden: System.Xml.XmlNode.WriteTo(System.Xml.XmlWriter)
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
references:
- uid: System.Xml
  commentId: N:System.Xml
  isExternal: false
  name: System.Xml
  nameWithType: System.Xml
  fullName: System.Xml
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: false
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Xml.XmlNode
  commentId: T:System.Xml.XmlNode
  parent: System.Xml
  isExternal: false
  name: XmlNode
  nameWithType: XmlNode
  fullName: System.Xml.XmlNode
- uid: System.Xml.XmlLinkedNode
  commentId: T:System.Xml.XmlLinkedNode
  parent: System.Xml
  isExternal: false
  name: XmlLinkedNode
  nameWithType: XmlLinkedNode
  fullName: System.Xml.XmlLinkedNode
- uid: System.Collections.IEnumerable
  commentId: T:System.Collections.IEnumerable
  parent: System.Collections
  isExternal: false
  name: IEnumerable
  nameWithType: IEnumerable
  fullName: System.Collections.IEnumerable
- uid: System.Xml.XmlLinkedNode.NextSibling
  commentId: P:System.Xml.XmlLinkedNode.NextSibling
  parent: System.Xml.XmlLinkedNode
  isExternal: false
  name: NextSibling
  nameWithType: XmlLinkedNode.NextSibling
  fullName: System.Xml.XmlLinkedNode.NextSibling
- uid: System.Xml.XmlLinkedNode.PreviousSibling
  commentId: P:System.Xml.XmlLinkedNode.PreviousSibling
  parent: System.Xml.XmlLinkedNode
  isExternal: false
  name: PreviousSibling
  nameWithType: XmlLinkedNode.PreviousSibling
  fullName: System.Xml.XmlLinkedNode.PreviousSibling
- uid: System.Xml.XmlNode.Attributes
  commentId: P:System.Xml.XmlNode.Attributes
  parent: System.Xml.XmlNode
  isExternal: false
  name: Attributes
  nameWithType: XmlNode.Attributes
  fullName: System.Xml.XmlNode.Attributes
- uid: System.Xml.XmlNode.BaseURI
  commentId: P:System.Xml.XmlNode.BaseURI
  parent: System.Xml.XmlNode
  isExternal: false
  name: BaseURI
  nameWithType: XmlNode.BaseURI
  fullName: System.Xml.XmlNode.BaseURI
- uid: System.Xml.XmlNode.ChildNodes
  commentId: P:System.Xml.XmlNode.ChildNodes
  parent: System.Xml.XmlNode
  isExternal: false
  name: ChildNodes
  nameWithType: XmlNode.ChildNodes
  fullName: System.Xml.XmlNode.ChildNodes
- uid: System.Xml.XmlNode.FirstChild
  commentId: P:System.Xml.XmlNode.FirstChild
  parent: System.Xml.XmlNode
  isExternal: false
  name: FirstChild
  nameWithType: XmlNode.FirstChild
  fullName: System.Xml.XmlNode.FirstChild
- uid: System.Xml.XmlNode.HasChildNodes
  commentId: P:System.Xml.XmlNode.HasChildNodes
  parent: System.Xml.XmlNode
  isExternal: false
  name: HasChildNodes
  nameWithType: XmlNode.HasChildNodes
  fullName: System.Xml.XmlNode.HasChildNodes
- uid: System.Xml.XmlNode.InnerXml
  commentId: P:System.Xml.XmlNode.InnerXml
  parent: System.Xml.XmlNode
  isExternal: false
  name: InnerXml
  nameWithType: XmlNode.InnerXml
  fullName: System.Xml.XmlNode.InnerXml
- uid: System.Xml.XmlNode.IsReadOnly
  commentId: P:System.Xml.XmlNode.IsReadOnly
  parent: System.Xml.XmlNode
  isExternal: false
  name: IsReadOnly
  nameWithType: XmlNode.IsReadOnly
  fullName: System.Xml.XmlNode.IsReadOnly
- uid: System.Xml.XmlNode.Item(System.String)
  commentId: P:System.Xml.XmlNode.Item(System.String)
  parent: System.Xml.XmlNode
  isExternal: true
  name: Item[String]
  nameWithType: XmlNode.Item[String]
  fullName: System.Xml.XmlNode.Item[System.String]
  nameWithType.vb: XmlNode.Item(String)
  fullname.vb: System.Xml.XmlNode.Item(System.String)
  name.vb: Item(String)
  spec.csharp:
  - uid: System.Xml.XmlNode.Item(System.String)
    name: Item
    nameWithType: XmlNode.Item
    fullName: System.Xml.XmlNode.Item
  - name: '['
    nameWithType: '['
    fullName: '['
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ']'
    nameWithType: ']'
    fullName: ']'
  spec.vb:
  - uid: System.Xml.XmlNode.Item(System.String)
    name: Item
    nameWithType: XmlNode.Item
    fullName: System.Xml.XmlNode.Item
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Xml.XmlNode.Item(System.String,System.String)
  commentId: P:System.Xml.XmlNode.Item(System.String,System.String)
  parent: System.Xml.XmlNode
  isExternal: true
  name: Item[String, String]
  nameWithType: XmlNode.Item[String, String]
  fullName: System.Xml.XmlNode.Item[System.String, System.String]
  nameWithType.vb: XmlNode.Item(String, String)
  fullname.vb: System.Xml.XmlNode.Item(System.String, System.String)
  name.vb: Item(String, String)
  spec.csharp:
  - uid: System.Xml.XmlNode.Item(System.String,System.String)
    name: Item
    nameWithType: XmlNode.Item
    fullName: System.Xml.XmlNode.Item
  - name: '['
    nameWithType: '['
    fullName: '['
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ']'
    nameWithType: ']'
    fullName: ']'
  spec.vb:
  - uid: System.Xml.XmlNode.Item(System.String,System.String)
    name: Item
    nameWithType: XmlNode.Item
    fullName: System.Xml.XmlNode.Item
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Xml.XmlNode.LastChild
  commentId: P:System.Xml.XmlNode.LastChild
  parent: System.Xml.XmlNode
  isExternal: false
  name: LastChild
  nameWithType: XmlNode.LastChild
  fullName: System.Xml.XmlNode.LastChild
- uid: System.Xml.XmlNode.NamespaceURI
  commentId: P:System.Xml.XmlNode.NamespaceURI
  parent: System.Xml.XmlNode
  isExternal: false
  name: NamespaceURI
  nameWithType: XmlNode.NamespaceURI
  fullName: System.Xml.XmlNode.NamespaceURI
- uid: System.Xml.XmlNode.OuterXml
  commentId: P:System.Xml.XmlNode.OuterXml
  parent: System.Xml.XmlNode
  isExternal: false
  name: OuterXml
  nameWithType: XmlNode.OuterXml
  fullName: System.Xml.XmlNode.OuterXml
- uid: System.Xml.XmlNode.OwnerDocument
  commentId: P:System.Xml.XmlNode.OwnerDocument
  parent: System.Xml.XmlNode
  isExternal: false
  name: OwnerDocument
  nameWithType: XmlNode.OwnerDocument
  fullName: System.Xml.XmlNode.OwnerDocument
- uid: System.Xml.XmlNode.ParentNode
  commentId: P:System.Xml.XmlNode.ParentNode
  parent: System.Xml.XmlNode
  isExternal: false
  name: ParentNode
  nameWithType: XmlNode.ParentNode
  fullName: System.Xml.XmlNode.ParentNode
- uid: System.Xml.XmlNode.Prefix
  commentId: P:System.Xml.XmlNode.Prefix
  parent: System.Xml.XmlNode
  isExternal: false
  name: Prefix
  nameWithType: XmlNode.Prefix
  fullName: System.Xml.XmlNode.Prefix
- uid: System.Xml.XmlNode.PreviousText
  commentId: P:System.Xml.XmlNode.PreviousText
  parent: System.Xml.XmlNode
  isExternal: false
  name: PreviousText
  nameWithType: XmlNode.PreviousText
  fullName: System.Xml.XmlNode.PreviousText
- uid: System.Xml.XmlNode.AppendChild(System.Xml.XmlNode)
  commentId: M:System.Xml.XmlNode.AppendChild(System.Xml.XmlNode)
  parent: System.Xml.XmlNode
  isExternal: false
  name: AppendChild(XmlNode)
  nameWithType: XmlNode.AppendChild(XmlNode)
  fullName: System.Xml.XmlNode.AppendChild(System.Xml.XmlNode)
  spec.csharp:
  - uid: System.Xml.XmlNode.AppendChild(System.Xml.XmlNode)
    name: AppendChild
    nameWithType: XmlNode.AppendChild
    fullName: System.Xml.XmlNode.AppendChild
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Xml.XmlNode
    name: XmlNode
    nameWithType: XmlNode
    fullName: System.Xml.XmlNode
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Xml.XmlNode.AppendChild(System.Xml.XmlNode)
    name: AppendChild
    nameWithType: XmlNode.AppendChild
    fullName: System.Xml.XmlNode.AppendChild
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Xml.XmlNode
    name: XmlNode
    nameWithType: XmlNode
    fullName: System.Xml.XmlNode
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Xml.XmlNode.GetEnumerator
  commentId: M:System.Xml.XmlNode.GetEnumerator
  parent: System.Xml.XmlNode
  isExternal: false
  name: GetEnumerator()
  nameWithType: XmlNode.GetEnumerator()
  fullName: System.Xml.XmlNode.GetEnumerator()
  spec.csharp:
  - uid: System.Xml.XmlNode.GetEnumerator
    name: GetEnumerator
    nameWithType: XmlNode.GetEnumerator
    fullName: System.Xml.XmlNode.GetEnumerator
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Xml.XmlNode.GetEnumerator
    name: GetEnumerator
    nameWithType: XmlNode.GetEnumerator
    fullName: System.Xml.XmlNode.GetEnumerator
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Xml.XmlNode.GetNamespaceOfPrefix(System.String)
  commentId: M:System.Xml.XmlNode.GetNamespaceOfPrefix(System.String)
  parent: System.Xml.XmlNode
  isExternal: true
  name: GetNamespaceOfPrefix(String)
  nameWithType: XmlNode.GetNamespaceOfPrefix(String)
  fullName: System.Xml.XmlNode.GetNamespaceOfPrefix(System.String)
  spec.csharp:
  - uid: System.Xml.XmlNode.GetNamespaceOfPrefix(System.String)
    name: GetNamespaceOfPrefix
    nameWithType: XmlNode.GetNamespaceOfPrefix
    fullName: System.Xml.XmlNode.GetNamespaceOfPrefix
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Xml.XmlNode.GetNamespaceOfPrefix(System.String)
    name: GetNamespaceOfPrefix
    nameWithType: XmlNode.GetNamespaceOfPrefix
    fullName: System.Xml.XmlNode.GetNamespaceOfPrefix
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Xml.XmlNode.GetPrefixOfNamespace(System.String)
  commentId: M:System.Xml.XmlNode.GetPrefixOfNamespace(System.String)
  parent: System.Xml.XmlNode
  isExternal: true
  name: GetPrefixOfNamespace(String)
  nameWithType: XmlNode.GetPrefixOfNamespace(String)
  fullName: System.Xml.XmlNode.GetPrefixOfNamespace(System.String)
  spec.csharp:
  - uid: System.Xml.XmlNode.GetPrefixOfNamespace(System.String)
    name: GetPrefixOfNamespace
    nameWithType: XmlNode.GetPrefixOfNamespace
    fullName: System.Xml.XmlNode.GetPrefixOfNamespace
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Xml.XmlNode.GetPrefixOfNamespace(System.String)
    name: GetPrefixOfNamespace
    nameWithType: XmlNode.GetPrefixOfNamespace
    fullName: System.Xml.XmlNode.GetPrefixOfNamespace
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Xml.XmlNode.InsertAfter(System.Xml.XmlNode,System.Xml.XmlNode)
  commentId: M:System.Xml.XmlNode.InsertAfter(System.Xml.XmlNode,System.Xml.XmlNode)
  parent: System.Xml.XmlNode
  isExternal: false
  name: InsertAfter(XmlNode, XmlNode)
  nameWithType: XmlNode.InsertAfter(XmlNode, XmlNode)
  fullName: System.Xml.XmlNode.InsertAfter(System.Xml.XmlNode, System.Xml.XmlNode)
  spec.csharp:
  - uid: System.Xml.XmlNode.InsertAfter(System.Xml.XmlNode,System.Xml.XmlNode)
    name: InsertAfter
    nameWithType: XmlNode.InsertAfter
    fullName: System.Xml.XmlNode.InsertAfter
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Xml.XmlNode
    name: XmlNode
    nameWithType: XmlNode
    fullName: System.Xml.XmlNode
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Xml.XmlNode
    name: XmlNode
    nameWithType: XmlNode
    fullName: System.Xml.XmlNode
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Xml.XmlNode.InsertAfter(System.Xml.XmlNode,System.Xml.XmlNode)
    name: InsertAfter
    nameWithType: XmlNode.InsertAfter
    fullName: System.Xml.XmlNode.InsertAfter
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Xml.XmlNode
    name: XmlNode
    nameWithType: XmlNode
    fullName: System.Xml.XmlNode
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Xml.XmlNode
    name: XmlNode
    nameWithType: XmlNode
    fullName: System.Xml.XmlNode
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Xml.XmlNode.InsertBefore(System.Xml.XmlNode,System.Xml.XmlNode)
  commentId: M:System.Xml.XmlNode.InsertBefore(System.Xml.XmlNode,System.Xml.XmlNode)
  parent: System.Xml.XmlNode
  isExternal: false
  name: InsertBefore(XmlNode, XmlNode)
  nameWithType: XmlNode.InsertBefore(XmlNode, XmlNode)
  fullName: System.Xml.XmlNode.InsertBefore(System.Xml.XmlNode, System.Xml.XmlNode)
  spec.csharp:
  - uid: System.Xml.XmlNode.InsertBefore(System.Xml.XmlNode,System.Xml.XmlNode)
    name: InsertBefore
    nameWithType: XmlNode.InsertBefore
    fullName: System.Xml.XmlNode.InsertBefore
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Xml.XmlNode
    name: XmlNode
    nameWithType: XmlNode
    fullName: System.Xml.XmlNode
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Xml.XmlNode
    name: XmlNode
    nameWithType: XmlNode
    fullName: System.Xml.XmlNode
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Xml.XmlNode.InsertBefore(System.Xml.XmlNode,System.Xml.XmlNode)
    name: InsertBefore
    nameWithType: XmlNode.InsertBefore
    fullName: System.Xml.XmlNode.InsertBefore
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Xml.XmlNode
    name: XmlNode
    nameWithType: XmlNode
    fullName: System.Xml.XmlNode
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Xml.XmlNode
    name: XmlNode
    nameWithType: XmlNode
    fullName: System.Xml.XmlNode
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Xml.XmlNode.Normalize
  commentId: M:System.Xml.XmlNode.Normalize
  parent: System.Xml.XmlNode
  isExternal: false
  name: Normalize()
  nameWithType: XmlNode.Normalize()
  fullName: System.Xml.XmlNode.Normalize()
  spec.csharp:
  - uid: System.Xml.XmlNode.Normalize
    name: Normalize
    nameWithType: XmlNode.Normalize
    fullName: System.Xml.XmlNode.Normalize
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Xml.XmlNode.Normalize
    name: Normalize
    nameWithType: XmlNode.Normalize
    fullName: System.Xml.XmlNode.Normalize
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Xml.XmlNode.PrependChild(System.Xml.XmlNode)
  commentId: M:System.Xml.XmlNode.PrependChild(System.Xml.XmlNode)
  parent: System.Xml.XmlNode
  isExternal: false
  name: PrependChild(XmlNode)
  nameWithType: XmlNode.PrependChild(XmlNode)
  fullName: System.Xml.XmlNode.PrependChild(System.Xml.XmlNode)
  spec.csharp:
  - uid: System.Xml.XmlNode.PrependChild(System.Xml.XmlNode)
    name: PrependChild
    nameWithType: XmlNode.PrependChild
    fullName: System.Xml.XmlNode.PrependChild
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Xml.XmlNode
    name: XmlNode
    nameWithType: XmlNode
    fullName: System.Xml.XmlNode
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Xml.XmlNode.PrependChild(System.Xml.XmlNode)
    name: PrependChild
    nameWithType: XmlNode.PrependChild
    fullName: System.Xml.XmlNode.PrependChild
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Xml.XmlNode
    name: XmlNode
    nameWithType: XmlNode
    fullName: System.Xml.XmlNode
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Xml.XmlNode.RemoveAll
  commentId: M:System.Xml.XmlNode.RemoveAll
  parent: System.Xml.XmlNode
  isExternal: false
  name: RemoveAll()
  nameWithType: XmlNode.RemoveAll()
  fullName: System.Xml.XmlNode.RemoveAll()
  spec.csharp:
  - uid: System.Xml.XmlNode.RemoveAll
    name: RemoveAll
    nameWithType: XmlNode.RemoveAll
    fullName: System.Xml.XmlNode.RemoveAll
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Xml.XmlNode.RemoveAll
    name: RemoveAll
    nameWithType: XmlNode.RemoveAll
    fullName: System.Xml.XmlNode.RemoveAll
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Xml.XmlNode.RemoveChild(System.Xml.XmlNode)
  commentId: M:System.Xml.XmlNode.RemoveChild(System.Xml.XmlNode)
  parent: System.Xml.XmlNode
  isExternal: false
  name: RemoveChild(XmlNode)
  nameWithType: XmlNode.RemoveChild(XmlNode)
  fullName: System.Xml.XmlNode.RemoveChild(System.Xml.XmlNode)
  spec.csharp:
  - uid: System.Xml.XmlNode.RemoveChild(System.Xml.XmlNode)
    name: RemoveChild
    nameWithType: XmlNode.RemoveChild
    fullName: System.Xml.XmlNode.RemoveChild
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Xml.XmlNode
    name: XmlNode
    nameWithType: XmlNode
    fullName: System.Xml.XmlNode
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Xml.XmlNode.RemoveChild(System.Xml.XmlNode)
    name: RemoveChild
    nameWithType: XmlNode.RemoveChild
    fullName: System.Xml.XmlNode.RemoveChild
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Xml.XmlNode
    name: XmlNode
    nameWithType: XmlNode
    fullName: System.Xml.XmlNode
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Xml.XmlNode.ReplaceChild(System.Xml.XmlNode,System.Xml.XmlNode)
  commentId: M:System.Xml.XmlNode.ReplaceChild(System.Xml.XmlNode,System.Xml.XmlNode)
  parent: System.Xml.XmlNode
  isExternal: false
  name: ReplaceChild(XmlNode, XmlNode)
  nameWithType: XmlNode.ReplaceChild(XmlNode, XmlNode)
  fullName: System.Xml.XmlNode.ReplaceChild(System.Xml.XmlNode, System.Xml.XmlNode)
  spec.csharp:
  - uid: System.Xml.XmlNode.ReplaceChild(System.Xml.XmlNode,System.Xml.XmlNode)
    name: ReplaceChild
    nameWithType: XmlNode.ReplaceChild
    fullName: System.Xml.XmlNode.ReplaceChild
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Xml.XmlNode
    name: XmlNode
    nameWithType: XmlNode
    fullName: System.Xml.XmlNode
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Xml.XmlNode
    name: XmlNode
    nameWithType: XmlNode
    fullName: System.Xml.XmlNode
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Xml.XmlNode.ReplaceChild(System.Xml.XmlNode,System.Xml.XmlNode)
    name: ReplaceChild
    nameWithType: XmlNode.ReplaceChild
    fullName: System.Xml.XmlNode.ReplaceChild
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Xml.XmlNode
    name: XmlNode
    nameWithType: XmlNode
    fullName: System.Xml.XmlNode
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Xml.XmlNode
    name: XmlNode
    nameWithType: XmlNode
    fullName: System.Xml.XmlNode
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Xml.XmlNode.Supports(System.String,System.String)
  commentId: M:System.Xml.XmlNode.Supports(System.String,System.String)
  parent: System.Xml.XmlNode
  isExternal: true
  name: Supports(String, String)
  nameWithType: XmlNode.Supports(String, String)
  fullName: System.Xml.XmlNode.Supports(System.String, System.String)
  spec.csharp:
  - uid: System.Xml.XmlNode.Supports(System.String,System.String)
    name: Supports
    nameWithType: XmlNode.Supports
    fullName: System.Xml.XmlNode.Supports
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Xml.XmlNode.Supports(System.String,System.String)
    name: Supports
    nameWithType: XmlNode.Supports
    fullName: System.Xml.XmlNode.Supports
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Xml.XmlNode.System#Collections#IEnumerable#GetEnumerator
  commentId: M:System.Xml.XmlNode.System#Collections#IEnumerable#GetEnumerator
  parent: System.Xml.XmlNode
  isExternal: false
  name: IEnumerable.GetEnumerator()
  nameWithType: XmlNode.IEnumerable.GetEnumerator()
  fullName: System.Xml.XmlNode.System.Collections.IEnumerable.GetEnumerator()
  nameWithType.vb: XmlNode.System.Collections.IEnumerable.GetEnumerator()
  name.vb: System.Collections.IEnumerable.GetEnumerator()
  spec.csharp:
  - uid: System.Xml.XmlNode.System#Collections#IEnumerable#GetEnumerator
    name: IEnumerable.GetEnumerator
    nameWithType: XmlNode.IEnumerable.GetEnumerator
    fullName: System.Xml.XmlNode.System.Collections.IEnumerable.GetEnumerator
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Xml.XmlNode.System#Collections#IEnumerable#GetEnumerator
    name: System.Collections.IEnumerable.GetEnumerator
    nameWithType: XmlNode.System.Collections.IEnumerable.GetEnumerator
    fullName: System.Xml.XmlNode.System.Collections.IEnumerable.GetEnumerator
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.IEnumerable.System.Linq.ParallelEnumerable.AsParallel
  commentId: M:System.Linq.ParallelEnumerable.AsParallel(System.Collections.IEnumerable)
  parent: System.Linq.ParallelEnumerable
  definition: System.Linq.ParallelEnumerable.AsParallel(System.Collections.IEnumerable)
  name: AsParallel()
  nameWithType: ParallelEnumerable.AsParallel()
  fullName: System.Linq.ParallelEnumerable.AsParallel()
  spec.csharp:
  - uid: System.Linq.ParallelEnumerable.AsParallel
    name: AsParallel
    nameWithType: ParallelEnumerable.AsParallel
    fullName: System.Linq.ParallelEnumerable.AsParallel
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Linq.ParallelEnumerable.AsParallel
    name: AsParallel
    nameWithType: ParallelEnumerable.AsParallel
    fullName: System.Linq.ParallelEnumerable.AsParallel
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.IEnumerable.System.Linq.Enumerable.Cast``1
  commentId: M:System.Linq.Enumerable.Cast``1(System.Collections.IEnumerable)
  parent: System.Linq.Enumerable
  definition: System.Linq.Enumerable.Cast``1(System.Collections.IEnumerable)
  name: Cast<TResult>()
  nameWithType: Enumerable.Cast<TResult>()
  fullName: System.Linq.Enumerable.Cast<TResult>()
  nameWithType.vb: Enumerable.Cast(Of TResult)()
  fullname.vb: System.Linq.Enumerable.Cast(Of TResult)()
  name.vb: Cast(Of TResult)()
  spec.csharp:
  - uid: System.Linq.Enumerable.Cast``1
    name: Cast<TResult>
    nameWithType: Enumerable.Cast<TResult>
    fullName: System.Linq.Enumerable.Cast<TResult>
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Linq.Enumerable.Cast``1
    name: Cast(Of TResult)
    nameWithType: Enumerable.Cast(Of TResult)
    fullName: System.Linq.Enumerable.Cast(Of TResult)
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.IEnumerable.System.Linq.Enumerable.OfType``1
  commentId: M:System.Linq.Enumerable.OfType``1(System.Collections.IEnumerable)
  parent: System.Linq.Enumerable
  definition: System.Linq.Enumerable.OfType``1(System.Collections.IEnumerable)
  name: OfType<TResult>()
  nameWithType: Enumerable.OfType<TResult>()
  fullName: System.Linq.Enumerable.OfType<TResult>()
  nameWithType.vb: Enumerable.OfType(Of TResult)()
  fullname.vb: System.Linq.Enumerable.OfType(Of TResult)()
  name.vb: OfType(Of TResult)()
  spec.csharp:
  - uid: System.Linq.Enumerable.OfType``1
    name: OfType<TResult>
    nameWithType: Enumerable.OfType<TResult>
    fullName: System.Linq.Enumerable.OfType<TResult>
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Linq.Enumerable.OfType``1
    name: OfType(Of TResult)
    nameWithType: Enumerable.OfType(Of TResult)
    fullName: System.Linq.Enumerable.OfType(Of TResult)
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.IEnumerable.System.Linq.Queryable.AsQueryable
  commentId: M:System.Linq.Queryable.AsQueryable(System.Collections.IEnumerable)
  parent: System.Linq.Queryable
  definition: System.Linq.Queryable.AsQueryable(System.Collections.IEnumerable)
  name: AsQueryable()
  nameWithType: Queryable.AsQueryable()
  fullName: System.Linq.Queryable.AsQueryable()
  spec.csharp:
  - uid: System.Linq.Queryable.AsQueryable
    name: AsQueryable
    nameWithType: Queryable.AsQueryable
    fullName: System.Linq.Queryable.AsQueryable
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Linq.Queryable.AsQueryable
    name: AsQueryable
    nameWithType: Queryable.AsQueryable
    fullName: System.Linq.Queryable.AsQueryable
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: System.Collections
  commentId: N:System.Collections
  isExternal: false
  name: System.Collections
  nameWithType: System.Collections
  fullName: System.Collections
- uid: System.Linq.ParallelEnumerable.AsParallel(System.Collections.IEnumerable)
  commentId: M:System.Linq.ParallelEnumerable.AsParallel(System.Collections.IEnumerable)
  isExternal: true
  name: AsParallel(IEnumerable)
  nameWithType: ParallelEnumerable.AsParallel(IEnumerable)
  fullName: System.Linq.ParallelEnumerable.AsParallel(System.Collections.IEnumerable)
  spec.csharp:
  - uid: System.Linq.ParallelEnumerable.AsParallel(System.Collections.IEnumerable)
    name: AsParallel
    nameWithType: ParallelEnumerable.AsParallel
    fullName: System.Linq.ParallelEnumerable.AsParallel
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Collections.IEnumerable
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.IEnumerable
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Linq.ParallelEnumerable.AsParallel(System.Collections.IEnumerable)
    name: AsParallel
    nameWithType: ParallelEnumerable.AsParallel
    fullName: System.Linq.ParallelEnumerable.AsParallel
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Collections.IEnumerable
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.IEnumerable
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Linq.ParallelEnumerable
  commentId: T:System.Linq.ParallelEnumerable
  parent: System.Linq
  isExternal: false
  name: ParallelEnumerable
  nameWithType: ParallelEnumerable
  fullName: System.Linq.ParallelEnumerable
- uid: System.Linq.Enumerable.Cast``1(System.Collections.IEnumerable)
  commentId: M:System.Linq.Enumerable.Cast``1(System.Collections.IEnumerable)
  isExternal: true
  name: Cast<TResult>(IEnumerable)
  nameWithType: Enumerable.Cast<TResult>(IEnumerable)
  fullName: System.Linq.Enumerable.Cast<TResult>(System.Collections.IEnumerable)
  nameWithType.vb: Enumerable.Cast(Of TResult)(IEnumerable)
  fullname.vb: System.Linq.Enumerable.Cast(Of TResult)(System.Collections.IEnumerable)
  name.vb: Cast(Of TResult)(IEnumerable)
  spec.csharp:
  - uid: System.Linq.Enumerable.Cast``1(System.Collections.IEnumerable)
    name: Cast<TResult>
    nameWithType: Enumerable.Cast<TResult>
    fullName: System.Linq.Enumerable.Cast<TResult>
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Collections.IEnumerable
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.IEnumerable
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Linq.Enumerable.Cast``1(System.Collections.IEnumerable)
    name: Cast(Of TResult)
    nameWithType: Enumerable.Cast(Of TResult)
    fullName: System.Linq.Enumerable.Cast(Of TResult)
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Collections.IEnumerable
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.IEnumerable
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Linq.Enumerable
  commentId: T:System.Linq.Enumerable
  parent: System.Linq
  isExternal: false
  name: Enumerable
  nameWithType: Enumerable
  fullName: System.Linq.Enumerable
- uid: System.Linq.Enumerable.OfType``1(System.Collections.IEnumerable)
  commentId: M:System.Linq.Enumerable.OfType``1(System.Collections.IEnumerable)
  isExternal: true
  name: OfType<TResult>(IEnumerable)
  nameWithType: Enumerable.OfType<TResult>(IEnumerable)
  fullName: System.Linq.Enumerable.OfType<TResult>(System.Collections.IEnumerable)
  nameWithType.vb: Enumerable.OfType(Of TResult)(IEnumerable)
  fullname.vb: System.Linq.Enumerable.OfType(Of TResult)(System.Collections.IEnumerable)
  name.vb: OfType(Of TResult)(IEnumerable)
  spec.csharp:
  - uid: System.Linq.Enumerable.OfType``1(System.Collections.IEnumerable)
    name: OfType<TResult>
    nameWithType: Enumerable.OfType<TResult>
    fullName: System.Linq.Enumerable.OfType<TResult>
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Collections.IEnumerable
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.IEnumerable
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Linq.Enumerable.OfType``1(System.Collections.IEnumerable)
    name: OfType(Of TResult)
    nameWithType: Enumerable.OfType(Of TResult)
    fullName: System.Linq.Enumerable.OfType(Of TResult)
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Collections.IEnumerable
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.IEnumerable
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Linq.Queryable.AsQueryable(System.Collections.IEnumerable)
  commentId: M:System.Linq.Queryable.AsQueryable(System.Collections.IEnumerable)
  isExternal: true
  name: AsQueryable(IEnumerable)
  nameWithType: Queryable.AsQueryable(IEnumerable)
  fullName: System.Linq.Queryable.AsQueryable(System.Collections.IEnumerable)
  spec.csharp:
  - uid: System.Linq.Queryable.AsQueryable(System.Collections.IEnumerable)
    name: AsQueryable
    nameWithType: Queryable.AsQueryable
    fullName: System.Linq.Queryable.AsQueryable
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Collections.IEnumerable
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.IEnumerable
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Linq.Queryable.AsQueryable(System.Collections.IEnumerable)
    name: AsQueryable
    nameWithType: Queryable.AsQueryable
    fullName: System.Linq.Queryable.AsQueryable
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Collections.IEnumerable
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.IEnumerable
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Linq.Queryable
  commentId: T:System.Linq.Queryable
  parent: System.Linq
  isExternal: false
  name: Queryable
  nameWithType: Queryable
  fullName: System.Linq.Queryable
- uid: System.Linq
  commentId: N:System.Linq
  isExternal: false
  name: System.Linq
  nameWithType: System.Linq
  fullName: System.Linq
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: false
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Xml.XmlDocument
  commentId: T:System.Xml.XmlDocument
  parent: System.Xml
  isExternal: false
  name: XmlDocument
  nameWithType: XmlDocument
  fullName: System.Xml.XmlDocument
- uid: System.Xml.XmlNode.InnerText
  commentId: P:System.Xml.XmlNode.InnerText
  parent: System.Xml.XmlNode
  isExternal: false
  name: InnerText
  nameWithType: XmlNode.InnerText
  fullName: System.Xml.XmlNode.InnerText
- uid: System.Xml.XmlNode.LocalName
  commentId: P:System.Xml.XmlNode.LocalName
  parent: System.Xml.XmlNode
  isExternal: false
  name: LocalName
  nameWithType: XmlNode.LocalName
  fullName: System.Xml.XmlNode.LocalName
- uid: System.Xml.XmlNode.Name
  commentId: P:System.Xml.XmlNode.Name
  parent: System.Xml.XmlNode
  isExternal: false
  name: Name
  nameWithType: XmlNode.Name
  fullName: System.Xml.XmlNode.Name
- uid: System.Xml.XmlNode.NodeType
  commentId: P:System.Xml.XmlNode.NodeType
  parent: System.Xml.XmlNode
  isExternal: false
  name: NodeType
  nameWithType: XmlNode.NodeType
  fullName: System.Xml.XmlNode.NodeType
- uid: System.Xml.XmlNodeType
  commentId: T:System.Xml.XmlNodeType
  parent: System.Xml
  isExternal: false
  name: XmlNodeType
  nameWithType: XmlNodeType
  fullName: System.Xml.XmlNodeType
- uid: System.Xml.XmlNode.Value
  commentId: P:System.Xml.XmlNode.Value
  parent: System.Xml.XmlNode
  isExternal: false
  name: Value
  nameWithType: XmlNode.Value
  fullName: System.Xml.XmlNode.Value
- uid: System.Xml.XmlNode.CloneNode(System.Boolean)
  commentId: M:System.Xml.XmlNode.CloneNode(System.Boolean)
  parent: System.Xml.XmlNode
  isExternal: true
  name: CloneNode(Boolean)
  nameWithType: XmlNode.CloneNode(Boolean)
  fullName: System.Xml.XmlNode.CloneNode(System.Boolean)
  spec.csharp:
  - uid: System.Xml.XmlNode.CloneNode(System.Boolean)
    name: CloneNode
    nameWithType: XmlNode.CloneNode
    fullName: System.Xml.XmlNode.CloneNode
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Xml.XmlNode.CloneNode(System.Boolean)
    name: CloneNode
    nameWithType: XmlNode.CloneNode
    fullName: System.Xml.XmlNode.CloneNode
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: false
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Xml.XmlNode.WriteContentTo(System.Xml.XmlWriter)
  commentId: M:System.Xml.XmlNode.WriteContentTo(System.Xml.XmlWriter)
  parent: System.Xml.XmlNode
  isExternal: true
  name: WriteContentTo(XmlWriter)
  nameWithType: XmlNode.WriteContentTo(XmlWriter)
  fullName: System.Xml.XmlNode.WriteContentTo(System.Xml.XmlWriter)
  spec.csharp:
  - uid: System.Xml.XmlNode.WriteContentTo(System.Xml.XmlWriter)
    name: WriteContentTo
    nameWithType: XmlNode.WriteContentTo
    fullName: System.Xml.XmlNode.WriteContentTo
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Xml.XmlWriter
    name: XmlWriter
    nameWithType: XmlWriter
    fullName: System.Xml.XmlWriter
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Xml.XmlNode.WriteContentTo(System.Xml.XmlWriter)
    name: WriteContentTo
    nameWithType: XmlNode.WriteContentTo
    fullName: System.Xml.XmlNode.WriteContentTo
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Xml.XmlWriter
    name: XmlWriter
    nameWithType: XmlWriter
    fullName: System.Xml.XmlWriter
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Xml.XmlWriter
  commentId: T:System.Xml.XmlWriter
  parent: System.Xml
  isExternal: false
  name: XmlWriter
  nameWithType: XmlWriter
  fullName: System.Xml.XmlWriter
- uid: System.Xml.XmlNode.WriteTo(System.Xml.XmlWriter)
  commentId: M:System.Xml.XmlNode.WriteTo(System.Xml.XmlWriter)
  parent: System.Xml.XmlNode
  isExternal: true
  name: WriteTo(XmlWriter)
  nameWithType: XmlNode.WriteTo(XmlWriter)
  fullName: System.Xml.XmlNode.WriteTo(System.Xml.XmlWriter)
  spec.csharp:
  - uid: System.Xml.XmlNode.WriteTo(System.Xml.XmlWriter)
    name: WriteTo
    nameWithType: XmlNode.WriteTo
    fullName: System.Xml.XmlNode.WriteTo
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Xml.XmlWriter
    name: XmlWriter
    nameWithType: XmlWriter
    fullName: System.Xml.XmlWriter
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Xml.XmlNode.WriteTo(System.Xml.XmlWriter)
    name: WriteTo
    nameWithType: XmlNode.WriteTo
    fullName: System.Xml.XmlNode.WriteTo
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Xml.XmlWriter
    name: XmlWriter
    nameWithType: XmlWriter
    fullName: System.Xml.XmlWriter
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
