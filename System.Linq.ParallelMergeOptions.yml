items:
- uid: System.Linq.ParallelMergeOptions
  commentId: T:System.Linq.ParallelMergeOptions
  id: ParallelMergeOptions
  parent: System.Linq
  children:
  - System.Linq.ParallelMergeOptions.AutoBuffered
  - System.Linq.ParallelMergeOptions.Default
  - System.Linq.ParallelMergeOptions.FullyBuffered
  - System.Linq.ParallelMergeOptions.NotBuffered
  langs:
  - csharp
  - vb
  name: ParallelMergeOptions
  fullName: System.Linq.ParallelMergeOptions
  type: Enum
  source:
    remote:
      path: src/System.Linq.Parallel/ref/System.Linq.Parallel.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: ParallelMergeOptions
    path: src/System.Linq.Parallel/ref/System.Linq.Parallel.cs
    startLine: 240
  assemblies:
  - System.Linq.Parallel
  namespace: System.Linq
  summary: "\n<p>Specifies the preferred type of output merge to use in a query. In other words, it indicates how PLINQ should merge the results from the various partitions back into a single result sequence. This is a hint only, and may not be respected by the system when parallelizing all queries.</p>\n"
  syntax:
    content: public enum ParallelMergeOptions
    content.vb: Public Enum ParallelMergeOptions
  modifiers.csharp:
  - public
  - enum
  modifiers.vb:
  - Public
  - Enum
  nameWithType: ParallelMergeOptions
- uid: System.Linq.ParallelMergeOptions.AutoBuffered
  commentId: F:System.Linq.ParallelMergeOptions.AutoBuffered
  id: AutoBuffered
  parent: System.Linq.ParallelMergeOptions
  langs:
  - csharp
  - vb
  name: AutoBuffered
  fullName: System.Linq.ParallelMergeOptions.AutoBuffered
  type: Field
  source:
    remote:
      path: src/System.Linq.Parallel/ref/System.Linq.Parallel.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: AutoBuffered
    path: src/System.Linq.Parallel/ref/System.Linq.Parallel.cs
    startLine: 242
  assemblies:
  - System.Linq.Parallel
  namespace: System.Linq
  summary: "\n<p>Use a merge with output buffers of a size chosen by the system. Results will accumulate into an output buffer before they are available to the consumer of the query.</p>\n"
  syntax:
    content: AutoBuffered = 2
    return:
      type: System.Linq.ParallelMergeOptions
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
  nameWithType: ParallelMergeOptions.AutoBuffered
- uid: System.Linq.ParallelMergeOptions.Default
  commentId: F:System.Linq.ParallelMergeOptions.Default
  id: Default
  parent: System.Linq.ParallelMergeOptions
  langs:
  - csharp
  - vb
  name: Default
  fullName: System.Linq.ParallelMergeOptions.Default
  type: Field
  source:
    remote:
      path: src/System.Linq.Parallel/ref/System.Linq.Parallel.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: Default
    path: src/System.Linq.Parallel/ref/System.Linq.Parallel.cs
    startLine: 243
  assemblies:
  - System.Linq.Parallel
  namespace: System.Linq
  summary: "\n<p>Use the default merge type, which is AutoBuffered.</p>\n"
  syntax:
    content: Default = 0
    return:
      type: System.Linq.ParallelMergeOptions
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
  nameWithType: ParallelMergeOptions.Default
- uid: System.Linq.ParallelMergeOptions.FullyBuffered
  commentId: F:System.Linq.ParallelMergeOptions.FullyBuffered
  id: FullyBuffered
  parent: System.Linq.ParallelMergeOptions
  langs:
  - csharp
  - vb
  name: FullyBuffered
  fullName: System.Linq.ParallelMergeOptions.FullyBuffered
  type: Field
  source:
    remote:
      path: src/System.Linq.Parallel/ref/System.Linq.Parallel.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: FullyBuffered
    path: src/System.Linq.Parallel/ref/System.Linq.Parallel.cs
    startLine: 244
  assemblies:
  - System.Linq.Parallel
  namespace: System.Linq
  summary: "\n<p>Use a merge with full output buffers. The system will accumulate all of the results before making any of them available to the consumer of the query.</p>\n"
  syntax:
    content: FullyBuffered = 3
    return:
      type: System.Linq.ParallelMergeOptions
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
  nameWithType: ParallelMergeOptions.FullyBuffered
- uid: System.Linq.ParallelMergeOptions.NotBuffered
  commentId: F:System.Linq.ParallelMergeOptions.NotBuffered
  id: NotBuffered
  parent: System.Linq.ParallelMergeOptions
  langs:
  - csharp
  - vb
  name: NotBuffered
  fullName: System.Linq.ParallelMergeOptions.NotBuffered
  type: Field
  source:
    remote:
      path: src/System.Linq.Parallel/ref/System.Linq.Parallel.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: NotBuffered
    path: src/System.Linq.Parallel/ref/System.Linq.Parallel.cs
    startLine: 245
  assemblies:
  - System.Linq.Parallel
  namespace: System.Linq
  summary: "\n<p>Use a merge without output buffers. As soon as result elements have been computed, make that element available to the consumer of the query.</p>\n"
  syntax:
    content: NotBuffered = 1
    return:
      type: System.Linq.ParallelMergeOptions
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
  nameWithType: ParallelMergeOptions.NotBuffered
references:
- uid: System.Linq
  isExternal: false
  name: System.Linq
  fullName: System.Linq
  commentId: N:System.Linq
  nameWithType: System.Linq
- uid: System.Linq.ParallelMergeOptions
  parent: System.Linq
  isExternal: false
  name: ParallelMergeOptions
  fullName: System.Linq.ParallelMergeOptions
  commentId: T:System.Linq.ParallelMergeOptions
  nameWithType: ParallelMergeOptions
