items:
- uid: System.Net.Http.StreamContent
  commentId: T:System.Net.Http.StreamContent
  id: StreamContent
  parent: System.Net.Http
  children:
  - System.Net.Http.StreamContent.#ctor(System.IO.Stream)
  - System.Net.Http.StreamContent.#ctor(System.IO.Stream,System.Int32)
  - System.Net.Http.StreamContent.CreateContentReadStreamAsync
  - System.Net.Http.StreamContent.Dispose(System.Boolean)
  - System.Net.Http.StreamContent.SerializeToStreamAsync(System.IO.Stream,System.Net.TransportContext)
  - System.Net.Http.StreamContent.TryComputeLength(System.Int64@)
  langs:
  - csharp
  - vb
  name: StreamContent
  fullName: System.Net.Http.StreamContent
  type: Class
  source:
    remote:
      path: src/System.Net.Http/src/System/Net/Http/StreamContent.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: StreamContent
    path: src/System.Net.Http/src/System/Net/Http/StreamContent.cs
    startLine: 11
  assemblies:
  - System.Net.Http
  namespace: System.Net.Http
  summary: "\n<p>Provides HTTP content based on a stream.</p>\n"
  syntax:
    content: 'public class StreamContent : HttpContent, IDisposable'
    content.vb: >-
      Public Class StreamContent
          Inherits HttpContent
          Implements IDisposable
  inheritance:
  - System.Object
  - System.Net.Http.HttpContent
  implements:
  - System.IDisposable
  inheritedMembers:
  - System.Net.Http.HttpContent.Headers
  - System.Net.Http.HttpContent.CopyToAsync(System.IO.Stream)
  - System.Net.Http.HttpContent.CopyToAsync(System.IO.Stream,System.Net.TransportContext)
  - System.Net.Http.HttpContent.Dispose
  - System.Net.Http.HttpContent.LoadIntoBufferAsync
  - System.Net.Http.HttpContent.LoadIntoBufferAsync(System.Int64)
  - System.Net.Http.HttpContent.ReadAsByteArrayAsync
  - System.Net.Http.HttpContent.ReadAsStreamAsync
  - System.Net.Http.HttpContent.ReadAsStringAsync
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
  nameWithType: StreamContent
- uid: System.Net.Http.StreamContent.#ctor(System.IO.Stream)
  commentId: M:System.Net.Http.StreamContent.#ctor(System.IO.Stream)
  id: '#ctor(System.IO.Stream)'
  parent: System.Net.Http.StreamContent
  langs:
  - csharp
  - vb
  name: StreamContent(Stream)
  fullName: System.Net.Http.StreamContent.StreamContent(System.IO.Stream)
  type: Constructor
  source:
    remote:
      path: src/System.Net.Http/src/System/Net/Http/StreamContent.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: .ctor
    path: src/System.Net.Http/src/System/Net/Http/StreamContent.cs
    startLine: 21
  assemblies:
  - System.Net.Http
  namespace: System.Net.Http
  summary: "\n<p>Creates a new instance of the <xref href=\"System.Net.Http.StreamContent\" data-throw-if-not-resolved=\"false\"></xref> class.</p>\n"
  syntax:
    content: public StreamContent(Stream content)
    content.vb: Public Sub New(content As Stream)
    parameters:
    - id: content
      type: System.IO.Stream
      description: "\n<p>The content used to initialize the <xref href=\"System.Net.Http.StreamContent\" data-throw-if-not-resolved=\"false\"></xref>.</p>\n"
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  nameWithType: StreamContent.StreamContent(Stream)
- uid: System.Net.Http.StreamContent.#ctor(System.IO.Stream,System.Int32)
  commentId: M:System.Net.Http.StreamContent.#ctor(System.IO.Stream,System.Int32)
  id: '#ctor(System.IO.Stream,System.Int32)'
  parent: System.Net.Http.StreamContent
  langs:
  - csharp
  - vb
  name: StreamContent(Stream, Int32)
  fullName: System.Net.Http.StreamContent.StreamContent(System.IO.Stream, System.Int32)
  type: Constructor
  source:
    remote:
      path: src/System.Net.Http/src/System/Net/Http/StreamContent.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: .ctor
    path: src/System.Net.Http/src/System/Net/Http/StreamContent.cs
    startLine: 26
  assemblies:
  - System.Net.Http
  namespace: System.Net.Http
  summary: "\n<p>Creates a new instance of the <xref href=\"System.Net.Http.StreamContent\" data-throw-if-not-resolved=\"false\"></xref> class.</p>\n"
  syntax:
    content: public StreamContent(Stream content, int bufferSize)
    content.vb: Public Sub New(content As Stream, bufferSize As Integer)
    parameters:
    - id: content
      type: System.IO.Stream
      description: "\n<p>The content used to initialize the <xref href=\"System.Net.Http.StreamContent\" data-throw-if-not-resolved=\"false\"></xref>.</p>\n"
    - id: bufferSize
      type: System.Int32
      description: "\n<p>The size, in bytes, of the buffer for the <xref href=\"System.Net.Http.StreamContent\" data-throw-if-not-resolved=\"false\"></xref>.</p>\n"
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "\n<p>The <em>content</em> was <strong>null</strong>.</p>\n"
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "\n<p>The <em>bufferSize</em> was less than or equal to zero. </p>\n"
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  nameWithType: StreamContent.StreamContent(Stream, Int32)
- uid: System.Net.Http.StreamContent.CreateContentReadStreamAsync
  commentId: M:System.Net.Http.StreamContent.CreateContentReadStreamAsync
  id: CreateContentReadStreamAsync
  parent: System.Net.Http.StreamContent
  langs:
  - csharp
  - vb
  name: CreateContentReadStreamAsync()
  fullName: System.Net.Http.StreamContent.CreateContentReadStreamAsync()
  type: Method
  source:
    remote:
      path: src/System.Net.Http/src/System/Net/Http/StreamContent.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: CreateContentReadStreamAsync
    path: src/System.Net.Http/src/System/Net/Http/StreamContent.cs
    startLine: 89
  assemblies:
  - System.Net.Http
  namespace: System.Net.Http
  summary: "\n<p>Write the HTTP stream content to a memory stream as an asynchronous operation.</p>\n"
  syntax:
    content: protected override Task<Stream> CreateContentReadStreamAsync()
    content.vb: Protected Overrides Function CreateContentReadStreamAsync As Task(Of Stream)
    return:
      type: System.Threading.Tasks.Task{System.IO.Stream}
      description: "\n<p>Returns <xref href=\"System.Threading.Tasks.Task`1\" data-throw-if-not-resolved=\"false\"></xref>.</p>\n<p>The task object representing the asynchronous operation.</p>\n"
  overridden: System.Net.Http.HttpContent.CreateContentReadStreamAsync
  modifiers.csharp:
  - protected
  - override
  modifiers.vb:
  - Protected
  - Overrides
  nameWithType: StreamContent.CreateContentReadStreamAsync()
- uid: System.Net.Http.StreamContent.Dispose(System.Boolean)
  commentId: M:System.Net.Http.StreamContent.Dispose(System.Boolean)
  id: Dispose(System.Boolean)
  parent: System.Net.Http.StreamContent
  langs:
  - csharp
  - vb
  name: Dispose(Boolean)
  fullName: System.Net.Http.StreamContent.Dispose(System.Boolean)
  type: Method
  source:
    remote:
      path: src/System.Net.Http/src/System/Net/Http/StreamContent.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: Dispose
    path: src/System.Net.Http/src/System/Net/Http/StreamContent.cs
    startLine: 80
  assemblies:
  - System.Net.Http
  namespace: System.Net.Http
  summary: "\n<p>Releases the unmanaged resources used by the <xref href=\"System.Net.Http.StreamContent\" data-throw-if-not-resolved=\"false\"></xref> and optionally disposes of the managed resources.</p>\n"
  syntax:
    content: protected override void Dispose(bool disposing)
    content.vb: Protected Overrides Sub Dispose(disposing As Boolean)
    parameters:
    - id: disposing
      type: System.Boolean
      description: "\n<p>\n<strong>true</strong> to release both managed and unmanaged resources; <strong>false</strong> to releases only unmanaged resources.</p>\n"
  overridden: System.Net.Http.HttpContent.Dispose(System.Boolean)
  modifiers.csharp:
  - protected
  - override
  modifiers.vb:
  - Protected
  - Overrides
  nameWithType: StreamContent.Dispose(Boolean)
- uid: System.Net.Http.StreamContent.SerializeToStreamAsync(System.IO.Stream,System.Net.TransportContext)
  commentId: M:System.Net.Http.StreamContent.SerializeToStreamAsync(System.IO.Stream,System.Net.TransportContext)
  id: SerializeToStreamAsync(System.IO.Stream,System.Net.TransportContext)
  parent: System.Net.Http.StreamContent
  langs:
  - csharp
  - vb
  name: SerializeToStreamAsync(Stream, TransportContext)
  fullName: System.Net.Http.StreamContent.SerializeToStreamAsync(System.IO.Stream, System.Net.TransportContext)
  type: Method
  source:
    remote:
      path: src/System.Net.Http/ref/System.Net.Http.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: SerializeToStreamAsync
    path: src/System.Net.Http/ref/System.Net.Http.cs
    startLine: 232
  assemblies:
  - System.Net.Http
  namespace: System.Net.Http
  summary: "\n<p>Serialize the HTTP content to a stream as an asynchronous operation.</p>\n"
  syntax:
    content: protected override Task SerializeToStreamAsync(Stream stream, TransportContext context)
    content.vb: Protected Overrides Function SerializeToStreamAsync(stream As Stream, context As TransportContext) As Task
    parameters:
    - id: stream
      type: System.IO.Stream
      description: "\n<p>The target stream.</p>\n"
    - id: context
      type: System.Net.TransportContext
      description: "\n<p>Information about the transport (channel binding token, for example). This parameter may be <strong>null</strong>.</p>\n"
    return:
      type: System.Threading.Tasks.Task
      description: "\n<p>Returns <xref href=\"System.Threading.Tasks.Task\" data-throw-if-not-resolved=\"false\"></xref>.</p>\n<p>The task object representing the asynchronous operation.</p>\n"
  overridden: System.Net.Http.HttpContent.SerializeToStreamAsync(System.IO.Stream,System.Net.TransportContext)
  modifiers.csharp:
  - protected
  - override
  modifiers.vb:
  - Protected
  - Overrides
  nameWithType: StreamContent.SerializeToStreamAsync(Stream, TransportContext)
- uid: System.Net.Http.StreamContent.TryComputeLength(System.Int64@)
  commentId: M:System.Net.Http.StreamContent.TryComputeLength(System.Int64@)
  id: TryComputeLength(System.Int64@)
  parent: System.Net.Http.StreamContent
  langs:
  - csharp
  - vb
  name: TryComputeLength(out Int64)
  fullName: System.Net.Http.StreamContent.TryComputeLength(out System.Int64)
  type: Method
  source:
    remote:
      path: src/System.Net.Http/src/System/Net/Http/StreamContent.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: TryComputeLength
    path: src/System.Net.Http/src/System/Net/Http/StreamContent.cs
    startLine: 66
  assemblies:
  - System.Net.Http
  namespace: System.Net.Http
  summary: "\n<p>Determines whether the stream content has a valid length in bytes.</p>\n"
  syntax:
    content: protected override bool TryComputeLength(out long length)
    content.vb: Protected Overrides Function TryComputeLength(ByRef length As Long) As Boolean
    parameters:
    - id: length
      type: System.Int64
      description: "\n<p>The length in bytes of the stream content.</p>\n"
    return:
      type: System.Boolean
      description: "\n<p>Returns <xref href=\"System.Boolean\" data-throw-if-not-resolved=\"false\"></xref>.</p>\n<p>\n<strong>true</strong> if <em>length</em> is a valid length; otherwise, <strong>false</strong>.</p>\n"
  overridden: System.Net.Http.HttpContent.TryComputeLength(System.Int64@)
  modifiers.csharp:
  - protected
  - override
  modifiers.vb:
  - Protected
  - Overrides
  fullName.vb: System.Net.Http.StreamContent.TryComputeLength(ByRef System.Int64)
  name.vb: TryComputeLength(ByRef Int64)
  nameWithType: StreamContent.TryComputeLength(out Int64)
  nameWithType.vb: StreamContent.TryComputeLength(ByRef Int64)
references:
- uid: System.Net.Http
  isExternal: false
  name: System.Net.Http
  fullName: System.Net.Http
  nameWithType: System.Net.Http
  commentId: N:System.Net.Http
- uid: System.Object
  parent: System
  isExternal: false
  name: Object
  fullName: System.Object
  nameWithType: Object
  commentId: T:System.Object
- uid: System.Net.Http.HttpContent
  parent: System.Net.Http
  isExternal: false
  name: HttpContent
  fullName: System.Net.Http.HttpContent
  nameWithType: HttpContent
  commentId: T:System.Net.Http.HttpContent
- uid: System.IDisposable
  parent: System
  isExternal: false
  name: IDisposable
  fullName: System.IDisposable
  nameWithType: IDisposable
  commentId: T:System.IDisposable
- uid: System.Net.Http.HttpContent.Headers
  parent: System.Net.Http.HttpContent
  isExternal: false
  name: Headers
  fullName: System.Net.Http.HttpContent.Headers
  nameWithType: HttpContent.Headers
  commentId: P:System.Net.Http.HttpContent.Headers
- uid: System.Net.Http.HttpContent.CopyToAsync(System.IO.Stream)
  parent: System.Net.Http.HttpContent
  isExternal: true
  name: CopyToAsync(Stream)
  fullName: System.Net.Http.HttpContent.CopyToAsync(System.IO.Stream)
  spec.csharp:
  - uid: System.Net.Http.HttpContent.CopyToAsync(System.IO.Stream)
    name: CopyToAsync
    fullName: System.Net.Http.HttpContent.CopyToAsync
  - name: (
    fullName: (
  - uid: System.IO.Stream
    name: Stream
    fullName: System.IO.Stream
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Net.Http.HttpContent.CopyToAsync(System.IO.Stream)
    name: CopyToAsync
    fullName: System.Net.Http.HttpContent.CopyToAsync
  - name: (
    fullName: (
  - uid: System.IO.Stream
    name: Stream
    fullName: System.IO.Stream
    isExternal: true
  - name: )
    fullName: )
  nameWithType: HttpContent.CopyToAsync(Stream)
  commentId: M:System.Net.Http.HttpContent.CopyToAsync(System.IO.Stream)
- uid: System.Net.Http.HttpContent.CopyToAsync(System.IO.Stream,System.Net.TransportContext)
  parent: System.Net.Http.HttpContent
  isExternal: true
  name: CopyToAsync(Stream, TransportContext)
  fullName: System.Net.Http.HttpContent.CopyToAsync(System.IO.Stream, System.Net.TransportContext)
  spec.csharp:
  - uid: System.Net.Http.HttpContent.CopyToAsync(System.IO.Stream,System.Net.TransportContext)
    name: CopyToAsync
    fullName: System.Net.Http.HttpContent.CopyToAsync
  - name: (
    fullName: (
  - uid: System.IO.Stream
    name: Stream
    fullName: System.IO.Stream
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Net.TransportContext
    name: TransportContext
    fullName: System.Net.TransportContext
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Net.Http.HttpContent.CopyToAsync(System.IO.Stream,System.Net.TransportContext)
    name: CopyToAsync
    fullName: System.Net.Http.HttpContent.CopyToAsync
  - name: (
    fullName: (
  - uid: System.IO.Stream
    name: Stream
    fullName: System.IO.Stream
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Net.TransportContext
    name: TransportContext
    fullName: System.Net.TransportContext
    isExternal: true
  - name: )
    fullName: )
  nameWithType: HttpContent.CopyToAsync(Stream, TransportContext)
  commentId: M:System.Net.Http.HttpContent.CopyToAsync(System.IO.Stream,System.Net.TransportContext)
- uid: System.Net.Http.HttpContent.Dispose
  parent: System.Net.Http.HttpContent
  isExternal: false
  name: Dispose()
  fullName: System.Net.Http.HttpContent.Dispose()
  spec.csharp:
  - uid: System.Net.Http.HttpContent.Dispose
    name: Dispose
    fullName: System.Net.Http.HttpContent.Dispose
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Net.Http.HttpContent.Dispose
    name: Dispose
    fullName: System.Net.Http.HttpContent.Dispose
  - name: (
    fullName: (
  - name: )
    fullName: )
  nameWithType: HttpContent.Dispose()
  commentId: M:System.Net.Http.HttpContent.Dispose
- uid: System.Net.Http.HttpContent.LoadIntoBufferAsync
  parent: System.Net.Http.HttpContent
  isExternal: false
  name: LoadIntoBufferAsync()
  fullName: System.Net.Http.HttpContent.LoadIntoBufferAsync()
  spec.csharp:
  - uid: System.Net.Http.HttpContent.LoadIntoBufferAsync
    name: LoadIntoBufferAsync
    fullName: System.Net.Http.HttpContent.LoadIntoBufferAsync
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Net.Http.HttpContent.LoadIntoBufferAsync
    name: LoadIntoBufferAsync
    fullName: System.Net.Http.HttpContent.LoadIntoBufferAsync
  - name: (
    fullName: (
  - name: )
    fullName: )
  nameWithType: HttpContent.LoadIntoBufferAsync()
  commentId: M:System.Net.Http.HttpContent.LoadIntoBufferAsync
- uid: System.Net.Http.HttpContent.LoadIntoBufferAsync(System.Int64)
  parent: System.Net.Http.HttpContent
  isExternal: true
  name: LoadIntoBufferAsync(Int64)
  fullName: System.Net.Http.HttpContent.LoadIntoBufferAsync(System.Int64)
  spec.csharp:
  - uid: System.Net.Http.HttpContent.LoadIntoBufferAsync(System.Int64)
    name: LoadIntoBufferAsync
    fullName: System.Net.Http.HttpContent.LoadIntoBufferAsync
  - name: (
    fullName: (
  - uid: System.Int64
    name: Int64
    fullName: System.Int64
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Net.Http.HttpContent.LoadIntoBufferAsync(System.Int64)
    name: LoadIntoBufferAsync
    fullName: System.Net.Http.HttpContent.LoadIntoBufferAsync
  - name: (
    fullName: (
  - uid: System.Int64
    name: Int64
    fullName: System.Int64
    isExternal: true
  - name: )
    fullName: )
  nameWithType: HttpContent.LoadIntoBufferAsync(Int64)
  commentId: M:System.Net.Http.HttpContent.LoadIntoBufferAsync(System.Int64)
- uid: System.Net.Http.HttpContent.ReadAsByteArrayAsync
  parent: System.Net.Http.HttpContent
  isExternal: false
  name: ReadAsByteArrayAsync()
  fullName: System.Net.Http.HttpContent.ReadAsByteArrayAsync()
  spec.csharp:
  - uid: System.Net.Http.HttpContent.ReadAsByteArrayAsync
    name: ReadAsByteArrayAsync
    fullName: System.Net.Http.HttpContent.ReadAsByteArrayAsync
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Net.Http.HttpContent.ReadAsByteArrayAsync
    name: ReadAsByteArrayAsync
    fullName: System.Net.Http.HttpContent.ReadAsByteArrayAsync
  - name: (
    fullName: (
  - name: )
    fullName: )
  nameWithType: HttpContent.ReadAsByteArrayAsync()
  commentId: M:System.Net.Http.HttpContent.ReadAsByteArrayAsync
- uid: System.Net.Http.HttpContent.ReadAsStreamAsync
  parent: System.Net.Http.HttpContent
  isExternal: false
  name: ReadAsStreamAsync()
  fullName: System.Net.Http.HttpContent.ReadAsStreamAsync()
  spec.csharp:
  - uid: System.Net.Http.HttpContent.ReadAsStreamAsync
    name: ReadAsStreamAsync
    fullName: System.Net.Http.HttpContent.ReadAsStreamAsync
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Net.Http.HttpContent.ReadAsStreamAsync
    name: ReadAsStreamAsync
    fullName: System.Net.Http.HttpContent.ReadAsStreamAsync
  - name: (
    fullName: (
  - name: )
    fullName: )
  nameWithType: HttpContent.ReadAsStreamAsync()
  commentId: M:System.Net.Http.HttpContent.ReadAsStreamAsync
- uid: System.Net.Http.HttpContent.ReadAsStringAsync
  parent: System.Net.Http.HttpContent
  isExternal: false
  name: ReadAsStringAsync()
  fullName: System.Net.Http.HttpContent.ReadAsStringAsync()
  spec.csharp:
  - uid: System.Net.Http.HttpContent.ReadAsStringAsync
    name: ReadAsStringAsync
    fullName: System.Net.Http.HttpContent.ReadAsStringAsync
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Net.Http.HttpContent.ReadAsStringAsync
    name: ReadAsStringAsync
    fullName: System.Net.Http.HttpContent.ReadAsStringAsync
  - name: (
    fullName: (
  - name: )
    fullName: )
  nameWithType: HttpContent.ReadAsStringAsync()
  commentId: M:System.Net.Http.HttpContent.ReadAsStringAsync
- uid: System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  nameWithType: Object.ToString()
  commentId: M:System.Object.ToString
- uid: System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
  nameWithType: Object.Equals(Object)
  commentId: M:System.Object.Equals(System.Object)
- uid: System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
  nameWithType: Object.Equals(Object, Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
  nameWithType: Object.ReferenceEquals(Object, Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
- uid: System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  nameWithType: Object.GetHashCode()
  commentId: M:System.Object.GetHashCode
- uid: System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  nameWithType: Object.GetType()
  commentId: M:System.Object.GetType
- uid: System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  nameWithType: Object.MemberwiseClone()
  commentId: M:System.Object.MemberwiseClone
- uid: System
  isExternal: false
  name: System
  fullName: System
  nameWithType: System
  commentId: N:System
- uid: System.IO.Stream
  parent: System.IO
  isExternal: false
  name: Stream
  fullName: System.IO.Stream
  nameWithType: Stream
  commentId: T:System.IO.Stream
- uid: System.IO
  isExternal: false
  name: System.IO
  fullName: System.IO
  nameWithType: System.IO
  commentId: N:System.IO
- uid: System.Int32
  parent: System
  isExternal: false
  name: Int32
  fullName: System.Int32
  nameWithType: Int32
  commentId: T:System.Int32
- uid: System.Net.Http.HttpContent.CreateContentReadStreamAsync
  parent: System.Net.Http.HttpContent
  isExternal: false
  name: CreateContentReadStreamAsync()
  fullName: System.Net.Http.HttpContent.CreateContentReadStreamAsync()
  spec.csharp:
  - uid: System.Net.Http.HttpContent.CreateContentReadStreamAsync
    name: CreateContentReadStreamAsync
    fullName: System.Net.Http.HttpContent.CreateContentReadStreamAsync
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Net.Http.HttpContent.CreateContentReadStreamAsync
    name: CreateContentReadStreamAsync
    fullName: System.Net.Http.HttpContent.CreateContentReadStreamAsync
  - name: (
    fullName: (
  - name: )
    fullName: )
  nameWithType: HttpContent.CreateContentReadStreamAsync()
  commentId: M:System.Net.Http.HttpContent.CreateContentReadStreamAsync
- uid: System.Threading.Tasks.Task{System.IO.Stream}
  parent: System.Threading.Tasks
  definition: System.Threading.Tasks.Task`1
  name: Task<Stream>
  fullName: System.Threading.Tasks.Task<System.IO.Stream>
  fullname.vb: System.Threading.Tasks.Task(Of System.IO.Stream)
  name.vb: Task(Of Stream)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    fullName: <
  - uid: System.IO.Stream
    name: Stream
    fullName: System.IO.Stream
    isExternal: true
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - uid: System.IO.Stream
    name: Stream
    fullName: System.IO.Stream
    isExternal: true
  - name: )
    fullName: )
  nameWithType: Task<Stream>
  nameWithType.vb: Task(Of Stream)
  commentId: T:System.Threading.Tasks.Task{System.IO.Stream}
- uid: System.Threading.Tasks.Task`1
  isExternal: false
  name: Task<TResult>
  fullName: System.Threading.Tasks.Task<TResult>
  fullname.vb: System.Threading.Tasks.Task(Of TResult)
  name.vb: Task(Of TResult)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    fullName: System.Threading.Tasks.Task
  - name: <
    fullName: <
  - name: TResult
    fullName: TResult
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    fullName: System.Threading.Tasks.Task
  - name: '(Of '
    fullName: '(Of '
  - name: TResult
    fullName: TResult
  - name: )
    fullName: )
  nameWithType: Task<TResult>
  nameWithType.vb: Task(Of TResult)
  commentId: T:System.Threading.Tasks.Task`1
- uid: System.Threading.Tasks
  isExternal: false
  name: System.Threading.Tasks
  fullName: System.Threading.Tasks
  nameWithType: System.Threading.Tasks
  commentId: N:System.Threading.Tasks
- uid: System.Net.Http.HttpContent.Dispose(System.Boolean)
  parent: System.Net.Http.HttpContent
  isExternal: true
  name: Dispose(Boolean)
  fullName: System.Net.Http.HttpContent.Dispose(System.Boolean)
  spec.csharp:
  - uid: System.Net.Http.HttpContent.Dispose(System.Boolean)
    name: Dispose
    fullName: System.Net.Http.HttpContent.Dispose
  - name: (
    fullName: (
  - uid: System.Boolean
    name: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Net.Http.HttpContent.Dispose(System.Boolean)
    name: Dispose
    fullName: System.Net.Http.HttpContent.Dispose
  - name: (
    fullName: (
  - uid: System.Boolean
    name: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    fullName: )
  nameWithType: HttpContent.Dispose(Boolean)
  commentId: M:System.Net.Http.HttpContent.Dispose(System.Boolean)
- uid: System.Boolean
  parent: System
  isExternal: false
  name: Boolean
  fullName: System.Boolean
  nameWithType: Boolean
  commentId: T:System.Boolean
- uid: System.Net.Http.HttpContent.SerializeToStreamAsync(System.IO.Stream,System.Net.TransportContext)
  parent: System.Net.Http.HttpContent
  isExternal: true
  name: SerializeToStreamAsync(Stream, TransportContext)
  fullName: System.Net.Http.HttpContent.SerializeToStreamAsync(System.IO.Stream, System.Net.TransportContext)
  spec.csharp:
  - uid: System.Net.Http.HttpContent.SerializeToStreamAsync(System.IO.Stream,System.Net.TransportContext)
    name: SerializeToStreamAsync
    fullName: System.Net.Http.HttpContent.SerializeToStreamAsync
  - name: (
    fullName: (
  - uid: System.IO.Stream
    name: Stream
    fullName: System.IO.Stream
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Net.TransportContext
    name: TransportContext
    fullName: System.Net.TransportContext
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Net.Http.HttpContent.SerializeToStreamAsync(System.IO.Stream,System.Net.TransportContext)
    name: SerializeToStreamAsync
    fullName: System.Net.Http.HttpContent.SerializeToStreamAsync
  - name: (
    fullName: (
  - uid: System.IO.Stream
    name: Stream
    fullName: System.IO.Stream
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Net.TransportContext
    name: TransportContext
    fullName: System.Net.TransportContext
    isExternal: true
  - name: )
    fullName: )
  nameWithType: HttpContent.SerializeToStreamAsync(Stream, TransportContext)
  commentId: M:System.Net.Http.HttpContent.SerializeToStreamAsync(System.IO.Stream,System.Net.TransportContext)
- uid: System.Net.TransportContext
  isExternal: false
  name: TransportContext
  fullName: System.Net.TransportContext
  nameWithType: TransportContext
  commentId: T:System.Net.TransportContext
- uid: System.Threading.Tasks.Task
  parent: System.Threading.Tasks
  isExternal: false
  name: Task
  fullName: System.Threading.Tasks.Task
  nameWithType: Task
  commentId: T:System.Threading.Tasks.Task
- uid: System.Net.Http.HttpContent.TryComputeLength(System.Int64@)
  parent: System.Net.Http.HttpContent
  isExternal: true
  name: TryComputeLength(Int64)
  fullName: System.Net.Http.HttpContent.TryComputeLength(System.Int64)
  spec.csharp:
  - uid: System.Net.Http.HttpContent.TryComputeLength(System.Int64@)
    name: TryComputeLength
    fullName: System.Net.Http.HttpContent.TryComputeLength
  - name: (
    fullName: (
  - uid: System.Int64
    name: Int64
    fullName: System.Int64
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Net.Http.HttpContent.TryComputeLength(System.Int64@)
    name: TryComputeLength
    fullName: System.Net.Http.HttpContent.TryComputeLength
  - name: (
    fullName: (
  - uid: System.Int64
    name: Int64
    fullName: System.Int64
    isExternal: true
  - name: )
    fullName: )
  nameWithType: HttpContent.TryComputeLength(Int64)
  commentId: M:System.Net.Http.HttpContent.TryComputeLength(System.Int64@)
- uid: System.Int64
  parent: System
  isExternal: false
  name: Int64
  fullName: System.Int64
  nameWithType: Int64
  commentId: T:System.Int64
- uid: System.ArgumentNullException
  isExternal: false
  name: ArgumentNullException
  fullName: System.ArgumentNullException
  nameWithType: ArgumentNullException
  commentId: T:System.ArgumentNullException
- uid: System.ArgumentOutOfRangeException
  isExternal: false
  name: ArgumentOutOfRangeException
  fullName: System.ArgumentOutOfRangeException
  nameWithType: ArgumentOutOfRangeException
  commentId: T:System.ArgumentOutOfRangeException
