### YamlMime:ManagedReference
items:
- uid: System.Linq.Expressions.DynamicExpressionVisitor
  commentId: T:System.Linq.Expressions.DynamicExpressionVisitor
  id: DynamicExpressionVisitor
  parent: System.Linq.Expressions
  children:
  - System.Linq.Expressions.DynamicExpressionVisitor.#ctor
  - System.Linq.Expressions.DynamicExpressionVisitor.VisitDynamic(System.Linq.Expressions.DynamicExpression)
  langs:
  - csharp
  - vb
  name: DynamicExpressionVisitor
  nameWithType: DynamicExpressionVisitor
  fullName: System.Linq.Expressions.DynamicExpressionVisitor
  type: Class
  source:
    remote:
      path: src/System.Dynamic.Runtime/ref/System.Dynamic.Runtime.Manual.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: DynamicExpressionVisitor
    path: src/System.Dynamic.Runtime/ref/System.Dynamic.Runtime.Manual.cs
    startLine: 11
  assemblies:
  - System.Dynamic.Runtime
  namespace: System.Linq.Expressions
  summary: "\n<p>Represents a visitor or rewriter for dynamic expression trees.</p>\n"
  syntax:
    content: 'public abstract class DynamicExpressionVisitor : ExpressionVisitor'
    content.vb: >-
      Public MustInherit Class DynamicExpressionVisitor
          Inherits ExpressionVisitor
  inheritance:
  - System.Object
  modifiers.csharp:
  - public
  - abstract
  - class
  modifiers.vb:
  - Public
  - MustInherit
  - Class
- uid: System.Linq.Expressions.DynamicExpressionVisitor.#ctor
  commentId: M:System.Linq.Expressions.DynamicExpressionVisitor.#ctor
  id: '#ctor'
  parent: System.Linq.Expressions.DynamicExpressionVisitor
  langs:
  - csharp
  - vb
  name: DynamicExpressionVisitor()
  nameWithType: DynamicExpressionVisitor.DynamicExpressionVisitor()
  fullName: System.Linq.Expressions.DynamicExpressionVisitor.DynamicExpressionVisitor()
  type: Constructor
  source:
    remote:
      path: src/System.Dynamic.Runtime/ref/System.Dynamic.Runtime.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: .ctor
    path: src/System.Dynamic.Runtime/ref/System.Dynamic.Runtime.cs
    startLine: 261
  assemblies:
  - System.Dynamic.Runtime
  namespace: System.Linq.Expressions
  summary: "\n<p>Initializes a new instance of <xref href=\"System.Linq.Expressions.DynamicExpressionVisitor\" data-throw-if-not-resolved=\"false\"></xref>.</p>\n"
  syntax:
    content: protected DynamicExpressionVisitor()
    content.vb: Protected Sub New
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: System.Linq.Expressions.DynamicExpressionVisitor.VisitDynamic(System.Linq.Expressions.DynamicExpression)
  commentId: M:System.Linq.Expressions.DynamicExpressionVisitor.VisitDynamic(System.Linq.Expressions.DynamicExpression)
  id: VisitDynamic(System.Linq.Expressions.DynamicExpression)
  parent: System.Linq.Expressions.DynamicExpressionVisitor
  langs:
  - csharp
  - vb
  name: VisitDynamic(DynamicExpression)
  nameWithType: DynamicExpressionVisitor.VisitDynamic(DynamicExpression)
  fullName: System.Linq.Expressions.DynamicExpressionVisitor.VisitDynamic(System.Linq.Expressions.DynamicExpression)
  type: Method
  source:
    remote:
      path: src/System.Dynamic.Runtime/ref/System.Dynamic.Runtime.Manual.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: VisitDynamic
    path: src/System.Dynamic.Runtime/ref/System.Dynamic.Runtime.Manual.cs
    startLine: 14
  assemblies:
  - System.Dynamic.Runtime
  namespace: System.Linq.Expressions
  summary: "\n<p>Visits the children of the <xref href=\"System.Linq.Expressions.DynamicExpression\" data-throw-if-not-resolved=\"false\"></xref>.</p>\n"
  syntax:
    content: protected virtual Expression VisitDynamic(DynamicExpression node)
    content.vb: Protected Overridable Function VisitDynamic(node As DynamicExpression) As Expression
    parameters:
    - id: node
      type: System.Linq.Expressions.DynamicExpression
      description: "\n<p>The expression to visit.</p>\n"
    return:
      type: Expression
      description: "\n<p>Returns <xref href=\"System.Linq.Expressions.Expression\" data-throw-if-not-resolved=\"false\"></xref>, the modified expression, if it or any subexpression is modified; otherwise, returns the original expression.</p>\n"
  modifiers.csharp:
  - protected
  - virtual
  modifiers.vb:
  - Protected
  - Overridable
references:
- uid: System.Linq.Expressions
  commentId: N:System.Linq.Expressions
  isExternal: false
  name: System.Linq.Expressions
  nameWithType: System.Linq.Expressions
  fullName: System.Linq.Expressions
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: false
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: System.Linq.Expressions.DynamicExpression
  commentId: T:System.Linq.Expressions.DynamicExpression
  parent: System.Linq.Expressions
  isExternal: false
  name: DynamicExpression
  nameWithType: DynamicExpression
  fullName: System.Linq.Expressions.DynamicExpression
- uid: Expression
  commentId: '!:Expression'
  isExternal: true
  name: Expression
  nameWithType: Expression
  fullName: Expression
