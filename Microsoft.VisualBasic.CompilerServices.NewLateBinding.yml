### YamlMime:ManagedReference
items:
- uid: Microsoft.VisualBasic.CompilerServices.NewLateBinding
  commentId: T:Microsoft.VisualBasic.CompilerServices.NewLateBinding
  id: NewLateBinding
  parent: Microsoft.VisualBasic.CompilerServices
  children:
  - Microsoft.VisualBasic.CompilerServices.NewLateBinding.LateCall(System.Object,System.Type,System.String,System.Object[],System.String[],System.Type[],System.Boolean[],System.Boolean)
  - Microsoft.VisualBasic.CompilerServices.NewLateBinding.LateGet(System.Object,System.Type,System.String,System.Object[],System.String[],System.Type[],System.Boolean[])
  - Microsoft.VisualBasic.CompilerServices.NewLateBinding.LateIndexGet(System.Object,System.Object[],System.String[])
  - Microsoft.VisualBasic.CompilerServices.NewLateBinding.LateIndexSet(System.Object,System.Object[],System.String[])
  - Microsoft.VisualBasic.CompilerServices.NewLateBinding.LateIndexSetComplex(System.Object,System.Object[],System.String[],System.Boolean,System.Boolean)
  - Microsoft.VisualBasic.CompilerServices.NewLateBinding.LateSet(System.Object,System.Type,System.String,System.Object[],System.String[],System.Type[])
  - Microsoft.VisualBasic.CompilerServices.NewLateBinding.LateSet(System.Object,System.Type,System.String,System.Object[],System.String[],System.Type[],System.Boolean,System.Boolean,Microsoft.VisualBasic.CallType)
  - Microsoft.VisualBasic.CompilerServices.NewLateBinding.LateSetComplex(System.Object,System.Type,System.String,System.Object[],System.String[],System.Type[],System.Boolean,System.Boolean)
  langs:
  - csharp
  - vb
  name: NewLateBinding
  nameWithType: NewLateBinding
  fullName: Microsoft.VisualBasic.CompilerServices.NewLateBinding
  type: Class
  source:
    remote:
      path: src/Microsoft.VisualBasic/ref/Microsoft.VisualBasic.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: NewLateBinding
    path: src/Microsoft.VisualBasic/ref/Microsoft.VisualBasic.cs
    startLine: 121
  assemblies:
  - Microsoft.VisualBasic
  namespace: Microsoft.VisualBasic.CompilerServices
  summary: "\n<p>This class provides helpers that the Visual Basic compiler uses for late binding calls; it is not meant to be called directly from your code.</p>\n"
  syntax:
    content: public sealed class NewLateBinding
    content.vb: Public NotInheritable Class NewLateBinding
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  modifiers.csharp:
  - public
  - sealed
  - class
  modifiers.vb:
  - Public
  - NotInheritable
  - Class
- uid: Microsoft.VisualBasic.CompilerServices.NewLateBinding.LateCall(System.Object,System.Type,System.String,System.Object[],System.String[],System.Type[],System.Boolean[],System.Boolean)
  commentId: M:Microsoft.VisualBasic.CompilerServices.NewLateBinding.LateCall(System.Object,System.Type,System.String,System.Object[],System.String[],System.Type[],System.Boolean[],System.Boolean)
  id: LateCall(System.Object,System.Type,System.String,System.Object[],System.String[],System.Type[],System.Boolean[],System.Boolean)
  parent: Microsoft.VisualBasic.CompilerServices.NewLateBinding
  langs:
  - csharp
  - vb
  name: LateCall(Object, Type, String, Object[], String[], Type[], Boolean[], Boolean)
  nameWithType: NewLateBinding.LateCall(Object, Type, String, Object[], String[], Type[], Boolean[], Boolean)
  fullName: Microsoft.VisualBasic.CompilerServices.NewLateBinding.LateCall(System.Object, System.Type, System.String, System.Object[], System.String[], System.Type[], System.Boolean[], System.Boolean)
  type: Method
  source:
    remote:
      path: src/Microsoft.VisualBasic/ref/Microsoft.VisualBasic.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: LateCall
    path: src/Microsoft.VisualBasic/ref/Microsoft.VisualBasic.cs
    startLine: 125
  assemblies:
  - Microsoft.VisualBasic
  namespace: Microsoft.VisualBasic.CompilerServices
  summary: "\n<p>Executes a late-bound method or function call. This helper method is not meant to be called directly from your code.</p>\n"
  syntax:
    content: public static object LateCall(object Instance, Type Type, string MemberName, object[] Arguments, string[] ArgumentNames, Type[] TypeArguments, bool[] CopyBack, bool IgnoreReturn)
    content.vb: Public Shared Function LateCall(Instance As Object, Type As Type, MemberName As String, Arguments As Object(), ArgumentNames As String(), TypeArguments As Type(), CopyBack As Boolean(), IgnoreReturn As Boolean) As Object
    parameters:
    - id: Instance
      type: System.Object
      description: "\n<p>An instance of the call object exposing the property or method.</p>\n"
    - id: Type
      type: System.Type
      description: "\n<p>The type of the call object.</p>\n"
    - id: MemberName
      type: System.String
      description: "\n<p>The name of the property or method on the call object.</p>\n"
    - id: Arguments
      type: System.Object[]
      description: "\n<p>An array containing the arguments to be passed to the property or method being called.</p>\n"
    - id: ArgumentNames
      type: System.String[]
      description: "\n<p>An array of argument names.</p>\n"
    - id: TypeArguments
      type: System.Type[]
      description: "\n<p>An array of argument types; used only for generic calls to pass argument types.</p>\n"
    - id: CopyBack
      type: System.Boolean[]
      description: "\n<p>An array of <strong>Boolean</strong> values that the late binder uses to communicate back to the call site which arguments match <strong>ByRef</strong> parameters. Each <strong>True</strong> value indicates that the arguments matched and should be copied out after the call to <strong>LateCall</strong> is complete.</p>\n"
    - id: IgnoreReturn
      type: System.Boolean
      description: "\n<p>A <strong>Boolean</strong> value indicating whether or not the return value can be ignored.</p>\n"
    return:
      type: System.Object
      description: "\n<p>An instance of the call object.</p>\n"
  nameWithType.vb: NewLateBinding.LateCall(Object, Type, String, Object(), String(), Type(), Boolean(), Boolean)
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: Microsoft.VisualBasic.CompilerServices.NewLateBinding.LateCall(System.Object, System.Type, System.String, System.Object(), System.String(), System.Type(), System.Boolean(), System.Boolean)
  name.vb: LateCall(Object, Type, String, Object(), String(), Type(), Boolean(), Boolean)
- uid: Microsoft.VisualBasic.CompilerServices.NewLateBinding.LateGet(System.Object,System.Type,System.String,System.Object[],System.String[],System.Type[],System.Boolean[])
  commentId: M:Microsoft.VisualBasic.CompilerServices.NewLateBinding.LateGet(System.Object,System.Type,System.String,System.Object[],System.String[],System.Type[],System.Boolean[])
  id: LateGet(System.Object,System.Type,System.String,System.Object[],System.String[],System.Type[],System.Boolean[])
  parent: Microsoft.VisualBasic.CompilerServices.NewLateBinding
  langs:
  - csharp
  - vb
  name: LateGet(Object, Type, String, Object[], String[], Type[], Boolean[])
  nameWithType: NewLateBinding.LateGet(Object, Type, String, Object[], String[], Type[], Boolean[])
  fullName: Microsoft.VisualBasic.CompilerServices.NewLateBinding.LateGet(System.Object, System.Type, System.String, System.Object[], System.String[], System.Type[], System.Boolean[])
  type: Method
  source:
    remote:
      path: src/Microsoft.VisualBasic/ref/Microsoft.VisualBasic.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: LateGet
    path: src/Microsoft.VisualBasic/ref/Microsoft.VisualBasic.cs
    startLine: 126
  assemblies:
  - Microsoft.VisualBasic
  namespace: Microsoft.VisualBasic.CompilerServices
  summary: "\n<p>Executes a late-bound property get or field access call. This helper method is not meant to be called directly from your code.</p>\n"
  syntax:
    content: public static object LateGet(object Instance, Type Type, string MemberName, object[] Arguments, string[] ArgumentNames, Type[] TypeArguments, bool[] CopyBack)
    content.vb: Public Shared Function LateGet(Instance As Object, Type As Type, MemberName As String, Arguments As Object(), ArgumentNames As String(), TypeArguments As Type(), CopyBack As Boolean()) As Object
    parameters:
    - id: Instance
      type: System.Object
      description: "\n<p>An instance of the call object exposing the property or method.</p>\n"
    - id: Type
      type: System.Type
      description: "\n<p>The type of the call object.</p>\n"
    - id: MemberName
      type: System.String
      description: "\n<p>The name of the property or method on the call object.</p>\n"
    - id: Arguments
      type: System.Object[]
      description: "\n<p>An array containing the arguments to be passed to the property or method being called.</p>\n"
    - id: ArgumentNames
      type: System.String[]
      description: "\n<p>An array of argument names.</p>\n"
    - id: TypeArguments
      type: System.Type[]
      description: "\n<p>An array of argument types; used only for generic calls to pass argument types.</p>\n"
    - id: CopyBack
      type: System.Boolean[]
      description: "\n<p>An array of <strong>Boolean</strong> values that the late binder uses to communicate back to the call site which arguments match <strong>ByRef</strong> parameters. Each <strong>True</strong> value indicates that the arguments matched and should be copied out after the call to <strong>LateCall</strong> is complete.</p>\n"
    return:
      type: System.Object
      description: "\n<p>An instance of the call object.</p>\n"
  nameWithType.vb: NewLateBinding.LateGet(Object, Type, String, Object(), String(), Type(), Boolean())
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: Microsoft.VisualBasic.CompilerServices.NewLateBinding.LateGet(System.Object, System.Type, System.String, System.Object(), System.String(), System.Type(), System.Boolean())
  name.vb: LateGet(Object, Type, String, Object(), String(), Type(), Boolean())
- uid: Microsoft.VisualBasic.CompilerServices.NewLateBinding.LateIndexGet(System.Object,System.Object[],System.String[])
  commentId: M:Microsoft.VisualBasic.CompilerServices.NewLateBinding.LateIndexGet(System.Object,System.Object[],System.String[])
  id: LateIndexGet(System.Object,System.Object[],System.String[])
  parent: Microsoft.VisualBasic.CompilerServices.NewLateBinding
  langs:
  - csharp
  - vb
  name: LateIndexGet(Object, Object[], String[])
  nameWithType: NewLateBinding.LateIndexGet(Object, Object[], String[])
  fullName: Microsoft.VisualBasic.CompilerServices.NewLateBinding.LateIndexGet(System.Object, System.Object[], System.String[])
  type: Method
  source:
    remote:
      path: src/Microsoft.VisualBasic/ref/Microsoft.VisualBasic.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: LateIndexGet
    path: src/Microsoft.VisualBasic/ref/Microsoft.VisualBasic.cs
    startLine: 127
  assemblies:
  - Microsoft.VisualBasic
  namespace: Microsoft.VisualBasic.CompilerServices
  summary: "\n<p>Executes a late-bound property get or field access call. This helper method is not meant to be called directly from your code.</p>\n"
  syntax:
    content: public static object LateIndexGet(object Instance, object[] Arguments, string[] ArgumentNames)
    content.vb: Public Shared Function LateIndexGet(Instance As Object, Arguments As Object(), ArgumentNames As String()) As Object
    parameters:
    - id: Instance
      type: System.Object
      description: "\n<p>An instance of the call object exposing the property or method.</p>\n"
    - id: Arguments
      type: System.Object[]
      description: "\n<p>An array containing the arguments to be passed to the property or method being called.</p>\n"
    - id: ArgumentNames
      type: System.String[]
      description: "\n<p>An array of argument names.</p>\n"
    return:
      type: System.Object
      description: "\n<p>An instance of the call object.</p>\n"
  nameWithType.vb: NewLateBinding.LateIndexGet(Object, Object(), String())
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: Microsoft.VisualBasic.CompilerServices.NewLateBinding.LateIndexGet(System.Object, System.Object(), System.String())
  name.vb: LateIndexGet(Object, Object(), String())
- uid: Microsoft.VisualBasic.CompilerServices.NewLateBinding.LateIndexSet(System.Object,System.Object[],System.String[])
  commentId: M:Microsoft.VisualBasic.CompilerServices.NewLateBinding.LateIndexSet(System.Object,System.Object[],System.String[])
  id: LateIndexSet(System.Object,System.Object[],System.String[])
  parent: Microsoft.VisualBasic.CompilerServices.NewLateBinding
  langs:
  - csharp
  - vb
  name: LateIndexSet(Object, Object[], String[])
  nameWithType: NewLateBinding.LateIndexSet(Object, Object[], String[])
  fullName: Microsoft.VisualBasic.CompilerServices.NewLateBinding.LateIndexSet(System.Object, System.Object[], System.String[])
  type: Method
  source:
    remote:
      path: src/Microsoft.VisualBasic/ref/Microsoft.VisualBasic.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: LateIndexSet
    path: src/Microsoft.VisualBasic/ref/Microsoft.VisualBasic.cs
    startLine: 128
  assemblies:
  - Microsoft.VisualBasic
  namespace: Microsoft.VisualBasic.CompilerServices
  summary: "\n<p>Executes a late-bound property set or field write call. This helper method is not meant to be called directly from your code.</p>\n"
  syntax:
    content: public static void LateIndexSet(object Instance, object[] Arguments, string[] ArgumentNames)
    content.vb: Public Shared Sub LateIndexSet(Instance As Object, Arguments As Object(), ArgumentNames As String())
    parameters:
    - id: Instance
      type: System.Object
      description: "\n<p>An instance of the call object exposing the property or method.</p>\n"
    - id: Arguments
      type: System.Object[]
      description: "\n<p>An array containing the arguments to be passed to the property or method being called.</p>\n"
    - id: ArgumentNames
      type: System.String[]
      description: "\n<p>An array of argument names.</p>\n"
  nameWithType.vb: NewLateBinding.LateIndexSet(Object, Object(), String())
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: Microsoft.VisualBasic.CompilerServices.NewLateBinding.LateIndexSet(System.Object, System.Object(), System.String())
  name.vb: LateIndexSet(Object, Object(), String())
- uid: Microsoft.VisualBasic.CompilerServices.NewLateBinding.LateIndexSetComplex(System.Object,System.Object[],System.String[],System.Boolean,System.Boolean)
  commentId: M:Microsoft.VisualBasic.CompilerServices.NewLateBinding.LateIndexSetComplex(System.Object,System.Object[],System.String[],System.Boolean,System.Boolean)
  id: LateIndexSetComplex(System.Object,System.Object[],System.String[],System.Boolean,System.Boolean)
  parent: Microsoft.VisualBasic.CompilerServices.NewLateBinding
  langs:
  - csharp
  - vb
  name: LateIndexSetComplex(Object, Object[], String[], Boolean, Boolean)
  nameWithType: NewLateBinding.LateIndexSetComplex(Object, Object[], String[], Boolean, Boolean)
  fullName: Microsoft.VisualBasic.CompilerServices.NewLateBinding.LateIndexSetComplex(System.Object, System.Object[], System.String[], System.Boolean, System.Boolean)
  type: Method
  source:
    remote:
      path: src/Microsoft.VisualBasic/ref/Microsoft.VisualBasic.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: LateIndexSetComplex
    path: src/Microsoft.VisualBasic/ref/Microsoft.VisualBasic.cs
    startLine: 129
  assemblies:
  - Microsoft.VisualBasic
  namespace: Microsoft.VisualBasic.CompilerServices
  summary: "\n<p>Executes a late-bound property set or field write call. This helper method is not meant to be called directly from your code.</p>\n"
  syntax:
    content: public static void LateIndexSetComplex(object Instance, object[] Arguments, string[] ArgumentNames, bool OptimisticSet, bool RValueBase)
    content.vb: Public Shared Sub LateIndexSetComplex(Instance As Object, Arguments As Object(), ArgumentNames As String(), OptimisticSet As Boolean, RValueBase As Boolean)
    parameters:
    - id: Instance
      type: System.Object
      description: "\n<p>An instance of the call object exposing the property or method.</p>\n"
    - id: Arguments
      type: System.Object[]
      description: "\n<p>An array containing the arguments to be passed to the property or method being called.</p>\n"
    - id: ArgumentNames
      type: System.String[]
      description: "\n<p>An array of argument names.</p>\n"
    - id: OptimisticSet
      type: System.Boolean
      description: "\n<p>A <strong>Boolean</strong> value used to determine whether the set operation will work. Set to <strong>True</strong> when you believe that an intermediate value has been set in the property or field; otherwise <strong>False</strong>.</p>\n"
    - id: RValueBase
      type: System.Boolean
      description: "\n<p>A <strong>Boolean</strong> value that specifies when the base reference of the late reference is an <strong>RValue</strong>. Set to <strong>True</strong> when the base reference of the late reference is an <strong>RValue</strong>; this allows you to generate a run-time exception for late assignments to fields of <strong>RValues</strong> of value types. Otherwise, set to <strong>False</strong>.</p>\n"
  nameWithType.vb: NewLateBinding.LateIndexSetComplex(Object, Object(), String(), Boolean, Boolean)
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: Microsoft.VisualBasic.CompilerServices.NewLateBinding.LateIndexSetComplex(System.Object, System.Object(), System.String(), System.Boolean, System.Boolean)
  name.vb: LateIndexSetComplex(Object, Object(), String(), Boolean, Boolean)
- uid: Microsoft.VisualBasic.CompilerServices.NewLateBinding.LateSet(System.Object,System.Type,System.String,System.Object[],System.String[],System.Type[])
  commentId: M:Microsoft.VisualBasic.CompilerServices.NewLateBinding.LateSet(System.Object,System.Type,System.String,System.Object[],System.String[],System.Type[])
  id: LateSet(System.Object,System.Type,System.String,System.Object[],System.String[],System.Type[])
  parent: Microsoft.VisualBasic.CompilerServices.NewLateBinding
  langs:
  - csharp
  - vb
  name: LateSet(Object, Type, String, Object[], String[], Type[])
  nameWithType: NewLateBinding.LateSet(Object, Type, String, Object[], String[], Type[])
  fullName: Microsoft.VisualBasic.CompilerServices.NewLateBinding.LateSet(System.Object, System.Type, System.String, System.Object[], System.String[], System.Type[])
  type: Method
  source:
    remote:
      path: src/Microsoft.VisualBasic/ref/Microsoft.VisualBasic.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: LateSet
    path: src/Microsoft.VisualBasic/ref/Microsoft.VisualBasic.cs
    startLine: 130
  assemblies:
  - Microsoft.VisualBasic
  namespace: Microsoft.VisualBasic.CompilerServices
  summary: "\n<p>Executes a late-bound property set or field write call. This helper method is not meant to be called directly from your code.</p>\n"
  syntax:
    content: public static void LateSet(object Instance, Type Type, string MemberName, object[] Arguments, string[] ArgumentNames, Type[] TypeArguments)
    content.vb: Public Shared Sub LateSet(Instance As Object, Type As Type, MemberName As String, Arguments As Object(), ArgumentNames As String(), TypeArguments As Type())
    parameters:
    - id: Instance
      type: System.Object
      description: "\n<p>An instance of the call object exposing the property or method.</p>\n"
    - id: Type
      type: System.Type
      description: "\n<p>The type of the call object.</p>\n"
    - id: MemberName
      type: System.String
      description: "\n<p>The name of the property or method on the call object.</p>\n"
    - id: Arguments
      type: System.Object[]
      description: "\n<p>An array containing the arguments to be passed to the property or method being called.</p>\n"
    - id: ArgumentNames
      type: System.String[]
      description: "\n<p>An array of argument names.</p>\n"
    - id: TypeArguments
      type: System.Type[]
      description: "\n<p>An array of argument types; used only for generic calls to pass argument types.</p>\n"
  nameWithType.vb: NewLateBinding.LateSet(Object, Type, String, Object(), String(), Type())
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: Microsoft.VisualBasic.CompilerServices.NewLateBinding.LateSet(System.Object, System.Type, System.String, System.Object(), System.String(), System.Type())
  name.vb: LateSet(Object, Type, String, Object(), String(), Type())
- uid: Microsoft.VisualBasic.CompilerServices.NewLateBinding.LateSet(System.Object,System.Type,System.String,System.Object[],System.String[],System.Type[],System.Boolean,System.Boolean,Microsoft.VisualBasic.CallType)
  commentId: M:Microsoft.VisualBasic.CompilerServices.NewLateBinding.LateSet(System.Object,System.Type,System.String,System.Object[],System.String[],System.Type[],System.Boolean,System.Boolean,Microsoft.VisualBasic.CallType)
  id: LateSet(System.Object,System.Type,System.String,System.Object[],System.String[],System.Type[],System.Boolean,System.Boolean,Microsoft.VisualBasic.CallType)
  parent: Microsoft.VisualBasic.CompilerServices.NewLateBinding
  langs:
  - csharp
  - vb
  name: LateSet(Object, Type, String, Object[], String[], Type[], Boolean, Boolean, CallType)
  nameWithType: NewLateBinding.LateSet(Object, Type, String, Object[], String[], Type[], Boolean, Boolean, CallType)
  fullName: Microsoft.VisualBasic.CompilerServices.NewLateBinding.LateSet(System.Object, System.Type, System.String, System.Object[], System.String[], System.Type[], System.Boolean, System.Boolean, Microsoft.VisualBasic.CallType)
  type: Method
  source:
    remote:
      path: src/Microsoft.VisualBasic/ref/Microsoft.VisualBasic.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: LateSet
    path: src/Microsoft.VisualBasic/ref/Microsoft.VisualBasic.cs
    startLine: 131
  assemblies:
  - Microsoft.VisualBasic
  namespace: Microsoft.VisualBasic.CompilerServices
  summary: "\n<p>Executes a late-bound property set or field write call. This helper method is not meant to be called directly from your code.</p>\n"
  syntax:
    content: public static void LateSet(object Instance, Type Type, string MemberName, object[] Arguments, string[] ArgumentNames, Type[] TypeArguments, bool OptimisticSet, bool RValueBase, CallType CallType)
    content.vb: Public Shared Sub LateSet(Instance As Object, Type As Type, MemberName As String, Arguments As Object(), ArgumentNames As String(), TypeArguments As Type(), OptimisticSet As Boolean, RValueBase As Boolean, CallType As CallType)
    parameters:
    - id: Instance
      type: System.Object
      description: "\n<p>An instance of the call object exposing the property or method.</p>\n"
    - id: Type
      type: System.Type
      description: "\n<p>The type of the call object.</p>\n"
    - id: MemberName
      type: System.String
      description: "\n<p>The name of the property or method on the call object.</p>\n"
    - id: Arguments
      type: System.Object[]
      description: "\n<p>An array containing the arguments to be passed to the property or method being called.</p>\n"
    - id: ArgumentNames
      type: System.String[]
      description: "\n<p>An array of argument names.</p>\n"
    - id: TypeArguments
      type: System.Type[]
      description: "\n<p>An array of argument types; used only for generic calls to pass argument types.</p>\n"
    - id: OptimisticSet
      type: System.Boolean
      description: "\n<p>A <strong>Boolean</strong> value used to determine whether the set operation will work. Set to <strong>True</strong> when you believe that an intermediate value has been set in the property or field; otherwise <strong>False</strong>.</p>\n"
    - id: RValueBase
      type: System.Boolean
      description: "\n<p>A <strong>Boolean</strong> value that specifies when the base reference of the late reference is an <strong>RValue</strong>. Set to <strong>True</strong> when the base reference of the late reference is an <strong>RValue</strong>; this allows you to generate a run-time exception for late assignments to fields of <strong>RValues</strong> of value types. Otherwise, set to <strong>False</strong>.</p>\n"
    - id: CallType
      type: Microsoft.VisualBasic.CallType
      description: "\n<p>An enumeration member of type <xref href=\"Microsoft.VisualBasic.CallType\" data-throw-if-not-resolved=\"false\"></xref> representing the type of procedure being called. The value of CallType can be <strong>Method</strong>, <strong>Get</strong>, or <strong>Set</strong>. Only <strong>Set</strong> is used.</p>\n"
  nameWithType.vb: NewLateBinding.LateSet(Object, Type, String, Object(), String(), Type(), Boolean, Boolean, CallType)
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: Microsoft.VisualBasic.CompilerServices.NewLateBinding.LateSet(System.Object, System.Type, System.String, System.Object(), System.String(), System.Type(), System.Boolean, System.Boolean, Microsoft.VisualBasic.CallType)
  name.vb: LateSet(Object, Type, String, Object(), String(), Type(), Boolean, Boolean, CallType)
- uid: Microsoft.VisualBasic.CompilerServices.NewLateBinding.LateSetComplex(System.Object,System.Type,System.String,System.Object[],System.String[],System.Type[],System.Boolean,System.Boolean)
  commentId: M:Microsoft.VisualBasic.CompilerServices.NewLateBinding.LateSetComplex(System.Object,System.Type,System.String,System.Object[],System.String[],System.Type[],System.Boolean,System.Boolean)
  id: LateSetComplex(System.Object,System.Type,System.String,System.Object[],System.String[],System.Type[],System.Boolean,System.Boolean)
  parent: Microsoft.VisualBasic.CompilerServices.NewLateBinding
  langs:
  - csharp
  - vb
  name: LateSetComplex(Object, Type, String, Object[], String[], Type[], Boolean, Boolean)
  nameWithType: NewLateBinding.LateSetComplex(Object, Type, String, Object[], String[], Type[], Boolean, Boolean)
  fullName: Microsoft.VisualBasic.CompilerServices.NewLateBinding.LateSetComplex(System.Object, System.Type, System.String, System.Object[], System.String[], System.Type[], System.Boolean, System.Boolean)
  type: Method
  source:
    remote:
      path: src/Microsoft.VisualBasic/ref/Microsoft.VisualBasic.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: LateSetComplex
    path: src/Microsoft.VisualBasic/ref/Microsoft.VisualBasic.cs
    startLine: 132
  assemblies:
  - Microsoft.VisualBasic
  namespace: Microsoft.VisualBasic.CompilerServices
  summary: "\n<p>Executes a late-bound property set or field write call. This helper method is not meant to be called directly from your code.</p>\n"
  syntax:
    content: public static void LateSetComplex(object Instance, Type Type, string MemberName, object[] Arguments, string[] ArgumentNames, Type[] TypeArguments, bool OptimisticSet, bool RValueBase)
    content.vb: Public Shared Sub LateSetComplex(Instance As Object, Type As Type, MemberName As String, Arguments As Object(), ArgumentNames As String(), TypeArguments As Type(), OptimisticSet As Boolean, RValueBase As Boolean)
    parameters:
    - id: Instance
      type: System.Object
      description: "\n<p>An instance of the call object exposing the property or method.</p>\n"
    - id: Type
      type: System.Type
      description: "\n<p>The type of the call object.</p>\n"
    - id: MemberName
      type: System.String
      description: "\n<p>The name of the property or method on the call object.</p>\n"
    - id: Arguments
      type: System.Object[]
      description: "\n<p>An array containing the arguments to be passed to the property or method being called.</p>\n"
    - id: ArgumentNames
      type: System.String[]
      description: "\n<p>An array of argument names.</p>\n"
    - id: TypeArguments
      type: System.Type[]
      description: "\n<p>An array of argument types; used only for generic calls to pass argument types.</p>\n"
    - id: OptimisticSet
      type: System.Boolean
      description: "\n<p>A <strong>Boolean</strong> value used to determine whether the set operation will work. Set to <strong>True</strong> when you believe that an intermediate value has been set in the property or field; otherwise <strong>False</strong>.</p>\n"
    - id: RValueBase
      type: System.Boolean
      description: "\n<p>A <strong>Boolean</strong> value that specifies when the base reference of the late reference is an <strong>RValue</strong>. Set to <strong>True</strong> when the base reference of the late reference is an <strong>RValue</strong>; this allows you to generate a run-time exception for late assignments to fields of <strong>RValues</strong> of value types. Otherwise, set to <strong>False</strong>.</p>\n"
  nameWithType.vb: NewLateBinding.LateSetComplex(Object, Type, String, Object(), String(), Type(), Boolean, Boolean)
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: Microsoft.VisualBasic.CompilerServices.NewLateBinding.LateSetComplex(System.Object, System.Type, System.String, System.Object(), System.String(), System.Type(), System.Boolean, System.Boolean)
  name.vb: LateSetComplex(Object, Type, String, Object(), String(), Type(), Boolean, Boolean)
references:
- uid: Microsoft.VisualBasic.CompilerServices
  commentId: N:Microsoft.VisualBasic.CompilerServices
  isExternal: false
  name: Microsoft.VisualBasic.CompilerServices
  nameWithType: Microsoft.VisualBasic.CompilerServices
  fullName: Microsoft.VisualBasic.CompilerServices
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: false
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: System.Type
  commentId: T:System.Type
  parent: System
  isExternal: false
  name: Type
  nameWithType: Type
  fullName: System.Type
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: false
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Object[]
  name: Object[]
  nameWithType: Object[]
  fullName: System.Object[]
  nameWithType.vb: Object()
  fullname.vb: System.Object()
  name.vb: Object()
  spec.csharp:
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  spec.vb:
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
- uid: System.String[]
  name: String[]
  nameWithType: String[]
  fullName: System.String[]
  nameWithType.vb: String()
  fullname.vb: System.String()
  name.vb: String()
  spec.csharp:
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  spec.vb:
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
- uid: System.Type[]
  name: Type[]
  nameWithType: Type[]
  fullName: System.Type[]
  nameWithType.vb: Type()
  fullname.vb: System.Type()
  name.vb: Type()
  spec.csharp:
  - uid: System.Type
    name: Type
    nameWithType: Type
    fullName: System.Type
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  spec.vb:
  - uid: System.Type
    name: Type
    nameWithType: Type
    fullName: System.Type
  - name: ()
    nameWithType: ()
    fullName: ()
- uid: System.Boolean[]
  name: Boolean[]
  nameWithType: Boolean[]
  fullName: System.Boolean[]
  nameWithType.vb: Boolean()
  fullname.vb: System.Boolean()
  name.vb: Boolean()
  spec.csharp:
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  spec.vb:
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: false
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: Microsoft.VisualBasic.CallType
  commentId: T:Microsoft.VisualBasic.CallType
  parent: Microsoft.VisualBasic
  isExternal: false
  name: CallType
  nameWithType: CallType
  fullName: Microsoft.VisualBasic.CallType
- uid: Microsoft.VisualBasic
  commentId: N:Microsoft.VisualBasic
  isExternal: false
  name: Microsoft.VisualBasic
  nameWithType: Microsoft.VisualBasic
  fullName: Microsoft.VisualBasic
