### YamlMime:ManagedReference
items:
- uid: System.ServiceModel.Channels.MessageEncoderFactory
  commentId: T:System.ServiceModel.Channels.MessageEncoderFactory
  id: MessageEncoderFactory
  parent: System.ServiceModel.Channels
  children:
  - System.ServiceModel.Channels.MessageEncoderFactory.#ctor
  - System.ServiceModel.Channels.MessageEncoderFactory.CreateSessionEncoder
  - System.ServiceModel.Channels.MessageEncoderFactory.Encoder
  - System.ServiceModel.Channels.MessageEncoderFactory.MessageVersion
  langs:
  - csharp
  - vb
  name: MessageEncoderFactory
  nameWithType: MessageEncoderFactory
  fullName: System.ServiceModel.Channels.MessageEncoderFactory
  type: Class
  source:
    remote:
      path: src/System.Private.ServiceModel/src/System/ServiceModel/Channels/MessageEncoderFactory.cs
      branch: master
      repo: https://github.com/dotnet/wcf.git
    id: MessageEncoderFactory
    path: src/System.Private.ServiceModel/src/System/ServiceModel/Channels/MessageEncoderFactory.cs
    startLine: 7
  assemblies:
  - System.ServiceModel.Primitives
  namespace: System.ServiceModel.Channels
  summary: "\n<p>An abstract base class that represents the factory for producing message encoders that can read messages from a stream and write them to a stream for various types of message encoding.</p>\n"
  syntax:
    content: public abstract class MessageEncoderFactory
    content.vb: Public MustInherit Class MessageEncoderFactory
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  modifiers.csharp:
  - public
  - abstract
  - class
  modifiers.vb:
  - Public
  - MustInherit
  - Class
- uid: System.ServiceModel.Channels.MessageEncoderFactory.#ctor
  commentId: M:System.ServiceModel.Channels.MessageEncoderFactory.#ctor
  id: '#ctor'
  parent: System.ServiceModel.Channels.MessageEncoderFactory
  langs:
  - csharp
  - vb
  name: MessageEncoderFactory()
  nameWithType: MessageEncoderFactory.MessageEncoderFactory()
  fullName: System.ServiceModel.Channels.MessageEncoderFactory.MessageEncoderFactory()
  type: Constructor
  source:
    remote:
      path: src/System.Private.ServiceModel/src/System/ServiceModel/Channels/MessageEncoderFactory.cs
      branch: master
      repo: https://github.com/dotnet/wcf.git
    id: .ctor
    path: src/System.Private.ServiceModel/src/System/ServiceModel/Channels/MessageEncoderFactory.cs
    startLine: 9
  assemblies:
  - System.ServiceModel.Primitives
  namespace: System.ServiceModel.Channels
  summary: "\n<p>Initializes a new instance of the <xref href=\"System.ServiceModel.Channels.MessageEncoderFactory\" data-throw-if-not-resolved=\"false\"></xref> class. </p>\n"
  syntax:
    content: protected MessageEncoderFactory()
    content.vb: Protected Sub New
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: System.ServiceModel.Channels.MessageEncoderFactory.Encoder
  commentId: P:System.ServiceModel.Channels.MessageEncoderFactory.Encoder
  id: Encoder
  parent: System.ServiceModel.Channels.MessageEncoderFactory
  langs:
  - csharp
  - vb
  name: Encoder
  nameWithType: MessageEncoderFactory.Encoder
  fullName: System.ServiceModel.Channels.MessageEncoderFactory.Encoder
  type: Property
  source:
    remote:
      path: src/System.Private.ServiceModel/src/System/ServiceModel/Channels/MessageEncoderFactory.cs
      branch: master
      repo: https://github.com/dotnet/wcf.git
    id: Encoder
    path: src/System.Private.ServiceModel/src/System/ServiceModel/Channels/MessageEncoderFactory.cs
    startLine: 13
  assemblies:
  - System.ServiceModel.Primitives
  namespace: System.ServiceModel.Channels
  summary: "\n<p>When overridden in a derived class, gets the message encoder that is produced by the factory.</p>\n"
  syntax:
    content: public abstract MessageEncoder Encoder { get; }
    content.vb: Public MustOverride ReadOnly Property Encoder As MessageEncoder
    parameters: []
    return:
      type: System.ServiceModel.Channels.MessageEncoder
      description: "\n<p>The <xref href=\"System.ServiceModel.Channels.MessageEncoder\" data-throw-if-not-resolved=\"false\"></xref> used by the factory.</p>\n"
  modifiers.csharp:
  - public
  - abstract
  - get
  modifiers.vb:
  - Public
  - MustOverride
  - ReadOnly
- uid: System.ServiceModel.Channels.MessageEncoderFactory.MessageVersion
  commentId: P:System.ServiceModel.Channels.MessageEncoderFactory.MessageVersion
  id: MessageVersion
  parent: System.ServiceModel.Channels.MessageEncoderFactory
  langs:
  - csharp
  - vb
  name: MessageVersion
  nameWithType: MessageEncoderFactory.MessageVersion
  fullName: System.ServiceModel.Channels.MessageEncoderFactory.MessageVersion
  type: Property
  source:
    remote:
      path: src/System.Private.ServiceModel/src/System/ServiceModel/Channels/MessageEncoderFactory.cs
      branch: master
      repo: https://github.com/dotnet/wcf.git
    id: MessageVersion
    path: src/System.Private.ServiceModel/src/System/ServiceModel/Channels/MessageEncoderFactory.cs
    startLine: 18
  assemblies:
  - System.ServiceModel.Primitives
  namespace: System.ServiceModel.Channels
  summary: "\n<p>When overridden in a derived class, gets the message version that is used by the encoders produced by the factory to encode messages.</p>\n"
  syntax:
    content: public abstract MessageVersion MessageVersion { get; }
    content.vb: Public MustOverride ReadOnly Property MessageVersion As MessageVersion
    parameters: []
    return:
      type: System.ServiceModel.Channels.MessageVersion
      description: "\n<p>The <xref href=\"System.ServiceModel.Channels.MessageVersion\" data-throw-if-not-resolved=\"false\"></xref> used by the factory.</p>\n"
  modifiers.csharp:
  - public
  - abstract
  - get
  modifiers.vb:
  - Public
  - MustOverride
  - ReadOnly
- uid: System.ServiceModel.Channels.MessageEncoderFactory.CreateSessionEncoder
  commentId: M:System.ServiceModel.Channels.MessageEncoderFactory.CreateSessionEncoder
  id: CreateSessionEncoder
  parent: System.ServiceModel.Channels.MessageEncoderFactory
  langs:
  - csharp
  - vb
  name: CreateSessionEncoder()
  nameWithType: MessageEncoderFactory.CreateSessionEncoder()
  fullName: System.ServiceModel.Channels.MessageEncoderFactory.CreateSessionEncoder()
  type: Method
  source:
    remote:
      path: src/System.Private.ServiceModel/src/System/ServiceModel/Channels/MessageEncoderFactory.cs
      branch: master
      repo: https://github.com/dotnet/wcf.git
    id: CreateSessionEncoder
    path: src/System.Private.ServiceModel/src/System/ServiceModel/Channels/MessageEncoderFactory.cs
    startLine: 23
  assemblies:
  - System.ServiceModel.Primitives
  namespace: System.ServiceModel.Channels
  summary: "\n<p>Returns a message encoder that can be used to correlate messages in session-based exchanges.</p>\n"
  syntax:
    content: public virtual MessageEncoder CreateSessionEncoder()
    content.vb: Public Overridable Function CreateSessionEncoder As MessageEncoder
    return:
      type: System.ServiceModel.Channels.MessageEncoder
      description: "\n<p>The <xref href=\"System.ServiceModel.Channels.MessageEncoder\" data-throw-if-not-resolved=\"false\"></xref> that is used in session-based exchanges of messages.</p>\n"
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
references:
- uid: System.ServiceModel.Channels
  commentId: N:System.ServiceModel.Channels
  isExternal: false
  name: System.ServiceModel.Channels
  nameWithType: System.ServiceModel.Channels
  fullName: System.ServiceModel.Channels
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: false
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: System.ServiceModel.Channels.MessageEncoder
  commentId: T:System.ServiceModel.Channels.MessageEncoder
  parent: System.ServiceModel.Channels
  isExternal: false
  name: MessageEncoder
  nameWithType: MessageEncoder
  fullName: System.ServiceModel.Channels.MessageEncoder
- uid: System.ServiceModel.Channels.MessageVersion
  commentId: T:System.ServiceModel.Channels.MessageVersion
  parent: System.ServiceModel.Channels
  isExternal: false
  name: MessageVersion
  nameWithType: MessageVersion
  fullName: System.ServiceModel.Channels.MessageVersion
