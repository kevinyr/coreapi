### YamlMime:ManagedReference
items:
- uid: System.Security.Cryptography.X509Certificates.PublicKey
  commentId: T:System.Security.Cryptography.X509Certificates.PublicKey
  id: PublicKey
  parent: System.Security.Cryptography.X509Certificates
  children:
  - System.Security.Cryptography.X509Certificates.PublicKey.#ctor(System.Security.Cryptography.Oid,System.Security.Cryptography.AsnEncodedData,System.Security.Cryptography.AsnEncodedData)
  - System.Security.Cryptography.X509Certificates.PublicKey.EncodedKeyValue
  - System.Security.Cryptography.X509Certificates.PublicKey.EncodedParameters
  - System.Security.Cryptography.X509Certificates.PublicKey.Oid
  langs:
  - csharp
  - vb
  name: PublicKey
  nameWithType: PublicKey
  fullName: System.Security.Cryptography.X509Certificates.PublicKey
  type: Class
  source:
    remote:
      path: src/System.Security.Cryptography.X509Certificates/ref/4.0/System.Security.Cryptography.X509Certificates.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: PublicKey
    path: src/System.Security.Cryptography.X509Certificates/ref/4.0/System.Security.Cryptography.X509Certificates.cs
    startLine: 27
  assemblies:
  - System.Security.Cryptography.X509Certificates
  namespace: System.Security.Cryptography.X509Certificates
  summary: "\n<p>Represents a certificate's public key information. This class cannot be inherited.</p>\n"
  syntax:
    content: public sealed class PublicKey
    content.vb: Public NotInheritable Class PublicKey
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  modifiers.csharp:
  - public
  - sealed
  - class
  modifiers.vb:
  - Public
  - NotInheritable
  - Class
- uid: System.Security.Cryptography.X509Certificates.PublicKey.#ctor(System.Security.Cryptography.Oid,System.Security.Cryptography.AsnEncodedData,System.Security.Cryptography.AsnEncodedData)
  commentId: M:System.Security.Cryptography.X509Certificates.PublicKey.#ctor(System.Security.Cryptography.Oid,System.Security.Cryptography.AsnEncodedData,System.Security.Cryptography.AsnEncodedData)
  id: '#ctor(System.Security.Cryptography.Oid,System.Security.Cryptography.AsnEncodedData,System.Security.Cryptography.AsnEncodedData)'
  parent: System.Security.Cryptography.X509Certificates.PublicKey
  langs:
  - csharp
  - vb
  name: PublicKey(Oid, AsnEncodedData, AsnEncodedData)
  nameWithType: PublicKey.PublicKey(Oid, AsnEncodedData, AsnEncodedData)
  fullName: System.Security.Cryptography.X509Certificates.PublicKey.PublicKey(System.Security.Cryptography.Oid, System.Security.Cryptography.AsnEncodedData, System.Security.Cryptography.AsnEncodedData)
  type: Constructor
  source:
    remote:
      path: src/System.Security.Cryptography.X509Certificates/ref/4.0/System.Security.Cryptography.X509Certificates.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: .ctor
    path: src/System.Security.Cryptography.X509Certificates/ref/4.0/System.Security.Cryptography.X509Certificates.cs
    startLine: 29
  assemblies:
  - System.Security.Cryptography.X509Certificates
  namespace: System.Security.Cryptography.X509Certificates
  summary: "\n<p>Initializes a new instance of the <xref href=\"System.Security.Cryptography.X509Certificates.PublicKey\" data-throw-if-not-resolved=\"false\"></xref> class using an object identifier (OID) object of the public key, an ASN.1-encoded representation of the public key parameters, and an ASN.1-encoded representation of the public key value. </p>\n"
  syntax:
    content: public PublicKey(Oid oid, AsnEncodedData parameters, AsnEncodedData keyValue)
    content.vb: Public Sub New(oid As Oid, parameters As AsnEncodedData, keyValue As AsnEncodedData)
    parameters:
    - id: oid
      type: System.Security.Cryptography.Oid
      description: "\n<p>An object identifier (OID) object that represents the public key.</p>\n"
    - id: parameters
      type: System.Security.Cryptography.AsnEncodedData
      description: "\n<p>An ASN.1-encoded representation of the public key parameters.</p>\n"
    - id: keyValue
      type: System.Security.Cryptography.AsnEncodedData
      description: "\n<p>An ASN.1-encoded representation of the public key value.</p>\n"
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: System.Security.Cryptography.X509Certificates.PublicKey.EncodedKeyValue
  commentId: P:System.Security.Cryptography.X509Certificates.PublicKey.EncodedKeyValue
  id: EncodedKeyValue
  parent: System.Security.Cryptography.X509Certificates.PublicKey
  langs:
  - csharp
  - vb
  name: EncodedKeyValue
  nameWithType: PublicKey.EncodedKeyValue
  fullName: System.Security.Cryptography.X509Certificates.PublicKey.EncodedKeyValue
  type: Property
  source:
    remote:
      path: src/System.Security.Cryptography.X509Certificates/ref/4.0/System.Security.Cryptography.X509Certificates.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: EncodedKeyValue
    path: src/System.Security.Cryptography.X509Certificates/ref/4.0/System.Security.Cryptography.X509Certificates.cs
    startLine: 30
  assemblies:
  - System.Security.Cryptography.X509Certificates
  namespace: System.Security.Cryptography.X509Certificates
  summary: "\n<p>Gets the ASN.1-encoded representation of the public key value.</p>\n"
  syntax:
    content: public AsnEncodedData EncodedKeyValue { get; }
    content.vb: Public ReadOnly Property EncodedKeyValue As AsnEncodedData
    parameters: []
    return:
      type: System.Security.Cryptography.AsnEncodedData
      description: "\n<p>The ASN.1-encoded representation of the public key value.</p>\n"
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: System.Security.Cryptography.X509Certificates.PublicKey.EncodedParameters
  commentId: P:System.Security.Cryptography.X509Certificates.PublicKey.EncodedParameters
  id: EncodedParameters
  parent: System.Security.Cryptography.X509Certificates.PublicKey
  langs:
  - csharp
  - vb
  name: EncodedParameters
  nameWithType: PublicKey.EncodedParameters
  fullName: System.Security.Cryptography.X509Certificates.PublicKey.EncodedParameters
  type: Property
  source:
    remote:
      path: src/System.Security.Cryptography.X509Certificates/ref/4.0/System.Security.Cryptography.X509Certificates.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: EncodedParameters
    path: src/System.Security.Cryptography.X509Certificates/ref/4.0/System.Security.Cryptography.X509Certificates.cs
    startLine: 31
  assemblies:
  - System.Security.Cryptography.X509Certificates
  namespace: System.Security.Cryptography.X509Certificates
  summary: "\n<p>Gets the ASN.1-encoded representation of the public key parameters.</p>\n"
  syntax:
    content: public AsnEncodedData EncodedParameters { get; }
    content.vb: Public ReadOnly Property EncodedParameters As AsnEncodedData
    parameters: []
    return:
      type: System.Security.Cryptography.AsnEncodedData
      description: "\n<p>The ASN.1-encoded representation of the public key parameters.</p>\n"
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: System.Security.Cryptography.X509Certificates.PublicKey.Oid
  commentId: P:System.Security.Cryptography.X509Certificates.PublicKey.Oid
  id: Oid
  parent: System.Security.Cryptography.X509Certificates.PublicKey
  langs:
  - csharp
  - vb
  name: Oid
  nameWithType: PublicKey.Oid
  fullName: System.Security.Cryptography.X509Certificates.PublicKey.Oid
  type: Property
  source:
    remote:
      path: src/System.Security.Cryptography.X509Certificates/ref/4.0/System.Security.Cryptography.X509Certificates.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: Oid
    path: src/System.Security.Cryptography.X509Certificates/ref/4.0/System.Security.Cryptography.X509Certificates.cs
    startLine: 32
  assemblies:
  - System.Security.Cryptography.X509Certificates
  namespace: System.Security.Cryptography.X509Certificates
  summary: "\n<p>Gets an object identifier (OID) object of the public key.</p>\n"
  syntax:
    content: public Oid Oid { get; }
    content.vb: Public ReadOnly Property Oid As Oid
    parameters: []
    return:
      type: System.Security.Cryptography.Oid
      description: "\n<p>An object identifier (OID) object of the public key.</p>\n"
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
references:
- uid: System.Security.Cryptography.X509Certificates
  commentId: N:System.Security.Cryptography.X509Certificates
  isExternal: false
  name: System.Security.Cryptography.X509Certificates
  nameWithType: System.Security.Cryptography.X509Certificates
  fullName: System.Security.Cryptography.X509Certificates
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: false
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: System.Security.Cryptography.Oid
  commentId: T:System.Security.Cryptography.Oid
  parent: System.Security.Cryptography
  isExternal: false
  name: Oid
  nameWithType: Oid
  fullName: System.Security.Cryptography.Oid
- uid: System.Security.Cryptography.AsnEncodedData
  commentId: T:System.Security.Cryptography.AsnEncodedData
  parent: System.Security.Cryptography
  isExternal: false
  name: AsnEncodedData
  nameWithType: AsnEncodedData
  fullName: System.Security.Cryptography.AsnEncodedData
- uid: System.Security.Cryptography
  commentId: N:System.Security.Cryptography
  isExternal: false
  name: System.Security.Cryptography
  nameWithType: System.Security.Cryptography
  fullName: System.Security.Cryptography
