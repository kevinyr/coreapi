items:
- uid: System.ServiceModel.ClientBase`1
  commentId: T:System.ServiceModel.ClientBase`1
  id: ClientBase`1
  parent: System.ServiceModel
  children:
  - System.ServiceModel.ClientBase`1.#ctor
  - System.ServiceModel.ClientBase`1.#ctor(System.ServiceModel.Channels.Binding,System.ServiceModel.EndpointAddress)
  - System.ServiceModel.ClientBase`1.#ctor(System.String)
  - System.ServiceModel.ClientBase`1.#ctor(System.String,System.ServiceModel.EndpointAddress)
  - System.ServiceModel.ClientBase`1.#ctor(System.String,System.String)
  - System.ServiceModel.ClientBase`1.Abort
  - System.ServiceModel.ClientBase`1.Channel
  - System.ServiceModel.ClientBase`1.ChannelFactory
  - System.ServiceModel.ClientBase`1.ClientCredentials
  - System.ServiceModel.ClientBase`1.CreateChannel
  - System.ServiceModel.ClientBase`1.Endpoint
  - System.ServiceModel.ClientBase`1.GetDefaultValueForInitialization``1
  - System.ServiceModel.ClientBase`1.InnerChannel
  - System.ServiceModel.ClientBase`1.InvokeAsync(System.ServiceModel.ClientBase{`0}.BeginOperationDelegate,System.Object[],System.ServiceModel.ClientBase{`0}.EndOperationDelegate,System.Threading.SendOrPostCallback,System.Object)
  - System.ServiceModel.ClientBase`1.State
  - System.ServiceModel.ClientBase`1.System#ServiceModel#ICommunicationObject#BeginClose(System.AsyncCallback,System.Object)
  - System.ServiceModel.ClientBase`1.System#ServiceModel#ICommunicationObject#BeginClose(System.TimeSpan,System.AsyncCallback,System.Object)
  - System.ServiceModel.ClientBase`1.System#ServiceModel#ICommunicationObject#BeginOpen(System.AsyncCallback,System.Object)
  - System.ServiceModel.ClientBase`1.System#ServiceModel#ICommunicationObject#BeginOpen(System.TimeSpan,System.AsyncCallback,System.Object)
  - System.ServiceModel.ClientBase`1.System#ServiceModel#ICommunicationObject#Close
  - System.ServiceModel.ClientBase`1.System#ServiceModel#ICommunicationObject#Close(System.TimeSpan)
  - System.ServiceModel.ClientBase`1.System#ServiceModel#ICommunicationObject#Closed
  - System.ServiceModel.ClientBase`1.System#ServiceModel#ICommunicationObject#Closing
  - System.ServiceModel.ClientBase`1.System#ServiceModel#ICommunicationObject#EndClose(System.IAsyncResult)
  - System.ServiceModel.ClientBase`1.System#ServiceModel#ICommunicationObject#EndOpen(System.IAsyncResult)
  - System.ServiceModel.ClientBase`1.System#ServiceModel#ICommunicationObject#Faulted
  - System.ServiceModel.ClientBase`1.System#ServiceModel#ICommunicationObject#Open
  - System.ServiceModel.ClientBase`1.System#ServiceModel#ICommunicationObject#Open(System.TimeSpan)
  - System.ServiceModel.ClientBase`1.System#ServiceModel#ICommunicationObject#Opened
  - System.ServiceModel.ClientBase`1.System#ServiceModel#ICommunicationObject#Opening
  langs:
  - csharp
  - vb
  name: ClientBase<TChannel>
  fullName: System.ServiceModel.ClientBase<TChannel>
  type: Class
  source:
    remote:
      path: src/System.ServiceModel.Primitives/ref/System.ServiceModel.Primitives.cs
      branch: master
      repo: https://github.com/dotnet/wcf.git
    id: ClientBase
    path: src/System.ServiceModel.Primitives/ref/System.ServiceModel.Primitives.cs
    startLine: 57
  assemblies:
  - System.ServiceModel.Primitives
  namespace: System.ServiceModel
  summary: "\n<p>Provides the base implementation used to create Windows Communication Foundation (WCF) client objects that can call services.</p>\n"
  syntax:
    content: 'public abstract class ClientBase<TChannel> : ICommunicationObject where TChannel : class'
    content.vb: >-
      Public MustInherit Class ClientBase(Of TChannel As Class)
          Implements ICommunicationObject
    typeParameters:
    - id: TChannel
      description: "\n<p>The channel to be used to connect to the service.</p>\n"
  inheritance:
  - System.Object
  implements:
  - System.ServiceModel.ICommunicationObject
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  modifiers.csharp:
  - public
  - abstract
  - class
  modifiers.vb:
  - Public
  - MustInherit
  - Class
  fullName.vb: System.ServiceModel.ClientBase(Of TChannel)
  name.vb: ClientBase(Of TChannel)
  nameWithType: ClientBase<TChannel>
  nameWithType.vb: ClientBase(Of TChannel)
- uid: System.ServiceModel.ClientBase`1.#ctor
  commentId: M:System.ServiceModel.ClientBase`1.#ctor
  id: '#ctor'
  parent: System.ServiceModel.ClientBase`1
  langs:
  - csharp
  - vb
  name: ClientBase()
  fullName: System.ServiceModel.ClientBase<TChannel>.ClientBase()
  type: Constructor
  source:
    remote:
      path: src/System.ServiceModel.Primitives/ref/System.ServiceModel.Primitives.cs
      branch: master
      repo: https://github.com/dotnet/wcf.git
    id: .ctor
    path: src/System.ServiceModel.Primitives/ref/System.ServiceModel.Primitives.cs
    startLine: 59
  assemblies:
  - System.ServiceModel.Primitives
  namespace: System.ServiceModel
  summary: "\n<p>Initializes a new instance of the <xref href=\"System.ServiceModel.ClientBase`1\" data-throw-if-not-resolved=\"false\"></xref> class using the default target endpoint from the application configuration file. </p>\n"
  syntax:
    content: protected ClientBase()
    content.vb: Protected Sub New
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "\n<p>Either there is no default endpoint information in the configuration file, more than one endpoint in the file, or no configuration file.</p>\n"
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
  fullName.vb: System.ServiceModel.ClientBase(Of TChannel).ClientBase()
  nameWithType: ClientBase<TChannel>.ClientBase()
  nameWithType.vb: ClientBase(Of TChannel).ClientBase()
- uid: System.ServiceModel.ClientBase`1.#ctor(System.ServiceModel.Channels.Binding,System.ServiceModel.EndpointAddress)
  commentId: M:System.ServiceModel.ClientBase`1.#ctor(System.ServiceModel.Channels.Binding,System.ServiceModel.EndpointAddress)
  id: '#ctor(System.ServiceModel.Channels.Binding,System.ServiceModel.EndpointAddress)'
  parent: System.ServiceModel.ClientBase`1
  langs:
  - csharp
  - vb
  name: ClientBase(Binding, EndpointAddress)
  fullName: System.ServiceModel.ClientBase<TChannel>.ClientBase(System.ServiceModel.Channels.Binding, System.ServiceModel.EndpointAddress)
  type: Constructor
  source:
    remote:
      path: src/System.ServiceModel.Primitives/ref/System.ServiceModel.Primitives.cs
      branch: master
      repo: https://github.com/dotnet/wcf.git
    id: .ctor
    path: src/System.ServiceModel.Primitives/ref/System.ServiceModel.Primitives.cs
    startLine: 60
  assemblies:
  - System.ServiceModel.Primitives
  namespace: System.ServiceModel
  summary: "\n<p>Initializes a new instance of the <xref href=\"System.ServiceModel.ClientBase`1\" data-throw-if-not-resolved=\"false\"></xref> class using the specified binding and target address. </p>\n"
  syntax:
    content: protected ClientBase(Binding binding, EndpointAddress remoteAddress)
    content.vb: Protected Sub New(binding As Binding, remoteAddress As EndpointAddress)
    parameters:
    - id: binding
      type: System.ServiceModel.Channels.Binding
      description: "\n<p>The binding with which to make calls to the service.</p>\n"
    - id: remoteAddress
      type: System.ServiceModel.EndpointAddress
      description: "\n<p>The address of the service endpoint.</p>\n"
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "\n<p>The binding is <strong>null</strong>.</p>\n"
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "\n<p>The remote address is <strong>null</strong>.</p>\n"
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
  fullName.vb: System.ServiceModel.ClientBase(Of TChannel).ClientBase(System.ServiceModel.Channels.Binding, System.ServiceModel.EndpointAddress)
  nameWithType: ClientBase<TChannel>.ClientBase(Binding, EndpointAddress)
  nameWithType.vb: ClientBase(Of TChannel).ClientBase(Binding, EndpointAddress)
- uid: System.ServiceModel.ClientBase`1.#ctor(System.String)
  commentId: M:System.ServiceModel.ClientBase`1.#ctor(System.String)
  id: '#ctor(System.String)'
  parent: System.ServiceModel.ClientBase`1
  langs:
  - csharp
  - vb
  name: ClientBase(String)
  fullName: System.ServiceModel.ClientBase<TChannel>.ClientBase(System.String)
  type: Constructor
  source:
    remote:
      path: src/System.ServiceModel.Primitives/ref/System.ServiceModel.Primitives.cs
      branch: master
      repo: https://github.com/dotnet/wcf.git
    id: .ctor
    path: src/System.ServiceModel.Primitives/ref/System.ServiceModel.Primitives.cs
    startLine: 61
  assemblies:
  - System.ServiceModel.Primitives
  namespace: System.ServiceModel
  summary: "\n<p>Initializes a new instance of the <xref href=\"System.ServiceModel.ClientBase`1\" data-throw-if-not-resolved=\"false\"></xref> class using the configuration information specified in the application configuration file by <em>endpointConfigurationName</em>. </p>\n"
  syntax:
    content: protected ClientBase(string endpointConfigurationName)
    content.vb: Protected Sub New(endpointConfigurationName As String)
    parameters:
    - id: endpointConfigurationName
      type: System.String
      description: "\n<p>The name of the endpoint in the application configuration file.</p>\n"
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "\n<p>The specified endpoint information is <strong>null</strong>.</p>\n"
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "\n<p>The endpoint cannot be found or the endpoint contract is not valid.</p>\n"
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
  fullName.vb: System.ServiceModel.ClientBase(Of TChannel).ClientBase(System.String)
  nameWithType: ClientBase<TChannel>.ClientBase(String)
  nameWithType.vb: ClientBase(Of TChannel).ClientBase(String)
- uid: System.ServiceModel.ClientBase`1.#ctor(System.String,System.ServiceModel.EndpointAddress)
  commentId: M:System.ServiceModel.ClientBase`1.#ctor(System.String,System.ServiceModel.EndpointAddress)
  id: '#ctor(System.String,System.ServiceModel.EndpointAddress)'
  parent: System.ServiceModel.ClientBase`1
  langs:
  - csharp
  - vb
  name: ClientBase(String, EndpointAddress)
  fullName: System.ServiceModel.ClientBase<TChannel>.ClientBase(System.String, System.ServiceModel.EndpointAddress)
  type: Constructor
  source:
    remote:
      path: src/System.ServiceModel.Primitives/ref/System.ServiceModel.Primitives.cs
      branch: master
      repo: https://github.com/dotnet/wcf.git
    id: .ctor
    path: src/System.ServiceModel.Primitives/ref/System.ServiceModel.Primitives.cs
    startLine: 62
  assemblies:
  - System.ServiceModel.Primitives
  namespace: System.ServiceModel
  summary: "\n<p>Initializes a new instance of the <xref href=\"System.ServiceModel.ClientBase`1\" data-throw-if-not-resolved=\"false\"></xref> class using the specified target address and endpoint information. </p>\n"
  syntax:
    content: protected ClientBase(string endpointConfigurationName, EndpointAddress remoteAddress)
    content.vb: Protected Sub New(endpointConfigurationName As String, remoteAddress As EndpointAddress)
    parameters:
    - id: endpointConfigurationName
      type: System.String
      description: "\n<p>The name of the endpoint in the application configuration file.</p>\n"
    - id: remoteAddress
      type: System.ServiceModel.EndpointAddress
      description: "\n<p>The address of the service.</p>\n"
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "\n<p>The endpoint is <strong>null</strong>.</p>\n"
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "\n<p>The remote address is <strong>null</strong>.</p>\n"
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "\n<p>The endpoint cannot be found or the endpoint contract is not valid.</p>\n"
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
  fullName.vb: System.ServiceModel.ClientBase(Of TChannel).ClientBase(System.String, System.ServiceModel.EndpointAddress)
  nameWithType: ClientBase<TChannel>.ClientBase(String, EndpointAddress)
  nameWithType.vb: ClientBase(Of TChannel).ClientBase(String, EndpointAddress)
- uid: System.ServiceModel.ClientBase`1.#ctor(System.String,System.String)
  commentId: M:System.ServiceModel.ClientBase`1.#ctor(System.String,System.String)
  id: '#ctor(System.String,System.String)'
  parent: System.ServiceModel.ClientBase`1
  langs:
  - csharp
  - vb
  name: ClientBase(String, String)
  fullName: System.ServiceModel.ClientBase<TChannel>.ClientBase(System.String, System.String)
  type: Constructor
  source:
    remote:
      path: src/System.ServiceModel.Primitives/ref/System.ServiceModel.Primitives.cs
      branch: master
      repo: https://github.com/dotnet/wcf.git
    id: .ctor
    path: src/System.ServiceModel.Primitives/ref/System.ServiceModel.Primitives.cs
    startLine: 63
  assemblies:
  - System.ServiceModel.Primitives
  namespace: System.ServiceModel
  summary: "\n<p>Initializes a new instance of the <xref href=\"System.ServiceModel.ClientBase`1\" data-throw-if-not-resolved=\"false\"></xref> class.</p>\n"
  syntax:
    content: protected ClientBase(string endpointConfigurationName, string remoteAddress)
    content.vb: Protected Sub New(endpointConfigurationName As String, remoteAddress As String)
    parameters:
    - id: endpointConfigurationName
      type: System.String
      description: "\n<p>The name of the endpoint in the application configuration file.</p>\n"
    - id: remoteAddress
      type: System.String
      description: "\n<p>The address of the service.</p>\n"
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "\n<p>The endpoint is <strong>null</strong>.</p>\n"
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "\n<p>The remote address is <strong>null</strong>.</p>\n"
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "\n<p>The endpoint cannot be found or the endpoint contract is not valid.</p>\n"
  seealso:
  - type: System.ServiceModel.ServiceContractAttribute.CallbackContract
    commentId: P:System.ServiceModel.ServiceContractAttribute.CallbackContract
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
  fullName.vb: System.ServiceModel.ClientBase(Of TChannel).ClientBase(System.String, System.String)
  nameWithType: ClientBase<TChannel>.ClientBase(String, String)
  nameWithType.vb: ClientBase(Of TChannel).ClientBase(String, String)
- uid: System.ServiceModel.ClientBase`1.Channel
  commentId: P:System.ServiceModel.ClientBase`1.Channel
  id: Channel
  parent: System.ServiceModel.ClientBase`1
  langs:
  - csharp
  - vb
  name: Channel
  fullName: System.ServiceModel.ClientBase<TChannel>.Channel
  type: Property
  source:
    remote:
      path: src/System.ServiceModel.Primitives/ref/System.ServiceModel.Primitives.cs
      branch: master
      repo: https://github.com/dotnet/wcf.git
    id: Channel
    path: src/System.ServiceModel.Primitives/ref/System.ServiceModel.Primitives.cs
    startLine: 64
  assemblies:
  - System.ServiceModel.Primitives
  namespace: System.ServiceModel
  summary: "\n<p>Gets the inner channel used to send messages to variously configured service endpoints.</p>\n"
  syntax:
    content: protected TChannel Channel { get; }
    content.vb: Protected ReadOnly Property Channel As TChannel
    parameters: []
    return:
      type: '{TChannel}'
      description: "\n<p>A channel of a specified type.</p>\n"
  modifiers.csharp:
  - protected
  - get
  modifiers.vb:
  - Protected
  - ReadOnly
  fullName.vb: System.ServiceModel.ClientBase(Of TChannel).Channel
  nameWithType: ClientBase<TChannel>.Channel
  nameWithType.vb: ClientBase(Of TChannel).Channel
- uid: System.ServiceModel.ClientBase`1.ChannelFactory
  commentId: P:System.ServiceModel.ClientBase`1.ChannelFactory
  id: ChannelFactory
  parent: System.ServiceModel.ClientBase`1
  langs:
  - csharp
  - vb
  name: ChannelFactory
  fullName: System.ServiceModel.ClientBase<TChannel>.ChannelFactory
  type: Property
  source:
    remote:
      path: src/System.ServiceModel.Primitives/ref/System.ServiceModel.Primitives.cs
      branch: master
      repo: https://github.com/dotnet/wcf.git
    id: ChannelFactory
    path: src/System.ServiceModel.Primitives/ref/System.ServiceModel.Primitives.cs
    startLine: 65
  assemblies:
  - System.ServiceModel.Primitives
  namespace: System.ServiceModel
  summary: "\n<p>Gets the underlying <xref href=\"System.ServiceModel.ChannelFactory`1\" data-throw-if-not-resolved=\"false\"></xref> object.</p>\n"
  syntax:
    content: public ChannelFactory<TChannel> ChannelFactory { get; }
    content.vb: Public ReadOnly Property ChannelFactory As ChannelFactory(Of TChannel)
    parameters: []
    return:
      type: System.ServiceModel.ChannelFactory{{TChannel}}
      description: "\n<p>A <xref href=\"System.ServiceModel.ChannelFactory`1\" data-throw-if-not-resolved=\"false\"></xref> object.</p>\n"
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
  fullName.vb: System.ServiceModel.ClientBase(Of TChannel).ChannelFactory
  nameWithType: ClientBase<TChannel>.ChannelFactory
  nameWithType.vb: ClientBase(Of TChannel).ChannelFactory
- uid: System.ServiceModel.ClientBase`1.ClientCredentials
  commentId: P:System.ServiceModel.ClientBase`1.ClientCredentials
  id: ClientCredentials
  parent: System.ServiceModel.ClientBase`1
  langs:
  - csharp
  - vb
  name: ClientCredentials
  fullName: System.ServiceModel.ClientBase<TChannel>.ClientCredentials
  type: Property
  source:
    remote:
      path: src/System.ServiceModel.Primitives/ref/System.ServiceModel.Primitives.cs
      branch: master
      repo: https://github.com/dotnet/wcf.git
    id: ClientCredentials
    path: src/System.ServiceModel.Primitives/ref/System.ServiceModel.Primitives.cs
    startLine: 66
  assemblies:
  - System.ServiceModel.Primitives
  namespace: System.ServiceModel
  summary: "\n<p>Gets the client credentials used to call an operation.</p>\n"
  syntax:
    content: public ClientCredentials ClientCredentials { get; }
    content.vb: Public ReadOnly Property ClientCredentials As ClientCredentials
    parameters: []
    return:
      type: System.ServiceModel.Description.ClientCredentials
      description: "\n<p>Returns a <xref href=\"System.ServiceModel.Description.ClientCredentials\" data-throw-if-not-resolved=\"false\"></xref> that represents the proof of identity presented by the client.</p>\n"
  seealso:
  - type: System.ServiceModel.Description.ClientCredentials
    commentId: T:System.ServiceModel.Description.ClientCredentials
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
  fullName.vb: System.ServiceModel.ClientBase(Of TChannel).ClientCredentials
  nameWithType: ClientBase<TChannel>.ClientCredentials
  nameWithType.vb: ClientBase(Of TChannel).ClientCredentials
- uid: System.ServiceModel.ClientBase`1.Endpoint
  commentId: P:System.ServiceModel.ClientBase`1.Endpoint
  id: Endpoint
  parent: System.ServiceModel.ClientBase`1
  langs:
  - csharp
  - vb
  name: Endpoint
  fullName: System.ServiceModel.ClientBase<TChannel>.Endpoint
  type: Property
  source:
    remote:
      path: src/System.ServiceModel.Primitives/ref/System.ServiceModel.Primitives.cs
      branch: master
      repo: https://github.com/dotnet/wcf.git
    id: Endpoint
    path: src/System.ServiceModel.Primitives/ref/System.ServiceModel.Primitives.cs
    startLine: 67
  assemblies:
  - System.ServiceModel.Primitives
  namespace: System.ServiceModel
  summary: "\n<p>Gets the target endpoint for the service to which the WCF client can connect.</p>\n"
  syntax:
    content: public ServiceEndpoint Endpoint { get; }
    content.vb: Public ReadOnly Property Endpoint As ServiceEndpoint
    parameters: []
    return:
      type: System.ServiceModel.Description.ServiceEndpoint
      description: "\n<p>The target endpoint.</p>\n"
  seealso:
  - type: System.ServiceModel.Description.ServiceEndpoint
    commentId: T:System.ServiceModel.Description.ServiceEndpoint
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
  fullName.vb: System.ServiceModel.ClientBase(Of TChannel).Endpoint
  nameWithType: ClientBase<TChannel>.Endpoint
  nameWithType.vb: ClientBase(Of TChannel).Endpoint
- uid: System.ServiceModel.ClientBase`1.InnerChannel
  commentId: P:System.ServiceModel.ClientBase`1.InnerChannel
  id: InnerChannel
  parent: System.ServiceModel.ClientBase`1
  langs:
  - csharp
  - vb
  name: InnerChannel
  fullName: System.ServiceModel.ClientBase<TChannel>.InnerChannel
  type: Property
  source:
    remote:
      path: src/System.ServiceModel.Primitives/ref/System.ServiceModel.Primitives.cs
      branch: master
      repo: https://github.com/dotnet/wcf.git
    id: InnerChannel
    path: src/System.ServiceModel.Primitives/ref/System.ServiceModel.Primitives.cs
    startLine: 68
  assemblies:
  - System.ServiceModel.Primitives
  namespace: System.ServiceModel
  summary: "\n<p>Gets the underlying <xref href=\"System.ServiceModel.IClientChannel\" data-throw-if-not-resolved=\"false\"></xref> implementation.</p>\n"
  syntax:
    content: public IClientChannel InnerChannel { get; }
    content.vb: Public ReadOnly Property InnerChannel As IClientChannel
    parameters: []
    return:
      type: System.ServiceModel.IClientChannel
      description: "\n<p>The client channel for the WCF client object.</p>\n"
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
  fullName.vb: System.ServiceModel.ClientBase(Of TChannel).InnerChannel
  nameWithType: ClientBase<TChannel>.InnerChannel
  nameWithType.vb: ClientBase(Of TChannel).InnerChannel
- uid: System.ServiceModel.ClientBase`1.State
  commentId: P:System.ServiceModel.ClientBase`1.State
  id: State
  parent: System.ServiceModel.ClientBase`1
  langs:
  - csharp
  - vb
  name: State
  fullName: System.ServiceModel.ClientBase<TChannel>.State
  type: Property
  source:
    remote:
      path: src/System.ServiceModel.Primitives/ref/System.ServiceModel.Primitives.cs
      branch: master
      repo: https://github.com/dotnet/wcf.git
    id: State
    path: src/System.ServiceModel.Primitives/ref/System.ServiceModel.Primitives.cs
    startLine: 69
  assemblies:
  - System.ServiceModel.Primitives
  namespace: System.ServiceModel
  summary: "\n<p>Gets the current state of the <xref href=\"System.ServiceModel.ClientBase`1\" data-throw-if-not-resolved=\"false\"></xref> object.</p>\n"
  syntax:
    content: public CommunicationState State { get; }
    content.vb: Public ReadOnly Property State As CommunicationState
    parameters: []
    return:
      type: System.ServiceModel.CommunicationState
      description: "\n<p>The value of the <xref href=\"System.ServiceModel.CommunicationState\" data-throw-if-not-resolved=\"false\"></xref> of the object.</p>\n"
  implements:
  - System.ServiceModel.ICommunicationObject.State
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
  fullName.vb: System.ServiceModel.ClientBase(Of TChannel).State
  nameWithType: ClientBase<TChannel>.State
  nameWithType.vb: ClientBase(Of TChannel).State
- uid: System.ServiceModel.ClientBase`1.System#ServiceModel#ICommunicationObject#Closed
  commentId: E:System.ServiceModel.ClientBase`1.System#ServiceModel#ICommunicationObject#Closed
  id: System#ServiceModel#ICommunicationObject#Closed
  isEii: true
  parent: System.ServiceModel.ClientBase`1
  langs:
  - csharp
  - vb
  name: ICommunicationObject.Closed
  fullName: System.ServiceModel.ClientBase<TChannel>.System.ServiceModel.ICommunicationObject.Closed
  type: Event
  source:
    remote:
      path: src/System.ServiceModel.Primitives/ref/System.ServiceModel.Primitives.cs
      branch: master
      repo: https://github.com/dotnet/wcf.git
    id: System.ServiceModel.ICommunicationObject.Closed
    path: src/System.ServiceModel.Primitives/ref/System.ServiceModel.Primitives.cs
    startLine: 70
  assemblies:
  - System.ServiceModel.Primitives
  namespace: System.ServiceModel
  summary: "\n<p>The event handler that is invoked when the <xref href=\"System.ServiceModel.ClientBase`1\" data-throw-if-not-resolved=\"false\"></xref> object has transitioned from its current state to the closed state.</p>\n"
  syntax:
    content: event EventHandler ICommunicationObject.Closed
    content.vb: Event System.ServiceModel.ICommunicationObject.Closed As EventHandler Implements ICommunicationObject.Closed
    return:
      type: System.EventHandler
  implements:
  - System.ServiceModel.ICommunicationObject.Closed
  fullName.vb: System.ServiceModel.ClientBase(Of TChannel).System.ServiceModel.ICommunicationObject.Closed
  name.vb: System.ServiceModel.ICommunicationObject.Closed
  nameWithType: ClientBase<TChannel>.ICommunicationObject.Closed
  nameWithType.vb: ClientBase(Of TChannel).System.ServiceModel.ICommunicationObject.Closed
- uid: System.ServiceModel.ClientBase`1.System#ServiceModel#ICommunicationObject#Closing
  commentId: E:System.ServiceModel.ClientBase`1.System#ServiceModel#ICommunicationObject#Closing
  id: System#ServiceModel#ICommunicationObject#Closing
  isEii: true
  parent: System.ServiceModel.ClientBase`1
  langs:
  - csharp
  - vb
  name: ICommunicationObject.Closing
  fullName: System.ServiceModel.ClientBase<TChannel>.System.ServiceModel.ICommunicationObject.Closing
  type: Event
  source:
    remote:
      path: src/System.ServiceModel.Primitives/ref/System.ServiceModel.Primitives.cs
      branch: master
      repo: https://github.com/dotnet/wcf.git
    id: System.ServiceModel.ICommunicationObject.Closing
    path: src/System.ServiceModel.Primitives/ref/System.ServiceModel.Primitives.cs
    startLine: 71
  assemblies:
  - System.ServiceModel.Primitives
  namespace: System.ServiceModel
  summary: "\n<p>The event handler that is invoked when the <xref href=\"System.ServiceModel.ClientBase`1\" data-throw-if-not-resolved=\"false\"></xref> object transitions from its current state to the closed state.</p>\n"
  syntax:
    content: event EventHandler ICommunicationObject.Closing
    content.vb: Event System.ServiceModel.ICommunicationObject.Closing As EventHandler Implements ICommunicationObject.Closing
    return:
      type: System.EventHandler
  implements:
  - System.ServiceModel.ICommunicationObject.Closing
  fullName.vb: System.ServiceModel.ClientBase(Of TChannel).System.ServiceModel.ICommunicationObject.Closing
  name.vb: System.ServiceModel.ICommunicationObject.Closing
  nameWithType: ClientBase<TChannel>.ICommunicationObject.Closing
  nameWithType.vb: ClientBase(Of TChannel).System.ServiceModel.ICommunicationObject.Closing
- uid: System.ServiceModel.ClientBase`1.System#ServiceModel#ICommunicationObject#Faulted
  commentId: E:System.ServiceModel.ClientBase`1.System#ServiceModel#ICommunicationObject#Faulted
  id: System#ServiceModel#ICommunicationObject#Faulted
  isEii: true
  parent: System.ServiceModel.ClientBase`1
  langs:
  - csharp
  - vb
  name: ICommunicationObject.Faulted
  fullName: System.ServiceModel.ClientBase<TChannel>.System.ServiceModel.ICommunicationObject.Faulted
  type: Event
  source:
    remote:
      path: src/System.ServiceModel.Primitives/ref/System.ServiceModel.Primitives.cs
      branch: master
      repo: https://github.com/dotnet/wcf.git
    id: System.ServiceModel.ICommunicationObject.Faulted
    path: src/System.ServiceModel.Primitives/ref/System.ServiceModel.Primitives.cs
    startLine: 72
  assemblies:
  - System.ServiceModel.Primitives
  namespace: System.ServiceModel
  summary: "\n<p>The event handler that is invoked when a fault occurs while performing an operation on the <xref href=\"System.ServiceModel.ClientBase`1\" data-throw-if-not-resolved=\"false\"></xref> object.</p>\n"
  syntax:
    content: event EventHandler ICommunicationObject.Faulted
    content.vb: Event System.ServiceModel.ICommunicationObject.Faulted As EventHandler Implements ICommunicationObject.Faulted
    return:
      type: System.EventHandler
  implements:
  - System.ServiceModel.ICommunicationObject.Faulted
  fullName.vb: System.ServiceModel.ClientBase(Of TChannel).System.ServiceModel.ICommunicationObject.Faulted
  name.vb: System.ServiceModel.ICommunicationObject.Faulted
  nameWithType: ClientBase<TChannel>.ICommunicationObject.Faulted
  nameWithType.vb: ClientBase(Of TChannel).System.ServiceModel.ICommunicationObject.Faulted
- uid: System.ServiceModel.ClientBase`1.System#ServiceModel#ICommunicationObject#Opened
  commentId: E:System.ServiceModel.ClientBase`1.System#ServiceModel#ICommunicationObject#Opened
  id: System#ServiceModel#ICommunicationObject#Opened
  isEii: true
  parent: System.ServiceModel.ClientBase`1
  langs:
  - csharp
  - vb
  name: ICommunicationObject.Opened
  fullName: System.ServiceModel.ClientBase<TChannel>.System.ServiceModel.ICommunicationObject.Opened
  type: Event
  source:
    remote:
      path: src/System.ServiceModel.Primitives/ref/System.ServiceModel.Primitives.cs
      branch: master
      repo: https://github.com/dotnet/wcf.git
    id: System.ServiceModel.ICommunicationObject.Opened
    path: src/System.ServiceModel.Primitives/ref/System.ServiceModel.Primitives.cs
    startLine: 73
  assemblies:
  - System.ServiceModel.Primitives
  namespace: System.ServiceModel
  summary: "\n<p>The event handler that is invoked when the <xref href=\"System.ServiceModel.ClientBase`1\" data-throw-if-not-resolved=\"false\"></xref> object transitions from the created state to the opened state.</p>\n"
  syntax:
    content: event EventHandler ICommunicationObject.Opened
    content.vb: Event System.ServiceModel.ICommunicationObject.Opened As EventHandler Implements ICommunicationObject.Opened
    return:
      type: System.EventHandler
  implements:
  - System.ServiceModel.ICommunicationObject.Opened
  fullName.vb: System.ServiceModel.ClientBase(Of TChannel).System.ServiceModel.ICommunicationObject.Opened
  name.vb: System.ServiceModel.ICommunicationObject.Opened
  nameWithType: ClientBase<TChannel>.ICommunicationObject.Opened
  nameWithType.vb: ClientBase(Of TChannel).System.ServiceModel.ICommunicationObject.Opened
- uid: System.ServiceModel.ClientBase`1.System#ServiceModel#ICommunicationObject#Opening
  commentId: E:System.ServiceModel.ClientBase`1.System#ServiceModel#ICommunicationObject#Opening
  id: System#ServiceModel#ICommunicationObject#Opening
  isEii: true
  parent: System.ServiceModel.ClientBase`1
  langs:
  - csharp
  - vb
  name: ICommunicationObject.Opening
  fullName: System.ServiceModel.ClientBase<TChannel>.System.ServiceModel.ICommunicationObject.Opening
  type: Event
  source:
    remote:
      path: src/System.ServiceModel.Primitives/ref/System.ServiceModel.Primitives.cs
      branch: master
      repo: https://github.com/dotnet/wcf.git
    id: System.ServiceModel.ICommunicationObject.Opening
    path: src/System.ServiceModel.Primitives/ref/System.ServiceModel.Primitives.cs
    startLine: 74
  assemblies:
  - System.ServiceModel.Primitives
  namespace: System.ServiceModel
  summary: "\n<p>The event handler that is invoked when the <xref href=\"System.ServiceModel.ClientBase`1\" data-throw-if-not-resolved=\"false\"></xref> object transitions from the created state to the opened state.</p>\n"
  syntax:
    content: event EventHandler ICommunicationObject.Opening
    content.vb: Event System.ServiceModel.ICommunicationObject.Opening As EventHandler Implements ICommunicationObject.Opening
    return:
      type: System.EventHandler
  implements:
  - System.ServiceModel.ICommunicationObject.Opening
  fullName.vb: System.ServiceModel.ClientBase(Of TChannel).System.ServiceModel.ICommunicationObject.Opening
  name.vb: System.ServiceModel.ICommunicationObject.Opening
  nameWithType: ClientBase<TChannel>.ICommunicationObject.Opening
  nameWithType.vb: ClientBase(Of TChannel).System.ServiceModel.ICommunicationObject.Opening
- uid: System.ServiceModel.ClientBase`1.Abort
  commentId: M:System.ServiceModel.ClientBase`1.Abort
  id: Abort
  parent: System.ServiceModel.ClientBase`1
  langs:
  - csharp
  - vb
  name: Abort()
  fullName: System.ServiceModel.ClientBase<TChannel>.Abort()
  type: Method
  source:
    remote:
      path: src/System.ServiceModel.Primitives/ref/System.ServiceModel.Primitives.cs
      branch: master
      repo: https://github.com/dotnet/wcf.git
    id: Abort
    path: src/System.ServiceModel.Primitives/ref/System.ServiceModel.Primitives.cs
    startLine: 75
  assemblies:
  - System.ServiceModel.Primitives
  namespace: System.ServiceModel
  summary: "\n<p>Causes the <xref href=\"System.ServiceModel.ClientBase`1\" data-throw-if-not-resolved=\"false\"></xref> object to transition immediately from its current state into the closed state.</p>\n"
  syntax:
    content: public void Abort()
    content.vb: Public Sub Abort
  implements:
  - System.ServiceModel.ICommunicationObject.Abort
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: System.ServiceModel.ClientBase(Of TChannel).Abort()
  nameWithType: ClientBase<TChannel>.Abort()
  nameWithType.vb: ClientBase(Of TChannel).Abort()
- uid: System.ServiceModel.ClientBase`1.CreateChannel
  commentId: M:System.ServiceModel.ClientBase`1.CreateChannel
  id: CreateChannel
  parent: System.ServiceModel.ClientBase`1
  langs:
  - csharp
  - vb
  name: CreateChannel()
  fullName: System.ServiceModel.ClientBase<TChannel>.CreateChannel()
  type: Method
  source:
    remote:
      path: src/System.ServiceModel.Primitives/ref/System.ServiceModel.Primitives.cs
      branch: master
      repo: https://github.com/dotnet/wcf.git
    id: CreateChannel
    path: src/System.ServiceModel.Primitives/ref/System.ServiceModel.Primitives.cs
    startLine: 76
  assemblies:
  - System.ServiceModel.Primitives
  namespace: System.ServiceModel
  summary: "\n<p>Returns a new channel to the service.</p>\n"
  syntax:
    content: protected virtual TChannel CreateChannel()
    content.vb: Protected Overridable Function CreateChannel As TChannel
    return:
      type: '{TChannel}'
      description: "\n<p>A channel of the type of the service contract.</p>\n"
  modifiers.csharp:
  - protected
  - virtual
  modifiers.vb:
  - Protected
  - Overridable
  fullName.vb: System.ServiceModel.ClientBase(Of TChannel).CreateChannel()
  nameWithType: ClientBase<TChannel>.CreateChannel()
  nameWithType.vb: ClientBase(Of TChannel).CreateChannel()
- uid: System.ServiceModel.ClientBase`1.GetDefaultValueForInitialization``1
  commentId: M:System.ServiceModel.ClientBase`1.GetDefaultValueForInitialization``1
  id: GetDefaultValueForInitialization``1
  parent: System.ServiceModel.ClientBase`1
  langs:
  - csharp
  - vb
  name: GetDefaultValueForInitialization<T>()
  fullName: System.ServiceModel.ClientBase<TChannel>.GetDefaultValueForInitialization<T>()
  type: Method
  source:
    remote:
      path: src/System.ServiceModel.Primitives/ref/System.ServiceModel.Primitives.cs
      branch: master
      repo: https://github.com/dotnet/wcf.git
    id: GetDefaultValueForInitialization
    path: src/System.ServiceModel.Primitives/ref/System.ServiceModel.Primitives.cs
    startLine: 77
  assemblies:
  - System.ServiceModel.Primitives
  namespace: System.ServiceModel
  summary: "\n<p>Replicates the behavior of the default keyword in C#.</p>\n"
  syntax:
    content: protected T GetDefaultValueForInitialization<T>()
    content.vb: Protected Function GetDefaultValueForInitialization(Of T) As T
    typeParameters:
    - id: T
      description: "\n<p>The type that is identified as reference or numeric by the keyword.</p>\n"
    return:
      type: '{T}'
      description: "\n<p>Returns <strong>null</strong> if <strong>T</strong> is a reference type and zero if <strong>T</strong> is a numeric value type.</p>\n"
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
  fullName.vb: System.ServiceModel.ClientBase(Of TChannel).GetDefaultValueForInitialization(Of T)()
  name.vb: GetDefaultValueForInitialization(Of T)()
  nameWithType: ClientBase<TChannel>.GetDefaultValueForInitialization<T>()
  nameWithType.vb: ClientBase(Of TChannel).GetDefaultValueForInitialization(Of T)()
- uid: System.ServiceModel.ClientBase`1.InvokeAsync(System.ServiceModel.ClientBase{`0}.BeginOperationDelegate,System.Object[],System.ServiceModel.ClientBase{`0}.EndOperationDelegate,System.Threading.SendOrPostCallback,System.Object)
  commentId: M:System.ServiceModel.ClientBase`1.InvokeAsync(System.ServiceModel.ClientBase{`0}.BeginOperationDelegate,System.Object[],System.ServiceModel.ClientBase{`0}.EndOperationDelegate,System.Threading.SendOrPostCallback,System.Object)
  id: InvokeAsync(System.ServiceModel.ClientBase{`0}.BeginOperationDelegate,System.Object[],System.ServiceModel.ClientBase{`0}.EndOperationDelegate,System.Threading.SendOrPostCallback,System.Object)
  parent: System.ServiceModel.ClientBase`1
  langs:
  - csharp
  - vb
  name: InvokeAsync(ClientBase<TChannel>.BeginOperationDelegate, Object[], ClientBase<TChannel>.EndOperationDelegate, SendOrPostCallback, Object)
  fullName: System.ServiceModel.ClientBase<TChannel>.InvokeAsync(System.ServiceModel.ClientBase<TChannel>.BeginOperationDelegate, System.Object[], System.ServiceModel.ClientBase<TChannel>.EndOperationDelegate, System.Threading.SendOrPostCallback, System.Object)
  type: Method
  source:
    remote:
      path: src/System.ServiceModel.Primitives/ref/System.ServiceModel.Primitives.cs
      branch: master
      repo: https://github.com/dotnet/wcf.git
    id: InvokeAsync
    path: src/System.ServiceModel.Primitives/ref/System.ServiceModel.Primitives.cs
    startLine: 78
  assemblies:
  - System.ServiceModel.Primitives
  namespace: System.ServiceModel
  summary: "\n<p>Provides support for implementing the event-based asynchronous pattern. For more information about this pattern, see Event-based Asynchronous Pattern Overview.</p>\n"
  syntax:
    content: protected void InvokeAsync(ClientBase<TChannel>.BeginOperationDelegate beginOperationDelegate, object[] inValues, ClientBase<TChannel>.EndOperationDelegate endOperationDelegate, SendOrPostCallback operationCompletedCallback, object userState)
    content.vb: Protected Sub InvokeAsync(beginOperationDelegate As ClientBase(Of TChannel).BeginOperationDelegate, inValues As Object(), endOperationDelegate As ClientBase(Of TChannel).EndOperationDelegate, operationCompletedCallback As SendOrPostCallback, userState As Object)
    parameters:
    - id: beginOperationDelegate
      type: System.ServiceModel.ClientBase`1.BeginOperationDelegate
      description: "\n<p>A delegate that is used for calling the asynchronous operation.</p>\n"
    - id: inValues
      type: System.Object[]
      description: "\n<p>The input values to the asynchronous call.</p>\n"
    - id: endOperationDelegate
      type: System.ServiceModel.ClientBase`1.EndOperationDelegate
      description: "\n<p>A delegate that is used to end the asynchronous call after it has completed.</p>\n"
    - id: operationCompletedCallback
      type: System.Threading.SendOrPostCallback
      description: "\n<p>A client-supplied callback that is invoked when the asynchronous method is complete. The callback is passed to the <xref href=\"System.ServiceModel.ClientBase`1.BeginOperationDelegate\" data-throw-if-not-resolved=\"false\"></xref>.</p>\n"
    - id: userState
      type: System.Object
      description: "\n<p>The <em>userState</em> object to associate with the asynchronous call.</p>\n"
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
  fullName.vb: System.ServiceModel.ClientBase(Of TChannel).InvokeAsync(System.ServiceModel.ClientBase(Of TChannel).BeginOperationDelegate, System.Object(), System.ServiceModel.ClientBase(Of TChannel).EndOperationDelegate, System.Threading.SendOrPostCallback, System.Object)
  name.vb: InvokeAsync(ClientBase(Of TChannel).BeginOperationDelegate, Object(), ClientBase(Of TChannel).EndOperationDelegate, SendOrPostCallback, Object)
  nameWithType: ClientBase<TChannel>.InvokeAsync(ClientBase<TChannel>.BeginOperationDelegate, Object[], ClientBase<TChannel>.EndOperationDelegate, SendOrPostCallback, Object)
  nameWithType.vb: ClientBase(Of TChannel).InvokeAsync(ClientBase(Of TChannel).BeginOperationDelegate, Object(), ClientBase(Of TChannel).EndOperationDelegate, SendOrPostCallback, Object)
- uid: System.ServiceModel.ClientBase`1.System#ServiceModel#ICommunicationObject#BeginClose(System.AsyncCallback,System.Object)
  commentId: M:System.ServiceModel.ClientBase`1.System#ServiceModel#ICommunicationObject#BeginClose(System.AsyncCallback,System.Object)
  id: System#ServiceModel#ICommunicationObject#BeginClose(System.AsyncCallback,System.Object)
  isEii: true
  parent: System.ServiceModel.ClientBase`1
  langs:
  - csharp
  - vb
  name: ICommunicationObject.BeginClose(AsyncCallback, Object)
  fullName: System.ServiceModel.ClientBase<TChannel>.System.ServiceModel.ICommunicationObject.BeginClose(System.AsyncCallback, System.Object)
  type: Method
  source:
    remote:
      path: src/System.ServiceModel.Primitives/ref/System.ServiceModel.Primitives.cs
      branch: master
      repo: https://github.com/dotnet/wcf.git
    id: System.ServiceModel.ICommunicationObject.BeginClose
    path: src/System.ServiceModel.Primitives/ref/System.ServiceModel.Primitives.cs
    startLine: 79
  assemblies:
  - System.ServiceModel.Primitives
  namespace: System.ServiceModel
  summary: "\n<p>Begins an asynchronous operation to close the <xref href=\"System.ServiceModel.ClientBase`1\" data-throw-if-not-resolved=\"false\"></xref>.</p>\n"
  syntax:
    content: IAsyncResult ICommunicationObject.BeginClose(AsyncCallback callback, object state)
    content.vb: Function System.ServiceModel.ICommunicationObject.BeginClose(callback As AsyncCallback, state As Object) As IAsyncResult Implements ICommunicationObject.BeginClose
    parameters:
    - id: callback
      type: System.AsyncCallback
      description: "\n<p>The method that receives the callback on completion.</p>\n"
    - id: state
      type: System.Object
      description: "\n<p>The state data.</p>\n"
    return:
      type: System.IAsyncResult
      description: "\n<p>The <xref href=\"System.IAsyncResult\" data-throw-if-not-resolved=\"false\"></xref> that references the asynchronous close operation.</p>\n"
  implements:
  - System.ServiceModel.ICommunicationObject.BeginClose(System.AsyncCallback,System.Object)
  fullName.vb: System.ServiceModel.ClientBase(Of TChannel).System.ServiceModel.ICommunicationObject.BeginClose(System.AsyncCallback, System.Object)
  name.vb: System.ServiceModel.ICommunicationObject.BeginClose(AsyncCallback, Object)
  nameWithType: ClientBase<TChannel>.ICommunicationObject.BeginClose(AsyncCallback, Object)
  nameWithType.vb: ClientBase(Of TChannel).System.ServiceModel.ICommunicationObject.BeginClose(AsyncCallback, Object)
- uid: System.ServiceModel.ClientBase`1.System#ServiceModel#ICommunicationObject#BeginClose(System.TimeSpan,System.AsyncCallback,System.Object)
  commentId: M:System.ServiceModel.ClientBase`1.System#ServiceModel#ICommunicationObject#BeginClose(System.TimeSpan,System.AsyncCallback,System.Object)
  id: System#ServiceModel#ICommunicationObject#BeginClose(System.TimeSpan,System.AsyncCallback,System.Object)
  isEii: true
  parent: System.ServiceModel.ClientBase`1
  langs:
  - csharp
  - vb
  name: ICommunicationObject.BeginClose(TimeSpan, AsyncCallback, Object)
  fullName: System.ServiceModel.ClientBase<TChannel>.System.ServiceModel.ICommunicationObject.BeginClose(System.TimeSpan, System.AsyncCallback, System.Object)
  type: Method
  source:
    remote:
      path: src/System.ServiceModel.Primitives/ref/System.ServiceModel.Primitives.cs
      branch: master
      repo: https://github.com/dotnet/wcf.git
    id: System.ServiceModel.ICommunicationObject.BeginClose
    path: src/System.ServiceModel.Primitives/ref/System.ServiceModel.Primitives.cs
    startLine: 80
  assemblies:
  - System.ServiceModel.Primitives
  namespace: System.ServiceModel
  summary: "\n<p>Begins an asynchronous operation to close the <xref href=\"System.ServiceModel.ClientBase`1\" data-throw-if-not-resolved=\"false\"></xref> with a specified timeout.</p>\n"
  syntax:
    content: IAsyncResult ICommunicationObject.BeginClose(TimeSpan timeout, AsyncCallback callback, object state)
    content.vb: Function System.ServiceModel.ICommunicationObject.BeginClose(timeout As TimeSpan, callback As AsyncCallback, state As Object) As IAsyncResult Implements ICommunicationObject.BeginClose
    parameters:
    - id: timeout
      type: System.TimeSpan
      description: "\n<p>The period within which the call must complete.</p>\n"
    - id: callback
      type: System.AsyncCallback
      description: "\n<p>The callback object invoked when the operation completes.</p>\n"
    - id: state
      type: System.Object
      description: "\n<p>The state data.</p>\n"
    return:
      type: System.IAsyncResult
      description: "\n<p>The <xref href=\"System.IAsyncResult\" data-throw-if-not-resolved=\"false\"></xref> that references the asynchronous begin close operation.</p>\n"
  implements:
  - System.ServiceModel.ICommunicationObject.BeginClose(System.TimeSpan,System.AsyncCallback,System.Object)
  fullName.vb: System.ServiceModel.ClientBase(Of TChannel).System.ServiceModel.ICommunicationObject.BeginClose(System.TimeSpan, System.AsyncCallback, System.Object)
  name.vb: System.ServiceModel.ICommunicationObject.BeginClose(TimeSpan, AsyncCallback, Object)
  nameWithType: ClientBase<TChannel>.ICommunicationObject.BeginClose(TimeSpan, AsyncCallback, Object)
  nameWithType.vb: ClientBase(Of TChannel).System.ServiceModel.ICommunicationObject.BeginClose(TimeSpan, AsyncCallback, Object)
- uid: System.ServiceModel.ClientBase`1.System#ServiceModel#ICommunicationObject#BeginOpen(System.AsyncCallback,System.Object)
  commentId: M:System.ServiceModel.ClientBase`1.System#ServiceModel#ICommunicationObject#BeginOpen(System.AsyncCallback,System.Object)
  id: System#ServiceModel#ICommunicationObject#BeginOpen(System.AsyncCallback,System.Object)
  isEii: true
  parent: System.ServiceModel.ClientBase`1
  langs:
  - csharp
  - vb
  name: ICommunicationObject.BeginOpen(AsyncCallback, Object)
  fullName: System.ServiceModel.ClientBase<TChannel>.System.ServiceModel.ICommunicationObject.BeginOpen(System.AsyncCallback, System.Object)
  type: Method
  source:
    remote:
      path: src/System.ServiceModel.Primitives/ref/System.ServiceModel.Primitives.cs
      branch: master
      repo: https://github.com/dotnet/wcf.git
    id: System.ServiceModel.ICommunicationObject.BeginOpen
    path: src/System.ServiceModel.Primitives/ref/System.ServiceModel.Primitives.cs
    startLine: 81
  assemblies:
  - System.ServiceModel.Primitives
  namespace: System.ServiceModel
  summary: "\n<p>Begins an asynchronous operation to open the <xref href=\"System.ServiceModel.ClientBase`1\" data-throw-if-not-resolved=\"false\"></xref> object.</p>\n"
  syntax:
    content: IAsyncResult ICommunicationObject.BeginOpen(AsyncCallback callback, object state)
    content.vb: Function System.ServiceModel.ICommunicationObject.BeginOpen(callback As AsyncCallback, state As Object) As IAsyncResult Implements ICommunicationObject.BeginOpen
    parameters:
    - id: callback
      type: System.AsyncCallback
      description: "\n<p>The method that receives the callback on completion.</p>\n"
    - id: state
      type: System.Object
      description: "\n<p>The state data.</p>\n"
    return:
      type: System.IAsyncResult
      description: "\n<p>The <xref href=\"System.IAsyncResult\" data-throw-if-not-resolved=\"false\"></xref> that references the asynchronous open operation. </p>\n"
  implements:
  - System.ServiceModel.ICommunicationObject.BeginOpen(System.AsyncCallback,System.Object)
  fullName.vb: System.ServiceModel.ClientBase(Of TChannel).System.ServiceModel.ICommunicationObject.BeginOpen(System.AsyncCallback, System.Object)
  name.vb: System.ServiceModel.ICommunicationObject.BeginOpen(AsyncCallback, Object)
  nameWithType: ClientBase<TChannel>.ICommunicationObject.BeginOpen(AsyncCallback, Object)
  nameWithType.vb: ClientBase(Of TChannel).System.ServiceModel.ICommunicationObject.BeginOpen(AsyncCallback, Object)
- uid: System.ServiceModel.ClientBase`1.System#ServiceModel#ICommunicationObject#BeginOpen(System.TimeSpan,System.AsyncCallback,System.Object)
  commentId: M:System.ServiceModel.ClientBase`1.System#ServiceModel#ICommunicationObject#BeginOpen(System.TimeSpan,System.AsyncCallback,System.Object)
  id: System#ServiceModel#ICommunicationObject#BeginOpen(System.TimeSpan,System.AsyncCallback,System.Object)
  isEii: true
  parent: System.ServiceModel.ClientBase`1
  langs:
  - csharp
  - vb
  name: ICommunicationObject.BeginOpen(TimeSpan, AsyncCallback, Object)
  fullName: System.ServiceModel.ClientBase<TChannel>.System.ServiceModel.ICommunicationObject.BeginOpen(System.TimeSpan, System.AsyncCallback, System.Object)
  type: Method
  source:
    remote:
      path: src/System.ServiceModel.Primitives/ref/System.ServiceModel.Primitives.cs
      branch: master
      repo: https://github.com/dotnet/wcf.git
    id: System.ServiceModel.ICommunicationObject.BeginOpen
    path: src/System.ServiceModel.Primitives/ref/System.ServiceModel.Primitives.cs
    startLine: 82
  assemblies:
  - System.ServiceModel.Primitives
  namespace: System.ServiceModel
  summary: "\n<p>Begins an asynchronous operation to open the <xref href=\"System.ServiceModel.ClientBase`1\" data-throw-if-not-resolved=\"false\"></xref> object within a specified interval of time.</p>\n"
  syntax:
    content: IAsyncResult ICommunicationObject.BeginOpen(TimeSpan timeout, AsyncCallback callback, object state)
    content.vb: Function System.ServiceModel.ICommunicationObject.BeginOpen(timeout As TimeSpan, callback As AsyncCallback, state As Object) As IAsyncResult Implements ICommunicationObject.BeginOpen
    parameters:
    - id: timeout
      type: System.TimeSpan
      description: "\n<p>The time within which the call must complete.</p>\n"
    - id: callback
      type: System.AsyncCallback
      description: "\n<p>The method that receives the callback on completion.</p>\n"
    - id: state
      type: System.Object
      description: "\n<p>The state data.</p>\n"
    return:
      type: System.IAsyncResult
      description: "\n<p>The <xref href=\"System.IAsyncResult\" data-throw-if-not-resolved=\"false\"></xref> that references the asynchronous open operation.</p>\n"
  implements:
  - System.ServiceModel.ICommunicationObject.BeginOpen(System.TimeSpan,System.AsyncCallback,System.Object)
  fullName.vb: System.ServiceModel.ClientBase(Of TChannel).System.ServiceModel.ICommunicationObject.BeginOpen(System.TimeSpan, System.AsyncCallback, System.Object)
  name.vb: System.ServiceModel.ICommunicationObject.BeginOpen(TimeSpan, AsyncCallback, Object)
  nameWithType: ClientBase<TChannel>.ICommunicationObject.BeginOpen(TimeSpan, AsyncCallback, Object)
  nameWithType.vb: ClientBase(Of TChannel).System.ServiceModel.ICommunicationObject.BeginOpen(TimeSpan, AsyncCallback, Object)
- uid: System.ServiceModel.ClientBase`1.System#ServiceModel#ICommunicationObject#Close
  commentId: M:System.ServiceModel.ClientBase`1.System#ServiceModel#ICommunicationObject#Close
  id: System#ServiceModel#ICommunicationObject#Close
  isEii: true
  parent: System.ServiceModel.ClientBase`1
  langs:
  - csharp
  - vb
  name: ICommunicationObject.Close()
  fullName: System.ServiceModel.ClientBase<TChannel>.System.ServiceModel.ICommunicationObject.Close()
  type: Method
  source:
    remote:
      path: src/System.ServiceModel.Primitives/ref/System.ServiceModel.Primitives.cs
      branch: master
      repo: https://github.com/dotnet/wcf.git
    id: System.ServiceModel.ICommunicationObject.Close
    path: src/System.ServiceModel.Primitives/ref/System.ServiceModel.Primitives.cs
    startLine: 83
  assemblies:
  - System.ServiceModel.Primitives
  namespace: System.ServiceModel
  syntax:
    content: void ICommunicationObject.Close()
    content.vb: Sub System.ServiceModel.ICommunicationObject.Close Implements ICommunicationObject.Close
  implements:
  - System.ServiceModel.ICommunicationObject.Close
  fullName.vb: System.ServiceModel.ClientBase(Of TChannel).System.ServiceModel.ICommunicationObject.Close()
  name.vb: System.ServiceModel.ICommunicationObject.Close()
  nameWithType: ClientBase<TChannel>.ICommunicationObject.Close()
  nameWithType.vb: ClientBase(Of TChannel).System.ServiceModel.ICommunicationObject.Close()
- uid: System.ServiceModel.ClientBase`1.System#ServiceModel#ICommunicationObject#Close(System.TimeSpan)
  commentId: M:System.ServiceModel.ClientBase`1.System#ServiceModel#ICommunicationObject#Close(System.TimeSpan)
  id: System#ServiceModel#ICommunicationObject#Close(System.TimeSpan)
  isEii: true
  parent: System.ServiceModel.ClientBase`1
  langs:
  - csharp
  - vb
  name: ICommunicationObject.Close(TimeSpan)
  fullName: System.ServiceModel.ClientBase<TChannel>.System.ServiceModel.ICommunicationObject.Close(System.TimeSpan)
  type: Method
  source:
    remote:
      path: src/System.ServiceModel.Primitives/ref/System.ServiceModel.Primitives.cs
      branch: master
      repo: https://github.com/dotnet/wcf.git
    id: System.ServiceModel.ICommunicationObject.Close
    path: src/System.ServiceModel.Primitives/ref/System.ServiceModel.Primitives.cs
    startLine: 84
  assemblies:
  - System.ServiceModel.Primitives
  namespace: System.ServiceModel
  summary: "\n<p>Causes the <xref href=\"System.ServiceModel.ClientBase`1\" data-throw-if-not-resolved=\"false\"></xref> object to transition from its current state into the closed state.</p>\n"
  syntax:
    content: void ICommunicationObject.Close(TimeSpan timeout)
    content.vb: Sub System.ServiceModel.ICommunicationObject.Close(timeout As TimeSpan) Implements ICommunicationObject.Close
    parameters:
    - id: timeout
      type: System.TimeSpan
      description: "\n<p>The time within which the call must complete.</p>\n"
  implements:
  - System.ServiceModel.ICommunicationObject.Close(System.TimeSpan)
  fullName.vb: System.ServiceModel.ClientBase(Of TChannel).System.ServiceModel.ICommunicationObject.Close(System.TimeSpan)
  name.vb: System.ServiceModel.ICommunicationObject.Close(TimeSpan)
  nameWithType: ClientBase<TChannel>.ICommunicationObject.Close(TimeSpan)
  nameWithType.vb: ClientBase(Of TChannel).System.ServiceModel.ICommunicationObject.Close(TimeSpan)
- uid: System.ServiceModel.ClientBase`1.System#ServiceModel#ICommunicationObject#EndClose(System.IAsyncResult)
  commentId: M:System.ServiceModel.ClientBase`1.System#ServiceModel#ICommunicationObject#EndClose(System.IAsyncResult)
  id: System#ServiceModel#ICommunicationObject#EndClose(System.IAsyncResult)
  isEii: true
  parent: System.ServiceModel.ClientBase`1
  langs:
  - csharp
  - vb
  name: ICommunicationObject.EndClose(IAsyncResult)
  fullName: System.ServiceModel.ClientBase<TChannel>.System.ServiceModel.ICommunicationObject.EndClose(System.IAsyncResult)
  type: Method
  source:
    remote:
      path: src/System.ServiceModel.Primitives/ref/System.ServiceModel.Primitives.cs
      branch: master
      repo: https://github.com/dotnet/wcf.git
    id: System.ServiceModel.ICommunicationObject.EndClose
    path: src/System.ServiceModel.Primitives/ref/System.ServiceModel.Primitives.cs
    startLine: 85
  assemblies:
  - System.ServiceModel.Primitives
  namespace: System.ServiceModel
  summary: "\n<p>Completes an asynchronous operation to close the <xref href=\"System.ServiceModel.ClientBase`1\" data-throw-if-not-resolved=\"false\"></xref> object.</p>\n"
  syntax:
    content: void ICommunicationObject.EndClose(IAsyncResult result)
    content.vb: Sub System.ServiceModel.ICommunicationObject.EndClose(result As IAsyncResult) Implements ICommunicationObject.EndClose
    parameters:
    - id: result
      type: System.IAsyncResult
      description: "\n<p>The <xref href=\"System.IAsyncResult\" data-throw-if-not-resolved=\"false\"></xref> used to complete the asynchronous close operation.</p>\n"
  implements:
  - System.ServiceModel.ICommunicationObject.EndClose(System.IAsyncResult)
  fullName.vb: System.ServiceModel.ClientBase(Of TChannel).System.ServiceModel.ICommunicationObject.EndClose(System.IAsyncResult)
  name.vb: System.ServiceModel.ICommunicationObject.EndClose(IAsyncResult)
  nameWithType: ClientBase<TChannel>.ICommunicationObject.EndClose(IAsyncResult)
  nameWithType.vb: ClientBase(Of TChannel).System.ServiceModel.ICommunicationObject.EndClose(IAsyncResult)
- uid: System.ServiceModel.ClientBase`1.System#ServiceModel#ICommunicationObject#EndOpen(System.IAsyncResult)
  commentId: M:System.ServiceModel.ClientBase`1.System#ServiceModel#ICommunicationObject#EndOpen(System.IAsyncResult)
  id: System#ServiceModel#ICommunicationObject#EndOpen(System.IAsyncResult)
  isEii: true
  parent: System.ServiceModel.ClientBase`1
  langs:
  - csharp
  - vb
  name: ICommunicationObject.EndOpen(IAsyncResult)
  fullName: System.ServiceModel.ClientBase<TChannel>.System.ServiceModel.ICommunicationObject.EndOpen(System.IAsyncResult)
  type: Method
  source:
    remote:
      path: src/System.ServiceModel.Primitives/ref/System.ServiceModel.Primitives.cs
      branch: master
      repo: https://github.com/dotnet/wcf.git
    id: System.ServiceModel.ICommunicationObject.EndOpen
    path: src/System.ServiceModel.Primitives/ref/System.ServiceModel.Primitives.cs
    startLine: 86
  assemblies:
  - System.ServiceModel.Primitives
  namespace: System.ServiceModel
  summary: "\n<p>Completes an asynchronous operation to open the <xref href=\"System.ServiceModel.ClientBase`1\" data-throw-if-not-resolved=\"false\"></xref> object.</p>\n"
  syntax:
    content: void ICommunicationObject.EndOpen(IAsyncResult result)
    content.vb: Sub System.ServiceModel.ICommunicationObject.EndOpen(result As IAsyncResult) Implements ICommunicationObject.EndOpen
    parameters:
    - id: result
      type: System.IAsyncResult
      description: "\n<p>The <xref href=\"System.IAsyncResult\" data-throw-if-not-resolved=\"false\"></xref> used to complete the asynchronous end open operation.</p>\n"
  implements:
  - System.ServiceModel.ICommunicationObject.EndOpen(System.IAsyncResult)
  fullName.vb: System.ServiceModel.ClientBase(Of TChannel).System.ServiceModel.ICommunicationObject.EndOpen(System.IAsyncResult)
  name.vb: System.ServiceModel.ICommunicationObject.EndOpen(IAsyncResult)
  nameWithType: ClientBase<TChannel>.ICommunicationObject.EndOpen(IAsyncResult)
  nameWithType.vb: ClientBase(Of TChannel).System.ServiceModel.ICommunicationObject.EndOpen(IAsyncResult)
- uid: System.ServiceModel.ClientBase`1.System#ServiceModel#ICommunicationObject#Open
  commentId: M:System.ServiceModel.ClientBase`1.System#ServiceModel#ICommunicationObject#Open
  id: System#ServiceModel#ICommunicationObject#Open
  isEii: true
  parent: System.ServiceModel.ClientBase`1
  langs:
  - csharp
  - vb
  name: ICommunicationObject.Open()
  fullName: System.ServiceModel.ClientBase<TChannel>.System.ServiceModel.ICommunicationObject.Open()
  type: Method
  source:
    remote:
      path: src/System.ServiceModel.Primitives/ref/System.ServiceModel.Primitives.cs
      branch: master
      repo: https://github.com/dotnet/wcf.git
    id: System.ServiceModel.ICommunicationObject.Open
    path: src/System.ServiceModel.Primitives/ref/System.ServiceModel.Primitives.cs
    startLine: 87
  assemblies:
  - System.ServiceModel.Primitives
  namespace: System.ServiceModel
  syntax:
    content: void ICommunicationObject.Open()
    content.vb: Sub System.ServiceModel.ICommunicationObject.Open Implements ICommunicationObject.Open
  implements:
  - System.ServiceModel.ICommunicationObject.Open
  fullName.vb: System.ServiceModel.ClientBase(Of TChannel).System.ServiceModel.ICommunicationObject.Open()
  name.vb: System.ServiceModel.ICommunicationObject.Open()
  nameWithType: ClientBase<TChannel>.ICommunicationObject.Open()
  nameWithType.vb: ClientBase(Of TChannel).System.ServiceModel.ICommunicationObject.Open()
- uid: System.ServiceModel.ClientBase`1.System#ServiceModel#ICommunicationObject#Open(System.TimeSpan)
  commentId: M:System.ServiceModel.ClientBase`1.System#ServiceModel#ICommunicationObject#Open(System.TimeSpan)
  id: System#ServiceModel#ICommunicationObject#Open(System.TimeSpan)
  isEii: true
  parent: System.ServiceModel.ClientBase`1
  langs:
  - csharp
  - vb
  name: ICommunicationObject.Open(TimeSpan)
  fullName: System.ServiceModel.ClientBase<TChannel>.System.ServiceModel.ICommunicationObject.Open(System.TimeSpan)
  type: Method
  source:
    remote:
      path: src/System.ServiceModel.Primitives/ref/System.ServiceModel.Primitives.cs
      branch: master
      repo: https://github.com/dotnet/wcf.git
    id: System.ServiceModel.ICommunicationObject.Open
    path: src/System.ServiceModel.Primitives/ref/System.ServiceModel.Primitives.cs
    startLine: 88
  assemblies:
  - System.ServiceModel.Primitives
  namespace: System.ServiceModel
  summary: "\n<p>Causes the <xref href=\"System.ServiceModel.ClientBase`1\" data-throw-if-not-resolved=\"false\"></xref> object to transition from the created state into the opened state within a specified interval of time.</p>\n"
  syntax:
    content: void ICommunicationObject.Open(TimeSpan timeout)
    content.vb: Sub System.ServiceModel.ICommunicationObject.Open(timeout As TimeSpan) Implements ICommunicationObject.Open
    parameters:
    - id: timeout
      type: System.TimeSpan
      description: "\n<p>The time period within which the call must complete.</p>\n"
  implements:
  - System.ServiceModel.ICommunicationObject.Open(System.TimeSpan)
  fullName.vb: System.ServiceModel.ClientBase(Of TChannel).System.ServiceModel.ICommunicationObject.Open(System.TimeSpan)
  name.vb: System.ServiceModel.ICommunicationObject.Open(TimeSpan)
  nameWithType: ClientBase<TChannel>.ICommunicationObject.Open(TimeSpan)
  nameWithType.vb: ClientBase(Of TChannel).System.ServiceModel.ICommunicationObject.Open(TimeSpan)
references:
- uid: System.ServiceModel
  isExternal: false
  name: System.ServiceModel
  fullName: System.ServiceModel
  commentId: N:System.ServiceModel
  nameWithType: System.ServiceModel
- uid: System.Object
  parent: System
  isExternal: false
  name: Object
  fullName: System.Object
  commentId: T:System.Object
  nameWithType: Object
- uid: System.ServiceModel.ICommunicationObject
  parent: System.ServiceModel
  isExternal: false
  name: ICommunicationObject
  fullName: System.ServiceModel.ICommunicationObject
  commentId: T:System.ServiceModel.ICommunicationObject
  nameWithType: ICommunicationObject
- uid: System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  commentId: M:System.Object.ToString
  nameWithType: Object.ToString()
- uid: System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
  commentId: M:System.Object.Equals(System.Object)
  nameWithType: Object.Equals(Object)
- uid: System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
  commentId: M:System.Object.Equals(System.Object,System.Object)
  nameWithType: Object.Equals(Object, Object)
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
- uid: System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  commentId: M:System.Object.GetHashCode
  nameWithType: Object.GetHashCode()
- uid: System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  commentId: M:System.Object.GetType
  nameWithType: Object.GetType()
- uid: System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  commentId: M:System.Object.MemberwiseClone
  nameWithType: Object.MemberwiseClone()
- uid: System
  isExternal: false
  name: System
  fullName: System
  commentId: N:System
  nameWithType: System
- uid: System.ServiceModel.Channels.Binding
  parent: System.ServiceModel.Channels
  isExternal: false
  name: Binding
  fullName: System.ServiceModel.Channels.Binding
  commentId: T:System.ServiceModel.Channels.Binding
  nameWithType: Binding
- uid: System.ServiceModel.EndpointAddress
  parent: System.ServiceModel
  isExternal: false
  name: EndpointAddress
  fullName: System.ServiceModel.EndpointAddress
  commentId: T:System.ServiceModel.EndpointAddress
  nameWithType: EndpointAddress
- uid: System.ServiceModel.Channels
  isExternal: false
  name: System.ServiceModel.Channels
  fullName: System.ServiceModel.Channels
  commentId: N:System.ServiceModel.Channels
  nameWithType: System.ServiceModel.Channels
- uid: System.String
  parent: System
  isExternal: false
  name: String
  fullName: System.String
  commentId: T:System.String
  nameWithType: String
- uid: '{TChannel}'
  definition: TChannel
  name: TChannel
  fullName: TChannel
  commentId: '!:TChannel'
  nameWithType: TChannel
- uid: TChannel
  isExternal: false
  name: TChannel
  fullName: TChannel
  nameWithType: TChannel
- uid: System.ServiceModel.ChannelFactory{{TChannel}}
  parent: System.ServiceModel
  definition: System.ServiceModel.ChannelFactory`1
  name: ChannelFactory<TChannel>
  fullName: System.ServiceModel.ChannelFactory<TChannel>
  fullname.vb: System.ServiceModel.ChannelFactory(Of TChannel)
  name.vb: ChannelFactory(Of TChannel)
  spec.csharp:
  - uid: System.ServiceModel.ChannelFactory`1
    name: ChannelFactory
    fullName: System.ServiceModel.ChannelFactory
  - name: <
    fullName: <
  - name: TChannel
    fullName: TChannel
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: System.ServiceModel.ChannelFactory`1
    name: ChannelFactory
    fullName: System.ServiceModel.ChannelFactory
  - name: '(Of '
    fullName: '(Of '
  - name: TChannel
    fullName: TChannel
  - name: )
    fullName: )
  commentId: T:System.ServiceModel.ChannelFactory{`0}
  nameWithType: ChannelFactory<TChannel>
  nameWithType.vb: ChannelFactory(Of TChannel)
- uid: System.ServiceModel.ChannelFactory`1
  isExternal: false
  name: ChannelFactory<TChannel>
  fullName: System.ServiceModel.ChannelFactory<TChannel>
  fullname.vb: System.ServiceModel.ChannelFactory(Of TChannel)
  name.vb: ChannelFactory(Of TChannel)
  spec.csharp:
  - uid: System.ServiceModel.ChannelFactory`1
    name: ChannelFactory
    fullName: System.ServiceModel.ChannelFactory
  - name: <
    fullName: <
  - name: TChannel
    fullName: TChannel
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: System.ServiceModel.ChannelFactory`1
    name: ChannelFactory
    fullName: System.ServiceModel.ChannelFactory
  - name: '(Of '
    fullName: '(Of '
  - name: TChannel
    fullName: TChannel
  - name: )
    fullName: )
  commentId: T:System.ServiceModel.ChannelFactory`1
  nameWithType: ChannelFactory<TChannel>
  nameWithType.vb: ChannelFactory(Of TChannel)
- uid: System.ServiceModel.Description.ClientCredentials
  parent: System.ServiceModel.Description
  isExternal: false
  name: ClientCredentials
  fullName: System.ServiceModel.Description.ClientCredentials
  commentId: T:System.ServiceModel.Description.ClientCredentials
  nameWithType: ClientCredentials
- uid: System.ServiceModel.Description
  isExternal: false
  name: System.ServiceModel.Description
  fullName: System.ServiceModel.Description
  commentId: N:System.ServiceModel.Description
  nameWithType: System.ServiceModel.Description
- uid: System.ServiceModel.Description.ServiceEndpoint
  parent: System.ServiceModel.Description
  isExternal: false
  name: ServiceEndpoint
  fullName: System.ServiceModel.Description.ServiceEndpoint
  commentId: T:System.ServiceModel.Description.ServiceEndpoint
  nameWithType: ServiceEndpoint
- uid: System.ServiceModel.IClientChannel
  parent: System.ServiceModel
  isExternal: false
  name: IClientChannel
  fullName: System.ServiceModel.IClientChannel
  commentId: T:System.ServiceModel.IClientChannel
  nameWithType: IClientChannel
- uid: System.ServiceModel.ICommunicationObject.State
  parent: System.ServiceModel.ICommunicationObject
  isExternal: false
  name: State
  fullName: System.ServiceModel.ICommunicationObject.State
  commentId: P:System.ServiceModel.ICommunicationObject.State
  nameWithType: ICommunicationObject.State
- uid: System.ServiceModel.CommunicationState
  parent: System.ServiceModel
  isExternal: false
  name: CommunicationState
  fullName: System.ServiceModel.CommunicationState
  commentId: T:System.ServiceModel.CommunicationState
  nameWithType: CommunicationState
- uid: System.ServiceModel.ICommunicationObject.Closed
  parent: System.ServiceModel.ICommunicationObject
  isExternal: false
  name: Closed
  fullName: System.ServiceModel.ICommunicationObject.Closed
  commentId: E:System.ServiceModel.ICommunicationObject.Closed
  nameWithType: ICommunicationObject.Closed
- uid: System.EventHandler
  parent: System
  isExternal: false
  name: EventHandler
  fullName: System.EventHandler
  commentId: T:System.EventHandler
  nameWithType: EventHandler
- uid: System.ServiceModel.ICommunicationObject.Closing
  parent: System.ServiceModel.ICommunicationObject
  isExternal: false
  name: Closing
  fullName: System.ServiceModel.ICommunicationObject.Closing
  commentId: E:System.ServiceModel.ICommunicationObject.Closing
  nameWithType: ICommunicationObject.Closing
- uid: System.ServiceModel.ICommunicationObject.Faulted
  parent: System.ServiceModel.ICommunicationObject
  isExternal: false
  name: Faulted
  fullName: System.ServiceModel.ICommunicationObject.Faulted
  commentId: E:System.ServiceModel.ICommunicationObject.Faulted
  nameWithType: ICommunicationObject.Faulted
- uid: System.ServiceModel.ICommunicationObject.Opened
  parent: System.ServiceModel.ICommunicationObject
  isExternal: false
  name: Opened
  fullName: System.ServiceModel.ICommunicationObject.Opened
  commentId: E:System.ServiceModel.ICommunicationObject.Opened
  nameWithType: ICommunicationObject.Opened
- uid: System.ServiceModel.ICommunicationObject.Opening
  parent: System.ServiceModel.ICommunicationObject
  isExternal: false
  name: Opening
  fullName: System.ServiceModel.ICommunicationObject.Opening
  commentId: E:System.ServiceModel.ICommunicationObject.Opening
  nameWithType: ICommunicationObject.Opening
- uid: System.ServiceModel.ICommunicationObject.Abort
  parent: System.ServiceModel.ICommunicationObject
  isExternal: false
  name: Abort()
  fullName: System.ServiceModel.ICommunicationObject.Abort()
  spec.csharp:
  - uid: System.ServiceModel.ICommunicationObject.Abort
    name: Abort
    fullName: System.ServiceModel.ICommunicationObject.Abort
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.ServiceModel.ICommunicationObject.Abort
    name: Abort
    fullName: System.ServiceModel.ICommunicationObject.Abort
  - name: (
    fullName: (
  - name: )
    fullName: )
  commentId: M:System.ServiceModel.ICommunicationObject.Abort
  nameWithType: ICommunicationObject.Abort()
- uid: '{T}'
  definition: T
  name: T
  fullName: T
  commentId: '!:T'
  nameWithType: T
- uid: T
  isExternal: false
  name: T
  fullName: T
  nameWithType: T
- uid: System.ServiceModel.ClientBase`1.BeginOperationDelegate
  parent: System.ServiceModel
  isExternal: false
  name: ClientBase.BeginOperationDelegate<>
  fullName: System.ServiceModel.ClientBase.BeginOperationDelegate<>
  fullname.vb: System.ServiceModel.ClientBase.BeginOperationDelegate(Of )
  name.vb: ClientBase.BeginOperationDelegate(Of )
  spec.csharp:
  - uid: System.ServiceModel.ClientBase`1.BeginOperationDelegate
    name: ClientBase.BeginOperationDelegate
    fullName: System.ServiceModel.ClientBase.BeginOperationDelegate
  - name: <
    fullName: <
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: System.ServiceModel.ClientBase`1.BeginOperationDelegate
    name: ClientBase.BeginOperationDelegate
    fullName: System.ServiceModel.ClientBase.BeginOperationDelegate
  - name: '(Of '
    fullName: '(Of '
  - name: )
    fullName: )
  commentId: T:System.ServiceModel.ClientBase`1.BeginOperationDelegate
  nameWithType: ClientBase.BeginOperationDelegate<>
  nameWithType.vb: ClientBase.BeginOperationDelegate(Of )
- uid: System.Object[]
  name: Object[]
  fullName: System.Object[]
  fullname.vb: System.Object()
  name.vb: Object()
  spec.csharp:
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: '[]'
    fullName: '[]'
  spec.vb:
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ()
    fullName: ()
  nameWithType: Object[]
  nameWithType.vb: Object()
- uid: System.ServiceModel.ClientBase`1.EndOperationDelegate
  parent: System.ServiceModel
  isExternal: false
  name: ClientBase.EndOperationDelegate<>
  fullName: System.ServiceModel.ClientBase.EndOperationDelegate<>
  fullname.vb: System.ServiceModel.ClientBase.EndOperationDelegate(Of )
  name.vb: ClientBase.EndOperationDelegate(Of )
  spec.csharp:
  - uid: System.ServiceModel.ClientBase`1.EndOperationDelegate
    name: ClientBase.EndOperationDelegate
    fullName: System.ServiceModel.ClientBase.EndOperationDelegate
  - name: <
    fullName: <
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: System.ServiceModel.ClientBase`1.EndOperationDelegate
    name: ClientBase.EndOperationDelegate
    fullName: System.ServiceModel.ClientBase.EndOperationDelegate
  - name: '(Of '
    fullName: '(Of '
  - name: )
    fullName: )
  commentId: T:System.ServiceModel.ClientBase`1.EndOperationDelegate
  nameWithType: ClientBase.EndOperationDelegate<>
  nameWithType.vb: ClientBase.EndOperationDelegate(Of )
- uid: System.Threading.SendOrPostCallback
  parent: System.Threading
  isExternal: false
  name: SendOrPostCallback
  fullName: System.Threading.SendOrPostCallback
  commentId: T:System.Threading.SendOrPostCallback
  nameWithType: SendOrPostCallback
- uid: System.Threading
  isExternal: false
  name: System.Threading
  fullName: System.Threading
  commentId: N:System.Threading
  nameWithType: System.Threading
- uid: System.ServiceModel.ICommunicationObject.BeginClose(System.AsyncCallback,System.Object)
  parent: System.ServiceModel.ICommunicationObject
  isExternal: true
  name: BeginClose(AsyncCallback, Object)
  fullName: System.ServiceModel.ICommunicationObject.BeginClose(System.AsyncCallback, System.Object)
  spec.csharp:
  - uid: System.ServiceModel.ICommunicationObject.BeginClose(System.AsyncCallback,System.Object)
    name: BeginClose
    fullName: System.ServiceModel.ICommunicationObject.BeginClose
  - name: (
    fullName: (
  - uid: System.AsyncCallback
    name: AsyncCallback
    fullName: System.AsyncCallback
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.ServiceModel.ICommunicationObject.BeginClose(System.AsyncCallback,System.Object)
    name: BeginClose
    fullName: System.ServiceModel.ICommunicationObject.BeginClose
  - name: (
    fullName: (
  - uid: System.AsyncCallback
    name: AsyncCallback
    fullName: System.AsyncCallback
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
  commentId: M:System.ServiceModel.ICommunicationObject.BeginClose(System.AsyncCallback,System.Object)
  nameWithType: ICommunicationObject.BeginClose(AsyncCallback, Object)
- uid: System.AsyncCallback
  parent: System
  isExternal: false
  name: AsyncCallback
  fullName: System.AsyncCallback
  commentId: T:System.AsyncCallback
  nameWithType: AsyncCallback
- uid: System.IAsyncResult
  parent: System
  isExternal: false
  name: IAsyncResult
  fullName: System.IAsyncResult
  commentId: T:System.IAsyncResult
  nameWithType: IAsyncResult
- uid: System.ServiceModel.ICommunicationObject.BeginClose(System.TimeSpan,System.AsyncCallback,System.Object)
  parent: System.ServiceModel.ICommunicationObject
  isExternal: true
  name: BeginClose(TimeSpan, AsyncCallback, Object)
  fullName: System.ServiceModel.ICommunicationObject.BeginClose(System.TimeSpan, System.AsyncCallback, System.Object)
  spec.csharp:
  - uid: System.ServiceModel.ICommunicationObject.BeginClose(System.TimeSpan,System.AsyncCallback,System.Object)
    name: BeginClose
    fullName: System.ServiceModel.ICommunicationObject.BeginClose
  - name: (
    fullName: (
  - uid: System.TimeSpan
    name: TimeSpan
    fullName: System.TimeSpan
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.AsyncCallback
    name: AsyncCallback
    fullName: System.AsyncCallback
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.ServiceModel.ICommunicationObject.BeginClose(System.TimeSpan,System.AsyncCallback,System.Object)
    name: BeginClose
    fullName: System.ServiceModel.ICommunicationObject.BeginClose
  - name: (
    fullName: (
  - uid: System.TimeSpan
    name: TimeSpan
    fullName: System.TimeSpan
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.AsyncCallback
    name: AsyncCallback
    fullName: System.AsyncCallback
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
  commentId: M:System.ServiceModel.ICommunicationObject.BeginClose(System.TimeSpan,System.AsyncCallback,System.Object)
  nameWithType: ICommunicationObject.BeginClose(TimeSpan, AsyncCallback, Object)
- uid: System.TimeSpan
  parent: System
  isExternal: false
  name: TimeSpan
  fullName: System.TimeSpan
  commentId: T:System.TimeSpan
  nameWithType: TimeSpan
- uid: System.ServiceModel.ICommunicationObject.BeginOpen(System.AsyncCallback,System.Object)
  parent: System.ServiceModel.ICommunicationObject
  isExternal: true
  name: BeginOpen(AsyncCallback, Object)
  fullName: System.ServiceModel.ICommunicationObject.BeginOpen(System.AsyncCallback, System.Object)
  spec.csharp:
  - uid: System.ServiceModel.ICommunicationObject.BeginOpen(System.AsyncCallback,System.Object)
    name: BeginOpen
    fullName: System.ServiceModel.ICommunicationObject.BeginOpen
  - name: (
    fullName: (
  - uid: System.AsyncCallback
    name: AsyncCallback
    fullName: System.AsyncCallback
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.ServiceModel.ICommunicationObject.BeginOpen(System.AsyncCallback,System.Object)
    name: BeginOpen
    fullName: System.ServiceModel.ICommunicationObject.BeginOpen
  - name: (
    fullName: (
  - uid: System.AsyncCallback
    name: AsyncCallback
    fullName: System.AsyncCallback
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
  commentId: M:System.ServiceModel.ICommunicationObject.BeginOpen(System.AsyncCallback,System.Object)
  nameWithType: ICommunicationObject.BeginOpen(AsyncCallback, Object)
- uid: System.ServiceModel.ICommunicationObject.BeginOpen(System.TimeSpan,System.AsyncCallback,System.Object)
  parent: System.ServiceModel.ICommunicationObject
  isExternal: true
  name: BeginOpen(TimeSpan, AsyncCallback, Object)
  fullName: System.ServiceModel.ICommunicationObject.BeginOpen(System.TimeSpan, System.AsyncCallback, System.Object)
  spec.csharp:
  - uid: System.ServiceModel.ICommunicationObject.BeginOpen(System.TimeSpan,System.AsyncCallback,System.Object)
    name: BeginOpen
    fullName: System.ServiceModel.ICommunicationObject.BeginOpen
  - name: (
    fullName: (
  - uid: System.TimeSpan
    name: TimeSpan
    fullName: System.TimeSpan
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.AsyncCallback
    name: AsyncCallback
    fullName: System.AsyncCallback
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.ServiceModel.ICommunicationObject.BeginOpen(System.TimeSpan,System.AsyncCallback,System.Object)
    name: BeginOpen
    fullName: System.ServiceModel.ICommunicationObject.BeginOpen
  - name: (
    fullName: (
  - uid: System.TimeSpan
    name: TimeSpan
    fullName: System.TimeSpan
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.AsyncCallback
    name: AsyncCallback
    fullName: System.AsyncCallback
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
  commentId: M:System.ServiceModel.ICommunicationObject.BeginOpen(System.TimeSpan,System.AsyncCallback,System.Object)
  nameWithType: ICommunicationObject.BeginOpen(TimeSpan, AsyncCallback, Object)
- uid: System.ServiceModel.ICommunicationObject.Close
  parent: System.ServiceModel.ICommunicationObject
  isExternal: false
  name: Close()
  fullName: System.ServiceModel.ICommunicationObject.Close()
  spec.csharp:
  - uid: System.ServiceModel.ICommunicationObject.Close
    name: Close
    fullName: System.ServiceModel.ICommunicationObject.Close
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.ServiceModel.ICommunicationObject.Close
    name: Close
    fullName: System.ServiceModel.ICommunicationObject.Close
  - name: (
    fullName: (
  - name: )
    fullName: )
  commentId: M:System.ServiceModel.ICommunicationObject.Close
  nameWithType: ICommunicationObject.Close()
- uid: System.ServiceModel.ICommunicationObject.Close(System.TimeSpan)
  parent: System.ServiceModel.ICommunicationObject
  isExternal: true
  name: Close(TimeSpan)
  fullName: System.ServiceModel.ICommunicationObject.Close(System.TimeSpan)
  spec.csharp:
  - uid: System.ServiceModel.ICommunicationObject.Close(System.TimeSpan)
    name: Close
    fullName: System.ServiceModel.ICommunicationObject.Close
  - name: (
    fullName: (
  - uid: System.TimeSpan
    name: TimeSpan
    fullName: System.TimeSpan
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.ServiceModel.ICommunicationObject.Close(System.TimeSpan)
    name: Close
    fullName: System.ServiceModel.ICommunicationObject.Close
  - name: (
    fullName: (
  - uid: System.TimeSpan
    name: TimeSpan
    fullName: System.TimeSpan
    isExternal: true
  - name: )
    fullName: )
  commentId: M:System.ServiceModel.ICommunicationObject.Close(System.TimeSpan)
  nameWithType: ICommunicationObject.Close(TimeSpan)
- uid: System.ServiceModel.ICommunicationObject.EndClose(System.IAsyncResult)
  parent: System.ServiceModel.ICommunicationObject
  isExternal: true
  name: EndClose(IAsyncResult)
  fullName: System.ServiceModel.ICommunicationObject.EndClose(System.IAsyncResult)
  spec.csharp:
  - uid: System.ServiceModel.ICommunicationObject.EndClose(System.IAsyncResult)
    name: EndClose
    fullName: System.ServiceModel.ICommunicationObject.EndClose
  - name: (
    fullName: (
  - uid: System.IAsyncResult
    name: IAsyncResult
    fullName: System.IAsyncResult
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.ServiceModel.ICommunicationObject.EndClose(System.IAsyncResult)
    name: EndClose
    fullName: System.ServiceModel.ICommunicationObject.EndClose
  - name: (
    fullName: (
  - uid: System.IAsyncResult
    name: IAsyncResult
    fullName: System.IAsyncResult
    isExternal: true
  - name: )
    fullName: )
  commentId: M:System.ServiceModel.ICommunicationObject.EndClose(System.IAsyncResult)
  nameWithType: ICommunicationObject.EndClose(IAsyncResult)
- uid: System.ServiceModel.ICommunicationObject.EndOpen(System.IAsyncResult)
  parent: System.ServiceModel.ICommunicationObject
  isExternal: true
  name: EndOpen(IAsyncResult)
  fullName: System.ServiceModel.ICommunicationObject.EndOpen(System.IAsyncResult)
  spec.csharp:
  - uid: System.ServiceModel.ICommunicationObject.EndOpen(System.IAsyncResult)
    name: EndOpen
    fullName: System.ServiceModel.ICommunicationObject.EndOpen
  - name: (
    fullName: (
  - uid: System.IAsyncResult
    name: IAsyncResult
    fullName: System.IAsyncResult
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.ServiceModel.ICommunicationObject.EndOpen(System.IAsyncResult)
    name: EndOpen
    fullName: System.ServiceModel.ICommunicationObject.EndOpen
  - name: (
    fullName: (
  - uid: System.IAsyncResult
    name: IAsyncResult
    fullName: System.IAsyncResult
    isExternal: true
  - name: )
    fullName: )
  commentId: M:System.ServiceModel.ICommunicationObject.EndOpen(System.IAsyncResult)
  nameWithType: ICommunicationObject.EndOpen(IAsyncResult)
- uid: System.ServiceModel.ICommunicationObject.Open
  parent: System.ServiceModel.ICommunicationObject
  isExternal: false
  name: Open()
  fullName: System.ServiceModel.ICommunicationObject.Open()
  spec.csharp:
  - uid: System.ServiceModel.ICommunicationObject.Open
    name: Open
    fullName: System.ServiceModel.ICommunicationObject.Open
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.ServiceModel.ICommunicationObject.Open
    name: Open
    fullName: System.ServiceModel.ICommunicationObject.Open
  - name: (
    fullName: (
  - name: )
    fullName: )
  commentId: M:System.ServiceModel.ICommunicationObject.Open
  nameWithType: ICommunicationObject.Open()
- uid: System.ServiceModel.ICommunicationObject.Open(System.TimeSpan)
  parent: System.ServiceModel.ICommunicationObject
  isExternal: true
  name: Open(TimeSpan)
  fullName: System.ServiceModel.ICommunicationObject.Open(System.TimeSpan)
  spec.csharp:
  - uid: System.ServiceModel.ICommunicationObject.Open(System.TimeSpan)
    name: Open
    fullName: System.ServiceModel.ICommunicationObject.Open
  - name: (
    fullName: (
  - uid: System.TimeSpan
    name: TimeSpan
    fullName: System.TimeSpan
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.ServiceModel.ICommunicationObject.Open(System.TimeSpan)
    name: Open
    fullName: System.ServiceModel.ICommunicationObject.Open
  - name: (
    fullName: (
  - uid: System.TimeSpan
    name: TimeSpan
    fullName: System.TimeSpan
    isExternal: true
  - name: )
    fullName: )
  commentId: M:System.ServiceModel.ICommunicationObject.Open(System.TimeSpan)
  nameWithType: ICommunicationObject.Open(TimeSpan)
- uid: System.InvalidOperationException
  parent: System
  isExternal: false
  name: InvalidOperationException
  fullName: System.InvalidOperationException
  nameWithType: InvalidOperationException
  commentId: T:System.InvalidOperationException
- uid: System.ArgumentNullException
  isExternal: false
  name: ArgumentNullException
  fullName: System.ArgumentNullException
  nameWithType: ArgumentNullException
  commentId: T:System.ArgumentNullException
