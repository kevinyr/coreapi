items:
- uid: System.Security.Cryptography.Xml.X509IssuerSerial
  commentId: T:System.Security.Cryptography.Xml.X509IssuerSerial
  id: X509IssuerSerial
  parent: System.Security.Cryptography.Xml
  children:
  - System.Security.Cryptography.Xml.X509IssuerSerial.IssuerName
  - System.Security.Cryptography.Xml.X509IssuerSerial.SerialNumber
  langs:
  - csharp
  - vb
  name: X509IssuerSerial
  fullName: System.Security.Cryptography.Xml.X509IssuerSerial
  type: Struct
  source:
    remote:
      path: src/System.Security.Cryptography.Pkcs/ref/System.Security.Cryptography.Pkcs.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: X509IssuerSerial
    path: src/System.Security.Cryptography.Pkcs/ref/System.Security.Cryptography.Pkcs.cs
    startLine: 244
  assemblies:
  - System.Security.Cryptography.Pkcs
  namespace: System.Security.Cryptography.Xml
  summary: "\n<p>Represents the <<strong>X509IssuerSerial</strong>> element of an XML digital signature.</p>\n"
  syntax:
    content: >-
      [StructLayout(LayoutKind.Sequential)]

      public struct X509IssuerSerial
    content.vb: >-
      <StructLayout(LayoutKind.Sequential)>

      Public Structure X509IssuerSerial
  inheritedMembers:
  - System.ValueType.Equals(System.Object)
  - System.ValueType.GetHashCode
  - System.ValueType.ToString
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetType
  attributes:
  - type: System.Runtime.InteropServices.StructLayoutAttribute
    ctor: System.Runtime.InteropServices.StructLayoutAttribute.#ctor(System.Runtime.InteropServices.LayoutKind)
    arguments:
    - type: System.Runtime.InteropServices.LayoutKind
      value: 0
  modifiers.csharp:
  - public
  - struct
  modifiers.vb:
  - Public
  - Structure
  nameWithType: X509IssuerSerial
- uid: System.Security.Cryptography.Xml.X509IssuerSerial.IssuerName
  commentId: P:System.Security.Cryptography.Xml.X509IssuerSerial.IssuerName
  id: IssuerName
  parent: System.Security.Cryptography.Xml.X509IssuerSerial
  langs:
  - csharp
  - vb
  name: IssuerName
  fullName: System.Security.Cryptography.Xml.X509IssuerSerial.IssuerName
  type: Property
  source:
    remote:
      path: src/System.Security.Cryptography.Pkcs/ref/System.Security.Cryptography.Pkcs.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: IssuerName
    path: src/System.Security.Cryptography.Pkcs/ref/System.Security.Cryptography.Pkcs.cs
    startLine: 247
  assemblies:
  - System.Security.Cryptography.Pkcs
  namespace: System.Security.Cryptography.Xml
  summary: "\n<p>Gets or sets an X.509 certificate issuer's distinguished name.</p>\n"
  syntax:
    content: >-
      public string IssuerName

      {
          [CompilerGenerated]
          get;
          [CompilerGenerated]
          set;
      }
    content.vb: Public Property IssuerName As String
    parameters: []
    return:
      type: System.String
      description: "\n<p>An X.509 certificate issuer's distinguished name.</p>\n"
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
  nameWithType: X509IssuerSerial.IssuerName
- uid: System.Security.Cryptography.Xml.X509IssuerSerial.SerialNumber
  commentId: P:System.Security.Cryptography.Xml.X509IssuerSerial.SerialNumber
  id: SerialNumber
  parent: System.Security.Cryptography.Xml.X509IssuerSerial
  langs:
  - csharp
  - vb
  name: SerialNumber
  fullName: System.Security.Cryptography.Xml.X509IssuerSerial.SerialNumber
  type: Property
  source:
    remote:
      path: src/System.Security.Cryptography.Pkcs/ref/System.Security.Cryptography.Pkcs.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: SerialNumber
    path: src/System.Security.Cryptography.Pkcs/ref/System.Security.Cryptography.Pkcs.cs
    startLine: 248
  assemblies:
  - System.Security.Cryptography.Pkcs
  namespace: System.Security.Cryptography.Xml
  summary: "\n<p>Gets or sets an X.509 certificate issuer's serial number.</p>\n"
  syntax:
    content: >-
      public string SerialNumber

      {
          [CompilerGenerated]
          get;
          [CompilerGenerated]
          set;
      }
    content.vb: Public Property SerialNumber As String
    parameters: []
    return:
      type: System.String
      description: "\n<p>An X.509 certificate issuer's serial number.</p>\n"
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
  nameWithType: X509IssuerSerial.SerialNumber
references:
- uid: System.Security.Cryptography.Xml
  isExternal: false
  name: System.Security.Cryptography.Xml
  fullName: System.Security.Cryptography.Xml
  commentId: N:System.Security.Cryptography.Xml
  nameWithType: System.Security.Cryptography.Xml
- uid: System.ValueType.Equals(System.Object)
  parent: System.ValueType
  isExternal: true
  name: Equals(Object)
  fullName: System.ValueType.Equals(System.Object)
  spec.csharp:
  - uid: System.ValueType.Equals(System.Object)
    name: Equals
    fullName: System.ValueType.Equals
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.ValueType.Equals(System.Object)
    name: Equals
    fullName: System.ValueType.Equals
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
  commentId: M:System.ValueType.Equals(System.Object)
  nameWithType: ValueType.Equals(Object)
- uid: System.ValueType.GetHashCode
  parent: System.ValueType
  isExternal: false
  name: GetHashCode()
  fullName: System.ValueType.GetHashCode()
  spec.csharp:
  - uid: System.ValueType.GetHashCode
    name: GetHashCode
    fullName: System.ValueType.GetHashCode
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.ValueType.GetHashCode
    name: GetHashCode
    fullName: System.ValueType.GetHashCode
  - name: (
    fullName: (
  - name: )
    fullName: )
  commentId: M:System.ValueType.GetHashCode
  nameWithType: ValueType.GetHashCode()
- uid: System.ValueType.ToString
  parent: System.ValueType
  isExternal: false
  name: ToString()
  fullName: System.ValueType.ToString()
  spec.csharp:
  - uid: System.ValueType.ToString
    name: ToString
    fullName: System.ValueType.ToString
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.ValueType.ToString
    name: ToString
    fullName: System.ValueType.ToString
  - name: (
    fullName: (
  - name: )
    fullName: )
  commentId: M:System.ValueType.ToString
  nameWithType: ValueType.ToString()
- uid: System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
  commentId: M:System.Object.Equals(System.Object,System.Object)
  nameWithType: Object.Equals(Object, Object)
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
- uid: System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  commentId: M:System.Object.GetType
  nameWithType: Object.GetType()
- uid: System.ValueType
  parent: System
  isExternal: false
  name: ValueType
  fullName: System.ValueType
  commentId: T:System.ValueType
  nameWithType: ValueType
- uid: System.Object
  parent: System
  isExternal: false
  name: Object
  fullName: System.Object
  commentId: T:System.Object
  nameWithType: Object
- uid: System
  isExternal: false
  name: System
  fullName: System
  commentId: N:System
  nameWithType: System
- uid: System.String
  parent: System
  isExternal: false
  name: String
  fullName: System.String
  commentId: T:System.String
  nameWithType: String
