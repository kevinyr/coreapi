### YamlMime:ManagedReference
items:
- uid: System.ComponentModel.EnumConverter
  commentId: T:System.ComponentModel.EnumConverter
  id: EnumConverter
  parent: System.ComponentModel
  children:
  - System.ComponentModel.EnumConverter.#ctor(System.Type)
  - System.ComponentModel.EnumConverter.CanConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Type)
  - System.ComponentModel.EnumConverter.CanConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Type)
  - System.ComponentModel.EnumConverter.Comparer
  - System.ComponentModel.EnumConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)
  - System.ComponentModel.EnumConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)
  - System.ComponentModel.EnumConverter.EnumType
  - System.ComponentModel.EnumConverter.GetStandardValues(System.ComponentModel.ITypeDescriptorContext)
  - System.ComponentModel.EnumConverter.GetStandardValuesExclusive(System.ComponentModel.ITypeDescriptorContext)
  - System.ComponentModel.EnumConverter.GetStandardValuesSupported(System.ComponentModel.ITypeDescriptorContext)
  - System.ComponentModel.EnumConverter.IsValid(System.ComponentModel.ITypeDescriptorContext,System.Object)
  - System.ComponentModel.EnumConverter.Values
  langs:
  - csharp
  - vb
  name: EnumConverter
  nameWithType: EnumConverter
  fullName: System.ComponentModel.EnumConverter
  type: Class
  source:
    remote:
      path: src/System.ComponentModel.TypeConverter/src/System/ComponentModel/EnumConverter.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: EnumConverter
    path: src/System.ComponentModel.TypeConverter/src/System/ComponentModel/EnumConverter.cs
    startLine: 16
  assemblies:
  - System.ComponentModel.TypeConverter
  namespace: System.ComponentModel
  summary: "\n<p>Provides a type converter to convert <xref href=\"System.Enum\" data-throw-if-not-resolved=\"false\"></xref> objects to and from various other representations.</p>\n"
  syntax:
    content: 'public class EnumConverter : TypeConverter'
    content.vb: >-
      Public Class EnumConverter
          Inherits TypeConverter
  inheritance:
  - System.Object
  - System.ComponentModel.TypeConverter
  inheritedMembers:
  - System.ComponentModel.TypeConverter.CanConvertFrom(System.Type)
  - System.ComponentModel.TypeConverter.CanConvertTo(System.Type)
  - System.ComponentModel.TypeConverter.ConvertFrom(System.Object)
  - System.ComponentModel.TypeConverter.ConvertFromInvariantString(System.ComponentModel.ITypeDescriptorContext,System.String)
  - System.ComponentModel.TypeConverter.ConvertFromInvariantString(System.String)
  - System.ComponentModel.TypeConverter.ConvertFromString(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.String)
  - System.ComponentModel.TypeConverter.ConvertFromString(System.ComponentModel.ITypeDescriptorContext,System.String)
  - System.ComponentModel.TypeConverter.ConvertFromString(System.String)
  - System.ComponentModel.TypeConverter.ConvertTo(System.Object,System.Type)
  - System.ComponentModel.TypeConverter.ConvertToInvariantString(System.ComponentModel.ITypeDescriptorContext,System.Object)
  - System.ComponentModel.TypeConverter.ConvertToInvariantString(System.Object)
  - System.ComponentModel.TypeConverter.ConvertToString(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)
  - System.ComponentModel.TypeConverter.ConvertToString(System.ComponentModel.ITypeDescriptorContext,System.Object)
  - System.ComponentModel.TypeConverter.ConvertToString(System.Object)
  - System.ComponentModel.TypeConverter.CreateInstance(System.Collections.IDictionary)
  - System.ComponentModel.TypeConverter.CreateInstance(System.ComponentModel.ITypeDescriptorContext,System.Collections.IDictionary)
  - System.ComponentModel.TypeConverter.GetConvertFromException(System.Object)
  - System.ComponentModel.TypeConverter.GetConvertToException(System.Object,System.Type)
  - System.ComponentModel.TypeConverter.GetCreateInstanceSupported
  - System.ComponentModel.TypeConverter.GetCreateInstanceSupported(System.ComponentModel.ITypeDescriptorContext)
  - System.ComponentModel.TypeConverter.GetProperties(System.ComponentModel.ITypeDescriptorContext,System.Object)
  - System.ComponentModel.TypeConverter.GetProperties(System.ComponentModel.ITypeDescriptorContext,System.Object,System.Attribute[])
  - System.ComponentModel.TypeConverter.GetProperties(System.Object)
  - System.ComponentModel.TypeConverter.GetPropertiesSupported
  - System.ComponentModel.TypeConverter.GetPropertiesSupported(System.ComponentModel.ITypeDescriptorContext)
  - System.ComponentModel.TypeConverter.GetStandardValues
  - System.ComponentModel.TypeConverter.GetStandardValuesExclusive
  - System.ComponentModel.TypeConverter.GetStandardValuesSupported
  - System.ComponentModel.TypeConverter.IsValid(System.Object)
  - System.ComponentModel.TypeConverter.SortProperties(System.ComponentModel.PropertyDescriptorCollection,System.String[])
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: System.ComponentModel.EnumConverter.#ctor(System.Type)
  commentId: M:System.ComponentModel.EnumConverter.#ctor(System.Type)
  id: '#ctor(System.Type)'
  parent: System.ComponentModel.EnumConverter
  langs:
  - csharp
  - vb
  name: EnumConverter(Type)
  nameWithType: EnumConverter.EnumConverter(Type)
  fullName: System.ComponentModel.EnumConverter.EnumConverter(System.Type)
  type: Constructor
  source:
    remote:
      path: src/System.ComponentModel.TypeConverter/src/System/ComponentModel/EnumConverter.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: .ctor
    path: src/System.ComponentModel.TypeConverter/src/System/ComponentModel/EnumConverter.cs
    startLine: 42
  assemblies:
  - System.ComponentModel.TypeConverter
  namespace: System.ComponentModel
  summary: "\n<p>Initializes a new instance of the <xref href=\"System.ComponentModel.EnumConverter\" data-throw-if-not-resolved=\"false\"></xref> class for the given type.</p>\n"
  syntax:
    content: public EnumConverter(Type type)
    content.vb: Public Sub New(type As Type)
    parameters:
    - id: type
      type: System.Type
      description: "\n<p>A <xref href=\"System.Type\" data-throw-if-not-resolved=\"false\"></xref> that represents the type of enumeration to associate with this enumeration converter. </p>\n"
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: System.ComponentModel.EnumConverter.EnumType
  commentId: P:System.ComponentModel.EnumConverter.EnumType
  id: EnumType
  parent: System.ComponentModel.EnumConverter
  langs:
  - csharp
  - vb
  name: EnumType
  nameWithType: EnumConverter.EnumType
  fullName: System.ComponentModel.EnumConverter.EnumType
  type: Property
  source:
    remote:
      path: src/System.ComponentModel.TypeConverter/src/System/ComponentModel/EnumConverter.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: EnumType
    path: src/System.ComponentModel.TypeConverter/src/System/ComponentModel/EnumConverter.cs
    startLine: 50
  assemblies:
  - System.ComponentModel.TypeConverter
  namespace: System.ComponentModel
  summary: "\n<p>Specifies the type of the enumerator this converter is associated with.</p>\n"
  syntax:
    content: protected Type EnumType { get; }
    content.vb: Protected ReadOnly Property EnumType As Type
    parameters: []
    return:
      type: System.Type
      description: "\n<p>The type of the enumerator this converter is associated with.</p>\n"
  modifiers.csharp:
  - protected
  - get
  modifiers.vb:
  - Protected
  - ReadOnly
- uid: System.ComponentModel.EnumConverter.Comparer
  commentId: P:System.ComponentModel.EnumConverter.Comparer
  id: Comparer
  parent: System.ComponentModel.EnumConverter
  langs:
  - csharp
  - vb
  name: Comparer
  nameWithType: EnumConverter.Comparer
  fullName: System.ComponentModel.EnumConverter.Comparer
  type: Property
  source:
    remote:
      path: src/System.ComponentModel.TypeConverter/src/System/ComponentModel/EnumConverter.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: Comparer
    path: src/System.ComponentModel.TypeConverter/src/System/ComponentModel/EnumConverter.cs
    startLine: 108
  assemblies:
  - System.ComponentModel.TypeConverter
  namespace: System.ComponentModel
  summary: "\n<p>Gets an <xref href=\"System.Collections.IComparer\" data-throw-if-not-resolved=\"false\"></xref> that can be used to sort the values of the enumeration.</p>\n"
  syntax:
    content: protected virtual IComparer Comparer { get; }
    content.vb: Protected Overridable ReadOnly Property Comparer As IComparer
    parameters: []
    return:
      type: System.Collections.IComparer
      description: "\n<p>An <xref href=\"System.Collections.IComparer\" data-throw-if-not-resolved=\"false\"></xref> for sorting the enumeration values.</p>\n"
  modifiers.csharp:
  - protected
  - virtual
  - get
  modifiers.vb:
  - Protected
  - Overridable
  - ReadOnly
- uid: System.ComponentModel.EnumConverter.CanConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Type)
  commentId: M:System.ComponentModel.EnumConverter.CanConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Type)
  id: CanConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Type)
  parent: System.ComponentModel.EnumConverter
  langs:
  - csharp
  - vb
  name: CanConvertFrom(ITypeDescriptorContext, Type)
  nameWithType: EnumConverter.CanConvertFrom(ITypeDescriptorContext, Type)
  fullName: System.ComponentModel.EnumConverter.CanConvertFrom(System.ComponentModel.ITypeDescriptorContext, System.Type)
  type: Method
  source:
    remote:
      path: src/System.ComponentModel.TypeConverter/src/System/ComponentModel/EnumConverter.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: CanConvertFrom
    path: src/System.ComponentModel.TypeConverter/src/System/ComponentModel/EnumConverter.cs
    startLine: 79
  assemblies:
  - System.ComponentModel.TypeConverter
  namespace: System.ComponentModel
  summary: "\n<p>Gets a value indicating whether this converter can convert an object in the given source type to an enumeration object using the specified context.</p>\n"
  syntax:
    content: public override bool CanConvertFrom(ITypeDescriptorContext context, Type sourceType)
    content.vb: Public Overrides Function CanConvertFrom(context As ITypeDescriptorContext, sourceType As Type) As Boolean
    parameters:
    - id: context
      type: System.ComponentModel.ITypeDescriptorContext
      description: "\n<p>An <xref href=\"System.ComponentModel.ITypeDescriptorContext\" data-throw-if-not-resolved=\"false\"></xref> that provides a format context. </p>\n"
    - id: sourceType
      type: System.Type
      description: "\n<p>A <xref href=\"System.Type\" data-throw-if-not-resolved=\"false\"></xref> that represents the type you wish to convert from. </p>\n"
    return:
      type: System.Boolean
      description: "\n<p>\n<strong>true</strong> if this converter can perform the conversion; otherwise, <strong>false</strong>.</p>\n"
  overridden: System.ComponentModel.TypeConverter.CanConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Type)
  seealso:
  - linkId: System.ComponentModel.TypeConverter
    commentId: T:System.ComponentModel.TypeConverter
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
- uid: System.ComponentModel.EnumConverter.CanConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Type)
  commentId: M:System.ComponentModel.EnumConverter.CanConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Type)
  id: CanConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Type)
  parent: System.ComponentModel.EnumConverter
  langs:
  - csharp
  - vb
  name: CanConvertTo(ITypeDescriptorContext, Type)
  nameWithType: EnumConverter.CanConvertTo(ITypeDescriptorContext, Type)
  fullName: System.ComponentModel.EnumConverter.CanConvertTo(System.ComponentModel.ITypeDescriptorContext, System.Type)
  type: Method
  source:
    remote:
      path: src/System.ComponentModel.TypeConverter/src/System/ComponentModel/EnumConverter.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: CanConvertTo
    path: src/System.ComponentModel.TypeConverter/src/System/ComponentModel/EnumConverter.cs
    startLine: 92
  assemblies:
  - System.ComponentModel.TypeConverter
  namespace: System.ComponentModel
  summary: "\n<p>Gets a value indicating whether this converter can convert an object to the given destination type using the context.</p>\n"
  syntax:
    content: public override bool CanConvertTo(ITypeDescriptorContext context, Type destinationType)
    content.vb: Public Overrides Function CanConvertTo(context As ITypeDescriptorContext, destinationType As Type) As Boolean
    parameters:
    - id: context
      type: System.ComponentModel.ITypeDescriptorContext
      description: "\n<p>An <xref href=\"System.ComponentModel.ITypeDescriptorContext\" data-throw-if-not-resolved=\"false\"></xref> that provides a format context. </p>\n"
    - id: destinationType
      type: System.Type
      description: "\n<p>A <xref href=\"System.Type\" data-throw-if-not-resolved=\"false\"></xref> that represents the type you wish to convert to. </p>\n"
    return:
      type: System.Boolean
      description: "\n<p>\n<strong>true</strong> if this converter can perform the conversion; otherwise, <strong>false</strong>.</p>\n"
  overridden: System.ComponentModel.TypeConverter.CanConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Type)
  seealso:
  - linkId: System.ComponentModel.ITypeDescriptorContext
    commentId: T:System.ComponentModel.ITypeDescriptorContext
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
- uid: System.ComponentModel.EnumConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)
  commentId: M:System.ComponentModel.EnumConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)
  id: ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)
  parent: System.ComponentModel.EnumConverter
  langs:
  - csharp
  - vb
  name: ConvertFrom(ITypeDescriptorContext, CultureInfo, Object)
  nameWithType: EnumConverter.ConvertFrom(ITypeDescriptorContext, CultureInfo, Object)
  fullName: System.ComponentModel.EnumConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext, System.Globalization.CultureInfo, System.Object)
  type: Method
  source:
    remote:
      path: src/System.ComponentModel.TypeConverter/src/System/ComponentModel/EnumConverter.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: ConvertFrom
    path: src/System.ComponentModel.TypeConverter/src/System/ComponentModel/EnumConverter.cs
    startLine: 121
  assemblies:
  - System.ComponentModel.TypeConverter
  namespace: System.ComponentModel
  summary: "\n<p>Converts the specified value object to an enumeration object.</p>\n"
  syntax:
    content: public override object ConvertFrom(ITypeDescriptorContext context, CultureInfo culture, object value)
    content.vb: Public Overrides Function ConvertFrom(context As ITypeDescriptorContext, culture As CultureInfo, value As Object) As Object
    parameters:
    - id: context
      type: System.ComponentModel.ITypeDescriptorContext
      description: "\n<p>An <xref href=\"System.ComponentModel.ITypeDescriptorContext\" data-throw-if-not-resolved=\"false\"></xref> that provides a format context. </p>\n"
    - id: culture
      type: System.Globalization.CultureInfo
      description: "\n<p>An optional <xref href=\"System.Globalization.CultureInfo\" data-throw-if-not-resolved=\"false\"></xref>. If not supplied, the current culture is assumed. </p>\n"
    - id: value
      type: System.Object
      description: "\n<p>The <xref href=\"System.Object\" data-throw-if-not-resolved=\"false\"></xref> to convert. </p>\n"
    return:
      type: System.Object
      description: "\n<p>An <xref href=\"System.Object\" data-throw-if-not-resolved=\"false\"></xref> that represents the converted <em>value</em>.</p>\n"
  overridden: System.ComponentModel.TypeConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)
  exceptions:
  - type: System.FormatException
    commentId: T:System.FormatException
    description: "\n<p>\n<em>value</em> is not a valid value for the target type. </p>\n"
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "\n<p>The conversion cannot be performed. </p>\n"
  seealso:
  - linkId: System.ComponentModel.TypeConverter
    commentId: T:System.ComponentModel.TypeConverter
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
- uid: System.ComponentModel.EnumConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)
  commentId: M:System.ComponentModel.EnumConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)
  id: ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)
  parent: System.ComponentModel.EnumConverter
  langs:
  - csharp
  - vb
  name: ConvertTo(ITypeDescriptorContext, CultureInfo, Object, Type)
  nameWithType: EnumConverter.ConvertTo(ITypeDescriptorContext, CultureInfo, Object, Type)
  fullName: System.ComponentModel.EnumConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext, System.Globalization.CultureInfo, System.Object, System.Type)
  type: Method
  source:
    remote:
      path: src/System.ComponentModel.TypeConverter/src/System/ComponentModel/EnumConverter.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: ConvertTo
    path: src/System.ComponentModel.TypeConverter/src/System/ComponentModel/EnumConverter.cs
    startLine: 166
  assemblies:
  - System.ComponentModel.TypeConverter
  namespace: System.ComponentModel
  summary: "\n<p>Converts the given value object to the specified destination type.</p>\n"
  syntax:
    content: public override object ConvertTo(ITypeDescriptorContext context, CultureInfo culture, object value, Type destinationType)
    content.vb: Public Overrides Function ConvertTo(context As ITypeDescriptorContext, culture As CultureInfo, value As Object, destinationType As Type) As Object
    parameters:
    - id: context
      type: System.ComponentModel.ITypeDescriptorContext
      description: "\n<p>An <xref href=\"System.ComponentModel.ITypeDescriptorContext\" data-throw-if-not-resolved=\"false\"></xref> that provides a format context. </p>\n"
    - id: culture
      type: System.Globalization.CultureInfo
      description: "\n<p>An optional <xref href=\"System.Globalization.CultureInfo\" data-throw-if-not-resolved=\"false\"></xref>. If not supplied, the current culture is assumed. </p>\n"
    - id: value
      type: System.Object
      description: "\n<p>The <xref href=\"System.Object\" data-throw-if-not-resolved=\"false\"></xref> to convert. </p>\n"
    - id: destinationType
      type: System.Type
      description: "\n<p>The <xref href=\"System.Type\" data-throw-if-not-resolved=\"false\"></xref> to convert the value to. </p>\n"
    return:
      type: System.Object
      description: "\n<p>An <xref href=\"System.Object\" data-throw-if-not-resolved=\"false\"></xref> that represents the converted <em>value</em>.</p>\n"
  overridden: System.ComponentModel.TypeConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "\n<p>\n<em>destinationType</em> is <strong>null</strong>. </p>\n"
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "\n<p>\n<em>value</em> is not a valid value for the enumeration. </p>\n"
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "\n<p>The conversion cannot be performed. </p>\n"
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
- uid: System.ComponentModel.EnumConverter.GetStandardValues(System.ComponentModel.ITypeDescriptorContext)
  commentId: M:System.ComponentModel.EnumConverter.GetStandardValues(System.ComponentModel.ITypeDescriptorContext)
  id: GetStandardValues(System.ComponentModel.ITypeDescriptorContext)
  parent: System.ComponentModel.EnumConverter
  langs:
  - csharp
  - vb
  name: GetStandardValues(ITypeDescriptorContext)
  nameWithType: EnumConverter.GetStandardValues(ITypeDescriptorContext)
  fullName: System.ComponentModel.EnumConverter.GetStandardValues(System.ComponentModel.ITypeDescriptorContext)
  type: Method
  source:
    remote:
      path: src/System.ComponentModel.TypeConverter/src/System/ComponentModel/EnumConverter.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: GetStandardValues
    path: src/System.ComponentModel.TypeConverter/src/System/ComponentModel/EnumConverter.cs
    startLine: 243
  assemblies:
  - System.ComponentModel.TypeConverter
  namespace: System.ComponentModel
  summary: "\n<p>Gets a collection of standard values for the data type this validator is designed for.</p>\n"
  syntax:
    content: public override TypeConverter.StandardValuesCollection GetStandardValues(ITypeDescriptorContext context)
    content.vb: Public Overrides Function GetStandardValues(context As ITypeDescriptorContext) As TypeConverter.StandardValuesCollection
    parameters:
    - id: context
      type: System.ComponentModel.ITypeDescriptorContext
      description: "\n<p>An <xref href=\"System.ComponentModel.ITypeDescriptorContext\" data-throw-if-not-resolved=\"false\"></xref> that provides a format context. </p>\n"
    return:
      type: System.ComponentModel.TypeConverter.StandardValuesCollection
      description: "\n<p>A <xref href=\"System.ComponentModel.TypeConverter.StandardValuesCollection\" data-throw-if-not-resolved=\"false\"></xref> that holds a standard set of valid values, or <strong>null</strong> if the data type does not support a standard set of values.</p>\n"
  overridden: System.ComponentModel.TypeConverter.GetStandardValues(System.ComponentModel.ITypeDescriptorContext)
  seealso:
  - linkId: System.ComponentModel.ITypeDescriptorContext
    commentId: T:System.ComponentModel.ITypeDescriptorContext
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
- uid: System.ComponentModel.EnumConverter.GetStandardValuesExclusive(System.ComponentModel.ITypeDescriptorContext)
  commentId: M:System.ComponentModel.EnumConverter.GetStandardValuesExclusive(System.ComponentModel.ITypeDescriptorContext)
  id: GetStandardValuesExclusive(System.ComponentModel.ITypeDescriptorContext)
  parent: System.ComponentModel.EnumConverter
  langs:
  - csharp
  - vb
  name: GetStandardValuesExclusive(ITypeDescriptorContext)
  nameWithType: EnumConverter.GetStandardValuesExclusive(ITypeDescriptorContext)
  fullName: System.ComponentModel.EnumConverter.GetStandardValuesExclusive(System.ComponentModel.ITypeDescriptorContext)
  type: Method
  source:
    remote:
      path: src/System.ComponentModel.TypeConverter/src/System/ComponentModel/EnumConverter.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: GetStandardValuesExclusive
    path: src/System.ComponentModel.TypeConverter/src/System/ComponentModel/EnumConverter.cs
    startLine: 317
  assemblies:
  - System.ComponentModel.TypeConverter
  namespace: System.ComponentModel
  summary: "\n<p>Gets a value indicating whether the list of standard values returned from <xref href=\"System.ComponentModel.TypeConverter.GetStandardValues\" data-throw-if-not-resolved=\"false\"></xref> is an exclusive list using the specified context.</p>\n"
  syntax:
    content: public override bool GetStandardValuesExclusive(ITypeDescriptorContext context)
    content.vb: Public Overrides Function GetStandardValuesExclusive(context As ITypeDescriptorContext) As Boolean
    parameters:
    - id: context
      type: System.ComponentModel.ITypeDescriptorContext
      description: "\n<p>An <xref href=\"System.ComponentModel.ITypeDescriptorContext\" data-throw-if-not-resolved=\"false\"></xref> that provides a format context. </p>\n"
    return:
      type: System.Boolean
      description: "\n<p>\n<strong>true</strong> if the <xref href=\"System.ComponentModel.TypeConverter.StandardValuesCollection\" data-throw-if-not-resolved=\"false\"></xref> returned from <xref href=\"System.ComponentModel.TypeConverter.GetStandardValues\" data-throw-if-not-resolved=\"false\"></xref> is an exhaustive list of possible values; <strong>false</strong> if other values are possible.</p>\n"
  overridden: System.ComponentModel.TypeConverter.GetStandardValuesExclusive(System.ComponentModel.ITypeDescriptorContext)
  seealso:
  - linkId: System.ComponentModel.ITypeDescriptorContext
    commentId: T:System.ComponentModel.ITypeDescriptorContext
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
- uid: System.ComponentModel.EnumConverter.GetStandardValuesSupported(System.ComponentModel.ITypeDescriptorContext)
  commentId: M:System.ComponentModel.EnumConverter.GetStandardValuesSupported(System.ComponentModel.ITypeDescriptorContext)
  id: GetStandardValuesSupported(System.ComponentModel.ITypeDescriptorContext)
  parent: System.ComponentModel.EnumConverter
  langs:
  - csharp
  - vb
  name: GetStandardValuesSupported(ITypeDescriptorContext)
  nameWithType: EnumConverter.GetStandardValuesSupported(ITypeDescriptorContext)
  fullName: System.ComponentModel.EnumConverter.GetStandardValuesSupported(System.ComponentModel.ITypeDescriptorContext)
  type: Method
  source:
    remote:
      path: src/System.ComponentModel.TypeConverter/src/System/ComponentModel/EnumConverter.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: GetStandardValuesSupported
    path: src/System.ComponentModel.TypeConverter/src/System/ComponentModel/EnumConverter.cs
    startLine: 329
  assemblies:
  - System.ComponentModel.TypeConverter
  namespace: System.ComponentModel
  summary: "\n<p>Gets a value indicating whether this object supports a standard set of values that can be picked from a list using the specified context.</p>\n"
  syntax:
    content: public override bool GetStandardValuesSupported(ITypeDescriptorContext context)
    content.vb: Public Overrides Function GetStandardValuesSupported(context As ITypeDescriptorContext) As Boolean
    parameters:
    - id: context
      type: System.ComponentModel.ITypeDescriptorContext
      description: "\n<p>An <xref href=\"System.ComponentModel.ITypeDescriptorContext\" data-throw-if-not-resolved=\"false\"></xref> that provides a format context. </p>\n"
    return:
      type: System.Boolean
      description: "\n<p>\n<strong>true</strong> because <xref href=\"System.ComponentModel.TypeConverter.GetStandardValues\" data-throw-if-not-resolved=\"false\"></xref> should be called to find a common set of values the object supports. This method never returns <strong>false</strong>.</p>\n"
  overridden: System.ComponentModel.TypeConverter.GetStandardValuesSupported(System.ComponentModel.ITypeDescriptorContext)
  seealso:
  - linkId: System.ComponentModel.ITypeDescriptorContext
    commentId: T:System.ComponentModel.ITypeDescriptorContext
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
- uid: System.ComponentModel.EnumConverter.IsValid(System.ComponentModel.ITypeDescriptorContext,System.Object)
  commentId: M:System.ComponentModel.EnumConverter.IsValid(System.ComponentModel.ITypeDescriptorContext,System.Object)
  id: IsValid(System.ComponentModel.ITypeDescriptorContext,System.Object)
  parent: System.ComponentModel.EnumConverter
  langs:
  - csharp
  - vb
  name: IsValid(ITypeDescriptorContext, Object)
  nameWithType: EnumConverter.IsValid(ITypeDescriptorContext, Object)
  fullName: System.ComponentModel.EnumConverter.IsValid(System.ComponentModel.ITypeDescriptorContext, System.Object)
  type: Method
  source:
    remote:
      path: src/System.ComponentModel.TypeConverter/src/System/ComponentModel/EnumConverter.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: IsValid
    path: src/System.ComponentModel.TypeConverter/src/System/ComponentModel/EnumConverter.cs
    startLine: 338
  assemblies:
  - System.ComponentModel.TypeConverter
  namespace: System.ComponentModel
  summary: "\n<p>Gets a value indicating whether the given object value is valid for this type.</p>\n"
  syntax:
    content: public override bool IsValid(ITypeDescriptorContext context, object value)
    content.vb: Public Overrides Function IsValid(context As ITypeDescriptorContext, value As Object) As Boolean
    parameters:
    - id: context
      type: System.ComponentModel.ITypeDescriptorContext
      description: "\n<p>An <xref href=\"System.ComponentModel.ITypeDescriptorContext\" data-throw-if-not-resolved=\"false\"></xref> that provides a format context. </p>\n"
    - id: value
      type: System.Object
      description: "\n<p>The <xref href=\"System.Object\" data-throw-if-not-resolved=\"false\"></xref> to test. </p>\n"
    return:
      type: System.Boolean
      description: "\n<p>\n<strong>true</strong> if the specified value is valid for this object; otherwise, <strong>false</strong>.</p>\n"
  overridden: System.ComponentModel.TypeConverter.IsValid(System.ComponentModel.ITypeDescriptorContext,System.Object)
  seealso:
  - linkId: System.ComponentModel.ITypeDescriptorContext
    commentId: T:System.ComponentModel.ITypeDescriptorContext
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
- uid: System.ComponentModel.EnumConverter.Values
  commentId: P:System.ComponentModel.EnumConverter.Values
  id: Values
  parent: System.ComponentModel.EnumConverter
  langs:
  - csharp
  - vb
  name: Values
  nameWithType: EnumConverter.Values
  fullName: System.ComponentModel.EnumConverter.Values
  type: Property
  source:
    remote:
      path: src/System.ComponentModel.TypeConverter/src/System/ComponentModel/EnumConverter.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: Values
    path: src/System.ComponentModel.TypeConverter/src/System/ComponentModel/EnumConverter.cs
    startLine: 61
  assemblies:
  - System.ComponentModel.TypeConverter
  namespace: System.ComponentModel
  summary: "\n<p>Gets or sets a <xref href=\"System.ComponentModel.TypeConverter.StandardValuesCollection\" data-throw-if-not-resolved=\"false\"></xref> that specifies the possible values for the enumeration.</p>\n"
  syntax:
    content: protected TypeConverter.StandardValuesCollection Values { get; set; }
    content.vb: Protected Property Values As TypeConverter.StandardValuesCollection
    parameters: []
    return:
      type: System.ComponentModel.TypeConverter.StandardValuesCollection
      description: "\n<p>A <xref href=\"System.ComponentModel.TypeConverter.StandardValuesCollection\" data-throw-if-not-resolved=\"false\"></xref> that specifies the possible values for the enumeration.</p>\n"
  modifiers.csharp:
  - protected
  - get
  - set
  modifiers.vb:
  - Protected
references:
- uid: System.ComponentModel
  commentId: N:System.ComponentModel
  isExternal: false
  name: System.ComponentModel
  nameWithType: System.ComponentModel
  fullName: System.ComponentModel
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: false
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.ComponentModel.TypeConverter
  commentId: T:System.ComponentModel.TypeConverter
  parent: System.ComponentModel
  isExternal: false
  name: TypeConverter
  nameWithType: TypeConverter
  fullName: System.ComponentModel.TypeConverter
- uid: System.ComponentModel.TypeConverter.CanConvertFrom(System.Type)
  commentId: M:System.ComponentModel.TypeConverter.CanConvertFrom(System.Type)
  parent: System.ComponentModel.TypeConverter
  isExternal: true
  name: CanConvertFrom(Type)
  nameWithType: TypeConverter.CanConvertFrom(Type)
  fullName: System.ComponentModel.TypeConverter.CanConvertFrom(System.Type)
  spec.csharp:
  - uid: System.ComponentModel.TypeConverter.CanConvertFrom(System.Type)
    name: CanConvertFrom
    nameWithType: TypeConverter.CanConvertFrom
    fullName: System.ComponentModel.TypeConverter.CanConvertFrom
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Type
    name: Type
    nameWithType: Type
    fullName: System.Type
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.ComponentModel.TypeConverter.CanConvertFrom(System.Type)
    name: CanConvertFrom
    nameWithType: TypeConverter.CanConvertFrom
    fullName: System.ComponentModel.TypeConverter.CanConvertFrom
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Type
    name: Type
    nameWithType: Type
    fullName: System.Type
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.ComponentModel.TypeConverter.CanConvertTo(System.Type)
  commentId: M:System.ComponentModel.TypeConverter.CanConvertTo(System.Type)
  parent: System.ComponentModel.TypeConverter
  isExternal: true
  name: CanConvertTo(Type)
  nameWithType: TypeConverter.CanConvertTo(Type)
  fullName: System.ComponentModel.TypeConverter.CanConvertTo(System.Type)
  spec.csharp:
  - uid: System.ComponentModel.TypeConverter.CanConvertTo(System.Type)
    name: CanConvertTo
    nameWithType: TypeConverter.CanConvertTo
    fullName: System.ComponentModel.TypeConverter.CanConvertTo
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Type
    name: Type
    nameWithType: Type
    fullName: System.Type
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.ComponentModel.TypeConverter.CanConvertTo(System.Type)
    name: CanConvertTo
    nameWithType: TypeConverter.CanConvertTo
    fullName: System.ComponentModel.TypeConverter.CanConvertTo
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Type
    name: Type
    nameWithType: Type
    fullName: System.Type
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.ComponentModel.TypeConverter.ConvertFrom(System.Object)
  commentId: M:System.ComponentModel.TypeConverter.ConvertFrom(System.Object)
  parent: System.ComponentModel.TypeConverter
  isExternal: true
  name: ConvertFrom(Object)
  nameWithType: TypeConverter.ConvertFrom(Object)
  fullName: System.ComponentModel.TypeConverter.ConvertFrom(System.Object)
  spec.csharp:
  - uid: System.ComponentModel.TypeConverter.ConvertFrom(System.Object)
    name: ConvertFrom
    nameWithType: TypeConverter.ConvertFrom
    fullName: System.ComponentModel.TypeConverter.ConvertFrom
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.ComponentModel.TypeConverter.ConvertFrom(System.Object)
    name: ConvertFrom
    nameWithType: TypeConverter.ConvertFrom
    fullName: System.ComponentModel.TypeConverter.ConvertFrom
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.ComponentModel.TypeConverter.ConvertFromInvariantString(System.ComponentModel.ITypeDescriptorContext,System.String)
  commentId: M:System.ComponentModel.TypeConverter.ConvertFromInvariantString(System.ComponentModel.ITypeDescriptorContext,System.String)
  parent: System.ComponentModel.TypeConverter
  isExternal: true
  name: ConvertFromInvariantString(ITypeDescriptorContext, String)
  nameWithType: TypeConverter.ConvertFromInvariantString(ITypeDescriptorContext, String)
  fullName: System.ComponentModel.TypeConverter.ConvertFromInvariantString(System.ComponentModel.ITypeDescriptorContext, System.String)
  spec.csharp:
  - uid: System.ComponentModel.TypeConverter.ConvertFromInvariantString(System.ComponentModel.ITypeDescriptorContext,System.String)
    name: ConvertFromInvariantString
    nameWithType: TypeConverter.ConvertFromInvariantString
    fullName: System.ComponentModel.TypeConverter.ConvertFromInvariantString
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.ComponentModel.ITypeDescriptorContext
    name: ITypeDescriptorContext
    nameWithType: ITypeDescriptorContext
    fullName: System.ComponentModel.ITypeDescriptorContext
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.ComponentModel.TypeConverter.ConvertFromInvariantString(System.ComponentModel.ITypeDescriptorContext,System.String)
    name: ConvertFromInvariantString
    nameWithType: TypeConverter.ConvertFromInvariantString
    fullName: System.ComponentModel.TypeConverter.ConvertFromInvariantString
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.ComponentModel.ITypeDescriptorContext
    name: ITypeDescriptorContext
    nameWithType: ITypeDescriptorContext
    fullName: System.ComponentModel.ITypeDescriptorContext
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.ComponentModel.TypeConverter.ConvertFromInvariantString(System.String)
  commentId: M:System.ComponentModel.TypeConverter.ConvertFromInvariantString(System.String)
  parent: System.ComponentModel.TypeConverter
  isExternal: true
  name: ConvertFromInvariantString(String)
  nameWithType: TypeConverter.ConvertFromInvariantString(String)
  fullName: System.ComponentModel.TypeConverter.ConvertFromInvariantString(System.String)
  spec.csharp:
  - uid: System.ComponentModel.TypeConverter.ConvertFromInvariantString(System.String)
    name: ConvertFromInvariantString
    nameWithType: TypeConverter.ConvertFromInvariantString
    fullName: System.ComponentModel.TypeConverter.ConvertFromInvariantString
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.ComponentModel.TypeConverter.ConvertFromInvariantString(System.String)
    name: ConvertFromInvariantString
    nameWithType: TypeConverter.ConvertFromInvariantString
    fullName: System.ComponentModel.TypeConverter.ConvertFromInvariantString
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.ComponentModel.TypeConverter.ConvertFromString(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.String)
  commentId: M:System.ComponentModel.TypeConverter.ConvertFromString(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.String)
  parent: System.ComponentModel.TypeConverter
  isExternal: true
  name: ConvertFromString(ITypeDescriptorContext, CultureInfo, String)
  nameWithType: TypeConverter.ConvertFromString(ITypeDescriptorContext, CultureInfo, String)
  fullName: System.ComponentModel.TypeConverter.ConvertFromString(System.ComponentModel.ITypeDescriptorContext, System.Globalization.CultureInfo, System.String)
  spec.csharp:
  - uid: System.ComponentModel.TypeConverter.ConvertFromString(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.String)
    name: ConvertFromString
    nameWithType: TypeConverter.ConvertFromString
    fullName: System.ComponentModel.TypeConverter.ConvertFromString
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.ComponentModel.ITypeDescriptorContext
    name: ITypeDescriptorContext
    nameWithType: ITypeDescriptorContext
    fullName: System.ComponentModel.ITypeDescriptorContext
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Globalization.CultureInfo
    name: CultureInfo
    nameWithType: CultureInfo
    fullName: System.Globalization.CultureInfo
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.ComponentModel.TypeConverter.ConvertFromString(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.String)
    name: ConvertFromString
    nameWithType: TypeConverter.ConvertFromString
    fullName: System.ComponentModel.TypeConverter.ConvertFromString
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.ComponentModel.ITypeDescriptorContext
    name: ITypeDescriptorContext
    nameWithType: ITypeDescriptorContext
    fullName: System.ComponentModel.ITypeDescriptorContext
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Globalization.CultureInfo
    name: CultureInfo
    nameWithType: CultureInfo
    fullName: System.Globalization.CultureInfo
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.ComponentModel.TypeConverter.ConvertFromString(System.ComponentModel.ITypeDescriptorContext,System.String)
  commentId: M:System.ComponentModel.TypeConverter.ConvertFromString(System.ComponentModel.ITypeDescriptorContext,System.String)
  parent: System.ComponentModel.TypeConverter
  isExternal: true
  name: ConvertFromString(ITypeDescriptorContext, String)
  nameWithType: TypeConverter.ConvertFromString(ITypeDescriptorContext, String)
  fullName: System.ComponentModel.TypeConverter.ConvertFromString(System.ComponentModel.ITypeDescriptorContext, System.String)
  spec.csharp:
  - uid: System.ComponentModel.TypeConverter.ConvertFromString(System.ComponentModel.ITypeDescriptorContext,System.String)
    name: ConvertFromString
    nameWithType: TypeConverter.ConvertFromString
    fullName: System.ComponentModel.TypeConverter.ConvertFromString
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.ComponentModel.ITypeDescriptorContext
    name: ITypeDescriptorContext
    nameWithType: ITypeDescriptorContext
    fullName: System.ComponentModel.ITypeDescriptorContext
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.ComponentModel.TypeConverter.ConvertFromString(System.ComponentModel.ITypeDescriptorContext,System.String)
    name: ConvertFromString
    nameWithType: TypeConverter.ConvertFromString
    fullName: System.ComponentModel.TypeConverter.ConvertFromString
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.ComponentModel.ITypeDescriptorContext
    name: ITypeDescriptorContext
    nameWithType: ITypeDescriptorContext
    fullName: System.ComponentModel.ITypeDescriptorContext
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.ComponentModel.TypeConverter.ConvertFromString(System.String)
  commentId: M:System.ComponentModel.TypeConverter.ConvertFromString(System.String)
  parent: System.ComponentModel.TypeConverter
  isExternal: true
  name: ConvertFromString(String)
  nameWithType: TypeConverter.ConvertFromString(String)
  fullName: System.ComponentModel.TypeConverter.ConvertFromString(System.String)
  spec.csharp:
  - uid: System.ComponentModel.TypeConverter.ConvertFromString(System.String)
    name: ConvertFromString
    nameWithType: TypeConverter.ConvertFromString
    fullName: System.ComponentModel.TypeConverter.ConvertFromString
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.ComponentModel.TypeConverter.ConvertFromString(System.String)
    name: ConvertFromString
    nameWithType: TypeConverter.ConvertFromString
    fullName: System.ComponentModel.TypeConverter.ConvertFromString
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.ComponentModel.TypeConverter.ConvertTo(System.Object,System.Type)
  commentId: M:System.ComponentModel.TypeConverter.ConvertTo(System.Object,System.Type)
  parent: System.ComponentModel.TypeConverter
  isExternal: true
  name: ConvertTo(Object, Type)
  nameWithType: TypeConverter.ConvertTo(Object, Type)
  fullName: System.ComponentModel.TypeConverter.ConvertTo(System.Object, System.Type)
  spec.csharp:
  - uid: System.ComponentModel.TypeConverter.ConvertTo(System.Object,System.Type)
    name: ConvertTo
    nameWithType: TypeConverter.ConvertTo
    fullName: System.ComponentModel.TypeConverter.ConvertTo
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Type
    name: Type
    nameWithType: Type
    fullName: System.Type
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.ComponentModel.TypeConverter.ConvertTo(System.Object,System.Type)
    name: ConvertTo
    nameWithType: TypeConverter.ConvertTo
    fullName: System.ComponentModel.TypeConverter.ConvertTo
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Type
    name: Type
    nameWithType: Type
    fullName: System.Type
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.ComponentModel.TypeConverter.ConvertToInvariantString(System.ComponentModel.ITypeDescriptorContext,System.Object)
  commentId: M:System.ComponentModel.TypeConverter.ConvertToInvariantString(System.ComponentModel.ITypeDescriptorContext,System.Object)
  parent: System.ComponentModel.TypeConverter
  isExternal: true
  name: ConvertToInvariantString(ITypeDescriptorContext, Object)
  nameWithType: TypeConverter.ConvertToInvariantString(ITypeDescriptorContext, Object)
  fullName: System.ComponentModel.TypeConverter.ConvertToInvariantString(System.ComponentModel.ITypeDescriptorContext, System.Object)
  spec.csharp:
  - uid: System.ComponentModel.TypeConverter.ConvertToInvariantString(System.ComponentModel.ITypeDescriptorContext,System.Object)
    name: ConvertToInvariantString
    nameWithType: TypeConverter.ConvertToInvariantString
    fullName: System.ComponentModel.TypeConverter.ConvertToInvariantString
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.ComponentModel.ITypeDescriptorContext
    name: ITypeDescriptorContext
    nameWithType: ITypeDescriptorContext
    fullName: System.ComponentModel.ITypeDescriptorContext
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.ComponentModel.TypeConverter.ConvertToInvariantString(System.ComponentModel.ITypeDescriptorContext,System.Object)
    name: ConvertToInvariantString
    nameWithType: TypeConverter.ConvertToInvariantString
    fullName: System.ComponentModel.TypeConverter.ConvertToInvariantString
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.ComponentModel.ITypeDescriptorContext
    name: ITypeDescriptorContext
    nameWithType: ITypeDescriptorContext
    fullName: System.ComponentModel.ITypeDescriptorContext
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.ComponentModel.TypeConverter.ConvertToInvariantString(System.Object)
  commentId: M:System.ComponentModel.TypeConverter.ConvertToInvariantString(System.Object)
  parent: System.ComponentModel.TypeConverter
  isExternal: true
  name: ConvertToInvariantString(Object)
  nameWithType: TypeConverter.ConvertToInvariantString(Object)
  fullName: System.ComponentModel.TypeConverter.ConvertToInvariantString(System.Object)
  spec.csharp:
  - uid: System.ComponentModel.TypeConverter.ConvertToInvariantString(System.Object)
    name: ConvertToInvariantString
    nameWithType: TypeConverter.ConvertToInvariantString
    fullName: System.ComponentModel.TypeConverter.ConvertToInvariantString
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.ComponentModel.TypeConverter.ConvertToInvariantString(System.Object)
    name: ConvertToInvariantString
    nameWithType: TypeConverter.ConvertToInvariantString
    fullName: System.ComponentModel.TypeConverter.ConvertToInvariantString
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.ComponentModel.TypeConverter.ConvertToString(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)
  commentId: M:System.ComponentModel.TypeConverter.ConvertToString(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)
  parent: System.ComponentModel.TypeConverter
  isExternal: true
  name: ConvertToString(ITypeDescriptorContext, CultureInfo, Object)
  nameWithType: TypeConverter.ConvertToString(ITypeDescriptorContext, CultureInfo, Object)
  fullName: System.ComponentModel.TypeConverter.ConvertToString(System.ComponentModel.ITypeDescriptorContext, System.Globalization.CultureInfo, System.Object)
  spec.csharp:
  - uid: System.ComponentModel.TypeConverter.ConvertToString(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)
    name: ConvertToString
    nameWithType: TypeConverter.ConvertToString
    fullName: System.ComponentModel.TypeConverter.ConvertToString
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.ComponentModel.ITypeDescriptorContext
    name: ITypeDescriptorContext
    nameWithType: ITypeDescriptorContext
    fullName: System.ComponentModel.ITypeDescriptorContext
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Globalization.CultureInfo
    name: CultureInfo
    nameWithType: CultureInfo
    fullName: System.Globalization.CultureInfo
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.ComponentModel.TypeConverter.ConvertToString(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)
    name: ConvertToString
    nameWithType: TypeConverter.ConvertToString
    fullName: System.ComponentModel.TypeConverter.ConvertToString
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.ComponentModel.ITypeDescriptorContext
    name: ITypeDescriptorContext
    nameWithType: ITypeDescriptorContext
    fullName: System.ComponentModel.ITypeDescriptorContext
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Globalization.CultureInfo
    name: CultureInfo
    nameWithType: CultureInfo
    fullName: System.Globalization.CultureInfo
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.ComponentModel.TypeConverter.ConvertToString(System.ComponentModel.ITypeDescriptorContext,System.Object)
  commentId: M:System.ComponentModel.TypeConverter.ConvertToString(System.ComponentModel.ITypeDescriptorContext,System.Object)
  parent: System.ComponentModel.TypeConverter
  isExternal: true
  name: ConvertToString(ITypeDescriptorContext, Object)
  nameWithType: TypeConverter.ConvertToString(ITypeDescriptorContext, Object)
  fullName: System.ComponentModel.TypeConverter.ConvertToString(System.ComponentModel.ITypeDescriptorContext, System.Object)
  spec.csharp:
  - uid: System.ComponentModel.TypeConverter.ConvertToString(System.ComponentModel.ITypeDescriptorContext,System.Object)
    name: ConvertToString
    nameWithType: TypeConverter.ConvertToString
    fullName: System.ComponentModel.TypeConverter.ConvertToString
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.ComponentModel.ITypeDescriptorContext
    name: ITypeDescriptorContext
    nameWithType: ITypeDescriptorContext
    fullName: System.ComponentModel.ITypeDescriptorContext
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.ComponentModel.TypeConverter.ConvertToString(System.ComponentModel.ITypeDescriptorContext,System.Object)
    name: ConvertToString
    nameWithType: TypeConverter.ConvertToString
    fullName: System.ComponentModel.TypeConverter.ConvertToString
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.ComponentModel.ITypeDescriptorContext
    name: ITypeDescriptorContext
    nameWithType: ITypeDescriptorContext
    fullName: System.ComponentModel.ITypeDescriptorContext
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.ComponentModel.TypeConverter.ConvertToString(System.Object)
  commentId: M:System.ComponentModel.TypeConverter.ConvertToString(System.Object)
  parent: System.ComponentModel.TypeConverter
  isExternal: true
  name: ConvertToString(Object)
  nameWithType: TypeConverter.ConvertToString(Object)
  fullName: System.ComponentModel.TypeConverter.ConvertToString(System.Object)
  spec.csharp:
  - uid: System.ComponentModel.TypeConverter.ConvertToString(System.Object)
    name: ConvertToString
    nameWithType: TypeConverter.ConvertToString
    fullName: System.ComponentModel.TypeConverter.ConvertToString
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.ComponentModel.TypeConverter.ConvertToString(System.Object)
    name: ConvertToString
    nameWithType: TypeConverter.ConvertToString
    fullName: System.ComponentModel.TypeConverter.ConvertToString
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.ComponentModel.TypeConverter.CreateInstance(System.Collections.IDictionary)
  commentId: M:System.ComponentModel.TypeConverter.CreateInstance(System.Collections.IDictionary)
  parent: System.ComponentModel.TypeConverter
  isExternal: true
  name: CreateInstance(IDictionary)
  nameWithType: TypeConverter.CreateInstance(IDictionary)
  fullName: System.ComponentModel.TypeConverter.CreateInstance(System.Collections.IDictionary)
  spec.csharp:
  - uid: System.ComponentModel.TypeConverter.CreateInstance(System.Collections.IDictionary)
    name: CreateInstance
    nameWithType: TypeConverter.CreateInstance
    fullName: System.ComponentModel.TypeConverter.CreateInstance
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Collections.IDictionary
    name: IDictionary
    nameWithType: IDictionary
    fullName: System.Collections.IDictionary
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.ComponentModel.TypeConverter.CreateInstance(System.Collections.IDictionary)
    name: CreateInstance
    nameWithType: TypeConverter.CreateInstance
    fullName: System.ComponentModel.TypeConverter.CreateInstance
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Collections.IDictionary
    name: IDictionary
    nameWithType: IDictionary
    fullName: System.Collections.IDictionary
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.ComponentModel.TypeConverter.CreateInstance(System.ComponentModel.ITypeDescriptorContext,System.Collections.IDictionary)
  commentId: M:System.ComponentModel.TypeConverter.CreateInstance(System.ComponentModel.ITypeDescriptorContext,System.Collections.IDictionary)
  parent: System.ComponentModel.TypeConverter
  isExternal: true
  name: CreateInstance(ITypeDescriptorContext, IDictionary)
  nameWithType: TypeConverter.CreateInstance(ITypeDescriptorContext, IDictionary)
  fullName: System.ComponentModel.TypeConverter.CreateInstance(System.ComponentModel.ITypeDescriptorContext, System.Collections.IDictionary)
  spec.csharp:
  - uid: System.ComponentModel.TypeConverter.CreateInstance(System.ComponentModel.ITypeDescriptorContext,System.Collections.IDictionary)
    name: CreateInstance
    nameWithType: TypeConverter.CreateInstance
    fullName: System.ComponentModel.TypeConverter.CreateInstance
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.ComponentModel.ITypeDescriptorContext
    name: ITypeDescriptorContext
    nameWithType: ITypeDescriptorContext
    fullName: System.ComponentModel.ITypeDescriptorContext
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Collections.IDictionary
    name: IDictionary
    nameWithType: IDictionary
    fullName: System.Collections.IDictionary
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.ComponentModel.TypeConverter.CreateInstance(System.ComponentModel.ITypeDescriptorContext,System.Collections.IDictionary)
    name: CreateInstance
    nameWithType: TypeConverter.CreateInstance
    fullName: System.ComponentModel.TypeConverter.CreateInstance
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.ComponentModel.ITypeDescriptorContext
    name: ITypeDescriptorContext
    nameWithType: ITypeDescriptorContext
    fullName: System.ComponentModel.ITypeDescriptorContext
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Collections.IDictionary
    name: IDictionary
    nameWithType: IDictionary
    fullName: System.Collections.IDictionary
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.ComponentModel.TypeConverter.GetConvertFromException(System.Object)
  commentId: M:System.ComponentModel.TypeConverter.GetConvertFromException(System.Object)
  parent: System.ComponentModel.TypeConverter
  isExternal: true
  name: GetConvertFromException(Object)
  nameWithType: TypeConverter.GetConvertFromException(Object)
  fullName: System.ComponentModel.TypeConverter.GetConvertFromException(System.Object)
  spec.csharp:
  - uid: System.ComponentModel.TypeConverter.GetConvertFromException(System.Object)
    name: GetConvertFromException
    nameWithType: TypeConverter.GetConvertFromException
    fullName: System.ComponentModel.TypeConverter.GetConvertFromException
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.ComponentModel.TypeConverter.GetConvertFromException(System.Object)
    name: GetConvertFromException
    nameWithType: TypeConverter.GetConvertFromException
    fullName: System.ComponentModel.TypeConverter.GetConvertFromException
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.ComponentModel.TypeConverter.GetConvertToException(System.Object,System.Type)
  commentId: M:System.ComponentModel.TypeConverter.GetConvertToException(System.Object,System.Type)
  parent: System.ComponentModel.TypeConverter
  isExternal: true
  name: GetConvertToException(Object, Type)
  nameWithType: TypeConverter.GetConvertToException(Object, Type)
  fullName: System.ComponentModel.TypeConverter.GetConvertToException(System.Object, System.Type)
  spec.csharp:
  - uid: System.ComponentModel.TypeConverter.GetConvertToException(System.Object,System.Type)
    name: GetConvertToException
    nameWithType: TypeConverter.GetConvertToException
    fullName: System.ComponentModel.TypeConverter.GetConvertToException
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Type
    name: Type
    nameWithType: Type
    fullName: System.Type
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.ComponentModel.TypeConverter.GetConvertToException(System.Object,System.Type)
    name: GetConvertToException
    nameWithType: TypeConverter.GetConvertToException
    fullName: System.ComponentModel.TypeConverter.GetConvertToException
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Type
    name: Type
    nameWithType: Type
    fullName: System.Type
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.ComponentModel.TypeConverter.GetCreateInstanceSupported
  commentId: M:System.ComponentModel.TypeConverter.GetCreateInstanceSupported
  parent: System.ComponentModel.TypeConverter
  isExternal: false
  name: GetCreateInstanceSupported()
  nameWithType: TypeConverter.GetCreateInstanceSupported()
  fullName: System.ComponentModel.TypeConverter.GetCreateInstanceSupported()
  spec.csharp:
  - uid: System.ComponentModel.TypeConverter.GetCreateInstanceSupported
    name: GetCreateInstanceSupported
    nameWithType: TypeConverter.GetCreateInstanceSupported
    fullName: System.ComponentModel.TypeConverter.GetCreateInstanceSupported
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.ComponentModel.TypeConverter.GetCreateInstanceSupported
    name: GetCreateInstanceSupported
    nameWithType: TypeConverter.GetCreateInstanceSupported
    fullName: System.ComponentModel.TypeConverter.GetCreateInstanceSupported
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.ComponentModel.TypeConverter.GetCreateInstanceSupported(System.ComponentModel.ITypeDescriptorContext)
  commentId: M:System.ComponentModel.TypeConverter.GetCreateInstanceSupported(System.ComponentModel.ITypeDescriptorContext)
  parent: System.ComponentModel.TypeConverter
  isExternal: false
  name: GetCreateInstanceSupported(ITypeDescriptorContext)
  nameWithType: TypeConverter.GetCreateInstanceSupported(ITypeDescriptorContext)
  fullName: System.ComponentModel.TypeConverter.GetCreateInstanceSupported(System.ComponentModel.ITypeDescriptorContext)
  spec.csharp:
  - uid: System.ComponentModel.TypeConverter.GetCreateInstanceSupported(System.ComponentModel.ITypeDescriptorContext)
    name: GetCreateInstanceSupported
    nameWithType: TypeConverter.GetCreateInstanceSupported
    fullName: System.ComponentModel.TypeConverter.GetCreateInstanceSupported
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.ComponentModel.ITypeDescriptorContext
    name: ITypeDescriptorContext
    nameWithType: ITypeDescriptorContext
    fullName: System.ComponentModel.ITypeDescriptorContext
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.ComponentModel.TypeConverter.GetCreateInstanceSupported(System.ComponentModel.ITypeDescriptorContext)
    name: GetCreateInstanceSupported
    nameWithType: TypeConverter.GetCreateInstanceSupported
    fullName: System.ComponentModel.TypeConverter.GetCreateInstanceSupported
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.ComponentModel.ITypeDescriptorContext
    name: ITypeDescriptorContext
    nameWithType: ITypeDescriptorContext
    fullName: System.ComponentModel.ITypeDescriptorContext
  - name: )
    nameWithType: )
    fullName: )
- uid: System.ComponentModel.TypeConverter.GetProperties(System.ComponentModel.ITypeDescriptorContext,System.Object)
  commentId: M:System.ComponentModel.TypeConverter.GetProperties(System.ComponentModel.ITypeDescriptorContext,System.Object)
  parent: System.ComponentModel.TypeConverter
  isExternal: true
  name: GetProperties(ITypeDescriptorContext, Object)
  nameWithType: TypeConverter.GetProperties(ITypeDescriptorContext, Object)
  fullName: System.ComponentModel.TypeConverter.GetProperties(System.ComponentModel.ITypeDescriptorContext, System.Object)
  spec.csharp:
  - uid: System.ComponentModel.TypeConverter.GetProperties(System.ComponentModel.ITypeDescriptorContext,System.Object)
    name: GetProperties
    nameWithType: TypeConverter.GetProperties
    fullName: System.ComponentModel.TypeConverter.GetProperties
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.ComponentModel.ITypeDescriptorContext
    name: ITypeDescriptorContext
    nameWithType: ITypeDescriptorContext
    fullName: System.ComponentModel.ITypeDescriptorContext
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.ComponentModel.TypeConverter.GetProperties(System.ComponentModel.ITypeDescriptorContext,System.Object)
    name: GetProperties
    nameWithType: TypeConverter.GetProperties
    fullName: System.ComponentModel.TypeConverter.GetProperties
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.ComponentModel.ITypeDescriptorContext
    name: ITypeDescriptorContext
    nameWithType: ITypeDescriptorContext
    fullName: System.ComponentModel.ITypeDescriptorContext
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.ComponentModel.TypeConverter.GetProperties(System.ComponentModel.ITypeDescriptorContext,System.Object,System.Attribute[])
  commentId: M:System.ComponentModel.TypeConverter.GetProperties(System.ComponentModel.ITypeDescriptorContext,System.Object,System.Attribute[])
  parent: System.ComponentModel.TypeConverter
  isExternal: true
  name: GetProperties(ITypeDescriptorContext, Object, Attribute[])
  nameWithType: TypeConverter.GetProperties(ITypeDescriptorContext, Object, Attribute[])
  fullName: System.ComponentModel.TypeConverter.GetProperties(System.ComponentModel.ITypeDescriptorContext, System.Object, System.Attribute[])
  nameWithType.vb: TypeConverter.GetProperties(ITypeDescriptorContext, Object, Attribute())
  fullname.vb: System.ComponentModel.TypeConverter.GetProperties(System.ComponentModel.ITypeDescriptorContext, System.Object, System.Attribute())
  name.vb: GetProperties(ITypeDescriptorContext, Object, Attribute())
  spec.csharp:
  - uid: System.ComponentModel.TypeConverter.GetProperties(System.ComponentModel.ITypeDescriptorContext,System.Object,System.Attribute[])
    name: GetProperties
    nameWithType: TypeConverter.GetProperties
    fullName: System.ComponentModel.TypeConverter.GetProperties
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.ComponentModel.ITypeDescriptorContext
    name: ITypeDescriptorContext
    nameWithType: ITypeDescriptorContext
    fullName: System.ComponentModel.ITypeDescriptorContext
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Attribute
    name: Attribute
    nameWithType: Attribute
    fullName: System.Attribute
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.ComponentModel.TypeConverter.GetProperties(System.ComponentModel.ITypeDescriptorContext,System.Object,System.Attribute[])
    name: GetProperties
    nameWithType: TypeConverter.GetProperties
    fullName: System.ComponentModel.TypeConverter.GetProperties
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.ComponentModel.ITypeDescriptorContext
    name: ITypeDescriptorContext
    nameWithType: ITypeDescriptorContext
    fullName: System.ComponentModel.ITypeDescriptorContext
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Attribute
    name: Attribute
    nameWithType: Attribute
    fullName: System.Attribute
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: )
    nameWithType: )
    fullName: )
- uid: System.ComponentModel.TypeConverter.GetProperties(System.Object)
  commentId: M:System.ComponentModel.TypeConverter.GetProperties(System.Object)
  parent: System.ComponentModel.TypeConverter
  isExternal: true
  name: GetProperties(Object)
  nameWithType: TypeConverter.GetProperties(Object)
  fullName: System.ComponentModel.TypeConverter.GetProperties(System.Object)
  spec.csharp:
  - uid: System.ComponentModel.TypeConverter.GetProperties(System.Object)
    name: GetProperties
    nameWithType: TypeConverter.GetProperties
    fullName: System.ComponentModel.TypeConverter.GetProperties
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.ComponentModel.TypeConverter.GetProperties(System.Object)
    name: GetProperties
    nameWithType: TypeConverter.GetProperties
    fullName: System.ComponentModel.TypeConverter.GetProperties
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.ComponentModel.TypeConverter.GetPropertiesSupported
  commentId: M:System.ComponentModel.TypeConverter.GetPropertiesSupported
  parent: System.ComponentModel.TypeConverter
  isExternal: false
  name: GetPropertiesSupported()
  nameWithType: TypeConverter.GetPropertiesSupported()
  fullName: System.ComponentModel.TypeConverter.GetPropertiesSupported()
  spec.csharp:
  - uid: System.ComponentModel.TypeConverter.GetPropertiesSupported
    name: GetPropertiesSupported
    nameWithType: TypeConverter.GetPropertiesSupported
    fullName: System.ComponentModel.TypeConverter.GetPropertiesSupported
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.ComponentModel.TypeConverter.GetPropertiesSupported
    name: GetPropertiesSupported
    nameWithType: TypeConverter.GetPropertiesSupported
    fullName: System.ComponentModel.TypeConverter.GetPropertiesSupported
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.ComponentModel.TypeConverter.GetPropertiesSupported(System.ComponentModel.ITypeDescriptorContext)
  commentId: M:System.ComponentModel.TypeConverter.GetPropertiesSupported(System.ComponentModel.ITypeDescriptorContext)
  parent: System.ComponentModel.TypeConverter
  isExternal: false
  name: GetPropertiesSupported(ITypeDescriptorContext)
  nameWithType: TypeConverter.GetPropertiesSupported(ITypeDescriptorContext)
  fullName: System.ComponentModel.TypeConverter.GetPropertiesSupported(System.ComponentModel.ITypeDescriptorContext)
  spec.csharp:
  - uid: System.ComponentModel.TypeConverter.GetPropertiesSupported(System.ComponentModel.ITypeDescriptorContext)
    name: GetPropertiesSupported
    nameWithType: TypeConverter.GetPropertiesSupported
    fullName: System.ComponentModel.TypeConverter.GetPropertiesSupported
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.ComponentModel.ITypeDescriptorContext
    name: ITypeDescriptorContext
    nameWithType: ITypeDescriptorContext
    fullName: System.ComponentModel.ITypeDescriptorContext
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.ComponentModel.TypeConverter.GetPropertiesSupported(System.ComponentModel.ITypeDescriptorContext)
    name: GetPropertiesSupported
    nameWithType: TypeConverter.GetPropertiesSupported
    fullName: System.ComponentModel.TypeConverter.GetPropertiesSupported
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.ComponentModel.ITypeDescriptorContext
    name: ITypeDescriptorContext
    nameWithType: ITypeDescriptorContext
    fullName: System.ComponentModel.ITypeDescriptorContext
  - name: )
    nameWithType: )
    fullName: )
- uid: System.ComponentModel.TypeConverter.GetStandardValues
  commentId: M:System.ComponentModel.TypeConverter.GetStandardValues
  parent: System.ComponentModel.TypeConverter
  isExternal: false
  name: GetStandardValues()
  nameWithType: TypeConverter.GetStandardValues()
  fullName: System.ComponentModel.TypeConverter.GetStandardValues()
  spec.csharp:
  - uid: System.ComponentModel.TypeConverter.GetStandardValues
    name: GetStandardValues
    nameWithType: TypeConverter.GetStandardValues
    fullName: System.ComponentModel.TypeConverter.GetStandardValues
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.ComponentModel.TypeConverter.GetStandardValues
    name: GetStandardValues
    nameWithType: TypeConverter.GetStandardValues
    fullName: System.ComponentModel.TypeConverter.GetStandardValues
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.ComponentModel.TypeConverter.GetStandardValuesExclusive
  commentId: M:System.ComponentModel.TypeConverter.GetStandardValuesExclusive
  parent: System.ComponentModel.TypeConverter
  isExternal: false
  name: GetStandardValuesExclusive()
  nameWithType: TypeConverter.GetStandardValuesExclusive()
  fullName: System.ComponentModel.TypeConverter.GetStandardValuesExclusive()
  spec.csharp:
  - uid: System.ComponentModel.TypeConverter.GetStandardValuesExclusive
    name: GetStandardValuesExclusive
    nameWithType: TypeConverter.GetStandardValuesExclusive
    fullName: System.ComponentModel.TypeConverter.GetStandardValuesExclusive
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.ComponentModel.TypeConverter.GetStandardValuesExclusive
    name: GetStandardValuesExclusive
    nameWithType: TypeConverter.GetStandardValuesExclusive
    fullName: System.ComponentModel.TypeConverter.GetStandardValuesExclusive
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.ComponentModel.TypeConverter.GetStandardValuesSupported
  commentId: M:System.ComponentModel.TypeConverter.GetStandardValuesSupported
  parent: System.ComponentModel.TypeConverter
  isExternal: false
  name: GetStandardValuesSupported()
  nameWithType: TypeConverter.GetStandardValuesSupported()
  fullName: System.ComponentModel.TypeConverter.GetStandardValuesSupported()
  spec.csharp:
  - uid: System.ComponentModel.TypeConverter.GetStandardValuesSupported
    name: GetStandardValuesSupported
    nameWithType: TypeConverter.GetStandardValuesSupported
    fullName: System.ComponentModel.TypeConverter.GetStandardValuesSupported
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.ComponentModel.TypeConverter.GetStandardValuesSupported
    name: GetStandardValuesSupported
    nameWithType: TypeConverter.GetStandardValuesSupported
    fullName: System.ComponentModel.TypeConverter.GetStandardValuesSupported
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.ComponentModel.TypeConverter.IsValid(System.Object)
  commentId: M:System.ComponentModel.TypeConverter.IsValid(System.Object)
  parent: System.ComponentModel.TypeConverter
  isExternal: true
  name: IsValid(Object)
  nameWithType: TypeConverter.IsValid(Object)
  fullName: System.ComponentModel.TypeConverter.IsValid(System.Object)
  spec.csharp:
  - uid: System.ComponentModel.TypeConverter.IsValid(System.Object)
    name: IsValid
    nameWithType: TypeConverter.IsValid
    fullName: System.ComponentModel.TypeConverter.IsValid
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.ComponentModel.TypeConverter.IsValid(System.Object)
    name: IsValid
    nameWithType: TypeConverter.IsValid
    fullName: System.ComponentModel.TypeConverter.IsValid
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.ComponentModel.TypeConverter.SortProperties(System.ComponentModel.PropertyDescriptorCollection,System.String[])
  commentId: M:System.ComponentModel.TypeConverter.SortProperties(System.ComponentModel.PropertyDescriptorCollection,System.String[])
  parent: System.ComponentModel.TypeConverter
  isExternal: true
  name: SortProperties(PropertyDescriptorCollection, String[])
  nameWithType: TypeConverter.SortProperties(PropertyDescriptorCollection, String[])
  fullName: System.ComponentModel.TypeConverter.SortProperties(System.ComponentModel.PropertyDescriptorCollection, System.String[])
  nameWithType.vb: TypeConverter.SortProperties(PropertyDescriptorCollection, String())
  fullname.vb: System.ComponentModel.TypeConverter.SortProperties(System.ComponentModel.PropertyDescriptorCollection, System.String())
  name.vb: SortProperties(PropertyDescriptorCollection, String())
  spec.csharp:
  - uid: System.ComponentModel.TypeConverter.SortProperties(System.ComponentModel.PropertyDescriptorCollection,System.String[])
    name: SortProperties
    nameWithType: TypeConverter.SortProperties
    fullName: System.ComponentModel.TypeConverter.SortProperties
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.ComponentModel.PropertyDescriptorCollection
    name: PropertyDescriptorCollection
    nameWithType: PropertyDescriptorCollection
    fullName: System.ComponentModel.PropertyDescriptorCollection
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.ComponentModel.TypeConverter.SortProperties(System.ComponentModel.PropertyDescriptorCollection,System.String[])
    name: SortProperties
    nameWithType: TypeConverter.SortProperties
    fullName: System.ComponentModel.TypeConverter.SortProperties
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.ComponentModel.PropertyDescriptorCollection
    name: PropertyDescriptorCollection
    nameWithType: PropertyDescriptorCollection
    fullName: System.ComponentModel.PropertyDescriptorCollection
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: System.Type
  commentId: T:System.Type
  parent: System
  isExternal: false
  name: Type
  nameWithType: Type
  fullName: System.Type
- uid: System.Collections.IComparer
  commentId: T:System.Collections.IComparer
  parent: System.Collections
  isExternal: false
  name: IComparer
  nameWithType: IComparer
  fullName: System.Collections.IComparer
- uid: System.Collections
  commentId: N:System.Collections
  isExternal: false
  name: System.Collections
  nameWithType: System.Collections
  fullName: System.Collections
- uid: System.ComponentModel.TypeConverter.CanConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Type)
  commentId: M:System.ComponentModel.TypeConverter.CanConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Type)
  parent: System.ComponentModel.TypeConverter
  isExternal: true
  name: CanConvertFrom(ITypeDescriptorContext, Type)
  nameWithType: TypeConverter.CanConvertFrom(ITypeDescriptorContext, Type)
  fullName: System.ComponentModel.TypeConverter.CanConvertFrom(System.ComponentModel.ITypeDescriptorContext, System.Type)
  spec.csharp:
  - uid: System.ComponentModel.TypeConverter.CanConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Type)
    name: CanConvertFrom
    nameWithType: TypeConverter.CanConvertFrom
    fullName: System.ComponentModel.TypeConverter.CanConvertFrom
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.ComponentModel.ITypeDescriptorContext
    name: ITypeDescriptorContext
    nameWithType: ITypeDescriptorContext
    fullName: System.ComponentModel.ITypeDescriptorContext
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Type
    name: Type
    nameWithType: Type
    fullName: System.Type
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.ComponentModel.TypeConverter.CanConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Type)
    name: CanConvertFrom
    nameWithType: TypeConverter.CanConvertFrom
    fullName: System.ComponentModel.TypeConverter.CanConvertFrom
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.ComponentModel.ITypeDescriptorContext
    name: ITypeDescriptorContext
    nameWithType: ITypeDescriptorContext
    fullName: System.ComponentModel.ITypeDescriptorContext
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Type
    name: Type
    nameWithType: Type
    fullName: System.Type
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.ComponentModel.ITypeDescriptorContext
  commentId: T:System.ComponentModel.ITypeDescriptorContext
  parent: System.ComponentModel
  isExternal: false
  name: ITypeDescriptorContext
  nameWithType: ITypeDescriptorContext
  fullName: System.ComponentModel.ITypeDescriptorContext
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: false
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.ComponentModel.TypeConverter.CanConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Type)
  commentId: M:System.ComponentModel.TypeConverter.CanConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Type)
  parent: System.ComponentModel.TypeConverter
  isExternal: true
  name: CanConvertTo(ITypeDescriptorContext, Type)
  nameWithType: TypeConverter.CanConvertTo(ITypeDescriptorContext, Type)
  fullName: System.ComponentModel.TypeConverter.CanConvertTo(System.ComponentModel.ITypeDescriptorContext, System.Type)
  spec.csharp:
  - uid: System.ComponentModel.TypeConverter.CanConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Type)
    name: CanConvertTo
    nameWithType: TypeConverter.CanConvertTo
    fullName: System.ComponentModel.TypeConverter.CanConvertTo
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.ComponentModel.ITypeDescriptorContext
    name: ITypeDescriptorContext
    nameWithType: ITypeDescriptorContext
    fullName: System.ComponentModel.ITypeDescriptorContext
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Type
    name: Type
    nameWithType: Type
    fullName: System.Type
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.ComponentModel.TypeConverter.CanConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Type)
    name: CanConvertTo
    nameWithType: TypeConverter.CanConvertTo
    fullName: System.ComponentModel.TypeConverter.CanConvertTo
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.ComponentModel.ITypeDescriptorContext
    name: ITypeDescriptorContext
    nameWithType: ITypeDescriptorContext
    fullName: System.ComponentModel.ITypeDescriptorContext
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Type
    name: Type
    nameWithType: Type
    fullName: System.Type
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.ComponentModel.TypeConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)
  commentId: M:System.ComponentModel.TypeConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)
  parent: System.ComponentModel.TypeConverter
  isExternal: true
  name: ConvertFrom(ITypeDescriptorContext, CultureInfo, Object)
  nameWithType: TypeConverter.ConvertFrom(ITypeDescriptorContext, CultureInfo, Object)
  fullName: System.ComponentModel.TypeConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext, System.Globalization.CultureInfo, System.Object)
  spec.csharp:
  - uid: System.ComponentModel.TypeConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)
    name: ConvertFrom
    nameWithType: TypeConverter.ConvertFrom
    fullName: System.ComponentModel.TypeConverter.ConvertFrom
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.ComponentModel.ITypeDescriptorContext
    name: ITypeDescriptorContext
    nameWithType: ITypeDescriptorContext
    fullName: System.ComponentModel.ITypeDescriptorContext
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Globalization.CultureInfo
    name: CultureInfo
    nameWithType: CultureInfo
    fullName: System.Globalization.CultureInfo
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.ComponentModel.TypeConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)
    name: ConvertFrom
    nameWithType: TypeConverter.ConvertFrom
    fullName: System.ComponentModel.TypeConverter.ConvertFrom
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.ComponentModel.ITypeDescriptorContext
    name: ITypeDescriptorContext
    nameWithType: ITypeDescriptorContext
    fullName: System.ComponentModel.ITypeDescriptorContext
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Globalization.CultureInfo
    name: CultureInfo
    nameWithType: CultureInfo
    fullName: System.Globalization.CultureInfo
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Globalization.CultureInfo
  commentId: T:System.Globalization.CultureInfo
  parent: System.Globalization
  isExternal: false
  name: CultureInfo
  nameWithType: CultureInfo
  fullName: System.Globalization.CultureInfo
- uid: System.Globalization
  commentId: N:System.Globalization
  isExternal: false
  name: System.Globalization
  nameWithType: System.Globalization
  fullName: System.Globalization
- uid: System.ComponentModel.TypeConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)
  commentId: M:System.ComponentModel.TypeConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)
  parent: System.ComponentModel.TypeConverter
  isExternal: true
  name: ConvertTo(ITypeDescriptorContext, CultureInfo, Object, Type)
  nameWithType: TypeConverter.ConvertTo(ITypeDescriptorContext, CultureInfo, Object, Type)
  fullName: System.ComponentModel.TypeConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext, System.Globalization.CultureInfo, System.Object, System.Type)
  spec.csharp:
  - uid: System.ComponentModel.TypeConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)
    name: ConvertTo
    nameWithType: TypeConverter.ConvertTo
    fullName: System.ComponentModel.TypeConverter.ConvertTo
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.ComponentModel.ITypeDescriptorContext
    name: ITypeDescriptorContext
    nameWithType: ITypeDescriptorContext
    fullName: System.ComponentModel.ITypeDescriptorContext
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Globalization.CultureInfo
    name: CultureInfo
    nameWithType: CultureInfo
    fullName: System.Globalization.CultureInfo
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Type
    name: Type
    nameWithType: Type
    fullName: System.Type
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.ComponentModel.TypeConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)
    name: ConvertTo
    nameWithType: TypeConverter.ConvertTo
    fullName: System.ComponentModel.TypeConverter.ConvertTo
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.ComponentModel.ITypeDescriptorContext
    name: ITypeDescriptorContext
    nameWithType: ITypeDescriptorContext
    fullName: System.ComponentModel.ITypeDescriptorContext
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Globalization.CultureInfo
    name: CultureInfo
    nameWithType: CultureInfo
    fullName: System.Globalization.CultureInfo
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Type
    name: Type
    nameWithType: Type
    fullName: System.Type
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.ComponentModel.TypeConverter.GetStandardValues(System.ComponentModel.ITypeDescriptorContext)
  commentId: M:System.ComponentModel.TypeConverter.GetStandardValues(System.ComponentModel.ITypeDescriptorContext)
  parent: System.ComponentModel.TypeConverter
  isExternal: false
  name: GetStandardValues(ITypeDescriptorContext)
  nameWithType: TypeConverter.GetStandardValues(ITypeDescriptorContext)
  fullName: System.ComponentModel.TypeConverter.GetStandardValues(System.ComponentModel.ITypeDescriptorContext)
  spec.csharp:
  - uid: System.ComponentModel.TypeConverter.GetStandardValues(System.ComponentModel.ITypeDescriptorContext)
    name: GetStandardValues
    nameWithType: TypeConverter.GetStandardValues
    fullName: System.ComponentModel.TypeConverter.GetStandardValues
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.ComponentModel.ITypeDescriptorContext
    name: ITypeDescriptorContext
    nameWithType: ITypeDescriptorContext
    fullName: System.ComponentModel.ITypeDescriptorContext
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.ComponentModel.TypeConverter.GetStandardValues(System.ComponentModel.ITypeDescriptorContext)
    name: GetStandardValues
    nameWithType: TypeConverter.GetStandardValues
    fullName: System.ComponentModel.TypeConverter.GetStandardValues
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.ComponentModel.ITypeDescriptorContext
    name: ITypeDescriptorContext
    nameWithType: ITypeDescriptorContext
    fullName: System.ComponentModel.ITypeDescriptorContext
  - name: )
    nameWithType: )
    fullName: )
- uid: System.ComponentModel.TypeConverter.StandardValuesCollection
  commentId: T:System.ComponentModel.TypeConverter.StandardValuesCollection
  parent: System.ComponentModel
  isExternal: false
  name: TypeConverter.StandardValuesCollection
  nameWithType: TypeConverter.StandardValuesCollection
  fullName: System.ComponentModel.TypeConverter.StandardValuesCollection
- uid: System.ComponentModel.TypeConverter.GetStandardValuesExclusive(System.ComponentModel.ITypeDescriptorContext)
  commentId: M:System.ComponentModel.TypeConverter.GetStandardValuesExclusive(System.ComponentModel.ITypeDescriptorContext)
  parent: System.ComponentModel.TypeConverter
  isExternal: false
  name: GetStandardValuesExclusive(ITypeDescriptorContext)
  nameWithType: TypeConverter.GetStandardValuesExclusive(ITypeDescriptorContext)
  fullName: System.ComponentModel.TypeConverter.GetStandardValuesExclusive(System.ComponentModel.ITypeDescriptorContext)
  spec.csharp:
  - uid: System.ComponentModel.TypeConverter.GetStandardValuesExclusive(System.ComponentModel.ITypeDescriptorContext)
    name: GetStandardValuesExclusive
    nameWithType: TypeConverter.GetStandardValuesExclusive
    fullName: System.ComponentModel.TypeConverter.GetStandardValuesExclusive
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.ComponentModel.ITypeDescriptorContext
    name: ITypeDescriptorContext
    nameWithType: ITypeDescriptorContext
    fullName: System.ComponentModel.ITypeDescriptorContext
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.ComponentModel.TypeConverter.GetStandardValuesExclusive(System.ComponentModel.ITypeDescriptorContext)
    name: GetStandardValuesExclusive
    nameWithType: TypeConverter.GetStandardValuesExclusive
    fullName: System.ComponentModel.TypeConverter.GetStandardValuesExclusive
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.ComponentModel.ITypeDescriptorContext
    name: ITypeDescriptorContext
    nameWithType: ITypeDescriptorContext
    fullName: System.ComponentModel.ITypeDescriptorContext
  - name: )
    nameWithType: )
    fullName: )
- uid: System.ComponentModel.TypeConverter.GetStandardValuesSupported(System.ComponentModel.ITypeDescriptorContext)
  commentId: M:System.ComponentModel.TypeConverter.GetStandardValuesSupported(System.ComponentModel.ITypeDescriptorContext)
  parent: System.ComponentModel.TypeConverter
  isExternal: false
  name: GetStandardValuesSupported(ITypeDescriptorContext)
  nameWithType: TypeConverter.GetStandardValuesSupported(ITypeDescriptorContext)
  fullName: System.ComponentModel.TypeConverter.GetStandardValuesSupported(System.ComponentModel.ITypeDescriptorContext)
  spec.csharp:
  - uid: System.ComponentModel.TypeConverter.GetStandardValuesSupported(System.ComponentModel.ITypeDescriptorContext)
    name: GetStandardValuesSupported
    nameWithType: TypeConverter.GetStandardValuesSupported
    fullName: System.ComponentModel.TypeConverter.GetStandardValuesSupported
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.ComponentModel.ITypeDescriptorContext
    name: ITypeDescriptorContext
    nameWithType: ITypeDescriptorContext
    fullName: System.ComponentModel.ITypeDescriptorContext
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.ComponentModel.TypeConverter.GetStandardValuesSupported(System.ComponentModel.ITypeDescriptorContext)
    name: GetStandardValuesSupported
    nameWithType: TypeConverter.GetStandardValuesSupported
    fullName: System.ComponentModel.TypeConverter.GetStandardValuesSupported
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.ComponentModel.ITypeDescriptorContext
    name: ITypeDescriptorContext
    nameWithType: ITypeDescriptorContext
    fullName: System.ComponentModel.ITypeDescriptorContext
  - name: )
    nameWithType: )
    fullName: )
- uid: System.ComponentModel.TypeConverter.IsValid(System.ComponentModel.ITypeDescriptorContext,System.Object)
  commentId: M:System.ComponentModel.TypeConverter.IsValid(System.ComponentModel.ITypeDescriptorContext,System.Object)
  parent: System.ComponentModel.TypeConverter
  isExternal: true
  name: IsValid(ITypeDescriptorContext, Object)
  nameWithType: TypeConverter.IsValid(ITypeDescriptorContext, Object)
  fullName: System.ComponentModel.TypeConverter.IsValid(System.ComponentModel.ITypeDescriptorContext, System.Object)
  spec.csharp:
  - uid: System.ComponentModel.TypeConverter.IsValid(System.ComponentModel.ITypeDescriptorContext,System.Object)
    name: IsValid
    nameWithType: TypeConverter.IsValid
    fullName: System.ComponentModel.TypeConverter.IsValid
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.ComponentModel.ITypeDescriptorContext
    name: ITypeDescriptorContext
    nameWithType: ITypeDescriptorContext
    fullName: System.ComponentModel.ITypeDescriptorContext
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.ComponentModel.TypeConverter.IsValid(System.ComponentModel.ITypeDescriptorContext,System.Object)
    name: IsValid
    nameWithType: TypeConverter.IsValid
    fullName: System.ComponentModel.TypeConverter.IsValid
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.ComponentModel.ITypeDescriptorContext
    name: ITypeDescriptorContext
    nameWithType: ITypeDescriptorContext
    fullName: System.ComponentModel.ITypeDescriptorContext
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.FormatException
  commentId: T:System.FormatException
  parent: System
  isExternal: false
  name: FormatException
  nameWithType: FormatException
  fullName: System.FormatException
- uid: System.NotSupportedException
  commentId: T:System.NotSupportedException
  parent: System
  isExternal: false
  name: NotSupportedException
  nameWithType: NotSupportedException
  fullName: System.NotSupportedException
- uid: System.ArgumentNullException
  commentId: T:System.ArgumentNullException
  isExternal: false
  name: ArgumentNullException
  nameWithType: ArgumentNullException
  fullName: System.ArgumentNullException
- uid: System.ArgumentException
  commentId: T:System.ArgumentException
  parent: System
  isExternal: false
  name: ArgumentException
  nameWithType: ArgumentException
  fullName: System.ArgumentException
