items:
- uid: System.ServiceModel.Security.Tokens.SupportingTokenParameters
  commentId: T:System.ServiceModel.Security.Tokens.SupportingTokenParameters
  id: SupportingTokenParameters
  parent: System.ServiceModel.Security.Tokens
  children:
  - System.ServiceModel.Security.Tokens.SupportingTokenParameters.#ctor
  - System.ServiceModel.Security.Tokens.SupportingTokenParameters.Clone
  - System.ServiceModel.Security.Tokens.SupportingTokenParameters.Endorsing
  - System.ServiceModel.Security.Tokens.SupportingTokenParameters.SignedEncrypted
  langs:
  - csharp
  - vb
  name: SupportingTokenParameters
  fullName: System.ServiceModel.Security.Tokens.SupportingTokenParameters
  type: Class
  source:
    remote:
      path: src/System.ServiceModel.Security/ref/System.ServiceModel.Security.cs
      branch: master
      repo: https://github.com/dotnet/wcf.git
    id: SupportingTokenParameters
    path: src/System.ServiceModel.Security/ref/System.ServiceModel.Security.cs
    startLine: 124
  assemblies:
  - System.ServiceModel.Security
  namespace: System.ServiceModel.Security.Tokens
  summary: "\n<p>Represents the parameters for supporting security tokens required by the security binding element.</p>\n"
  syntax:
    content: public class SupportingTokenParameters
    content.vb: Public Class SupportingTokenParameters
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
  nameWithType: SupportingTokenParameters
- uid: System.ServiceModel.Security.Tokens.SupportingTokenParameters.#ctor
  commentId: M:System.ServiceModel.Security.Tokens.SupportingTokenParameters.#ctor
  id: '#ctor'
  parent: System.ServiceModel.Security.Tokens.SupportingTokenParameters
  langs:
  - csharp
  - vb
  name: SupportingTokenParameters()
  fullName: System.ServiceModel.Security.Tokens.SupportingTokenParameters.SupportingTokenParameters()
  type: Constructor
  source:
    remote:
      path: src/System.ServiceModel.Security/ref/System.ServiceModel.Security.cs
      branch: master
      repo: https://github.com/dotnet/wcf.git
    id: .ctor
    path: src/System.ServiceModel.Security/ref/System.ServiceModel.Security.cs
    startLine: 126
  assemblies:
  - System.ServiceModel.Security
  namespace: System.ServiceModel.Security.Tokens
  summary: "\n<p>Initializes a new instance of the <xref href=\"System.ServiceModel.Security.Tokens.SupportingTokenParameters\" data-throw-if-not-resolved=\"false\"></xref> class.</p>\n"
  syntax:
    content: public SupportingTokenParameters()
    content.vb: Public Sub New
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  nameWithType: SupportingTokenParameters.SupportingTokenParameters()
- uid: System.ServiceModel.Security.Tokens.SupportingTokenParameters.Endorsing
  commentId: P:System.ServiceModel.Security.Tokens.SupportingTokenParameters.Endorsing
  id: Endorsing
  parent: System.ServiceModel.Security.Tokens.SupportingTokenParameters
  langs:
  - csharp
  - vb
  name: Endorsing
  fullName: System.ServiceModel.Security.Tokens.SupportingTokenParameters.Endorsing
  type: Property
  source:
    remote:
      path: src/System.ServiceModel.Security/ref/System.ServiceModel.Security.cs
      branch: master
      repo: https://github.com/dotnet/wcf.git
    id: Endorsing
    path: src/System.ServiceModel.Security/ref/System.ServiceModel.Security.cs
    startLine: 127
  assemblies:
  - System.ServiceModel.Security
  namespace: System.ServiceModel.Security.Tokens
  summary: "\n<p>Gets a collection of security token parameters for endorsing supporting tokens required by the security binding element.</p>\n"
  syntax:
    content: public Collection<SecurityTokenParameters> Endorsing { get; }
    content.vb: Public ReadOnly Property Endorsing As Collection(Of SecurityTokenParameters)
    parameters: []
    return:
      type: System.Collections.ObjectModel.Collection{System.ServiceModel.Security.Tokens.SecurityTokenParameters}
      description: "\n<p>A collection of <xref href=\"System.ServiceModel.Security.Tokens.SecurityTokenParameters\" data-throw-if-not-resolved=\"false\"></xref>.</p>\n"
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
  nameWithType: SupportingTokenParameters.Endorsing
- uid: System.ServiceModel.Security.Tokens.SupportingTokenParameters.SignedEncrypted
  commentId: P:System.ServiceModel.Security.Tokens.SupportingTokenParameters.SignedEncrypted
  id: SignedEncrypted
  parent: System.ServiceModel.Security.Tokens.SupportingTokenParameters
  langs:
  - csharp
  - vb
  name: SignedEncrypted
  fullName: System.ServiceModel.Security.Tokens.SupportingTokenParameters.SignedEncrypted
  type: Property
  source:
    remote:
      path: src/System.ServiceModel.Security/ref/System.ServiceModel.Security.cs
      branch: master
      repo: https://github.com/dotnet/wcf.git
    id: SignedEncrypted
    path: src/System.ServiceModel.Security/ref/System.ServiceModel.Security.cs
    startLine: 128
  assemblies:
  - System.ServiceModel.Security
  namespace: System.ServiceModel.Security.Tokens
  summary: "\n<p>Gets a collection of security token parameters for signed and encrypted supporting tokens required by the security binding element.</p>\n"
  syntax:
    content: public Collection<SecurityTokenParameters> SignedEncrypted { get; }
    content.vb: Public ReadOnly Property SignedEncrypted As Collection(Of SecurityTokenParameters)
    parameters: []
    return:
      type: System.Collections.ObjectModel.Collection{System.ServiceModel.Security.Tokens.SecurityTokenParameters}
      description: "\n<p>A collection of <xref href=\"System.ServiceModel.Security.Tokens.SecurityTokenParameters\" data-throw-if-not-resolved=\"false\"></xref>.</p>\n"
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
  nameWithType: SupportingTokenParameters.SignedEncrypted
- uid: System.ServiceModel.Security.Tokens.SupportingTokenParameters.Clone
  commentId: M:System.ServiceModel.Security.Tokens.SupportingTokenParameters.Clone
  id: Clone
  parent: System.ServiceModel.Security.Tokens.SupportingTokenParameters
  langs:
  - csharp
  - vb
  name: Clone()
  fullName: System.ServiceModel.Security.Tokens.SupportingTokenParameters.Clone()
  type: Method
  source:
    remote:
      path: src/System.ServiceModel.Security/ref/System.ServiceModel.Security.cs
      branch: master
      repo: https://github.com/dotnet/wcf.git
    id: Clone
    path: src/System.ServiceModel.Security/ref/System.ServiceModel.Security.cs
    startLine: 129
  assemblies:
  - System.ServiceModel.Security
  namespace: System.ServiceModel.Security.Tokens
  summary: "\n<p>Clones another instance of this instance of the class.</p>\n"
  syntax:
    content: public SupportingTokenParameters Clone()
    content.vb: Public Function Clone As SupportingTokenParameters
    return:
      type: System.ServiceModel.Security.Tokens.SupportingTokenParameters
      description: "\n<p>A <xref href=\"System.ServiceModel.Security.Tokens.SupportingTokenParameters\" data-throw-if-not-resolved=\"false\"></xref>.</p>\n"
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  nameWithType: SupportingTokenParameters.Clone()
references:
- uid: System.ServiceModel.Security.Tokens
  isExternal: false
  name: System.ServiceModel.Security.Tokens
  fullName: System.ServiceModel.Security.Tokens
  commentId: N:System.ServiceModel.Security.Tokens
  nameWithType: System.ServiceModel.Security.Tokens
- uid: System.Object
  parent: System
  isExternal: false
  name: Object
  fullName: System.Object
  commentId: T:System.Object
  nameWithType: Object
- uid: System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  commentId: M:System.Object.ToString
  nameWithType: Object.ToString()
- uid: System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
  commentId: M:System.Object.Equals(System.Object)
  nameWithType: Object.Equals(Object)
- uid: System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
  commentId: M:System.Object.Equals(System.Object,System.Object)
  nameWithType: Object.Equals(Object, Object)
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
- uid: System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  commentId: M:System.Object.GetHashCode
  nameWithType: Object.GetHashCode()
- uid: System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  commentId: M:System.Object.GetType
  nameWithType: Object.GetType()
- uid: System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  commentId: M:System.Object.MemberwiseClone
  nameWithType: Object.MemberwiseClone()
- uid: System
  isExternal: false
  name: System
  fullName: System
  commentId: N:System
  nameWithType: System
- uid: System.Collections.ObjectModel.Collection{System.ServiceModel.Security.Tokens.SecurityTokenParameters}
  parent: System.Collections.ObjectModel
  definition: System.Collections.ObjectModel.Collection`1
  name: Collection<SecurityTokenParameters>
  fullName: System.Collections.ObjectModel.Collection<System.ServiceModel.Security.Tokens.SecurityTokenParameters>
  fullname.vb: System.Collections.ObjectModel.Collection(Of System.ServiceModel.Security.Tokens.SecurityTokenParameters)
  name.vb: Collection(Of SecurityTokenParameters)
  spec.csharp:
  - uid: System.Collections.ObjectModel.Collection`1
    name: Collection
    fullName: System.Collections.ObjectModel.Collection
    isExternal: true
  - name: <
    fullName: <
  - uid: System.ServiceModel.Security.Tokens.SecurityTokenParameters
    name: SecurityTokenParameters
    fullName: System.ServiceModel.Security.Tokens.SecurityTokenParameters
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.ObjectModel.Collection`1
    name: Collection
    fullName: System.Collections.ObjectModel.Collection
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - uid: System.ServiceModel.Security.Tokens.SecurityTokenParameters
    name: SecurityTokenParameters
    fullName: System.ServiceModel.Security.Tokens.SecurityTokenParameters
  - name: )
    fullName: )
  commentId: T:System.Collections.ObjectModel.Collection{System.ServiceModel.Security.Tokens.SecurityTokenParameters}
  nameWithType: Collection<SecurityTokenParameters>
  nameWithType.vb: Collection(Of SecurityTokenParameters)
- uid: System.Collections.ObjectModel.Collection`1
  isExternal: false
  name: Collection<T>
  fullName: System.Collections.ObjectModel.Collection<T>
  fullname.vb: System.Collections.ObjectModel.Collection(Of T)
  name.vb: Collection(Of T)
  spec.csharp:
  - uid: System.Collections.ObjectModel.Collection`1
    name: Collection
    fullName: System.Collections.ObjectModel.Collection
  - name: <
    fullName: <
  - name: T
    fullName: T
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.ObjectModel.Collection`1
    name: Collection
    fullName: System.Collections.ObjectModel.Collection
  - name: '(Of '
    fullName: '(Of '
  - name: T
    fullName: T
  - name: )
    fullName: )
  commentId: T:System.Collections.ObjectModel.Collection`1
  nameWithType: Collection<T>
  nameWithType.vb: Collection(Of T)
- uid: System.Collections.ObjectModel
  isExternal: false
  name: System.Collections.ObjectModel
  fullName: System.Collections.ObjectModel
  commentId: N:System.Collections.ObjectModel
  nameWithType: System.Collections.ObjectModel
- uid: System.ServiceModel.Security.Tokens.SupportingTokenParameters
  parent: System.ServiceModel.Security.Tokens
  isExternal: false
  name: SupportingTokenParameters
  fullName: System.ServiceModel.Security.Tokens.SupportingTokenParameters
  commentId: T:System.ServiceModel.Security.Tokens.SupportingTokenParameters
  nameWithType: SupportingTokenParameters
