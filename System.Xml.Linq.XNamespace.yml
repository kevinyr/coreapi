### YamlMime:ManagedReference
items:
- uid: System.Xml.Linq.XNamespace
  commentId: T:System.Xml.Linq.XNamespace
  id: XNamespace
  parent: System.Xml.Linq
  children:
  - System.Xml.Linq.XNamespace.Equals(System.Object)
  - System.Xml.Linq.XNamespace.Get(System.String)
  - System.Xml.Linq.XNamespace.GetHashCode
  - System.Xml.Linq.XNamespace.GetName(System.String)
  - System.Xml.Linq.XNamespace.NamespaceName
  - System.Xml.Linq.XNamespace.None
  - System.Xml.Linq.XNamespace.op_Addition(System.Xml.Linq.XNamespace,System.String)
  - System.Xml.Linq.XNamespace.op_Equality(System.Xml.Linq.XNamespace,System.Xml.Linq.XNamespace)
  - System.Xml.Linq.XNamespace.op_Implicit(System.String)~System.Xml.Linq.XNamespace
  - System.Xml.Linq.XNamespace.op_Inequality(System.Xml.Linq.XNamespace,System.Xml.Linq.XNamespace)
  - System.Xml.Linq.XNamespace.ToString
  - System.Xml.Linq.XNamespace.Xml
  - System.Xml.Linq.XNamespace.Xmlns
  langs:
  - csharp
  - vb
  name: XNamespace
  nameWithType: XNamespace
  fullName: System.Xml.Linq.XNamespace
  type: Class
  source:
    remote:
      path: src/System.Xml.XDocument/ref/System.Xml.XDocument.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: XNamespace
    path: src/System.Xml.XDocument/ref/System.Xml.XDocument.cs
    startLine: 323
  assemblies:
  - System.Xml.XDocument
  namespace: System.Xml.Linq
  summary: "\n<p>Represents an XML namespace. This class cannot be inherited. </p>\n"
  syntax:
    content: public sealed class XNamespace
    content.vb: Public NotInheritable Class XNamespace
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetType
  - System.Object.MemberwiseClone
  modifiers.csharp:
  - public
  - sealed
  - class
  modifiers.vb:
  - Public
  - NotInheritable
  - Class
- uid: System.Xml.Linq.XNamespace.NamespaceName
  commentId: P:System.Xml.Linq.XNamespace.NamespaceName
  id: NamespaceName
  parent: System.Xml.Linq.XNamespace
  langs:
  - csharp
  - vb
  name: NamespaceName
  nameWithType: XNamespace.NamespaceName
  fullName: System.Xml.Linq.XNamespace.NamespaceName
  type: Property
  source:
    remote:
      path: src/System.Xml.XDocument/ref/System.Xml.XDocument.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: NamespaceName
    path: src/System.Xml.XDocument/ref/System.Xml.XDocument.cs
    startLine: 326
  assemblies:
  - System.Xml.XDocument
  namespace: System.Xml.Linq
  summary: "\n<p>Gets the Uniform Resource Identifier (URI) of this namespace.</p>\n"
  syntax:
    content: public string NamespaceName { get; }
    content.vb: Public ReadOnly Property NamespaceName As String
    parameters: []
    return:
      type: System.String
      description: "\n<p>A <xref href=\"System.String\" data-throw-if-not-resolved=\"false\"></xref> that contains the URI of the namespace.</p>\n"
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: System.Xml.Linq.XNamespace.None
  commentId: P:System.Xml.Linq.XNamespace.None
  id: None
  parent: System.Xml.Linq.XNamespace
  langs:
  - csharp
  - vb
  name: None
  nameWithType: XNamespace.None
  fullName: System.Xml.Linq.XNamespace.None
  type: Property
  source:
    remote:
      path: src/System.Xml.XDocument/ref/System.Xml.XDocument.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: None
    path: src/System.Xml.XDocument/ref/System.Xml.XDocument.cs
    startLine: 327
  assemblies:
  - System.Xml.XDocument
  namespace: System.Xml.Linq
  summary: "\n<p>Gets the <xref href=\"System.Xml.Linq.XNamespace\" data-throw-if-not-resolved=\"false\"></xref> object that corresponds to no namespace.</p>\n"
  syntax:
    content: public static XNamespace None { get; }
    content.vb: Public Shared ReadOnly Property None As XNamespace
    parameters: []
    return:
      type: System.Xml.Linq.XNamespace
      description: "\n<p>The <xref href=\"System.Xml.Linq.XNamespace\" data-throw-if-not-resolved=\"false\"></xref> that corresponds to no namespace.</p>\n"
  modifiers.csharp:
  - public
  - static
  - get
  modifiers.vb:
  - Public
  - Shared
  - ReadOnly
- uid: System.Xml.Linq.XNamespace.Xml
  commentId: P:System.Xml.Linq.XNamespace.Xml
  id: Xml
  parent: System.Xml.Linq.XNamespace
  langs:
  - csharp
  - vb
  name: Xml
  nameWithType: XNamespace.Xml
  fullName: System.Xml.Linq.XNamespace.Xml
  type: Property
  source:
    remote:
      path: src/System.Xml.XDocument/ref/System.Xml.XDocument.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: Xml
    path: src/System.Xml.XDocument/ref/System.Xml.XDocument.cs
    startLine: 328
  assemblies:
  - System.Xml.XDocument
  namespace: System.Xml.Linq
  summary: "\n<p>Gets the <xref href=\"System.Xml.Linq.XNamespace\" data-throw-if-not-resolved=\"false\"></xref> object that corresponds to the XML URI (<code>http://www.w3.org/XML/1998/namespace</code>).</p>\n"
  syntax:
    content: public static XNamespace Xml { get; }
    content.vb: Public Shared ReadOnly Property Xml As XNamespace
    parameters: []
    return:
      type: System.Xml.Linq.XNamespace
      description: "\n<p>The <xref href=\"System.Xml.Linq.XNamespace\" data-throw-if-not-resolved=\"false\"></xref> that corresponds to the XML URI (<code>http://www.w3.org/XML/1998/namespace</code>).</p>\n"
  modifiers.csharp:
  - public
  - static
  - get
  modifiers.vb:
  - Public
  - Shared
  - ReadOnly
- uid: System.Xml.Linq.XNamespace.Xmlns
  commentId: P:System.Xml.Linq.XNamespace.Xmlns
  id: Xmlns
  parent: System.Xml.Linq.XNamespace
  langs:
  - csharp
  - vb
  name: Xmlns
  nameWithType: XNamespace.Xmlns
  fullName: System.Xml.Linq.XNamespace.Xmlns
  type: Property
  source:
    remote:
      path: src/System.Xml.XDocument/ref/System.Xml.XDocument.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: Xmlns
    path: src/System.Xml.XDocument/ref/System.Xml.XDocument.cs
    startLine: 329
  assemblies:
  - System.Xml.XDocument
  namespace: System.Xml.Linq
  summary: "\n<p>Gets the <xref href=\"System.Xml.Linq.XNamespace\" data-throw-if-not-resolved=\"false\"></xref> object that corresponds to the xmlns URI (<code>http://www.w3.org/2000/xmlns/</code>).</p>\n"
  syntax:
    content: public static XNamespace Xmlns { get; }
    content.vb: Public Shared ReadOnly Property Xmlns As XNamespace
    parameters: []
    return:
      type: System.Xml.Linq.XNamespace
      description: "\n<p>The <xref href=\"System.Xml.Linq.XNamespace\" data-throw-if-not-resolved=\"false\"></xref> that corresponds to the <strong>xmlns</strong> URI (<code>http://www.w3.org/2000/xmlns/</code>).</p>\n"
  modifiers.csharp:
  - public
  - static
  - get
  modifiers.vb:
  - Public
  - Shared
  - ReadOnly
- uid: System.Xml.Linq.XNamespace.Equals(System.Object)
  commentId: M:System.Xml.Linq.XNamespace.Equals(System.Object)
  id: Equals(System.Object)
  parent: System.Xml.Linq.XNamespace
  langs:
  - csharp
  - vb
  name: Equals(Object)
  nameWithType: XNamespace.Equals(Object)
  fullName: System.Xml.Linq.XNamespace.Equals(System.Object)
  type: Method
  source:
    remote:
      path: src/System.Xml.XDocument/ref/System.Xml.XDocument.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: Equals
    path: src/System.Xml.XDocument/ref/System.Xml.XDocument.cs
    startLine: 330
  assemblies:
  - System.Xml.XDocument
  namespace: System.Xml.Linq
  summary: "\n<p>Determines whether the specified <xref href=\"System.Xml.Linq.XNamespace\" data-throw-if-not-resolved=\"false\"></xref> is equal to the current <xref href=\"System.Xml.Linq.XNamespace\" data-throw-if-not-resolved=\"false\"></xref>.</p>\n"
  syntax:
    content: public override bool Equals(object obj)
    content.vb: Public Overrides Function Equals(obj As Object) As Boolean
    parameters:
    - id: obj
      type: System.Object
      description: "\n<p>The <xref href=\"System.Xml.Linq.XNamespace\" data-throw-if-not-resolved=\"false\"></xref> to compare to the current <xref href=\"System.Xml.Linq.XNamespace\" data-throw-if-not-resolved=\"false\"></xref>.</p>\n"
    return:
      type: System.Boolean
      description: "\n<p>A <xref href=\"System.Boolean\" data-throw-if-not-resolved=\"false\"></xref> that indicates whether the specified <xref href=\"System.Xml.Linq.XNamespace\" data-throw-if-not-resolved=\"false\"></xref> is equal to the current <xref href=\"System.Xml.Linq.XNamespace\" data-throw-if-not-resolved=\"false\"></xref>.</p>\n"
  overridden: System.Object.Equals(System.Object)
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
- uid: System.Xml.Linq.XNamespace.Get(System.String)
  commentId: M:System.Xml.Linq.XNamespace.Get(System.String)
  id: Get(System.String)
  parent: System.Xml.Linq.XNamespace
  langs:
  - csharp
  - vb
  name: Get(String)
  nameWithType: XNamespace.Get(String)
  fullName: System.Xml.Linq.XNamespace.Get(System.String)
  type: Method
  source:
    remote:
      path: src/System.Xml.XDocument/ref/System.Xml.XDocument.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: Get
    path: src/System.Xml.XDocument/ref/System.Xml.XDocument.cs
    startLine: 331
  assemblies:
  - System.Xml.XDocument
  namespace: System.Xml.Linq
  summary: "\n<p>Gets an <xref href=\"System.Xml.Linq.XNamespace\" data-throw-if-not-resolved=\"false\"></xref> for the specified Uniform Resource Identifier (URI).</p>\n"
  syntax:
    content: public static XNamespace Get(string namespaceName)
    content.vb: Public Shared Function Get(namespaceName As String) As XNamespace
    parameters:
    - id: namespaceName
      type: System.String
      description: "\n<p>A <xref href=\"System.String\" data-throw-if-not-resolved=\"false\"></xref> that contains a namespace URI.</p>\n"
    return:
      type: System.Xml.Linq.XNamespace
      description: "\n<p>An <xref href=\"System.Xml.Linq.XNamespace\" data-throw-if-not-resolved=\"false\"></xref> created from the specified URI.</p>\n"
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: System.Xml.Linq.XNamespace.GetHashCode
  commentId: M:System.Xml.Linq.XNamespace.GetHashCode
  id: GetHashCode
  parent: System.Xml.Linq.XNamespace
  langs:
  - csharp
  - vb
  name: GetHashCode()
  nameWithType: XNamespace.GetHashCode()
  fullName: System.Xml.Linq.XNamespace.GetHashCode()
  type: Method
  source:
    remote:
      path: src/System.Xml.XDocument/ref/System.Xml.XDocument.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: GetHashCode
    path: src/System.Xml.XDocument/ref/System.Xml.XDocument.cs
    startLine: 332
  assemblies:
  - System.Xml.XDocument
  namespace: System.Xml.Linq
  summary: "\n<p>Gets a hash code for this <xref href=\"System.Xml.Linq.XNamespace\" data-throw-if-not-resolved=\"false\"></xref>.</p>\n"
  syntax:
    content: public override int GetHashCode()
    content.vb: Public Overrides Function GetHashCode As Integer
    return:
      type: System.Int32
      description: "\n<p>An <xref href=\"System.Int32\" data-throw-if-not-resolved=\"false\"></xref> that contains the hash code for the <xref href=\"System.Xml.Linq.XNamespace\" data-throw-if-not-resolved=\"false\"></xref>.</p>\n"
  overridden: System.Object.GetHashCode
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
- uid: System.Xml.Linq.XNamespace.GetName(System.String)
  commentId: M:System.Xml.Linq.XNamespace.GetName(System.String)
  id: GetName(System.String)
  parent: System.Xml.Linq.XNamespace
  langs:
  - csharp
  - vb
  name: GetName(String)
  nameWithType: XNamespace.GetName(String)
  fullName: System.Xml.Linq.XNamespace.GetName(System.String)
  type: Method
  source:
    remote:
      path: src/System.Xml.XDocument/ref/System.Xml.XDocument.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: GetName
    path: src/System.Xml.XDocument/ref/System.Xml.XDocument.cs
    startLine: 333
  assemblies:
  - System.Xml.XDocument
  namespace: System.Xml.Linq
  summary: "\n<p>Returns an <xref href=\"System.Xml.Linq.XName\" data-throw-if-not-resolved=\"false\"></xref> object created from this <xref href=\"System.Xml.Linq.XNamespace\" data-throw-if-not-resolved=\"false\"></xref> and the specified local name.</p>\n"
  syntax:
    content: public XName GetName(string localName)
    content.vb: Public Function GetName(localName As String) As XName
    parameters:
    - id: localName
      type: System.String
      description: "\n<p>A <xref href=\"System.String\" data-throw-if-not-resolved=\"false\"></xref> that contains a local name.</p>\n"
    return:
      type: System.Xml.Linq.XName
      description: "\n<p>An <xref href=\"System.Xml.Linq.XName\" data-throw-if-not-resolved=\"false\"></xref> created from this <xref href=\"System.Xml.Linq.XNamespace\" data-throw-if-not-resolved=\"false\"></xref> and the specified local name.</p>\n"
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: System.Xml.Linq.XNamespace.op_Addition(System.Xml.Linq.XNamespace,System.String)
  commentId: M:System.Xml.Linq.XNamespace.op_Addition(System.Xml.Linq.XNamespace,System.String)
  id: op_Addition(System.Xml.Linq.XNamespace,System.String)
  parent: System.Xml.Linq.XNamespace
  langs:
  - csharp
  - vb
  name: Addition(XNamespace, String)
  nameWithType: XNamespace.Addition(XNamespace, String)
  fullName: System.Xml.Linq.XNamespace.Addition(System.Xml.Linq.XNamespace, System.String)
  type: Operator
  source:
    remote:
      path: src/System.Xml.XDocument/ref/System.Xml.XDocument.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: op_Addition
    path: src/System.Xml.XDocument/ref/System.Xml.XDocument.cs
    startLine: 334
  assemblies:
  - System.Xml.XDocument
  namespace: System.Xml.Linq
  summary: "\n<p>Combines an <xref href=\"System.Xml.Linq.XNamespace\" data-throw-if-not-resolved=\"false\"></xref> object with a local name to create an <xref href=\"System.Xml.Linq.XName\" data-throw-if-not-resolved=\"false\"></xref>.</p>\n"
  syntax:
    content: public static XName operator +(XNamespace ns, string localName)
    content.vb: Public Shared Operator +(ns As XNamespace, localName As String) As XName
    parameters:
    - id: ns
      type: System.Xml.Linq.XNamespace
      description: "\n<p>An <xref href=\"System.Xml.Linq.XNamespace\" data-throw-if-not-resolved=\"false\"></xref> that contains the namespace.</p>\n"
    - id: localName
      type: System.String
      description: "\n<p>A <xref href=\"System.String\" data-throw-if-not-resolved=\"false\"></xref> that contains the local name.</p>\n"
    return:
      type: System.Xml.Linq.XName
      description: "\n<p>The new <xref href=\"System.Xml.Linq.XName\" data-throw-if-not-resolved=\"false\"></xref> constructed from the namespace and local name.</p>\n"
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: System.Xml.Linq.XNamespace.op_Equality(System.Xml.Linq.XNamespace,System.Xml.Linq.XNamespace)
  commentId: M:System.Xml.Linq.XNamespace.op_Equality(System.Xml.Linq.XNamespace,System.Xml.Linq.XNamespace)
  id: op_Equality(System.Xml.Linq.XNamespace,System.Xml.Linq.XNamespace)
  parent: System.Xml.Linq.XNamespace
  langs:
  - csharp
  - vb
  name: Equality(XNamespace, XNamespace)
  nameWithType: XNamespace.Equality(XNamespace, XNamespace)
  fullName: System.Xml.Linq.XNamespace.Equality(System.Xml.Linq.XNamespace, System.Xml.Linq.XNamespace)
  type: Operator
  source:
    remote:
      path: src/System.Xml.XDocument/ref/System.Xml.XDocument.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: op_Equality
    path: src/System.Xml.XDocument/ref/System.Xml.XDocument.cs
    startLine: 335
  assemblies:
  - System.Xml.XDocument
  namespace: System.Xml.Linq
  summary: "\n<p>Returns a value indicating whether two instances of <xref href=\"System.Xml.Linq.XNamespace\" data-throw-if-not-resolved=\"false\"></xref> are equal.</p>\n"
  syntax:
    content: public static bool operator ==(XNamespace left, XNamespace right)
    content.vb: Public Shared Operator =(left As XNamespace, right As XNamespace) As Boolean
    parameters:
    - id: left
      type: System.Xml.Linq.XNamespace
      description: "\n<p>The first <xref href=\"System.Xml.Linq.XNamespace\" data-throw-if-not-resolved=\"false\"></xref> to compare.</p>\n"
    - id: right
      type: System.Xml.Linq.XNamespace
      description: "\n<p>The second <xref href=\"System.Xml.Linq.XNamespace\" data-throw-if-not-resolved=\"false\"></xref> to compare.</p>\n"
    return:
      type: System.Boolean
      description: "\n<p>A <xref href=\"System.Boolean\" data-throw-if-not-resolved=\"false\"></xref> that indicates whether <em>left</em> and <em>right</em> are equal.</p>\n"
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: System.Xml.Linq.XNamespace.op_Implicit(System.String)~System.Xml.Linq.XNamespace
  commentId: M:System.Xml.Linq.XNamespace.op_Implicit(System.String)~System.Xml.Linq.XNamespace
  id: op_Implicit(System.String)~System.Xml.Linq.XNamespace
  parent: System.Xml.Linq.XNamespace
  langs:
  - csharp
  - vb
  name: Implicit(String to XNamespace)
  nameWithType: XNamespace.Implicit(String to XNamespace)
  fullName: System.Xml.Linq.XNamespace.Implicit(System.String to System.Xml.Linq.XNamespace)
  type: Operator
  source:
    remote:
      path: src/System.Xml.XDocument/ref/System.Xml.XDocument.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: op_Implicit
    path: src/System.Xml.XDocument/ref/System.Xml.XDocument.cs
    startLine: 336
  assemblies:
  - System.Xml.XDocument
  namespace: System.Xml.Linq
  summary: "\n<p>Converts a string containing a Uniform Resource Identifier (URI) to an <xref href=\"System.Xml.Linq.XNamespace\" data-throw-if-not-resolved=\"false\"></xref>.</p>\n"
  syntax:
    content: >-
      [CLSCompliant(false)]

      public static implicit operator XNamespace(string namespaceName)
    content.vb: >-
      <CLSCompliant(False)>

      Public Shared Widening Operator CType(namespaceName As String) As XNamespace
    parameters:
    - id: namespaceName
      type: System.String
      description: "\n<p>A <xref href=\"System.String\" data-throw-if-not-resolved=\"false\"></xref> that contains the namespace URI.</p>\n"
    return:
      type: System.Xml.Linq.XNamespace
      description: "\n<p>An <xref href=\"System.Xml.Linq.XNamespace\" data-throw-if-not-resolved=\"false\"></xref> constructed from the URI string.</p>\n"
  attributes:
  - type: System.CLSCompliantAttribute
    ctor: System.CLSCompliantAttribute.#ctor(System.Boolean)
    arguments:
    - type: System.Boolean
      value: false
  nameWithType.vb: XNamespace.Widening(String to XNamespace)
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: System.Xml.Linq.XNamespace.Widening(System.String to System.Xml.Linq.XNamespace)
  name.vb: Widening(String to XNamespace)
- uid: System.Xml.Linq.XNamespace.op_Inequality(System.Xml.Linq.XNamespace,System.Xml.Linq.XNamespace)
  commentId: M:System.Xml.Linq.XNamespace.op_Inequality(System.Xml.Linq.XNamespace,System.Xml.Linq.XNamespace)
  id: op_Inequality(System.Xml.Linq.XNamespace,System.Xml.Linq.XNamespace)
  parent: System.Xml.Linq.XNamespace
  langs:
  - csharp
  - vb
  name: Inequality(XNamespace, XNamespace)
  nameWithType: XNamespace.Inequality(XNamespace, XNamespace)
  fullName: System.Xml.Linq.XNamespace.Inequality(System.Xml.Linq.XNamespace, System.Xml.Linq.XNamespace)
  type: Operator
  source:
    remote:
      path: src/System.Xml.XDocument/ref/System.Xml.XDocument.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: op_Inequality
    path: src/System.Xml.XDocument/ref/System.Xml.XDocument.cs
    startLine: 338
  assemblies:
  - System.Xml.XDocument
  namespace: System.Xml.Linq
  summary: "\n<p>Returns a value indicating whether two instances of <xref href=\"System.Xml.Linq.XNamespace\" data-throw-if-not-resolved=\"false\"></xref> are not equal.</p>\n"
  syntax:
    content: public static bool operator !=(XNamespace left, XNamespace right)
    content.vb: Public Shared Operator <>(left As XNamespace, right As XNamespace) As Boolean
    parameters:
    - id: left
      type: System.Xml.Linq.XNamespace
      description: "\n<p>The first <xref href=\"System.Xml.Linq.XNamespace\" data-throw-if-not-resolved=\"false\"></xref> to compare.</p>\n"
    - id: right
      type: System.Xml.Linq.XNamespace
      description: "\n<p>The second <xref href=\"System.Xml.Linq.XNamespace\" data-throw-if-not-resolved=\"false\"></xref> to compare.</p>\n"
    return:
      type: System.Boolean
      description: "\n<p>A <xref href=\"System.Boolean\" data-throw-if-not-resolved=\"false\"></xref> that indicates whether <em>left</em> and <em>right</em> are not equal.</p>\n"
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: System.Xml.Linq.XNamespace.ToString
  commentId: M:System.Xml.Linq.XNamespace.ToString
  id: ToString
  parent: System.Xml.Linq.XNamespace
  langs:
  - csharp
  - vb
  name: ToString()
  nameWithType: XNamespace.ToString()
  fullName: System.Xml.Linq.XNamespace.ToString()
  type: Method
  source:
    remote:
      path: src/System.Xml.XDocument/ref/System.Xml.XDocument.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: ToString
    path: src/System.Xml.XDocument/ref/System.Xml.XDocument.cs
    startLine: 339
  assemblies:
  - System.Xml.XDocument
  namespace: System.Xml.Linq
  summary: "\n<p>Returns the URI of this <xref href=\"System.Xml.Linq.XNamespace\" data-throw-if-not-resolved=\"false\"></xref>.</p>\n"
  syntax:
    content: public override string ToString()
    content.vb: Public Overrides Function ToString As String
    return:
      type: System.String
      description: "\n<p>The URI of this <xref href=\"System.Xml.Linq.XNamespace\" data-throw-if-not-resolved=\"false\"></xref>.</p>\n"
  overridden: System.Object.ToString
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
references:
- uid: System.Xml.Linq
  commentId: N:System.Xml.Linq
  isExternal: false
  name: System.Xml.Linq
  nameWithType: System.Xml.Linq
  fullName: System.Xml.Linq
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: false
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: false
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Xml.Linq.XNamespace
  commentId: T:System.Xml.Linq.XNamespace
  parent: System.Xml.Linq
  isExternal: false
  name: XNamespace
  nameWithType: XNamespace
  fullName: System.Xml.Linq.XNamespace
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: false
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: false
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Xml.Linq.XName
  commentId: T:System.Xml.Linq.XName
  parent: System.Xml.Linq
  isExternal: false
  name: XName
  nameWithType: XName
  fullName: System.Xml.Linq.XName
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
