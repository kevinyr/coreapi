items:
- uid: System.Xml.XmlBinaryWriterSession
  commentId: T:System.Xml.XmlBinaryWriterSession
  id: XmlBinaryWriterSession
  parent: System.Xml
  children:
  - System.Xml.XmlBinaryWriterSession.#ctor
  - System.Xml.XmlBinaryWriterSession.Reset
  - System.Xml.XmlBinaryWriterSession.TryAdd(System.Xml.XmlDictionaryString,System.Int32@)
  langs:
  - csharp
  - vb
  name: XmlBinaryWriterSession
  fullName: System.Xml.XmlBinaryWriterSession
  type: Class
  source:
    remote:
      path: src/System.Private.DataContractSerialization/src/System/Xml/XmlBinaryWriterSession.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: XmlBinaryWriterSession
    path: src/System.Private.DataContractSerialization/src/System/Xml/XmlBinaryWriterSession.cs
    startLine: 15
  assemblies:
  - System.Runtime.Serialization.Xml
  namespace: System.Xml
  summary: "\n<p>Enables using a dynamic dictionary to compress common strings that appear in a message and maintain state.</p>\n"
  syntax:
    content: public class XmlBinaryWriterSession
    content.vb: Public Class XmlBinaryWriterSession
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
  nameWithType: XmlBinaryWriterSession
- uid: System.Xml.XmlBinaryWriterSession.#ctor
  commentId: M:System.Xml.XmlBinaryWriterSession.#ctor
  id: '#ctor'
  parent: System.Xml.XmlBinaryWriterSession
  langs:
  - csharp
  - vb
  name: XmlBinaryWriterSession()
  fullName: System.Xml.XmlBinaryWriterSession.XmlBinaryWriterSession()
  type: Constructor
  source:
    remote:
      path: src/System.Private.DataContractSerialization/src/System/Xml/XmlBinaryWriterSession.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: .ctor
    path: src/System.Private.DataContractSerialization/src/System/Xml/XmlBinaryWriterSession.cs
    startLine: 21
  assemblies:
  - System.Runtime.Serialization.Xml
  namespace: System.Xml
  summary: "\n<p>Creates an instance of this class. </p>\n"
  syntax:
    content: public XmlBinaryWriterSession()
    content.vb: Public Sub New
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  nameWithType: XmlBinaryWriterSession.XmlBinaryWriterSession()
- uid: System.Xml.XmlBinaryWriterSession.Reset
  commentId: M:System.Xml.XmlBinaryWriterSession.Reset
  id: Reset
  parent: System.Xml.XmlBinaryWriterSession
  langs:
  - csharp
  - vb
  name: Reset()
  fullName: System.Xml.XmlBinaryWriterSession.Reset()
  type: Method
  source:
    remote:
      path: src/System.Private.DataContractSerialization/src/System/Xml/XmlBinaryWriterSession.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: Reset
    path: src/System.Private.DataContractSerialization/src/System/Xml/XmlBinaryWriterSession.cs
    startLine: 69
  assemblies:
  - System.Runtime.Serialization.Xml
  namespace: System.Xml
  summary: "\n<p>Clears out the internal collections.</p>\n"
  syntax:
    content: public void Reset()
    content.vb: Public Sub Reset
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  nameWithType: XmlBinaryWriterSession.Reset()
- uid: System.Xml.XmlBinaryWriterSession.TryAdd(System.Xml.XmlDictionaryString,System.Int32@)
  commentId: M:System.Xml.XmlBinaryWriterSession.TryAdd(System.Xml.XmlDictionaryString,System.Int32@)
  id: TryAdd(System.Xml.XmlDictionaryString,System.Int32@)
  parent: System.Xml.XmlBinaryWriterSession
  langs:
  - csharp
  - vb
  name: TryAdd(XmlDictionaryString, out Int32)
  fullName: System.Xml.XmlBinaryWriterSession.TryAdd(System.Xml.XmlDictionaryString, out System.Int32)
  type: Method
  source:
    remote:
      path: src/System.Private.DataContractSerialization/src/System/Xml/XmlBinaryWriterSession.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: TryAdd
    path: src/System.Private.DataContractSerialization/src/System/Xml/XmlBinaryWriterSession.cs
    startLine: 28
  assemblies:
  - System.Runtime.Serialization.Xml
  namespace: System.Xml
  summary: "\n<p>Tries to add an <xref href=\"System.Xml.XmlDictionaryString\" data-throw-if-not-resolved=\"false\"></xref> to the internal collection.</p>\n"
  syntax:
    content: public virtual bool TryAdd(XmlDictionaryString value, out int key)
    content.vb: Public Overridable Function TryAdd(value As XmlDictionaryString, ByRef key As Integer) As Boolean
    parameters:
    - id: value
      type: System.Xml.XmlDictionaryString
      description: "\n<p>The <xref href=\"System.Xml.XmlDictionaryString\" data-throw-if-not-resolved=\"false\"></xref> to add.</p>\n"
    - id: key
      type: System.Int32
      description: "\n<p>The key of the <xref href=\"System.Xml.XmlDictionaryString\" data-throw-if-not-resolved=\"false\"></xref> that was successfully added.</p>\n"
    return:
      type: System.Boolean
      description: "\n<p>\n<strong>true</strong> if the string could be added; otherwise, <strong>false</strong>.</p>\n"
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "\n<p>\n<em>value</em> is <strong>null</strong>.</p>\n"
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "\n<p>An entry with key = <em>key</em> already exists.</p>\n"
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
  fullName.vb: System.Xml.XmlBinaryWriterSession.TryAdd(System.Xml.XmlDictionaryString, ByRef System.Int32)
  name.vb: TryAdd(XmlDictionaryString, ByRef Int32)
  nameWithType: XmlBinaryWriterSession.TryAdd(XmlDictionaryString, out Int32)
  nameWithType.vb: XmlBinaryWriterSession.TryAdd(XmlDictionaryString, ByRef Int32)
references:
- uid: System.Xml
  isExternal: false
  name: System.Xml
  fullName: System.Xml
  nameWithType: System.Xml
  commentId: N:System.Xml
- uid: System.Object
  parent: System
  isExternal: false
  name: Object
  fullName: System.Object
  nameWithType: Object
  commentId: T:System.Object
- uid: System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  nameWithType: Object.ToString()
  commentId: M:System.Object.ToString
- uid: System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
  nameWithType: Object.Equals(Object)
  commentId: M:System.Object.Equals(System.Object)
- uid: System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
  nameWithType: Object.Equals(Object, Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
  nameWithType: Object.ReferenceEquals(Object, Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
- uid: System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  nameWithType: Object.GetHashCode()
  commentId: M:System.Object.GetHashCode
- uid: System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  nameWithType: Object.GetType()
  commentId: M:System.Object.GetType
- uid: System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  nameWithType: Object.MemberwiseClone()
  commentId: M:System.Object.MemberwiseClone
- uid: System
  isExternal: false
  name: System
  fullName: System
  nameWithType: System
  commentId: N:System
- uid: System.Xml.XmlDictionaryString
  parent: System.Xml
  isExternal: false
  name: Xml.XmlDictionaryString
  fullName: System.Xml.XmlDictionaryString
  nameWithType: Xml.XmlDictionaryString
  commentId: T:System.Xml.XmlDictionaryString
- uid: System.Int32
  parent: System
  isExternal: false
  name: Int32
  fullName: System.Int32
  nameWithType: Int32
  commentId: T:System.Int32
- uid: System.Boolean
  parent: System
  isExternal: false
  name: Boolean
  fullName: System.Boolean
  nameWithType: Boolean
  commentId: T:System.Boolean
- uid: System.ArgumentNullException
  isExternal: false
  name: ArgumentNullException
  fullName: System.ArgumentNullException
  nameWithType: ArgumentNullException
  commentId: T:System.ArgumentNullException
- uid: System.InvalidOperationException
  parent: System
  isExternal: false
  name: InvalidOperationException
  fullName: System.InvalidOperationException
  nameWithType: InvalidOperationException
  commentId: T:System.InvalidOperationException
