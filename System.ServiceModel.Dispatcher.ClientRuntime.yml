items:
- uid: System.ServiceModel.Dispatcher.ClientRuntime
  commentId: T:System.ServiceModel.Dispatcher.ClientRuntime
  id: ClientRuntime
  parent: System.ServiceModel.Dispatcher
  children:
  - System.ServiceModel.Dispatcher.ClientRuntime.ClientMessageInspectors
  - System.ServiceModel.Dispatcher.ClientRuntime.ClientOperations
  - System.ServiceModel.Dispatcher.ClientRuntime.ContractClientType
  - System.ServiceModel.Dispatcher.ClientRuntime.ContractName
  - System.ServiceModel.Dispatcher.ClientRuntime.ContractNamespace
  - System.ServiceModel.Dispatcher.ClientRuntime.ManualAddressing
  - System.ServiceModel.Dispatcher.ClientRuntime.MaxFaultSize
  - System.ServiceModel.Dispatcher.ClientRuntime.OperationSelector
  - System.ServiceModel.Dispatcher.ClientRuntime.UnhandledClientOperation
  - System.ServiceModel.Dispatcher.ClientRuntime.Via
  langs:
  - csharp
  - vb
  name: ClientRuntime
  fullName: System.ServiceModel.Dispatcher.ClientRuntime
  type: Class
  source:
    remote:
      path: src/System.Private.ServiceModel/src/System/ServiceModel/Dispatcher/ClientRuntime.cs
      branch: master
      repo: https://github.com/dotnet/wcf.git
    id: ClientRuntime
    path: src/System.Private.ServiceModel/src/System/ServiceModel/Dispatcher/ClientRuntime.cs
    startLine: 48
  assemblies:
  - System.ServiceModel.Primitives
  namespace: System.ServiceModel.Dispatcher
  summary: "\n<p>Represents the insertion point for classes that extend the functionality of Windows Communication Foundation (WCF) client objects for all messages handled by a client application.</p>\n"
  syntax:
    content: 'public sealed class ClientRuntime : ClientRuntimeCompatBase'
    content.vb: >-
      Public NotInheritable Class ClientRuntime
          Inherits ClientRuntimeCompatBase
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  modifiers.csharp:
  - public
  - sealed
  - class
  modifiers.vb:
  - Public
  - NotInheritable
  - Class
  nameWithType: ClientRuntime
- uid: System.ServiceModel.Dispatcher.ClientRuntime.ClientMessageInspectors
  commentId: P:System.ServiceModel.Dispatcher.ClientRuntime.ClientMessageInspectors
  id: ClientMessageInspectors
  parent: System.ServiceModel.Dispatcher.ClientRuntime
  langs:
  - csharp
  - vb
  name: ClientMessageInspectors
  fullName: System.ServiceModel.Dispatcher.ClientRuntime.ClientMessageInspectors
  type: Property
  source:
    remote:
      path: src/System.Private.ServiceModel/src/System/ServiceModel/Dispatcher/ClientRuntime.cs
      branch: master
      repo: https://github.com/dotnet/wcf.git
    id: ClientMessageInspectors
    path: src/System.Private.ServiceModel/src/System/ServiceModel/Dispatcher/ClientRuntime.cs
    startLine: 340
  assemblies:
  - System.ServiceModel.Primitives
  namespace: System.ServiceModel.Dispatcher
  summary: "\n<p>Gets a collection of message inspector objects used to view or modify messages of a particular service operation.</p>\n"
  syntax:
    content: public ICollection<IClientMessageInspector> ClientMessageInspectors { get; }
    content.vb: Public ReadOnly Property ClientMessageInspectors As ICollection(Of IClientMessageInspector)
    parameters: []
    return:
      type: System.Collections.Generic.ICollection{System.ServiceModel.Dispatcher.IClientMessageInspector}
      description: "\n<p>A collection of message inspector objects used to view or modify messages of a particular service operation.</p>\n"
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
  nameWithType: ClientRuntime.ClientMessageInspectors
- uid: System.ServiceModel.Dispatcher.ClientRuntime.ClientOperations
  commentId: P:System.ServiceModel.Dispatcher.ClientRuntime.ClientOperations
  id: ClientOperations
  parent: System.ServiceModel.Dispatcher.ClientRuntime
  langs:
  - csharp
  - vb
  name: ClientOperations
  fullName: System.ServiceModel.Dispatcher.ClientRuntime.ClientOperations
  type: Property
  source:
    remote:
      path: src/System.Private.ServiceModel/src/System/ServiceModel/Dispatcher/ClientRuntime.cs
      branch: master
      repo: https://github.com/dotnet/wcf.git
    id: ClientOperations
    path: src/System.Private.ServiceModel/src/System/ServiceModel/Dispatcher/ClientRuntime.cs
    startLine: 351
  assemblies:
  - System.ServiceModel.Primitives
  namespace: System.ServiceModel.Dispatcher
  summary: "\n<p>Gets a collection of client operation objects used to attach extension objects that inspect or modify messages and behavior of a particular service operation.</p>\n"
  syntax:
    content: public ICollection<ClientOperation> ClientOperations { get; }
    content.vb: Public ReadOnly Property ClientOperations As ICollection(Of ClientOperation)
    parameters: []
    return:
      type: System.Collections.Generic.ICollection{System.ServiceModel.Dispatcher.ClientOperation}
      description: "\n<p>A collection of client operation objects used to attach extension objects that inspect or modify messages and behavior of a particular service operation.</p>\n"
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
  nameWithType: ClientRuntime.ClientOperations
- uid: System.ServiceModel.Dispatcher.ClientRuntime.ContractClientType
  commentId: P:System.ServiceModel.Dispatcher.ClientRuntime.ContractClientType
  id: ContractClientType
  parent: System.ServiceModel.Dispatcher.ClientRuntime
  langs:
  - csharp
  - vb
  name: ContractClientType
  fullName: System.ServiceModel.Dispatcher.ClientRuntime.ContractClientType
  type: Property
  source:
    remote:
      path: src/System.Private.ServiceModel/src/System/ServiceModel/Dispatcher/ClientRuntime.cs
      branch: master
      repo: https://github.com/dotnet/wcf.git
    id: ContractClientType
    path: src/System.Private.ServiceModel/src/System/ServiceModel/Dispatcher/ClientRuntime.cs
    startLine: 148
  assemblies:
  - System.ServiceModel.Primitives
  namespace: System.ServiceModel.Dispatcher
  summary: "\n<p>Gets or sets the type of the contract associated with a client.</p>\n"
  syntax:
    content: public Type ContractClientType { get; set; }
    content.vb: Public Property ContractClientType As Type
    parameters: []
    return:
      type: System.Type
      description: "\n<p>The <xref href=\"System.Type\" data-throw-if-not-resolved=\"false\"></xref> object that represents the contract associated with this client.</p>\n"
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
  nameWithType: ClientRuntime.ContractClientType
- uid: System.ServiceModel.Dispatcher.ClientRuntime.ContractName
  commentId: P:System.ServiceModel.Dispatcher.ClientRuntime.ContractName
  id: ContractName
  parent: System.ServiceModel.Dispatcher.ClientRuntime
  langs:
  - csharp
  - vb
  name: ContractName
  fullName: System.ServiceModel.Dispatcher.ClientRuntime.ContractName
  type: Property
  source:
    remote:
      path: src/System.Private.ServiceModel/src/System/ServiceModel/Dispatcher/ClientRuntime.cs
      branch: master
      repo: https://github.com/dotnet/wcf.git
    id: ContractName
    path: src/System.Private.ServiceModel/src/System/ServiceModel/Dispatcher/ClientRuntime.cs
    startLine: 138
  assemblies:
  - System.ServiceModel.Primitives
  namespace: System.ServiceModel.Dispatcher
  summary: "\n<p>Gets the name of the contract associated with a client.</p>\n"
  syntax:
    content: public string ContractName { get; }
    content.vb: Public ReadOnly Property ContractName As String
    parameters: []
    return:
      type: System.String
      description: "\n<p>The contract name for a client.</p>\n"
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
  nameWithType: ClientRuntime.ContractName
- uid: System.ServiceModel.Dispatcher.ClientRuntime.ContractNamespace
  commentId: P:System.ServiceModel.Dispatcher.ClientRuntime.ContractNamespace
  id: ContractNamespace
  parent: System.ServiceModel.Dispatcher.ClientRuntime
  langs:
  - csharp
  - vb
  name: ContractNamespace
  fullName: System.ServiceModel.Dispatcher.ClientRuntime.ContractNamespace
  type: Property
  source:
    remote:
      path: src/System.Private.ServiceModel/src/System/ServiceModel/Dispatcher/ClientRuntime.cs
      branch: master
      repo: https://github.com/dotnet/wcf.git
    id: ContractNamespace
    path: src/System.Private.ServiceModel/src/System/ServiceModel/Dispatcher/ClientRuntime.cs
    startLine: 143
  assemblies:
  - System.ServiceModel.Primitives
  namespace: System.ServiceModel.Dispatcher
  summary: "\n<p>Gets the namespace of the contract associated with a client.</p>\n"
  syntax:
    content: public string ContractNamespace { get; }
    content.vb: Public ReadOnly Property ContractNamespace As String
    parameters: []
    return:
      type: System.String
      description: "\n<p>The namespace of the contract associated with a client.</p>\n"
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
  nameWithType: ClientRuntime.ContractNamespace
- uid: System.ServiceModel.Dispatcher.ClientRuntime.ManualAddressing
  commentId: P:System.ServiceModel.Dispatcher.ClientRuntime.ManualAddressing
  id: ManualAddressing
  parent: System.ServiceModel.Dispatcher.ClientRuntime
  langs:
  - csharp
  - vb
  name: ManualAddressing
  fullName: System.ServiceModel.Dispatcher.ClientRuntime.ManualAddressing
  type: Property
  source:
    remote:
      path: src/System.Private.ServiceModel/src/System/ServiceModel/Dispatcher/ClientRuntime.cs
      branch: master
      repo: https://github.com/dotnet/wcf.git
    id: ManualAddressing
    path: src/System.Private.ServiceModel/src/System/ServiceModel/Dispatcher/ClientRuntime.cs
    startLine: 293
  assemblies:
  - System.ServiceModel.Primitives
  namespace: System.ServiceModel.Dispatcher
  summary: "\n<p>Gets or sets a value that indicates whether the client adds addressing headers to request-reply messages.</p>\n"
  syntax:
    content: public bool ManualAddressing { get; set; }
    content.vb: Public Property ManualAddressing As Boolean
    parameters: []
    return:
      type: System.Boolean
      description: "\n<p>\n<strong>true</strong> if the client does not add any addressing headers; otherwise, <strong>false</strong>. The default is <strong>false</strong>. See Remarks.</p>\n"
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
  nameWithType: ClientRuntime.ManualAddressing
- uid: System.ServiceModel.Dispatcher.ClientRuntime.MaxFaultSize
  commentId: P:System.ServiceModel.Dispatcher.ClientRuntime.MaxFaultSize
  id: MaxFaultSize
  parent: System.ServiceModel.Dispatcher.ClientRuntime
  langs:
  - csharp
  - vb
  name: MaxFaultSize
  fullName: System.ServiceModel.Dispatcher.ClientRuntime.MaxFaultSize
  type: Property
  source:
    remote:
      path: src/System.Private.ServiceModel/src/System/ServiceModel/Dispatcher/ClientRuntime.cs
      branch: master
      repo: https://github.com/dotnet/wcf.git
    id: MaxFaultSize
    path: src/System.Private.ServiceModel/src/System/ServiceModel/Dispatcher/ClientRuntime.cs
    startLine: 275
  assemblies:
  - System.ServiceModel.Primitives
  namespace: System.ServiceModel.Dispatcher
  summary: "\n<p>Gets or sets the maximum fault size.</p>\n"
  syntax:
    content: public int MaxFaultSize { get; set; }
    content.vb: Public Property MaxFaultSize As Integer
    parameters: []
    return:
      type: System.Int32
      description: "\n<p>An integer representing the maximum fault size.</p>\n"
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
  nameWithType: ClientRuntime.MaxFaultSize
- uid: System.ServiceModel.Dispatcher.ClientRuntime.OperationSelector
  commentId: P:System.ServiceModel.Dispatcher.ClientRuntime.OperationSelector
  id: OperationSelector
  parent: System.ServiceModel.Dispatcher.ClientRuntime
  langs:
  - csharp
  - vb
  name: OperationSelector
  fullName: System.ServiceModel.Dispatcher.ClientRuntime.OperationSelector
  type: Property
  source:
    remote:
      path: src/System.Private.ServiceModel/src/System/ServiceModel/Dispatcher/ClientRuntime.cs
      branch: master
      repo: https://github.com/dotnet/wcf.git
    id: OperationSelector
    path: src/System.Private.ServiceModel/src/System/ServiceModel/Dispatcher/ClientRuntime.cs
    startLine: 362
  assemblies:
  - System.ServiceModel.Primitives
  namespace: System.ServiceModel.Dispatcher
  summary: "\n<p>Gets or sets an <xref href=\"System.ServiceModel.Dispatcher.IClientOperationSelector\" data-throw-if-not-resolved=\"false\"></xref> implementation that can be used to select a <xref href=\"System.ServiceModel.Dispatcher.ClientOperation\" data-throw-if-not-resolved=\"false\"></xref>.</p>\n"
  syntax:
    content: public IClientOperationSelector OperationSelector { get; set; }
    content.vb: Public Property OperationSelector As IClientOperationSelector
    parameters: []
    return:
      type: System.ServiceModel.Dispatcher.IClientOperationSelector
      description: "\n<p>An <xref href=\"System.ServiceModel.Dispatcher.IClientOperationSelector\" data-throw-if-not-resolved=\"false\"></xref> object that selects a <xref href=\"System.ServiceModel.Dispatcher.ClientOperation\" data-throw-if-not-resolved=\"false\"></xref>.</p>\n"
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
  nameWithType: ClientRuntime.OperationSelector
- uid: System.ServiceModel.Dispatcher.ClientRuntime.UnhandledClientOperation
  commentId: P:System.ServiceModel.Dispatcher.ClientRuntime.UnhandledClientOperation
  id: UnhandledClientOperation
  parent: System.ServiceModel.Dispatcher.ClientRuntime
  langs:
  - csharp
  - vb
  name: UnhandledClientOperation
  fullName: System.ServiceModel.Dispatcher.ClientRuntime.UnhandledClientOperation
  type: Property
  source:
    remote:
      path: src/System.Private.ServiceModel/src/System/ServiceModel/Dispatcher/ClientRuntime.cs
      branch: master
      repo: https://github.com/dotnet/wcf.git
    id: UnhandledClientOperation
    path: src/System.Private.ServiceModel/src/System/ServiceModel/Dispatcher/ClientRuntime.cs
    startLine: 380
  assemblies:
  - System.ServiceModel.Primitives
  namespace: System.ServiceModel.Dispatcher
  summary: "\n<p>Gets the client operation for methods that do not have a corresponding <xref href=\"System.ServiceModel.Dispatcher.ClientOperation\" data-throw-if-not-resolved=\"false\"></xref> in the <xref href=\"System.ServiceModel.Dispatcher.ClientRuntime.Operations\" data-throw-if-not-resolved=\"false\"></xref> collection.</p>\n"
  syntax:
    content: public ClientOperation UnhandledClientOperation { get; }
    content.vb: Public ReadOnly Property UnhandledClientOperation As ClientOperation
    parameters: []
    return:
      type: System.ServiceModel.Dispatcher.ClientOperation
      description: "\n<p>A <xref href=\"System.ServiceModel.Dispatcher.ClientOperation\" data-throw-if-not-resolved=\"false\"></xref> that represents the method to which the current message contents are routed when the operation selector cannot find an operation that matches the message.</p>\n"
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
  nameWithType: ClientRuntime.UnhandledClientOperation
- uid: System.ServiceModel.Dispatcher.ClientRuntime.Via
  commentId: P:System.ServiceModel.Dispatcher.ClientRuntime.Via
  id: Via
  parent: System.ServiceModel.Dispatcher.ClientRuntime
  langs:
  - csharp
  - vb
  name: Via
  fullName: System.ServiceModel.Dispatcher.ClientRuntime.Via
  type: Property
  source:
    remote:
      path: src/System.Private.ServiceModel/src/System/ServiceModel/Dispatcher/ClientRuntime.cs
      branch: master
      repo: https://github.com/dotnet/wcf.git
    id: Via
    path: src/System.Private.ServiceModel/src/System/ServiceModel/Dispatcher/ClientRuntime.cs
    startLine: 184
  assemblies:
  - System.ServiceModel.Primitives
  namespace: System.ServiceModel.Dispatcher
  summary: "\n<p>Gets or sets the transport address that is used to send messages through the client.</p>\n"
  syntax:
    content: public Uri Via { get; set; }
    content.vb: Public Property Via As Uri
    parameters: []
    return:
      type: Uri
      description: "\n<p>A <xref href=\"System.Uri\" data-throw-if-not-resolved=\"false\"></xref> that is the destination address for the transport. The default value is the <xref href=\"System.ServiceModel.EndpointAddress.Uri\" data-throw-if-not-resolved=\"false\"></xref> value of the client.</p>\n"
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
  nameWithType: ClientRuntime.Via
references:
- uid: System.ServiceModel.Dispatcher
  isExternal: false
  name: System.ServiceModel.Dispatcher
  fullName: System.ServiceModel.Dispatcher
  nameWithType: System.ServiceModel.Dispatcher
  commentId: N:System.ServiceModel.Dispatcher
- uid: System.Object
  parent: System
  isExternal: false
  name: Object
  fullName: System.Object
  nameWithType: Object
  commentId: T:System.Object
- uid: System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  nameWithType: Object.ToString()
  commentId: M:System.Object.ToString
- uid: System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
  nameWithType: Object.Equals(Object)
  commentId: M:System.Object.Equals(System.Object)
- uid: System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
  nameWithType: Object.Equals(Object, Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
  nameWithType: Object.ReferenceEquals(Object, Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
- uid: System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  nameWithType: Object.GetHashCode()
  commentId: M:System.Object.GetHashCode
- uid: System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  nameWithType: Object.GetType()
  commentId: M:System.Object.GetType
- uid: System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  nameWithType: Object.MemberwiseClone()
  commentId: M:System.Object.MemberwiseClone
- uid: System
  isExternal: false
  name: System
  fullName: System
  nameWithType: System
  commentId: N:System
- uid: System.Collections.Generic.ICollection{System.ServiceModel.Dispatcher.IClientMessageInspector}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.ICollection`1
  name: ICollection<IClientMessageInspector>
  fullName: System.Collections.Generic.ICollection<System.ServiceModel.Dispatcher.IClientMessageInspector>
  fullname.vb: System.Collections.Generic.ICollection(Of System.ServiceModel.Dispatcher.IClientMessageInspector)
  name.vb: ICollection(Of IClientMessageInspector)
  spec.csharp:
  - uid: System.Collections.Generic.ICollection`1
    name: ICollection
    fullName: System.Collections.Generic.ICollection
    isExternal: true
  - name: <
    fullName: <
  - uid: System.ServiceModel.Dispatcher.IClientMessageInspector
    name: IClientMessageInspector
    fullName: System.ServiceModel.Dispatcher.IClientMessageInspector
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.ICollection`1
    name: ICollection
    fullName: System.Collections.Generic.ICollection
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - uid: System.ServiceModel.Dispatcher.IClientMessageInspector
    name: IClientMessageInspector
    fullName: System.ServiceModel.Dispatcher.IClientMessageInspector
  - name: )
    fullName: )
  nameWithType: ICollection<IClientMessageInspector>
  nameWithType.vb: ICollection(Of IClientMessageInspector)
  commentId: T:System.Collections.Generic.ICollection{System.ServiceModel.Dispatcher.IClientMessageInspector}
- uid: System.Collections.Generic.ICollection`1
  isExternal: false
  name: ICollection<T>
  fullName: System.Collections.Generic.ICollection<T>
  fullname.vb: System.Collections.Generic.ICollection(Of T)
  name.vb: ICollection(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.ICollection`1
    name: ICollection
    fullName: System.Collections.Generic.ICollection
  - name: <
    fullName: <
  - name: T
    fullName: T
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.ICollection`1
    name: ICollection
    fullName: System.Collections.Generic.ICollection
  - name: '(Of '
    fullName: '(Of '
  - name: T
    fullName: T
  - name: )
    fullName: )
  nameWithType: ICollection<T>
  nameWithType.vb: ICollection(Of T)
  commentId: T:System.Collections.Generic.ICollection`1
- uid: System.Collections.Generic
  isExternal: false
  name: System.Collections.Generic
  fullName: System.Collections.Generic
  nameWithType: System.Collections.Generic
  commentId: N:System.Collections.Generic
- uid: System.Collections.Generic.ICollection{System.ServiceModel.Dispatcher.ClientOperation}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.ICollection`1
  name: ICollection<ClientOperation>
  fullName: System.Collections.Generic.ICollection<System.ServiceModel.Dispatcher.ClientOperation>
  fullname.vb: System.Collections.Generic.ICollection(Of System.ServiceModel.Dispatcher.ClientOperation)
  name.vb: ICollection(Of ClientOperation)
  spec.csharp:
  - uid: System.Collections.Generic.ICollection`1
    name: ICollection
    fullName: System.Collections.Generic.ICollection
    isExternal: true
  - name: <
    fullName: <
  - uid: System.ServiceModel.Dispatcher.ClientOperation
    name: ClientOperation
    fullName: System.ServiceModel.Dispatcher.ClientOperation
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.ICollection`1
    name: ICollection
    fullName: System.Collections.Generic.ICollection
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - uid: System.ServiceModel.Dispatcher.ClientOperation
    name: ClientOperation
    fullName: System.ServiceModel.Dispatcher.ClientOperation
  - name: )
    fullName: )
  nameWithType: ICollection<ClientOperation>
  nameWithType.vb: ICollection(Of ClientOperation)
  commentId: T:System.Collections.Generic.ICollection{System.ServiceModel.Dispatcher.ClientOperation}
- uid: System.Type
  parent: System
  isExternal: false
  name: Type
  fullName: System.Type
  nameWithType: Type
  commentId: T:System.Type
- uid: System.String
  parent: System
  isExternal: false
  name: String
  fullName: System.String
  nameWithType: String
  commentId: T:System.String
- uid: System.Boolean
  parent: System
  isExternal: false
  name: Boolean
  fullName: System.Boolean
  nameWithType: Boolean
  commentId: T:System.Boolean
- uid: System.Int32
  parent: System
  isExternal: false
  name: Int32
  fullName: System.Int32
  nameWithType: Int32
  commentId: T:System.Int32
- uid: System.ServiceModel.Dispatcher.IClientOperationSelector
  parent: System.ServiceModel.Dispatcher
  isExternal: false
  name: IClientOperationSelector
  fullName: System.ServiceModel.Dispatcher.IClientOperationSelector
  nameWithType: IClientOperationSelector
  commentId: T:System.ServiceModel.Dispatcher.IClientOperationSelector
- uid: System.ServiceModel.Dispatcher.ClientOperation
  parent: System.ServiceModel.Dispatcher
  isExternal: false
  name: ClientOperation
  fullName: System.ServiceModel.Dispatcher.ClientOperation
  nameWithType: ClientOperation
  commentId: T:System.ServiceModel.Dispatcher.ClientOperation
- uid: System.Uri
  parent: System
  isExternal: false
  name: Uri
  fullName: System.Uri
  nameWithType: Uri
  commentId: T:System.Uri
