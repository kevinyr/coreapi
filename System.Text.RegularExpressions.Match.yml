### YamlMime:ManagedReference
items:
- uid: System.Text.RegularExpressions.Match
  commentId: T:System.Text.RegularExpressions.Match
  id: Match
  parent: System.Text.RegularExpressions
  children:
  - System.Text.RegularExpressions.Match.Empty
  - System.Text.RegularExpressions.Match.Groups
  - System.Text.RegularExpressions.Match.NextMatch
  - System.Text.RegularExpressions.Match.Result(System.String)
  langs:
  - csharp
  - vb
  name: Match
  nameWithType: Match
  fullName: System.Text.RegularExpressions.Match
  type: Class
  source:
    remote:
      path: src/System.Text.RegularExpressions/src/System/Text/RegularExpressions/RegexMatch.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: Match
    path: src/System.Text.RegularExpressions/src/System/Text/RegularExpressions/RegexMatch.cs
    startLine: 36
  assemblies:
  - System.Text.RegularExpressions
  namespace: System.Text.RegularExpressions
  summary: "\n<p>Represents the results from a single regular expression match.</p>\n"
  syntax:
    content: 'public class Match : Group'
    content.vb: >-
      Public Class Match
          Inherits Group
  seealso:
  - linkId: System.Text.RegularExpressions.MatchCollection
    commentId: T:System.Text.RegularExpressions.MatchCollection
  - linkId: System.Text.RegularExpressions.Regex
    commentId: T:System.Text.RegularExpressions.Regex
  inheritance:
  - System.Object
  - System.Text.RegularExpressions.Capture
  - System.Text.RegularExpressions.Group
  inheritedMembers:
  - System.Text.RegularExpressions.Group.Captures
  - System.Text.RegularExpressions.Group.Name
  - System.Text.RegularExpressions.Group.Success
  - System.Text.RegularExpressions.Capture.Index
  - System.Text.RegularExpressions.Capture.Length
  - System.Text.RegularExpressions.Capture.Value
  - System.Text.RegularExpressions.Capture.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: System.Text.RegularExpressions.Match.Empty
  commentId: P:System.Text.RegularExpressions.Match.Empty
  id: Empty
  parent: System.Text.RegularExpressions.Match
  langs:
  - csharp
  - vb
  name: Empty
  nameWithType: Match.Empty
  fullName: System.Text.RegularExpressions.Match.Empty
  type: Property
  source:
    remote:
      path: src/System.Text.RegularExpressions/src/System/Text/RegularExpressions/RegexMatch.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: Empty
    path: src/System.Text.RegularExpressions/src/System/Text/RegularExpressions/RegexMatch.cs
    startLine: 57
  assemblies:
  - System.Text.RegularExpressions
  namespace: System.Text.RegularExpressions
  summary: "\n<p>Gets the empty group. All failed matches return this empty match.</p>\n"
  syntax:
    content: public static Match Empty { get; }
    content.vb: Public Shared ReadOnly Property Empty As Match
    parameters: []
    return:
      type: System.Text.RegularExpressions.Match
      description: "\n<p>An empty match.</p>\n"
  modifiers.csharp:
  - public
  - static
  - get
  modifiers.vb:
  - Public
  - Shared
  - ReadOnly
- uid: System.Text.RegularExpressions.Match.Groups
  commentId: P:System.Text.RegularExpressions.Match.Groups
  id: Groups
  parent: System.Text.RegularExpressions.Match
  langs:
  - csharp
  - vb
  name: Groups
  nameWithType: Match.Groups
  fullName: System.Text.RegularExpressions.Match.Groups
  type: Property
  source:
    remote:
      path: src/System.Text.RegularExpressions/src/System/Text/RegularExpressions/RegexMatch.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: Groups
    path: src/System.Text.RegularExpressions/src/System/Text/RegularExpressions/RegexMatch.cs
    startLine: 102
  assemblies:
  - System.Text.RegularExpressions
  namespace: System.Text.RegularExpressions
  summary: "\n<p>Gets a collection of groups matched by the regular expression.</p>\n"
  syntax:
    content: public virtual GroupCollection Groups { get; }
    content.vb: Public Overridable ReadOnly Property Groups As GroupCollection
    parameters: []
    return:
      type: System.Text.RegularExpressions.GroupCollection
      description: "\n<p>The character groups matched by the pattern.</p>\n"
  modifiers.csharp:
  - public
  - virtual
  - get
  modifiers.vb:
  - Public
  - Overridable
  - ReadOnly
- uid: System.Text.RegularExpressions.Match.NextMatch
  commentId: M:System.Text.RegularExpressions.Match.NextMatch
  id: NextMatch
  parent: System.Text.RegularExpressions.Match
  langs:
  - csharp
  - vb
  name: NextMatch()
  nameWithType: Match.NextMatch()
  fullName: System.Text.RegularExpressions.Match.NextMatch()
  type: Method
  source:
    remote:
      path: src/System.Text.RegularExpressions/src/System/Text/RegularExpressions/RegexMatch.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: NextMatch
    path: src/System.Text.RegularExpressions/src/System/Text/RegularExpressions/RegexMatch.cs
    startLine: 118
  assemblies:
  - System.Text.RegularExpressions
  namespace: System.Text.RegularExpressions
  summary: "\n<p>Returns a new <xref href=\"System.Text.RegularExpressions.Match\" data-throw-if-not-resolved=\"false\"></xref> object with the results for the next match, starting at the position at which the last match ended (at the character after the last matched character).</p>\n"
  syntax:
    content: public Match NextMatch()
    content.vb: Public Function NextMatch As Match
    return:
      type: System.Text.RegularExpressions.Match
      description: "\n<p>The next regular expression match.</p>\n"
  exceptions:
  - type: System.Text.RegularExpressions.RegexMatchTimeoutException
    commentId: T:System.Text.RegularExpressions.RegexMatchTimeoutException
    description: "\n<p>A time-out occurred.</p>\n"
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: System.Text.RegularExpressions.Match.Result(System.String)
  commentId: M:System.Text.RegularExpressions.Match.Result(System.String)
  id: Result(System.String)
  parent: System.Text.RegularExpressions.Match
  langs:
  - csharp
  - vb
  name: Result(String)
  nameWithType: Match.Result(String)
  fullName: System.Text.RegularExpressions.Match.Result(System.String)
  type: Method
  source:
    remote:
      path: src/System.Text.RegularExpressions/src/System/Text/RegularExpressions/RegexMatch.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: Result
    path: src/System.Text.RegularExpressions/src/System/Text/RegularExpressions/RegexMatch.cs
    startLine: 131
  assemblies:
  - System.Text.RegularExpressions
  namespace: System.Text.RegularExpressions
  summary: "\n<p>Returns the expansion of the specified replacement pattern. </p>\n"
  syntax:
    content: public virtual string Result(string replacement)
    content.vb: Public Overridable Function Result(replacement As String) As String
    parameters:
    - id: replacement
      type: System.String
      description: "\n<p>The replacement pattern to use. </p>\n"
    return:
      type: System.String
      description: "\n<p>The expanded version of the <em>replacement</em> parameter.</p>\n"
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "\n<p>\n<em>replacement</em> is <strong>null</strong>.</p>\n"
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "\n<p>Expansion is not allowed for this pattern.</p>\n"
  seealso:
  - linkId: System.Text.RegularExpressions.Regex.Replace(System.String,System.String)
    commentId: M:System.Text.RegularExpressions.Regex.Replace(System.String,System.String)
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
references:
- uid: System.Text.RegularExpressions
  commentId: N:System.Text.RegularExpressions
  isExternal: false
  name: System.Text.RegularExpressions
  nameWithType: System.Text.RegularExpressions
  fullName: System.Text.RegularExpressions
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: false
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Text.RegularExpressions.Capture
  commentId: T:System.Text.RegularExpressions.Capture
  parent: System.Text.RegularExpressions
  isExternal: false
  name: Capture
  nameWithType: Capture
  fullName: System.Text.RegularExpressions.Capture
- uid: System.Text.RegularExpressions.Group
  commentId: T:System.Text.RegularExpressions.Group
  parent: System.Text.RegularExpressions
  isExternal: false
  name: Group
  nameWithType: Group
  fullName: System.Text.RegularExpressions.Group
- uid: System.Text.RegularExpressions.Group.Captures
  commentId: P:System.Text.RegularExpressions.Group.Captures
  parent: System.Text.RegularExpressions.Group
  isExternal: false
  name: Captures
  nameWithType: Group.Captures
  fullName: System.Text.RegularExpressions.Group.Captures
- uid: System.Text.RegularExpressions.Group.Name
  commentId: P:System.Text.RegularExpressions.Group.Name
  parent: System.Text.RegularExpressions.Group
  isExternal: false
  name: Name
  nameWithType: Group.Name
  fullName: System.Text.RegularExpressions.Group.Name
- uid: System.Text.RegularExpressions.Group.Success
  commentId: P:System.Text.RegularExpressions.Group.Success
  parent: System.Text.RegularExpressions.Group
  isExternal: false
  name: Success
  nameWithType: Group.Success
  fullName: System.Text.RegularExpressions.Group.Success
- uid: System.Text.RegularExpressions.Capture.Index
  commentId: P:System.Text.RegularExpressions.Capture.Index
  parent: System.Text.RegularExpressions.Capture
  isExternal: false
  name: Index
  nameWithType: Capture.Index
  fullName: System.Text.RegularExpressions.Capture.Index
- uid: System.Text.RegularExpressions.Capture.Length
  commentId: P:System.Text.RegularExpressions.Capture.Length
  parent: System.Text.RegularExpressions.Capture
  isExternal: false
  name: Length
  nameWithType: Capture.Length
  fullName: System.Text.RegularExpressions.Capture.Length
- uid: System.Text.RegularExpressions.Capture.Value
  commentId: P:System.Text.RegularExpressions.Capture.Value
  parent: System.Text.RegularExpressions.Capture
  isExternal: false
  name: Value
  nameWithType: Capture.Value
  fullName: System.Text.RegularExpressions.Capture.Value
- uid: System.Text.RegularExpressions.Capture.ToString
  commentId: M:System.Text.RegularExpressions.Capture.ToString
  parent: System.Text.RegularExpressions.Capture
  isExternal: false
  name: ToString()
  nameWithType: Capture.ToString()
  fullName: System.Text.RegularExpressions.Capture.ToString()
  spec.csharp:
  - uid: System.Text.RegularExpressions.Capture.ToString
    name: ToString
    nameWithType: Capture.ToString
    fullName: System.Text.RegularExpressions.Capture.ToString
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Text.RegularExpressions.Capture.ToString
    name: ToString
    nameWithType: Capture.ToString
    fullName: System.Text.RegularExpressions.Capture.ToString
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: System.Text.RegularExpressions.Match
  commentId: T:System.Text.RegularExpressions.Match
  parent: System.Text.RegularExpressions
  isExternal: false
  name: Match
  nameWithType: Match
  fullName: System.Text.RegularExpressions.Match
- uid: System.Text.RegularExpressions.GroupCollection
  commentId: T:System.Text.RegularExpressions.GroupCollection
  parent: System.Text.RegularExpressions
  isExternal: false
  name: GroupCollection
  nameWithType: GroupCollection
  fullName: System.Text.RegularExpressions.GroupCollection
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: false
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Text.RegularExpressions.RegexMatchTimeoutException
  commentId: T:System.Text.RegularExpressions.RegexMatchTimeoutException
  isExternal: false
  name: RegexMatchTimeoutException
  nameWithType: RegexMatchTimeoutException
  fullName: System.Text.RegularExpressions.RegexMatchTimeoutException
- uid: System.ArgumentNullException
  commentId: T:System.ArgumentNullException
  isExternal: false
  name: ArgumentNullException
  nameWithType: ArgumentNullException
  fullName: System.ArgumentNullException
- uid: System.NotSupportedException
  commentId: T:System.NotSupportedException
  parent: System
  isExternal: false
  name: NotSupportedException
  nameWithType: NotSupportedException
  fullName: System.NotSupportedException
