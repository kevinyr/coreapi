### YamlMime:ManagedReference
items:
- uid: System.Collections.Generic.EqualityComparer`1
  commentId: T:System.Collections.Generic.EqualityComparer`1
  id: EqualityComparer`1
  parent: System.Collections.Generic
  children:
  - System.Collections.Generic.EqualityComparer`1.#ctor
  - System.Collections.Generic.EqualityComparer`1.Default
  - System.Collections.Generic.EqualityComparer`1.Equals(`0,`0)
  - System.Collections.Generic.EqualityComparer`1.GetHashCode(`0)
  - System.Collections.Generic.EqualityComparer`1.System#Collections#IEqualityComparer#Equals(System.Object,System.Object)
  - System.Collections.Generic.EqualityComparer`1.System#Collections#IEqualityComparer#GetHashCode(System.Object)
  langs:
  - csharp
  - vb
  name: EqualityComparer<T>
  nameWithType: EqualityComparer<T>
  fullName: System.Collections.Generic.EqualityComparer<T>
  type: Class
  source:
    remote:
      path: src/mscorlib/src/System/Collections/Generic/EqualityComparer.cs
      branch: master
      repo: https://github.com/dotnet/coreclr.git
    id: EqualityComparer
    path: src/mscorlib/src/System/Collections/Generic/EqualityComparer.cs
    startLine: 17
  assemblies:
  - System.Collections
  namespace: System.Collections.Generic
  summary: "\n<p>Provides a base class for implementations of the <xref href=\"System.Collections.Generic.IEqualityComparer`1\" data-throw-if-not-resolved=\"false\"></xref> generic interface.</p>\n"
  syntax:
    content: >-
      [Serializable]

      [TypeDependency("System.Collections.Generic.ObjectEqualityComparer`1")]

      public abstract class EqualityComparer<T> : IEqualityComparer, IEqualityComparer<T>
    content.vb: >-
      <Serializable>

      <TypeDependency("System.Collections.Generic.ObjectEqualityComparer`1")>

      Public MustInherit Class EqualityComparer(Of T)
          Implements IEqualityComparer, IEqualityComparer(Of T)
    typeParameters:
    - id: T
      description: "\n<p>The type of objects to compare.</p>\n"
  seealso:
  - linkId: System.Collections.Generic.IEqualityComparer`1
    commentId: T:System.Collections.Generic.IEqualityComparer`1
  - linkId: System.IEquatable`1
    commentId: T:System.IEquatable`1
  inheritance:
  - System.Object
  implements:
  - System.Collections.Generic.IEqualityComparer{{T}}
  - System.Collections.IEqualityComparer
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  nameWithType.vb: EqualityComparer(Of T)
  modifiers.csharp:
  - public
  - abstract
  - class
  modifiers.vb:
  - Public
  - MustInherit
  - Class
  fullName.vb: System.Collections.Generic.EqualityComparer(Of T)
  name.vb: EqualityComparer(Of T)
- uid: System.Collections.Generic.EqualityComparer`1.#ctor
  commentId: M:System.Collections.Generic.EqualityComparer`1.#ctor
  id: '#ctor'
  parent: System.Collections.Generic.EqualityComparer`1
  langs:
  - csharp
  - vb
  name: EqualityComparer()
  nameWithType: EqualityComparer<T>.EqualityComparer()
  fullName: System.Collections.Generic.EqualityComparer<T>.EqualityComparer()
  type: Constructor
  source:
    remote:
      path: src/System.Collections/ref/System.Collections.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: .ctor
    path: src/System.Collections/ref/System.Collections.cs
    startLine: 159
  assemblies:
  - System.Collections
  namespace: System.Collections.Generic
  summary: "\n<p>Initializes a new instance of the <xref href=\"System.Collections.Generic.EqualityComparer`1\" data-throw-if-not-resolved=\"false\"></xref> class.</p>\n"
  syntax:
    content: protected EqualityComparer()
    content.vb: Protected Sub New
  nameWithType.vb: EqualityComparer(Of T).EqualityComparer()
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
  fullName.vb: System.Collections.Generic.EqualityComparer(Of T).EqualityComparer()
- uid: System.Collections.Generic.EqualityComparer`1.Default
  commentId: P:System.Collections.Generic.EqualityComparer`1.Default
  id: Default
  parent: System.Collections.Generic.EqualityComparer`1
  langs:
  - csharp
  - vb
  name: Default
  nameWithType: EqualityComparer<T>.Default
  fullName: System.Collections.Generic.EqualityComparer<T>.Default
  type: Property
  source:
    remote:
      path: src/mscorlib/src/System/Collections/Generic/EqualityComparer.cs
      branch: master
      repo: https://github.com/dotnet/coreclr.git
    id: Default
    path: src/mscorlib/src/System/Collections/Generic/EqualityComparer.cs
    startLine: 23
  assemblies:
  - System.Collections
  namespace: System.Collections.Generic
  summary: "\n<p>Returns a default equality comparer for the type specified by the generic argument.</p>\n"
  syntax:
    content: public static EqualityComparer<T> Default { get; }
    content.vb: Public Shared ReadOnly Property Default As EqualityComparer(Of T)
    parameters: []
    return:
      type: System.Collections.Generic.EqualityComparer`1
      description: "\n<p>The default instance of the <xref href=\"System.Collections.Generic.EqualityComparer`1\" data-throw-if-not-resolved=\"false\"></xref> class for type <em>T</em>.</p>\n"
  seealso:
  - linkId: System.Collections.Generic.IEqualityComparer`1
    commentId: T:System.Collections.Generic.IEqualityComparer`1
  - linkId: System.IEquatable`1
    commentId: T:System.IEquatable`1
  - linkId: System.Object
    commentId: T:System.Object
  nameWithType.vb: EqualityComparer(Of T).Default
  modifiers.csharp:
  - public
  - static
  - get
  modifiers.vb:
  - Public
  - Shared
  - ReadOnly
  fullName.vb: System.Collections.Generic.EqualityComparer(Of T).Default
- uid: System.Collections.Generic.EqualityComparer`1.Equals(`0,`0)
  commentId: M:System.Collections.Generic.EqualityComparer`1.Equals(`0,`0)
  id: Equals(`0,`0)
  parent: System.Collections.Generic.EqualityComparer`1
  langs:
  - csharp
  - vb
  name: Equals(T, T)
  nameWithType: EqualityComparer<T>.Equals(T, T)
  fullName: System.Collections.Generic.EqualityComparer<T>.Equals(T, T)
  type: Method
  source:
    remote:
      path: src/mscorlib/src/System/Collections/Generic/EqualityComparer.cs
      branch: master
      repo: https://github.com/dotnet/coreclr.git
    id: Equals
    path: src/mscorlib/src/System/Collections/Generic/EqualityComparer.cs
    startLine: 93
  assemblies:
  - System.Collections
  namespace: System.Collections.Generic
  summary: "\n<p>When overridden in a derived class, determines whether two objects of type <em>T</em> are equal.</p>\n"
  syntax:
    content: public abstract bool Equals(T x, T y)
    content.vb: Public MustOverride Function Equals(x As T, y As T) As Boolean
    parameters:
    - id: x
      type: '{T}'
      description: "\n<p>The first object to compare.</p>\n"
    - id: y
      type: '{T}'
      description: "\n<p>The second object to compare.</p>\n"
    return:
      type: System.Boolean
      description: "\n<p>\n<strong>true</strong> if the specified objects are equal; otherwise, <strong>false</strong>.</p>\n"
  implements:
  - System.Collections.Generic.IEqualityComparer{{T}}.Equals({T},{T})
  nameWithType.vb: EqualityComparer(Of T).Equals(T, T)
  modifiers.csharp:
  - public
  - abstract
  modifiers.vb:
  - Public
  - MustOverride
  fullName.vb: System.Collections.Generic.EqualityComparer(Of T).Equals(T, T)
- uid: System.Collections.Generic.EqualityComparer`1.GetHashCode(`0)
  commentId: M:System.Collections.Generic.EqualityComparer`1.GetHashCode(`0)
  id: GetHashCode(`0)
  parent: System.Collections.Generic.EqualityComparer`1
  langs:
  - csharp
  - vb
  name: GetHashCode(T)
  nameWithType: EqualityComparer<T>.GetHashCode(T)
  fullName: System.Collections.Generic.EqualityComparer<T>.GetHashCode(T)
  type: Method
  source:
    remote:
      path: src/mscorlib/src/System/Collections/Generic/EqualityComparer.cs
      branch: master
      repo: https://github.com/dotnet/coreclr.git
    id: GetHashCode
    path: src/mscorlib/src/System/Collections/Generic/EqualityComparer.cs
    startLine: 95
  assemblies:
  - System.Collections
  namespace: System.Collections.Generic
  summary: "\n<p>When overridden in a derived class, serves as a hash function for the specified object for hashing algorithms and data structures, such as a hash table.</p>\n"
  syntax:
    content: public abstract int GetHashCode(T obj)
    content.vb: Public MustOverride Function GetHashCode(obj As T) As Integer
    parameters:
    - id: obj
      type: '{T}'
      description: "\n<p>The object for which to get a hash code.</p>\n"
    return:
      type: System.Int32
      description: "\n<p>A hash code for the specified object.</p>\n"
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "\n<p>The type of <em>obj</em> is a reference type and <em>obj</em> is <strong>null</strong>.</p>\n"
  implements:
  - System.Collections.Generic.IEqualityComparer{{T}}.GetHashCode({T})
  nameWithType.vb: EqualityComparer(Of T).GetHashCode(T)
  modifiers.csharp:
  - public
  - abstract
  modifiers.vb:
  - Public
  - MustOverride
  fullName.vb: System.Collections.Generic.EqualityComparer(Of T).GetHashCode(T)
- uid: System.Collections.Generic.EqualityComparer`1.System#Collections#IEqualityComparer#Equals(System.Object,System.Object)
  commentId: M:System.Collections.Generic.EqualityComparer`1.System#Collections#IEqualityComparer#Equals(System.Object,System.Object)
  id: System#Collections#IEqualityComparer#Equals(System.Object,System.Object)
  isEii: true
  parent: System.Collections.Generic.EqualityComparer`1
  langs:
  - csharp
  - vb
  name: IEqualityComparer.Equals(Object, Object)
  nameWithType: EqualityComparer<T>.IEqualityComparer.Equals(Object, Object)
  fullName: System.Collections.Generic.EqualityComparer<T>.System.Collections.IEqualityComparer.Equals(System.Object, System.Object)
  type: Method
  source:
    remote:
      path: src/mscorlib/src/System/Collections/Generic/EqualityComparer.cs
      branch: master
      repo: https://github.com/dotnet/coreclr.git
    id: System.Collections.IEqualityComparer.Equals
    path: src/mscorlib/src/System/Collections/Generic/EqualityComparer.cs
    startLine: 121
  assemblies:
  - System.Collections
  namespace: System.Collections.Generic
  summary: "\n<p>Determines whether the specified objects are equal.</p>\n"
  syntax:
    content: bool IEqualityComparer.Equals(object x, object y)
    content.vb: Function System.Collections.IEqualityComparer.Equals(x As Object, y As Object) As Boolean Implements IEqualityComparer.Equals
    parameters:
    - id: x
      type: System.Object
      description: "\n<p>The first object to compare.</p>\n"
    - id: y
      type: System.Object
      description: "\n<p>The second object to compare.</p>\n"
    return:
      type: System.Boolean
      description: "\n<p>\n<strong>true</strong> if the specified objects are equal; otherwise, <strong>false</strong>.</p>\n"
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "\n<p>\n<em>x</em> or <em>y</em> is of a type that cannot be cast to type <em>T</em>.</p>\n"
  implements:
  - System.Collections.IEqualityComparer.Equals(System.Object,System.Object)
  nameWithType.vb: EqualityComparer(Of T).System.Collections.IEqualityComparer.Equals(Object, Object)
  fullName.vb: System.Collections.Generic.EqualityComparer(Of T).System.Collections.IEqualityComparer.Equals(System.Object, System.Object)
  name.vb: System.Collections.IEqualityComparer.Equals(Object, Object)
- uid: System.Collections.Generic.EqualityComparer`1.System#Collections#IEqualityComparer#GetHashCode(System.Object)
  commentId: M:System.Collections.Generic.EqualityComparer`1.System#Collections#IEqualityComparer#GetHashCode(System.Object)
  id: System#Collections#IEqualityComparer#GetHashCode(System.Object)
  isEii: true
  parent: System.Collections.Generic.EqualityComparer`1
  langs:
  - csharp
  - vb
  name: IEqualityComparer.GetHashCode(Object)
  nameWithType: EqualityComparer<T>.IEqualityComparer.GetHashCode(Object)
  fullName: System.Collections.Generic.EqualityComparer<T>.System.Collections.IEqualityComparer.GetHashCode(System.Object)
  type: Method
  source:
    remote:
      path: src/mscorlib/src/System/Collections/Generic/EqualityComparer.cs
      branch: master
      repo: https://github.com/dotnet/coreclr.git
    id: System.Collections.IEqualityComparer.GetHashCode
    path: src/mscorlib/src/System/Collections/Generic/EqualityComparer.cs
    startLine: 114
  assemblies:
  - System.Collections
  namespace: System.Collections.Generic
  summary: "\n<p>Returns a hash code for the specified object.</p>\n"
  syntax:
    content: int IEqualityComparer.GetHashCode(object obj)
    content.vb: Function System.Collections.IEqualityComparer.GetHashCode(obj As Object) As Integer Implements IEqualityComparer.GetHashCode
    parameters:
    - id: obj
      type: System.Object
      description: "\n<p>The <xref href=\"System.Object\" data-throw-if-not-resolved=\"false\"></xref> for which a hash code is to be returned.</p>\n"
    return:
      type: System.Int32
      description: "\n<p>A hash code for the specified object.</p>\n"
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "\n<p>The type of <em>obj</em> is a reference type and <em>obj</em> is <strong>null</strong>.</p>\n<p>-or-</p>\n<p>\n<em>obj</em> is of a type that cannot be cast to type <em>T</em>.</p>\n"
  implements:
  - System.Collections.IEqualityComparer.GetHashCode(System.Object)
  nameWithType.vb: EqualityComparer(Of T).System.Collections.IEqualityComparer.GetHashCode(Object)
  fullName.vb: System.Collections.Generic.EqualityComparer(Of T).System.Collections.IEqualityComparer.GetHashCode(System.Object)
  name.vb: System.Collections.IEqualityComparer.GetHashCode(Object)
references:
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: false
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: false
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Collections.Generic.IEqualityComparer{{T}}
  commentId: T:System.Collections.Generic.IEqualityComparer{`0}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IEqualityComparer`1
  name: IEqualityComparer<T>
  nameWithType: IEqualityComparer<T>
  fullName: System.Collections.Generic.IEqualityComparer<T>
  nameWithType.vb: IEqualityComparer(Of T)
  fullname.vb: System.Collections.Generic.IEqualityComparer(Of T)
  name.vb: IEqualityComparer(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IEqualityComparer`1
    name: IEqualityComparer
    nameWithType: IEqualityComparer
    fullName: System.Collections.Generic.IEqualityComparer
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEqualityComparer`1
    name: IEqualityComparer
    nameWithType: IEqualityComparer
    fullName: System.Collections.Generic.IEqualityComparer
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.IEqualityComparer
  commentId: T:System.Collections.IEqualityComparer
  parent: System.Collections
  isExternal: false
  name: IEqualityComparer
  nameWithType: IEqualityComparer
  fullName: System.Collections.IEqualityComparer
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: System.Collections.Generic.IEqualityComparer`1
  commentId: T:System.Collections.Generic.IEqualityComparer`1
  isExternal: false
  name: IEqualityComparer<T>
  nameWithType: IEqualityComparer<T>
  fullName: System.Collections.Generic.IEqualityComparer<T>
  nameWithType.vb: IEqualityComparer(Of T)
  fullname.vb: System.Collections.Generic.IEqualityComparer(Of T)
  name.vb: IEqualityComparer(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IEqualityComparer`1
    name: IEqualityComparer
    nameWithType: IEqualityComparer
    fullName: System.Collections.Generic.IEqualityComparer
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEqualityComparer`1
    name: IEqualityComparer
    nameWithType: IEqualityComparer
    fullName: System.Collections.Generic.IEqualityComparer
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections
  commentId: N:System.Collections
  isExternal: false
  name: System.Collections
  nameWithType: System.Collections
  fullName: System.Collections
- uid: System.Collections.Generic.EqualityComparer`1
  commentId: T:System.Collections.Generic.EqualityComparer`1
  parent: System.Collections.Generic
  isExternal: false
  name: EqualityComparer<T>
  nameWithType: EqualityComparer<T>
  fullName: System.Collections.Generic.EqualityComparer<T>
  nameWithType.vb: EqualityComparer(Of T)
  fullname.vb: System.Collections.Generic.EqualityComparer(Of T)
  name.vb: EqualityComparer(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.EqualityComparer`1
    name: EqualityComparer
    nameWithType: EqualityComparer
    fullName: System.Collections.Generic.EqualityComparer
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.EqualityComparer`1
    name: EqualityComparer
    nameWithType: EqualityComparer
    fullName: System.Collections.Generic.EqualityComparer
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.IEqualityComparer{{T}}.Equals({T},{T})
  commentId: M:System.Collections.Generic.IEqualityComparer{`0}.Equals(`0,`0)
  parent: System.Collections.Generic.IEqualityComparer{{T}}
  definition: System.Collections.Generic.IEqualityComparer`1.Equals(`0,`0)
  name: Equals(T, T)
  nameWithType: IEqualityComparer<T>.Equals(T, T)
  fullName: System.Collections.Generic.IEqualityComparer<T>.Equals(T, T)
  nameWithType.vb: IEqualityComparer(Of T).Equals(T, T)
  fullname.vb: System.Collections.Generic.IEqualityComparer(Of T).Equals(T, T)
  spec.csharp:
  - uid: System.Collections.Generic.IEqualityComparer`1.Equals(`0,`0)
    name: Equals
    nameWithType: IEqualityComparer<T>.Equals
    fullName: System.Collections.Generic.IEqualityComparer<T>.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.Generic.IEqualityComparer`1.Equals(`0,`0)
    name: Equals
    nameWithType: IEqualityComparer(Of T).Equals
    fullName: System.Collections.Generic.IEqualityComparer(Of T).Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: '{T}'
  commentId: '!:T'
  definition: T
  name: T
  nameWithType: T
  fullName: T
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: false
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Collections.Generic.IEqualityComparer`1.Equals(`0,`0)
  commentId: M:System.Collections.Generic.IEqualityComparer`1.Equals(`0,`0)
  isExternal: true
  name: Equals(T, T)
  nameWithType: IEqualityComparer<T>.Equals(T, T)
  fullName: System.Collections.Generic.IEqualityComparer<T>.Equals(T, T)
  nameWithType.vb: IEqualityComparer(Of T).Equals(T, T)
  fullname.vb: System.Collections.Generic.IEqualityComparer(Of T).Equals(T, T)
  spec.csharp:
  - uid: System.Collections.Generic.IEqualityComparer`1.Equals(`0,`0)
    name: Equals
    nameWithType: IEqualityComparer<T>.Equals
    fullName: System.Collections.Generic.IEqualityComparer<T>.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.Generic.IEqualityComparer`1.Equals(`0,`0)
    name: Equals
    nameWithType: IEqualityComparer(Of T).Equals
    fullName: System.Collections.Generic.IEqualityComparer(Of T).Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: T
  isExternal: false
  name: T
  nameWithType: T
  fullName: T
- uid: System.Collections.Generic.IEqualityComparer{{T}}.GetHashCode({T})
  commentId: M:System.Collections.Generic.IEqualityComparer{`0}.GetHashCode(`0)
  parent: System.Collections.Generic.IEqualityComparer{{T}}
  definition: System.Collections.Generic.IEqualityComparer`1.GetHashCode(`0)
  name: GetHashCode(T)
  nameWithType: IEqualityComparer<T>.GetHashCode(T)
  fullName: System.Collections.Generic.IEqualityComparer<T>.GetHashCode(T)
  nameWithType.vb: IEqualityComparer(Of T).GetHashCode(T)
  fullname.vb: System.Collections.Generic.IEqualityComparer(Of T).GetHashCode(T)
  spec.csharp:
  - uid: System.Collections.Generic.IEqualityComparer`1.GetHashCode(`0)
    name: GetHashCode
    nameWithType: IEqualityComparer<T>.GetHashCode
    fullName: System.Collections.Generic.IEqualityComparer<T>.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.Generic.IEqualityComparer`1.GetHashCode(`0)
    name: GetHashCode
    nameWithType: IEqualityComparer(Of T).GetHashCode
    fullName: System.Collections.Generic.IEqualityComparer(Of T).GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: false
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Collections.Generic.IEqualityComparer`1.GetHashCode(`0)
  commentId: M:System.Collections.Generic.IEqualityComparer`1.GetHashCode(`0)
  isExternal: true
  name: GetHashCode(T)
  nameWithType: IEqualityComparer<T>.GetHashCode(T)
  fullName: System.Collections.Generic.IEqualityComparer<T>.GetHashCode(T)
  nameWithType.vb: IEqualityComparer(Of T).GetHashCode(T)
  fullname.vb: System.Collections.Generic.IEqualityComparer(Of T).GetHashCode(T)
  spec.csharp:
  - uid: System.Collections.Generic.IEqualityComparer`1.GetHashCode(`0)
    name: GetHashCode
    nameWithType: IEqualityComparer<T>.GetHashCode
    fullName: System.Collections.Generic.IEqualityComparer<T>.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.Generic.IEqualityComparer`1.GetHashCode(`0)
    name: GetHashCode
    nameWithType: IEqualityComparer(Of T).GetHashCode
    fullName: System.Collections.Generic.IEqualityComparer(Of T).GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.IEqualityComparer.Equals(System.Object,System.Object)
  commentId: M:System.Collections.IEqualityComparer.Equals(System.Object,System.Object)
  parent: System.Collections.IEqualityComparer
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: IEqualityComparer.Equals(Object, Object)
  fullName: System.Collections.IEqualityComparer.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Collections.IEqualityComparer.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: IEqualityComparer.Equals
    fullName: System.Collections.IEqualityComparer.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.IEqualityComparer.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: IEqualityComparer.Equals
    fullName: System.Collections.IEqualityComparer.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.IEqualityComparer.GetHashCode(System.Object)
  commentId: M:System.Collections.IEqualityComparer.GetHashCode(System.Object)
  parent: System.Collections.IEqualityComparer
  isExternal: true
  name: GetHashCode(Object)
  nameWithType: IEqualityComparer.GetHashCode(Object)
  fullName: System.Collections.IEqualityComparer.GetHashCode(System.Object)
  spec.csharp:
  - uid: System.Collections.IEqualityComparer.GetHashCode(System.Object)
    name: GetHashCode
    nameWithType: IEqualityComparer.GetHashCode
    fullName: System.Collections.IEqualityComparer.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.IEqualityComparer.GetHashCode(System.Object)
    name: GetHashCode
    nameWithType: IEqualityComparer.GetHashCode
    fullName: System.Collections.IEqualityComparer.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.ArgumentNullException
  commentId: T:System.ArgumentNullException
  isExternal: false
  name: ArgumentNullException
  nameWithType: ArgumentNullException
  fullName: System.ArgumentNullException
- uid: System.ArgumentException
  commentId: T:System.ArgumentException
  parent: System
  isExternal: false
  name: ArgumentException
  nameWithType: ArgumentException
  fullName: System.ArgumentException
