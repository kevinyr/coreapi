### YamlMime:ManagedReference
items:
- uid: System.StringComparison
  commentId: T:System.StringComparison
  id: StringComparison
  parent: System
  children:
  - System.StringComparison.CurrentCulture
  - System.StringComparison.CurrentCultureIgnoreCase
  - System.StringComparison.Ordinal
  - System.StringComparison.OrdinalIgnoreCase
  langs:
  - csharp
  - vb
  name: StringComparison
  nameWithType: StringComparison
  fullName: System.StringComparison
  type: Enum
  source:
    remote:
      path: src/mscorlib/src/System/StringComparison.cs
      branch: master
      repo: https://github.com/dotnet/coreclr.git
    id: StringComparison
    path: src/mscorlib/src/System/StringComparison.cs
    startLine: 17
  assemblies:
  - System.Runtime
  namespace: System
  summary: "\n<p>Specifies the culture, case, and sort rules to be used by certain overloads of the <xref href=\"System.String.Compare(System.String,System.String)\" data-throw-if-not-resolved=\"false\"></xref> and <xref href=\"System.String.Equals(System.Object)\" data-throw-if-not-resolved=\"false\"></xref> methods.</p>\n"
  syntax:
    content: >-
      [Serializable]

      [ComVisible(true)]

      public enum StringComparison
    content.vb: >-
      <Serializable>

      <ComVisible(True)>

      Public Enum StringComparison
  seealso:
  - linkId: System.String
    commentId: T:System.String
  - linkId: System.String.Compare(System.String,System.String)
    commentId: M:System.String.Compare(System.String,System.String)
  - linkId: System.Globalization.CompareInfo.Compare(System.String,System.String)
    commentId: M:System.Globalization.CompareInfo.Compare(System.String,System.String)
  - linkId: System.String.CompareOrdinal(System.String,System.String)
    commentId: M:System.String.CompareOrdinal(System.String,System.String)
  - linkId: System.Globalization.CultureInfo.InvariantCulture
    commentId: P:System.Globalization.CultureInfo.InvariantCulture
  modifiers.csharp:
  - public
  - enum
  modifiers.vb:
  - Public
  - Enum
- uid: System.StringComparison.CurrentCulture
  commentId: F:System.StringComparison.CurrentCulture
  id: CurrentCulture
  parent: System.StringComparison
  langs:
  - csharp
  - vb
  name: CurrentCulture
  nameWithType: StringComparison.CurrentCulture
  fullName: System.StringComparison.CurrentCulture
  type: Field
  source:
    remote:
      path: src/mscorlib/src/System/StringComparison.cs
      branch: master
      repo: https://github.com/dotnet/coreclr.git
    id: CurrentCulture
    path: src/mscorlib/src/System/StringComparison.cs
    startLine: 20
  assemblies:
  - System.Runtime
  namespace: System
  summary: "\n<p>Compare strings using culture-sensitive sort rules and the current culture.</p>\n"
  syntax:
    content: CurrentCulture = 0
    return:
      type: System.StringComparison
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: System.StringComparison.CurrentCultureIgnoreCase
  commentId: F:System.StringComparison.CurrentCultureIgnoreCase
  id: CurrentCultureIgnoreCase
  parent: System.StringComparison
  langs:
  - csharp
  - vb
  name: CurrentCultureIgnoreCase
  nameWithType: StringComparison.CurrentCultureIgnoreCase
  fullName: System.StringComparison.CurrentCultureIgnoreCase
  type: Field
  source:
    remote:
      path: src/mscorlib/src/System/StringComparison.cs
      branch: master
      repo: https://github.com/dotnet/coreclr.git
    id: CurrentCultureIgnoreCase
    path: src/mscorlib/src/System/StringComparison.cs
    startLine: 21
  assemblies:
  - System.Runtime
  namespace: System
  summary: "\n<p>Compare strings using culture-sensitive sort rules, the current culture, and ignoring the case of the strings being compared.</p>\n"
  syntax:
    content: CurrentCultureIgnoreCase = 1
    return:
      type: System.StringComparison
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: System.StringComparison.Ordinal
  commentId: F:System.StringComparison.Ordinal
  id: Ordinal
  parent: System.StringComparison
  langs:
  - csharp
  - vb
  name: Ordinal
  nameWithType: StringComparison.Ordinal
  fullName: System.StringComparison.Ordinal
  type: Field
  source:
    remote:
      path: src/mscorlib/src/System/StringComparison.cs
      branch: master
      repo: https://github.com/dotnet/coreclr.git
    id: Ordinal
    path: src/mscorlib/src/System/StringComparison.cs
    startLine: 24
  assemblies:
  - System.Runtime
  namespace: System
  summary: "\n<p>Compare strings using ordinal (binary) sort rules.</p>\n"
  syntax:
    content: Ordinal = 4
    return:
      type: System.StringComparison
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: System.StringComparison.OrdinalIgnoreCase
  commentId: F:System.StringComparison.OrdinalIgnoreCase
  id: OrdinalIgnoreCase
  parent: System.StringComparison
  langs:
  - csharp
  - vb
  name: OrdinalIgnoreCase
  nameWithType: StringComparison.OrdinalIgnoreCase
  fullName: System.StringComparison.OrdinalIgnoreCase
  type: Field
  source:
    remote:
      path: src/mscorlib/src/System/StringComparison.cs
      branch: master
      repo: https://github.com/dotnet/coreclr.git
    id: OrdinalIgnoreCase
    path: src/mscorlib/src/System/StringComparison.cs
    startLine: 25
  assemblies:
  - System.Runtime
  namespace: System
  summary: "\n<p>Compare strings using ordinal (binary) sort rules and ignoring the case of the strings being compared.</p>\n"
  syntax:
    content: OrdinalIgnoreCase = 5
    return:
      type: System.StringComparison
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
references:
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: System.StringComparison
  commentId: T:System.StringComparison
  parent: System
  isExternal: false
  name: StringComparison
  nameWithType: StringComparison
  fullName: System.StringComparison
