### YamlMime:ManagedReference
items:
- uid: System.Threading.EventResetMode
  commentId: T:System.Threading.EventResetMode
  id: EventResetMode
  parent: System.Threading
  children:
  - System.Threading.EventResetMode.AutoReset
  - System.Threading.EventResetMode.ManualReset
  langs:
  - csharp
  - vb
  name: EventResetMode
  nameWithType: EventResetMode
  fullName: System.Threading.EventResetMode
  type: Enum
  source:
    remote:
      path: src/mscorlib/src/System/Threading/EventResetMode.cs
      branch: master
      repo: https://github.com/dotnet/coreclr.git
    id: EventResetMode
    path: src/mscorlib/src/System/Threading/EventResetMode.cs
    startLine: 19
  assemblies:
  - System.Threading
  namespace: System.Threading
  summary: "\n<p>Indicates whether an <xref href=\"System.Threading.EventWaitHandle\" data-throw-if-not-resolved=\"false\"></xref> is reset automatically or manually after receiving a signal.</p>\n"
  syntax:
    content: >-
      [ComVisible(false)]

      public enum EventResetMode
    content.vb: >-
      <ComVisible(False)>

      Public Enum EventResetMode
  modifiers.csharp:
  - public
  - enum
  modifiers.vb:
  - Public
  - Enum
- uid: System.Threading.EventResetMode.AutoReset
  commentId: F:System.Threading.EventResetMode.AutoReset
  id: AutoReset
  parent: System.Threading.EventResetMode
  langs:
  - csharp
  - vb
  name: AutoReset
  nameWithType: EventResetMode.AutoReset
  fullName: System.Threading.EventResetMode.AutoReset
  type: Field
  source:
    remote:
      path: src/mscorlib/src/System/Threading/EventResetMode.cs
      branch: master
      repo: https://github.com/dotnet/coreclr.git
    id: AutoReset
    path: src/mscorlib/src/System/Threading/EventResetMode.cs
    startLine: 22
  assemblies:
  - System.Threading
  namespace: System.Threading
  summary: "\n<p>When signaled, the <xref href=\"System.Threading.EventWaitHandle\" data-throw-if-not-resolved=\"false\"></xref> resets automatically after releasing a single thread. If no threads are waiting, the <xref href=\"System.Threading.EventWaitHandle\" data-throw-if-not-resolved=\"false\"></xref> remains signaled until a thread blocks, and resets after releasing the thread.</p>\n"
  syntax:
    content: AutoReset = 0
    return:
      type: System.Threading.EventResetMode
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: System.Threading.EventResetMode.ManualReset
  commentId: F:System.Threading.EventResetMode.ManualReset
  id: ManualReset
  parent: System.Threading.EventResetMode
  langs:
  - csharp
  - vb
  name: ManualReset
  nameWithType: EventResetMode.ManualReset
  fullName: System.Threading.EventResetMode.ManualReset
  type: Field
  source:
    remote:
      path: src/mscorlib/src/System/Threading/EventResetMode.cs
      branch: master
      repo: https://github.com/dotnet/coreclr.git
    id: ManualReset
    path: src/mscorlib/src/System/Threading/EventResetMode.cs
    startLine: 23
  assemblies:
  - System.Threading
  namespace: System.Threading
  summary: "\n<p>When signaled, the <xref href=\"System.Threading.EventWaitHandle\" data-throw-if-not-resolved=\"false\"></xref> releases all waiting threads and remains signaled until it is manually reset.</p>\n"
  syntax:
    content: ManualReset = 1
    return:
      type: System.Threading.EventResetMode
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
references:
- uid: System.Threading
  commentId: N:System.Threading
  isExternal: false
  name: System.Threading
  nameWithType: System.Threading
  fullName: System.Threading
- uid: System.Threading.EventResetMode
  commentId: T:System.Threading.EventResetMode
  parent: System.Threading
  isExternal: false
  name: EventResetMode
  nameWithType: EventResetMode
  fullName: System.Threading.EventResetMode
