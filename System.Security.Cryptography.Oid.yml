### YamlMime:ManagedReference
items:
- uid: System.Security.Cryptography.Oid
  commentId: T:System.Security.Cryptography.Oid
  id: Oid
  parent: System.Security.Cryptography
  children:
  - System.Security.Cryptography.Oid.#ctor(System.Security.Cryptography.Oid)
  - System.Security.Cryptography.Oid.#ctor(System.String)
  - System.Security.Cryptography.Oid.#ctor(System.String,System.String)
  - System.Security.Cryptography.Oid.FriendlyName
  - System.Security.Cryptography.Oid.FromFriendlyName(System.String,System.Security.Cryptography.OidGroup)
  - System.Security.Cryptography.Oid.FromOidValue(System.String,System.Security.Cryptography.OidGroup)
  - System.Security.Cryptography.Oid.Value
  langs:
  - csharp
  - vb
  name: Oid
  nameWithType: Oid
  fullName: System.Security.Cryptography.Oid
  type: Class
  source:
    remote:
      path: src/System.Security.Cryptography.Encoding/src/System/Security/Cryptography/Oid.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: Oid
    path: src/System.Security.Cryptography.Encoding/src/System/Security/Cryptography/Oid.cs
    startLine: 11
  assemblies:
  - System.Security.Cryptography.Encoding
  namespace: System.Security.Cryptography
  summary: "\n<p>Represents a cryptographic object identifier. This class cannot be inherited.</p>\n"
  syntax:
    content: public sealed class Oid
    content.vb: Public NotInheritable Class Oid
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  modifiers.csharp:
  - public
  - sealed
  - class
  modifiers.vb:
  - Public
  - NotInheritable
  - Class
- uid: System.Security.Cryptography.Oid.#ctor(System.Security.Cryptography.Oid)
  commentId: M:System.Security.Cryptography.Oid.#ctor(System.Security.Cryptography.Oid)
  id: '#ctor(System.Security.Cryptography.Oid)'
  parent: System.Security.Cryptography.Oid
  langs:
  - csharp
  - vb
  name: Oid(Oid)
  nameWithType: Oid.Oid(Oid)
  fullName: System.Security.Cryptography.Oid.Oid(System.Security.Cryptography.Oid)
  type: Constructor
  source:
    remote:
      path: src/System.Security.Cryptography.Encoding/src/System/Security/Cryptography/Oid.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: .ctor
    path: src/System.Security.Cryptography.Encoding/src/System/Security/Cryptography/Oid.cs
    startLine: 32
  assemblies:
  - System.Security.Cryptography.Encoding
  namespace: System.Security.Cryptography
  summary: "\n<p>Initializes a new instance of the <xref href=\"System.Security.Cryptography.Oid\" data-throw-if-not-resolved=\"false\"></xref> class using the specified <xref href=\"System.Security.Cryptography.Oid\" data-throw-if-not-resolved=\"false\"></xref> object.</p>\n"
  syntax:
    content: public Oid(Oid oid)
    content.vb: Public Sub New(oid As Oid)
    parameters:
    - id: oid
      type: System.Security.Cryptography.Oid
      description: "\n<p>The object identifier information to use to create the new object identifier.</p>\n"
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "\n<p>\n<em>oid </em>is <strong>null</strong>.</p>\n"
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: System.Security.Cryptography.Oid.#ctor(System.String)
  commentId: M:System.Security.Cryptography.Oid.#ctor(System.String)
  id: '#ctor(System.String)'
  parent: System.Security.Cryptography.Oid
  langs:
  - csharp
  - vb
  name: Oid(String)
  nameWithType: Oid.Oid(String)
  fullName: System.Security.Cryptography.Oid.Oid(System.String)
  type: Constructor
  source:
    remote:
      path: src/System.Security.Cryptography.Encoding/src/System/Security/Cryptography/Oid.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: .ctor
    path: src/System.Security.Cryptography.Encoding/src/System/Security/Cryptography/Oid.cs
    startLine: 13
  assemblies:
  - System.Security.Cryptography.Encoding
  namespace: System.Security.Cryptography
  summary: "\n<p>Initializes a new instance of the <xref href=\"System.Security.Cryptography.Oid\" data-throw-if-not-resolved=\"false\"></xref> class using a string value of an <xref href=\"System.Security.Cryptography.Oid\" data-throw-if-not-resolved=\"false\"></xref> object.</p>\n"
  syntax:
    content: public Oid(string oid)
    content.vb: Public Sub New(oid As String)
    parameters:
    - id: oid
      type: System.String
      description: "\n<p>An object identifier.</p>\n"
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: System.Security.Cryptography.Oid.#ctor(System.String,System.String)
  commentId: M:System.Security.Cryptography.Oid.#ctor(System.String,System.String)
  id: '#ctor(System.String,System.String)'
  parent: System.Security.Cryptography.Oid
  langs:
  - csharp
  - vb
  name: Oid(String, String)
  nameWithType: Oid.Oid(String, String)
  fullName: System.Security.Cryptography.Oid.Oid(System.String, System.String)
  type: Constructor
  source:
    remote:
      path: src/System.Security.Cryptography.Encoding/src/System/Security/Cryptography/Oid.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: .ctor
    path: src/System.Security.Cryptography.Encoding/src/System/Security/Cryptography/Oid.cs
    startLine: 26
  assemblies:
  - System.Security.Cryptography.Encoding
  namespace: System.Security.Cryptography
  summary: "\n<p>Initializes a new instance of the <xref href=\"System.Security.Cryptography.Oid\" data-throw-if-not-resolved=\"false\"></xref> class using the specified value and friendly name.</p>\n"
  syntax:
    content: public Oid(string value, string friendlyName)
    content.vb: Public Sub New(value As String, friendlyName As String)
    parameters:
    - id: value
      type: System.String
      description: "\n<p>The dotted number of the identifier.</p>\n"
    - id: friendlyName
      type: System.String
      description: "\n<p>The friendly name of the identifier.</p>\n"
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: System.Security.Cryptography.Oid.FriendlyName
  commentId: P:System.Security.Cryptography.Oid.FriendlyName
  id: FriendlyName
  parent: System.Security.Cryptography.Oid
  langs:
  - csharp
  - vb
  name: FriendlyName
  nameWithType: Oid.FriendlyName
  fullName: System.Security.Cryptography.Oid.FriendlyName
  type: Property
  source:
    remote:
      path: src/System.Security.Cryptography.Encoding/src/System/Security/Cryptography/Oid.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: FriendlyName
    path: src/System.Security.Cryptography.Encoding/src/System/Security/Cryptography/Oid.cs
    startLine: 73
  assemblies:
  - System.Security.Cryptography.Encoding
  namespace: System.Security.Cryptography
  summary: "\n<p>Gets or sets the friendly name of the identifier.</p>\n"
  syntax:
    content: public string FriendlyName { get; set; }
    content.vb: Public Property FriendlyName As String
    parameters: []
    return:
      type: System.String
      description: "\n<p>The friendly name of the identifier.</p>\n"
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: System.Security.Cryptography.Oid.Value
  commentId: P:System.Security.Cryptography.Oid.Value
  id: Value
  parent: System.Security.Cryptography.Oid
  langs:
  - csharp
  - vb
  name: Value
  nameWithType: Oid.Value
  fullName: System.Security.Cryptography.Oid.Value
  type: Property
  source:
    remote:
      path: src/System.Security.Cryptography.Encoding/src/System/Security/Cryptography/Oid.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: Value
    path: src/System.Security.Cryptography.Encoding/src/System/Security/Cryptography/Oid.cs
    startLine: 67
  assemblies:
  - System.Security.Cryptography.Encoding
  namespace: System.Security.Cryptography
  summary: "\n<p>Gets or sets the dotted number of the identifier.</p>\n"
  syntax:
    content: public string Value { get; set; }
    content.vb: Public Property Value As String
    parameters: []
    return:
      type: System.String
      description: "\n<p>The dotted number of the identifier.</p>\n"
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: System.Security.Cryptography.Oid.FromFriendlyName(System.String,System.Security.Cryptography.OidGroup)
  commentId: M:System.Security.Cryptography.Oid.FromFriendlyName(System.String,System.Security.Cryptography.OidGroup)
  id: FromFriendlyName(System.String,System.Security.Cryptography.OidGroup)
  parent: System.Security.Cryptography.Oid
  langs:
  - csharp
  - vb
  name: FromFriendlyName(String, OidGroup)
  nameWithType: Oid.FromFriendlyName(String, OidGroup)
  fullName: System.Security.Cryptography.Oid.FromFriendlyName(System.String, System.Security.Cryptography.OidGroup)
  type: Method
  source:
    remote:
      path: src/System.Security.Cryptography.Encoding/src/System/Security/Cryptography/Oid.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: FromFriendlyName
    path: src/System.Security.Cryptography.Encoding/src/System/Security/Cryptography/Oid.cs
    startLine: 41
  assemblies:
  - System.Security.Cryptography.Encoding
  namespace: System.Security.Cryptography
  summary: "\n<p>Creates an <xref href=\"System.Security.Cryptography.Oid\" data-throw-if-not-resolved=\"false\"></xref> object from an OID friendly name by searching the specified group.</p>\n"
  syntax:
    content: public static Oid FromFriendlyName(string friendlyName, OidGroup group)
    content.vb: Public Shared Function FromFriendlyName(friendlyName As String, group As OidGroup) As Oid
    parameters:
    - id: friendlyName
      type: System.String
      description: "\n<p>The friendly name of the identifier.</p>\n"
    - id: group
      type: System.Security.Cryptography.OidGroup
      description: "\n<p>The group to search in.</p>\n"
    return:
      type: System.Security.Cryptography.Oid
      description: "\n<p>An object that represents the specified OID.</p>\n"
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "\n<p>\n<em>friendlyName </em> is <strong>null</strong>.</p>\n"
  - type: System.Security.Cryptography.CryptographicException
    commentId: T:System.Security.Cryptography.CryptographicException
    description: "\n<p>The OID was not found.</p>\n"
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: System.Security.Cryptography.Oid.FromOidValue(System.String,System.Security.Cryptography.OidGroup)
  commentId: M:System.Security.Cryptography.Oid.FromOidValue(System.String,System.Security.Cryptography.OidGroup)
  id: FromOidValue(System.String,System.Security.Cryptography.OidGroup)
  parent: System.Security.Cryptography.Oid
  langs:
  - csharp
  - vb
  name: FromOidValue(String, OidGroup)
  nameWithType: Oid.FromOidValue(String, OidGroup)
  fullName: System.Security.Cryptography.Oid.FromOidValue(System.String, System.Security.Cryptography.OidGroup)
  type: Method
  source:
    remote:
      path: src/System.Security.Cryptography.Encoding/src/System/Security/Cryptography/Oid.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: FromOidValue
    path: src/System.Security.Cryptography.Encoding/src/System/Security/Cryptography/Oid.cs
    startLine: 55
  assemblies:
  - System.Security.Cryptography.Encoding
  namespace: System.Security.Cryptography
  summary: "\n<p>Creates an <xref href=\"System.Security.Cryptography.Oid\" data-throw-if-not-resolved=\"false\"></xref> object by using the specified OID value and group.</p>\n"
  syntax:
    content: public static Oid FromOidValue(string oidValue, OidGroup group)
    content.vb: Public Shared Function FromOidValue(oidValue As String, group As OidGroup) As Oid
    parameters:
    - id: oidValue
      type: System.String
      description: "\n<p>The OID value.</p>\n"
    - id: group
      type: System.Security.Cryptography.OidGroup
      description: "\n<p>The group to search in.</p>\n"
    return:
      type: System.Security.Cryptography.Oid
      description: "\n<p>A new instance of an <xref href=\"System.Security.Cryptography.Oid\" data-throw-if-not-resolved=\"false\"></xref> object.</p>\n"
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "\n<p>\n<em>oidValue</em> is <strong>null</strong>.</p>\n"
  - type: System.Security.Cryptography.CryptographicException
    commentId: T:System.Security.Cryptography.CryptographicException
    description: "\n<p>The friendly name for the OID value was not found.</p>\n"
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
references:
- uid: System.Security.Cryptography
  commentId: N:System.Security.Cryptography
  isExternal: false
  name: System.Security.Cryptography
  nameWithType: System.Security.Cryptography
  fullName: System.Security.Cryptography
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: false
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: System.Security.Cryptography.Oid
  commentId: T:System.Security.Cryptography.Oid
  parent: System.Security.Cryptography
  isExternal: false
  name: Oid
  nameWithType: Oid
  fullName: System.Security.Cryptography.Oid
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: false
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Security.Cryptography.OidGroup
  commentId: T:System.Security.Cryptography.OidGroup
  parent: System.Security.Cryptography
  isExternal: false
  name: OidGroup
  nameWithType: OidGroup
  fullName: System.Security.Cryptography.OidGroup
- uid: System.ArgumentNullException
  commentId: T:System.ArgumentNullException
  isExternal: false
  name: ArgumentNullException
  nameWithType: ArgumentNullException
  fullName: System.ArgumentNullException
- uid: System.Security.Cryptography.CryptographicException
  commentId: T:System.Security.Cryptography.CryptographicException
  isExternal: false
  name: CryptographicException
  nameWithType: CryptographicException
  fullName: System.Security.Cryptography.CryptographicException
