### YamlMime:ManagedReference
items:
- uid: System.Data.Common.DbParameter
  commentId: T:System.Data.Common.DbParameter
  id: DbParameter
  parent: System.Data.Common
  children:
  - System.Data.Common.DbParameter.#ctor
  - System.Data.Common.DbParameter.DbType
  - System.Data.Common.DbParameter.Direction
  - System.Data.Common.DbParameter.IsNullable
  - System.Data.Common.DbParameter.ParameterName
  - System.Data.Common.DbParameter.Precision
  - System.Data.Common.DbParameter.ResetDbType
  - System.Data.Common.DbParameter.Scale
  - System.Data.Common.DbParameter.Size
  - System.Data.Common.DbParameter.SourceColumn
  - System.Data.Common.DbParameter.SourceColumnNullMapping
  - System.Data.Common.DbParameter.System#Data#IDataParameter#SourceVersion
  - System.Data.Common.DbParameter.System#Data#IDbDataParameter#Precision
  - System.Data.Common.DbParameter.System#Data#IDbDataParameter#Scale
  - System.Data.Common.DbParameter.Value
  langs:
  - csharp
  - vb
  name: DbParameter
  nameWithType: DbParameter
  fullName: System.Data.Common.DbParameter
  type: Class
  source:
    remote:
      path: src/System.Data.Common/src/System/Data/Common/DbParameter.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: DbParameter
    path: src/System.Data.Common/src/System/Data/Common/DbParameter.cs
    startLine: 13
  assemblies:
  - System.Data.Common
  namespace: System.Data.Common
  summary: "\n<p>Represents a parameter to a <xref href=\"System.Data.Common.DbCommand\" data-throw-if-not-resolved=\"false\"></xref> and optionally, its mapping to a <xref href=\"System.Data.DataSet\" data-throw-if-not-resolved=\"false\"></xref> column. For more information on parameters, see Configuring Parameters and Parameter Data Types.</p>\n"
  syntax:
    content: 'public abstract class DbParameter : IDbDataParameter, IDataParameter'
    content.vb: >-
      Public MustInherit Class DbParameter
          Implements IDbDataParameter, IDataParameter
  inheritance:
  - System.Object
  implements:
  - System.Data.IDbDataParameter
  - System.Data.IDataParameter
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  modifiers.csharp:
  - public
  - abstract
  - class
  modifiers.vb:
  - Public
  - MustInherit
  - Class
- uid: System.Data.Common.DbParameter.#ctor
  commentId: M:System.Data.Common.DbParameter.#ctor
  id: '#ctor'
  parent: System.Data.Common.DbParameter
  langs:
  - csharp
  - vb
  name: DbParameter()
  nameWithType: DbParameter.DbParameter()
  fullName: System.Data.Common.DbParameter.DbParameter()
  type: Constructor
  source:
    remote:
      path: src/System.Data.Common/src/System/Data/Common/DbParameter.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: .ctor
    path: src/System.Data.Common/src/System/Data/Common/DbParameter.cs
    startLine: 16
  assemblies:
  - System.Data.Common
  namespace: System.Data.Common
  summary: "\n<p>Initializes a new instance of the <xref href=\"System.Data.Common.DbParameter\" data-throw-if-not-resolved=\"false\"></xref> class.</p>\n"
  syntax:
    content: protected DbParameter()
    content.vb: Protected Sub New
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: System.Data.Common.DbParameter.DbType
  commentId: P:System.Data.Common.DbParameter.DbType
  id: DbType
  parent: System.Data.Common.DbParameter
  langs:
  - csharp
  - vb
  name: DbType
  nameWithType: DbParameter.DbType
  fullName: System.Data.Common.DbParameter.DbType
  type: Property
  source:
    remote:
      path: src/System.Data.Common/src/System/Data/Common/DbParameter.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: DbType
    path: src/System.Data.Common/src/System/Data/Common/DbParameter.cs
    startLine: 20
  assemblies:
  - System.Data.Common
  namespace: System.Data.Common
  summary: "\n<p>Gets or sets the <xref href=\"System.Data.DbType\" data-throw-if-not-resolved=\"false\"></xref> of the parameter.</p>\n"
  syntax:
    content: public abstract DbType DbType { get; set; }
    content.vb: Public MustOverride Property DbType As DbType
    parameters: []
    return:
      type: System.Data.DbType
      description: "\n<p>One of the <xref href=\"System.Data.DbType\" data-throw-if-not-resolved=\"false\"></xref> values. The default is <xref href=\"System.Data.DbType.String\" data-throw-if-not-resolved=\"false\"></xref>.</p>\n"
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "\n<p>The property is not set to a valid <xref href=\"System.Data.DbType\" data-throw-if-not-resolved=\"false\"></xref>.</p>\n"
  implements:
  - System.Data.IDataParameter.DbType
  modifiers.csharp:
  - public
  - abstract
  - get
  - set
  modifiers.vb:
  - Public
  - MustOverride
- uid: System.Data.Common.DbParameter.Direction
  commentId: P:System.Data.Common.DbParameter.Direction
  id: Direction
  parent: System.Data.Common.DbParameter
  langs:
  - csharp
  - vb
  name: Direction
  nameWithType: DbParameter.Direction
  fullName: System.Data.Common.DbParameter.Direction
  type: Property
  source:
    remote:
      path: src/System.Data.Common/src/System/Data/Common/DbParameter.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: Direction
    path: src/System.Data.Common/src/System/Data/Common/DbParameter.cs
    startLine: 28
  assemblies:
  - System.Data.Common
  namespace: System.Data.Common
  summary: "\n<p>Gets or sets a value that indicates whether the parameter is input-only, output-only, bidirectional, or a stored procedure return value parameter.</p>\n"
  syntax:
    content: public abstract ParameterDirection Direction { get; set; }
    content.vb: Public MustOverride Property Direction As ParameterDirection
    parameters: []
    return:
      type: System.Data.ParameterDirection
      description: "\n<p>One of the <xref href=\"System.Data.ParameterDirection\" data-throw-if-not-resolved=\"false\"></xref> values. The default is <strong>Input</strong>.</p>\n"
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "\n<p>The property is not set to one of the valid <xref href=\"System.Data.ParameterDirection\" data-throw-if-not-resolved=\"false\"></xref> values.</p>\n"
  implements:
  - System.Data.IDataParameter.Direction
  modifiers.csharp:
  - public
  - abstract
  - get
  - set
  modifiers.vb:
  - Public
  - MustOverride
- uid: System.Data.Common.DbParameter.IsNullable
  commentId: P:System.Data.Common.DbParameter.IsNullable
  id: IsNullable
  parent: System.Data.Common.DbParameter
  langs:
  - csharp
  - vb
  name: IsNullable
  nameWithType: DbParameter.IsNullable
  fullName: System.Data.Common.DbParameter.IsNullable
  type: Property
  source:
    remote:
      path: src/System.Data.Common/src/System/Data/Common/DbParameter.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: IsNullable
    path: src/System.Data.Common/src/System/Data/Common/DbParameter.cs
    startLine: 34
  assemblies:
  - System.Data.Common
  namespace: System.Data.Common
  summary: "\n<p>Gets or sets a value that indicates whether the parameter accepts null values.</p>\n"
  syntax:
    content: public abstract bool IsNullable { get; set; }
    content.vb: Public MustOverride Property IsNullable As Boolean
    parameters: []
    return:
      type: System.Boolean
      description: "\n<p>\n<strong>true</strong> if null values are accepted; otherwise <strong>false</strong>. The default is <strong>false</strong>.</p>\n"
  implements:
  - System.Data.IDataParameter.IsNullable
  modifiers.csharp:
  - public
  - abstract
  - get
  - set
  modifiers.vb:
  - Public
  - MustOverride
- uid: System.Data.Common.DbParameter.ParameterName
  commentId: P:System.Data.Common.DbParameter.ParameterName
  id: ParameterName
  parent: System.Data.Common.DbParameter
  langs:
  - csharp
  - vb
  name: ParameterName
  nameWithType: DbParameter.ParameterName
  fullName: System.Data.Common.DbParameter.ParameterName
  type: Property
  source:
    remote:
      path: src/System.Data.Common/src/System/Data/Common/DbParameter.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: ParameterName
    path: src/System.Data.Common/src/System/Data/Common/DbParameter.cs
    startLine: 40
  assemblies:
  - System.Data.Common
  namespace: System.Data.Common
  summary: "\n<p>Gets or sets the name of the <xref href=\"System.Data.Common.DbParameter\" data-throw-if-not-resolved=\"false\"></xref>.</p>\n"
  syntax:
    content: public abstract string ParameterName { get; set; }
    content.vb: Public MustOverride Property ParameterName As String
    parameters: []
    return:
      type: System.String
      description: "\n<p>The name of the <xref href=\"System.Data.Common.DbParameter\" data-throw-if-not-resolved=\"false\"></xref>. The default is an empty string (\"\").</p>\n"
  implements:
  - System.Data.IDataParameter.ParameterName
  modifiers.csharp:
  - public
  - abstract
  - get
  - set
  modifiers.vb:
  - Public
  - MustOverride
- uid: System.Data.Common.DbParameter.Precision
  commentId: P:System.Data.Common.DbParameter.Precision
  id: Precision
  parent: System.Data.Common.DbParameter
  langs:
  - csharp
  - vb
  name: Precision
  nameWithType: DbParameter.Precision
  fullName: System.Data.Common.DbParameter.Precision
  type: Property
  source:
    remote:
      path: src/System.Data.Common/src/System/Data/Common/DbParameter.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: Precision
    path: src/System.Data.Common/src/System/Data/Common/DbParameter.cs
    startLine: 46
  assemblies:
  - System.Data.Common
  namespace: System.Data.Common
  summary: "\n<p>[Supported in the .NET Framework 4.5.1 and later versions] </p>\n<p>Gets or sets the maximum number of digits used to represent the <xref href=\"System.Data.Common.DbParameter.Value\" data-throw-if-not-resolved=\"false\"></xref> property.</p>\n"
  syntax:
    content: public virtual byte Precision { get; set; }
    content.vb: Public Overridable Property Precision As Byte
    parameters: []
    return:
      type: System.Byte
      description: "\n<p>The maximum number of digits used to represent the <xref href=\"System.Data.Common.DbParameter.Value\" data-throw-if-not-resolved=\"false\"></xref> property.</p>\n"
  modifiers.csharp:
  - public
  - virtual
  - get
  - set
  modifiers.vb:
  - Public
  - Overridable
- uid: System.Data.Common.DbParameter.Scale
  commentId: P:System.Data.Common.DbParameter.Scale
  id: Scale
  parent: System.Data.Common.DbParameter
  langs:
  - csharp
  - vb
  name: Scale
  nameWithType: DbParameter.Scale
  fullName: System.Data.Common.DbParameter.Scale
  type: Property
  source:
    remote:
      path: src/System.Data.Common/src/System/Data/Common/DbParameter.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: Scale
    path: src/System.Data.Common/src/System/Data/Common/DbParameter.cs
    startLine: 57
  assemblies:
  - System.Data.Common
  namespace: System.Data.Common
  summary: "\n<p>Gets or sets the number of decimal places to which <xref href=\"System.Data.Common.DbParameter.Value\" data-throw-if-not-resolved=\"false\"></xref> is resolved.</p>\n"
  syntax:
    content: public virtual byte Scale { get; set; }
    content.vb: Public Overridable Property Scale As Byte
    parameters: []
    return:
      type: System.Byte
      description: "\n<p>The number of decimal places to which <xref href=\"System.Data.Common.DbParameter.Value\" data-throw-if-not-resolved=\"false\"></xref> is resolved.</p>\n"
  modifiers.csharp:
  - public
  - virtual
  - get
  - set
  modifiers.vb:
  - Public
  - Overridable
- uid: System.Data.Common.DbParameter.Size
  commentId: P:System.Data.Common.DbParameter.Size
  id: Size
  parent: System.Data.Common.DbParameter
  langs:
  - csharp
  - vb
  name: Size
  nameWithType: DbParameter.Size
  fullName: System.Data.Common.DbParameter.Size
  type: Property
  source:
    remote:
      path: src/System.Data.Common/src/System/Data/Common/DbParameter.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: Size
    path: src/System.Data.Common/src/System/Data/Common/DbParameter.cs
    startLine: 68
  assemblies:
  - System.Data.Common
  namespace: System.Data.Common
  summary: "\n<p>Gets or sets the maximum size, in bytes, of the data within the column.</p>\n"
  syntax:
    content: public abstract int Size { get; set; }
    content.vb: Public MustOverride Property Size As Integer
    parameters: []
    return:
      type: System.Int32
      description: "\n<p>The maximum size, in bytes, of the data within the column. The default value is inferred from the parameter value.</p>\n"
  implements:
  - System.Data.IDbDataParameter.Size
  modifiers.csharp:
  - public
  - abstract
  - get
  - set
  modifiers.vb:
  - Public
  - MustOverride
- uid: System.Data.Common.DbParameter.SourceColumn
  commentId: P:System.Data.Common.DbParameter.SourceColumn
  id: SourceColumn
  parent: System.Data.Common.DbParameter
  langs:
  - csharp
  - vb
  name: SourceColumn
  nameWithType: DbParameter.SourceColumn
  fullName: System.Data.Common.DbParameter.SourceColumn
  type: Property
  source:
    remote:
      path: src/System.Data.Common/src/System/Data/Common/DbParameter.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: SourceColumn
    path: src/System.Data.Common/src/System/Data/Common/DbParameter.cs
    startLine: 74
  assemblies:
  - System.Data.Common
  namespace: System.Data.Common
  summary: "\n<p>Gets or sets the name of the source column mapped to the <xref href=\"System.Data.DataSet\" data-throw-if-not-resolved=\"false\"></xref> and used for loading or returning the <xref href=\"System.Data.Common.DbParameter.Value\" data-throw-if-not-resolved=\"false\"></xref>.</p>\n"
  syntax:
    content: public abstract string SourceColumn { get; set; }
    content.vb: Public MustOverride Property SourceColumn As String
    parameters: []
    return:
      type: System.String
      description: "\n<p>The name of the source column mapped to the <xref href=\"System.Data.DataSet\" data-throw-if-not-resolved=\"false\"></xref>. The default is an empty string.</p>\n"
  implements:
  - System.Data.IDataParameter.SourceColumn
  modifiers.csharp:
  - public
  - abstract
  - get
  - set
  modifiers.vb:
  - Public
  - MustOverride
- uid: System.Data.Common.DbParameter.SourceColumnNullMapping
  commentId: P:System.Data.Common.DbParameter.SourceColumnNullMapping
  id: SourceColumnNullMapping
  parent: System.Data.Common.DbParameter
  langs:
  - csharp
  - vb
  name: SourceColumnNullMapping
  nameWithType: DbParameter.SourceColumnNullMapping
  fullName: System.Data.Common.DbParameter.SourceColumnNullMapping
  type: Property
  source:
    remote:
      path: src/System.Data.Common/src/System/Data/Common/DbParameter.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: SourceColumnNullMapping
    path: src/System.Data.Common/src/System/Data/Common/DbParameter.cs
    startLine: 80
  assemblies:
  - System.Data.Common
  namespace: System.Data.Common
  summary: "\n<p>Sets or gets a value which indicates whether the source column is nullable. This allows <xref href=\"System.Data.Common.DbCommandBuilder\" data-throw-if-not-resolved=\"false\"></xref> to correctly generate Update statements for nullable columns.</p>\n"
  syntax:
    content: public abstract bool SourceColumnNullMapping { get; set; }
    content.vb: Public MustOverride Property SourceColumnNullMapping As Boolean
    parameters: []
    return:
      type: System.Boolean
      description: "\n<p>\n<strong>true</strong> if the source column is nullable; <strong>false</strong> if it is not.</p>\n"
  modifiers.csharp:
  - public
  - abstract
  - get
  - set
  modifiers.vb:
  - Public
  - MustOverride
- uid: System.Data.Common.DbParameter.System#Data#IDbDataParameter#Precision
  commentId: P:System.Data.Common.DbParameter.System#Data#IDbDataParameter#Precision
  id: System#Data#IDbDataParameter#Precision
  isEii: true
  parent: System.Data.Common.DbParameter
  langs:
  - csharp
  - vb
  name: IDbDataParameter.Precision
  nameWithType: DbParameter.IDbDataParameter.Precision
  fullName: System.Data.Common.DbParameter.System.Data.IDbDataParameter.Precision
  type: Property
  source:
    remote:
      path: src/System.Data.Common/ref/System.Data.Common.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: System.Data.IDbDataParameter.Precision
    path: src/System.Data.Common/ref/System.Data.Common.cs
    startLine: 421
  assemblies:
  - System.Data.Common
  namespace: System.Data.Common
  summary: "\n<p>Indicates the precision of numeric parameters.</p>\n"
  syntax:
    content: byte IDbDataParameter.Precision { get; set; }
    content.vb: ReadOnly WriteOnly Property System.Data.IDbDataParameter.Precision As Byte Implements IDbDataParameter.Precision
    parameters: []
    return:
      type: System.Byte
      description: "\n<p>The maximum number of digits used to represent the <strong>Value</strong> property of a data provider <strong>Parameter</strong> object. The default value is 0, which indicates that a data provider sets the precision for <strong>Value</strong>.</p>\n"
  implements:
  - System.Data.IDbDataParameter.Precision
  nameWithType.vb: DbParameter.System.Data.IDbDataParameter.Precision
  modifiers.csharp:
  - get
  - set
  name.vb: System.Data.IDbDataParameter.Precision
- uid: System.Data.Common.DbParameter.System#Data#IDbDataParameter#Scale
  commentId: P:System.Data.Common.DbParameter.System#Data#IDbDataParameter#Scale
  id: System#Data#IDbDataParameter#Scale
  isEii: true
  parent: System.Data.Common.DbParameter
  langs:
  - csharp
  - vb
  name: IDbDataParameter.Scale
  nameWithType: DbParameter.IDbDataParameter.Scale
  fullName: System.Data.Common.DbParameter.System.Data.IDbDataParameter.Scale
  type: Property
  source:
    remote:
      path: src/System.Data.Common/ref/System.Data.Common.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: System.Data.IDbDataParameter.Scale
    path: src/System.Data.Common/ref/System.Data.Common.cs
    startLine: 422
  assemblies:
  - System.Data.Common
  namespace: System.Data.Common
  summary: "\n<p>For a description of this member, see <xref href=\"System.Data.IDbDataParameter.Scale\" data-throw-if-not-resolved=\"false\"></xref>.</p>\n"
  syntax:
    content: byte IDbDataParameter.Scale { get; set; }
    content.vb: ReadOnly WriteOnly Property System.Data.IDbDataParameter.Scale As Byte Implements IDbDataParameter.Scale
    parameters: []
    return:
      type: System.Byte
      description: "\n<p>The number of decimal places to which <xref href=\"System.Data.OleDb.OleDbParameter.Value\" data-throw-if-not-resolved=\"false\"></xref> is resolved. The default is 0.</p>\n"
  implements:
  - System.Data.IDbDataParameter.Scale
  nameWithType.vb: DbParameter.System.Data.IDbDataParameter.Scale
  modifiers.csharp:
  - get
  - set
  name.vb: System.Data.IDbDataParameter.Scale
- uid: System.Data.Common.DbParameter.Value
  commentId: P:System.Data.Common.DbParameter.Value
  id: Value
  parent: System.Data.Common.DbParameter
  langs:
  - csharp
  - vb
  name: Value
  nameWithType: DbParameter.Value
  fullName: System.Data.Common.DbParameter.Value
  type: Property
  source:
    remote:
      path: src/System.Data.Common/src/System/Data/Common/DbParameter.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: Value
    path: src/System.Data.Common/src/System/Data/Common/DbParameter.cs
    startLine: 86
  assemblies:
  - System.Data.Common
  namespace: System.Data.Common
  summary: "\n<p>Gets or sets the value of the parameter.</p>\n"
  syntax:
    content: public abstract object Value { get; set; }
    content.vb: Public MustOverride Property Value As Object
    parameters: []
    return:
      type: System.Object
      description: "\n<p>An <xref href=\"System.Object\" data-throw-if-not-resolved=\"false\"></xref> that is the value of the parameter. The default value is null.</p>\n"
  implements:
  - System.Data.IDataParameter.Value
  modifiers.csharp:
  - public
  - abstract
  - get
  - set
  modifiers.vb:
  - Public
  - MustOverride
- uid: System.Data.Common.DbParameter.System#Data#IDataParameter#SourceVersion
  commentId: P:System.Data.Common.DbParameter.System#Data#IDataParameter#SourceVersion
  id: System#Data#IDataParameter#SourceVersion
  isEii: true
  parent: System.Data.Common.DbParameter
  langs:
  - csharp
  - vb
  name: IDataParameter.SourceVersion
  nameWithType: DbParameter.IDataParameter.SourceVersion
  fullName: System.Data.Common.DbParameter.System.Data.IDataParameter.SourceVersion
  type: Property
  source:
    remote:
      path: src/System.Data.Common/ref/System.Data.Common.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: System.Data.IDataParameter.SourceVersion
    path: src/System.Data.Common/ref/System.Data.Common.cs
    startLine: 424
  assemblies:
  - System.Data.Common
  namespace: System.Data.Common
  syntax:
    content: DataRowVersion IDataParameter.SourceVersion { get; set; }
    content.vb: ReadOnly WriteOnly Property System.Data.IDataParameter.SourceVersion As DataRowVersion Implements IDataParameter.SourceVersion
    parameters: []
    return:
      type: System.Data.DataRowVersion
  implements:
  - System.Data.IDataParameter.SourceVersion
  nameWithType.vb: DbParameter.System.Data.IDataParameter.SourceVersion
  modifiers.csharp:
  - get
  - set
  name.vb: System.Data.IDataParameter.SourceVersion
- uid: System.Data.Common.DbParameter.ResetDbType
  commentId: M:System.Data.Common.DbParameter.ResetDbType
  id: ResetDbType
  parent: System.Data.Common.DbParameter
  langs:
  - csharp
  - vb
  name: ResetDbType()
  nameWithType: DbParameter.ResetDbType()
  fullName: System.Data.Common.DbParameter.ResetDbType()
  type: Method
  source:
    remote:
      path: src/System.Data.Common/src/System/Data/Common/DbParameter.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: ResetDbType
    path: src/System.Data.Common/src/System/Data/Common/DbParameter.cs
    startLine: 26
  assemblies:
  - System.Data.Common
  namespace: System.Data.Common
  summary: "\n<p>Resets the <strong>DbType</strong> property to its original settings.</p>\n"
  syntax:
    content: public abstract void ResetDbType()
    content.vb: Public MustOverride Sub ResetDbType
  modifiers.csharp:
  - public
  - abstract
  modifiers.vb:
  - Public
  - MustOverride
references:
- uid: System.Data.Common
  commentId: N:System.Data.Common
  isExternal: false
  name: System.Data.Common
  nameWithType: System.Data.Common
  fullName: System.Data.Common
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: false
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Data.IDbDataParameter
  commentId: T:System.Data.IDbDataParameter
  parent: System.Data
  isExternal: false
  name: IDbDataParameter
  nameWithType: IDbDataParameter
  fullName: System.Data.IDbDataParameter
- uid: System.Data.IDataParameter
  commentId: T:System.Data.IDataParameter
  parent: System.Data
  isExternal: false
  name: IDataParameter
  nameWithType: IDataParameter
  fullName: System.Data.IDataParameter
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: System.Data
  commentId: N:System.Data
  isExternal: false
  name: System.Data
  nameWithType: System.Data
  fullName: System.Data
- uid: System.Data.IDataParameter.DbType
  commentId: P:System.Data.IDataParameter.DbType
  parent: System.Data.IDataParameter
  isExternal: false
  name: DbType
  nameWithType: IDataParameter.DbType
  fullName: System.Data.IDataParameter.DbType
- uid: System.Data.DbType
  commentId: T:System.Data.DbType
  parent: System.Data
  isExternal: false
  name: DbType
  nameWithType: DbType
  fullName: System.Data.DbType
- uid: System.Data.IDataParameter.Direction
  commentId: P:System.Data.IDataParameter.Direction
  parent: System.Data.IDataParameter
  isExternal: false
  name: Direction
  nameWithType: IDataParameter.Direction
  fullName: System.Data.IDataParameter.Direction
- uid: System.Data.ParameterDirection
  commentId: T:System.Data.ParameterDirection
  parent: System.Data
  isExternal: false
  name: ParameterDirection
  nameWithType: ParameterDirection
  fullName: System.Data.ParameterDirection
- uid: System.Data.IDataParameter.IsNullable
  commentId: P:System.Data.IDataParameter.IsNullable
  parent: System.Data.IDataParameter
  isExternal: false
  name: IsNullable
  nameWithType: IDataParameter.IsNullable
  fullName: System.Data.IDataParameter.IsNullable
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: false
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Data.IDataParameter.ParameterName
  commentId: P:System.Data.IDataParameter.ParameterName
  parent: System.Data.IDataParameter
  isExternal: false
  name: ParameterName
  nameWithType: IDataParameter.ParameterName
  fullName: System.Data.IDataParameter.ParameterName
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: false
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Byte
  commentId: T:System.Byte
  parent: System
  isExternal: false
  name: Byte
  nameWithType: Byte
  fullName: System.Byte
- uid: System.Data.IDbDataParameter.Size
  commentId: P:System.Data.IDbDataParameter.Size
  parent: System.Data.IDbDataParameter
  isExternal: false
  name: Size
  nameWithType: IDbDataParameter.Size
  fullName: System.Data.IDbDataParameter.Size
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: false
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Data.IDataParameter.SourceColumn
  commentId: P:System.Data.IDataParameter.SourceColumn
  parent: System.Data.IDataParameter
  isExternal: false
  name: SourceColumn
  nameWithType: IDataParameter.SourceColumn
  fullName: System.Data.IDataParameter.SourceColumn
- uid: System.Data.IDbDataParameter.Precision
  commentId: P:System.Data.IDbDataParameter.Precision
  parent: System.Data.IDbDataParameter
  isExternal: false
  name: Precision
  nameWithType: IDbDataParameter.Precision
  fullName: System.Data.IDbDataParameter.Precision
- uid: System.Data.IDbDataParameter.Scale
  commentId: P:System.Data.IDbDataParameter.Scale
  parent: System.Data.IDbDataParameter
  isExternal: false
  name: Scale
  nameWithType: IDbDataParameter.Scale
  fullName: System.Data.IDbDataParameter.Scale
- uid: System.Data.IDataParameter.Value
  commentId: P:System.Data.IDataParameter.Value
  parent: System.Data.IDataParameter
  isExternal: false
  name: Value
  nameWithType: IDataParameter.Value
  fullName: System.Data.IDataParameter.Value
- uid: System.Data.IDataParameter.SourceVersion
  commentId: P:System.Data.IDataParameter.SourceVersion
  parent: System.Data.IDataParameter
  isExternal: false
  name: SourceVersion
  nameWithType: IDataParameter.SourceVersion
  fullName: System.Data.IDataParameter.SourceVersion
- uid: System.Data.DataRowVersion
  commentId: T:System.Data.DataRowVersion
  parent: System.Data
  isExternal: false
  name: DataRowVersion
  nameWithType: DataRowVersion
  fullName: System.Data.DataRowVersion
- uid: System.ArgumentException
  commentId: T:System.ArgumentException
  parent: System
  isExternal: false
  name: ArgumentException
  nameWithType: ArgumentException
  fullName: System.ArgumentException
