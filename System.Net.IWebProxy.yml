### YamlMime:ManagedReference
items:
- uid: System.Net.IWebProxy
  commentId: T:System.Net.IWebProxy
  id: IWebProxy
  parent: System.Net
  children:
  - System.Net.IWebProxy.Credentials
  - System.Net.IWebProxy.GetProxy(System.Uri)
  - System.Net.IWebProxy.IsBypassed(System.Uri)
  langs:
  - csharp
  - vb
  name: IWebProxy
  nameWithType: IWebProxy
  fullName: System.Net.IWebProxy
  type: Interface
  source:
    remote:
      path: src/System.Net.Primitives/ref/System.Net.Primitives.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: IWebProxy
    path: src/System.Net.Primitives/ref/System.Net.Primitives.cs
    startLine: 223
  assemblies:
  - System.Net.Primitives
  namespace: System.Net
  summary: "\n<p>Provides the base interface for implementation of proxy access for the <xref href=\"System.Net.WebRequest\" data-throw-if-not-resolved=\"false\"></xref> class.</p>\n"
  syntax:
    content: public interface IWebProxy
    content.vb: Public Interface IWebProxy
  modifiers.csharp:
  - public
  - interface
  modifiers.vb:
  - Public
  - Interface
- uid: System.Net.IWebProxy.Credentials
  commentId: P:System.Net.IWebProxy.Credentials
  id: Credentials
  parent: System.Net.IWebProxy
  langs:
  - csharp
  - vb
  name: Credentials
  nameWithType: IWebProxy.Credentials
  fullName: System.Net.IWebProxy.Credentials
  type: Property
  source:
    remote:
      path: src/System.Net.Primitives/ref/System.Net.Primitives.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: Credentials
    path: src/System.Net.Primitives/ref/System.Net.Primitives.cs
    startLine: 225
  assemblies:
  - System.Net.Primitives
  namespace: System.Net
  summary: "\n<p>The credentials to submit to the proxy server for authentication.</p>\n"
  syntax:
    content: ICredentials Credentials { get; set; }
    content.vb: Property Credentials As ICredentials
    parameters: []
    return:
      type: System.Net.ICredentials
      description: "\n<p>An <xref href=\"System.Net.ICredentials\" data-throw-if-not-resolved=\"false\"></xref> instance that contains the credentials that are needed to authenticate a request to the proxy server.</p>\n"
  modifiers.csharp:
  - get
  - set
- uid: System.Net.IWebProxy.GetProxy(System.Uri)
  commentId: M:System.Net.IWebProxy.GetProxy(System.Uri)
  id: GetProxy(System.Uri)
  parent: System.Net.IWebProxy
  langs:
  - csharp
  - vb
  name: GetProxy(Uri)
  nameWithType: IWebProxy.GetProxy(Uri)
  fullName: System.Net.IWebProxy.GetProxy(System.Uri)
  type: Method
  source:
    remote:
      path: src/System.Net.Primitives/ref/System.Net.Primitives.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: GetProxy
    path: src/System.Net.Primitives/ref/System.Net.Primitives.cs
    startLine: 226
  assemblies:
  - System.Net.Primitives
  namespace: System.Net
  summary: "\n<p>Returns the URI of a proxy.</p>\n"
  syntax:
    content: Uri GetProxy(Uri destination)
    content.vb: Function GetProxy(destination As Uri) As Uri
    parameters:
    - id: destination
      type: System.Uri
      description: "\n<p>A <xref href=\"System.Uri\" data-throw-if-not-resolved=\"false\"></xref> that specifies the requested Internet resource. </p>\n"
    return:
      type: System.Uri
      description: "\n<p>A <xref href=\"System.Uri\" data-throw-if-not-resolved=\"false\"></xref> instance that contains the URI of the proxy used to contact <em>destination</em>.</p>\n"
- uid: System.Net.IWebProxy.IsBypassed(System.Uri)
  commentId: M:System.Net.IWebProxy.IsBypassed(System.Uri)
  id: IsBypassed(System.Uri)
  parent: System.Net.IWebProxy
  langs:
  - csharp
  - vb
  name: IsBypassed(Uri)
  nameWithType: IWebProxy.IsBypassed(Uri)
  fullName: System.Net.IWebProxy.IsBypassed(System.Uri)
  type: Method
  source:
    remote:
      path: src/System.Net.Primitives/ref/System.Net.Primitives.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: IsBypassed
    path: src/System.Net.Primitives/ref/System.Net.Primitives.cs
    startLine: 227
  assemblies:
  - System.Net.Primitives
  namespace: System.Net
  summary: "\n<p>Indicates that the proxy should not be used for the specified host.</p>\n"
  syntax:
    content: bool IsBypassed(Uri host)
    content.vb: Function IsBypassed(host As Uri) As Boolean
    parameters:
    - id: host
      type: System.Uri
      description: "\n<p>The <xref href=\"System.Uri\" data-throw-if-not-resolved=\"false\"></xref> of the host to check for proxy use. </p>\n"
    return:
      type: System.Boolean
      description: "\n<p>\n<strong>true</strong> if the proxy server should not be used for <em>host</em>; otherwise, <strong>false</strong>.</p>\n"
references:
- uid: System.Net
  commentId: N:System.Net
  isExternal: false
  name: System.Net
  nameWithType: System.Net
  fullName: System.Net
- uid: System.Net.ICredentials
  commentId: T:System.Net.ICredentials
  parent: System.Net
  isExternal: false
  name: ICredentials
  nameWithType: ICredentials
  fullName: System.Net.ICredentials
- uid: System.Uri
  commentId: T:System.Uri
  parent: System
  isExternal: false
  name: Uri
  nameWithType: Uri
  fullName: System.Uri
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: false
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
