### YamlMime:ManagedReference
items:
- uid: System.ServiceModel.Channels.BindingContext
  commentId: T:System.ServiceModel.Channels.BindingContext
  id: BindingContext
  parent: System.ServiceModel.Channels
  children:
  - System.ServiceModel.Channels.BindingContext.#ctor(System.ServiceModel.Channels.CustomBinding,System.ServiceModel.Channels.BindingParameterCollection)
  - System.ServiceModel.Channels.BindingContext.Binding
  - System.ServiceModel.Channels.BindingContext.BindingParameters
  - System.ServiceModel.Channels.BindingContext.BuildInnerChannelFactory``1
  - System.ServiceModel.Channels.BindingContext.CanBuildInnerChannelFactory``1
  - System.ServiceModel.Channels.BindingContext.Clone
  - System.ServiceModel.Channels.BindingContext.GetInnerProperty``1
  - System.ServiceModel.Channels.BindingContext.RemainingBindingElements
  langs:
  - csharp
  - vb
  name: BindingContext
  nameWithType: BindingContext
  fullName: System.ServiceModel.Channels.BindingContext
  type: Class
  source:
    remote:
      path: src/System.Private.ServiceModel/src/System/ServiceModel/Channels/BindingContext.cs
      branch: master
      repo: https://github.com/dotnet/wcf.git
    id: BindingContext
    path: src/System.Private.ServiceModel/src/System/ServiceModel/Channels/BindingContext.cs
    startLine: 11
  assemblies:
  - System.ServiceModel.Primitives
  namespace: System.ServiceModel.Channels
  summary: "\n<p>Provides information about the addresses, bindings, binding elements and binding parameters required to build the channel listeners and channel factories.</p>\n"
  syntax:
    content: public class BindingContext
    content.vb: Public Class BindingContext
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: System.ServiceModel.Channels.BindingContext.#ctor(System.ServiceModel.Channels.CustomBinding,System.ServiceModel.Channels.BindingParameterCollection)
  commentId: M:System.ServiceModel.Channels.BindingContext.#ctor(System.ServiceModel.Channels.CustomBinding,System.ServiceModel.Channels.BindingParameterCollection)
  id: '#ctor(System.ServiceModel.Channels.CustomBinding,System.ServiceModel.Channels.BindingParameterCollection)'
  parent: System.ServiceModel.Channels.BindingContext
  langs:
  - csharp
  - vb
  name: BindingContext(CustomBinding, BindingParameterCollection)
  nameWithType: BindingContext.BindingContext(CustomBinding, BindingParameterCollection)
  fullName: System.ServiceModel.Channels.BindingContext.BindingContext(System.ServiceModel.Channels.CustomBinding, System.ServiceModel.Channels.BindingParameterCollection)
  type: Constructor
  source:
    remote:
      path: src/System.Private.ServiceModel/src/System/ServiceModel/Channels/BindingContext.cs
      branch: master
      repo: https://github.com/dotnet/wcf.git
    id: .ctor
    path: src/System.Private.ServiceModel/src/System/ServiceModel/Channels/BindingContext.cs
    startLine: 20
  assemblies:
  - System.ServiceModel.Primitives
  namespace: System.ServiceModel.Channels
  summary: "\n<p>Initializes a new instance of the <xref href=\"System.ServiceModel.Channels.BindingContext\" data-throw-if-not-resolved=\"false\"></xref> class for a specified binding and collection of binding parameters.</p>\n"
  syntax:
    content: public BindingContext(CustomBinding binding, BindingParameterCollection parameters)
    content.vb: Public Sub New(binding As CustomBinding, parameters As BindingParameterCollection)
    parameters:
    - id: binding
      type: System.ServiceModel.Channels.CustomBinding
      description: "\n<p>The <xref href=\"System.ServiceModel.Channels.CustomBinding\" data-throw-if-not-resolved=\"false\"></xref> for the channel.</p>\n"
    - id: parameters
      type: System.ServiceModel.Channels.BindingParameterCollection
      description: "\n<p>The <xref href=\"System.ServiceModel.Channels.BindingParameterCollection\" data-throw-if-not-resolved=\"false\"></xref> for the channel.</p>\n"
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "\n<p>\n<em>binding</em> is <strong>null</strong>.</p>\n"
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: System.ServiceModel.Channels.BindingContext.Binding
  commentId: P:System.ServiceModel.Channels.BindingContext.Binding
  id: Binding
  parent: System.ServiceModel.Channels.BindingContext
  langs:
  - csharp
  - vb
  name: Binding
  nameWithType: BindingContext.Binding
  fullName: System.ServiceModel.Channels.BindingContext.Binding
  type: Property
  source:
    remote:
      path: src/System.Private.ServiceModel/src/System/ServiceModel/Channels/BindingContext.cs
      branch: master
      repo: https://github.com/dotnet/wcf.git
    id: Binding
    path: src/System.Private.ServiceModel/src/System/ServiceModel/Channels/BindingContext.cs
    startLine: 47
  assemblies:
  - System.ServiceModel.Primitives
  namespace: System.ServiceModel.Channels
  summary: "\n<p>Gets the binding for the channel built in the current context.</p>\n"
  syntax:
    content: public CustomBinding Binding { get; }
    content.vb: Public ReadOnly Property Binding As CustomBinding
    parameters: []
    return:
      type: System.ServiceModel.Channels.CustomBinding
      description: "\n<p>The <xref href=\"System.ServiceModel.Channels.CustomBinding\" data-throw-if-not-resolved=\"false\"></xref> for the channel built in the current context.</p>\n"
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: System.ServiceModel.Channels.BindingContext.BindingParameters
  commentId: P:System.ServiceModel.Channels.BindingContext.BindingParameters
  id: BindingParameters
  parent: System.ServiceModel.Channels.BindingContext
  langs:
  - csharp
  - vb
  name: BindingParameters
  nameWithType: BindingContext.BindingParameters
  fullName: System.ServiceModel.Channels.BindingContext.BindingParameters
  type: Property
  source:
    remote:
      path: src/System.Private.ServiceModel/src/System/ServiceModel/Channels/BindingContext.cs
      branch: master
      repo: https://github.com/dotnet/wcf.git
    id: BindingParameters
    path: src/System.Private.ServiceModel/src/System/ServiceModel/Channels/BindingContext.cs
    startLine: 52
  assemblies:
  - System.ServiceModel.Primitives
  namespace: System.ServiceModel.Channels
  summary: "\n<p>Gets the collection of binding parameters for the channel built in the current context.</p>\n"
  syntax:
    content: public BindingParameterCollection BindingParameters { get; }
    content.vb: Public ReadOnly Property BindingParameters As BindingParameterCollection
    parameters: []
    return:
      type: System.ServiceModel.Channels.BindingParameterCollection
      description: "\n<p>The <xref href=\"System.ServiceModel.Channels.BindingParameterCollection\" data-throw-if-not-resolved=\"false\"></xref> for the channel built in the current context.</p>\n"
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: System.ServiceModel.Channels.BindingContext.RemainingBindingElements
  commentId: P:System.ServiceModel.Channels.BindingContext.RemainingBindingElements
  id: RemainingBindingElements
  parent: System.ServiceModel.Channels.BindingContext
  langs:
  - csharp
  - vb
  name: RemainingBindingElements
  nameWithType: BindingContext.RemainingBindingElements
  fullName: System.ServiceModel.Channels.BindingContext.RemainingBindingElements
  type: Property
  source:
    remote:
      path: src/System.Private.ServiceModel/src/System/ServiceModel/Channels/BindingContext.cs
      branch: master
      repo: https://github.com/dotnet/wcf.git
    id: RemainingBindingElements
    path: src/System.Private.ServiceModel/src/System/ServiceModel/Channels/BindingContext.cs
    startLine: 75
  assemblies:
  - System.ServiceModel.Primitives
  namespace: System.ServiceModel.Channels
  summary: "\n<p>Gets the binding elements that are used by other binding elements to construct the channel stack.</p>\n"
  syntax:
    content: public BindingElementCollection RemainingBindingElements { get; }
    content.vb: Public ReadOnly Property RemainingBindingElements As BindingElementCollection
    parameters: []
    return:
      type: System.ServiceModel.Channels.BindingElementCollection
      description: "\n<p>The <xref href=\"System.ServiceModel.Channels.BindingElementCollection\" data-throw-if-not-resolved=\"false\"></xref> that contains the binding elements that are used by other binding elements to construct the channel stack.</p>\n"
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: System.ServiceModel.Channels.BindingContext.BuildInnerChannelFactory``1
  commentId: M:System.ServiceModel.Channels.BindingContext.BuildInnerChannelFactory``1
  id: BuildInnerChannelFactory``1
  parent: System.ServiceModel.Channels.BindingContext
  langs:
  - csharp
  - vb
  name: BuildInnerChannelFactory<TChannel>()
  nameWithType: BindingContext.BuildInnerChannelFactory<TChannel>()
  fullName: System.ServiceModel.Channels.BindingContext.BuildInnerChannelFactory<TChannel>()
  type: Method
  source:
    remote:
      path: src/System.Private.ServiceModel/src/System/ServiceModel/Channels/BindingContext.cs
      branch: master
      repo: https://github.com/dotnet/wcf.git
    id: BuildInnerChannelFactory
    path: src/System.Private.ServiceModel/src/System/ServiceModel/Channels/BindingContext.cs
    startLine: 80
  assemblies:
  - System.ServiceModel.Primitives
  namespace: System.ServiceModel.Channels
  summary: "\n<p>Builds the inner channel factory for channels of a specified type below the current channel factory.</p>\n"
  syntax:
    content: public IChannelFactory<TChannel> BuildInnerChannelFactory<TChannel>()
    content.vb: Public Function BuildInnerChannelFactory(Of TChannel) As IChannelFactory(Of TChannel)
    typeParameters:
    - id: TChannel
      description: "\n<p>The type of <xref href=\"System.ServiceModel.Channels.IChannel\" data-throw-if-not-resolved=\"false\"></xref> object the inner channel factory produces.</p>\n"
    return:
      type: System.ServiceModel.Channels.IChannelFactory{{TChannel}}
      description: "\n<p>The <xref href=\"System.ServiceModel.Channels.IChannelFactory`1\" data-throw-if-not-resolved=\"false\"></xref> of type <xref href=\"System.ServiceModel.Channels.IChannel\" data-throw-if-not-resolved=\"false\"></xref> that represents the inner channel factory of the current channel factory.</p>\n"
  nameWithType.vb: BindingContext.BuildInnerChannelFactory(Of TChannel)()
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: System.ServiceModel.Channels.BindingContext.BuildInnerChannelFactory(Of TChannel)()
  name.vb: BuildInnerChannelFactory(Of TChannel)()
- uid: System.ServiceModel.Channels.BindingContext.CanBuildInnerChannelFactory``1
  commentId: M:System.ServiceModel.Channels.BindingContext.CanBuildInnerChannelFactory``1
  id: CanBuildInnerChannelFactory``1
  parent: System.ServiceModel.Channels.BindingContext
  langs:
  - csharp
  - vb
  name: CanBuildInnerChannelFactory<TChannel>()
  nameWithType: BindingContext.CanBuildInnerChannelFactory<TChannel>()
  fullName: System.ServiceModel.Channels.BindingContext.CanBuildInnerChannelFactory<TChannel>()
  type: Method
  source:
    remote:
      path: src/System.Private.ServiceModel/src/System/ServiceModel/Channels/BindingContext.cs
      branch: master
      repo: https://github.com/dotnet/wcf.git
    id: CanBuildInnerChannelFactory
    path: src/System.Private.ServiceModel/src/System/ServiceModel/Channels/BindingContext.cs
    startLine: 85
  assemblies:
  - System.ServiceModel.Primitives
  namespace: System.ServiceModel.Channels
  summary: "\n<p>Returns a value that indicates whether the inner channel factory can produce a specified type of channel.</p>\n"
  syntax:
    content: public bool CanBuildInnerChannelFactory<TChannel>()
    content.vb: Public Function CanBuildInnerChannelFactory(Of TChannel) As Boolean
    typeParameters:
    - id: TChannel
      description: "\n<p>The type of <xref href=\"System.ServiceModel.Channels.IChannel\" data-throw-if-not-resolved=\"false\"></xref> object the inner channel factory produces.</p>\n"
    return:
      type: System.Boolean
      description: "\n<p>\n<strong>true</strong> if the inner channel factory can produce the specified <em>TChannel</em>; otherwise, <strong>false</strong>.</p>\n"
  nameWithType.vb: BindingContext.CanBuildInnerChannelFactory(Of TChannel)()
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: System.ServiceModel.Channels.BindingContext.CanBuildInnerChannelFactory(Of TChannel)()
  name.vb: CanBuildInnerChannelFactory(Of TChannel)()
- uid: System.ServiceModel.Channels.BindingContext.Clone
  commentId: M:System.ServiceModel.Channels.BindingContext.Clone
  id: Clone
  parent: System.ServiceModel.Channels.BindingContext
  langs:
  - csharp
  - vb
  name: Clone()
  nameWithType: BindingContext.Clone()
  fullName: System.ServiceModel.Channels.BindingContext.Clone()
  type: Method
  source:
    remote:
      path: src/System.Private.ServiceModel/src/System/ServiceModel/Channels/BindingContext.cs
      branch: master
      repo: https://github.com/dotnet/wcf.git
    id: Clone
    path: src/System.Private.ServiceModel/src/System/ServiceModel/Channels/BindingContext.cs
    startLine: 105
  assemblies:
  - System.ServiceModel.Primitives
  namespace: System.ServiceModel.Channels
  summary: "\n<p>Returns a copy of the current channel build context.</p>\n"
  syntax:
    content: public BindingContext Clone()
    content.vb: Public Function Clone As BindingContext
    return:
      type: System.ServiceModel.Channels.BindingContext
      description: "\n<p>A <xref href=\"System.ServiceModel.Channels.BindingContext\" data-throw-if-not-resolved=\"false\"></xref> object that is a copy of the current channel build context.</p>\n"
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: System.ServiceModel.Channels.BindingContext.GetInnerProperty``1
  commentId: M:System.ServiceModel.Channels.BindingContext.GetInnerProperty``1
  id: GetInnerProperty``1
  parent: System.ServiceModel.Channels.BindingContext
  langs:
  - csharp
  - vb
  name: GetInnerProperty<T>()
  nameWithType: BindingContext.GetInnerProperty<T>()
  fullName: System.ServiceModel.Channels.BindingContext.GetInnerProperty<T>()
  type: Method
  source:
    remote:
      path: src/System.Private.ServiceModel/src/System/ServiceModel/Channels/BindingContext.cs
      branch: master
      repo: https://github.com/dotnet/wcf.git
    id: GetInnerProperty
    path: src/System.Private.ServiceModel/src/System/ServiceModel/Channels/BindingContext.cs
    startLine: 91
  assemblies:
  - System.ServiceModel.Primitives
  namespace: System.ServiceModel.Channels
  summary: "\n<p>Returns a typed object requested, if present, from the appropriate layer in the binding stack.</p>\n"
  syntax:
    content: 'public T GetInnerProperty<T>()where T : class'
    content.vb: Public Function GetInnerProperty(Of T As Class) As T
    typeParameters:
    - id: T
      description: "\n<p>The typed object for which the method is querying.</p>\n"
    return:
      type: '{T}'
      description: "\n<p>The typed object <em>T</em> requested if it is present or <strong>null</strong> if it is not.</p>\n"
  nameWithType.vb: BindingContext.GetInnerProperty(Of T)()
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: System.ServiceModel.Channels.BindingContext.GetInnerProperty(Of T)()
  name.vb: GetInnerProperty(Of T)()
references:
- uid: System.ServiceModel.Channels
  commentId: N:System.ServiceModel.Channels
  isExternal: false
  name: System.ServiceModel.Channels
  nameWithType: System.ServiceModel.Channels
  fullName: System.ServiceModel.Channels
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: false
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: System.ServiceModel.Channels.CustomBinding
  commentId: T:System.ServiceModel.Channels.CustomBinding
  parent: System.ServiceModel.Channels
  isExternal: false
  name: CustomBinding
  nameWithType: CustomBinding
  fullName: System.ServiceModel.Channels.CustomBinding
- uid: System.ServiceModel.Channels.BindingParameterCollection
  commentId: T:System.ServiceModel.Channels.BindingParameterCollection
  parent: System.ServiceModel.Channels
  isExternal: false
  name: BindingParameterCollection
  nameWithType: BindingParameterCollection
  fullName: System.ServiceModel.Channels.BindingParameterCollection
- uid: System.ServiceModel.Channels.BindingElementCollection
  commentId: T:System.ServiceModel.Channels.BindingElementCollection
  parent: System.ServiceModel.Channels
  isExternal: false
  name: BindingElementCollection
  nameWithType: BindingElementCollection
  fullName: System.ServiceModel.Channels.BindingElementCollection
- uid: System.ServiceModel.Channels.IChannelFactory{{TChannel}}
  commentId: '!:System.ServiceModel.Channels.IChannelFactory{``0}'
  parent: System.ServiceModel.Channels
  definition: System.ServiceModel.Channels.IChannelFactory`1
  name: IChannelFactory<TChannel>
  nameWithType: IChannelFactory<TChannel>
  fullName: System.ServiceModel.Channels.IChannelFactory<TChannel>
  nameWithType.vb: IChannelFactory(Of TChannel)
  fullname.vb: System.ServiceModel.Channels.IChannelFactory(Of TChannel)
  name.vb: IChannelFactory(Of TChannel)
  spec.csharp:
  - uid: System.ServiceModel.Channels.IChannelFactory`1
    name: IChannelFactory
    nameWithType: IChannelFactory
    fullName: System.ServiceModel.Channels.IChannelFactory
  - name: <
    nameWithType: <
    fullName: <
  - name: TChannel
    nameWithType: TChannel
    fullName: TChannel
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.ServiceModel.Channels.IChannelFactory`1
    name: IChannelFactory
    nameWithType: IChannelFactory
    fullName: System.ServiceModel.Channels.IChannelFactory
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TChannel
    nameWithType: TChannel
    fullName: TChannel
  - name: )
    nameWithType: )
    fullName: )
- uid: System.ServiceModel.Channels.IChannelFactory`1
  commentId: T:System.ServiceModel.Channels.IChannelFactory`1
  isExternal: false
  name: IChannelFactory<>
  nameWithType: IChannelFactory<>
  fullName: System.ServiceModel.Channels.IChannelFactory<>
  nameWithType.vb: IChannelFactory(Of )
  fullname.vb: System.ServiceModel.Channels.IChannelFactory(Of )
  name.vb: IChannelFactory(Of )
  spec.csharp:
  - uid: System.ServiceModel.Channels.IChannelFactory`1
    name: IChannelFactory
    nameWithType: IChannelFactory
    fullName: System.ServiceModel.Channels.IChannelFactory
  - name: <
    nameWithType: <
    fullName: <
  - {}
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.ServiceModel.Channels.IChannelFactory`1
    name: IChannelFactory
    nameWithType: IChannelFactory
    fullName: System.ServiceModel.Channels.IChannelFactory
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - {}
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: false
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.ServiceModel.Channels.BindingContext
  commentId: T:System.ServiceModel.Channels.BindingContext
  parent: System.ServiceModel.Channels
  isExternal: false
  name: BindingContext
  nameWithType: BindingContext
  fullName: System.ServiceModel.Channels.BindingContext
- uid: '{T}'
  commentId: '!:T'
  definition: T
  name: T
  nameWithType: T
  fullName: T
- uid: T
  isExternal: false
  name: T
  nameWithType: T
  fullName: T
- uid: System.ArgumentNullException
  commentId: T:System.ArgumentNullException
  isExternal: false
  name: ArgumentNullException
  nameWithType: ArgumentNullException
  fullName: System.ArgumentNullException
