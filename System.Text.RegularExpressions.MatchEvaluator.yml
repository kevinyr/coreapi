### YamlMime:ManagedReference
items:
- uid: System.Text.RegularExpressions.MatchEvaluator
  commentId: T:System.Text.RegularExpressions.MatchEvaluator
  id: MatchEvaluator
  parent: System.Text.RegularExpressions
  children: []
  langs:
  - csharp
  - vb
  name: MatchEvaluator
  nameWithType: MatchEvaluator
  fullName: System.Text.RegularExpressions.MatchEvaluator
  type: Delegate
  source:
    remote:
      path: src/System.Text.RegularExpressions/src/System/Text/RegularExpressions/Regex.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: MatchEvaluator
    path: src/System.Text.RegularExpressions/src/System/Text/RegularExpressions/Regex.cs
    startLine: 999
  assemblies:
  - System.Text.RegularExpressions
  namespace: System.Text.RegularExpressions
  summary: "\n<p>Represents the method that is called each time a regular expression match is found during a <xref href=\"System.Text.RegularExpressions.Regex.Replace(System.String,System.String)\" data-throw-if-not-resolved=\"false\"></xref> method operation.</p>\n"
  syntax:
    content: public delegate string MatchEvaluator(Match match);
    content.vb: Public Delegate Function MatchEvaluator(match As Match) As String
    parameters:
    - id: match
      type: System.Text.RegularExpressions.Match
      description: "\n<p>The <xref href=\"System.Text.RegularExpressions.Match\" data-throw-if-not-resolved=\"false\"></xref> object that represents a single regular expression match during a <xref href=\"System.Text.RegularExpressions.Regex.Replace(System.String,System.String)\" data-throw-if-not-resolved=\"false\"></xref> method operation. </p>\n"
    return:
      type: System.String
      description: "\n<p>A string returned by the method that is represented by the <xref href=\"System.Text.RegularExpressions.MatchEvaluator\" data-throw-if-not-resolved=\"false\"></xref> delegate.</p>\n"
  seealso:
  - linkId: System.Text.RegularExpressions.Regex.Replace(System.String,System.String)
    commentId: M:System.Text.RegularExpressions.Regex.Replace(System.String,System.String)
  extensionMethods:
  - System.Delegate.System.Reflection.RuntimeReflectionExtensions.GetMethodInfo
  modifiers.csharp:
  - public
  - delegate
  modifiers.vb:
  - Public
  - Delegate
references:
- uid: System.Text.RegularExpressions
  commentId: N:System.Text.RegularExpressions
  isExternal: false
  name: System.Text.RegularExpressions
  nameWithType: System.Text.RegularExpressions
  fullName: System.Text.RegularExpressions
- uid: System.Delegate.System.Reflection.RuntimeReflectionExtensions.GetMethodInfo
  commentId: M:System.Reflection.RuntimeReflectionExtensions.GetMethodInfo(System.Delegate)
  parent: System.Reflection.RuntimeReflectionExtensions
  definition: System.Reflection.RuntimeReflectionExtensions.GetMethodInfo(System.Delegate)
  name: GetMethodInfo()
  nameWithType: RuntimeReflectionExtensions.GetMethodInfo()
  fullName: System.Reflection.RuntimeReflectionExtensions.GetMethodInfo()
  spec.csharp:
  - uid: System.Reflection.RuntimeReflectionExtensions.GetMethodInfo
    name: GetMethodInfo
    nameWithType: RuntimeReflectionExtensions.GetMethodInfo
    fullName: System.Reflection.RuntimeReflectionExtensions.GetMethodInfo
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Reflection.RuntimeReflectionExtensions.GetMethodInfo
    name: GetMethodInfo
    nameWithType: RuntimeReflectionExtensions.GetMethodInfo
    fullName: System.Reflection.RuntimeReflectionExtensions.GetMethodInfo
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Text.RegularExpressions.Match
  commentId: T:System.Text.RegularExpressions.Match
  parent: System.Text.RegularExpressions
  isExternal: false
  name: Match
  nameWithType: Match
  fullName: System.Text.RegularExpressions.Match
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: false
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Reflection.RuntimeReflectionExtensions.GetMethodInfo(System.Delegate)
  commentId: M:System.Reflection.RuntimeReflectionExtensions.GetMethodInfo(System.Delegate)
  isExternal: true
  name: GetMethodInfo(Delegate)
  nameWithType: RuntimeReflectionExtensions.GetMethodInfo(Delegate)
  fullName: System.Reflection.RuntimeReflectionExtensions.GetMethodInfo(System.Delegate)
  spec.csharp:
  - uid: System.Reflection.RuntimeReflectionExtensions.GetMethodInfo(System.Delegate)
    name: GetMethodInfo
    nameWithType: RuntimeReflectionExtensions.GetMethodInfo
    fullName: System.Reflection.RuntimeReflectionExtensions.GetMethodInfo
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Delegate
    name: Delegate
    nameWithType: Delegate
    fullName: System.Delegate
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Reflection.RuntimeReflectionExtensions.GetMethodInfo(System.Delegate)
    name: GetMethodInfo
    nameWithType: RuntimeReflectionExtensions.GetMethodInfo
    fullName: System.Reflection.RuntimeReflectionExtensions.GetMethodInfo
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Delegate
    name: Delegate
    nameWithType: Delegate
    fullName: System.Delegate
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Reflection.RuntimeReflectionExtensions
  commentId: T:System.Reflection.RuntimeReflectionExtensions
  parent: System.Reflection
  isExternal: false
  name: RuntimeReflectionExtensions
  nameWithType: RuntimeReflectionExtensions
  fullName: System.Reflection.RuntimeReflectionExtensions
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: System.Reflection
  commentId: N:System.Reflection
  isExternal: false
  name: System.Reflection
  nameWithType: System.Reflection
  fullName: System.Reflection
