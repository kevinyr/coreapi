### YamlMime:ManagedReference
items:
- uid: System.ServiceModel.Channels.ChannelFactoryBase`1
  commentId: T:System.ServiceModel.Channels.ChannelFactoryBase`1
  id: ChannelFactoryBase`1
  parent: System.ServiceModel.Channels
  children:
  - System.ServiceModel.Channels.ChannelFactoryBase`1.#ctor
  - System.ServiceModel.Channels.ChannelFactoryBase`1.#ctor(System.ServiceModel.IDefaultCommunicationTimeouts)
  - System.ServiceModel.Channels.ChannelFactoryBase`1.CreateChannel(System.ServiceModel.EndpointAddress)
  - System.ServiceModel.Channels.ChannelFactoryBase`1.CreateChannel(System.ServiceModel.EndpointAddress,System.Uri)
  - System.ServiceModel.Channels.ChannelFactoryBase`1.OnAbort
  - System.ServiceModel.Channels.ChannelFactoryBase`1.OnBeginClose(System.TimeSpan,System.AsyncCallback,System.Object)
  - System.ServiceModel.Channels.ChannelFactoryBase`1.OnClose(System.TimeSpan)
  - System.ServiceModel.Channels.ChannelFactoryBase`1.OnCreateChannel(System.ServiceModel.EndpointAddress,System.Uri)
  - System.ServiceModel.Channels.ChannelFactoryBase`1.OnEndClose(System.IAsyncResult)
  - System.ServiceModel.Channels.ChannelFactoryBase`1.ValidateCreateChannel
  langs:
  - csharp
  - vb
  name: ChannelFactoryBase<TChannel>
  nameWithType: ChannelFactoryBase<TChannel>
  fullName: System.ServiceModel.Channels.ChannelFactoryBase<TChannel>
  type: Class
  source:
    remote:
      path: src/System.Private.ServiceModel/src/System/ServiceModel/Channels/ChannelFactoryBase.cs
      branch: master
      repo: https://github.com/dotnet/wcf.git
    id: ChannelFactoryBase
    path: src/System.Private.ServiceModel/src/System/ServiceModel/Channels/ChannelFactoryBase.cs
    startLine: 92
  assemblies:
  - System.ServiceModel.Primitives
  namespace: System.ServiceModel.Channels
  summary: "\n<p>Provides a common base implementation for channel factories on the client to create channels of a specified type connected to a specified address.</p>\n"
  syntax:
    content: 'public abstract class ChannelFactoryBase<TChannel> : ChannelFactoryBase, IDefaultCommunicationTimeouts, IAsyncChannelFactory, IAsyncCommunicationObject, IChannelFactory<TChannel>, IChannelFactory, ICommunicationObject'
    content.vb: >-
      Public MustInherit Class ChannelFactoryBase(Of TChannel)
          Inherits ChannelFactoryBase
          Implements IDefaultCommunicationTimeouts, IAsyncChannelFactory, IAsyncCommunicationObject, IChannelFactory(Of TChannel), IChannelFactory, ICommunicationObject
    typeParameters:
    - id: TChannel
      description: "\n<p>The type of channel the factory produces.</p>\n"
  inheritance:
  - System.Object
  - System.ServiceModel.Channels.CommunicationObject
  - System.ServiceModel.Channels.ChannelManagerBase
  - System.ServiceModel.Channels.ChannelFactoryBase
  implements:
  - System.ServiceModel.IDefaultCommunicationTimeouts
  - System.ServiceModel.Channels.IChannelFactory{{TChannel}}
  - System.ServiceModel.Channels.IChannelFactory
  - System.ServiceModel.ICommunicationObject
  inheritedMembers:
  - System.ServiceModel.Channels.ChannelFactoryBase.DefaultCloseTimeout
  - System.ServiceModel.Channels.ChannelFactoryBase.DefaultOpenTimeout
  - System.ServiceModel.Channels.ChannelFactoryBase.DefaultReceiveTimeout
  - System.ServiceModel.Channels.ChannelFactoryBase.DefaultSendTimeout
  - System.ServiceModel.Channels.ChannelFactoryBase.GetProperty``1
  - System.ServiceModel.Channels.ChannelManagerBase.System#ServiceModel#IDefaultCommunicationTimeouts#CloseTimeout
  - System.ServiceModel.Channels.ChannelManagerBase.System#ServiceModel#IDefaultCommunicationTimeouts#OpenTimeout
  - System.ServiceModel.Channels.ChannelManagerBase.System#ServiceModel#IDefaultCommunicationTimeouts#ReceiveTimeout
  - System.ServiceModel.Channels.ChannelManagerBase.System#ServiceModel#IDefaultCommunicationTimeouts#SendTimeout
  - System.ServiceModel.Channels.CommunicationObject.IsDisposed
  - System.ServiceModel.Channels.CommunicationObject.State
  - System.ServiceModel.Channels.CommunicationObject.ThisLock
  - System.ServiceModel.Channels.CommunicationObject.Closed
  - System.ServiceModel.Channels.CommunicationObject.Closing
  - System.ServiceModel.Channels.CommunicationObject.Faulted
  - System.ServiceModel.Channels.CommunicationObject.Opened
  - System.ServiceModel.Channels.CommunicationObject.Opening
  - System.ServiceModel.Channels.CommunicationObject.Abort
  - System.ServiceModel.Channels.CommunicationObject.BeginClose(System.AsyncCallback,System.Object)
  - System.ServiceModel.Channels.CommunicationObject.BeginClose(System.TimeSpan,System.AsyncCallback,System.Object)
  - System.ServiceModel.Channels.CommunicationObject.BeginOpen(System.AsyncCallback,System.Object)
  - System.ServiceModel.Channels.CommunicationObject.BeginOpen(System.TimeSpan,System.AsyncCallback,System.Object)
  - System.ServiceModel.Channels.CommunicationObject.Close
  - System.ServiceModel.Channels.CommunicationObject.Close(System.TimeSpan)
  - System.ServiceModel.Channels.CommunicationObject.EndClose(System.IAsyncResult)
  - System.ServiceModel.Channels.CommunicationObject.EndOpen(System.IAsyncResult)
  - System.ServiceModel.Channels.CommunicationObject.Fault
  - System.ServiceModel.Channels.CommunicationObject.GetCommunicationObjectType
  - System.ServiceModel.Channels.CommunicationObject.OnBeginOpen(System.TimeSpan,System.AsyncCallback,System.Object)
  - System.ServiceModel.Channels.CommunicationObject.OnClosed
  - System.ServiceModel.Channels.CommunicationObject.OnClosing
  - System.ServiceModel.Channels.CommunicationObject.OnEndOpen(System.IAsyncResult)
  - System.ServiceModel.Channels.CommunicationObject.OnFaulted
  - System.ServiceModel.Channels.CommunicationObject.OnOpen(System.TimeSpan)
  - System.ServiceModel.Channels.CommunicationObject.OnOpened
  - System.ServiceModel.Channels.CommunicationObject.OnOpening
  - System.ServiceModel.Channels.CommunicationObject.Open
  - System.ServiceModel.Channels.CommunicationObject.Open(System.TimeSpan)
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  nameWithType.vb: ChannelFactoryBase(Of TChannel)
  modifiers.csharp:
  - public
  - abstract
  - class
  modifiers.vb:
  - Public
  - MustInherit
  - Class
  fullName.vb: System.ServiceModel.Channels.ChannelFactoryBase(Of TChannel)
  name.vb: ChannelFactoryBase(Of TChannel)
- uid: System.ServiceModel.Channels.ChannelFactoryBase`1.#ctor
  commentId: M:System.ServiceModel.Channels.ChannelFactoryBase`1.#ctor
  id: '#ctor'
  parent: System.ServiceModel.Channels.ChannelFactoryBase`1
  langs:
  - csharp
  - vb
  name: ChannelFactoryBase()
  nameWithType: ChannelFactoryBase<TChannel>.ChannelFactoryBase()
  fullName: System.ServiceModel.Channels.ChannelFactoryBase<TChannel>.ChannelFactoryBase()
  type: Constructor
  source:
    remote:
      path: src/System.Private.ServiceModel/src/System/ServiceModel/Channels/ChannelFactoryBase.cs
      branch: master
      repo: https://github.com/dotnet/wcf.git
    id: .ctor
    path: src/System.Private.ServiceModel/src/System/ServiceModel/Channels/ChannelFactoryBase.cs
    startLine: 96
  assemblies:
  - System.ServiceModel.Primitives
  namespace: System.ServiceModel.Channels
  summary: "\n<p>Initializes a new instance of the <xref href=\"System.ServiceModel.Channels.ChannelFactoryBase`1\" data-throw-if-not-resolved=\"false\"></xref> class.  </p>\n"
  syntax:
    content: protected ChannelFactoryBase()
    content.vb: Protected Sub New
  nameWithType.vb: ChannelFactoryBase(Of TChannel).ChannelFactoryBase()
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
  fullName.vb: System.ServiceModel.Channels.ChannelFactoryBase(Of TChannel).ChannelFactoryBase()
- uid: System.ServiceModel.Channels.ChannelFactoryBase`1.#ctor(System.ServiceModel.IDefaultCommunicationTimeouts)
  commentId: M:System.ServiceModel.Channels.ChannelFactoryBase`1.#ctor(System.ServiceModel.IDefaultCommunicationTimeouts)
  id: '#ctor(System.ServiceModel.IDefaultCommunicationTimeouts)'
  parent: System.ServiceModel.Channels.ChannelFactoryBase`1
  langs:
  - csharp
  - vb
  name: ChannelFactoryBase(IDefaultCommunicationTimeouts)
  nameWithType: ChannelFactoryBase<TChannel>.ChannelFactoryBase(IDefaultCommunicationTimeouts)
  fullName: System.ServiceModel.Channels.ChannelFactoryBase<TChannel>.ChannelFactoryBase(System.ServiceModel.IDefaultCommunicationTimeouts)
  type: Constructor
  source:
    remote:
      path: src/System.Private.ServiceModel/src/System/ServiceModel/Channels/ChannelFactoryBase.cs
      branch: master
      repo: https://github.com/dotnet/wcf.git
    id: .ctor
    path: src/System.Private.ServiceModel/src/System/ServiceModel/Channels/ChannelFactoryBase.cs
    startLine: 101
  assemblies:
  - System.ServiceModel.Primitives
  namespace: System.ServiceModel.Channels
  summary: "\n<p>Initializes a new instance of the <xref href=\"System.ServiceModel.Channels.ChannelFactoryBase`1\" data-throw-if-not-resolved=\"false\"></xref> class with the default communication timeouts specified.</p>\n"
  syntax:
    content: protected ChannelFactoryBase(IDefaultCommunicationTimeouts timeouts)
    content.vb: Protected Sub New(timeouts As IDefaultCommunicationTimeouts)
    parameters:
    - id: timeouts
      type: System.ServiceModel.IDefaultCommunicationTimeouts
      description: "\n<p>The <xref href=\"System.ServiceModel.IDefaultCommunicationTimeouts\" data-throw-if-not-resolved=\"false\"></xref> that specifies the default timeouts for open, send, receive, and close operations when exchanging messages.</p>\n"
  nameWithType.vb: ChannelFactoryBase(Of TChannel).ChannelFactoryBase(IDefaultCommunicationTimeouts)
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
  fullName.vb: System.ServiceModel.Channels.ChannelFactoryBase(Of TChannel).ChannelFactoryBase(System.ServiceModel.IDefaultCommunicationTimeouts)
- uid: System.ServiceModel.Channels.ChannelFactoryBase`1.CreateChannel(System.ServiceModel.EndpointAddress)
  commentId: M:System.ServiceModel.Channels.ChannelFactoryBase`1.CreateChannel(System.ServiceModel.EndpointAddress)
  id: CreateChannel(System.ServiceModel.EndpointAddress)
  parent: System.ServiceModel.Channels.ChannelFactoryBase`1
  langs:
  - csharp
  - vb
  name: CreateChannel(EndpointAddress)
  nameWithType: ChannelFactoryBase<TChannel>.CreateChannel(EndpointAddress)
  fullName: System.ServiceModel.Channels.ChannelFactoryBase<TChannel>.CreateChannel(System.ServiceModel.EndpointAddress)
  type: Method
  source:
    remote:
      path: src/System.Private.ServiceModel/src/System/ServiceModel/Channels/ChannelFactoryBase.cs
      branch: master
      repo: https://github.com/dotnet/wcf.git
    id: CreateChannel
    path: src/System.Private.ServiceModel/src/System/ServiceModel/Channels/ChannelFactoryBase.cs
    startLine: 107
  assemblies:
  - System.ServiceModel.Primitives
  namespace: System.ServiceModel.Channels
  summary: "\n<p>Creates a particular type of channel with a specified endpoint address.</p>\n"
  syntax:
    content: public TChannel CreateChannel(EndpointAddress address)
    content.vb: Public Function CreateChannel(address As EndpointAddress) As TChannel
    parameters:
    - id: address
      type: System.ServiceModel.EndpointAddress
      description: "\n<p>The <xref href=\"System.ServiceModel.EndpointAddress\" data-throw-if-not-resolved=\"false\"></xref> of the remote endpoint to which the channel sends messages.</p>\n"
    return:
      type: '{TChannel}'
      description: "\n<p>A channel of type <em>TChannel</em> with the specified <em>address</em>.</p>\n"
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "\n<p>\n<em>address</em> is <strong>null</strong>.</p>\n"
  implements:
  - System.ServiceModel.Channels.IChannelFactory{{TChannel}}.CreateChannel(System.ServiceModel.EndpointAddress)
  nameWithType.vb: ChannelFactoryBase(Of TChannel).CreateChannel(EndpointAddress)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: System.ServiceModel.Channels.ChannelFactoryBase(Of TChannel).CreateChannel(System.ServiceModel.EndpointAddress)
- uid: System.ServiceModel.Channels.ChannelFactoryBase`1.CreateChannel(System.ServiceModel.EndpointAddress,System.Uri)
  commentId: M:System.ServiceModel.Channels.ChannelFactoryBase`1.CreateChannel(System.ServiceModel.EndpointAddress,System.Uri)
  id: CreateChannel(System.ServiceModel.EndpointAddress,System.Uri)
  parent: System.ServiceModel.Channels.ChannelFactoryBase`1
  langs:
  - csharp
  - vb
  name: CreateChannel(EndpointAddress, Uri)
  nameWithType: ChannelFactoryBase<TChannel>.CreateChannel(EndpointAddress, Uri)
  fullName: System.ServiceModel.Channels.ChannelFactoryBase<TChannel>.CreateChannel(System.ServiceModel.EndpointAddress, System.Uri)
  type: Method
  source:
    remote:
      path: src/System.ServiceModel.Primitives/ref/System.ServiceModel.Primitives.cs
      branch: master
      repo: https://github.com/dotnet/wcf.git
    id: CreateChannel
    path: src/System.ServiceModel.Primitives/ref/System.ServiceModel.Primitives.cs
    startLine: 709
  assemblies:
  - System.ServiceModel.Primitives
  namespace: System.ServiceModel.Channels
  summary: "\n<p>Creates a particular type of channel with specified transport and endpoint addresses.</p>\n"
  syntax:
    content: public TChannel CreateChannel(EndpointAddress address, Uri via)
    content.vb: Public Function CreateChannel(address As EndpointAddress, via As Uri) As TChannel
    parameters:
    - id: address
      type: System.ServiceModel.EndpointAddress
      description: "\n<p>The <xref href=\"System.ServiceModel.EndpointAddress\" data-throw-if-not-resolved=\"false\"></xref> of the remote endpoint to which the channel sends messages.</p>\n"
    - id: via
      type: System.Uri
      description: "\n<p>The <xref href=\"System.Uri\" data-throw-if-not-resolved=\"false\"></xref> that contains the transport address to which messages are sent on the output channel.</p>\n"
    return:
      type: '{TChannel}'
      description: "\n<p>A channel of type <em>TChannel</em> with the specified remote and transport addresses.</p>\n"
  implements:
  - System.ServiceModel.Channels.IChannelFactory{{TChannel}}.CreateChannel(System.ServiceModel.EndpointAddress,System.Uri)
  nameWithType.vb: ChannelFactoryBase(Of TChannel).CreateChannel(EndpointAddress, Uri)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: System.ServiceModel.Channels.ChannelFactoryBase(Of TChannel).CreateChannel(System.ServiceModel.EndpointAddress, System.Uri)
- uid: System.ServiceModel.Channels.ChannelFactoryBase`1.OnAbort
  commentId: M:System.ServiceModel.Channels.ChannelFactoryBase`1.OnAbort
  id: OnAbort
  parent: System.ServiceModel.Channels.ChannelFactoryBase`1
  langs:
  - csharp
  - vb
  name: OnAbort()
  nameWithType: ChannelFactoryBase<TChannel>.OnAbort()
  fullName: System.ServiceModel.Channels.ChannelFactoryBase<TChannel>.OnAbort()
  type: Method
  source:
    remote:
      path: src/System.Private.ServiceModel/src/System/ServiceModel/Channels/ChannelFactoryBase.cs
      branch: master
      repo: https://github.com/dotnet/wcf.git
    id: OnAbort
    path: src/System.Private.ServiceModel/src/System/ServiceModel/Channels/ChannelFactoryBase.cs
    startLine: 158
  assemblies:
  - System.ServiceModel.Primitives
  namespace: System.ServiceModel.Channels
  summary: "\n<p>Aborts each channel managed by the channel factory.</p>\n"
  syntax:
    content: protected override void OnAbort()
    content.vb: Protected Overrides Sub OnAbort
  overridden: System.ServiceModel.Channels.ChannelFactoryBase.OnAbort
  nameWithType.vb: ChannelFactoryBase(Of TChannel).OnAbort()
  modifiers.csharp:
  - protected
  - override
  modifiers.vb:
  - Protected
  - Overrides
  fullName.vb: System.ServiceModel.Channels.ChannelFactoryBase(Of TChannel).OnAbort()
- uid: System.ServiceModel.Channels.ChannelFactoryBase`1.OnBeginClose(System.TimeSpan,System.AsyncCallback,System.Object)
  commentId: M:System.ServiceModel.Channels.ChannelFactoryBase`1.OnBeginClose(System.TimeSpan,System.AsyncCallback,System.Object)
  id: OnBeginClose(System.TimeSpan,System.AsyncCallback,System.Object)
  parent: System.ServiceModel.Channels.ChannelFactoryBase`1
  langs:
  - csharp
  - vb
  name: OnBeginClose(TimeSpan, AsyncCallback, Object)
  nameWithType: ChannelFactoryBase<TChannel>.OnBeginClose(TimeSpan, AsyncCallback, Object)
  fullName: System.ServiceModel.Channels.ChannelFactoryBase<TChannel>.OnBeginClose(System.TimeSpan, System.AsyncCallback, System.Object)
  type: Method
  source:
    remote:
      path: src/System.Private.ServiceModel/src/System/ServiceModel/Channels/ChannelFactoryBase.cs
      branch: master
      repo: https://github.com/dotnet/wcf.git
    id: OnBeginClose
    path: src/System.Private.ServiceModel/src/System/ServiceModel/Channels/ChannelFactoryBase.cs
    startLine: 182
  assemblies:
  - System.ServiceModel.Primitives
  namespace: System.ServiceModel.Channels
  summary: "\n<p>Begins an asynchronous operation to close all the channels associated with the channel factory within a specified interval of time.</p>\n"
  syntax:
    content: protected override IAsyncResult OnBeginClose(TimeSpan timeout, AsyncCallback callback, object state)
    content.vb: Protected Overrides Function OnBeginClose(timeout As TimeSpan, callback As AsyncCallback, state As Object) As IAsyncResult
    parameters:
    - id: timeout
      type: System.TimeSpan
      description: "\n<p>The <xref href=\"System.TimeSpan\" data-throw-if-not-resolved=\"false\"></xref> that specifies how long the on-close operation has to complete before timing out.</p>\n"
    - id: callback
      type: System.AsyncCallback
      description: "\n<p>The <xref href=\"System.AsyncCallback\" data-throw-if-not-resolved=\"false\"></xref> delegate that receives the notification of the asynchronous completion of the on-close operation.</p>\n"
    - id: state
      type: System.Object
      description: "\n<p>An object, specified by the application, that contains state information associated with the asynchronous on-close operation.</p>\n"
    return:
      type: System.IAsyncResult
      description: "\n<p>The <xref href=\"System.IAsyncResult\" data-throw-if-not-resolved=\"false\"></xref> that references the asynchronous on-close operation. </p>\n"
  overridden: System.ServiceModel.Channels.ChannelFactoryBase.OnBeginClose(System.TimeSpan,System.AsyncCallback,System.Object)
  nameWithType.vb: ChannelFactoryBase(Of TChannel).OnBeginClose(TimeSpan, AsyncCallback, Object)
  modifiers.csharp:
  - protected
  - override
  modifiers.vb:
  - Protected
  - Overrides
  fullName.vb: System.ServiceModel.Channels.ChannelFactoryBase(Of TChannel).OnBeginClose(System.TimeSpan, System.AsyncCallback, System.Object)
- uid: System.ServiceModel.Channels.ChannelFactoryBase`1.OnClose(System.TimeSpan)
  commentId: M:System.ServiceModel.Channels.ChannelFactoryBase`1.OnClose(System.TimeSpan)
  id: OnClose(System.TimeSpan)
  parent: System.ServiceModel.Channels.ChannelFactoryBase`1
  langs:
  - csharp
  - vb
  name: OnClose(TimeSpan)
  nameWithType: ChannelFactoryBase<TChannel>.OnClose(TimeSpan)
  fullName: System.ServiceModel.Channels.ChannelFactoryBase<TChannel>.OnClose(System.TimeSpan)
  type: Method
  source:
    remote:
      path: src/System.Private.ServiceModel/src/System/ServiceModel/Channels/ChannelFactoryBase.cs
      branch: master
      repo: https://github.com/dotnet/wcf.git
    id: OnClose
    path: src/System.Private.ServiceModel/src/System/ServiceModel/Channels/ChannelFactoryBase.cs
    startLine: 167
  assemblies:
  - System.ServiceModel.Primitives
  namespace: System.ServiceModel.Channels
  summary: "\n<p>Closes all the channels associated with the channel factory within a specified interval of time.</p>\n"
  syntax:
    content: protected override void OnClose(TimeSpan timeout)
    content.vb: Protected Overrides Sub OnClose(timeout As TimeSpan)
    parameters:
    - id: timeout
      type: System.TimeSpan
      description: "\n<p>The <xref href=\"System.TimeSpan\" data-throw-if-not-resolved=\"false\"></xref> that specifies how long the on-close operation has to complete before timing out.</p>\n"
  overridden: System.ServiceModel.Channels.ChannelFactoryBase.OnClose(System.TimeSpan)
  nameWithType.vb: ChannelFactoryBase(Of TChannel).OnClose(TimeSpan)
  modifiers.csharp:
  - protected
  - override
  modifiers.vb:
  - Protected
  - Overrides
  fullName.vb: System.ServiceModel.Channels.ChannelFactoryBase(Of TChannel).OnClose(System.TimeSpan)
- uid: System.ServiceModel.Channels.ChannelFactoryBase`1.OnCreateChannel(System.ServiceModel.EndpointAddress,System.Uri)
  commentId: M:System.ServiceModel.Channels.ChannelFactoryBase`1.OnCreateChannel(System.ServiceModel.EndpointAddress,System.Uri)
  id: OnCreateChannel(System.ServiceModel.EndpointAddress,System.Uri)
  parent: System.ServiceModel.Channels.ChannelFactoryBase`1
  langs:
  - csharp
  - vb
  name: OnCreateChannel(EndpointAddress, Uri)
  nameWithType: ChannelFactoryBase<TChannel>.OnCreateChannel(EndpointAddress, Uri)
  fullName: System.ServiceModel.Channels.ChannelFactoryBase<TChannel>.OnCreateChannel(System.ServiceModel.EndpointAddress, System.Uri)
  type: Method
  source:
    remote:
      path: src/System.ServiceModel.Primitives/ref/System.ServiceModel.Primitives.cs
      branch: master
      repo: https://github.com/dotnet/wcf.git
    id: OnCreateChannel
    path: src/System.ServiceModel.Primitives/ref/System.ServiceModel.Primitives.cs
    startLine: 713
  assemblies:
  - System.ServiceModel.Primitives
  namespace: System.ServiceModel.Channels
  summary: "\n<p>When implemented in a derived class, provides an extensibility point when creating channels.</p>\n"
  syntax:
    content: protected abstract TChannel OnCreateChannel(EndpointAddress address, Uri via)
    content.vb: Protected MustOverride Function OnCreateChannel(address As EndpointAddress, via As Uri) As TChannel
    parameters:
    - id: address
      type: System.ServiceModel.EndpointAddress
      description: "\n<p>The <xref href=\"System.ServiceModel.EndpointAddress\" data-throw-if-not-resolved=\"false\"></xref> of the remote endpoint to which the channel sends messages.</p>\n"
    - id: via
      type: System.Uri
      description: "\n<p>The <xref href=\"System.Uri\" data-throw-if-not-resolved=\"false\"></xref> that contains the transport address to which messages are sent on the output channel.</p>\n"
    return:
      type: '{TChannel}'
      description: "\n<p>A channel of type <em>TChannel</em> with the specified addresses.</p>\n"
  nameWithType.vb: ChannelFactoryBase(Of TChannel).OnCreateChannel(EndpointAddress, Uri)
  modifiers.csharp:
  - protected
  - abstract
  modifiers.vb:
  - Protected
  - MustOverride
  fullName.vb: System.ServiceModel.Channels.ChannelFactoryBase(Of TChannel).OnCreateChannel(System.ServiceModel.EndpointAddress, System.Uri)
- uid: System.ServiceModel.Channels.ChannelFactoryBase`1.OnEndClose(System.IAsyncResult)
  commentId: M:System.ServiceModel.Channels.ChannelFactoryBase`1.OnEndClose(System.IAsyncResult)
  id: OnEndClose(System.IAsyncResult)
  parent: System.ServiceModel.Channels.ChannelFactoryBase`1
  langs:
  - csharp
  - vb
  name: OnEndClose(IAsyncResult)
  nameWithType: ChannelFactoryBase<TChannel>.OnEndClose(IAsyncResult)
  fullName: System.ServiceModel.Channels.ChannelFactoryBase<TChannel>.OnEndClose(System.IAsyncResult)
  type: Method
  source:
    remote:
      path: src/System.Private.ServiceModel/src/System/ServiceModel/Channels/ChannelFactoryBase.cs
      branch: master
      repo: https://github.com/dotnet/wcf.git
    id: OnEndClose
    path: src/System.Private.ServiceModel/src/System/ServiceModel/Channels/ChannelFactoryBase.cs
    startLine: 189
  assemblies:
  - System.ServiceModel.Primitives
  namespace: System.ServiceModel.Channels
  summary: "\n<p>Completes an asynchronous operation to close all the channels associated with the channel factory within a specified interval of time.</p>\n"
  syntax:
    content: protected override void OnEndClose(IAsyncResult result)
    content.vb: Protected Overrides Sub OnEndClose(result As IAsyncResult)
    parameters:
    - id: result
      type: System.IAsyncResult
      description: "\n<p>The <xref href=\"System.IAsyncResult\" data-throw-if-not-resolved=\"false\"></xref> returned by a call to the <xref href=\"System.ServiceModel.Channels.ChannelFactoryBase`1.OnBeginClose(System.TimeSpan,System.AsyncCallback,System.Object)\" data-throw-if-not-resolved=\"false\"></xref> method.</p>\n"
  overridden: System.ServiceModel.Channels.ChannelFactoryBase.OnEndClose(System.IAsyncResult)
  nameWithType.vb: ChannelFactoryBase(Of TChannel).OnEndClose(IAsyncResult)
  modifiers.csharp:
  - protected
  - override
  modifiers.vb:
  - Protected
  - Overrides
  fullName.vb: System.ServiceModel.Channels.ChannelFactoryBase(Of TChannel).OnEndClose(System.IAsyncResult)
- uid: System.ServiceModel.Channels.ChannelFactoryBase`1.ValidateCreateChannel
  commentId: M:System.ServiceModel.Channels.ChannelFactoryBase`1.ValidateCreateChannel
  id: ValidateCreateChannel
  parent: System.ServiceModel.Channels.ChannelFactoryBase`1
  langs:
  - csharp
  - vb
  name: ValidateCreateChannel()
  nameWithType: ChannelFactoryBase<TChannel>.ValidateCreateChannel()
  fullName: System.ServiceModel.Channels.ChannelFactoryBase<TChannel>.ValidateCreateChannel()
  type: Method
  source:
    remote:
      path: src/System.Private.ServiceModel/src/System/ServiceModel/Channels/ChannelFactoryBase.cs
      branch: master
      repo: https://github.com/dotnet/wcf.git
    id: ValidateCreateChannel
    path: src/System.Private.ServiceModel/src/System/ServiceModel/Channels/ChannelFactoryBase.cs
    startLine: 149
  assemblies:
  - System.ServiceModel.Primitives
  namespace: System.ServiceModel.Channels
  summary: "\n<p>Confirms that the channel factory is opened and ready to create channels.</p>\n"
  syntax:
    content: protected void ValidateCreateChannel()
    content.vb: Protected Sub ValidateCreateChannel
  exceptions:
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: "\n<p>The communication object is in a <xref href=\"System.ServiceModel.CommunicationState.Closing\" data-throw-if-not-resolved=\"false\"></xref> or <xref href=\"System.ServiceModel.CommunicationState.Closed\" data-throw-if-not-resolved=\"false\"></xref> state.</p>\n"
  - type: System.ServiceModel.CommunicationObjectFaultedException
    commentId: T:System.ServiceModel.CommunicationObjectFaultedException
    description: "\n<p>The communication object is in a <xref href=\"System.ServiceModel.CommunicationState.Faulted\" data-throw-if-not-resolved=\"false\"></xref> state.</p>\n"
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "\n<p>The current channel factory is not in the <xref href=\"System.ServiceModel.CommunicationState.Opened\" data-throw-if-not-resolved=\"false\"></xref> state.</p>\n"
  nameWithType.vb: ChannelFactoryBase(Of TChannel).ValidateCreateChannel()
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
  fullName.vb: System.ServiceModel.Channels.ChannelFactoryBase(Of TChannel).ValidateCreateChannel()
references:
- uid: System.ServiceModel.Channels
  commentId: N:System.ServiceModel.Channels
  isExternal: false
  name: System.ServiceModel.Channels
  nameWithType: System.ServiceModel.Channels
  fullName: System.ServiceModel.Channels
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: false
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.ServiceModel.Channels.CommunicationObject
  commentId: T:System.ServiceModel.Channels.CommunicationObject
  parent: System.ServiceModel.Channels
  isExternal: false
  name: CommunicationObject
  nameWithType: CommunicationObject
  fullName: System.ServiceModel.Channels.CommunicationObject
- uid: System.ServiceModel.Channels.ChannelManagerBase
  commentId: T:System.ServiceModel.Channels.ChannelManagerBase
  parent: System.ServiceModel.Channels
  isExternal: false
  name: ChannelManagerBase
  nameWithType: ChannelManagerBase
  fullName: System.ServiceModel.Channels.ChannelManagerBase
- uid: System.ServiceModel.Channels.ChannelFactoryBase
  commentId: T:System.ServiceModel.Channels.ChannelFactoryBase
  parent: System.ServiceModel.Channels
  isExternal: false
  name: ChannelFactoryBase
  nameWithType: ChannelFactoryBase
  fullName: System.ServiceModel.Channels.ChannelFactoryBase
- uid: System.ServiceModel.IDefaultCommunicationTimeouts
  commentId: T:System.ServiceModel.IDefaultCommunicationTimeouts
  parent: System.ServiceModel
  isExternal: false
  name: IDefaultCommunicationTimeouts
  nameWithType: IDefaultCommunicationTimeouts
  fullName: System.ServiceModel.IDefaultCommunicationTimeouts
- uid: System.ServiceModel.Channels.IChannelFactory{{TChannel}}
  commentId: '!:System.ServiceModel.Channels.IChannelFactory{``0}'
  parent: System.ServiceModel.Channels
  definition: System.ServiceModel.Channels.IChannelFactory`1
  name: IChannelFactory<TChannel>
  nameWithType: IChannelFactory<TChannel>
  fullName: System.ServiceModel.Channels.IChannelFactory<TChannel>
  nameWithType.vb: IChannelFactory(Of TChannel)
  fullname.vb: System.ServiceModel.Channels.IChannelFactory(Of TChannel)
  name.vb: IChannelFactory(Of TChannel)
  spec.csharp:
  - uid: System.ServiceModel.Channels.IChannelFactory`1
    name: IChannelFactory
    nameWithType: IChannelFactory
    fullName: System.ServiceModel.Channels.IChannelFactory
  - name: <
    nameWithType: <
    fullName: <
  - name: TChannel
    nameWithType: TChannel
    fullName: TChannel
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.ServiceModel.Channels.IChannelFactory`1
    name: IChannelFactory
    nameWithType: IChannelFactory
    fullName: System.ServiceModel.Channels.IChannelFactory
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TChannel
    nameWithType: TChannel
    fullName: TChannel
  - name: )
    nameWithType: )
    fullName: )
- uid: System.ServiceModel.Channels.IChannelFactory
  commentId: T:System.ServiceModel.Channels.IChannelFactory
  parent: System.ServiceModel.Channels
  isExternal: false
  name: IChannelFactory
  nameWithType: IChannelFactory
  fullName: System.ServiceModel.Channels.IChannelFactory
- uid: System.ServiceModel.ICommunicationObject
  commentId: T:System.ServiceModel.ICommunicationObject
  parent: System.ServiceModel
  isExternal: false
  name: ICommunicationObject
  nameWithType: ICommunicationObject
  fullName: System.ServiceModel.ICommunicationObject
- uid: System.ServiceModel.Channels.ChannelFactoryBase.DefaultCloseTimeout
  commentId: P:System.ServiceModel.Channels.ChannelFactoryBase.DefaultCloseTimeout
  parent: System.ServiceModel.Channels.ChannelFactoryBase
  isExternal: false
  name: DefaultCloseTimeout
  nameWithType: ChannelFactoryBase.DefaultCloseTimeout
  fullName: System.ServiceModel.Channels.ChannelFactoryBase.DefaultCloseTimeout
- uid: System.ServiceModel.Channels.ChannelFactoryBase.DefaultOpenTimeout
  commentId: P:System.ServiceModel.Channels.ChannelFactoryBase.DefaultOpenTimeout
  parent: System.ServiceModel.Channels.ChannelFactoryBase
  isExternal: false
  name: DefaultOpenTimeout
  nameWithType: ChannelFactoryBase.DefaultOpenTimeout
  fullName: System.ServiceModel.Channels.ChannelFactoryBase.DefaultOpenTimeout
- uid: System.ServiceModel.Channels.ChannelFactoryBase.DefaultReceiveTimeout
  commentId: P:System.ServiceModel.Channels.ChannelFactoryBase.DefaultReceiveTimeout
  parent: System.ServiceModel.Channels.ChannelFactoryBase
  isExternal: false
  name: DefaultReceiveTimeout
  nameWithType: ChannelFactoryBase.DefaultReceiveTimeout
  fullName: System.ServiceModel.Channels.ChannelFactoryBase.DefaultReceiveTimeout
- uid: System.ServiceModel.Channels.ChannelFactoryBase.DefaultSendTimeout
  commentId: P:System.ServiceModel.Channels.ChannelFactoryBase.DefaultSendTimeout
  parent: System.ServiceModel.Channels.ChannelFactoryBase
  isExternal: false
  name: DefaultSendTimeout
  nameWithType: ChannelFactoryBase.DefaultSendTimeout
  fullName: System.ServiceModel.Channels.ChannelFactoryBase.DefaultSendTimeout
- uid: System.ServiceModel.Channels.ChannelFactoryBase.GetProperty``1
  commentId: M:System.ServiceModel.Channels.ChannelFactoryBase.GetProperty``1
  parent: System.ServiceModel.Channels.ChannelFactoryBase
  isExternal: false
  name: GetProperty<T>()
  nameWithType: ChannelFactoryBase.GetProperty<T>()
  fullName: System.ServiceModel.Channels.ChannelFactoryBase.GetProperty<T>()
  nameWithType.vb: ChannelFactoryBase.GetProperty(Of T)()
  fullname.vb: System.ServiceModel.Channels.ChannelFactoryBase.GetProperty(Of T)()
  name.vb: GetProperty(Of T)()
  spec.csharp:
  - uid: System.ServiceModel.Channels.ChannelFactoryBase.GetProperty``1
    name: GetProperty<T>
    nameWithType: ChannelFactoryBase.GetProperty<T>
    fullName: System.ServiceModel.Channels.ChannelFactoryBase.GetProperty<T>
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.ServiceModel.Channels.ChannelFactoryBase.GetProperty``1
    name: GetProperty(Of T)
    nameWithType: ChannelFactoryBase.GetProperty(Of T)
    fullName: System.ServiceModel.Channels.ChannelFactoryBase.GetProperty(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.ServiceModel.Channels.ChannelManagerBase.System#ServiceModel#IDefaultCommunicationTimeouts#CloseTimeout
  commentId: P:System.ServiceModel.Channels.ChannelManagerBase.System#ServiceModel#IDefaultCommunicationTimeouts#CloseTimeout
  parent: System.ServiceModel.Channels.ChannelManagerBase
  isExternal: false
  name: IDefaultCommunicationTimeouts.CloseTimeout
  nameWithType: ChannelManagerBase.IDefaultCommunicationTimeouts.CloseTimeout
  fullName: System.ServiceModel.Channels.ChannelManagerBase.System.ServiceModel.IDefaultCommunicationTimeouts.CloseTimeout
  nameWithType.vb: ChannelManagerBase.System.ServiceModel.IDefaultCommunicationTimeouts.CloseTimeout
  name.vb: System.ServiceModel.IDefaultCommunicationTimeouts.CloseTimeout
- uid: System.ServiceModel.Channels.ChannelManagerBase.System#ServiceModel#IDefaultCommunicationTimeouts#OpenTimeout
  commentId: P:System.ServiceModel.Channels.ChannelManagerBase.System#ServiceModel#IDefaultCommunicationTimeouts#OpenTimeout
  parent: System.ServiceModel.Channels.ChannelManagerBase
  isExternal: false
  name: IDefaultCommunicationTimeouts.OpenTimeout
  nameWithType: ChannelManagerBase.IDefaultCommunicationTimeouts.OpenTimeout
  fullName: System.ServiceModel.Channels.ChannelManagerBase.System.ServiceModel.IDefaultCommunicationTimeouts.OpenTimeout
  nameWithType.vb: ChannelManagerBase.System.ServiceModel.IDefaultCommunicationTimeouts.OpenTimeout
  name.vb: System.ServiceModel.IDefaultCommunicationTimeouts.OpenTimeout
- uid: System.ServiceModel.Channels.ChannelManagerBase.System#ServiceModel#IDefaultCommunicationTimeouts#ReceiveTimeout
  commentId: P:System.ServiceModel.Channels.ChannelManagerBase.System#ServiceModel#IDefaultCommunicationTimeouts#ReceiveTimeout
  parent: System.ServiceModel.Channels.ChannelManagerBase
  isExternal: false
  name: IDefaultCommunicationTimeouts.ReceiveTimeout
  nameWithType: ChannelManagerBase.IDefaultCommunicationTimeouts.ReceiveTimeout
  fullName: System.ServiceModel.Channels.ChannelManagerBase.System.ServiceModel.IDefaultCommunicationTimeouts.ReceiveTimeout
  nameWithType.vb: ChannelManagerBase.System.ServiceModel.IDefaultCommunicationTimeouts.ReceiveTimeout
  name.vb: System.ServiceModel.IDefaultCommunicationTimeouts.ReceiveTimeout
- uid: System.ServiceModel.Channels.ChannelManagerBase.System#ServiceModel#IDefaultCommunicationTimeouts#SendTimeout
  commentId: P:System.ServiceModel.Channels.ChannelManagerBase.System#ServiceModel#IDefaultCommunicationTimeouts#SendTimeout
  parent: System.ServiceModel.Channels.ChannelManagerBase
  isExternal: false
  name: IDefaultCommunicationTimeouts.SendTimeout
  nameWithType: ChannelManagerBase.IDefaultCommunicationTimeouts.SendTimeout
  fullName: System.ServiceModel.Channels.ChannelManagerBase.System.ServiceModel.IDefaultCommunicationTimeouts.SendTimeout
  nameWithType.vb: ChannelManagerBase.System.ServiceModel.IDefaultCommunicationTimeouts.SendTimeout
  name.vb: System.ServiceModel.IDefaultCommunicationTimeouts.SendTimeout
- uid: System.ServiceModel.Channels.CommunicationObject.IsDisposed
  commentId: P:System.ServiceModel.Channels.CommunicationObject.IsDisposed
  parent: System.ServiceModel.Channels.CommunicationObject
  isExternal: false
  name: IsDisposed
  nameWithType: CommunicationObject.IsDisposed
  fullName: System.ServiceModel.Channels.CommunicationObject.IsDisposed
- uid: System.ServiceModel.Channels.CommunicationObject.State
  commentId: P:System.ServiceModel.Channels.CommunicationObject.State
  parent: System.ServiceModel.Channels.CommunicationObject
  isExternal: false
  name: State
  nameWithType: CommunicationObject.State
  fullName: System.ServiceModel.Channels.CommunicationObject.State
- uid: System.ServiceModel.Channels.CommunicationObject.ThisLock
  commentId: P:System.ServiceModel.Channels.CommunicationObject.ThisLock
  parent: System.ServiceModel.Channels.CommunicationObject
  isExternal: false
  name: ThisLock
  nameWithType: CommunicationObject.ThisLock
  fullName: System.ServiceModel.Channels.CommunicationObject.ThisLock
- uid: System.ServiceModel.Channels.CommunicationObject.Closed
  commentId: E:System.ServiceModel.Channels.CommunicationObject.Closed
  parent: System.ServiceModel.Channels.CommunicationObject
  isExternal: false
  name: Closed
  nameWithType: CommunicationObject.Closed
  fullName: System.ServiceModel.Channels.CommunicationObject.Closed
- uid: System.ServiceModel.Channels.CommunicationObject.Closing
  commentId: E:System.ServiceModel.Channels.CommunicationObject.Closing
  parent: System.ServiceModel.Channels.CommunicationObject
  isExternal: false
  name: Closing
  nameWithType: CommunicationObject.Closing
  fullName: System.ServiceModel.Channels.CommunicationObject.Closing
- uid: System.ServiceModel.Channels.CommunicationObject.Faulted
  commentId: E:System.ServiceModel.Channels.CommunicationObject.Faulted
  parent: System.ServiceModel.Channels.CommunicationObject
  isExternal: false
  name: Faulted
  nameWithType: CommunicationObject.Faulted
  fullName: System.ServiceModel.Channels.CommunicationObject.Faulted
- uid: System.ServiceModel.Channels.CommunicationObject.Opened
  commentId: E:System.ServiceModel.Channels.CommunicationObject.Opened
  parent: System.ServiceModel.Channels.CommunicationObject
  isExternal: false
  name: Opened
  nameWithType: CommunicationObject.Opened
  fullName: System.ServiceModel.Channels.CommunicationObject.Opened
- uid: System.ServiceModel.Channels.CommunicationObject.Opening
  commentId: E:System.ServiceModel.Channels.CommunicationObject.Opening
  parent: System.ServiceModel.Channels.CommunicationObject
  isExternal: false
  name: Opening
  nameWithType: CommunicationObject.Opening
  fullName: System.ServiceModel.Channels.CommunicationObject.Opening
- uid: System.ServiceModel.Channels.CommunicationObject.Abort
  commentId: M:System.ServiceModel.Channels.CommunicationObject.Abort
  parent: System.ServiceModel.Channels.CommunicationObject
  isExternal: false
  name: Abort()
  nameWithType: CommunicationObject.Abort()
  fullName: System.ServiceModel.Channels.CommunicationObject.Abort()
  spec.csharp:
  - uid: System.ServiceModel.Channels.CommunicationObject.Abort
    name: Abort
    nameWithType: CommunicationObject.Abort
    fullName: System.ServiceModel.Channels.CommunicationObject.Abort
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.ServiceModel.Channels.CommunicationObject.Abort
    name: Abort
    nameWithType: CommunicationObject.Abort
    fullName: System.ServiceModel.Channels.CommunicationObject.Abort
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.ServiceModel.Channels.CommunicationObject.BeginClose(System.AsyncCallback,System.Object)
  commentId: M:System.ServiceModel.Channels.CommunicationObject.BeginClose(System.AsyncCallback,System.Object)
  parent: System.ServiceModel.Channels.CommunicationObject
  isExternal: true
  name: BeginClose(AsyncCallback, Object)
  nameWithType: CommunicationObject.BeginClose(AsyncCallback, Object)
  fullName: System.ServiceModel.Channels.CommunicationObject.BeginClose(System.AsyncCallback, System.Object)
  spec.csharp:
  - uid: System.ServiceModel.Channels.CommunicationObject.BeginClose(System.AsyncCallback,System.Object)
    name: BeginClose
    nameWithType: CommunicationObject.BeginClose
    fullName: System.ServiceModel.Channels.CommunicationObject.BeginClose
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.AsyncCallback
    name: AsyncCallback
    nameWithType: AsyncCallback
    fullName: System.AsyncCallback
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.ServiceModel.Channels.CommunicationObject.BeginClose(System.AsyncCallback,System.Object)
    name: BeginClose
    nameWithType: CommunicationObject.BeginClose
    fullName: System.ServiceModel.Channels.CommunicationObject.BeginClose
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.AsyncCallback
    name: AsyncCallback
    nameWithType: AsyncCallback
    fullName: System.AsyncCallback
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.ServiceModel.Channels.CommunicationObject.BeginClose(System.TimeSpan,System.AsyncCallback,System.Object)
  commentId: M:System.ServiceModel.Channels.CommunicationObject.BeginClose(System.TimeSpan,System.AsyncCallback,System.Object)
  parent: System.ServiceModel.Channels.CommunicationObject
  isExternal: true
  name: BeginClose(TimeSpan, AsyncCallback, Object)
  nameWithType: CommunicationObject.BeginClose(TimeSpan, AsyncCallback, Object)
  fullName: System.ServiceModel.Channels.CommunicationObject.BeginClose(System.TimeSpan, System.AsyncCallback, System.Object)
  spec.csharp:
  - uid: System.ServiceModel.Channels.CommunicationObject.BeginClose(System.TimeSpan,System.AsyncCallback,System.Object)
    name: BeginClose
    nameWithType: CommunicationObject.BeginClose
    fullName: System.ServiceModel.Channels.CommunicationObject.BeginClose
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.TimeSpan
    name: TimeSpan
    nameWithType: TimeSpan
    fullName: System.TimeSpan
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.AsyncCallback
    name: AsyncCallback
    nameWithType: AsyncCallback
    fullName: System.AsyncCallback
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.ServiceModel.Channels.CommunicationObject.BeginClose(System.TimeSpan,System.AsyncCallback,System.Object)
    name: BeginClose
    nameWithType: CommunicationObject.BeginClose
    fullName: System.ServiceModel.Channels.CommunicationObject.BeginClose
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.TimeSpan
    name: TimeSpan
    nameWithType: TimeSpan
    fullName: System.TimeSpan
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.AsyncCallback
    name: AsyncCallback
    nameWithType: AsyncCallback
    fullName: System.AsyncCallback
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.ServiceModel.Channels.CommunicationObject.BeginOpen(System.AsyncCallback,System.Object)
  commentId: M:System.ServiceModel.Channels.CommunicationObject.BeginOpen(System.AsyncCallback,System.Object)
  parent: System.ServiceModel.Channels.CommunicationObject
  isExternal: true
  name: BeginOpen(AsyncCallback, Object)
  nameWithType: CommunicationObject.BeginOpen(AsyncCallback, Object)
  fullName: System.ServiceModel.Channels.CommunicationObject.BeginOpen(System.AsyncCallback, System.Object)
  spec.csharp:
  - uid: System.ServiceModel.Channels.CommunicationObject.BeginOpen(System.AsyncCallback,System.Object)
    name: BeginOpen
    nameWithType: CommunicationObject.BeginOpen
    fullName: System.ServiceModel.Channels.CommunicationObject.BeginOpen
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.AsyncCallback
    name: AsyncCallback
    nameWithType: AsyncCallback
    fullName: System.AsyncCallback
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.ServiceModel.Channels.CommunicationObject.BeginOpen(System.AsyncCallback,System.Object)
    name: BeginOpen
    nameWithType: CommunicationObject.BeginOpen
    fullName: System.ServiceModel.Channels.CommunicationObject.BeginOpen
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.AsyncCallback
    name: AsyncCallback
    nameWithType: AsyncCallback
    fullName: System.AsyncCallback
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.ServiceModel.Channels.CommunicationObject.BeginOpen(System.TimeSpan,System.AsyncCallback,System.Object)
  commentId: M:System.ServiceModel.Channels.CommunicationObject.BeginOpen(System.TimeSpan,System.AsyncCallback,System.Object)
  parent: System.ServiceModel.Channels.CommunicationObject
  isExternal: true
  name: BeginOpen(TimeSpan, AsyncCallback, Object)
  nameWithType: CommunicationObject.BeginOpen(TimeSpan, AsyncCallback, Object)
  fullName: System.ServiceModel.Channels.CommunicationObject.BeginOpen(System.TimeSpan, System.AsyncCallback, System.Object)
  spec.csharp:
  - uid: System.ServiceModel.Channels.CommunicationObject.BeginOpen(System.TimeSpan,System.AsyncCallback,System.Object)
    name: BeginOpen
    nameWithType: CommunicationObject.BeginOpen
    fullName: System.ServiceModel.Channels.CommunicationObject.BeginOpen
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.TimeSpan
    name: TimeSpan
    nameWithType: TimeSpan
    fullName: System.TimeSpan
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.AsyncCallback
    name: AsyncCallback
    nameWithType: AsyncCallback
    fullName: System.AsyncCallback
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.ServiceModel.Channels.CommunicationObject.BeginOpen(System.TimeSpan,System.AsyncCallback,System.Object)
    name: BeginOpen
    nameWithType: CommunicationObject.BeginOpen
    fullName: System.ServiceModel.Channels.CommunicationObject.BeginOpen
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.TimeSpan
    name: TimeSpan
    nameWithType: TimeSpan
    fullName: System.TimeSpan
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.AsyncCallback
    name: AsyncCallback
    nameWithType: AsyncCallback
    fullName: System.AsyncCallback
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.ServiceModel.Channels.CommunicationObject.Close
  commentId: M:System.ServiceModel.Channels.CommunicationObject.Close
  parent: System.ServiceModel.Channels.CommunicationObject
  isExternal: false
  name: Close()
  nameWithType: CommunicationObject.Close()
  fullName: System.ServiceModel.Channels.CommunicationObject.Close()
  spec.csharp:
  - uid: System.ServiceModel.Channels.CommunicationObject.Close
    name: Close
    nameWithType: CommunicationObject.Close
    fullName: System.ServiceModel.Channels.CommunicationObject.Close
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.ServiceModel.Channels.CommunicationObject.Close
    name: Close
    nameWithType: CommunicationObject.Close
    fullName: System.ServiceModel.Channels.CommunicationObject.Close
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.ServiceModel.Channels.CommunicationObject.Close(System.TimeSpan)
  commentId: M:System.ServiceModel.Channels.CommunicationObject.Close(System.TimeSpan)
  parent: System.ServiceModel.Channels.CommunicationObject
  isExternal: true
  name: Close(TimeSpan)
  nameWithType: CommunicationObject.Close(TimeSpan)
  fullName: System.ServiceModel.Channels.CommunicationObject.Close(System.TimeSpan)
  spec.csharp:
  - uid: System.ServiceModel.Channels.CommunicationObject.Close(System.TimeSpan)
    name: Close
    nameWithType: CommunicationObject.Close
    fullName: System.ServiceModel.Channels.CommunicationObject.Close
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.TimeSpan
    name: TimeSpan
    nameWithType: TimeSpan
    fullName: System.TimeSpan
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.ServiceModel.Channels.CommunicationObject.Close(System.TimeSpan)
    name: Close
    nameWithType: CommunicationObject.Close
    fullName: System.ServiceModel.Channels.CommunicationObject.Close
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.TimeSpan
    name: TimeSpan
    nameWithType: TimeSpan
    fullName: System.TimeSpan
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.ServiceModel.Channels.CommunicationObject.EndClose(System.IAsyncResult)
  commentId: M:System.ServiceModel.Channels.CommunicationObject.EndClose(System.IAsyncResult)
  parent: System.ServiceModel.Channels.CommunicationObject
  isExternal: true
  name: EndClose(IAsyncResult)
  nameWithType: CommunicationObject.EndClose(IAsyncResult)
  fullName: System.ServiceModel.Channels.CommunicationObject.EndClose(System.IAsyncResult)
  spec.csharp:
  - uid: System.ServiceModel.Channels.CommunicationObject.EndClose(System.IAsyncResult)
    name: EndClose
    nameWithType: CommunicationObject.EndClose
    fullName: System.ServiceModel.Channels.CommunicationObject.EndClose
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.IAsyncResult
    name: IAsyncResult
    nameWithType: IAsyncResult
    fullName: System.IAsyncResult
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.ServiceModel.Channels.CommunicationObject.EndClose(System.IAsyncResult)
    name: EndClose
    nameWithType: CommunicationObject.EndClose
    fullName: System.ServiceModel.Channels.CommunicationObject.EndClose
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.IAsyncResult
    name: IAsyncResult
    nameWithType: IAsyncResult
    fullName: System.IAsyncResult
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.ServiceModel.Channels.CommunicationObject.EndOpen(System.IAsyncResult)
  commentId: M:System.ServiceModel.Channels.CommunicationObject.EndOpen(System.IAsyncResult)
  parent: System.ServiceModel.Channels.CommunicationObject
  isExternal: true
  name: EndOpen(IAsyncResult)
  nameWithType: CommunicationObject.EndOpen(IAsyncResult)
  fullName: System.ServiceModel.Channels.CommunicationObject.EndOpen(System.IAsyncResult)
  spec.csharp:
  - uid: System.ServiceModel.Channels.CommunicationObject.EndOpen(System.IAsyncResult)
    name: EndOpen
    nameWithType: CommunicationObject.EndOpen
    fullName: System.ServiceModel.Channels.CommunicationObject.EndOpen
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.IAsyncResult
    name: IAsyncResult
    nameWithType: IAsyncResult
    fullName: System.IAsyncResult
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.ServiceModel.Channels.CommunicationObject.EndOpen(System.IAsyncResult)
    name: EndOpen
    nameWithType: CommunicationObject.EndOpen
    fullName: System.ServiceModel.Channels.CommunicationObject.EndOpen
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.IAsyncResult
    name: IAsyncResult
    nameWithType: IAsyncResult
    fullName: System.IAsyncResult
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.ServiceModel.Channels.CommunicationObject.Fault
  commentId: M:System.ServiceModel.Channels.CommunicationObject.Fault
  parent: System.ServiceModel.Channels.CommunicationObject
  isExternal: false
  name: Fault()
  nameWithType: CommunicationObject.Fault()
  fullName: System.ServiceModel.Channels.CommunicationObject.Fault()
  spec.csharp:
  - uid: System.ServiceModel.Channels.CommunicationObject.Fault
    name: Fault
    nameWithType: CommunicationObject.Fault
    fullName: System.ServiceModel.Channels.CommunicationObject.Fault
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.ServiceModel.Channels.CommunicationObject.Fault
    name: Fault
    nameWithType: CommunicationObject.Fault
    fullName: System.ServiceModel.Channels.CommunicationObject.Fault
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.ServiceModel.Channels.CommunicationObject.GetCommunicationObjectType
  commentId: M:System.ServiceModel.Channels.CommunicationObject.GetCommunicationObjectType
  parent: System.ServiceModel.Channels.CommunicationObject
  isExternal: false
  name: GetCommunicationObjectType()
  nameWithType: CommunicationObject.GetCommunicationObjectType()
  fullName: System.ServiceModel.Channels.CommunicationObject.GetCommunicationObjectType()
  spec.csharp:
  - uid: System.ServiceModel.Channels.CommunicationObject.GetCommunicationObjectType
    name: GetCommunicationObjectType
    nameWithType: CommunicationObject.GetCommunicationObjectType
    fullName: System.ServiceModel.Channels.CommunicationObject.GetCommunicationObjectType
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.ServiceModel.Channels.CommunicationObject.GetCommunicationObjectType
    name: GetCommunicationObjectType
    nameWithType: CommunicationObject.GetCommunicationObjectType
    fullName: System.ServiceModel.Channels.CommunicationObject.GetCommunicationObjectType
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.ServiceModel.Channels.CommunicationObject.OnBeginOpen(System.TimeSpan,System.AsyncCallback,System.Object)
  commentId: M:System.ServiceModel.Channels.CommunicationObject.OnBeginOpen(System.TimeSpan,System.AsyncCallback,System.Object)
  parent: System.ServiceModel.Channels.CommunicationObject
  isExternal: true
  name: OnBeginOpen(TimeSpan, AsyncCallback, Object)
  nameWithType: CommunicationObject.OnBeginOpen(TimeSpan, AsyncCallback, Object)
  fullName: System.ServiceModel.Channels.CommunicationObject.OnBeginOpen(System.TimeSpan, System.AsyncCallback, System.Object)
  spec.csharp:
  - uid: System.ServiceModel.Channels.CommunicationObject.OnBeginOpen(System.TimeSpan,System.AsyncCallback,System.Object)
    name: OnBeginOpen
    nameWithType: CommunicationObject.OnBeginOpen
    fullName: System.ServiceModel.Channels.CommunicationObject.OnBeginOpen
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.TimeSpan
    name: TimeSpan
    nameWithType: TimeSpan
    fullName: System.TimeSpan
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.AsyncCallback
    name: AsyncCallback
    nameWithType: AsyncCallback
    fullName: System.AsyncCallback
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.ServiceModel.Channels.CommunicationObject.OnBeginOpen(System.TimeSpan,System.AsyncCallback,System.Object)
    name: OnBeginOpen
    nameWithType: CommunicationObject.OnBeginOpen
    fullName: System.ServiceModel.Channels.CommunicationObject.OnBeginOpen
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.TimeSpan
    name: TimeSpan
    nameWithType: TimeSpan
    fullName: System.TimeSpan
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.AsyncCallback
    name: AsyncCallback
    nameWithType: AsyncCallback
    fullName: System.AsyncCallback
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.ServiceModel.Channels.CommunicationObject.OnClosed
  commentId: M:System.ServiceModel.Channels.CommunicationObject.OnClosed
  parent: System.ServiceModel.Channels.CommunicationObject
  isExternal: false
  name: OnClosed()
  nameWithType: CommunicationObject.OnClosed()
  fullName: System.ServiceModel.Channels.CommunicationObject.OnClosed()
  spec.csharp:
  - uid: System.ServiceModel.Channels.CommunicationObject.OnClosed
    name: OnClosed
    nameWithType: CommunicationObject.OnClosed
    fullName: System.ServiceModel.Channels.CommunicationObject.OnClosed
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.ServiceModel.Channels.CommunicationObject.OnClosed
    name: OnClosed
    nameWithType: CommunicationObject.OnClosed
    fullName: System.ServiceModel.Channels.CommunicationObject.OnClosed
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.ServiceModel.Channels.CommunicationObject.OnClosing
  commentId: M:System.ServiceModel.Channels.CommunicationObject.OnClosing
  parent: System.ServiceModel.Channels.CommunicationObject
  isExternal: false
  name: OnClosing()
  nameWithType: CommunicationObject.OnClosing()
  fullName: System.ServiceModel.Channels.CommunicationObject.OnClosing()
  spec.csharp:
  - uid: System.ServiceModel.Channels.CommunicationObject.OnClosing
    name: OnClosing
    nameWithType: CommunicationObject.OnClosing
    fullName: System.ServiceModel.Channels.CommunicationObject.OnClosing
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.ServiceModel.Channels.CommunicationObject.OnClosing
    name: OnClosing
    nameWithType: CommunicationObject.OnClosing
    fullName: System.ServiceModel.Channels.CommunicationObject.OnClosing
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.ServiceModel.Channels.CommunicationObject.OnEndOpen(System.IAsyncResult)
  commentId: M:System.ServiceModel.Channels.CommunicationObject.OnEndOpen(System.IAsyncResult)
  parent: System.ServiceModel.Channels.CommunicationObject
  isExternal: true
  name: OnEndOpen(IAsyncResult)
  nameWithType: CommunicationObject.OnEndOpen(IAsyncResult)
  fullName: System.ServiceModel.Channels.CommunicationObject.OnEndOpen(System.IAsyncResult)
  spec.csharp:
  - uid: System.ServiceModel.Channels.CommunicationObject.OnEndOpen(System.IAsyncResult)
    name: OnEndOpen
    nameWithType: CommunicationObject.OnEndOpen
    fullName: System.ServiceModel.Channels.CommunicationObject.OnEndOpen
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.IAsyncResult
    name: IAsyncResult
    nameWithType: IAsyncResult
    fullName: System.IAsyncResult
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.ServiceModel.Channels.CommunicationObject.OnEndOpen(System.IAsyncResult)
    name: OnEndOpen
    nameWithType: CommunicationObject.OnEndOpen
    fullName: System.ServiceModel.Channels.CommunicationObject.OnEndOpen
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.IAsyncResult
    name: IAsyncResult
    nameWithType: IAsyncResult
    fullName: System.IAsyncResult
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.ServiceModel.Channels.CommunicationObject.OnFaulted
  commentId: M:System.ServiceModel.Channels.CommunicationObject.OnFaulted
  parent: System.ServiceModel.Channels.CommunicationObject
  isExternal: false
  name: OnFaulted()
  nameWithType: CommunicationObject.OnFaulted()
  fullName: System.ServiceModel.Channels.CommunicationObject.OnFaulted()
  spec.csharp:
  - uid: System.ServiceModel.Channels.CommunicationObject.OnFaulted
    name: OnFaulted
    nameWithType: CommunicationObject.OnFaulted
    fullName: System.ServiceModel.Channels.CommunicationObject.OnFaulted
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.ServiceModel.Channels.CommunicationObject.OnFaulted
    name: OnFaulted
    nameWithType: CommunicationObject.OnFaulted
    fullName: System.ServiceModel.Channels.CommunicationObject.OnFaulted
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.ServiceModel.Channels.CommunicationObject.OnOpen(System.TimeSpan)
  commentId: M:System.ServiceModel.Channels.CommunicationObject.OnOpen(System.TimeSpan)
  parent: System.ServiceModel.Channels.CommunicationObject
  isExternal: true
  name: OnOpen(TimeSpan)
  nameWithType: CommunicationObject.OnOpen(TimeSpan)
  fullName: System.ServiceModel.Channels.CommunicationObject.OnOpen(System.TimeSpan)
  spec.csharp:
  - uid: System.ServiceModel.Channels.CommunicationObject.OnOpen(System.TimeSpan)
    name: OnOpen
    nameWithType: CommunicationObject.OnOpen
    fullName: System.ServiceModel.Channels.CommunicationObject.OnOpen
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.TimeSpan
    name: TimeSpan
    nameWithType: TimeSpan
    fullName: System.TimeSpan
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.ServiceModel.Channels.CommunicationObject.OnOpen(System.TimeSpan)
    name: OnOpen
    nameWithType: CommunicationObject.OnOpen
    fullName: System.ServiceModel.Channels.CommunicationObject.OnOpen
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.TimeSpan
    name: TimeSpan
    nameWithType: TimeSpan
    fullName: System.TimeSpan
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.ServiceModel.Channels.CommunicationObject.OnOpened
  commentId: M:System.ServiceModel.Channels.CommunicationObject.OnOpened
  parent: System.ServiceModel.Channels.CommunicationObject
  isExternal: false
  name: OnOpened()
  nameWithType: CommunicationObject.OnOpened()
  fullName: System.ServiceModel.Channels.CommunicationObject.OnOpened()
  spec.csharp:
  - uid: System.ServiceModel.Channels.CommunicationObject.OnOpened
    name: OnOpened
    nameWithType: CommunicationObject.OnOpened
    fullName: System.ServiceModel.Channels.CommunicationObject.OnOpened
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.ServiceModel.Channels.CommunicationObject.OnOpened
    name: OnOpened
    nameWithType: CommunicationObject.OnOpened
    fullName: System.ServiceModel.Channels.CommunicationObject.OnOpened
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.ServiceModel.Channels.CommunicationObject.OnOpening
  commentId: M:System.ServiceModel.Channels.CommunicationObject.OnOpening
  parent: System.ServiceModel.Channels.CommunicationObject
  isExternal: false
  name: OnOpening()
  nameWithType: CommunicationObject.OnOpening()
  fullName: System.ServiceModel.Channels.CommunicationObject.OnOpening()
  spec.csharp:
  - uid: System.ServiceModel.Channels.CommunicationObject.OnOpening
    name: OnOpening
    nameWithType: CommunicationObject.OnOpening
    fullName: System.ServiceModel.Channels.CommunicationObject.OnOpening
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.ServiceModel.Channels.CommunicationObject.OnOpening
    name: OnOpening
    nameWithType: CommunicationObject.OnOpening
    fullName: System.ServiceModel.Channels.CommunicationObject.OnOpening
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.ServiceModel.Channels.CommunicationObject.Open
  commentId: M:System.ServiceModel.Channels.CommunicationObject.Open
  parent: System.ServiceModel.Channels.CommunicationObject
  isExternal: false
  name: Open()
  nameWithType: CommunicationObject.Open()
  fullName: System.ServiceModel.Channels.CommunicationObject.Open()
  spec.csharp:
  - uid: System.ServiceModel.Channels.CommunicationObject.Open
    name: Open
    nameWithType: CommunicationObject.Open
    fullName: System.ServiceModel.Channels.CommunicationObject.Open
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.ServiceModel.Channels.CommunicationObject.Open
    name: Open
    nameWithType: CommunicationObject.Open
    fullName: System.ServiceModel.Channels.CommunicationObject.Open
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.ServiceModel.Channels.CommunicationObject.Open(System.TimeSpan)
  commentId: M:System.ServiceModel.Channels.CommunicationObject.Open(System.TimeSpan)
  parent: System.ServiceModel.Channels.CommunicationObject
  isExternal: true
  name: Open(TimeSpan)
  nameWithType: CommunicationObject.Open(TimeSpan)
  fullName: System.ServiceModel.Channels.CommunicationObject.Open(System.TimeSpan)
  spec.csharp:
  - uid: System.ServiceModel.Channels.CommunicationObject.Open(System.TimeSpan)
    name: Open
    nameWithType: CommunicationObject.Open
    fullName: System.ServiceModel.Channels.CommunicationObject.Open
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.TimeSpan
    name: TimeSpan
    nameWithType: TimeSpan
    fullName: System.TimeSpan
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.ServiceModel.Channels.CommunicationObject.Open(System.TimeSpan)
    name: Open
    nameWithType: CommunicationObject.Open
    fullName: System.ServiceModel.Channels.CommunicationObject.Open
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.TimeSpan
    name: TimeSpan
    nameWithType: TimeSpan
    fullName: System.TimeSpan
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: System.ServiceModel
  commentId: N:System.ServiceModel
  isExternal: false
  name: System.ServiceModel
  nameWithType: System.ServiceModel
  fullName: System.ServiceModel
- uid: System.ServiceModel.Channels.IChannelFactory`1
  commentId: T:System.ServiceModel.Channels.IChannelFactory`1
  isExternal: false
  name: IChannelFactory<>
  nameWithType: IChannelFactory<>
  fullName: System.ServiceModel.Channels.IChannelFactory<>
  nameWithType.vb: IChannelFactory(Of )
  fullname.vb: System.ServiceModel.Channels.IChannelFactory(Of )
  name.vb: IChannelFactory(Of )
  spec.csharp:
  - uid: System.ServiceModel.Channels.IChannelFactory`1
    name: IChannelFactory
    nameWithType: IChannelFactory
    fullName: System.ServiceModel.Channels.IChannelFactory
  - name: <
    nameWithType: <
    fullName: <
  - {}
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.ServiceModel.Channels.IChannelFactory`1
    name: IChannelFactory
    nameWithType: IChannelFactory
    fullName: System.ServiceModel.Channels.IChannelFactory
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - {}
  - name: )
    nameWithType: )
    fullName: )
- uid: System.ServiceModel.Channels.IChannelFactory{{TChannel}}.CreateChannel(System.ServiceModel.EndpointAddress)
  commentId: M:System.ServiceModel.Channels.IChannelFactory{`0}.CreateChannel(System.ServiceModel.EndpointAddress)
  parent: System.ServiceModel.Channels.IChannelFactory{{TChannel}}
  definition: System.ServiceModel.Channels.IChannelFactory`1.CreateChannel(System.ServiceModel.EndpointAddress)
  name: CreateChannel(EndpointAddress)
  nameWithType: IChannelFactory<TChannel>.CreateChannel(EndpointAddress)
  fullName: System.ServiceModel.Channels.IChannelFactory<TChannel>.CreateChannel(System.ServiceModel.EndpointAddress)
  nameWithType.vb: IChannelFactory(Of TChannel).CreateChannel(EndpointAddress)
  fullname.vb: System.ServiceModel.Channels.IChannelFactory(Of TChannel).CreateChannel(System.ServiceModel.EndpointAddress)
  spec.csharp:
  - uid: System.ServiceModel.Channels.IChannelFactory`1.CreateChannel(System.ServiceModel.EndpointAddress)
    name: CreateChannel
    nameWithType: IChannelFactory<TChannel>.CreateChannel
    fullName: System.ServiceModel.Channels.IChannelFactory<TChannel>.CreateChannel
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.ServiceModel.EndpointAddress
    name: EndpointAddress
    nameWithType: EndpointAddress
    fullName: System.ServiceModel.EndpointAddress
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.ServiceModel.Channels.IChannelFactory`1.CreateChannel(System.ServiceModel.EndpointAddress)
    name: CreateChannel
    nameWithType: IChannelFactory(Of TChannel).CreateChannel
    fullName: System.ServiceModel.Channels.IChannelFactory(Of TChannel).CreateChannel
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.ServiceModel.EndpointAddress
    name: EndpointAddress
    nameWithType: EndpointAddress
    fullName: System.ServiceModel.EndpointAddress
  - name: )
    nameWithType: )
    fullName: )
- uid: System.ServiceModel.EndpointAddress
  commentId: T:System.ServiceModel.EndpointAddress
  parent: System.ServiceModel
  isExternal: false
  name: EndpointAddress
  nameWithType: EndpointAddress
  fullName: System.ServiceModel.EndpointAddress
- uid: '{TChannel}'
  commentId: '!:TChannel'
  definition: TChannel
  name: TChannel
  nameWithType: TChannel
  fullName: TChannel
- uid: System.ServiceModel.Channels.IChannelFactory`1.CreateChannel(System.ServiceModel.EndpointAddress)
  commentId: M:System.ServiceModel.Channels.IChannelFactory`1.CreateChannel(System.ServiceModel.EndpointAddress)
  isExternal: false
  name: CreateChannel(EndpointAddress)
  nameWithType: IChannelFactory<TChannel>.CreateChannel(EndpointAddress)
  fullName: System.ServiceModel.Channels.IChannelFactory<TChannel>.CreateChannel(System.ServiceModel.EndpointAddress)
  nameWithType.vb: IChannelFactory(Of TChannel).CreateChannel(EndpointAddress)
  fullname.vb: System.ServiceModel.Channels.IChannelFactory(Of TChannel).CreateChannel(System.ServiceModel.EndpointAddress)
  spec.csharp:
  - uid: System.ServiceModel.Channels.IChannelFactory`1.CreateChannel(System.ServiceModel.EndpointAddress)
    name: CreateChannel
    nameWithType: IChannelFactory<TChannel>.CreateChannel
    fullName: System.ServiceModel.Channels.IChannelFactory<TChannel>.CreateChannel
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.ServiceModel.EndpointAddress
    name: EndpointAddress
    nameWithType: EndpointAddress
    fullName: System.ServiceModel.EndpointAddress
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.ServiceModel.Channels.IChannelFactory`1.CreateChannel(System.ServiceModel.EndpointAddress)
    name: CreateChannel
    nameWithType: IChannelFactory(Of TChannel).CreateChannel
    fullName: System.ServiceModel.Channels.IChannelFactory(Of TChannel).CreateChannel
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.ServiceModel.EndpointAddress
    name: EndpointAddress
    nameWithType: EndpointAddress
    fullName: System.ServiceModel.EndpointAddress
  - name: )
    nameWithType: )
    fullName: )
- uid: TChannel
  isExternal: false
  name: TChannel
  nameWithType: TChannel
  fullName: TChannel
- uid: System.ServiceModel.Channels.IChannelFactory{{TChannel}}.CreateChannel(System.ServiceModel.EndpointAddress,System.Uri)
  commentId: M:System.ServiceModel.Channels.IChannelFactory{`0}.CreateChannel(System.ServiceModel.EndpointAddress,System.Uri)
  parent: System.ServiceModel.Channels.IChannelFactory{{TChannel}}
  definition: System.ServiceModel.Channels.IChannelFactory`1.CreateChannel(System.ServiceModel.EndpointAddress,System.Uri)
  name: CreateChannel(EndpointAddress, Uri)
  nameWithType: IChannelFactory<TChannel>.CreateChannel(EndpointAddress, Uri)
  fullName: System.ServiceModel.Channels.IChannelFactory<TChannel>.CreateChannel(System.ServiceModel.EndpointAddress, System.Uri)
  nameWithType.vb: IChannelFactory(Of TChannel).CreateChannel(EndpointAddress, Uri)
  fullname.vb: System.ServiceModel.Channels.IChannelFactory(Of TChannel).CreateChannel(System.ServiceModel.EndpointAddress, System.Uri)
  spec.csharp:
  - uid: System.ServiceModel.Channels.IChannelFactory`1.CreateChannel(System.ServiceModel.EndpointAddress,System.Uri)
    name: CreateChannel
    nameWithType: IChannelFactory<TChannel>.CreateChannel
    fullName: System.ServiceModel.Channels.IChannelFactory<TChannel>.CreateChannel
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.ServiceModel.EndpointAddress
    name: EndpointAddress
    nameWithType: EndpointAddress
    fullName: System.ServiceModel.EndpointAddress
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Uri
    name: Uri
    nameWithType: Uri
    fullName: System.Uri
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.ServiceModel.Channels.IChannelFactory`1.CreateChannel(System.ServiceModel.EndpointAddress,System.Uri)
    name: CreateChannel
    nameWithType: IChannelFactory(Of TChannel).CreateChannel
    fullName: System.ServiceModel.Channels.IChannelFactory(Of TChannel).CreateChannel
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.ServiceModel.EndpointAddress
    name: EndpointAddress
    nameWithType: EndpointAddress
    fullName: System.ServiceModel.EndpointAddress
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Uri
    name: Uri
    nameWithType: Uri
    fullName: System.Uri
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Uri
  commentId: T:System.Uri
  parent: System
  isExternal: false
  name: Uri
  nameWithType: Uri
  fullName: System.Uri
- uid: System.ServiceModel.Channels.IChannelFactory`1.CreateChannel(System.ServiceModel.EndpointAddress,System.Uri)
  commentId: M:System.ServiceModel.Channels.IChannelFactory`1.CreateChannel(System.ServiceModel.EndpointAddress,System.Uri)
  isExternal: true
  name: CreateChannel(EndpointAddress, Uri)
  nameWithType: IChannelFactory<TChannel>.CreateChannel(EndpointAddress, Uri)
  fullName: System.ServiceModel.Channels.IChannelFactory<TChannel>.CreateChannel(System.ServiceModel.EndpointAddress, System.Uri)
  nameWithType.vb: IChannelFactory(Of TChannel).CreateChannel(EndpointAddress, Uri)
  fullname.vb: System.ServiceModel.Channels.IChannelFactory(Of TChannel).CreateChannel(System.ServiceModel.EndpointAddress, System.Uri)
  spec.csharp:
  - uid: System.ServiceModel.Channels.IChannelFactory`1.CreateChannel(System.ServiceModel.EndpointAddress,System.Uri)
    name: CreateChannel
    nameWithType: IChannelFactory<TChannel>.CreateChannel
    fullName: System.ServiceModel.Channels.IChannelFactory<TChannel>.CreateChannel
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.ServiceModel.EndpointAddress
    name: EndpointAddress
    nameWithType: EndpointAddress
    fullName: System.ServiceModel.EndpointAddress
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Uri
    name: Uri
    nameWithType: Uri
    fullName: System.Uri
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.ServiceModel.Channels.IChannelFactory`1.CreateChannel(System.ServiceModel.EndpointAddress,System.Uri)
    name: CreateChannel
    nameWithType: IChannelFactory(Of TChannel).CreateChannel
    fullName: System.ServiceModel.Channels.IChannelFactory(Of TChannel).CreateChannel
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.ServiceModel.EndpointAddress
    name: EndpointAddress
    nameWithType: EndpointAddress
    fullName: System.ServiceModel.EndpointAddress
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Uri
    name: Uri
    nameWithType: Uri
    fullName: System.Uri
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.ServiceModel.Channels.ChannelFactoryBase.OnAbort
  commentId: M:System.ServiceModel.Channels.ChannelFactoryBase.OnAbort
  parent: System.ServiceModel.Channels.ChannelFactoryBase
  isExternal: false
  name: OnAbort()
  nameWithType: ChannelFactoryBase.OnAbort()
  fullName: System.ServiceModel.Channels.ChannelFactoryBase.OnAbort()
  spec.csharp:
  - uid: System.ServiceModel.Channels.ChannelFactoryBase.OnAbort
    name: OnAbort
    nameWithType: ChannelFactoryBase.OnAbort
    fullName: System.ServiceModel.Channels.ChannelFactoryBase.OnAbort
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.ServiceModel.Channels.ChannelFactoryBase.OnAbort
    name: OnAbort
    nameWithType: ChannelFactoryBase.OnAbort
    fullName: System.ServiceModel.Channels.ChannelFactoryBase.OnAbort
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.ServiceModel.Channels.ChannelFactoryBase.OnBeginClose(System.TimeSpan,System.AsyncCallback,System.Object)
  commentId: M:System.ServiceModel.Channels.ChannelFactoryBase.OnBeginClose(System.TimeSpan,System.AsyncCallback,System.Object)
  parent: System.ServiceModel.Channels.ChannelFactoryBase
  isExternal: true
  name: OnBeginClose(TimeSpan, AsyncCallback, Object)
  nameWithType: ChannelFactoryBase.OnBeginClose(TimeSpan, AsyncCallback, Object)
  fullName: System.ServiceModel.Channels.ChannelFactoryBase.OnBeginClose(System.TimeSpan, System.AsyncCallback, System.Object)
  spec.csharp:
  - uid: System.ServiceModel.Channels.ChannelFactoryBase.OnBeginClose(System.TimeSpan,System.AsyncCallback,System.Object)
    name: OnBeginClose
    nameWithType: ChannelFactoryBase.OnBeginClose
    fullName: System.ServiceModel.Channels.ChannelFactoryBase.OnBeginClose
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.TimeSpan
    name: TimeSpan
    nameWithType: TimeSpan
    fullName: System.TimeSpan
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.AsyncCallback
    name: AsyncCallback
    nameWithType: AsyncCallback
    fullName: System.AsyncCallback
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.ServiceModel.Channels.ChannelFactoryBase.OnBeginClose(System.TimeSpan,System.AsyncCallback,System.Object)
    name: OnBeginClose
    nameWithType: ChannelFactoryBase.OnBeginClose
    fullName: System.ServiceModel.Channels.ChannelFactoryBase.OnBeginClose
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.TimeSpan
    name: TimeSpan
    nameWithType: TimeSpan
    fullName: System.TimeSpan
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.AsyncCallback
    name: AsyncCallback
    nameWithType: AsyncCallback
    fullName: System.AsyncCallback
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.TimeSpan
  commentId: T:System.TimeSpan
  parent: System
  isExternal: false
  name: TimeSpan
  nameWithType: TimeSpan
  fullName: System.TimeSpan
- uid: System.AsyncCallback
  commentId: T:System.AsyncCallback
  parent: System
  isExternal: false
  name: AsyncCallback
  nameWithType: AsyncCallback
  fullName: System.AsyncCallback
- uid: System.IAsyncResult
  commentId: T:System.IAsyncResult
  parent: System
  isExternal: false
  name: IAsyncResult
  nameWithType: IAsyncResult
  fullName: System.IAsyncResult
- uid: System.ServiceModel.Channels.ChannelFactoryBase.OnClose(System.TimeSpan)
  commentId: M:System.ServiceModel.Channels.ChannelFactoryBase.OnClose(System.TimeSpan)
  parent: System.ServiceModel.Channels.ChannelFactoryBase
  isExternal: true
  name: OnClose(TimeSpan)
  nameWithType: ChannelFactoryBase.OnClose(TimeSpan)
  fullName: System.ServiceModel.Channels.ChannelFactoryBase.OnClose(System.TimeSpan)
  spec.csharp:
  - uid: System.ServiceModel.Channels.ChannelFactoryBase.OnClose(System.TimeSpan)
    name: OnClose
    nameWithType: ChannelFactoryBase.OnClose
    fullName: System.ServiceModel.Channels.ChannelFactoryBase.OnClose
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.TimeSpan
    name: TimeSpan
    nameWithType: TimeSpan
    fullName: System.TimeSpan
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.ServiceModel.Channels.ChannelFactoryBase.OnClose(System.TimeSpan)
    name: OnClose
    nameWithType: ChannelFactoryBase.OnClose
    fullName: System.ServiceModel.Channels.ChannelFactoryBase.OnClose
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.TimeSpan
    name: TimeSpan
    nameWithType: TimeSpan
    fullName: System.TimeSpan
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.ServiceModel.Channels.ChannelFactoryBase.OnEndClose(System.IAsyncResult)
  commentId: M:System.ServiceModel.Channels.ChannelFactoryBase.OnEndClose(System.IAsyncResult)
  parent: System.ServiceModel.Channels.ChannelFactoryBase
  isExternal: true
  name: OnEndClose(IAsyncResult)
  nameWithType: ChannelFactoryBase.OnEndClose(IAsyncResult)
  fullName: System.ServiceModel.Channels.ChannelFactoryBase.OnEndClose(System.IAsyncResult)
  spec.csharp:
  - uid: System.ServiceModel.Channels.ChannelFactoryBase.OnEndClose(System.IAsyncResult)
    name: OnEndClose
    nameWithType: ChannelFactoryBase.OnEndClose
    fullName: System.ServiceModel.Channels.ChannelFactoryBase.OnEndClose
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.IAsyncResult
    name: IAsyncResult
    nameWithType: IAsyncResult
    fullName: System.IAsyncResult
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.ServiceModel.Channels.ChannelFactoryBase.OnEndClose(System.IAsyncResult)
    name: OnEndClose
    nameWithType: ChannelFactoryBase.OnEndClose
    fullName: System.ServiceModel.Channels.ChannelFactoryBase.OnEndClose
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.IAsyncResult
    name: IAsyncResult
    nameWithType: IAsyncResult
    fullName: System.IAsyncResult
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.ArgumentNullException
  commentId: T:System.ArgumentNullException
  isExternal: false
  name: ArgumentNullException
  nameWithType: ArgumentNullException
  fullName: System.ArgumentNullException
- uid: System.ObjectDisposedException
  commentId: T:System.ObjectDisposedException
  isExternal: false
  name: ObjectDisposedException
  nameWithType: ObjectDisposedException
  fullName: System.ObjectDisposedException
- uid: System.ServiceModel.CommunicationObjectFaultedException
  commentId: T:System.ServiceModel.CommunicationObjectFaultedException
  isExternal: false
  name: CommunicationObjectFaultedException
  nameWithType: CommunicationObjectFaultedException
  fullName: System.ServiceModel.CommunicationObjectFaultedException
- uid: System.InvalidOperationException
  commentId: T:System.InvalidOperationException
  parent: System
  isExternal: false
  name: InvalidOperationException
  nameWithType: InvalidOperationException
  fullName: System.InvalidOperationException
