### YamlMime:ManagedReference
items:
- uid: System.ServiceModel.EndpointAddress
  commentId: T:System.ServiceModel.EndpointAddress
  id: EndpointAddress
  parent: System.ServiceModel
  children:
  - System.ServiceModel.EndpointAddress.#ctor(System.String)
  - System.ServiceModel.EndpointAddress.#ctor(System.Uri,System.ServiceModel.Channels.AddressHeader[])
  - System.ServiceModel.EndpointAddress.#ctor(System.Uri,System.ServiceModel.EndpointIdentity,System.ServiceModel.Channels.AddressHeader[])
  - System.ServiceModel.EndpointAddress.AnonymousUri
  - System.ServiceModel.EndpointAddress.ApplyTo(System.ServiceModel.Channels.Message)
  - System.ServiceModel.EndpointAddress.Equals(System.Object)
  - System.ServiceModel.EndpointAddress.GetHashCode
  - System.ServiceModel.EndpointAddress.Headers
  - System.ServiceModel.EndpointAddress.Identity
  - System.ServiceModel.EndpointAddress.IsAnonymous
  - System.ServiceModel.EndpointAddress.IsNone
  - System.ServiceModel.EndpointAddress.NoneUri
  - System.ServiceModel.EndpointAddress.op_Equality(System.ServiceModel.EndpointAddress,System.ServiceModel.EndpointAddress)
  - System.ServiceModel.EndpointAddress.op_Inequality(System.ServiceModel.EndpointAddress,System.ServiceModel.EndpointAddress)
  - System.ServiceModel.EndpointAddress.ReadFrom(System.ServiceModel.Channels.AddressingVersion,System.Xml.XmlDictionaryReader)
  - System.ServiceModel.EndpointAddress.ToString
  - System.ServiceModel.EndpointAddress.Uri
  - System.ServiceModel.EndpointAddress.WriteContentsTo(System.ServiceModel.Channels.AddressingVersion,System.Xml.XmlDictionaryWriter)
  langs:
  - csharp
  - vb
  name: EndpointAddress
  nameWithType: EndpointAddress
  fullName: System.ServiceModel.EndpointAddress
  type: Class
  source:
    remote:
      path: src/System.Private.ServiceModel/src/System/ServiceModel/EndpointAddress.cs
      branch: master
      repo: https://github.com/dotnet/wcf.git
    id: EndpointAddress
    path: src/System.Private.ServiceModel/src/System/ServiceModel/EndpointAddress.cs
    startLine: 12
  assemblies:
  - System.ServiceModel.Primitives
  namespace: System.ServiceModel
  summary: "\n<p>Provides a unique network address that a client uses to communicate with a service endpoint.</p>\n"
  syntax:
    content: public class EndpointAddress
    content.vb: Public Class EndpointAddress
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetType
  - System.Object.MemberwiseClone
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: System.ServiceModel.EndpointAddress.#ctor(System.String)
  commentId: M:System.ServiceModel.EndpointAddress.#ctor(System.String)
  id: '#ctor(System.String)'
  parent: System.ServiceModel.EndpointAddress
  langs:
  - csharp
  - vb
  name: EndpointAddress(String)
  nameWithType: EndpointAddress.EndpointAddress(String)
  fullName: System.ServiceModel.EndpointAddress.EndpointAddress(System.String)
  type: Constructor
  source:
    remote:
      path: src/System.Private.ServiceModel/src/System/ServiceModel/EndpointAddress.cs
      branch: master
      repo: https://github.com/dotnet/wcf.git
    id: .ctor
    path: src/System.Private.ServiceModel/src/System/ServiceModel/EndpointAddress.cs
    startLine: 89
  assemblies:
  - System.ServiceModel.Primitives
  namespace: System.ServiceModel
  summary: "\n<p>Initializes a new instance of the <xref href=\"System.ServiceModel.EndpointAddress\" data-throw-if-not-resolved=\"false\"></xref> class with a specified URI string.</p>\n"
  syntax:
    content: public EndpointAddress(string uri)
    content.vb: Public Sub New(uri As String)
    parameters:
    - id: uri
      type: System.String
      description: "\n<p>The URI that identifies the endpoint.</p>\n"
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: System.ServiceModel.EndpointAddress.#ctor(System.Uri,System.ServiceModel.Channels.AddressHeader[])
  commentId: M:System.ServiceModel.EndpointAddress.#ctor(System.Uri,System.ServiceModel.Channels.AddressHeader[])
  id: '#ctor(System.Uri,System.ServiceModel.Channels.AddressHeader[])'
  parent: System.ServiceModel.EndpointAddress
  langs:
  - csharp
  - vb
  name: EndpointAddress(Uri, AddressHeader[])
  nameWithType: EndpointAddress.EndpointAddress(Uri, AddressHeader[])
  fullName: System.ServiceModel.EndpointAddress.EndpointAddress(System.Uri, System.ServiceModel.Channels.AddressHeader[])
  type: Constructor
  source:
    remote:
      path: src/System.ServiceModel.Primitives/ref/System.ServiceModel.Primitives.cs
      branch: master
      repo: https://github.com/dotnet/wcf.git
    id: .ctor
    path: src/System.ServiceModel.Primitives/ref/System.ServiceModel.Primitives.cs
    startLine: 189
  assemblies:
  - System.ServiceModel.Primitives
  namespace: System.ServiceModel
  summary: "\n<p>Initializes a new instance of the <xref href=\"System.ServiceModel.EndpointAddress\" data-throw-if-not-resolved=\"false\"></xref> class with a specified URI and headers.</p>\n"
  syntax:
    content: public EndpointAddress(Uri uri, params AddressHeader[] addressHeaders)
    content.vb: Public Sub New(uri As Uri, ParamArray addressHeaders As AddressHeader())
    parameters:
    - id: uri
      type: System.Uri
      description: "\n<p>The <xref href=\"System.Uri\" data-throw-if-not-resolved=\"false\"></xref> that identifies the endpoint location.</p>\n"
    - id: addressHeaders
      type: System.ServiceModel.Channels.AddressHeader[]
      description: "\n<p>The <xref href=\"System.Array\" data-throw-if-not-resolved=\"false\"></xref> of type <xref href=\"System.ServiceModel.Channels.AddressHeader\" data-throw-if-not-resolved=\"false\"></xref> that contains address information used to interact with the endpoint.</p>\n"
  nameWithType.vb: EndpointAddress.EndpointAddress(Uri, AddressHeader())
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: System.ServiceModel.EndpointAddress.EndpointAddress(System.Uri, System.ServiceModel.Channels.AddressHeader())
  name.vb: EndpointAddress(Uri, AddressHeader())
- uid: System.ServiceModel.EndpointAddress.#ctor(System.Uri,System.ServiceModel.EndpointIdentity,System.ServiceModel.Channels.AddressHeader[])
  commentId: M:System.ServiceModel.EndpointAddress.#ctor(System.Uri,System.ServiceModel.EndpointIdentity,System.ServiceModel.Channels.AddressHeader[])
  id: '#ctor(System.Uri,System.ServiceModel.EndpointIdentity,System.ServiceModel.Channels.AddressHeader[])'
  parent: System.ServiceModel.EndpointAddress
  langs:
  - csharp
  - vb
  name: EndpointAddress(Uri, EndpointIdentity, AddressHeader[])
  nameWithType: EndpointAddress.EndpointAddress(Uri, EndpointIdentity, AddressHeader[])
  fullName: System.ServiceModel.EndpointAddress.EndpointAddress(System.Uri, System.ServiceModel.EndpointIdentity, System.ServiceModel.Channels.AddressHeader[])
  type: Constructor
  source:
    remote:
      path: src/System.ServiceModel.Primitives/ref/System.ServiceModel.Primitives.cs
      branch: master
      repo: https://github.com/dotnet/wcf.git
    id: .ctor
    path: src/System.ServiceModel.Primitives/ref/System.ServiceModel.Primitives.cs
    startLine: 190
  assemblies:
  - System.ServiceModel.Primitives
  namespace: System.ServiceModel
  summary: "\n<p>Initializes a new instance of the <xref href=\"System.ServiceModel.EndpointAddress\" data-throw-if-not-resolved=\"false\"></xref> class with a specified URI, identity, and headers.</p>\n"
  syntax:
    content: public EndpointAddress(Uri uri, EndpointIdentity identity, params AddressHeader[] addressHeaders)
    content.vb: Public Sub New(uri As Uri, identity As EndpointIdentity, ParamArray addressHeaders As AddressHeader())
    parameters:
    - id: uri
      type: System.Uri
      description: "\n<p>The <xref href=\"System.Uri\" data-throw-if-not-resolved=\"false\"></xref> that identifies the endpoint location.</p>\n"
    - id: identity
      type: System.ServiceModel.EndpointIdentity
      description: "\n<p>The <xref href=\"System.ServiceModel.EndpointIdentity\" data-throw-if-not-resolved=\"false\"></xref> for the endpoint.</p>\n"
    - id: addressHeaders
      type: System.ServiceModel.Channels.AddressHeader[]
      description: "\n<p>The <xref href=\"System.Array\" data-throw-if-not-resolved=\"false\"></xref> of type <xref href=\"System.ServiceModel.Channels.AddressHeader\" data-throw-if-not-resolved=\"false\"></xref> that contains address information used to interact with the endpoint.</p>\n"
  nameWithType.vb: EndpointAddress.EndpointAddress(Uri, EndpointIdentity, AddressHeader())
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: System.ServiceModel.EndpointAddress.EndpointAddress(System.Uri, System.ServiceModel.EndpointIdentity, System.ServiceModel.Channels.AddressHeader())
  name.vb: EndpointAddress(Uri, EndpointIdentity, AddressHeader())
- uid: System.ServiceModel.EndpointAddress.AnonymousUri
  commentId: P:System.ServiceModel.EndpointAddress.AnonymousUri
  id: AnonymousUri
  parent: System.ServiceModel.EndpointAddress
  langs:
  - csharp
  - vb
  name: AnonymousUri
  nameWithType: EndpointAddress.AnonymousUri
  fullName: System.ServiceModel.EndpointAddress.AnonymousUri
  type: Property
  source:
    remote:
      path: src/System.Private.ServiceModel/src/System/ServiceModel/EndpointAddress.cs
      branch: master
      repo: https://github.com/dotnet/wcf.git
    id: AnonymousUri
    path: src/System.Private.ServiceModel/src/System/ServiceModel/EndpointAddress.cs
    startLine: 210
  assemblies:
  - System.ServiceModel.Primitives
  namespace: System.ServiceModel
  summary: "\n<p>Gets a version-neutral representation of the anonymous URI.</p>\n"
  syntax:
    content: public static Uri AnonymousUri { get; }
    content.vb: Public Shared ReadOnly Property AnonymousUri As Uri
    parameters: []
    return:
      type: Uri
      description: "\n<p>A <xref href=\"System.Uri\" data-throw-if-not-resolved=\"false\"></xref> with the value http://schemas.microsoft.com/2005/12/ServiceModel/Addressing/Anonymous.</p>\n"
  modifiers.csharp:
  - public
  - static
  - get
  modifiers.vb:
  - Public
  - Shared
  - ReadOnly
- uid: System.ServiceModel.EndpointAddress.Headers
  commentId: P:System.ServiceModel.EndpointAddress.Headers
  id: Headers
  parent: System.ServiceModel.EndpointAddress
  langs:
  - csharp
  - vb
  name: Headers
  nameWithType: EndpointAddress.Headers
  fullName: System.ServiceModel.EndpointAddress.Headers
  type: Property
  source:
    remote:
      path: src/System.Private.ServiceModel/src/System/ServiceModel/EndpointAddress.cs
      branch: master
      repo: https://github.com/dotnet/wcf.git
    id: Headers
    path: src/System.Private.ServiceModel/src/System/ServiceModel/EndpointAddress.cs
    startLine: 238
  assemblies:
  - System.ServiceModel.Primitives
  namespace: System.ServiceModel
  summary: "\n<p>Gets the collection of address headers for the endpoints that the builder can create.</p>\n"
  syntax:
    content: public AddressHeaderCollection Headers { get; }
    content.vb: Public ReadOnly Property Headers As AddressHeaderCollection
    parameters: []
    return:
      type: System.ServiceModel.Channels.AddressHeaderCollection
      description: "\n<p>The <xref href=\"System.ServiceModel.Channels.AddressHeaderCollection\" data-throw-if-not-resolved=\"false\"></xref> that contains address information for the endpoint.</p>\n"
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: System.ServiceModel.EndpointAddress.Identity
  commentId: P:System.ServiceModel.EndpointAddress.Identity
  id: Identity
  parent: System.ServiceModel.EndpointAddress
  langs:
  - csharp
  - vb
  name: Identity
  nameWithType: EndpointAddress.Identity
  fullName: System.ServiceModel.EndpointAddress.Identity
  type: Property
  source:
    remote:
      path: src/System.Private.ServiceModel/src/System/ServiceModel/EndpointAddress.cs
      branch: master
      repo: https://github.com/dotnet/wcf.git
    id: Identity
    path: src/System.Private.ServiceModel/src/System/ServiceModel/EndpointAddress.cs
    startLine: 251
  assemblies:
  - System.ServiceModel.Primitives
  namespace: System.ServiceModel
  summary: "\n<p>Gets the identity for the endpoint used to authenticate it.</p>\n"
  syntax:
    content: public EndpointIdentity Identity { get; }
    content.vb: Public ReadOnly Property Identity As EndpointIdentity
    parameters: []
    return:
      type: System.ServiceModel.EndpointIdentity
      description: "\n<p>The <xref href=\"System.ServiceModel.EndpointIdentity\" data-throw-if-not-resolved=\"false\"></xref> for the endpoint.</p>\n"
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: System.ServiceModel.EndpointAddress.IsAnonymous
  commentId: P:System.ServiceModel.EndpointAddress.IsAnonymous
  id: IsAnonymous
  parent: System.ServiceModel.EndpointAddress
  langs:
  - csharp
  - vb
  name: IsAnonymous
  nameWithType: EndpointAddress.IsAnonymous
  fullName: System.ServiceModel.EndpointAddress.IsAnonymous
  type: Property
  source:
    remote:
      path: src/System.Private.ServiceModel/src/System/ServiceModel/EndpointAddress.cs
      branch: master
      repo: https://github.com/dotnet/wcf.git
    id: IsAnonymous
    path: src/System.Private.ServiceModel/src/System/ServiceModel/EndpointAddress.cs
    startLine: 259
  assemblies:
  - System.ServiceModel.Primitives
  namespace: System.ServiceModel
  summary: "\n<p>Gets a value that indicates whether the endpoint is anonymous.</p>\n"
  syntax:
    content: public bool IsAnonymous { get; }
    content.vb: Public ReadOnly Property IsAnonymous As Boolean
    parameters: []
    return:
      type: System.Boolean
      description: "\n<p>\n<strong>true</strong> if the endpoint is <xref href=\"System.ServiceModel.EndpointAddress.AnonymousUri\" data-throw-if-not-resolved=\"false\"></xref>; otherwise, <strong>false</strong>.</p>\n"
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: System.ServiceModel.EndpointAddress.IsNone
  commentId: P:System.ServiceModel.EndpointAddress.IsNone
  id: IsNone
  parent: System.ServiceModel.EndpointAddress
  langs:
  - csharp
  - vb
  name: IsNone
  nameWithType: EndpointAddress.IsNone
  fullName: System.ServiceModel.EndpointAddress.IsNone
  type: Property
  source:
    remote:
      path: src/System.Private.ServiceModel/src/System/ServiceModel/EndpointAddress.cs
      branch: master
      repo: https://github.com/dotnet/wcf.git
    id: IsNone
    path: src/System.Private.ServiceModel/src/System/ServiceModel/EndpointAddress.cs
    startLine: 267
  assemblies:
  - System.ServiceModel.Primitives
  namespace: System.ServiceModel
  summary: "\n<p>Gets a value that indicates whether the URI for the endpoint is the <xref href=\"System.ServiceModel.EndpointAddress.NoneUri\" data-throw-if-not-resolved=\"false\"></xref>.</p>\n"
  syntax:
    content: public bool IsNone { get; }
    content.vb: Public ReadOnly Property IsNone As Boolean
    parameters: []
    return:
      type: System.Boolean
      description: "\n<p>\n<strong>true</strong> if the URI of the endpoint is <xref href=\"System.ServiceModel.EndpointAddress.NoneUri\" data-throw-if-not-resolved=\"false\"></xref>; otherwise, <strong>false</strong>. </p>\n"
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: System.ServiceModel.EndpointAddress.NoneUri
  commentId: P:System.ServiceModel.EndpointAddress.NoneUri
  id: NoneUri
  parent: System.ServiceModel.EndpointAddress
  langs:
  - csharp
  - vb
  name: NoneUri
  nameWithType: EndpointAddress.NoneUri
  fullName: System.ServiceModel.EndpointAddress.NoneUri
  type: Property
  source:
    remote:
      path: src/System.Private.ServiceModel/src/System/ServiceModel/EndpointAddress.cs
      branch: master
      repo: https://github.com/dotnet/wcf.git
    id: NoneUri
    path: src/System.Private.ServiceModel/src/System/ServiceModel/EndpointAddress.cs
    startLine: 220
  assemblies:
  - System.ServiceModel.Primitives
  namespace: System.ServiceModel
  summary: "\n<p>Gets a version-neutral URI used for the address of an endpoint to which a message must not be sent.</p>\n"
  syntax:
    content: public static Uri NoneUri { get; }
    content.vb: Public Shared ReadOnly Property NoneUri As Uri
    parameters: []
    return:
      type: Uri
      description: "\n<p>A <xref href=\"System.Uri\" data-throw-if-not-resolved=\"false\"></xref> with the value http://schemas.microsoft.com/2005/12/ServiceModel/Addressing/None.</p>\n"
  modifiers.csharp:
  - public
  - static
  - get
  modifiers.vb:
  - Public
  - Shared
  - ReadOnly
- uid: System.ServiceModel.EndpointAddress.Uri
  commentId: P:System.ServiceModel.EndpointAddress.Uri
  id: Uri
  parent: System.ServiceModel.EndpointAddress
  langs:
  - csharp
  - vb
  name: Uri
  nameWithType: EndpointAddress.Uri
  fullName: System.ServiceModel.EndpointAddress.Uri
  type: Property
  source:
    remote:
      path: src/System.Private.ServiceModel/src/System/ServiceModel/EndpointAddress.cs
      branch: master
      repo: https://github.com/dotnet/wcf.git
    id: Uri
    path: src/System.Private.ServiceModel/src/System/ServiceModel/EndpointAddress.cs
    startLine: 275
  assemblies:
  - System.ServiceModel.Primitives
  namespace: System.ServiceModel
  summary: "\n<p>Gets the URI for the endpoint.</p>\n"
  syntax:
    content: public Uri Uri { get; }
    content.vb: Public ReadOnly Property Uri As Uri
    parameters: []
    return:
      type: Uri
      description: "\n<p>The <xref href=\"System.Uri\" data-throw-if-not-resolved=\"false\"></xref> for the endpoint.</p>\n"
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: System.ServiceModel.EndpointAddress.ApplyTo(System.ServiceModel.Channels.Message)
  commentId: M:System.ServiceModel.EndpointAddress.ApplyTo(System.ServiceModel.Channels.Message)
  id: ApplyTo(System.ServiceModel.Channels.Message)
  parent: System.ServiceModel.EndpointAddress
  langs:
  - csharp
  - vb
  name: ApplyTo(Message)
  nameWithType: EndpointAddress.ApplyTo(Message)
  fullName: System.ServiceModel.EndpointAddress.ApplyTo(System.ServiceModel.Channels.Message)
  type: Method
  source:
    remote:
      path: src/System.Private.ServiceModel/src/System/ServiceModel/EndpointAddress.cs
      branch: master
      repo: https://github.com/dotnet/wcf.git
    id: ApplyTo
    path: src/System.Private.ServiceModel/src/System/ServiceModel/EndpointAddress.cs
    startLine: 283
  assemblies:
  - System.ServiceModel.Primitives
  namespace: System.ServiceModel
  summary: "\n<p>Assigns the URI and properties of the endpoint address to the values of the headers of a specified message.</p>\n"
  syntax:
    content: public void ApplyTo(Message message)
    content.vb: Public Sub ApplyTo(message As Message)
    parameters:
    - id: message
      type: System.ServiceModel.Channels.Message
      description: "\n<p>The <xref href=\"System.ServiceModel.Channels.Message\" data-throw-if-not-resolved=\"false\"></xref> whose header values are being assigned.</p>\n"
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "\n<p>\n<em>message</em> is <strong>null</strong>.</p>\n"
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: System.ServiceModel.EndpointAddress.Equals(System.Object)
  commentId: M:System.ServiceModel.EndpointAddress.Equals(System.Object)
  id: Equals(System.Object)
  parent: System.ServiceModel.EndpointAddress
  langs:
  - csharp
  - vb
  name: Equals(Object)
  nameWithType: EndpointAddress.Equals(Object)
  fullName: System.ServiceModel.EndpointAddress.Equals(System.Object)
  type: Method
  source:
    remote:
      path: src/System.Private.ServiceModel/src/System/ServiceModel/EndpointAddress.cs
      branch: master
      repo: https://github.com/dotnet/wcf.git
    id: Equals
    path: src/System.Private.ServiceModel/src/System/ServiceModel/EndpointAddress.cs
    startLine: 436
  assemblies:
  - System.ServiceModel.Primitives
  namespace: System.ServiceModel
  summary: "\n<p>Returns a value that indicates whether a specified object is equivalent to the current endpoint address.</p>\n"
  syntax:
    content: public override bool Equals(object obj)
    content.vb: Public Overrides Function Equals(obj As Object) As Boolean
    parameters:
    - id: obj
      type: System.Object
      description: "\n<p>The <xref href=\"System.Object\" data-throw-if-not-resolved=\"false\"></xref> to be compared to the current endpoint address.</p>\n"
    return:
      type: System.Boolean
      description: "\n<p>\n<strong>true</strong> if the specified object is equivalent to the current address; otherwise, <strong>false</strong>.</p>\n"
  overridden: System.Object.Equals(System.Object)
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
- uid: System.ServiceModel.EndpointAddress.GetHashCode
  commentId: M:System.ServiceModel.EndpointAddress.GetHashCode
  id: GetHashCode
  parent: System.ServiceModel.EndpointAddress
  langs:
  - csharp
  - vb
  name: GetHashCode()
  nameWithType: EndpointAddress.GetHashCode()
  fullName: System.ServiceModel.EndpointAddress.GetHashCode()
  type: Method
  source:
    remote:
      path: src/System.Private.ServiceModel/src/System/ServiceModel/EndpointAddress.cs
      branch: master
      repo: https://github.com/dotnet/wcf.git
    id: GetHashCode
    path: src/System.Private.ServiceModel/src/System/ServiceModel/EndpointAddress.cs
    startLine: 457
  assemblies:
  - System.ServiceModel.Primitives
  namespace: System.ServiceModel
  summary: "\n<p>Provides a unique hash code for the current endpoint address. </p>\n"
  syntax:
    content: public override int GetHashCode()
    content.vb: Public Overrides Function GetHashCode As Integer
    return:
      type: System.Int32
      description: "\n<p>A unique hash code for the current endpoint address.</p>\n"
  overridden: System.Object.GetHashCode
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
- uid: System.ServiceModel.EndpointAddress.op_Equality(System.ServiceModel.EndpointAddress,System.ServiceModel.EndpointAddress)
  commentId: M:System.ServiceModel.EndpointAddress.op_Equality(System.ServiceModel.EndpointAddress,System.ServiceModel.EndpointAddress)
  id: op_Equality(System.ServiceModel.EndpointAddress,System.ServiceModel.EndpointAddress)
  parent: System.ServiceModel.EndpointAddress
  langs:
  - csharp
  - vb
  name: Equality(EndpointAddress, EndpointAddress)
  nameWithType: EndpointAddress.Equality(EndpointAddress, EndpointAddress)
  fullName: System.ServiceModel.EndpointAddress.Equality(System.ServiceModel.EndpointAddress, System.ServiceModel.EndpointAddress)
  type: Operator
  source:
    remote:
      path: src/System.Private.ServiceModel/src/System/ServiceModel/EndpointAddress.cs
      branch: master
      repo: https://github.com/dotnet/wcf.git
    id: op_Equality
    path: src/System.Private.ServiceModel/src/System/ServiceModel/EndpointAddress.cs
    startLine: 906
  assemblies:
  - System.ServiceModel.Primitives
  namespace: System.ServiceModel
  summary: "\n<p>Returns a value that indicates whether specified endpoint addresses are not equivalent.</p>\n"
  syntax:
    content: public static bool operator ==(EndpointAddress address1, EndpointAddress address2)
    content.vb: Public Shared Operator =(address1 As EndpointAddress, address2 As EndpointAddress) As Boolean
    parameters:
    - id: address1
      type: System.ServiceModel.EndpointAddress
      description: "\n<p>One of the <xref href=\"System.ServiceModel.EndpointAddress\" data-throw-if-not-resolved=\"false\"></xref> objects being compared.</p>\n"
    - id: address2
      type: System.ServiceModel.EndpointAddress
      description: "\n<p>One of the <xref href=\"System.ServiceModel.EndpointAddress\" data-throw-if-not-resolved=\"false\"></xref> objects being compared.</p>\n"
    return:
      type: System.Boolean
      description: "\n<p>\n<strong>true</strong> if the endpoint addresses are equivalent; otherwise, <strong>false</strong>.</p>\n"
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: System.ServiceModel.EndpointAddress.op_Inequality(System.ServiceModel.EndpointAddress,System.ServiceModel.EndpointAddress)
  commentId: M:System.ServiceModel.EndpointAddress.op_Inequality(System.ServiceModel.EndpointAddress,System.ServiceModel.EndpointAddress)
  id: op_Inequality(System.ServiceModel.EndpointAddress,System.ServiceModel.EndpointAddress)
  parent: System.ServiceModel.EndpointAddress
  langs:
  - csharp
  - vb
  name: Inequality(EndpointAddress, EndpointAddress)
  nameWithType: EndpointAddress.Inequality(EndpointAddress, EndpointAddress)
  fullName: System.ServiceModel.EndpointAddress.Inequality(System.ServiceModel.EndpointAddress, System.ServiceModel.EndpointAddress)
  type: Operator
  source:
    remote:
      path: src/System.Private.ServiceModel/src/System/ServiceModel/EndpointAddress.cs
      branch: master
      repo: https://github.com/dotnet/wcf.git
    id: op_Inequality
    path: src/System.Private.ServiceModel/src/System/ServiceModel/EndpointAddress.cs
    startLine: 916
  assemblies:
  - System.ServiceModel.Primitives
  namespace: System.ServiceModel
  summary: "\n<p>Returns a value that indicates whether specified endpoint addresses are not equivalent.</p>\n"
  syntax:
    content: public static bool operator !=(EndpointAddress address1, EndpointAddress address2)
    content.vb: Public Shared Operator <>(address1 As EndpointAddress, address2 As EndpointAddress) As Boolean
    parameters:
    - id: address1
      type: System.ServiceModel.EndpointAddress
      description: "\n<p>One of the <xref href=\"System.ServiceModel.EndpointAddress\" data-throw-if-not-resolved=\"false\"></xref> objects being compared.</p>\n"
    - id: address2
      type: System.ServiceModel.EndpointAddress
      description: "\n<p>One of the <xref href=\"System.ServiceModel.EndpointAddress\" data-throw-if-not-resolved=\"false\"></xref> objects being compared.</p>\n"
    return:
      type: System.Boolean
      description: "\n<p>\n<strong>true</strong> if the endpoint addresses are not equivalent; otherwise, <strong>false</strong>.</p>\n"
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: System.ServiceModel.EndpointAddress.ReadFrom(System.ServiceModel.Channels.AddressingVersion,System.Xml.XmlDictionaryReader)
  commentId: M:System.ServiceModel.EndpointAddress.ReadFrom(System.ServiceModel.Channels.AddressingVersion,System.Xml.XmlDictionaryReader)
  id: ReadFrom(System.ServiceModel.Channels.AddressingVersion,System.Xml.XmlDictionaryReader)
  parent: System.ServiceModel.EndpointAddress
  langs:
  - csharp
  - vb
  name: ReadFrom(AddressingVersion, Xml.XmlDictionaryReader)
  nameWithType: EndpointAddress.ReadFrom(AddressingVersion, Xml.XmlDictionaryReader)
  fullName: System.ServiceModel.EndpointAddress.ReadFrom(System.ServiceModel.Channels.AddressingVersion, System.Xml.XmlDictionaryReader)
  type: Method
  source:
    remote:
      path: src/System.ServiceModel.Primitives/ref/System.ServiceModel.Primitives.cs
      branch: master
      repo: https://github.com/dotnet/wcf.git
    id: ReadFrom
    path: src/System.ServiceModel.Primitives/ref/System.ServiceModel.Primitives.cs
    startLine: 203
  assemblies:
  - System.ServiceModel.Primitives
  namespace: System.ServiceModel
  summary: "\n<p>Reads an endpoint address for a specified address version from a specified XML dictionary reader.</p>\n"
  syntax:
    content: public static EndpointAddress ReadFrom(AddressingVersion addressingVersion, Xml.XmlDictionaryReader reader)
    content.vb: Public Shared Function ReadFrom(addressingVersion As AddressingVersion, reader As Xml.XmlDictionaryReader) As
    parameters:
    - id: addressingVersion
      type: System.ServiceModel.Channels.AddressingVersion
      description: "\n<p>The <xref href=\"System.ServiceModel.Channels.AddressingVersion\" data-throw-if-not-resolved=\"false\"></xref> of the current endpoint address.</p>\n"
    - id: reader
      type: System.Xml.XmlDictionaryReader
      description: "\n<p>The <xref href=\"System.Xml.XmlDictionaryReader\" data-throw-if-not-resolved=\"false\"></xref> from which the endpoint address is obtained.</p>\n"
    return:
      type: System.ServiceModel.EndpointAddress
      description: "\n<p>The <xref href=\"System.ServiceModel.EndpointAddress\" data-throw-if-not-resolved=\"false\"></xref> read from the XML dictionary reader.</p>\n"
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: System.ServiceModel.EndpointAddress.ToString
  commentId: M:System.ServiceModel.EndpointAddress.ToString
  id: ToString
  parent: System.ServiceModel.EndpointAddress
  langs:
  - csharp
  - vb
  name: ToString()
  nameWithType: EndpointAddress.ToString()
  fullName: System.ServiceModel.EndpointAddress.ToString()
  type: Method
  source:
    remote:
      path: src/System.Private.ServiceModel/src/System/ServiceModel/EndpointAddress.cs
      branch: master
      repo: https://github.com/dotnet/wcf.git
    id: ToString
    path: src/System.Private.ServiceModel/src/System/ServiceModel/EndpointAddress.cs
    startLine: 741
  assemblies:
  - System.ServiceModel.Primitives
  namespace: System.ServiceModel
  summary: "\n<p>Returns a canonical string representation of the URI that is contained in the endpoint address.</p>\n"
  syntax:
    content: public override string ToString()
    content.vb: Public Overrides Function ToString As String
    return:
      type: System.String
      description: "\n<p>The URI that identifies the endpoint.</p>\n"
  overridden: System.Object.ToString
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
- uid: System.ServiceModel.EndpointAddress.WriteContentsTo(System.ServiceModel.Channels.AddressingVersion,System.Xml.XmlDictionaryWriter)
  commentId: M:System.ServiceModel.EndpointAddress.WriteContentsTo(System.ServiceModel.Channels.AddressingVersion,System.Xml.XmlDictionaryWriter)
  id: WriteContentsTo(System.ServiceModel.Channels.AddressingVersion,System.Xml.XmlDictionaryWriter)
  parent: System.ServiceModel.EndpointAddress
  langs:
  - csharp
  - vb
  name: WriteContentsTo(AddressingVersion, Xml.XmlDictionaryWriter)
  nameWithType: EndpointAddress.WriteContentsTo(AddressingVersion, Xml.XmlDictionaryWriter)
  fullName: System.ServiceModel.EndpointAddress.WriteContentsTo(System.ServiceModel.Channels.AddressingVersion, System.Xml.XmlDictionaryWriter)
  type: Method
  source:
    remote:
      path: src/System.ServiceModel.Primitives/ref/System.ServiceModel.Primitives.cs
      branch: master
      repo: https://github.com/dotnet/wcf.git
    id: WriteContentsTo
    path: src/System.ServiceModel.Primitives/ref/System.ServiceModel.Primitives.cs
    startLine: 205
  assemblies:
  - System.ServiceModel.Primitives
  namespace: System.ServiceModel
  summary: "\n<p>Saves all the child nodes of the node to the XML dictionary writer specified.</p>\n"
  syntax:
    content: public void WriteContentsTo(AddressingVersion addressingVersion, Xml.XmlDictionaryWriter writer)
    content.vb: Public Sub WriteContentsTo(addressingVersion As AddressingVersion, writer As Xml.XmlDictionaryWriter)
    parameters:
    - id: addressingVersion
      type: System.ServiceModel.Channels.AddressingVersion
      description: "\n<p>The <xref href=\"System.ServiceModel.Channels.AddressingVersion\" data-throw-if-not-resolved=\"false\"></xref> of the current endpoint address.</p>\n"
    - id: writer
      type: System.Xml.XmlDictionaryWriter
      description: "\n<p>The <xref href=\"System.Xml.XmlDictionaryWriter\" data-throw-if-not-resolved=\"false\"></xref> to which the endpoint address is saved.</p>\n"
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "\n<p>\n<em>writer</em> or <em>addressingVersion</em> is <strong>null</strong>.</p>\n"
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
references:
- uid: System.ServiceModel
  commentId: N:System.ServiceModel
  isExternal: false
  name: System.ServiceModel
  nameWithType: System.ServiceModel
  fullName: System.ServiceModel
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: false
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: false
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Uri
  commentId: T:System.Uri
  parent: System
  isExternal: false
  name: Uri
  nameWithType: Uri
  fullName: System.Uri
- uid: System.ServiceModel.Channels.AddressHeader[]
  name: AddressHeader[]
  nameWithType: AddressHeader[]
  fullName: System.ServiceModel.Channels.AddressHeader[]
  nameWithType.vb: AddressHeader()
  fullname.vb: System.ServiceModel.Channels.AddressHeader()
  name.vb: AddressHeader()
  spec.csharp:
  - uid: System.ServiceModel.Channels.AddressHeader
    name: AddressHeader
    nameWithType: AddressHeader
    fullName: System.ServiceModel.Channels.AddressHeader
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  spec.vb:
  - uid: System.ServiceModel.Channels.AddressHeader
    name: AddressHeader
    nameWithType: AddressHeader
    fullName: System.ServiceModel.Channels.AddressHeader
  - name: ()
    nameWithType: ()
    fullName: ()
- uid: System.ServiceModel.EndpointIdentity
  commentId: T:System.ServiceModel.EndpointIdentity
  parent: System.ServiceModel
  isExternal: false
  name: EndpointIdentity
  nameWithType: EndpointIdentity
  fullName: System.ServiceModel.EndpointIdentity
- uid: System.ServiceModel.Channels.AddressHeaderCollection
  commentId: T:System.ServiceModel.Channels.AddressHeaderCollection
  parent: System.ServiceModel.Channels
  isExternal: false
  name: AddressHeaderCollection
  nameWithType: AddressHeaderCollection
  fullName: System.ServiceModel.Channels.AddressHeaderCollection
- uid: System.ServiceModel.Channels
  commentId: N:System.ServiceModel.Channels
  isExternal: false
  name: System.ServiceModel.Channels
  nameWithType: System.ServiceModel.Channels
  fullName: System.ServiceModel.Channels
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: false
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.ServiceModel.Channels.Message
  commentId: T:System.ServiceModel.Channels.Message
  parent: System.ServiceModel.Channels
  isExternal: false
  name: Message
  nameWithType: Message
  fullName: System.ServiceModel.Channels.Message
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: false
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.ServiceModel.EndpointAddress
  commentId: T:System.ServiceModel.EndpointAddress
  parent: System.ServiceModel
  isExternal: false
  name: EndpointAddress
  nameWithType: EndpointAddress
  fullName: System.ServiceModel.EndpointAddress
- uid: System.ServiceModel.Channels.AddressingVersion
  commentId: T:System.ServiceModel.Channels.AddressingVersion
  parent: System.ServiceModel.Channels
  isExternal: false
  name: AddressingVersion
  nameWithType: AddressingVersion
  fullName: System.ServiceModel.Channels.AddressingVersion
- uid: System.Xml.XmlDictionaryReader
  commentId: T:System.Xml.XmlDictionaryReader
  parent: System.Xml
  isExternal: false
  name: XmlDictionaryReader
  nameWithType: XmlDictionaryReader
  fullName: System.Xml.XmlDictionaryReader
- uid: System.Xml
  commentId: N:System.Xml
  isExternal: false
  name: System.Xml
  nameWithType: System.Xml
  fullName: System.Xml
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Xml.XmlDictionaryWriter
  commentId: T:System.Xml.XmlDictionaryWriter
  parent: System.Xml
  isExternal: false
  name: XmlDictionaryWriter
  nameWithType: XmlDictionaryWriter
  fullName: System.Xml.XmlDictionaryWriter
- uid: System.ArgumentNullException
  commentId: T:System.ArgumentNullException
  isExternal: false
  name: ArgumentNullException
  nameWithType: ArgumentNullException
  fullName: System.ArgumentNullException
