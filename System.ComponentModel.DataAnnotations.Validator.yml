### YamlMime:ManagedReference
items:
- uid: System.ComponentModel.DataAnnotations.Validator
  commentId: T:System.ComponentModel.DataAnnotations.Validator
  id: Validator
  parent: System.ComponentModel.DataAnnotations
  children:
  - System.ComponentModel.DataAnnotations.Validator.TryValidateObject(System.Object,System.ComponentModel.DataAnnotations.ValidationContext,System.Collections.Generic.ICollection{System.ComponentModel.DataAnnotations.ValidationResult})
  - System.ComponentModel.DataAnnotations.Validator.TryValidateObject(System.Object,System.ComponentModel.DataAnnotations.ValidationContext,System.Collections.Generic.ICollection{System.ComponentModel.DataAnnotations.ValidationResult},System.Boolean)
  - System.ComponentModel.DataAnnotations.Validator.TryValidateProperty(System.Object,System.ComponentModel.DataAnnotations.ValidationContext,System.Collections.Generic.ICollection{System.ComponentModel.DataAnnotations.ValidationResult})
  - System.ComponentModel.DataAnnotations.Validator.TryValidateValue(System.Object,System.ComponentModel.DataAnnotations.ValidationContext,System.Collections.Generic.ICollection{System.ComponentModel.DataAnnotations.ValidationResult},System.Collections.Generic.IEnumerable{System.ComponentModel.DataAnnotations.ValidationAttribute})
  - System.ComponentModel.DataAnnotations.Validator.ValidateObject(System.Object,System.ComponentModel.DataAnnotations.ValidationContext)
  - System.ComponentModel.DataAnnotations.Validator.ValidateObject(System.Object,System.ComponentModel.DataAnnotations.ValidationContext,System.Boolean)
  - System.ComponentModel.DataAnnotations.Validator.ValidateProperty(System.Object,System.ComponentModel.DataAnnotations.ValidationContext)
  - System.ComponentModel.DataAnnotations.Validator.ValidateValue(System.Object,System.ComponentModel.DataAnnotations.ValidationContext,System.Collections.Generic.IEnumerable{System.ComponentModel.DataAnnotations.ValidationAttribute})
  langs:
  - csharp
  - vb
  name: Validator
  nameWithType: Validator
  fullName: System.ComponentModel.DataAnnotations.Validator
  type: Class
  source:
    remote:
      path: src/System.ComponentModel.Annotations/src/System/ComponentModel/DataAnnotations/Validator.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: Validator
    path: src/System.ComponentModel.Annotations/src/System/ComponentModel/DataAnnotations/Validator.cs
    startLine: 16
  assemblies:
  - System.ComponentModel.Annotations
  namespace: System.ComponentModel.DataAnnotations
  summary: "\n<p>Defines a helper class that can be used to validate objects, properties, and methods when it is included in their associated <xref href=\"System.ComponentModel.DataAnnotations.ValidationAttribute\" data-throw-if-not-resolved=\"false\"></xref> attributes.</p>\n"
  syntax:
    content: public static class Validator
    content.vb: Public Module Validator
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  modifiers.csharp:
  - public
  - static
  - class
  modifiers.vb:
  - Public
  - Module
- uid: System.ComponentModel.DataAnnotations.Validator.TryValidateObject(System.Object,System.ComponentModel.DataAnnotations.ValidationContext,System.Collections.Generic.ICollection{System.ComponentModel.DataAnnotations.ValidationResult})
  commentId: M:System.ComponentModel.DataAnnotations.Validator.TryValidateObject(System.Object,System.ComponentModel.DataAnnotations.ValidationContext,System.Collections.Generic.ICollection{System.ComponentModel.DataAnnotations.ValidationResult})
  id: TryValidateObject(System.Object,System.ComponentModel.DataAnnotations.ValidationContext,System.Collections.Generic.ICollection{System.ComponentModel.DataAnnotations.ValidationResult})
  parent: System.ComponentModel.DataAnnotations.Validator
  langs:
  - csharp
  - vb
  name: TryValidateObject(Object, ValidationContext, ICollection<ValidationResult>)
  nameWithType: Validator.TryValidateObject(Object, ValidationContext, ICollection<ValidationResult>)
  fullName: System.ComponentModel.DataAnnotations.Validator.TryValidateObject(System.Object, System.ComponentModel.DataAnnotations.ValidationContext, System.Collections.Generic.ICollection<System.ComponentModel.DataAnnotations.ValidationResult>)
  type: Method
  source:
    remote:
      path: src/System.ComponentModel.Annotations/src/System/ComponentModel/DataAnnotations/Validator.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: TryValidateObject
    path: src/System.ComponentModel.Annotations/src/System/ComponentModel/DataAnnotations/Validator.cs
    startLine: 96
  assemblies:
  - System.ComponentModel.Annotations
  namespace: System.ComponentModel.DataAnnotations
  summary: "\n<p>Determines whether the specified object is valid using the validation context and validation results collection.</p>\n"
  syntax:
    content: public static bool TryValidateObject(object instance, ValidationContext validationContext, ICollection<ValidationResult> validationResults)
    content.vb: Public Shared Function TryValidateObject(instance As Object, validationContext As ValidationContext, validationResults As ICollection(Of ValidationResult)) As Boolean
    parameters:
    - id: instance
      type: System.Object
      description: "\n<p>The object to validate.</p>\n"
    - id: validationContext
      type: System.ComponentModel.DataAnnotations.ValidationContext
      description: "\n<p>The context that describes the object to validate.</p>\n"
    - id: validationResults
      type: System.Collections.Generic.ICollection{System.ComponentModel.DataAnnotations.ValidationResult}
      description: "\n<p>A collection to hold each failed validation.</p>\n"
    return:
      type: System.Boolean
      description: "\n<p>\n<strong>true</strong> if the object validates; otherwise, <strong>false</strong>.</p>\n"
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "\n<p>\n<em>instance</em> is <strong>null</strong>.</p>\n"
  nameWithType.vb: Validator.TryValidateObject(Object, ValidationContext, ICollection(Of ValidationResult))
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: System.ComponentModel.DataAnnotations.Validator.TryValidateObject(System.Object, System.ComponentModel.DataAnnotations.ValidationContext, System.Collections.Generic.ICollection(Of System.ComponentModel.DataAnnotations.ValidationResult))
  name.vb: TryValidateObject(Object, ValidationContext, ICollection(Of ValidationResult))
- uid: System.ComponentModel.DataAnnotations.Validator.TryValidateObject(System.Object,System.ComponentModel.DataAnnotations.ValidationContext,System.Collections.Generic.ICollection{System.ComponentModel.DataAnnotations.ValidationResult},System.Boolean)
  commentId: M:System.ComponentModel.DataAnnotations.Validator.TryValidateObject(System.Object,System.ComponentModel.DataAnnotations.ValidationContext,System.Collections.Generic.ICollection{System.ComponentModel.DataAnnotations.ValidationResult},System.Boolean)
  id: TryValidateObject(System.Object,System.ComponentModel.DataAnnotations.ValidationContext,System.Collections.Generic.ICollection{System.ComponentModel.DataAnnotations.ValidationResult},System.Boolean)
  parent: System.ComponentModel.DataAnnotations.Validator
  langs:
  - csharp
  - vb
  name: TryValidateObject(Object, ValidationContext, ICollection<ValidationResult>, Boolean)
  nameWithType: Validator.TryValidateObject(Object, ValidationContext, ICollection<ValidationResult>, Boolean)
  fullName: System.ComponentModel.DataAnnotations.Validator.TryValidateObject(System.Object, System.ComponentModel.DataAnnotations.ValidationContext, System.Collections.Generic.ICollection<System.ComponentModel.DataAnnotations.ValidationResult>, System.Boolean)
  type: Method
  source:
    remote:
      path: src/System.ComponentModel.Annotations/src/System/ComponentModel/DataAnnotations/Validator.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: TryValidateObject
    path: src/System.ComponentModel.Annotations/src/System/ComponentModel/DataAnnotations/Validator.cs
    startLine: 135
  assemblies:
  - System.ComponentModel.Annotations
  namespace: System.ComponentModel.DataAnnotations
  summary: "\n<p>Determines whether the specified object is valid using the validation context, validation results collection, and a value that specifies whether to validate all properties.</p>\n"
  syntax:
    content: public static bool TryValidateObject(object instance, ValidationContext validationContext, ICollection<ValidationResult> validationResults, bool validateAllProperties)
    content.vb: Public Shared Function TryValidateObject(instance As Object, validationContext As ValidationContext, validationResults As ICollection(Of ValidationResult), validateAllProperties As Boolean) As Boolean
    parameters:
    - id: instance
      type: System.Object
      description: "\n<p>The object to validate.</p>\n"
    - id: validationContext
      type: System.ComponentModel.DataAnnotations.ValidationContext
      description: "\n<p>The context that describes the object to validate.</p>\n"
    - id: validationResults
      type: System.Collections.Generic.ICollection{System.ComponentModel.DataAnnotations.ValidationResult}
      description: "\n<p>A collection to hold each failed validation.</p>\n"
    - id: validateAllProperties
      type: System.Boolean
      description: "\n<p>\n<strong>true</strong> to validate all properties; if <strong>false</strong>, only required attributes are validated..</p>\n"
    return:
      type: System.Boolean
      description: "\n<p>\n<strong>true</strong> if the object validates; otherwise, <strong>false</strong>.</p>\n"
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "\n<p>\n<em>instance</em> is <strong>null</strong>.</p>\n"
  nameWithType.vb: Validator.TryValidateObject(Object, ValidationContext, ICollection(Of ValidationResult), Boolean)
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: System.ComponentModel.DataAnnotations.Validator.TryValidateObject(System.Object, System.ComponentModel.DataAnnotations.ValidationContext, System.Collections.Generic.ICollection(Of System.ComponentModel.DataAnnotations.ValidationResult), System.Boolean)
  name.vb: TryValidateObject(Object, ValidationContext, ICollection(Of ValidationResult), Boolean)
- uid: System.ComponentModel.DataAnnotations.Validator.TryValidateProperty(System.Object,System.ComponentModel.DataAnnotations.ValidationContext,System.Collections.Generic.ICollection{System.ComponentModel.DataAnnotations.ValidationResult})
  commentId: M:System.ComponentModel.DataAnnotations.Validator.TryValidateProperty(System.Object,System.ComponentModel.DataAnnotations.ValidationContext,System.Collections.Generic.ICollection{System.ComponentModel.DataAnnotations.ValidationResult})
  id: TryValidateProperty(System.Object,System.ComponentModel.DataAnnotations.ValidationContext,System.Collections.Generic.ICollection{System.ComponentModel.DataAnnotations.ValidationResult})
  parent: System.ComponentModel.DataAnnotations.Validator
  langs:
  - csharp
  - vb
  name: TryValidateProperty(Object, ValidationContext, ICollection<ValidationResult>)
  nameWithType: Validator.TryValidateProperty(Object, ValidationContext, ICollection<ValidationResult>)
  fullName: System.ComponentModel.DataAnnotations.Validator.TryValidateProperty(System.Object, System.ComponentModel.DataAnnotations.ValidationContext, System.Collections.Generic.ICollection<System.ComponentModel.DataAnnotations.ValidationResult>)
  type: Method
  source:
    remote:
      path: src/System.ComponentModel.Annotations/src/System/ComponentModel/DataAnnotations/Validator.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: TryValidateProperty
    path: src/System.ComponentModel.Annotations/src/System/ComponentModel/DataAnnotations/Validator.cs
    startLine: 48
  assemblies:
  - System.ComponentModel.Annotations
  namespace: System.ComponentModel.DataAnnotations
  summary: "\n<p>Validates the property.</p>\n"
  syntax:
    content: public static bool TryValidateProperty(object value, ValidationContext validationContext, ICollection<ValidationResult> validationResults)
    content.vb: Public Shared Function TryValidateProperty(value As Object, validationContext As ValidationContext, validationResults As ICollection(Of ValidationResult)) As Boolean
    parameters:
    - id: value
      type: System.Object
      description: "\n<p>The value to validate.</p>\n"
    - id: validationContext
      type: System.ComponentModel.DataAnnotations.ValidationContext
      description: "\n<p>The context that describes the property to validate.</p>\n"
    - id: validationResults
      type: System.Collections.Generic.ICollection{System.ComponentModel.DataAnnotations.ValidationResult}
      description: "\n<p>A collection to hold each failed validation. </p>\n"
    return:
      type: System.Boolean
      description: "\n<p>\n<strong>true</strong> if the property validates; otherwise, <strong>false</strong>.</p>\n"
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "\n<p>\n<em>value</em> cannot be assigned to the property.</p>\n<p>-or-</p>\n<p>\n<em>value </em>is <strong>null</strong>.</p>\n"
  nameWithType.vb: Validator.TryValidateProperty(Object, ValidationContext, ICollection(Of ValidationResult))
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: System.ComponentModel.DataAnnotations.Validator.TryValidateProperty(System.Object, System.ComponentModel.DataAnnotations.ValidationContext, System.Collections.Generic.ICollection(Of System.ComponentModel.DataAnnotations.ValidationResult))
  name.vb: TryValidateProperty(Object, ValidationContext, ICollection(Of ValidationResult))
- uid: System.ComponentModel.DataAnnotations.Validator.TryValidateValue(System.Object,System.ComponentModel.DataAnnotations.ValidationContext,System.Collections.Generic.ICollection{System.ComponentModel.DataAnnotations.ValidationResult},System.Collections.Generic.IEnumerable{System.ComponentModel.DataAnnotations.ValidationAttribute})
  commentId: M:System.ComponentModel.DataAnnotations.Validator.TryValidateValue(System.Object,System.ComponentModel.DataAnnotations.ValidationContext,System.Collections.Generic.ICollection{System.ComponentModel.DataAnnotations.ValidationResult},System.Collections.Generic.IEnumerable{System.ComponentModel.DataAnnotations.ValidationAttribute})
  id: TryValidateValue(System.Object,System.ComponentModel.DataAnnotations.ValidationContext,System.Collections.Generic.ICollection{System.ComponentModel.DataAnnotations.ValidationResult},System.Collections.Generic.IEnumerable{System.ComponentModel.DataAnnotations.ValidationAttribute})
  parent: System.ComponentModel.DataAnnotations.Validator
  langs:
  - csharp
  - vb
  name: TryValidateValue(Object, ValidationContext, ICollection<ValidationResult>, IEnumerable<ValidationAttribute>)
  nameWithType: Validator.TryValidateValue(Object, ValidationContext, ICollection<ValidationResult>, IEnumerable<ValidationAttribute>)
  fullName: System.ComponentModel.DataAnnotations.Validator.TryValidateValue(System.Object, System.ComponentModel.DataAnnotations.ValidationContext, System.Collections.Generic.ICollection<System.ComponentModel.DataAnnotations.ValidationResult>, System.Collections.Generic.IEnumerable<System.ComponentModel.DataAnnotations.ValidationAttribute>)
  type: Method
  source:
    remote:
      path: src/System.ComponentModel.Annotations/src/System/ComponentModel/DataAnnotations/Validator.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: TryValidateValue
    path: src/System.ComponentModel.Annotations/src/System/ComponentModel/DataAnnotations/Validator.cs
    startLine: 196
  assemblies:
  - System.ComponentModel.Annotations
  namespace: System.ComponentModel.DataAnnotations
  summary: "\n<p>Returns a value that indicates whether the specified value is valid with the specified attributes.</p>\n"
  syntax:
    content: public static bool TryValidateValue(object value, ValidationContext validationContext, ICollection<ValidationResult> validationResults, IEnumerable<ValidationAttribute> validationAttributes)
    content.vb: Public Shared Function TryValidateValue(value As Object, validationContext As ValidationContext, validationResults As ICollection(Of ValidationResult), validationAttributes As IEnumerable(Of ValidationAttribute)) As Boolean
    parameters:
    - id: value
      type: System.Object
      description: "\n<p>The value to validate.</p>\n"
    - id: validationContext
      type: System.ComponentModel.DataAnnotations.ValidationContext
      description: "\n<p>The context that describes the object to validate.</p>\n"
    - id: validationResults
      type: System.Collections.Generic.ICollection{System.ComponentModel.DataAnnotations.ValidationResult}
      description: "\n<p>A collection to hold failed validations. </p>\n"
    - id: validationAttributes
      type: System.Collections.Generic.IEnumerable{System.ComponentModel.DataAnnotations.ValidationAttribute}
      description: "\n<p>The validation attributes.</p>\n"
    return:
      type: System.Boolean
      description: "\n<p>\n<strong>true</strong> if the object validates; otherwise, <strong>false</strong>.</p>\n"
  nameWithType.vb: Validator.TryValidateValue(Object, ValidationContext, ICollection(Of ValidationResult), IEnumerable(Of ValidationAttribute))
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: System.ComponentModel.DataAnnotations.Validator.TryValidateValue(System.Object, System.ComponentModel.DataAnnotations.ValidationContext, System.Collections.Generic.ICollection(Of System.ComponentModel.DataAnnotations.ValidationResult), System.Collections.Generic.IEnumerable(Of System.ComponentModel.DataAnnotations.ValidationAttribute))
  name.vb: TryValidateValue(Object, ValidationContext, ICollection(Of ValidationResult), IEnumerable(Of ValidationAttribute))
- uid: System.ComponentModel.DataAnnotations.Validator.ValidateObject(System.Object,System.ComponentModel.DataAnnotations.ValidationContext)
  commentId: M:System.ComponentModel.DataAnnotations.Validator.ValidateObject(System.Object,System.ComponentModel.DataAnnotations.ValidationContext)
  id: ValidateObject(System.Object,System.ComponentModel.DataAnnotations.ValidationContext)
  parent: System.ComponentModel.DataAnnotations.Validator
  langs:
  - csharp
  - vb
  name: ValidateObject(Object, ValidationContext)
  nameWithType: Validator.ValidateObject(Object, ValidationContext)
  fullName: System.ComponentModel.DataAnnotations.Validator.ValidateObject(System.Object, System.ComponentModel.DataAnnotations.ValidationContext)
  type: Method
  source:
    remote:
      path: src/System.ComponentModel.Annotations/src/System/ComponentModel/DataAnnotations/Validator.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: ValidateObject
    path: src/System.ComponentModel.Annotations/src/System/ComponentModel/DataAnnotations/Validator.cs
    startLine: 260
  assemblies:
  - System.ComponentModel.Annotations
  namespace: System.ComponentModel.DataAnnotations
  summary: "\n<p>Determines whether the specified object is valid using the validation context.</p>\n"
  syntax:
    content: public static void ValidateObject(object instance, ValidationContext validationContext)
    content.vb: Public Shared Sub ValidateObject(instance As Object, validationContext As ValidationContext)
    parameters:
    - id: instance
      type: System.Object
      description: "\n<p>The object to validate.</p>\n"
    - id: validationContext
      type: System.ComponentModel.DataAnnotations.ValidationContext
      description: "\n<p>The context that describes the object to validate.</p>\n"
  exceptions:
  - type: System.ComponentModel.DataAnnotations.ValidationException
    commentId: T:System.ComponentModel.DataAnnotations.ValidationException
    description: "\n<p>The object is not valid.</p>\n"
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "\n<p>\n<em>instance</em> is <strong>null</strong>.</p>\n"
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: System.ComponentModel.DataAnnotations.Validator.ValidateObject(System.Object,System.ComponentModel.DataAnnotations.ValidationContext,System.Boolean)
  commentId: M:System.ComponentModel.DataAnnotations.Validator.ValidateObject(System.Object,System.ComponentModel.DataAnnotations.ValidationContext,System.Boolean)
  id: ValidateObject(System.Object,System.ComponentModel.DataAnnotations.ValidationContext,System.Boolean)
  parent: System.ComponentModel.DataAnnotations.Validator
  langs:
  - csharp
  - vb
  name: ValidateObject(Object, ValidationContext, Boolean)
  nameWithType: Validator.ValidateObject(Object, ValidationContext, Boolean)
  fullName: System.ComponentModel.DataAnnotations.Validator.ValidateObject(System.Object, System.ComponentModel.DataAnnotations.ValidationContext, System.Boolean)
  type: Method
  source:
    remote:
      path: src/System.ComponentModel.Annotations/src/System/ComponentModel/DataAnnotations/Validator.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: ValidateObject
    path: src/System.ComponentModel.Annotations/src/System/ComponentModel/DataAnnotations/Validator.cs
    startLine: 285
  assemblies:
  - System.ComponentModel.Annotations
  namespace: System.ComponentModel.DataAnnotations
  summary: "\n<p>Determines whether the specified object is valid using the validation context, and a value that specifies whether to validate all properties.</p>\n"
  syntax:
    content: public static void ValidateObject(object instance, ValidationContext validationContext, bool validateAllProperties)
    content.vb: Public Shared Sub ValidateObject(instance As Object, validationContext As ValidationContext, validateAllProperties As Boolean)
    parameters:
    - id: instance
      type: System.Object
      description: "\n<p>The object to validate.</p>\n"
    - id: validationContext
      type: System.ComponentModel.DataAnnotations.ValidationContext
      description: "\n<p>The context that describes the object to validate.</p>\n"
    - id: validateAllProperties
      type: System.Boolean
      description: "\n<p>\n<strong>true</strong> to validate all properties; otherwise, <strong>false</strong>.</p>\n"
  exceptions:
  - type: System.ComponentModel.DataAnnotations.ValidationException
    commentId: T:System.ComponentModel.DataAnnotations.ValidationException
    description: "\n<p>\n<em>instance</em> is not valid.</p>\n"
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "\n<p>\n<em>instance</em> is <strong>null</strong>.</p>\n"
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: System.ComponentModel.DataAnnotations.Validator.ValidateProperty(System.Object,System.ComponentModel.DataAnnotations.ValidationContext)
  commentId: M:System.ComponentModel.DataAnnotations.Validator.ValidateProperty(System.Object,System.ComponentModel.DataAnnotations.ValidationContext)
  id: ValidateProperty(System.Object,System.ComponentModel.DataAnnotations.ValidationContext)
  parent: System.ComponentModel.DataAnnotations.Validator
  langs:
  - csharp
  - vb
  name: ValidateProperty(Object, ValidationContext)
  nameWithType: Validator.ValidateProperty(Object, ValidationContext)
  fullName: System.ComponentModel.DataAnnotations.Validator.ValidateProperty(System.Object, System.ComponentModel.DataAnnotations.ValidationContext)
  type: Method
  source:
    remote:
      path: src/System.ComponentModel.Annotations/src/System/ComponentModel/DataAnnotations/Validator.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: ValidateProperty
    path: src/System.ComponentModel.Annotations/src/System/ComponentModel/DataAnnotations/Validator.cs
    startLine: 227
  assemblies:
  - System.ComponentModel.Annotations
  namespace: System.ComponentModel.DataAnnotations
  summary: "\n<p>Validates the property.</p>\n"
  syntax:
    content: public static void ValidateProperty(object value, ValidationContext validationContext)
    content.vb: Public Shared Sub ValidateProperty(value As Object, validationContext As ValidationContext)
    parameters:
    - id: value
      type: System.Object
      description: "\n<p>The value to validate.</p>\n"
    - id: validationContext
      type: System.ComponentModel.DataAnnotations.ValidationContext
      description: "\n<p>The context that describes the property to validate.</p>\n"
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "\n<p>\n<em>value</em> cannot be assigned to the property.</p>\n"
  - type: System.ComponentModel.DataAnnotations.ValidationException
    commentId: T:System.ComponentModel.DataAnnotations.ValidationException
    description: "\n<p>The <em>value</em> parameter is not valid.</p>\n"
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: System.ComponentModel.DataAnnotations.Validator.ValidateValue(System.Object,System.ComponentModel.DataAnnotations.ValidationContext,System.Collections.Generic.IEnumerable{System.ComponentModel.DataAnnotations.ValidationAttribute})
  commentId: M:System.ComponentModel.DataAnnotations.Validator.ValidateValue(System.Object,System.ComponentModel.DataAnnotations.ValidationContext,System.Collections.Generic.IEnumerable{System.ComponentModel.DataAnnotations.ValidationAttribute})
  id: ValidateValue(System.Object,System.ComponentModel.DataAnnotations.ValidationContext,System.Collections.Generic.IEnumerable{System.ComponentModel.DataAnnotations.ValidationAttribute})
  parent: System.ComponentModel.DataAnnotations.Validator
  langs:
  - csharp
  - vb
  name: ValidateValue(Object, ValidationContext, IEnumerable<ValidationAttribute>)
  nameWithType: Validator.ValidateValue(Object, ValidationContext, IEnumerable<ValidationAttribute>)
  fullName: System.ComponentModel.DataAnnotations.Validator.ValidateValue(System.Object, System.ComponentModel.DataAnnotations.ValidationContext, System.Collections.Generic.IEnumerable<System.ComponentModel.DataAnnotations.ValidationAttribute>)
  type: Method
  source:
    remote:
      path: src/System.ComponentModel.Annotations/src/System/ComponentModel/DataAnnotations/Validator.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: ValidateValue
    path: src/System.ComponentModel.Annotations/src/System/ComponentModel/DataAnnotations/Validator.cs
    startLine: 327
  assemblies:
  - System.ComponentModel.Annotations
  namespace: System.ComponentModel.DataAnnotations
  summary: "\n<p>Validates the specified attributes.</p>\n"
  syntax:
    content: public static void ValidateValue(object value, ValidationContext validationContext, IEnumerable<ValidationAttribute> validationAttributes)
    content.vb: Public Shared Sub ValidateValue(value As Object, validationContext As ValidationContext, validationAttributes As IEnumerable(Of ValidationAttribute))
    parameters:
    - id: value
      type: System.Object
      description: "\n<p>The value to validate.</p>\n"
    - id: validationContext
      type: System.ComponentModel.DataAnnotations.ValidationContext
      description: "\n<p>The context that describes the object to validate.</p>\n"
    - id: validationAttributes
      type: System.Collections.Generic.IEnumerable{System.ComponentModel.DataAnnotations.ValidationAttribute}
      description: "\n<p>The validation attributes.</p>\n"
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "\n<p>The <em>validationContext</em> parameter is <strong>null</strong>.</p>\n"
  - type: System.ComponentModel.DataAnnotations.ValidationException
    commentId: T:System.ComponentModel.DataAnnotations.ValidationException
    description: "\n<p>The <em>value</em> parameter does not validate with the <em>validationAttributes</em> parameter.</p>\n"
  nameWithType.vb: Validator.ValidateValue(Object, ValidationContext, IEnumerable(Of ValidationAttribute))
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: System.ComponentModel.DataAnnotations.Validator.ValidateValue(System.Object, System.ComponentModel.DataAnnotations.ValidationContext, System.Collections.Generic.IEnumerable(Of System.ComponentModel.DataAnnotations.ValidationAttribute))
  name.vb: ValidateValue(Object, ValidationContext, IEnumerable(Of ValidationAttribute))
references:
- uid: System.ComponentModel.DataAnnotations
  commentId: N:System.ComponentModel.DataAnnotations
  isExternal: false
  name: System.ComponentModel.DataAnnotations
  nameWithType: System.ComponentModel.DataAnnotations
  fullName: System.ComponentModel.DataAnnotations
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: false
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: System.ComponentModel.DataAnnotations.ValidationContext
  commentId: T:System.ComponentModel.DataAnnotations.ValidationContext
  parent: System.ComponentModel.DataAnnotations
  isExternal: false
  name: ValidationContext
  nameWithType: ValidationContext
  fullName: System.ComponentModel.DataAnnotations.ValidationContext
- uid: System.Collections.Generic.ICollection{System.ComponentModel.DataAnnotations.ValidationResult}
  commentId: T:System.Collections.Generic.ICollection{System.ComponentModel.DataAnnotations.ValidationResult}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.ICollection`1
  name: ICollection<ValidationResult>
  nameWithType: ICollection<ValidationResult>
  fullName: System.Collections.Generic.ICollection<System.ComponentModel.DataAnnotations.ValidationResult>
  nameWithType.vb: ICollection(Of ValidationResult)
  fullname.vb: System.Collections.Generic.ICollection(Of System.ComponentModel.DataAnnotations.ValidationResult)
  name.vb: ICollection(Of ValidationResult)
  spec.csharp:
  - uid: System.Collections.Generic.ICollection`1
    name: ICollection
    nameWithType: ICollection
    fullName: System.Collections.Generic.ICollection
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.ComponentModel.DataAnnotations.ValidationResult
    name: ValidationResult
    nameWithType: ValidationResult
    fullName: System.ComponentModel.DataAnnotations.ValidationResult
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.ICollection`1
    name: ICollection
    nameWithType: ICollection
    fullName: System.Collections.Generic.ICollection
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.ComponentModel.DataAnnotations.ValidationResult
    name: ValidationResult
    nameWithType: ValidationResult
    fullName: System.ComponentModel.DataAnnotations.ValidationResult
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: false
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Collections.Generic.ICollection`1
  commentId: T:System.Collections.Generic.ICollection`1
  isExternal: false
  name: ICollection<T>
  nameWithType: ICollection<T>
  fullName: System.Collections.Generic.ICollection<T>
  nameWithType.vb: ICollection(Of T)
  fullname.vb: System.Collections.Generic.ICollection(Of T)
  name.vb: ICollection(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.ICollection`1
    name: ICollection
    nameWithType: ICollection
    fullName: System.Collections.Generic.ICollection
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.ICollection`1
    name: ICollection
    nameWithType: ICollection
    fullName: System.Collections.Generic.ICollection
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: false
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
- uid: System.Collections.Generic.IEnumerable{System.ComponentModel.DataAnnotations.ValidationAttribute}
  commentId: T:System.Collections.Generic.IEnumerable{System.ComponentModel.DataAnnotations.ValidationAttribute}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IEnumerable`1
  name: IEnumerable<ValidationAttribute>
  nameWithType: IEnumerable<ValidationAttribute>
  fullName: System.Collections.Generic.IEnumerable<System.ComponentModel.DataAnnotations.ValidationAttribute>
  nameWithType.vb: IEnumerable(Of ValidationAttribute)
  fullname.vb: System.Collections.Generic.IEnumerable(Of System.ComponentModel.DataAnnotations.ValidationAttribute)
  name.vb: IEnumerable(Of ValidationAttribute)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.ComponentModel.DataAnnotations.ValidationAttribute
    name: ValidationAttribute
    nameWithType: ValidationAttribute
    fullName: System.ComponentModel.DataAnnotations.ValidationAttribute
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.ComponentModel.DataAnnotations.ValidationAttribute
    name: ValidationAttribute
    nameWithType: ValidationAttribute
    fullName: System.ComponentModel.DataAnnotations.ValidationAttribute
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.IEnumerable`1
  commentId: T:System.Collections.Generic.IEnumerable`1
  isExternal: false
  name: IEnumerable<T>
  nameWithType: IEnumerable<T>
  fullName: System.Collections.Generic.IEnumerable<T>
  nameWithType.vb: IEnumerable(Of T)
  fullname.vb: System.Collections.Generic.IEnumerable(Of T)
  name.vb: IEnumerable(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.ArgumentNullException
  commentId: T:System.ArgumentNullException
  isExternal: false
  name: ArgumentNullException
  nameWithType: ArgumentNullException
  fullName: System.ArgumentNullException
- uid: System.ComponentModel.DataAnnotations.ValidationException
  commentId: T:System.ComponentModel.DataAnnotations.ValidationException
  isExternal: false
  name: ValidationException
  nameWithType: ValidationException
  fullName: System.ComponentModel.DataAnnotations.ValidationException
