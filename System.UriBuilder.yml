items:
- uid: System.UriBuilder
  commentId: T:System.UriBuilder
  id: UriBuilder
  parent: System
  children:
  - System.UriBuilder.#ctor
  - System.UriBuilder.#ctor(System.String)
  - System.UriBuilder.#ctor(System.String,System.String)
  - System.UriBuilder.#ctor(System.String,System.String,System.Int32)
  - System.UriBuilder.#ctor(System.String,System.String,System.Int32,System.String)
  - System.UriBuilder.#ctor(System.String,System.String,System.Int32,System.String,System.String)
  - System.UriBuilder.#ctor(System.Uri)
  - System.UriBuilder.Equals(System.Object)
  - System.UriBuilder.Fragment
  - System.UriBuilder.GetHashCode
  - System.UriBuilder.Host
  - System.UriBuilder.Password
  - System.UriBuilder.Path
  - System.UriBuilder.Port
  - System.UriBuilder.Query
  - System.UriBuilder.Scheme
  - System.UriBuilder.ToString
  - System.UriBuilder.Uri
  - System.UriBuilder.UserName
  langs:
  - csharp
  - vb
  name: UriBuilder
  fullName: System.UriBuilder
  type: Class
  source:
    remote:
      path: src/System.Private.Uri/src/System/UriBuilder.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: UriBuilder
    path: src/System.Private.Uri/src/System/UriBuilder.cs
    startLine: 10
  assemblies:
  - System.Runtime.Extensions
  namespace: System
  summary: "\n<p>Provides a custom constructor for uniform resource identifiers (URIs) and modifies URIs for the <xref href=\"System.Uri\" data-throw-if-not-resolved=\"false\"></xref> class.</p>\n"
  syntax:
    content: public class UriBuilder
    content.vb: Public Class UriBuilder
  seealso:
  - type: System.Uri
    commentId: T:System.Uri
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetType
  - System.Object.MemberwiseClone
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
  nameWithType: UriBuilder
- uid: System.UriBuilder.#ctor
  commentId: M:System.UriBuilder.#ctor
  id: '#ctor'
  parent: System.UriBuilder
  langs:
  - csharp
  - vb
  name: UriBuilder()
  fullName: System.UriBuilder.UriBuilder()
  type: Constructor
  source:
    remote:
      path: src/System.Private.Uri/src/System/UriBuilder.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: .ctor
    path: src/System.Private.Uri/src/System/UriBuilder.cs
    startLine: 28
  assemblies:
  - System.Runtime.Extensions
  namespace: System
  summary: "\n<p>Initializes a new instance of the <xref href=\"System.UriBuilder\" data-throw-if-not-resolved=\"false\"></xref> class.</p>\n"
  syntax:
    content: public UriBuilder()
    content.vb: Public Sub New
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  nameWithType: UriBuilder.UriBuilder()
- uid: System.UriBuilder.#ctor(System.String)
  commentId: M:System.UriBuilder.#ctor(System.String)
  id: '#ctor(System.String)'
  parent: System.UriBuilder
  langs:
  - csharp
  - vb
  name: UriBuilder(String)
  fullName: System.UriBuilder.UriBuilder(System.String)
  type: Constructor
  source:
    remote:
      path: src/System.Private.Uri/src/System/UriBuilder.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: .ctor
    path: src/System.Private.Uri/src/System/UriBuilder.cs
    startLine: 32
  assemblies:
  - System.Runtime.Extensions
  namespace: System
  summary: "\n<p>Initializes a new instance of the <xref href=\"System.UriBuilder\" data-throw-if-not-resolved=\"false\"></xref> class with the specified URI.</p>\n"
  syntax:
    content: public UriBuilder(string uri)
    content.vb: Public Sub New(uri As String)
    parameters:
    - id: uri
      type: System.String
      description: "\n<p>A URI string. </p>\n"
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "\n<p>\n<em>uri</em> is <strong>null</strong>. </p>\n"
  - type: System.UriFormatException
    commentId: T:System.UriFormatException
    description: "\n<p>In the <see href=\"http://go.microsoft.com/fwlink/?LinkID=247912\">.NET for Windows Store apps</see> or the Portable Class Library, catch the base class exception, <xref href=\"System.FormatException\" data-throw-if-not-resolved=\"false\"></xref>, instead.</p>\n<p>\n<em>uri</em> is a zero length string or contains only spaces.</p>\n<p>-or- </p>\n<p>The parsing routine detected a scheme in an invalid form.</p>\n<p>-or- </p>\n<p>The parser detected more than two consecutive slashes in a URI that does not use the \"file\" scheme.</p>\n<p>-or- </p>\n<p>\n<em>uri</em> is not a valid URI. </p>\n"
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  nameWithType: UriBuilder.UriBuilder(String)
- uid: System.UriBuilder.#ctor(System.String,System.String)
  commentId: M:System.UriBuilder.#ctor(System.String,System.String)
  id: '#ctor(System.String,System.String)'
  parent: System.UriBuilder
  langs:
  - csharp
  - vb
  name: UriBuilder(String, String)
  fullName: System.UriBuilder.UriBuilder(System.String, System.String)
  type: Constructor
  source:
    remote:
      path: src/System.Private.Uri/src/System/UriBuilder.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: .ctor
    path: src/System.Private.Uri/src/System/UriBuilder.cs
    startLine: 85
  assemblies:
  - System.Runtime.Extensions
  namespace: System
  summary: "\n<p>Initializes a new instance of the <xref href=\"System.UriBuilder\" data-throw-if-not-resolved=\"false\"></xref> class with the specified scheme and host.</p>\n"
  syntax:
    content: public UriBuilder(string schemeName, string hostName)
    content.vb: Public Sub New(schemeName As String, hostName As String)
    parameters:
    - id: schemeName
      type: System.String
      description: "\n<p>An Internet access protocol. </p>\n"
    - id: hostName
      type: System.String
      description: "\n<p>A DNS-style domain name or IP address. </p>\n"
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  nameWithType: UriBuilder.UriBuilder(String, String)
- uid: System.UriBuilder.#ctor(System.String,System.String,System.Int32)
  commentId: M:System.UriBuilder.#ctor(System.String,System.String,System.Int32)
  id: '#ctor(System.String,System.String,System.Int32)'
  parent: System.UriBuilder
  langs:
  - csharp
  - vb
  name: UriBuilder(String, String, Int32)
  fullName: System.UriBuilder.UriBuilder(System.String, System.String, System.Int32)
  type: Constructor
  source:
    remote:
      path: src/System.Private.Uri/src/System/UriBuilder.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: .ctor
    path: src/System.Private.Uri/src/System/UriBuilder.cs
    startLine: 91
  assemblies:
  - System.Runtime.Extensions
  namespace: System
  summary: "\n<p>Initializes a new instance of the <xref href=\"System.UriBuilder\" data-throw-if-not-resolved=\"false\"></xref> class with the specified scheme, host, and port.</p>\n"
  syntax:
    content: public UriBuilder(string scheme, string host, int portNumber)
    content.vb: Public Sub New(scheme As String, host As String, portNumber As Integer)
    parameters:
    - id: scheme
      type: System.String
      description: "\n<p>An Internet access protocol. </p>\n"
    - id: host
      type: System.String
      description: "\n<p>A DNS-style domain name or IP address. </p>\n"
    - id: portNumber
      type: System.Int32
      description: "\n<p>An IP port number for the service. </p>\n"
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "\n<p>\n<em>portNumber</em> is less than -1 or greater than 65,535. </p>\n"
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  nameWithType: UriBuilder.UriBuilder(String, String, Int32)
- uid: System.UriBuilder.#ctor(System.String,System.String,System.Int32,System.String)
  commentId: M:System.UriBuilder.#ctor(System.String,System.String,System.Int32,System.String)
  id: '#ctor(System.String,System.String,System.Int32,System.String)'
  parent: System.UriBuilder
  langs:
  - csharp
  - vb
  name: UriBuilder(String, String, Int32, String)
  fullName: System.UriBuilder.UriBuilder(System.String, System.String, System.Int32, System.String)
  type: Constructor
  source:
    remote:
      path: src/System.Private.Uri/src/System/UriBuilder.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: .ctor
    path: src/System.Private.Uri/src/System/UriBuilder.cs
    startLine: 96
  assemblies:
  - System.Runtime.Extensions
  namespace: System
  summary: "\n<p>Initializes a new instance of the <xref href=\"System.UriBuilder\" data-throw-if-not-resolved=\"false\"></xref> class with the specified scheme, host, port number, and path.</p>\n"
  syntax:
    content: public UriBuilder(string scheme, string host, int port, string pathValue)
    content.vb: Public Sub New(scheme As String, host As String, port As Integer, pathValue As String)
    parameters:
    - id: scheme
      type: System.String
      description: "\n<p>An Internet access protocol. </p>\n"
    - id: host
      type: System.String
      description: "\n<p>A DNS-style domain name or IP address. </p>\n"
    - id: port
      type: System.Int32
      description: "\n<p>An IP port number for the service. </p>\n"
    - id: pathValue
      type: System.String
      description: "\n<p>The path to the Internet resource. </p>\n"
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "\n<p>\n<em>port</em> is less than -1 or greater than 65,535. </p>\n"
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  nameWithType: UriBuilder.UriBuilder(String, String, Int32, String)
- uid: System.UriBuilder.#ctor(System.String,System.String,System.Int32,System.String,System.String)
  commentId: M:System.UriBuilder.#ctor(System.String,System.String,System.Int32,System.String,System.String)
  id: '#ctor(System.String,System.String,System.Int32,System.String,System.String)'
  parent: System.UriBuilder
  langs:
  - csharp
  - vb
  name: UriBuilder(String, String, Int32, String, String)
  fullName: System.UriBuilder.UriBuilder(System.String, System.String, System.Int32, System.String, System.String)
  type: Constructor
  source:
    remote:
      path: src/System.Private.Uri/src/System/UriBuilder.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: .ctor
    path: src/System.Private.Uri/src/System/UriBuilder.cs
    startLine: 105
  assemblies:
  - System.Runtime.Extensions
  namespace: System
  summary: "\n<p>Initializes a new instance of the <xref href=\"System.UriBuilder\" data-throw-if-not-resolved=\"false\"></xref> class with the specified scheme, host, port number, path and query string or fragment identifier.</p>\n"
  syntax:
    content: public UriBuilder(string scheme, string host, int port, string path, string extraValue)
    content.vb: Public Sub New(scheme As String, host As String, port As Integer, path As String, extraValue As String)
    parameters:
    - id: scheme
      type: System.String
      description: "\n<p>An Internet access protocol. </p>\n"
    - id: host
      type: System.String
      description: "\n<p>A DNS-style domain name or IP address. </p>\n"
    - id: port
      type: System.Int32
      description: "\n<p>An IP port number for the service. </p>\n"
    - id: path
      type: System.String
      description: "\n<p>The path to the Internet resource. </p>\n"
    - id: extraValue
      type: System.String
      description: "\n<p>A query string or fragment identifier. </p>\n"
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "\n<p>\n<em>extraValue</em> is neither <strong>null</strong> nor <xref href=\"System.String.Empty\" data-throw-if-not-resolved=\"false\"></xref>, nor does a valid fragment identifier begin with a number sign (#), nor a valid query string begin with a question mark (?). </p>\n"
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "\n<p>\n<em>port</em> is less than -1 or greater than 65,535. </p>\n"
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  nameWithType: UriBuilder.UriBuilder(String, String, Int32, String, String)
- uid: System.UriBuilder.#ctor(System.Uri)
  commentId: M:System.UriBuilder.#ctor(System.Uri)
  id: '#ctor(System.Uri)'
  parent: System.UriBuilder
  langs:
  - csharp
  - vb
  name: UriBuilder(Uri)
  fullName: System.UriBuilder.UriBuilder(System.Uri)
  type: Constructor
  source:
    remote:
      path: src/System.Private.Uri/src/System/UriBuilder.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: .ctor
    path: src/System.Private.Uri/src/System/UriBuilder.cs
    startLine: 48
  assemblies:
  - System.Runtime.Extensions
  namespace: System
  summary: "\n<p>Initializes a new instance of the <xref href=\"System.UriBuilder\" data-throw-if-not-resolved=\"false\"></xref> class with the specified <xref href=\"System.Uri\" data-throw-if-not-resolved=\"false\"></xref> instance.</p>\n"
  syntax:
    content: public UriBuilder(Uri uri)
    content.vb: Public Sub New(uri As Uri)
    parameters:
    - id: uri
      type: System.Uri
      description: "\n<p>An instance of the <xref href=\"System.Uri\" data-throw-if-not-resolved=\"false\"></xref> class. </p>\n"
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "\n<p>\n<em>uri</em> is <strong>null</strong>. </p>\n"
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  nameWithType: UriBuilder.UriBuilder(Uri)
- uid: System.UriBuilder.Fragment
  commentId: P:System.UriBuilder.Fragment
  id: Fragment
  parent: System.UriBuilder
  langs:
  - csharp
  - vb
  name: Fragment
  fullName: System.UriBuilder.Fragment
  type: Property
  source:
    remote:
      path: src/System.Private.Uri/src/System/UriBuilder.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: Fragment
    path: src/System.Private.Uri/src/System/UriBuilder.cs
    startLine: 169
  assemblies:
  - System.Runtime.Extensions
  namespace: System
  summary: "\n<p>Gets or sets the fragment portion of the URI.</p>\n"
  syntax:
    content: public string Fragment { get; set; }
    content.vb: Public Property Fragment As String
    parameters: []
    return:
      type: System.String
      description: "\n<p>The fragment portion of the URI. The fragment identifier (\"#\") is added to the beginning of the fragment.</p>\n"
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
  nameWithType: UriBuilder.Fragment
- uid: System.UriBuilder.Host
  commentId: P:System.UriBuilder.Host
  id: Host
  parent: System.UriBuilder
  langs:
  - csharp
  - vb
  name: Host
  fullName: System.UriBuilder.Host
  type: Property
  source:
    remote:
      path: src/System.Private.Uri/src/System/UriBuilder.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: Host
    path: src/System.Private.Uri/src/System/UriBuilder.cs
    startLine: 190
  assemblies:
  - System.Runtime.Extensions
  namespace: System
  summary: "\n<p>Gets or sets the Domain Name System (DNS) host name or IP address of a server.</p>\n"
  syntax:
    content: public string Host { get; set; }
    content.vb: Public Property Host As String
    parameters: []
    return:
      type: System.String
      description: "\n<p>The DNS host name or IP address of the server.</p>\n"
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
  nameWithType: UriBuilder.Host
- uid: System.UriBuilder.Password
  commentId: P:System.UriBuilder.Password
  id: Password
  parent: System.UriBuilder
  langs:
  - csharp
  - vb
  name: Password
  fullName: System.UriBuilder.Password
  type: Property
  source:
    remote:
      path: src/System.Private.Uri/src/System/UriBuilder.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: Password
    path: src/System.Private.Uri/src/System/UriBuilder.cs
    startLine: 214
  assemblies:
  - System.Runtime.Extensions
  namespace: System
  summary: "\n<p>Gets or sets the password associated with the user that accesses the URI.</p>\n"
  syntax:
    content: public string Password { get; set; }
    content.vb: Public Property Password As String
    parameters: []
    return:
      type: System.String
      description: "\n<p>The password of the user that accesses the URI.</p>\n"
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
  nameWithType: UriBuilder.Password
- uid: System.UriBuilder.Path
  commentId: P:System.UriBuilder.Path
  id: Path
  parent: System.UriBuilder
  langs:
  - csharp
  - vb
  name: Path
  fullName: System.UriBuilder.Path
  type: Property
  source:
    remote:
      path: src/System.Private.Uri/src/System/UriBuilder.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: Path
    path: src/System.Private.Uri/src/System/UriBuilder.cs
    startLine: 231
  assemblies:
  - System.Runtime.Extensions
  namespace: System
  summary: "\n<p>Gets or sets the path to the resource referenced by the URI.</p>\n"
  syntax:
    content: public string Path { get; set; }
    content.vb: Public Property Path As String
    parameters: []
    return:
      type: System.String
      description: "\n<p>The path to the resource referenced by the URI.</p>\n"
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
  nameWithType: UriBuilder.Path
- uid: System.UriBuilder.Port
  commentId: P:System.UriBuilder.Port
  id: Port
  parent: System.UriBuilder
  langs:
  - csharp
  - vb
  name: Port
  fullName: System.UriBuilder.Port
  type: Property
  source:
    remote:
      path: src/System.Private.Uri/src/System/UriBuilder.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: Port
    path: src/System.Private.Uri/src/System/UriBuilder.cs
    startLine: 248
  assemblies:
  - System.Runtime.Extensions
  namespace: System
  summary: "\n<p>Gets or sets the port number of the URI.</p>\n"
  syntax:
    content: public int Port { get; set; }
    content.vb: Public Property Port As Integer
    parameters: []
    return:
      type: System.Int32
      description: "\n<p>The port number of the URI.</p>\n"
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "\n<p>The port cannot be set to a value less than -1 or greater than 65,535. </p>\n"
  seealso:
  - type: System.Uri
    commentId: T:System.Uri
  - type: System.UriBuilder.Scheme
    commentId: P:System.UriBuilder.Scheme
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
  nameWithType: UriBuilder.Port
- uid: System.UriBuilder.Query
  commentId: P:System.UriBuilder.Query
  id: Query
  parent: System.UriBuilder
  langs:
  - csharp
  - vb
  name: Query
  fullName: System.UriBuilder.Query
  type: Property
  source:
    remote:
      path: src/System.Private.Uri/src/System/UriBuilder.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: Query
    path: src/System.Private.Uri/src/System/UriBuilder.cs
    startLine: 265
  assemblies:
  - System.Runtime.Extensions
  namespace: System
  summary: "\n<p>Gets or sets any query information included in the URI.</p>\n"
  syntax:
    content: public string Query { get; set; }
    content.vb: Public Property Query As String
    parameters: []
    return:
      type: System.String
      description: "\n<p>The query information included in the URI.</p>\n"
  seealso:
  - type: System.Uri
    commentId: T:System.Uri
  - type: System.Uri.Query
    commentId: P:System.Uri.Query
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
  nameWithType: UriBuilder.Query
- uid: System.UriBuilder.Scheme
  commentId: P:System.UriBuilder.Scheme
  id: Scheme
  parent: System.UriBuilder
  langs:
  - csharp
  - vb
  name: Scheme
  fullName: System.UriBuilder.Scheme
  type: Property
  source:
    remote:
      path: src/System.Private.Uri/src/System/UriBuilder.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: Scheme
    path: src/System.Private.Uri/src/System/UriBuilder.cs
    startLine: 286
  assemblies:
  - System.Runtime.Extensions
  namespace: System
  summary: "\n<p>Gets or sets the scheme name of the URI.</p>\n"
  syntax:
    content: public string Scheme { get; set; }
    content.vb: Public Property Scheme As String
    parameters: []
    return:
      type: System.String
      description: "\n<p>The scheme of the URI.</p>\n"
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "\n<p>The scheme cannot be set to an invalid scheme name. </p>\n"
  seealso:
  - type: System.Uri
    commentId: T:System.Uri
  - type: System.Uri.Scheme
    commentId: P:System.Uri.Scheme
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
  nameWithType: UriBuilder.Scheme
- uid: System.UriBuilder.Uri
  commentId: P:System.UriBuilder.Uri
  id: Uri
  parent: System.UriBuilder
  langs:
  - csharp
  - vb
  name: Uri
  fullName: System.UriBuilder.Uri
  type: Property
  source:
    remote:
      path: src/System.Private.Uri/src/System/UriBuilder.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: Uri
    path: src/System.Private.Uri/src/System/UriBuilder.cs
    startLine: 318
  assemblies:
  - System.Runtime.Extensions
  namespace: System
  summary: "\n<p>Gets the <xref href=\"System.Uri\" data-throw-if-not-resolved=\"false\"></xref> instance constructed by the specified <xref href=\"System.UriBuilder\" data-throw-if-not-resolved=\"false\"></xref> instance.</p>\n"
  syntax:
    content: public Uri Uri { get; }
    content.vb: Public ReadOnly Property Uri As Uri
    parameters: []
    return:
      type: System.Uri
      description: "\n<p>A <xref href=\"System.Uri\" data-throw-if-not-resolved=\"false\"></xref> that contains the URI constructed by the <xref href=\"System.UriBuilder\" data-throw-if-not-resolved=\"false\"></xref>.</p>\n"
  exceptions:
  - type: System.UriFormatException
    commentId: T:System.UriFormatException
    description: "\n<p>In the <see href=\"http://go.microsoft.com/fwlink/?LinkID=247912\">.NET for Windows Store apps</see> or the Portable Class Library, catch the base class exception, <xref href=\"System.FormatException\" data-throw-if-not-resolved=\"false\"></xref>, instead.</p>\n<p>The URI constructed by the <xref href=\"System.UriBuilder\" data-throw-if-not-resolved=\"false\"></xref> properties is invalid. </p>\n"
  seealso:
  - type: System.Uri
    commentId: T:System.Uri
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
  nameWithType: UriBuilder.Uri
- uid: System.UriBuilder.UserName
  commentId: P:System.UriBuilder.UserName
  id: UserName
  parent: System.UriBuilder
  langs:
  - csharp
  - vb
  name: UserName
  fullName: System.UriBuilder.UserName
  type: Property
  source:
    remote:
      path: src/System.Private.Uri/src/System/UriBuilder.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: UserName
    path: src/System.Private.Uri/src/System/UriBuilder.cs
    startLine: 332
  assemblies:
  - System.Runtime.Extensions
  namespace: System
  summary: "\n<p>The user name associated with the user that accesses the URI.</p>\n"
  syntax:
    content: public string UserName { get; set; }
    content.vb: Public Property UserName As String
    parameters: []
    return:
      type: System.String
      description: "\n<p>The user name of the user that accesses the URI.</p>\n"
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
  nameWithType: UriBuilder.UserName
- uid: System.UriBuilder.Equals(System.Object)
  commentId: M:System.UriBuilder.Equals(System.Object)
  id: Equals(System.Object)
  parent: System.UriBuilder
  langs:
  - csharp
  - vb
  name: Equals(Object)
  fullName: System.UriBuilder.Equals(System.Object)
  type: Method
  source:
    remote:
      path: src/System.Private.Uri/src/System/UriBuilder.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: Equals
    path: src/System.Private.Uri/src/System/UriBuilder.cs
    startLine: 368
  assemblies:
  - System.Runtime.Extensions
  namespace: System
  summary: "\n<p>Compares an existing <xref href=\"System.Uri\" data-throw-if-not-resolved=\"false\"></xref> instance with the contents of the <xref href=\"System.UriBuilder\" data-throw-if-not-resolved=\"false\"></xref> for equality.</p>\n"
  syntax:
    content: public override bool Equals(object rparam)
    content.vb: Public Overrides Function Equals(rparam As Object) As Boolean
    parameters:
    - id: rparam
      type: System.Object
      description: "\n<p>The object to compare with the current instance. </p>\n"
    return:
      type: System.Boolean
      description: "\n<p>\n<strong>true</strong> if <em>rparam</em> represents the same <xref href=\"System.Uri\" data-throw-if-not-resolved=\"false\"></xref> as the <xref href=\"System.Uri\" data-throw-if-not-resolved=\"false\"></xref> constructed by this <xref href=\"System.UriBuilder\" data-throw-if-not-resolved=\"false\"></xref> instance; otherwise, <strong>false</strong>.</p>\n"
  overridden: System.Object.Equals(System.Object)
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
  nameWithType: UriBuilder.Equals(Object)
- uid: System.UriBuilder.GetHashCode
  commentId: M:System.UriBuilder.GetHashCode
  id: GetHashCode
  parent: System.UriBuilder
  langs:
  - csharp
  - vb
  name: GetHashCode()
  fullName: System.UriBuilder.GetHashCode()
  type: Method
  source:
    remote:
      path: src/System.Private.Uri/src/System/UriBuilder.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: GetHashCode
    path: src/System.Private.Uri/src/System/UriBuilder.cs
    startLine: 377
  assemblies:
  - System.Runtime.Extensions
  namespace: System
  summary: "\n<p>Returns the hash code for the URI.</p>\n"
  syntax:
    content: public override int GetHashCode()
    content.vb: Public Overrides Function GetHashCode As Integer
    return:
      type: System.Int32
      description: "\n<p>The hash code generated for the URI.</p>\n"
  overridden: System.Object.GetHashCode
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
  nameWithType: UriBuilder.GetHashCode()
- uid: System.UriBuilder.ToString
  commentId: M:System.UriBuilder.ToString
  id: ToString
  parent: System.UriBuilder
  langs:
  - csharp
  - vb
  name: ToString()
  fullName: System.UriBuilder.ToString()
  type: Method
  source:
    remote:
      path: src/System.Private.Uri/src/System/UriBuilder.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: ToString
    path: src/System.Private.Uri/src/System/UriBuilder.cs
    startLine: 410
  assemblies:
  - System.Runtime.Extensions
  namespace: System
  summary: "\n<p>Returns the display string for the specified <xref href=\"System.UriBuilder\" data-throw-if-not-resolved=\"false\"></xref> instance.</p>\n"
  syntax:
    content: public override string ToString()
    content.vb: Public Overrides Function ToString As String
    return:
      type: System.String
      description: "\n<p>The string that contains the unescaped display string of the <xref href=\"System.UriBuilder\" data-throw-if-not-resolved=\"false\"></xref>.</p>\n<p></p>\n"
  overridden: System.Object.ToString
  exceptions:
  - type: System.UriFormatException
    commentId: T:System.UriFormatException
    description: "\n<p>In the <see href=\"http://go.microsoft.com/fwlink/?LinkID=247912\">.NET for Windows Store apps</see> or the Portable Class Library, catch the base class exception, <xref href=\"System.FormatException\" data-throw-if-not-resolved=\"false\"></xref>, instead.</p>\n<p>The <xref href=\"System.UriBuilder\" data-throw-if-not-resolved=\"false\"></xref> instance has a bad password. </p>\n"
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
  nameWithType: UriBuilder.ToString()
references:
- uid: System
  isExternal: false
  name: System
  fullName: System
  nameWithType: System
  commentId: N:System
- uid: System.Object
  parent: System
  isExternal: false
  name: Object
  fullName: System.Object
  nameWithType: Object
  commentId: T:System.Object
- uid: System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
  nameWithType: Object.Equals(Object, Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
  nameWithType: Object.ReferenceEquals(Object, Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
- uid: System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  nameWithType: Object.GetType()
  commentId: M:System.Object.GetType
- uid: System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  nameWithType: Object.MemberwiseClone()
  commentId: M:System.Object.MemberwiseClone
- uid: System.String
  parent: System
  isExternal: false
  name: String
  fullName: System.String
  nameWithType: String
  commentId: T:System.String
- uid: System.Int32
  parent: System
  isExternal: false
  name: Int32
  fullName: System.Int32
  nameWithType: Int32
  commentId: T:System.Int32
- uid: System.Uri
  parent: System
  isExternal: false
  name: Uri
  fullName: System.Uri
  nameWithType: Uri
  commentId: T:System.Uri
- uid: System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
  nameWithType: Object.Equals(Object)
  commentId: M:System.Object.Equals(System.Object)
- uid: System.Boolean
  parent: System
  isExternal: false
  name: Boolean
  fullName: System.Boolean
  nameWithType: Boolean
  commentId: T:System.Boolean
- uid: System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  nameWithType: Object.GetHashCode()
  commentId: M:System.Object.GetHashCode
- uid: System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  nameWithType: Object.ToString()
  commentId: M:System.Object.ToString
- uid: System.ArgumentNullException
  isExternal: false
  name: ArgumentNullException
  fullName: System.ArgumentNullException
  nameWithType: ArgumentNullException
  commentId: T:System.ArgumentNullException
- uid: System.UriFormatException
  isExternal: false
  name: UriFormatException
  fullName: System.UriFormatException
  nameWithType: UriFormatException
  commentId: T:System.UriFormatException
- uid: System.ArgumentOutOfRangeException
  isExternal: false
  name: ArgumentOutOfRangeException
  fullName: System.ArgumentOutOfRangeException
  nameWithType: ArgumentOutOfRangeException
  commentId: T:System.ArgumentOutOfRangeException
- uid: System.ArgumentException
  parent: System
  isExternal: false
  name: ArgumentException
  fullName: System.ArgumentException
  nameWithType: ArgumentException
  commentId: T:System.ArgumentException
