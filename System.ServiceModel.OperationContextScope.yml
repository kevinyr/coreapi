items:
- uid: System.ServiceModel.OperationContextScope
  commentId: T:System.ServiceModel.OperationContextScope
  id: OperationContextScope
  parent: System.ServiceModel
  children:
  - System.ServiceModel.OperationContextScope.#ctor(System.ServiceModel.IContextChannel)
  - System.ServiceModel.OperationContextScope.#ctor(System.ServiceModel.OperationContext)
  - System.ServiceModel.OperationContextScope.Dispose
  langs:
  - csharp
  - vb
  name: OperationContextScope
  fullName: System.ServiceModel.OperationContextScope
  type: Class
  source:
    remote:
      path: src/System.Private.ServiceModel/src/System/ServiceModel/OperationContextScope.cs
      branch: master
      repo: https://github.com/dotnet/wcf.git
    id: OperationContextScope
    path: src/System.Private.ServiceModel/src/System/ServiceModel/OperationContextScope.cs
    startLine: 11
  assemblies:
  - System.ServiceModel.Primitives
  namespace: System.ServiceModel
  summary: "\n<p>Creates a block within which an <xref href=\"System.ServiceModel.OperationContext\" data-throw-if-not-resolved=\"false\"></xref> object is in scope.</p>\n"
  syntax:
    content: 'public sealed class OperationContextScope : IDisposable'
    content.vb: >-
      Public NotInheritable Class OperationContextScope
          Implements IDisposable
  inheritance:
  - System.Object
  implements:
  - System.IDisposable
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  modifiers.csharp:
  - public
  - sealed
  - class
  modifiers.vb:
  - Public
  - NotInheritable
  - Class
  nameWithType: OperationContextScope
- uid: System.ServiceModel.OperationContextScope.#ctor(System.ServiceModel.IContextChannel)
  commentId: M:System.ServiceModel.OperationContextScope.#ctor(System.ServiceModel.IContextChannel)
  id: '#ctor(System.ServiceModel.IContextChannel)'
  parent: System.ServiceModel.OperationContextScope
  langs:
  - csharp
  - vb
  name: OperationContextScope(IContextChannel)
  fullName: System.ServiceModel.OperationContextScope.OperationContextScope(System.ServiceModel.IContextChannel)
  type: Constructor
  source:
    remote:
      path: src/System.Private.ServiceModel/src/System/ServiceModel/OperationContextScope.cs
      branch: master
      repo: https://github.com/dotnet/wcf.git
    id: .ctor
    path: src/System.Private.ServiceModel/src/System/ServiceModel/OperationContextScope.cs
    startLine: 21
  assemblies:
  - System.ServiceModel.Primitives
  namespace: System.ServiceModel
  summary: "\n<p>Initializes a new instance of the <xref href=\"System.ServiceModel.OperationContextScope\" data-throw-if-not-resolved=\"false\"></xref> class that uses the specified <xref href=\"System.ServiceModel.IContextChannel\" data-throw-if-not-resolved=\"false\"></xref> to create a new <xref href=\"System.ServiceModel.OperationContext\" data-throw-if-not-resolved=\"false\"></xref> for the scope.</p>\n"
  syntax:
    content: public OperationContextScope(IContextChannel channel)
    content.vb: Public Sub New(channel As IContextChannel)
    parameters:
    - id: channel
      type: System.ServiceModel.IContextChannel
      description: "\n<p>The channel to use when creating the scope for a new <xref href=\"System.ServiceModel.OperationContext\" data-throw-if-not-resolved=\"false\"></xref>.</p>\n"
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  nameWithType: OperationContextScope.OperationContextScope(IContextChannel)
- uid: System.ServiceModel.OperationContextScope.#ctor(System.ServiceModel.OperationContext)
  commentId: M:System.ServiceModel.OperationContextScope.#ctor(System.ServiceModel.OperationContext)
  id: '#ctor(System.ServiceModel.OperationContext)'
  parent: System.ServiceModel.OperationContextScope
  langs:
  - csharp
  - vb
  name: OperationContextScope(OperationContext)
  fullName: System.ServiceModel.OperationContextScope.OperationContextScope(System.ServiceModel.OperationContext)
  type: Constructor
  source:
    remote:
      path: src/System.Private.ServiceModel/src/System/ServiceModel/OperationContextScope.cs
      branch: master
      repo: https://github.com/dotnet/wcf.git
    id: .ctor
    path: src/System.Private.ServiceModel/src/System/ServiceModel/OperationContextScope.cs
    startLine: 26
  assemblies:
  - System.ServiceModel.Primitives
  namespace: System.ServiceModel
  summary: "\n<p>Initializes a new instance of the <xref href=\"System.ServiceModel.OperationContextScope\" data-throw-if-not-resolved=\"false\"></xref> class to create a scope for the specified <xref href=\"System.ServiceModel.OperationContext\" data-throw-if-not-resolved=\"false\"></xref> object.</p>\n"
  syntax:
    content: public OperationContextScope(OperationContext context)
    content.vb: Public Sub New(context As OperationContext)
    parameters:
    - id: context
      type: System.ServiceModel.OperationContext
      description: "\n<p>The active <xref href=\"System.ServiceModel.OperationContext\" data-throw-if-not-resolved=\"false\"></xref> in the created scope.</p>\n"
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  nameWithType: OperationContextScope.OperationContextScope(OperationContext)
- uid: System.ServiceModel.OperationContextScope.Dispose
  commentId: M:System.ServiceModel.OperationContextScope.Dispose
  id: Dispose
  parent: System.ServiceModel.OperationContextScope
  langs:
  - csharp
  - vb
  name: Dispose()
  fullName: System.ServiceModel.OperationContextScope.Dispose()
  type: Method
  source:
    remote:
      path: src/System.Private.ServiceModel/src/System/ServiceModel/OperationContextScope.cs
      branch: master
      repo: https://github.com/dotnet/wcf.git
    id: Dispose
    path: src/System.Private.ServiceModel/src/System/ServiceModel/OperationContextScope.cs
    startLine: 31
  assemblies:
  - System.ServiceModel.Primitives
  namespace: System.ServiceModel
  summary: "\n<p>Restores the original <xref href=\"System.ServiceModel.OperationContext\" data-throw-if-not-resolved=\"false\"></xref> to the active context and recycles the <xref href=\"System.ServiceModel.OperationContextScope\" data-throw-if-not-resolved=\"false\"></xref> object.</p>\n"
  syntax:
    content: public void Dispose()
    content.vb: Public Sub Dispose
  implements:
  - System.IDisposable.Dispose
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  nameWithType: OperationContextScope.Dispose()
references:
- uid: System.ServiceModel
  isExternal: false
  name: System.ServiceModel
  fullName: System.ServiceModel
  nameWithType: System.ServiceModel
  commentId: N:System.ServiceModel
- uid: System.Object
  parent: System
  isExternal: false
  name: Object
  fullName: System.Object
  nameWithType: Object
  commentId: T:System.Object
- uid: System.IDisposable
  parent: System
  isExternal: false
  name: IDisposable
  fullName: System.IDisposable
  nameWithType: IDisposable
  commentId: T:System.IDisposable
- uid: System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  nameWithType: Object.ToString()
  commentId: M:System.Object.ToString
- uid: System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
  nameWithType: Object.Equals(Object)
  commentId: M:System.Object.Equals(System.Object)
- uid: System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
  nameWithType: Object.Equals(Object, Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
  nameWithType: Object.ReferenceEquals(Object, Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
- uid: System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  nameWithType: Object.GetHashCode()
  commentId: M:System.Object.GetHashCode
- uid: System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  nameWithType: Object.GetType()
  commentId: M:System.Object.GetType
- uid: System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  nameWithType: Object.MemberwiseClone()
  commentId: M:System.Object.MemberwiseClone
- uid: System
  isExternal: false
  name: System
  fullName: System
  nameWithType: System
  commentId: N:System
- uid: System.ServiceModel.IContextChannel
  parent: System.ServiceModel
  isExternal: false
  name: IContextChannel
  fullName: System.ServiceModel.IContextChannel
  nameWithType: IContextChannel
  commentId: T:System.ServiceModel.IContextChannel
- uid: System.ServiceModel.OperationContext
  parent: System.ServiceModel
  isExternal: false
  name: OperationContext
  fullName: System.ServiceModel.OperationContext
  nameWithType: OperationContext
  commentId: T:System.ServiceModel.OperationContext
- uid: System.IDisposable.Dispose
  parent: System.IDisposable
  isExternal: false
  name: Dispose()
  fullName: System.IDisposable.Dispose()
  spec.csharp:
  - uid: System.IDisposable.Dispose
    name: Dispose
    fullName: System.IDisposable.Dispose
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.IDisposable.Dispose
    name: Dispose
    fullName: System.IDisposable.Dispose
  - name: (
    fullName: (
  - name: )
    fullName: )
  nameWithType: IDisposable.Dispose()
  commentId: M:System.IDisposable.Dispose
