### YamlMime:ManagedReference
items:
- uid: System.Reflection.MemberFilter
  commentId: T:System.Reflection.MemberFilter
  id: MemberFilter
  parent: System.Reflection
  children: []
  langs:
  - csharp
  - vb
  name: MemberFilter
  nameWithType: MemberFilter
  fullName: System.Reflection.MemberFilter
  type: Delegate
  source:
    remote:
      path: src/mscorlib/src/System/Reflection/MemberFilter.cs
      branch: master
      repo: https://github.com/dotnet/coreclr.git
    id: MemberFilter
    path: src/mscorlib/src/System/Reflection/MemberFilter.cs
    startLine: 15
  assemblies:
  - System.Reflection
  namespace: System.Reflection
  summary: "\n<p>Represents a delegate that is used to filter a list of members represented in an array of <xref href=\"System.Reflection.MemberInfo\" data-throw-if-not-resolved=\"false\"></xref> objects.</p>\n"
  syntax:
    content: >-
      [Serializable]

      [ComVisible(true)]

      public delegate bool MemberFilter(MemberInfo m, object filterCriteria);
    content.vb: >-
      <Serializable>

      <ComVisible(True)>

      Public Delegate Function MemberFilter(m As MemberInfo, filterCriteria As Object) As Boolean
    parameters:
    - id: m
      type: System.Reflection.MemberInfo
      description: "\n<p>The <xref href=\"System.Reflection.MemberInfo\" data-throw-if-not-resolved=\"false\"></xref> object to which the filter is applied. </p>\n"
    - id: filterCriteria
      type: System.Object
      description: "\n<p>An arbitrary object used to filter the list. </p>\n"
    return:
      type: System.Boolean
      description: "\n<p>\n<strong>true</strong> to include the member in the filtered list; otherwise <strong>false</strong>.</p>\n"
  seealso:
  - linkId: System.Type
    commentId: T:System.Type
  extensionMethods:
  - System.Delegate.System.Reflection.RuntimeReflectionExtensions.GetMethodInfo
  modifiers.csharp:
  - public
  - delegate
  modifiers.vb:
  - Public
  - Delegate
references:
- uid: System.Reflection
  commentId: N:System.Reflection
  isExternal: false
  name: System.Reflection
  nameWithType: System.Reflection
  fullName: System.Reflection
- uid: System.Delegate.System.Reflection.RuntimeReflectionExtensions.GetMethodInfo
  commentId: M:System.Reflection.RuntimeReflectionExtensions.GetMethodInfo(System.Delegate)
  parent: System.Reflection.RuntimeReflectionExtensions
  definition: System.Reflection.RuntimeReflectionExtensions.GetMethodInfo(System.Delegate)
  name: GetMethodInfo()
  nameWithType: RuntimeReflectionExtensions.GetMethodInfo()
  fullName: System.Reflection.RuntimeReflectionExtensions.GetMethodInfo()
  spec.csharp:
  - uid: System.Reflection.RuntimeReflectionExtensions.GetMethodInfo
    name: GetMethodInfo
    nameWithType: RuntimeReflectionExtensions.GetMethodInfo
    fullName: System.Reflection.RuntimeReflectionExtensions.GetMethodInfo
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Reflection.RuntimeReflectionExtensions.GetMethodInfo
    name: GetMethodInfo
    nameWithType: RuntimeReflectionExtensions.GetMethodInfo
    fullName: System.Reflection.RuntimeReflectionExtensions.GetMethodInfo
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Reflection.MemberInfo
  commentId: T:System.Reflection.MemberInfo
  parent: System.Reflection
  isExternal: false
  name: MemberInfo
  nameWithType: MemberInfo
  fullName: System.Reflection.MemberInfo
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: false
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: false
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Reflection.RuntimeReflectionExtensions.GetMethodInfo(System.Delegate)
  commentId: M:System.Reflection.RuntimeReflectionExtensions.GetMethodInfo(System.Delegate)
  isExternal: true
  name: GetMethodInfo(Delegate)
  nameWithType: RuntimeReflectionExtensions.GetMethodInfo(Delegate)
  fullName: System.Reflection.RuntimeReflectionExtensions.GetMethodInfo(System.Delegate)
  spec.csharp:
  - uid: System.Reflection.RuntimeReflectionExtensions.GetMethodInfo(System.Delegate)
    name: GetMethodInfo
    nameWithType: RuntimeReflectionExtensions.GetMethodInfo
    fullName: System.Reflection.RuntimeReflectionExtensions.GetMethodInfo
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Delegate
    name: Delegate
    nameWithType: Delegate
    fullName: System.Delegate
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Reflection.RuntimeReflectionExtensions.GetMethodInfo(System.Delegate)
    name: GetMethodInfo
    nameWithType: RuntimeReflectionExtensions.GetMethodInfo
    fullName: System.Reflection.RuntimeReflectionExtensions.GetMethodInfo
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Delegate
    name: Delegate
    nameWithType: Delegate
    fullName: System.Delegate
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Reflection.RuntimeReflectionExtensions
  commentId: T:System.Reflection.RuntimeReflectionExtensions
  parent: System.Reflection
  isExternal: false
  name: RuntimeReflectionExtensions
  nameWithType: RuntimeReflectionExtensions
  fullName: System.Reflection.RuntimeReflectionExtensions
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
