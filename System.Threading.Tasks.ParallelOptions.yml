### YamlMime:ManagedReference
items:
- uid: System.Threading.Tasks.ParallelOptions
  commentId: T:System.Threading.Tasks.ParallelOptions
  id: ParallelOptions
  parent: System.Threading.Tasks
  children:
  - System.Threading.Tasks.ParallelOptions.#ctor
  - System.Threading.Tasks.ParallelOptions.CancellationToken
  - System.Threading.Tasks.ParallelOptions.MaxDegreeOfParallelism
  - System.Threading.Tasks.ParallelOptions.TaskScheduler
  langs:
  - csharp
  - vb
  name: ParallelOptions
  nameWithType: ParallelOptions
  fullName: System.Threading.Tasks.ParallelOptions
  type: Class
  source:
    remote:
      path: src/mscorlib/src/System/Threading/Tasks/Parallel.cs
      branch: master
      repo: https://github.com/dotnet/coreclr.git
    id: ParallelOptions
    path: src/mscorlib/src/System/Threading/Tasks/Parallel.cs
    startLine: 36
  assemblies:
  - System.Threading.Tasks.Parallel
  namespace: System.Threading.Tasks
  summary: "\n<p>Stores options that configure the operation of methods on the <xref href=\"System.Threading.Tasks.Parallel\" data-throw-if-not-resolved=\"false\"></xref> class.</p>\n"
  syntax:
    content: public class ParallelOptions
    content.vb: Public Class ParallelOptions
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: System.Threading.Tasks.ParallelOptions.#ctor
  commentId: M:System.Threading.Tasks.ParallelOptions.#ctor
  id: '#ctor'
  parent: System.Threading.Tasks.ParallelOptions
  langs:
  - csharp
  - vb
  name: ParallelOptions()
  nameWithType: ParallelOptions.ParallelOptions()
  fullName: System.Threading.Tasks.ParallelOptions.ParallelOptions()
  type: Constructor
  source:
    remote:
      path: src/mscorlib/src/System/Threading/Tasks/Parallel.cs
      branch: master
      repo: https://github.com/dotnet/coreclr.git
    id: .ctor
    path: src/mscorlib/src/System/Threading/Tasks/Parallel.cs
    startLine: 52
  assemblies:
  - System.Threading.Tasks.Parallel
  namespace: System.Threading.Tasks
  summary: "\n<p>Initializes a new instance of the <xref href=\"System.Threading.Tasks.ParallelOptions\" data-throw-if-not-resolved=\"false\"></xref> class.</p>\n"
  syntax:
    content: public ParallelOptions()
    content.vb: Public Sub New
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: System.Threading.Tasks.ParallelOptions.CancellationToken
  commentId: P:System.Threading.Tasks.ParallelOptions.CancellationToken
  id: CancellationToken
  parent: System.Threading.Tasks.ParallelOptions
  langs:
  - csharp
  - vb
  name: CancellationToken
  nameWithType: ParallelOptions.CancellationToken
  fullName: System.Threading.Tasks.ParallelOptions.CancellationToken
  type: Property
  source:
    remote:
      path: src/mscorlib/src/System/Threading/Tasks/Parallel.cs
      branch: master
      repo: https://github.com/dotnet/coreclr.git
    id: CancellationToken
    path: src/mscorlib/src/System/Threading/Tasks/Parallel.cs
    startLine: 116
  assemblies:
  - System.Threading.Tasks.Parallel
  namespace: System.Threading.Tasks
  summary: "\n<p>Gets or sets the <xref href=\"System.Threading.CancellationToken\" data-throw-if-not-resolved=\"false\"></xref> associated with this <xref href=\"System.Threading.Tasks.ParallelOptions\" data-throw-if-not-resolved=\"false\"></xref> instance.</p>\n"
  syntax:
    content: public CancellationToken CancellationToken { get; set; }
    content.vb: Public Property CancellationToken As CancellationToken
    parameters: []
    return:
      type: System.Threading.CancellationToken
      description: "\n<p>The token that is associated with this instance.</p>\n"
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: System.Threading.Tasks.ParallelOptions.MaxDegreeOfParallelism
  commentId: P:System.Threading.Tasks.ParallelOptions.MaxDegreeOfParallelism
  id: MaxDegreeOfParallelism
  parent: System.Threading.Tasks.ParallelOptions
  langs:
  - csharp
  - vb
  name: MaxDegreeOfParallelism
  nameWithType: ParallelOptions.MaxDegreeOfParallelism
  fullName: System.Threading.Tasks.ParallelOptions.MaxDegreeOfParallelism
  type: Property
  source:
    remote:
      path: src/mscorlib/src/System/Threading/Tasks/Parallel.cs
      branch: master
      repo: https://github.com/dotnet/coreclr.git
    id: MaxDegreeOfParallelism
    path: src/mscorlib/src/System/Threading/Tasks/Parallel.cs
    startLine: 94
  assemblies:
  - System.Threading.Tasks.Parallel
  namespace: System.Threading.Tasks
  summary: "\n<p>Gets or sets the maximum number of concurrent tasks enabled by this <xref href=\"System.Threading.Tasks.ParallelOptions\" data-throw-if-not-resolved=\"false\"></xref> instance.</p>\n"
  syntax:
    content: public int MaxDegreeOfParallelism { get; set; }
    content.vb: Public Property MaxDegreeOfParallelism As Integer
    parameters: []
    return:
      type: System.Int32
      description: "\n<p>An integer that represents the maximum degree of parallelism.</p>\n"
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "\n<p>The property is being set to zero or to a value that is less than -1.</p>\n"
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: System.Threading.Tasks.ParallelOptions.TaskScheduler
  commentId: P:System.Threading.Tasks.ParallelOptions.TaskScheduler
  id: TaskScheduler
  parent: System.Threading.Tasks.ParallelOptions
  langs:
  - csharp
  - vb
  name: TaskScheduler
  nameWithType: ParallelOptions.TaskScheduler
  fullName: System.Threading.Tasks.ParallelOptions.TaskScheduler
  type: Property
  source:
    remote:
      path: src/mscorlib/src/System/Threading/Tasks/Parallel.cs
      branch: master
      repo: https://github.com/dotnet/coreclr.git
    id: TaskScheduler
    path: src/mscorlib/src/System/Threading/Tasks/Parallel.cs
    startLine: 64
  assemblies:
  - System.Threading.Tasks.Parallel
  namespace: System.Threading.Tasks
  summary: "\n<p>Gets or sets the <xref href=\"System.Threading.Tasks.TaskScheduler\" data-throw-if-not-resolved=\"false\"></xref> associated with this <xref href=\"System.Threading.Tasks.ParallelOptions\" data-throw-if-not-resolved=\"false\"></xref> instance. Setting this property to null indicates that the current scheduler should be used.</p>\n"
  syntax:
    content: public TaskScheduler TaskScheduler { get; set; }
    content.vb: Public Property TaskScheduler As TaskScheduler
    parameters: []
    return:
      type: System.Threading.Tasks.TaskScheduler
      description: "\n<p>The task scheduler that is associated with this instance.</p>\n"
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
references:
- uid: System.Threading.Tasks
  commentId: N:System.Threading.Tasks
  isExternal: false
  name: System.Threading.Tasks
  nameWithType: System.Threading.Tasks
  fullName: System.Threading.Tasks
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: false
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: System.Threading.CancellationToken
  commentId: T:System.Threading.CancellationToken
  parent: System.Threading
  isExternal: false
  name: CancellationToken
  nameWithType: CancellationToken
  fullName: System.Threading.CancellationToken
- uid: System.Threading
  commentId: N:System.Threading
  isExternal: false
  name: System.Threading
  nameWithType: System.Threading
  fullName: System.Threading
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: false
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Threading.Tasks.TaskScheduler
  commentId: T:System.Threading.Tasks.TaskScheduler
  parent: System.Threading.Tasks
  isExternal: false
  name: TaskScheduler
  nameWithType: TaskScheduler
  fullName: System.Threading.Tasks.TaskScheduler
- uid: System.ArgumentOutOfRangeException
  commentId: T:System.ArgumentOutOfRangeException
  isExternal: false
  name: ArgumentOutOfRangeException
  nameWithType: ArgumentOutOfRangeException
  fullName: System.ArgumentOutOfRangeException
