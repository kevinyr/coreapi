### YamlMime:ManagedReference
items:
- uid: System.Security.AccessControl.SystemAcl
  commentId: T:System.Security.AccessControl.SystemAcl
  id: SystemAcl
  parent: System.Security.AccessControl
  children:
  - System.Security.AccessControl.SystemAcl.#ctor(System.Boolean,System.Boolean,System.Byte,System.Int32)
  - System.Security.AccessControl.SystemAcl.#ctor(System.Boolean,System.Boolean,System.Int32)
  - System.Security.AccessControl.SystemAcl.#ctor(System.Boolean,System.Boolean,System.Security.AccessControl.RawAcl)
  - System.Security.AccessControl.SystemAcl.AddAudit(System.Security.AccessControl.AuditFlags,System.Security.Principal.SecurityIdentifier,System.Int32,System.Security.AccessControl.InheritanceFlags,System.Security.AccessControl.PropagationFlags)
  - System.Security.AccessControl.SystemAcl.AddAudit(System.Security.AccessControl.AuditFlags,System.Security.Principal.SecurityIdentifier,System.Int32,System.Security.AccessControl.InheritanceFlags,System.Security.AccessControl.PropagationFlags,System.Security.AccessControl.ObjectAceFlags,System.Guid,System.Guid)
  - System.Security.AccessControl.SystemAcl.AddAudit(System.Security.Principal.SecurityIdentifier,System.Security.AccessControl.ObjectAuditRule)
  - System.Security.AccessControl.SystemAcl.RemoveAudit(System.Security.AccessControl.AuditFlags,System.Security.Principal.SecurityIdentifier,System.Int32,System.Security.AccessControl.InheritanceFlags,System.Security.AccessControl.PropagationFlags)
  - System.Security.AccessControl.SystemAcl.RemoveAudit(System.Security.AccessControl.AuditFlags,System.Security.Principal.SecurityIdentifier,System.Int32,System.Security.AccessControl.InheritanceFlags,System.Security.AccessControl.PropagationFlags,System.Security.AccessControl.ObjectAceFlags,System.Guid,System.Guid)
  - System.Security.AccessControl.SystemAcl.RemoveAudit(System.Security.Principal.SecurityIdentifier,System.Security.AccessControl.ObjectAuditRule)
  - System.Security.AccessControl.SystemAcl.RemoveAuditSpecific(System.Security.AccessControl.AuditFlags,System.Security.Principal.SecurityIdentifier,System.Int32,System.Security.AccessControl.InheritanceFlags,System.Security.AccessControl.PropagationFlags)
  - System.Security.AccessControl.SystemAcl.RemoveAuditSpecific(System.Security.AccessControl.AuditFlags,System.Security.Principal.SecurityIdentifier,System.Int32,System.Security.AccessControl.InheritanceFlags,System.Security.AccessControl.PropagationFlags,System.Security.AccessControl.ObjectAceFlags,System.Guid,System.Guid)
  - System.Security.AccessControl.SystemAcl.RemoveAuditSpecific(System.Security.Principal.SecurityIdentifier,System.Security.AccessControl.ObjectAuditRule)
  - System.Security.AccessControl.SystemAcl.SetAudit(System.Security.AccessControl.AuditFlags,System.Security.Principal.SecurityIdentifier,System.Int32,System.Security.AccessControl.InheritanceFlags,System.Security.AccessControl.PropagationFlags)
  - System.Security.AccessControl.SystemAcl.SetAudit(System.Security.AccessControl.AuditFlags,System.Security.Principal.SecurityIdentifier,System.Int32,System.Security.AccessControl.InheritanceFlags,System.Security.AccessControl.PropagationFlags,System.Security.AccessControl.ObjectAceFlags,System.Guid,System.Guid)
  - System.Security.AccessControl.SystemAcl.SetAudit(System.Security.Principal.SecurityIdentifier,System.Security.AccessControl.ObjectAuditRule)
  langs:
  - csharp
  - vb
  name: SystemAcl
  nameWithType: SystemAcl
  fullName: System.Security.AccessControl.SystemAcl
  type: Class
  source:
    remote:
      path: src/System.Security.AccessControl/ref/System.Security.AccessControl.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: SystemAcl
    path: src/System.Security.AccessControl/ref/System.Security.AccessControl.cs
    startLine: 513
  assemblies:
  - System.Security.AccessControl
  namespace: System.Security.AccessControl
  summary: "\n<p>Represents a System Access Control List (SACL).</p>\n"
  syntax:
    content: 'public sealed class SystemAcl : CommonAcl, ICollection, IEnumerable'
    content.vb: >-
      Public NotInheritable Class SystemAcl
          Inherits CommonAcl
          Implements ICollection, IEnumerable
  inheritance:
  - System.Object
  - System.Security.AccessControl.GenericAcl
  - System.Security.AccessControl.CommonAcl
  implements:
  - System.Collections.ICollection
  - System.Collections.IEnumerable
  inheritedMembers:
  - System.Security.AccessControl.CommonAcl.BinaryLength
  - System.Security.AccessControl.CommonAcl.Count
  - System.Security.AccessControl.CommonAcl.IsCanonical
  - System.Security.AccessControl.CommonAcl.IsContainer
  - System.Security.AccessControl.CommonAcl.IsDS
  - System.Security.AccessControl.CommonAcl.Item(System.Int32)
  - System.Security.AccessControl.CommonAcl.Revision
  - System.Security.AccessControl.CommonAcl.GetBinaryForm(System.Byte[],System.Int32)
  - System.Security.AccessControl.CommonAcl.Purge(System.Security.Principal.SecurityIdentifier)
  - System.Security.AccessControl.CommonAcl.RemoveInheritedAces
  - System.Security.AccessControl.GenericAcl.AclRevision
  - System.Security.AccessControl.GenericAcl.AclRevisionDS
  - System.Security.AccessControl.GenericAcl.MaxBinaryLength
  - System.Security.AccessControl.GenericAcl.IsSynchronized
  - System.Security.AccessControl.GenericAcl.SyncRoot
  - System.Security.AccessControl.GenericAcl.CopyTo(System.Security.AccessControl.GenericAce[],System.Int32)
  - System.Security.AccessControl.GenericAcl.GetEnumerator
  - System.Security.AccessControl.GenericAcl.System#Collections#ICollection#CopyTo(System.Array,System.Int32)
  - System.Security.AccessControl.GenericAcl.System#Collections#IEnumerable#GetEnumerator
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  extensionMethods:
  - System.Collections.IEnumerable.System.Linq.ParallelEnumerable.AsParallel
  - System.Collections.IEnumerable.System.Linq.Enumerable.Cast``1
  - System.Collections.IEnumerable.System.Linq.Enumerable.OfType``1
  - System.Collections.IEnumerable.System.Linq.Queryable.AsQueryable
  modifiers.csharp:
  - public
  - sealed
  - class
  modifiers.vb:
  - Public
  - NotInheritable
  - Class
- uid: System.Security.AccessControl.SystemAcl.#ctor(System.Boolean,System.Boolean,System.Byte,System.Int32)
  commentId: M:System.Security.AccessControl.SystemAcl.#ctor(System.Boolean,System.Boolean,System.Byte,System.Int32)
  id: '#ctor(System.Boolean,System.Boolean,System.Byte,System.Int32)'
  parent: System.Security.AccessControl.SystemAcl
  langs:
  - csharp
  - vb
  name: SystemAcl(Boolean, Boolean, Byte, Int32)
  nameWithType: SystemAcl.SystemAcl(Boolean, Boolean, Byte, Int32)
  fullName: System.Security.AccessControl.SystemAcl.SystemAcl(System.Boolean, System.Boolean, System.Byte, System.Int32)
  type: Constructor
  source:
    remote:
      path: src/System.Security.AccessControl/ref/System.Security.AccessControl.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: .ctor
    path: src/System.Security.AccessControl/ref/System.Security.AccessControl.cs
    startLine: 515
  assemblies:
  - System.Security.AccessControl
  namespace: System.Security.AccessControl
  summary: "\n<p>Initializes a new instance of the <xref href=\"System.Security.AccessControl.SystemAcl\" data-throw-if-not-resolved=\"false\"></xref> class with the specified values.</p>\n"
  syntax:
    content: public SystemAcl(bool isContainer, bool isDS, byte revision, int capacity)
    content.vb: Public Sub New(isContainer As Boolean, isDS As Boolean, revision As Byte, capacity As Integer)
    parameters:
    - id: isContainer
      type: System.Boolean
      description: "\n<p>\n<strong>true</strong> if the new <xref href=\"System.Security.AccessControl.SystemAcl\" data-throw-if-not-resolved=\"false\"></xref> object is a container.</p>\n"
    - id: isDS
      type: System.Boolean
      description: "\n<p>\n<strong>true</strong> if the new <xref href=\"System.Security.AccessControl.SystemAcl\" data-throw-if-not-resolved=\"false\"></xref> object is a directory object Access Control List (ACL).</p>\n"
    - id: revision
      type: System.Byte
      description: "\n<p>The revision level of the new <xref href=\"System.Security.AccessControl.SystemAcl\" data-throw-if-not-resolved=\"false\"></xref> object.</p>\n"
    - id: capacity
      type: System.Int32
      description: "\n<p>The number of Access Control Entries (ACEs) this <xref href=\"System.Security.AccessControl.SystemAcl\" data-throw-if-not-resolved=\"false\"></xref> object can contain. This number is to be used only as a hint.</p>\n"
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: System.Security.AccessControl.SystemAcl.#ctor(System.Boolean,System.Boolean,System.Int32)
  commentId: M:System.Security.AccessControl.SystemAcl.#ctor(System.Boolean,System.Boolean,System.Int32)
  id: '#ctor(System.Boolean,System.Boolean,System.Int32)'
  parent: System.Security.AccessControl.SystemAcl
  langs:
  - csharp
  - vb
  name: SystemAcl(Boolean, Boolean, Int32)
  nameWithType: SystemAcl.SystemAcl(Boolean, Boolean, Int32)
  fullName: System.Security.AccessControl.SystemAcl.SystemAcl(System.Boolean, System.Boolean, System.Int32)
  type: Constructor
  source:
    remote:
      path: src/System.Security.AccessControl/ref/System.Security.AccessControl.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: .ctor
    path: src/System.Security.AccessControl/ref/System.Security.AccessControl.cs
    startLine: 516
  assemblies:
  - System.Security.AccessControl
  namespace: System.Security.AccessControl
  summary: "\n<p>Initializes a new instance of the <xref href=\"System.Security.AccessControl.SystemAcl\" data-throw-if-not-resolved=\"false\"></xref> class with the specified values.</p>\n"
  syntax:
    content: public SystemAcl(bool isContainer, bool isDS, int capacity)
    content.vb: Public Sub New(isContainer As Boolean, isDS As Boolean, capacity As Integer)
    parameters:
    - id: isContainer
      type: System.Boolean
      description: "\n<p>\n<strong>true</strong> if the new <xref href=\"System.Security.AccessControl.SystemAcl\" data-throw-if-not-resolved=\"false\"></xref> object is a container.</p>\n"
    - id: isDS
      type: System.Boolean
      description: "\n<p>\n<strong>true</strong> if the new <xref href=\"System.Security.AccessControl.SystemAcl\" data-throw-if-not-resolved=\"false\"></xref> object is a directory object Access Control List (ACL).</p>\n"
    - id: capacity
      type: System.Int32
      description: "\n<p>The number of Access Control Entries (ACEs) this <xref href=\"System.Security.AccessControl.SystemAcl\" data-throw-if-not-resolved=\"false\"></xref> object can contain. This number is to be used only as a hint.</p>\n"
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: System.Security.AccessControl.SystemAcl.#ctor(System.Boolean,System.Boolean,System.Security.AccessControl.RawAcl)
  commentId: M:System.Security.AccessControl.SystemAcl.#ctor(System.Boolean,System.Boolean,System.Security.AccessControl.RawAcl)
  id: '#ctor(System.Boolean,System.Boolean,System.Security.AccessControl.RawAcl)'
  parent: System.Security.AccessControl.SystemAcl
  langs:
  - csharp
  - vb
  name: SystemAcl(Boolean, Boolean, RawAcl)
  nameWithType: SystemAcl.SystemAcl(Boolean, Boolean, RawAcl)
  fullName: System.Security.AccessControl.SystemAcl.SystemAcl(System.Boolean, System.Boolean, System.Security.AccessControl.RawAcl)
  type: Constructor
  source:
    remote:
      path: src/System.Security.AccessControl/ref/System.Security.AccessControl.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: .ctor
    path: src/System.Security.AccessControl/ref/System.Security.AccessControl.cs
    startLine: 517
  assemblies:
  - System.Security.AccessControl
  namespace: System.Security.AccessControl
  summary: "\n<p>Initializes a new instance of the <xref href=\"System.Security.AccessControl.SystemAcl\" data-throw-if-not-resolved=\"false\"></xref> class with the specified values from the specified <xref href=\"System.Security.AccessControl.RawAcl\" data-throw-if-not-resolved=\"false\"></xref> object.</p>\n"
  syntax:
    content: public SystemAcl(bool isContainer, bool isDS, RawAcl rawAcl)
    content.vb: Public Sub New(isContainer As Boolean, isDS As Boolean, rawAcl As RawAcl)
    parameters:
    - id: isContainer
      type: System.Boolean
      description: "\n<p>\n<strong>true</strong> if the new <xref href=\"System.Security.AccessControl.SystemAcl\" data-throw-if-not-resolved=\"false\"></xref> object is a container.</p>\n"
    - id: isDS
      type: System.Boolean
      description: "\n<p>\n<strong>true</strong> if the new <xref href=\"System.Security.AccessControl.SystemAcl\" data-throw-if-not-resolved=\"false\"></xref> object is a directory object Access Control List (ACL).</p>\n"
    - id: rawAcl
      type: System.Security.AccessControl.RawAcl
      description: "\n<p>The underlying <xref href=\"System.Security.AccessControl.RawAcl\" data-throw-if-not-resolved=\"false\"></xref> object for the new <xref href=\"System.Security.AccessControl.SystemAcl\" data-throw-if-not-resolved=\"false\"></xref> object. Specify <strong>null</strong> to create an empty ACL.</p>\n"
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: System.Security.AccessControl.SystemAcl.AddAudit(System.Security.AccessControl.AuditFlags,System.Security.Principal.SecurityIdentifier,System.Int32,System.Security.AccessControl.InheritanceFlags,System.Security.AccessControl.PropagationFlags)
  commentId: M:System.Security.AccessControl.SystemAcl.AddAudit(System.Security.AccessControl.AuditFlags,System.Security.Principal.SecurityIdentifier,System.Int32,System.Security.AccessControl.InheritanceFlags,System.Security.AccessControl.PropagationFlags)
  id: AddAudit(System.Security.AccessControl.AuditFlags,System.Security.Principal.SecurityIdentifier,System.Int32,System.Security.AccessControl.InheritanceFlags,System.Security.AccessControl.PropagationFlags)
  parent: System.Security.AccessControl.SystemAcl
  langs:
  - csharp
  - vb
  name: AddAudit(AuditFlags, SecurityIdentifier, Int32, InheritanceFlags, PropagationFlags)
  nameWithType: SystemAcl.AddAudit(AuditFlags, SecurityIdentifier, Int32, InheritanceFlags, PropagationFlags)
  fullName: System.Security.AccessControl.SystemAcl.AddAudit(System.Security.AccessControl.AuditFlags, System.Security.Principal.SecurityIdentifier, System.Int32, System.Security.AccessControl.InheritanceFlags, System.Security.AccessControl.PropagationFlags)
  type: Method
  source:
    remote:
      path: src/System.Security.AccessControl/ref/System.Security.AccessControl.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: AddAudit
    path: src/System.Security.AccessControl/ref/System.Security.AccessControl.cs
    startLine: 518
  assemblies:
  - System.Security.AccessControl
  namespace: System.Security.AccessControl
  summary: "\n<p>Adds an audit rule to the current <xref href=\"System.Security.AccessControl.SystemAcl\" data-throw-if-not-resolved=\"false\"></xref> object.</p>\n"
  syntax:
    content: public void AddAudit(AuditFlags auditFlags, SecurityIdentifier sid, int accessMask, InheritanceFlags inheritanceFlags, PropagationFlags propagationFlags)
    content.vb: Public Sub AddAudit(auditFlags As AuditFlags, sid As SecurityIdentifier, accessMask As Integer, inheritanceFlags As InheritanceFlags, propagationFlags As PropagationFlags)
    parameters:
    - id: auditFlags
      type: System.Security.AccessControl.AuditFlags
      description: "\n<p>The type of audit rule to add.</p>\n"
    - id: sid
      type: System.Security.Principal.SecurityIdentifier
      description: "\n<p>The <xref href=\"System.Security.Principal.SecurityIdentifier\" data-throw-if-not-resolved=\"false\"></xref> for which to add an audit rule.</p>\n"
    - id: accessMask
      type: System.Int32
      description: "\n<p>The access mask for the new audit rule.</p>\n"
    - id: inheritanceFlags
      type: System.Security.AccessControl.InheritanceFlags
      description: "\n<p>Flags that specify the inheritance properties of the new audit rule.</p>\n"
    - id: propagationFlags
      type: System.Security.AccessControl.PropagationFlags
      description: "\n<p>Flags that specify the inheritance propagation properties for the new audit rule.</p>\n"
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: System.Security.AccessControl.SystemAcl.AddAudit(System.Security.AccessControl.AuditFlags,System.Security.Principal.SecurityIdentifier,System.Int32,System.Security.AccessControl.InheritanceFlags,System.Security.AccessControl.PropagationFlags,System.Security.AccessControl.ObjectAceFlags,System.Guid,System.Guid)
  commentId: M:System.Security.AccessControl.SystemAcl.AddAudit(System.Security.AccessControl.AuditFlags,System.Security.Principal.SecurityIdentifier,System.Int32,System.Security.AccessControl.InheritanceFlags,System.Security.AccessControl.PropagationFlags,System.Security.AccessControl.ObjectAceFlags,System.Guid,System.Guid)
  id: AddAudit(System.Security.AccessControl.AuditFlags,System.Security.Principal.SecurityIdentifier,System.Int32,System.Security.AccessControl.InheritanceFlags,System.Security.AccessControl.PropagationFlags,System.Security.AccessControl.ObjectAceFlags,System.Guid,System.Guid)
  parent: System.Security.AccessControl.SystemAcl
  langs:
  - csharp
  - vb
  name: AddAudit(AuditFlags, SecurityIdentifier, Int32, InheritanceFlags, PropagationFlags, ObjectAceFlags, Guid, Guid)
  nameWithType: SystemAcl.AddAudit(AuditFlags, SecurityIdentifier, Int32, InheritanceFlags, PropagationFlags, ObjectAceFlags, Guid, Guid)
  fullName: System.Security.AccessControl.SystemAcl.AddAudit(System.Security.AccessControl.AuditFlags, System.Security.Principal.SecurityIdentifier, System.Int32, System.Security.AccessControl.InheritanceFlags, System.Security.AccessControl.PropagationFlags, System.Security.AccessControl.ObjectAceFlags, System.Guid, System.Guid)
  type: Method
  source:
    remote:
      path: src/System.Security.AccessControl/ref/System.Security.AccessControl.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: AddAudit
    path: src/System.Security.AccessControl/ref/System.Security.AccessControl.cs
    startLine: 519
  assemblies:
  - System.Security.AccessControl
  namespace: System.Security.AccessControl
  summary: "\n<p>Adds an audit rule with the specified settings to the current <xref href=\"System.Security.AccessControl.SystemAcl\" data-throw-if-not-resolved=\"false\"></xref> object. Use this method for directory object Access Control Lists (ACLs) when specifying the object type or the inherited object type for the new audit rule.</p>\n"
  syntax:
    content: public void AddAudit(AuditFlags auditFlags, SecurityIdentifier sid, int accessMask, InheritanceFlags inheritanceFlags, PropagationFlags propagationFlags, ObjectAceFlags objectFlags, Guid objectType, Guid inheritedObjectType)
    content.vb: Public Sub AddAudit(auditFlags As AuditFlags, sid As SecurityIdentifier, accessMask As Integer, inheritanceFlags As InheritanceFlags, propagationFlags As PropagationFlags, objectFlags As ObjectAceFlags, objectType As Guid, inheritedObjectType As Guid)
    parameters:
    - id: auditFlags
      type: System.Security.AccessControl.AuditFlags
      description: "\n<p>The type of audit rule to add.</p>\n"
    - id: sid
      type: System.Security.Principal.SecurityIdentifier
      description: "\n<p>The <xref href=\"System.Security.Principal.SecurityIdentifier\" data-throw-if-not-resolved=\"false\"></xref> for which to add an audit rule.</p>\n"
    - id: accessMask
      type: System.Int32
      description: "\n<p>The access mask for the new audit rule.</p>\n"
    - id: inheritanceFlags
      type: System.Security.AccessControl.InheritanceFlags
      description: "\n<p>Flags that specify the inheritance properties of the new audit rule.</p>\n"
    - id: propagationFlags
      type: System.Security.AccessControl.PropagationFlags
      description: "\n<p>Flags that specify the inheritance propagation properties for the new audit rule.</p>\n"
    - id: objectFlags
      type: System.Security.AccessControl.ObjectAceFlags
      description: "\n<p>Flags that specify if the <em>objectType</em> and <em>inheritedObjectType</em> parameters contain non-<strong>null</strong> values.</p>\n"
    - id: objectType
      type: System.Guid
      description: "\n<p>The identity of the class of objects to which the new audit rule applies.</p>\n"
    - id: inheritedObjectType
      type: System.Guid
      description: "\n<p>The identity of the class of child objects which can inherit the new audit rule.</p>\n"
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: System.Security.AccessControl.SystemAcl.AddAudit(System.Security.Principal.SecurityIdentifier,System.Security.AccessControl.ObjectAuditRule)
  commentId: M:System.Security.AccessControl.SystemAcl.AddAudit(System.Security.Principal.SecurityIdentifier,System.Security.AccessControl.ObjectAuditRule)
  id: AddAudit(System.Security.Principal.SecurityIdentifier,System.Security.AccessControl.ObjectAuditRule)
  parent: System.Security.AccessControl.SystemAcl
  langs:
  - csharp
  - vb
  name: AddAudit(SecurityIdentifier, ObjectAuditRule)
  nameWithType: SystemAcl.AddAudit(SecurityIdentifier, ObjectAuditRule)
  fullName: System.Security.AccessControl.SystemAcl.AddAudit(System.Security.Principal.SecurityIdentifier, System.Security.AccessControl.ObjectAuditRule)
  type: Method
  source:
    remote:
      path: src/System.Security.AccessControl/ref/System.Security.AccessControl.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: AddAudit
    path: src/System.Security.AccessControl/ref/System.Security.AccessControl.cs
    startLine: 520
  assemblies:
  - System.Security.AccessControl
  namespace: System.Security.AccessControl
  summary: "\n<p>Adds an audit rule to the current <xref href=\"System.Security.AccessControl.SystemAcl\" data-throw-if-not-resolved=\"false\"></xref> object.</p>\n"
  syntax:
    content: public void AddAudit(SecurityIdentifier sid, ObjectAuditRule rule)
    content.vb: Public Sub AddAudit(sid As SecurityIdentifier, rule As ObjectAuditRule)
    parameters:
    - id: sid
      type: System.Security.Principal.SecurityIdentifier
      description: "\n<p>The <xref href=\"System.Security.Principal.SecurityIdentifier\" data-throw-if-not-resolved=\"false\"></xref> for which to add an audit rule.</p>\n"
    - id: rule
      type: System.Security.AccessControl.ObjectAuditRule
      description: "\n<p>The <xref href=\"System.Security.AccessControl.ObjectAuditRule\" data-throw-if-not-resolved=\"false\"></xref>for the new audit rule.</p>\n"
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: System.Security.AccessControl.SystemAcl.RemoveAudit(System.Security.AccessControl.AuditFlags,System.Security.Principal.SecurityIdentifier,System.Int32,System.Security.AccessControl.InheritanceFlags,System.Security.AccessControl.PropagationFlags)
  commentId: M:System.Security.AccessControl.SystemAcl.RemoveAudit(System.Security.AccessControl.AuditFlags,System.Security.Principal.SecurityIdentifier,System.Int32,System.Security.AccessControl.InheritanceFlags,System.Security.AccessControl.PropagationFlags)
  id: RemoveAudit(System.Security.AccessControl.AuditFlags,System.Security.Principal.SecurityIdentifier,System.Int32,System.Security.AccessControl.InheritanceFlags,System.Security.AccessControl.PropagationFlags)
  parent: System.Security.AccessControl.SystemAcl
  langs:
  - csharp
  - vb
  name: RemoveAudit(AuditFlags, SecurityIdentifier, Int32, InheritanceFlags, PropagationFlags)
  nameWithType: SystemAcl.RemoveAudit(AuditFlags, SecurityIdentifier, Int32, InheritanceFlags, PropagationFlags)
  fullName: System.Security.AccessControl.SystemAcl.RemoveAudit(System.Security.AccessControl.AuditFlags, System.Security.Principal.SecurityIdentifier, System.Int32, System.Security.AccessControl.InheritanceFlags, System.Security.AccessControl.PropagationFlags)
  type: Method
  source:
    remote:
      path: src/System.Security.AccessControl/ref/System.Security.AccessControl.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: RemoveAudit
    path: src/System.Security.AccessControl/ref/System.Security.AccessControl.cs
    startLine: 521
  assemblies:
  - System.Security.AccessControl
  namespace: System.Security.AccessControl
  summary: "\n<p>Removes the specified audit rule from the current <xref href=\"System.Security.AccessControl.SystemAcl\" data-throw-if-not-resolved=\"false\"></xref> object.</p>\n"
  syntax:
    content: public bool RemoveAudit(AuditFlags auditFlags, SecurityIdentifier sid, int accessMask, InheritanceFlags inheritanceFlags, PropagationFlags propagationFlags)
    content.vb: Public Function RemoveAudit(auditFlags As AuditFlags, sid As SecurityIdentifier, accessMask As Integer, inheritanceFlags As InheritanceFlags, propagationFlags As PropagationFlags) As Boolean
    parameters:
    - id: auditFlags
      type: System.Security.AccessControl.AuditFlags
      description: "\n<p>The type of audit rule to remove.</p>\n"
    - id: sid
      type: System.Security.Principal.SecurityIdentifier
      description: "\n<p>The <xref href=\"System.Security.Principal.SecurityIdentifier\" data-throw-if-not-resolved=\"false\"></xref> for which to remove an audit rule.</p>\n"
    - id: accessMask
      type: System.Int32
      description: "\n<p>The access mask for the rule to be removed.</p>\n"
    - id: inheritanceFlags
      type: System.Security.AccessControl.InheritanceFlags
      description: "\n<p>Flags that specify the inheritance properties of the rule to be removed.</p>\n"
    - id: propagationFlags
      type: System.Security.AccessControl.PropagationFlags
      description: "\n<p>Flags that specify the inheritance propagation properties for the rule to be removed.</p>\n"
    return:
      type: System.Boolean
      description: "\n<p>\n<strong>true</strong> if this method successfully removes the specified audit rule; otherwise, <strong>false</strong>.</p>\n"
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: System.Security.AccessControl.SystemAcl.RemoveAudit(System.Security.AccessControl.AuditFlags,System.Security.Principal.SecurityIdentifier,System.Int32,System.Security.AccessControl.InheritanceFlags,System.Security.AccessControl.PropagationFlags,System.Security.AccessControl.ObjectAceFlags,System.Guid,System.Guid)
  commentId: M:System.Security.AccessControl.SystemAcl.RemoveAudit(System.Security.AccessControl.AuditFlags,System.Security.Principal.SecurityIdentifier,System.Int32,System.Security.AccessControl.InheritanceFlags,System.Security.AccessControl.PropagationFlags,System.Security.AccessControl.ObjectAceFlags,System.Guid,System.Guid)
  id: RemoveAudit(System.Security.AccessControl.AuditFlags,System.Security.Principal.SecurityIdentifier,System.Int32,System.Security.AccessControl.InheritanceFlags,System.Security.AccessControl.PropagationFlags,System.Security.AccessControl.ObjectAceFlags,System.Guid,System.Guid)
  parent: System.Security.AccessControl.SystemAcl
  langs:
  - csharp
  - vb
  name: RemoveAudit(AuditFlags, SecurityIdentifier, Int32, InheritanceFlags, PropagationFlags, ObjectAceFlags, Guid, Guid)
  nameWithType: SystemAcl.RemoveAudit(AuditFlags, SecurityIdentifier, Int32, InheritanceFlags, PropagationFlags, ObjectAceFlags, Guid, Guid)
  fullName: System.Security.AccessControl.SystemAcl.RemoveAudit(System.Security.AccessControl.AuditFlags, System.Security.Principal.SecurityIdentifier, System.Int32, System.Security.AccessControl.InheritanceFlags, System.Security.AccessControl.PropagationFlags, System.Security.AccessControl.ObjectAceFlags, System.Guid, System.Guid)
  type: Method
  source:
    remote:
      path: src/System.Security.AccessControl/ref/System.Security.AccessControl.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: RemoveAudit
    path: src/System.Security.AccessControl/ref/System.Security.AccessControl.cs
    startLine: 522
  assemblies:
  - System.Security.AccessControl
  namespace: System.Security.AccessControl
  summary: "\n<p>Removes the specified audit rule from the current <xref href=\"System.Security.AccessControl.SystemAcl\" data-throw-if-not-resolved=\"false\"></xref> object. Use this method for directory object Access Control Lists (ACLs) when specifying the object type or the inherited object type.</p>\n"
  syntax:
    content: public bool RemoveAudit(AuditFlags auditFlags, SecurityIdentifier sid, int accessMask, InheritanceFlags inheritanceFlags, PropagationFlags propagationFlags, ObjectAceFlags objectFlags, Guid objectType, Guid inheritedObjectType)
    content.vb: Public Function RemoveAudit(auditFlags As AuditFlags, sid As SecurityIdentifier, accessMask As Integer, inheritanceFlags As InheritanceFlags, propagationFlags As PropagationFlags, objectFlags As ObjectAceFlags, objectType As Guid, inheritedObjectType As Guid) As Boolean
    parameters:
    - id: auditFlags
      type: System.Security.AccessControl.AuditFlags
      description: "\n<p>The type of audit rule to remove.</p>\n"
    - id: sid
      type: System.Security.Principal.SecurityIdentifier
      description: "\n<p>The <xref href=\"System.Security.Principal.SecurityIdentifier\" data-throw-if-not-resolved=\"false\"></xref> for which to remove an audit rule.</p>\n"
    - id: accessMask
      type: System.Int32
      description: "\n<p>The access mask for the rule to be removed.</p>\n"
    - id: inheritanceFlags
      type: System.Security.AccessControl.InheritanceFlags
      description: "\n<p>Flags that specify the inheritance properties of the rule to be removed.</p>\n"
    - id: propagationFlags
      type: System.Security.AccessControl.PropagationFlags
      description: "\n<p>Flags that specify the inheritance propagation properties for the rule to be removed.</p>\n"
    - id: objectFlags
      type: System.Security.AccessControl.ObjectAceFlags
      description: "\n<p>Flags that specify if the <em>objectType</em> and <em>inheritedObjectType</em> parameters contain non-<strong>null</strong> values.</p>\n"
    - id: objectType
      type: System.Guid
      description: "\n<p>The identity of the class of objects to which the removed audit control rule applies.</p>\n"
    - id: inheritedObjectType
      type: System.Guid
      description: "\n<p>The identity of the class of child objects which can inherit the removed audit rule.</p>\n"
    return:
      type: System.Boolean
      description: "\n<p>\n<strong>true</strong> if this method successfully removes the specified audit rule; otherwise, <strong>false</strong>.</p>\n"
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: System.Security.AccessControl.SystemAcl.RemoveAudit(System.Security.Principal.SecurityIdentifier,System.Security.AccessControl.ObjectAuditRule)
  commentId: M:System.Security.AccessControl.SystemAcl.RemoveAudit(System.Security.Principal.SecurityIdentifier,System.Security.AccessControl.ObjectAuditRule)
  id: RemoveAudit(System.Security.Principal.SecurityIdentifier,System.Security.AccessControl.ObjectAuditRule)
  parent: System.Security.AccessControl.SystemAcl
  langs:
  - csharp
  - vb
  name: RemoveAudit(SecurityIdentifier, ObjectAuditRule)
  nameWithType: SystemAcl.RemoveAudit(SecurityIdentifier, ObjectAuditRule)
  fullName: System.Security.AccessControl.SystemAcl.RemoveAudit(System.Security.Principal.SecurityIdentifier, System.Security.AccessControl.ObjectAuditRule)
  type: Method
  source:
    remote:
      path: src/System.Security.AccessControl/ref/System.Security.AccessControl.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: RemoveAudit
    path: src/System.Security.AccessControl/ref/System.Security.AccessControl.cs
    startLine: 523
  assemblies:
  - System.Security.AccessControl
  namespace: System.Security.AccessControl
  summary: "\n<p>Removes the specified audit rule from the current <xref href=\"System.Security.AccessControl.SystemAcl\" data-throw-if-not-resolved=\"false\"></xref> object.</p>\n"
  syntax:
    content: public bool RemoveAudit(SecurityIdentifier sid, ObjectAuditRule rule)
    content.vb: Public Function RemoveAudit(sid As SecurityIdentifier, rule As ObjectAuditRule) As Boolean
    parameters:
    - id: sid
      type: System.Security.Principal.SecurityIdentifier
      description: "\n<p>The <xref href=\"System.Security.Principal.SecurityIdentifier\" data-throw-if-not-resolved=\"false\"></xref> for which to remove an audit rule.</p>\n"
    - id: rule
      type: System.Security.AccessControl.ObjectAuditRule
      description: "\n<p>The <xref href=\"System.Security.AccessControl.ObjectAuditRule\" data-throw-if-not-resolved=\"false\"></xref> for which to remove an audit rule.</p>\n"
    return:
      type: System.Boolean
      description: "\n<p>\n<strong>true</strong> if this method successfully removes the specified audit rule; otherwise, <strong>false</strong>.</p>\n"
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: System.Security.AccessControl.SystemAcl.RemoveAuditSpecific(System.Security.AccessControl.AuditFlags,System.Security.Principal.SecurityIdentifier,System.Int32,System.Security.AccessControl.InheritanceFlags,System.Security.AccessControl.PropagationFlags)
  commentId: M:System.Security.AccessControl.SystemAcl.RemoveAuditSpecific(System.Security.AccessControl.AuditFlags,System.Security.Principal.SecurityIdentifier,System.Int32,System.Security.AccessControl.InheritanceFlags,System.Security.AccessControl.PropagationFlags)
  id: RemoveAuditSpecific(System.Security.AccessControl.AuditFlags,System.Security.Principal.SecurityIdentifier,System.Int32,System.Security.AccessControl.InheritanceFlags,System.Security.AccessControl.PropagationFlags)
  parent: System.Security.AccessControl.SystemAcl
  langs:
  - csharp
  - vb
  name: RemoveAuditSpecific(AuditFlags, SecurityIdentifier, Int32, InheritanceFlags, PropagationFlags)
  nameWithType: SystemAcl.RemoveAuditSpecific(AuditFlags, SecurityIdentifier, Int32, InheritanceFlags, PropagationFlags)
  fullName: System.Security.AccessControl.SystemAcl.RemoveAuditSpecific(System.Security.AccessControl.AuditFlags, System.Security.Principal.SecurityIdentifier, System.Int32, System.Security.AccessControl.InheritanceFlags, System.Security.AccessControl.PropagationFlags)
  type: Method
  source:
    remote:
      path: src/System.Security.AccessControl/ref/System.Security.AccessControl.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: RemoveAuditSpecific
    path: src/System.Security.AccessControl/ref/System.Security.AccessControl.cs
    startLine: 524
  assemblies:
  - System.Security.AccessControl
  namespace: System.Security.AccessControl
  summary: "\n<p>Removes the specified audit rule from the current <xref href=\"System.Security.AccessControl.DiscretionaryAcl\" data-throw-if-not-resolved=\"false\"></xref> object.</p>\n"
  syntax:
    content: public void RemoveAuditSpecific(AuditFlags auditFlags, SecurityIdentifier sid, int accessMask, InheritanceFlags inheritanceFlags, PropagationFlags propagationFlags)
    content.vb: Public Sub RemoveAuditSpecific(auditFlags As AuditFlags, sid As SecurityIdentifier, accessMask As Integer, inheritanceFlags As InheritanceFlags, propagationFlags As PropagationFlags)
    parameters:
    - id: auditFlags
      type: System.Security.AccessControl.AuditFlags
      description: "\n<p>The type of audit rule to remove.</p>\n"
    - id: sid
      type: System.Security.Principal.SecurityIdentifier
      description: "\n<p>The <xref href=\"System.Security.Principal.SecurityIdentifier\" data-throw-if-not-resolved=\"false\"></xref> for which to remove an audit rule.</p>\n"
    - id: accessMask
      type: System.Int32
      description: "\n<p>The access mask for the rule to be removed.</p>\n"
    - id: inheritanceFlags
      type: System.Security.AccessControl.InheritanceFlags
      description: "\n<p>Flags that specify the inheritance properties of the rule to be removed.</p>\n"
    - id: propagationFlags
      type: System.Security.AccessControl.PropagationFlags
      description: "\n<p>Flags that specify the inheritance propagation properties for the rule to be removed.</p>\n"
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: System.Security.AccessControl.SystemAcl.RemoveAuditSpecific(System.Security.AccessControl.AuditFlags,System.Security.Principal.SecurityIdentifier,System.Int32,System.Security.AccessControl.InheritanceFlags,System.Security.AccessControl.PropagationFlags,System.Security.AccessControl.ObjectAceFlags,System.Guid,System.Guid)
  commentId: M:System.Security.AccessControl.SystemAcl.RemoveAuditSpecific(System.Security.AccessControl.AuditFlags,System.Security.Principal.SecurityIdentifier,System.Int32,System.Security.AccessControl.InheritanceFlags,System.Security.AccessControl.PropagationFlags,System.Security.AccessControl.ObjectAceFlags,System.Guid,System.Guid)
  id: RemoveAuditSpecific(System.Security.AccessControl.AuditFlags,System.Security.Principal.SecurityIdentifier,System.Int32,System.Security.AccessControl.InheritanceFlags,System.Security.AccessControl.PropagationFlags,System.Security.AccessControl.ObjectAceFlags,System.Guid,System.Guid)
  parent: System.Security.AccessControl.SystemAcl
  langs:
  - csharp
  - vb
  name: RemoveAuditSpecific(AuditFlags, SecurityIdentifier, Int32, InheritanceFlags, PropagationFlags, ObjectAceFlags, Guid, Guid)
  nameWithType: SystemAcl.RemoveAuditSpecific(AuditFlags, SecurityIdentifier, Int32, InheritanceFlags, PropagationFlags, ObjectAceFlags, Guid, Guid)
  fullName: System.Security.AccessControl.SystemAcl.RemoveAuditSpecific(System.Security.AccessControl.AuditFlags, System.Security.Principal.SecurityIdentifier, System.Int32, System.Security.AccessControl.InheritanceFlags, System.Security.AccessControl.PropagationFlags, System.Security.AccessControl.ObjectAceFlags, System.Guid, System.Guid)
  type: Method
  source:
    remote:
      path: src/System.Security.AccessControl/ref/System.Security.AccessControl.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: RemoveAuditSpecific
    path: src/System.Security.AccessControl/ref/System.Security.AccessControl.cs
    startLine: 525
  assemblies:
  - System.Security.AccessControl
  namespace: System.Security.AccessControl
  summary: "\n<p>Removes the specified audit rule from the current <xref href=\"System.Security.AccessControl.DiscretionaryAcl\" data-throw-if-not-resolved=\"false\"></xref> object. Use this method for directory object Access Control Lists (ACLs) when specifying the object type or the inherited object type.</p>\n"
  syntax:
    content: public void RemoveAuditSpecific(AuditFlags auditFlags, SecurityIdentifier sid, int accessMask, InheritanceFlags inheritanceFlags, PropagationFlags propagationFlags, ObjectAceFlags objectFlags, Guid objectType, Guid inheritedObjectType)
    content.vb: Public Sub RemoveAuditSpecific(auditFlags As AuditFlags, sid As SecurityIdentifier, accessMask As Integer, inheritanceFlags As InheritanceFlags, propagationFlags As PropagationFlags, objectFlags As ObjectAceFlags, objectType As Guid, inheritedObjectType As Guid)
    parameters:
    - id: auditFlags
      type: System.Security.AccessControl.AuditFlags
      description: "\n<p>The type of audit rule to remove.</p>\n"
    - id: sid
      type: System.Security.Principal.SecurityIdentifier
      description: "\n<p>The <xref href=\"System.Security.Principal.SecurityIdentifier\" data-throw-if-not-resolved=\"false\"></xref> for which to remove an audit rule.</p>\n"
    - id: accessMask
      type: System.Int32
      description: "\n<p>The access mask for the rule to be removed.</p>\n"
    - id: inheritanceFlags
      type: System.Security.AccessControl.InheritanceFlags
      description: "\n<p>Flags that specify the inheritance properties of the rule to be removed.</p>\n"
    - id: propagationFlags
      type: System.Security.AccessControl.PropagationFlags
      description: "\n<p>Flags that specify the inheritance propagation properties for the rule to be removed.</p>\n"
    - id: objectFlags
      type: System.Security.AccessControl.ObjectAceFlags
      description: "\n<p>Flags that specify if the <em>objectType</em> and <em>inheritedObjectType</em> parameters contain non-<strong>null</strong> values.</p>\n"
    - id: objectType
      type: System.Guid
      description: "\n<p>The identity of the class of objects to which the removed audit control rule applies.</p>\n"
    - id: inheritedObjectType
      type: System.Guid
      description: "\n<p>The identity of the class of child objects which can inherit the removed audit rule.</p>\n"
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: System.Security.AccessControl.SystemAcl.RemoveAuditSpecific(System.Security.Principal.SecurityIdentifier,System.Security.AccessControl.ObjectAuditRule)
  commentId: M:System.Security.AccessControl.SystemAcl.RemoveAuditSpecific(System.Security.Principal.SecurityIdentifier,System.Security.AccessControl.ObjectAuditRule)
  id: RemoveAuditSpecific(System.Security.Principal.SecurityIdentifier,System.Security.AccessControl.ObjectAuditRule)
  parent: System.Security.AccessControl.SystemAcl
  langs:
  - csharp
  - vb
  name: RemoveAuditSpecific(SecurityIdentifier, ObjectAuditRule)
  nameWithType: SystemAcl.RemoveAuditSpecific(SecurityIdentifier, ObjectAuditRule)
  fullName: System.Security.AccessControl.SystemAcl.RemoveAuditSpecific(System.Security.Principal.SecurityIdentifier, System.Security.AccessControl.ObjectAuditRule)
  type: Method
  source:
    remote:
      path: src/System.Security.AccessControl/ref/System.Security.AccessControl.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: RemoveAuditSpecific
    path: src/System.Security.AccessControl/ref/System.Security.AccessControl.cs
    startLine: 526
  assemblies:
  - System.Security.AccessControl
  namespace: System.Security.AccessControl
  summary: "\n<p>Removes the specified audit rule from the current <xref href=\"System.Security.AccessControl.DiscretionaryAcl\" data-throw-if-not-resolved=\"false\"></xref> object.</p>\n"
  syntax:
    content: public void RemoveAuditSpecific(SecurityIdentifier sid, ObjectAuditRule rule)
    content.vb: Public Sub RemoveAuditSpecific(sid As SecurityIdentifier, rule As ObjectAuditRule)
    parameters:
    - id: sid
      type: System.Security.Principal.SecurityIdentifier
      description: "\n<p>The <xref href=\"System.Security.Principal.SecurityIdentifier\" data-throw-if-not-resolved=\"false\"></xref> for which to remove an audit rule.</p>\n"
    - id: rule
      type: System.Security.AccessControl.ObjectAuditRule
      description: "\n<p>The <xref href=\"System.Security.AccessControl.ObjectAuditRule\" data-throw-if-not-resolved=\"false\"></xref> for the rule to be removed.</p>\n"
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: System.Security.AccessControl.SystemAcl.SetAudit(System.Security.AccessControl.AuditFlags,System.Security.Principal.SecurityIdentifier,System.Int32,System.Security.AccessControl.InheritanceFlags,System.Security.AccessControl.PropagationFlags)
  commentId: M:System.Security.AccessControl.SystemAcl.SetAudit(System.Security.AccessControl.AuditFlags,System.Security.Principal.SecurityIdentifier,System.Int32,System.Security.AccessControl.InheritanceFlags,System.Security.AccessControl.PropagationFlags)
  id: SetAudit(System.Security.AccessControl.AuditFlags,System.Security.Principal.SecurityIdentifier,System.Int32,System.Security.AccessControl.InheritanceFlags,System.Security.AccessControl.PropagationFlags)
  parent: System.Security.AccessControl.SystemAcl
  langs:
  - csharp
  - vb
  name: SetAudit(AuditFlags, SecurityIdentifier, Int32, InheritanceFlags, PropagationFlags)
  nameWithType: SystemAcl.SetAudit(AuditFlags, SecurityIdentifier, Int32, InheritanceFlags, PropagationFlags)
  fullName: System.Security.AccessControl.SystemAcl.SetAudit(System.Security.AccessControl.AuditFlags, System.Security.Principal.SecurityIdentifier, System.Int32, System.Security.AccessControl.InheritanceFlags, System.Security.AccessControl.PropagationFlags)
  type: Method
  source:
    remote:
      path: src/System.Security.AccessControl/ref/System.Security.AccessControl.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: SetAudit
    path: src/System.Security.AccessControl/ref/System.Security.AccessControl.cs
    startLine: 527
  assemblies:
  - System.Security.AccessControl
  namespace: System.Security.AccessControl
  summary: "\n<p>Sets the specified audit rule for the specified <xref href=\"System.Security.Principal.SecurityIdentifier\" data-throw-if-not-resolved=\"false\"></xref> object.</p>\n"
  syntax:
    content: public void SetAudit(AuditFlags auditFlags, SecurityIdentifier sid, int accessMask, InheritanceFlags inheritanceFlags, PropagationFlags propagationFlags)
    content.vb: Public Sub SetAudit(auditFlags As AuditFlags, sid As SecurityIdentifier, accessMask As Integer, inheritanceFlags As InheritanceFlags, propagationFlags As PropagationFlags)
    parameters:
    - id: auditFlags
      type: System.Security.AccessControl.AuditFlags
      description: "\n<p>The audit condition to set.</p>\n"
    - id: sid
      type: System.Security.Principal.SecurityIdentifier
      description: "\n<p>The <xref href=\"System.Security.Principal.SecurityIdentifier\" data-throw-if-not-resolved=\"false\"></xref> for which to set an audit rule.</p>\n"
    - id: accessMask
      type: System.Int32
      description: "\n<p>The access mask for the new audit rule.</p>\n"
    - id: inheritanceFlags
      type: System.Security.AccessControl.InheritanceFlags
      description: "\n<p>Flags that specify the inheritance properties of the new audit rule.</p>\n"
    - id: propagationFlags
      type: System.Security.AccessControl.PropagationFlags
      description: "\n<p>Flags that specify the inheritance propagation properties for the new audit rule.</p>\n"
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: System.Security.AccessControl.SystemAcl.SetAudit(System.Security.AccessControl.AuditFlags,System.Security.Principal.SecurityIdentifier,System.Int32,System.Security.AccessControl.InheritanceFlags,System.Security.AccessControl.PropagationFlags,System.Security.AccessControl.ObjectAceFlags,System.Guid,System.Guid)
  commentId: M:System.Security.AccessControl.SystemAcl.SetAudit(System.Security.AccessControl.AuditFlags,System.Security.Principal.SecurityIdentifier,System.Int32,System.Security.AccessControl.InheritanceFlags,System.Security.AccessControl.PropagationFlags,System.Security.AccessControl.ObjectAceFlags,System.Guid,System.Guid)
  id: SetAudit(System.Security.AccessControl.AuditFlags,System.Security.Principal.SecurityIdentifier,System.Int32,System.Security.AccessControl.InheritanceFlags,System.Security.AccessControl.PropagationFlags,System.Security.AccessControl.ObjectAceFlags,System.Guid,System.Guid)
  parent: System.Security.AccessControl.SystemAcl
  langs:
  - csharp
  - vb
  name: SetAudit(AuditFlags, SecurityIdentifier, Int32, InheritanceFlags, PropagationFlags, ObjectAceFlags, Guid, Guid)
  nameWithType: SystemAcl.SetAudit(AuditFlags, SecurityIdentifier, Int32, InheritanceFlags, PropagationFlags, ObjectAceFlags, Guid, Guid)
  fullName: System.Security.AccessControl.SystemAcl.SetAudit(System.Security.AccessControl.AuditFlags, System.Security.Principal.SecurityIdentifier, System.Int32, System.Security.AccessControl.InheritanceFlags, System.Security.AccessControl.PropagationFlags, System.Security.AccessControl.ObjectAceFlags, System.Guid, System.Guid)
  type: Method
  source:
    remote:
      path: src/System.Security.AccessControl/ref/System.Security.AccessControl.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: SetAudit
    path: src/System.Security.AccessControl/ref/System.Security.AccessControl.cs
    startLine: 528
  assemblies:
  - System.Security.AccessControl
  namespace: System.Security.AccessControl
  summary: "\n<p>Sets the specified audit rule for the specified <xref href=\"System.Security.Principal.SecurityIdentifier\" data-throw-if-not-resolved=\"false\"></xref> object. Use this method for directory object Access Control Lists (ACLs) when specifying the object type or the inherited object type.</p>\n"
  syntax:
    content: public void SetAudit(AuditFlags auditFlags, SecurityIdentifier sid, int accessMask, InheritanceFlags inheritanceFlags, PropagationFlags propagationFlags, ObjectAceFlags objectFlags, Guid objectType, Guid inheritedObjectType)
    content.vb: Public Sub SetAudit(auditFlags As AuditFlags, sid As SecurityIdentifier, accessMask As Integer, inheritanceFlags As InheritanceFlags, propagationFlags As PropagationFlags, objectFlags As ObjectAceFlags, objectType As Guid, inheritedObjectType As Guid)
    parameters:
    - id: auditFlags
      type: System.Security.AccessControl.AuditFlags
      description: "\n<p>The audit condition to set.</p>\n"
    - id: sid
      type: System.Security.Principal.SecurityIdentifier
      description: "\n<p>The <xref href=\"System.Security.Principal.SecurityIdentifier\" data-throw-if-not-resolved=\"false\"></xref> for which to set an audit rule.</p>\n"
    - id: accessMask
      type: System.Int32
      description: "\n<p>The access mask for the new audit rule.</p>\n"
    - id: inheritanceFlags
      type: System.Security.AccessControl.InheritanceFlags
      description: "\n<p>Flags that specify the inheritance properties of the new audit rule.</p>\n"
    - id: propagationFlags
      type: System.Security.AccessControl.PropagationFlags
      description: "\n<p>Flags that specify the inheritance propagation properties for the new audit rule.</p>\n"
    - id: objectFlags
      type: System.Security.AccessControl.ObjectAceFlags
      description: "\n<p>Flags that specify if the <em>objectType</em> and <em>inheritedObjectType</em> parameters contain non-<strong>null</strong> values.</p>\n"
    - id: objectType
      type: System.Guid
      description: "\n<p>The identity of the class of objects to which the new audit rule applies.</p>\n"
    - id: inheritedObjectType
      type: System.Guid
      description: "\n<p>The identity of the class of child objects which can inherit the new audit rule.</p>\n"
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: System.Security.AccessControl.SystemAcl.SetAudit(System.Security.Principal.SecurityIdentifier,System.Security.AccessControl.ObjectAuditRule)
  commentId: M:System.Security.AccessControl.SystemAcl.SetAudit(System.Security.Principal.SecurityIdentifier,System.Security.AccessControl.ObjectAuditRule)
  id: SetAudit(System.Security.Principal.SecurityIdentifier,System.Security.AccessControl.ObjectAuditRule)
  parent: System.Security.AccessControl.SystemAcl
  langs:
  - csharp
  - vb
  name: SetAudit(SecurityIdentifier, ObjectAuditRule)
  nameWithType: SystemAcl.SetAudit(SecurityIdentifier, ObjectAuditRule)
  fullName: System.Security.AccessControl.SystemAcl.SetAudit(System.Security.Principal.SecurityIdentifier, System.Security.AccessControl.ObjectAuditRule)
  type: Method
  source:
    remote:
      path: src/System.Security.AccessControl/ref/System.Security.AccessControl.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: SetAudit
    path: src/System.Security.AccessControl/ref/System.Security.AccessControl.cs
    startLine: 529
  assemblies:
  - System.Security.AccessControl
  namespace: System.Security.AccessControl
  summary: "\n<p>Sets the specified audit rule for the specified <xref href=\"System.Security.Principal.SecurityIdentifier\" data-throw-if-not-resolved=\"false\"></xref> object.</p>\n"
  syntax:
    content: public void SetAudit(SecurityIdentifier sid, ObjectAuditRule rule)
    content.vb: Public Sub SetAudit(sid As SecurityIdentifier, rule As ObjectAuditRule)
    parameters:
    - id: sid
      type: System.Security.Principal.SecurityIdentifier
      description: "\n<p>The <xref href=\"System.Security.Principal.SecurityIdentifier\" data-throw-if-not-resolved=\"false\"></xref> for which to set an audit rule.</p>\n"
    - id: rule
      type: System.Security.AccessControl.ObjectAuditRule
      description: "\n<p>The <xref href=\"System.Security.AccessControl.ObjectAuditRule\" data-throw-if-not-resolved=\"false\"></xref>for which to set an audit rule.</p>\n"
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
references:
- uid: System.Security.AccessControl
  commentId: N:System.Security.AccessControl
  isExternal: false
  name: System.Security.AccessControl
  nameWithType: System.Security.AccessControl
  fullName: System.Security.AccessControl
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: false
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Security.AccessControl.GenericAcl
  commentId: T:System.Security.AccessControl.GenericAcl
  parent: System.Security.AccessControl
  isExternal: false
  name: GenericAcl
  nameWithType: GenericAcl
  fullName: System.Security.AccessControl.GenericAcl
- uid: System.Security.AccessControl.CommonAcl
  commentId: T:System.Security.AccessControl.CommonAcl
  parent: System.Security.AccessControl
  isExternal: false
  name: CommonAcl
  nameWithType: CommonAcl
  fullName: System.Security.AccessControl.CommonAcl
- uid: System.Collections.ICollection
  commentId: T:System.Collections.ICollection
  parent: System.Collections
  isExternal: false
  name: ICollection
  nameWithType: ICollection
  fullName: System.Collections.ICollection
- uid: System.Collections.IEnumerable
  commentId: T:System.Collections.IEnumerable
  parent: System.Collections
  isExternal: false
  name: IEnumerable
  nameWithType: IEnumerable
  fullName: System.Collections.IEnumerable
- uid: System.Security.AccessControl.CommonAcl.BinaryLength
  commentId: P:System.Security.AccessControl.CommonAcl.BinaryLength
  parent: System.Security.AccessControl.CommonAcl
  isExternal: false
  name: BinaryLength
  nameWithType: CommonAcl.BinaryLength
  fullName: System.Security.AccessControl.CommonAcl.BinaryLength
- uid: System.Security.AccessControl.CommonAcl.Count
  commentId: P:System.Security.AccessControl.CommonAcl.Count
  parent: System.Security.AccessControl.CommonAcl
  isExternal: false
  name: Count
  nameWithType: CommonAcl.Count
  fullName: System.Security.AccessControl.CommonAcl.Count
- uid: System.Security.AccessControl.CommonAcl.IsCanonical
  commentId: P:System.Security.AccessControl.CommonAcl.IsCanonical
  parent: System.Security.AccessControl.CommonAcl
  isExternal: false
  name: IsCanonical
  nameWithType: CommonAcl.IsCanonical
  fullName: System.Security.AccessControl.CommonAcl.IsCanonical
- uid: System.Security.AccessControl.CommonAcl.IsContainer
  commentId: P:System.Security.AccessControl.CommonAcl.IsContainer
  parent: System.Security.AccessControl.CommonAcl
  isExternal: false
  name: IsContainer
  nameWithType: CommonAcl.IsContainer
  fullName: System.Security.AccessControl.CommonAcl.IsContainer
- uid: System.Security.AccessControl.CommonAcl.IsDS
  commentId: P:System.Security.AccessControl.CommonAcl.IsDS
  parent: System.Security.AccessControl.CommonAcl
  isExternal: false
  name: IsDS
  nameWithType: CommonAcl.IsDS
  fullName: System.Security.AccessControl.CommonAcl.IsDS
- uid: System.Security.AccessControl.CommonAcl.Item(System.Int32)
  commentId: P:System.Security.AccessControl.CommonAcl.Item(System.Int32)
  parent: System.Security.AccessControl.CommonAcl
  isExternal: true
  name: Item[Int32]
  nameWithType: CommonAcl.Item[Int32]
  fullName: System.Security.AccessControl.CommonAcl.Item[System.Int32]
  nameWithType.vb: CommonAcl.Item(Int32)
  fullname.vb: System.Security.AccessControl.CommonAcl.Item(System.Int32)
  name.vb: Item(Int32)
  spec.csharp:
  - uid: System.Security.AccessControl.CommonAcl.Item(System.Int32)
    name: Item
    nameWithType: CommonAcl.Item
    fullName: System.Security.AccessControl.CommonAcl.Item
  - name: '['
    nameWithType: '['
    fullName: '['
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ']'
    nameWithType: ']'
    fullName: ']'
  spec.vb:
  - uid: System.Security.AccessControl.CommonAcl.Item(System.Int32)
    name: Item
    nameWithType: CommonAcl.Item
    fullName: System.Security.AccessControl.CommonAcl.Item
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Security.AccessControl.CommonAcl.Revision
  commentId: P:System.Security.AccessControl.CommonAcl.Revision
  parent: System.Security.AccessControl.CommonAcl
  isExternal: false
  name: Revision
  nameWithType: CommonAcl.Revision
  fullName: System.Security.AccessControl.CommonAcl.Revision
- uid: System.Security.AccessControl.CommonAcl.GetBinaryForm(System.Byte[],System.Int32)
  commentId: M:System.Security.AccessControl.CommonAcl.GetBinaryForm(System.Byte[],System.Int32)
  parent: System.Security.AccessControl.CommonAcl
  isExternal: true
  name: GetBinaryForm(Byte[], Int32)
  nameWithType: CommonAcl.GetBinaryForm(Byte[], Int32)
  fullName: System.Security.AccessControl.CommonAcl.GetBinaryForm(System.Byte[], System.Int32)
  nameWithType.vb: CommonAcl.GetBinaryForm(Byte(), Int32)
  fullname.vb: System.Security.AccessControl.CommonAcl.GetBinaryForm(System.Byte(), System.Int32)
  name.vb: GetBinaryForm(Byte(), Int32)
  spec.csharp:
  - uid: System.Security.AccessControl.CommonAcl.GetBinaryForm(System.Byte[],System.Int32)
    name: GetBinaryForm
    nameWithType: CommonAcl.GetBinaryForm
    fullName: System.Security.AccessControl.CommonAcl.GetBinaryForm
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: System.Byte
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Security.AccessControl.CommonAcl.GetBinaryForm(System.Byte[],System.Int32)
    name: GetBinaryForm
    nameWithType: CommonAcl.GetBinaryForm
    fullName: System.Security.AccessControl.CommonAcl.GetBinaryForm
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: System.Byte
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Security.AccessControl.CommonAcl.Purge(System.Security.Principal.SecurityIdentifier)
  commentId: M:System.Security.AccessControl.CommonAcl.Purge(System.Security.Principal.SecurityIdentifier)
  parent: System.Security.AccessControl.CommonAcl
  isExternal: true
  name: Purge(SecurityIdentifier)
  nameWithType: CommonAcl.Purge(SecurityIdentifier)
  fullName: System.Security.AccessControl.CommonAcl.Purge(System.Security.Principal.SecurityIdentifier)
  spec.csharp:
  - uid: System.Security.AccessControl.CommonAcl.Purge(System.Security.Principal.SecurityIdentifier)
    name: Purge
    nameWithType: CommonAcl.Purge
    fullName: System.Security.AccessControl.CommonAcl.Purge
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Security.Principal.SecurityIdentifier
    name: SecurityIdentifier
    nameWithType: SecurityIdentifier
    fullName: System.Security.Principal.SecurityIdentifier
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Security.AccessControl.CommonAcl.Purge(System.Security.Principal.SecurityIdentifier)
    name: Purge
    nameWithType: CommonAcl.Purge
    fullName: System.Security.AccessControl.CommonAcl.Purge
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Security.Principal.SecurityIdentifier
    name: SecurityIdentifier
    nameWithType: SecurityIdentifier
    fullName: System.Security.Principal.SecurityIdentifier
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Security.AccessControl.CommonAcl.RemoveInheritedAces
  commentId: M:System.Security.AccessControl.CommonAcl.RemoveInheritedAces
  parent: System.Security.AccessControl.CommonAcl
  isExternal: false
  name: RemoveInheritedAces()
  nameWithType: CommonAcl.RemoveInheritedAces()
  fullName: System.Security.AccessControl.CommonAcl.RemoveInheritedAces()
  spec.csharp:
  - uid: System.Security.AccessControl.CommonAcl.RemoveInheritedAces
    name: RemoveInheritedAces
    nameWithType: CommonAcl.RemoveInheritedAces
    fullName: System.Security.AccessControl.CommonAcl.RemoveInheritedAces
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Security.AccessControl.CommonAcl.RemoveInheritedAces
    name: RemoveInheritedAces
    nameWithType: CommonAcl.RemoveInheritedAces
    fullName: System.Security.AccessControl.CommonAcl.RemoveInheritedAces
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Security.AccessControl.GenericAcl.AclRevision
  commentId: F:System.Security.AccessControl.GenericAcl.AclRevision
  parent: System.Security.AccessControl.GenericAcl
  isExternal: false
  name: AclRevision
  nameWithType: GenericAcl.AclRevision
  fullName: System.Security.AccessControl.GenericAcl.AclRevision
- uid: System.Security.AccessControl.GenericAcl.AclRevisionDS
  commentId: F:System.Security.AccessControl.GenericAcl.AclRevisionDS
  parent: System.Security.AccessControl.GenericAcl
  isExternal: false
  name: AclRevisionDS
  nameWithType: GenericAcl.AclRevisionDS
  fullName: System.Security.AccessControl.GenericAcl.AclRevisionDS
- uid: System.Security.AccessControl.GenericAcl.MaxBinaryLength
  commentId: F:System.Security.AccessControl.GenericAcl.MaxBinaryLength
  parent: System.Security.AccessControl.GenericAcl
  isExternal: false
  name: MaxBinaryLength
  nameWithType: GenericAcl.MaxBinaryLength
  fullName: System.Security.AccessControl.GenericAcl.MaxBinaryLength
- uid: System.Security.AccessControl.GenericAcl.IsSynchronized
  commentId: P:System.Security.AccessControl.GenericAcl.IsSynchronized
  parent: System.Security.AccessControl.GenericAcl
  isExternal: false
  name: IsSynchronized
  nameWithType: GenericAcl.IsSynchronized
  fullName: System.Security.AccessControl.GenericAcl.IsSynchronized
- uid: System.Security.AccessControl.GenericAcl.SyncRoot
  commentId: P:System.Security.AccessControl.GenericAcl.SyncRoot
  parent: System.Security.AccessControl.GenericAcl
  isExternal: false
  name: SyncRoot
  nameWithType: GenericAcl.SyncRoot
  fullName: System.Security.AccessControl.GenericAcl.SyncRoot
- uid: System.Security.AccessControl.GenericAcl.CopyTo(System.Security.AccessControl.GenericAce[],System.Int32)
  commentId: M:System.Security.AccessControl.GenericAcl.CopyTo(System.Security.AccessControl.GenericAce[],System.Int32)
  parent: System.Security.AccessControl.GenericAcl
  isExternal: true
  name: CopyTo(GenericAce[], Int32)
  nameWithType: GenericAcl.CopyTo(GenericAce[], Int32)
  fullName: System.Security.AccessControl.GenericAcl.CopyTo(System.Security.AccessControl.GenericAce[], System.Int32)
  nameWithType.vb: GenericAcl.CopyTo(GenericAce(), Int32)
  fullname.vb: System.Security.AccessControl.GenericAcl.CopyTo(System.Security.AccessControl.GenericAce(), System.Int32)
  name.vb: CopyTo(GenericAce(), Int32)
  spec.csharp:
  - uid: System.Security.AccessControl.GenericAcl.CopyTo(System.Security.AccessControl.GenericAce[],System.Int32)
    name: CopyTo
    nameWithType: GenericAcl.CopyTo
    fullName: System.Security.AccessControl.GenericAcl.CopyTo
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Security.AccessControl.GenericAce
    name: GenericAce
    nameWithType: GenericAce
    fullName: System.Security.AccessControl.GenericAce
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Security.AccessControl.GenericAcl.CopyTo(System.Security.AccessControl.GenericAce[],System.Int32)
    name: CopyTo
    nameWithType: GenericAcl.CopyTo
    fullName: System.Security.AccessControl.GenericAcl.CopyTo
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Security.AccessControl.GenericAce
    name: GenericAce
    nameWithType: GenericAce
    fullName: System.Security.AccessControl.GenericAce
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Security.AccessControl.GenericAcl.GetEnumerator
  commentId: M:System.Security.AccessControl.GenericAcl.GetEnumerator
  parent: System.Security.AccessControl.GenericAcl
  isExternal: false
  name: GetEnumerator()
  nameWithType: GenericAcl.GetEnumerator()
  fullName: System.Security.AccessControl.GenericAcl.GetEnumerator()
  spec.csharp:
  - uid: System.Security.AccessControl.GenericAcl.GetEnumerator
    name: GetEnumerator
    nameWithType: GenericAcl.GetEnumerator
    fullName: System.Security.AccessControl.GenericAcl.GetEnumerator
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Security.AccessControl.GenericAcl.GetEnumerator
    name: GetEnumerator
    nameWithType: GenericAcl.GetEnumerator
    fullName: System.Security.AccessControl.GenericAcl.GetEnumerator
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Security.AccessControl.GenericAcl.System#Collections#ICollection#CopyTo(System.Array,System.Int32)
  commentId: M:System.Security.AccessControl.GenericAcl.System#Collections#ICollection#CopyTo(System.Array,System.Int32)
  parent: System.Security.AccessControl.GenericAcl
  isExternal: true
  name: ICollection.CopyTo(Array, Int32)
  nameWithType: GenericAcl.ICollection.CopyTo(Array, Int32)
  fullName: System.Security.AccessControl.GenericAcl.System.Collections.ICollection.CopyTo(System.Array, System.Int32)
  nameWithType.vb: GenericAcl.System.Collections.ICollection.CopyTo(Array, Int32)
  name.vb: System.Collections.ICollection.CopyTo(Array, Int32)
  spec.csharp:
  - uid: System.Security.AccessControl.GenericAcl.System#Collections#ICollection#CopyTo(System.Array,System.Int32)
    name: ICollection.CopyTo
    nameWithType: GenericAcl.ICollection.CopyTo
    fullName: System.Security.AccessControl.GenericAcl.System.Collections.ICollection.CopyTo
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Array
    name: Array
    nameWithType: Array
    fullName: System.Array
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Security.AccessControl.GenericAcl.System#Collections#ICollection#CopyTo(System.Array,System.Int32)
    name: System.Collections.ICollection.CopyTo
    nameWithType: GenericAcl.System.Collections.ICollection.CopyTo
    fullName: System.Security.AccessControl.GenericAcl.System.Collections.ICollection.CopyTo
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Array
    name: Array
    nameWithType: Array
    fullName: System.Array
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Security.AccessControl.GenericAcl.System#Collections#IEnumerable#GetEnumerator
  commentId: M:System.Security.AccessControl.GenericAcl.System#Collections#IEnumerable#GetEnumerator
  parent: System.Security.AccessControl.GenericAcl
  isExternal: false
  name: IEnumerable.GetEnumerator()
  nameWithType: GenericAcl.IEnumerable.GetEnumerator()
  fullName: System.Security.AccessControl.GenericAcl.System.Collections.IEnumerable.GetEnumerator()
  nameWithType.vb: GenericAcl.System.Collections.IEnumerable.GetEnumerator()
  name.vb: System.Collections.IEnumerable.GetEnumerator()
  spec.csharp:
  - uid: System.Security.AccessControl.GenericAcl.System#Collections#IEnumerable#GetEnumerator
    name: IEnumerable.GetEnumerator
    nameWithType: GenericAcl.IEnumerable.GetEnumerator
    fullName: System.Security.AccessControl.GenericAcl.System.Collections.IEnumerable.GetEnumerator
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Security.AccessControl.GenericAcl.System#Collections#IEnumerable#GetEnumerator
    name: System.Collections.IEnumerable.GetEnumerator
    nameWithType: GenericAcl.System.Collections.IEnumerable.GetEnumerator
    fullName: System.Security.AccessControl.GenericAcl.System.Collections.IEnumerable.GetEnumerator
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.IEnumerable.System.Linq.ParallelEnumerable.AsParallel
  commentId: M:System.Linq.ParallelEnumerable.AsParallel(System.Collections.IEnumerable)
  parent: System.Linq.ParallelEnumerable
  definition: System.Linq.ParallelEnumerable.AsParallel(System.Collections.IEnumerable)
  name: AsParallel()
  nameWithType: ParallelEnumerable.AsParallel()
  fullName: System.Linq.ParallelEnumerable.AsParallel()
  spec.csharp:
  - uid: System.Linq.ParallelEnumerable.AsParallel
    name: AsParallel
    nameWithType: ParallelEnumerable.AsParallel
    fullName: System.Linq.ParallelEnumerable.AsParallel
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Linq.ParallelEnumerable.AsParallel
    name: AsParallel
    nameWithType: ParallelEnumerable.AsParallel
    fullName: System.Linq.ParallelEnumerable.AsParallel
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.IEnumerable.System.Linq.Enumerable.Cast``1
  commentId: M:System.Linq.Enumerable.Cast``1(System.Collections.IEnumerable)
  parent: System.Linq.Enumerable
  definition: System.Linq.Enumerable.Cast``1(System.Collections.IEnumerable)
  name: Cast<TResult>()
  nameWithType: Enumerable.Cast<TResult>()
  fullName: System.Linq.Enumerable.Cast<TResult>()
  nameWithType.vb: Enumerable.Cast(Of TResult)()
  fullname.vb: System.Linq.Enumerable.Cast(Of TResult)()
  name.vb: Cast(Of TResult)()
  spec.csharp:
  - uid: System.Linq.Enumerable.Cast``1
    name: Cast<TResult>
    nameWithType: Enumerable.Cast<TResult>
    fullName: System.Linq.Enumerable.Cast<TResult>
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Linq.Enumerable.Cast``1
    name: Cast(Of TResult)
    nameWithType: Enumerable.Cast(Of TResult)
    fullName: System.Linq.Enumerable.Cast(Of TResult)
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.IEnumerable.System.Linq.Enumerable.OfType``1
  commentId: M:System.Linq.Enumerable.OfType``1(System.Collections.IEnumerable)
  parent: System.Linq.Enumerable
  definition: System.Linq.Enumerable.OfType``1(System.Collections.IEnumerable)
  name: OfType<TResult>()
  nameWithType: Enumerable.OfType<TResult>()
  fullName: System.Linq.Enumerable.OfType<TResult>()
  nameWithType.vb: Enumerable.OfType(Of TResult)()
  fullname.vb: System.Linq.Enumerable.OfType(Of TResult)()
  name.vb: OfType(Of TResult)()
  spec.csharp:
  - uid: System.Linq.Enumerable.OfType``1
    name: OfType<TResult>
    nameWithType: Enumerable.OfType<TResult>
    fullName: System.Linq.Enumerable.OfType<TResult>
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Linq.Enumerable.OfType``1
    name: OfType(Of TResult)
    nameWithType: Enumerable.OfType(Of TResult)
    fullName: System.Linq.Enumerable.OfType(Of TResult)
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.IEnumerable.System.Linq.Queryable.AsQueryable
  commentId: M:System.Linq.Queryable.AsQueryable(System.Collections.IEnumerable)
  parent: System.Linq.Queryable
  definition: System.Linq.Queryable.AsQueryable(System.Collections.IEnumerable)
  name: AsQueryable()
  nameWithType: Queryable.AsQueryable()
  fullName: System.Linq.Queryable.AsQueryable()
  spec.csharp:
  - uid: System.Linq.Queryable.AsQueryable
    name: AsQueryable
    nameWithType: Queryable.AsQueryable
    fullName: System.Linq.Queryable.AsQueryable
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Linq.Queryable.AsQueryable
    name: AsQueryable
    nameWithType: Queryable.AsQueryable
    fullName: System.Linq.Queryable.AsQueryable
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: System.Collections
  commentId: N:System.Collections
  isExternal: false
  name: System.Collections
  nameWithType: System.Collections
  fullName: System.Collections
- uid: System.Linq.ParallelEnumerable.AsParallel(System.Collections.IEnumerable)
  commentId: M:System.Linq.ParallelEnumerable.AsParallel(System.Collections.IEnumerable)
  isExternal: true
  name: AsParallel(IEnumerable)
  nameWithType: ParallelEnumerable.AsParallel(IEnumerable)
  fullName: System.Linq.ParallelEnumerable.AsParallel(System.Collections.IEnumerable)
  spec.csharp:
  - uid: System.Linq.ParallelEnumerable.AsParallel(System.Collections.IEnumerable)
    name: AsParallel
    nameWithType: ParallelEnumerable.AsParallel
    fullName: System.Linq.ParallelEnumerable.AsParallel
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Collections.IEnumerable
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.IEnumerable
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Linq.ParallelEnumerable.AsParallel(System.Collections.IEnumerable)
    name: AsParallel
    nameWithType: ParallelEnumerable.AsParallel
    fullName: System.Linq.ParallelEnumerable.AsParallel
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Collections.IEnumerable
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.IEnumerable
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Linq.ParallelEnumerable
  commentId: T:System.Linq.ParallelEnumerable
  parent: System.Linq
  isExternal: false
  name: ParallelEnumerable
  nameWithType: ParallelEnumerable
  fullName: System.Linq.ParallelEnumerable
- uid: System.Linq.Enumerable.Cast``1(System.Collections.IEnumerable)
  commentId: M:System.Linq.Enumerable.Cast``1(System.Collections.IEnumerable)
  isExternal: true
  name: Cast<TResult>(IEnumerable)
  nameWithType: Enumerable.Cast<TResult>(IEnumerable)
  fullName: System.Linq.Enumerable.Cast<TResult>(System.Collections.IEnumerable)
  nameWithType.vb: Enumerable.Cast(Of TResult)(IEnumerable)
  fullname.vb: System.Linq.Enumerable.Cast(Of TResult)(System.Collections.IEnumerable)
  name.vb: Cast(Of TResult)(IEnumerable)
  spec.csharp:
  - uid: System.Linq.Enumerable.Cast``1(System.Collections.IEnumerable)
    name: Cast<TResult>
    nameWithType: Enumerable.Cast<TResult>
    fullName: System.Linq.Enumerable.Cast<TResult>
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Collections.IEnumerable
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.IEnumerable
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Linq.Enumerable.Cast``1(System.Collections.IEnumerable)
    name: Cast(Of TResult)
    nameWithType: Enumerable.Cast(Of TResult)
    fullName: System.Linq.Enumerable.Cast(Of TResult)
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Collections.IEnumerable
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.IEnumerable
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Linq.Enumerable
  commentId: T:System.Linq.Enumerable
  parent: System.Linq
  isExternal: false
  name: Enumerable
  nameWithType: Enumerable
  fullName: System.Linq.Enumerable
- uid: System.Linq.Enumerable.OfType``1(System.Collections.IEnumerable)
  commentId: M:System.Linq.Enumerable.OfType``1(System.Collections.IEnumerable)
  isExternal: true
  name: OfType<TResult>(IEnumerable)
  nameWithType: Enumerable.OfType<TResult>(IEnumerable)
  fullName: System.Linq.Enumerable.OfType<TResult>(System.Collections.IEnumerable)
  nameWithType.vb: Enumerable.OfType(Of TResult)(IEnumerable)
  fullname.vb: System.Linq.Enumerable.OfType(Of TResult)(System.Collections.IEnumerable)
  name.vb: OfType(Of TResult)(IEnumerable)
  spec.csharp:
  - uid: System.Linq.Enumerable.OfType``1(System.Collections.IEnumerable)
    name: OfType<TResult>
    nameWithType: Enumerable.OfType<TResult>
    fullName: System.Linq.Enumerable.OfType<TResult>
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Collections.IEnumerable
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.IEnumerable
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Linq.Enumerable.OfType``1(System.Collections.IEnumerable)
    name: OfType(Of TResult)
    nameWithType: Enumerable.OfType(Of TResult)
    fullName: System.Linq.Enumerable.OfType(Of TResult)
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Collections.IEnumerable
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.IEnumerable
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Linq.Queryable.AsQueryable(System.Collections.IEnumerable)
  commentId: M:System.Linq.Queryable.AsQueryable(System.Collections.IEnumerable)
  isExternal: true
  name: AsQueryable(IEnumerable)
  nameWithType: Queryable.AsQueryable(IEnumerable)
  fullName: System.Linq.Queryable.AsQueryable(System.Collections.IEnumerable)
  spec.csharp:
  - uid: System.Linq.Queryable.AsQueryable(System.Collections.IEnumerable)
    name: AsQueryable
    nameWithType: Queryable.AsQueryable
    fullName: System.Linq.Queryable.AsQueryable
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Collections.IEnumerable
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.IEnumerable
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Linq.Queryable.AsQueryable(System.Collections.IEnumerable)
    name: AsQueryable
    nameWithType: Queryable.AsQueryable
    fullName: System.Linq.Queryable.AsQueryable
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Collections.IEnumerable
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.IEnumerable
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Linq.Queryable
  commentId: T:System.Linq.Queryable
  parent: System.Linq
  isExternal: false
  name: Queryable
  nameWithType: Queryable
  fullName: System.Linq.Queryable
- uid: System.Linq
  commentId: N:System.Linq
  isExternal: false
  name: System.Linq
  nameWithType: System.Linq
  fullName: System.Linq
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: false
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Byte
  commentId: T:System.Byte
  parent: System
  isExternal: false
  name: Byte
  nameWithType: Byte
  fullName: System.Byte
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: false
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Security.AccessControl.RawAcl
  commentId: T:System.Security.AccessControl.RawAcl
  parent: System.Security.AccessControl
  isExternal: false
  name: RawAcl
  nameWithType: RawAcl
  fullName: System.Security.AccessControl.RawAcl
- uid: System.Security.AccessControl.AuditFlags
  commentId: T:System.Security.AccessControl.AuditFlags
  parent: System.Security.AccessControl
  isExternal: false
  name: AuditFlags
  nameWithType: AuditFlags
  fullName: System.Security.AccessControl.AuditFlags
- uid: System.Security.Principal.SecurityIdentifier
  commentId: T:System.Security.Principal.SecurityIdentifier
  parent: System.Security.Principal
  isExternal: false
  name: SecurityIdentifier
  nameWithType: SecurityIdentifier
  fullName: System.Security.Principal.SecurityIdentifier
- uid: System.Security.AccessControl.InheritanceFlags
  commentId: T:System.Security.AccessControl.InheritanceFlags
  parent: System.Security.AccessControl
  isExternal: false
  name: InheritanceFlags
  nameWithType: InheritanceFlags
  fullName: System.Security.AccessControl.InheritanceFlags
- uid: System.Security.AccessControl.PropagationFlags
  commentId: T:System.Security.AccessControl.PropagationFlags
  parent: System.Security.AccessControl
  isExternal: false
  name: PropagationFlags
  nameWithType: PropagationFlags
  fullName: System.Security.AccessControl.PropagationFlags
- uid: System.Security.Principal
  commentId: N:System.Security.Principal
  isExternal: false
  name: System.Security.Principal
  nameWithType: System.Security.Principal
  fullName: System.Security.Principal
- uid: System.Security.AccessControl.ObjectAceFlags
  commentId: T:System.Security.AccessControl.ObjectAceFlags
  parent: System.Security.AccessControl
  isExternal: false
  name: ObjectAceFlags
  nameWithType: ObjectAceFlags
  fullName: System.Security.AccessControl.ObjectAceFlags
- uid: System.Guid
  commentId: T:System.Guid
  parent: System
  isExternal: false
  name: Guid
  nameWithType: Guid
  fullName: System.Guid
- uid: System.Security.AccessControl.ObjectAuditRule
  commentId: T:System.Security.AccessControl.ObjectAuditRule
  parent: System.Security.AccessControl
  isExternal: false
  name: ObjectAuditRule
  nameWithType: ObjectAuditRule
  fullName: System.Security.AccessControl.ObjectAuditRule
