items:
- uid: System.Linq.IQueryable
  commentId: T:System.Linq.IQueryable
  id: IQueryable
  parent: System.Linq
  children:
  - System.Linq.IQueryable.ElementType
  - System.Linq.IQueryable.Expression
  - System.Linq.IQueryable.Provider
  langs:
  - csharp
  - vb
  name: IQueryable
  fullName: System.Linq.IQueryable
  type: Interface
  source:
    remote:
      path: src/System.Linq.Expressions/ref/System.Linq.Expressions.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: IQueryable
    path: src/System.Linq.Expressions/ref/System.Linq.Expressions.cs
    startLine: 16
  assemblies:
  - System.Linq.Expressions
  namespace: System.Linq
  summary: "\n<p>Provides functionality to evaluate queries against a specific data source wherein the type of the data is not specified.</p>\n"
  syntax:
    content: 'public interface IQueryable : IEnumerable'
    content.vb: >-
      Public Interface IQueryable
          Inherits IEnumerable
  seealso:
  - type: System.Linq.Queryable
    commentId: T:System.Linq.Queryable
  - type: System.Linq.IQueryable`1
    commentId: T:System.Linq.IQueryable`1
  inheritedMembers:
  - System.Collections.IEnumerable.GetEnumerator
  modifiers.csharp:
  - public
  - interface
  modifiers.vb:
  - Public
  - Interface
  nameWithType: IQueryable
  extensionMethods:
  - System.Collections.IEnumerable.System.Linq.Queryable.AsQueryable
  - System.Collections.IEnumerable.System.Linq.ParallelEnumerable.AsParallel
  - System.Collections.IEnumerable.System.Linq.Enumerable.Cast``1
  - System.Collections.IEnumerable.System.Linq.Enumerable.OfType``1
- uid: System.Linq.IQueryable.ElementType
  commentId: P:System.Linq.IQueryable.ElementType
  id: ElementType
  parent: System.Linq.IQueryable
  langs:
  - csharp
  - vb
  name: ElementType
  fullName: System.Linq.IQueryable.ElementType
  type: Property
  source:
    remote:
      path: src/System.Linq.Expressions/ref/System.Linq.Expressions.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: ElementType
    path: src/System.Linq.Expressions/ref/System.Linq.Expressions.cs
    startLine: 18
  assemblies:
  - System.Linq.Expressions
  namespace: System.Linq
  summary: "\n<p>Gets the type of the element(s) that are returned when the expression tree associated with this instance of <xref href=\"System.Linq.IQueryable\" data-throw-if-not-resolved=\"false\"></xref> is executed.</p>\n"
  syntax:
    content: Type ElementType { get; }
    content.vb: ReadOnly Property ElementType As Type
    parameters: []
    return:
      type: System.Type
      description: "\n<p>A <xref href=\"System.Type\" data-throw-if-not-resolved=\"false\"></xref> that represents the type of the element(s) that are returned when the expression tree associated with this object is executed.</p>\n"
  modifiers.csharp:
  - get
  modifiers.vb:
  - ReadOnly
  nameWithType: IQueryable.ElementType
- uid: System.Linq.IQueryable.Expression
  commentId: P:System.Linq.IQueryable.Expression
  id: Expression
  parent: System.Linq.IQueryable
  langs:
  - csharp
  - vb
  name: Expression
  fullName: System.Linq.IQueryable.Expression
  type: Property
  source:
    remote:
      path: src/System.Linq.Expressions/ref/System.Linq.Expressions.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: Expression
    path: src/System.Linq.Expressions/ref/System.Linq.Expressions.cs
    startLine: 19
  assemblies:
  - System.Linq.Expressions
  namespace: System.Linq
  summary: "\n<p>Gets the expression tree that is associated with the instance of <xref href=\"System.Linq.IQueryable\" data-throw-if-not-resolved=\"false\"></xref>.</p>\n"
  syntax:
    content: Expression Expression { get; }
    content.vb: ReadOnly Property Expression As Expression
    parameters: []
    return:
      type: System.Linq.Expressions.Expression
      description: "\n<p>The <xref href=\"System.Linq.Expressions.Expression\" data-throw-if-not-resolved=\"false\"></xref> that is associated with this instance of <xref href=\"System.Linq.IQueryable\" data-throw-if-not-resolved=\"false\"></xref>.</p>\n"
  modifiers.csharp:
  - get
  modifiers.vb:
  - ReadOnly
  nameWithType: IQueryable.Expression
- uid: System.Linq.IQueryable.Provider
  commentId: P:System.Linq.IQueryable.Provider
  id: Provider
  parent: System.Linq.IQueryable
  langs:
  - csharp
  - vb
  name: Provider
  fullName: System.Linq.IQueryable.Provider
  type: Property
  source:
    remote:
      path: src/System.Linq.Expressions/ref/System.Linq.Expressions.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: Provider
    path: src/System.Linq.Expressions/ref/System.Linq.Expressions.cs
    startLine: 20
  assemblies:
  - System.Linq.Expressions
  namespace: System.Linq
  summary: "\n<p>Gets the query provider that is associated with this data source.</p>\n"
  syntax:
    content: IQueryProvider Provider { get; }
    content.vb: ReadOnly Property Provider As IQueryProvider
    parameters: []
    return:
      type: System.Linq.IQueryProvider
      description: "\n<p>The <xref href=\"System.Linq.IQueryProvider\" data-throw-if-not-resolved=\"false\"></xref> that is associated with this data source.</p>\n"
  modifiers.csharp:
  - get
  modifiers.vb:
  - ReadOnly
  nameWithType: IQueryable.Provider
references:
- uid: System.Linq
  isExternal: false
  name: System.Linq
  fullName: System.Linq
  commentId: N:System.Linq
  nameWithType: System.Linq
- uid: System.Collections.IEnumerable.GetEnumerator
  parent: System.Collections.IEnumerable
  isExternal: false
  name: GetEnumerator()
  fullName: System.Collections.IEnumerable.GetEnumerator()
  spec.csharp:
  - uid: System.Collections.IEnumerable.GetEnumerator
    name: GetEnumerator
    fullName: System.Collections.IEnumerable.GetEnumerator
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Collections.IEnumerable.GetEnumerator
    name: GetEnumerator
    fullName: System.Collections.IEnumerable.GetEnumerator
  - name: (
    fullName: (
  - name: )
    fullName: )
  commentId: M:System.Collections.IEnumerable.GetEnumerator
  nameWithType: IEnumerable.GetEnumerator()
- uid: System.Collections.IEnumerable.System.Linq.Queryable.AsQueryable
  parent: System.Linq.Queryable
  definition: System.Linq.Queryable.AsQueryable(System.Collections.IEnumerable)
  name: AsQueryable()
  fullName: System.Linq.Queryable.AsQueryable()
  spec.csharp:
  - uid: System.Linq.Queryable.AsQueryable
    name: AsQueryable
    fullName: System.Linq.Queryable.AsQueryable
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Linq.Queryable.AsQueryable
    name: AsQueryable
    fullName: System.Linq.Queryable.AsQueryable
  - name: (
    fullName: (
  - name: )
    fullName: )
  commentId: M:System.Linq.Queryable.AsQueryable(System.Collections.IEnumerable)
  nameWithType: Queryable.AsQueryable()
- uid: System.Collections.IEnumerable.System.Linq.ParallelEnumerable.AsParallel
  parent: System.Linq.ParallelEnumerable
  definition: System.Linq.ParallelEnumerable.AsParallel(System.Collections.IEnumerable)
  name: AsParallel()
  fullName: System.Linq.ParallelEnumerable.AsParallel()
  spec.csharp:
  - uid: System.Linq.ParallelEnumerable.AsParallel
    name: AsParallel
    fullName: System.Linq.ParallelEnumerable.AsParallel
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Linq.ParallelEnumerable.AsParallel
    name: AsParallel
    fullName: System.Linq.ParallelEnumerable.AsParallel
  - name: (
    fullName: (
  - name: )
    fullName: )
  commentId: M:System.Linq.ParallelEnumerable.AsParallel(System.Collections.IEnumerable)
  nameWithType: ParallelEnumerable.AsParallel()
- uid: System.Collections.IEnumerable.System.Linq.Enumerable.Cast``1
  parent: System.Linq.Enumerable
  definition: System.Linq.Enumerable.Cast``1(System.Collections.IEnumerable)
  name: Cast<TResult>()
  fullName: System.Linq.Enumerable.Cast<TResult>()
  fullname.vb: System.Linq.Enumerable.Cast(Of TResult)()
  name.vb: Cast(Of TResult)()
  spec.csharp:
  - uid: System.Linq.Enumerable.Cast``1
    name: Cast<TResult>
    fullName: System.Linq.Enumerable.Cast<TResult>
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Linq.Enumerable.Cast``1
    name: Cast(Of TResult)
    fullName: System.Linq.Enumerable.Cast(Of TResult)
  - name: (
    fullName: (
  - name: )
    fullName: )
  commentId: M:System.Linq.Enumerable.Cast``1(System.Collections.IEnumerable)
  nameWithType: Enumerable.Cast<TResult>()
  nameWithType.vb: Enumerable.Cast(Of TResult)()
- uid: System.Collections.IEnumerable.System.Linq.Enumerable.OfType``1
  parent: System.Linq.Enumerable
  definition: System.Linq.Enumerable.OfType``1(System.Collections.IEnumerable)
  name: OfType<TResult>()
  fullName: System.Linq.Enumerable.OfType<TResult>()
  fullname.vb: System.Linq.Enumerable.OfType(Of TResult)()
  name.vb: OfType(Of TResult)()
  spec.csharp:
  - uid: System.Linq.Enumerable.OfType``1
    name: OfType<TResult>
    fullName: System.Linq.Enumerable.OfType<TResult>
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Linq.Enumerable.OfType``1
    name: OfType(Of TResult)
    fullName: System.Linq.Enumerable.OfType(Of TResult)
  - name: (
    fullName: (
  - name: )
    fullName: )
  commentId: M:System.Linq.Enumerable.OfType``1(System.Collections.IEnumerable)
  nameWithType: Enumerable.OfType<TResult>()
  nameWithType.vb: Enumerable.OfType(Of TResult)()
- uid: System.Collections.IEnumerable
  parent: System.Collections
  isExternal: false
  name: IEnumerable
  fullName: System.Collections.IEnumerable
  commentId: T:System.Collections.IEnumerable
  nameWithType: IEnumerable
- uid: System.Linq.Queryable.AsQueryable(System.Collections.IEnumerable)
  isExternal: true
  name: AsQueryable(IEnumerable)
  fullName: System.Linq.Queryable.AsQueryable(System.Collections.IEnumerable)
  spec.csharp:
  - uid: System.Linq.Queryable.AsQueryable(System.Collections.IEnumerable)
    name: AsQueryable
    fullName: System.Linq.Queryable.AsQueryable
  - name: (
    fullName: (
  - uid: System.Collections.IEnumerable
    name: IEnumerable
    fullName: System.Collections.IEnumerable
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Linq.Queryable.AsQueryable(System.Collections.IEnumerable)
    name: AsQueryable
    fullName: System.Linq.Queryable.AsQueryable
  - name: (
    fullName: (
  - uid: System.Collections.IEnumerable
    name: IEnumerable
    fullName: System.Collections.IEnumerable
    isExternal: true
  - name: )
    fullName: )
  commentId: M:System.Linq.Queryable.AsQueryable(System.Collections.IEnumerable)
  nameWithType: Queryable.AsQueryable(IEnumerable)
- uid: System.Linq.Queryable
  parent: System.Linq
  isExternal: false
  name: Queryable
  fullName: System.Linq.Queryable
  commentId: T:System.Linq.Queryable
  nameWithType: Queryable
- uid: System.Linq.ParallelEnumerable.AsParallel(System.Collections.IEnumerable)
  isExternal: true
  name: AsParallel(IEnumerable)
  fullName: System.Linq.ParallelEnumerable.AsParallel(System.Collections.IEnumerable)
  spec.csharp:
  - uid: System.Linq.ParallelEnumerable.AsParallel(System.Collections.IEnumerable)
    name: AsParallel
    fullName: System.Linq.ParallelEnumerable.AsParallel
  - name: (
    fullName: (
  - uid: System.Collections.IEnumerable
    name: IEnumerable
    fullName: System.Collections.IEnumerable
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Linq.ParallelEnumerable.AsParallel(System.Collections.IEnumerable)
    name: AsParallel
    fullName: System.Linq.ParallelEnumerable.AsParallel
  - name: (
    fullName: (
  - uid: System.Collections.IEnumerable
    name: IEnumerable
    fullName: System.Collections.IEnumerable
    isExternal: true
  - name: )
    fullName: )
  commentId: M:System.Linq.ParallelEnumerable.AsParallel(System.Collections.IEnumerable)
  nameWithType: ParallelEnumerable.AsParallel(IEnumerable)
- uid: System.Linq.ParallelEnumerable
  parent: System.Linq
  isExternal: false
  name: ParallelEnumerable
  fullName: System.Linq.ParallelEnumerable
  commentId: T:System.Linq.ParallelEnumerable
  nameWithType: ParallelEnumerable
- uid: System.Linq.Enumerable.Cast``1(System.Collections.IEnumerable)
  isExternal: true
  name: Cast<TResult>(IEnumerable)
  fullName: System.Linq.Enumerable.Cast<TResult>(System.Collections.IEnumerable)
  fullname.vb: System.Linq.Enumerable.Cast(Of TResult)(System.Collections.IEnumerable)
  name.vb: Cast(Of TResult)(IEnumerable)
  spec.csharp:
  - uid: System.Linq.Enumerable.Cast``1(System.Collections.IEnumerable)
    name: Cast<TResult>
    fullName: System.Linq.Enumerable.Cast<TResult>
  - name: (
    fullName: (
  - uid: System.Collections.IEnumerable
    name: IEnumerable
    fullName: System.Collections.IEnumerable
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Linq.Enumerable.Cast``1(System.Collections.IEnumerable)
    name: Cast(Of TResult)
    fullName: System.Linq.Enumerable.Cast(Of TResult)
  - name: (
    fullName: (
  - uid: System.Collections.IEnumerable
    name: IEnumerable
    fullName: System.Collections.IEnumerable
    isExternal: true
  - name: )
    fullName: )
  commentId: M:System.Linq.Enumerable.Cast``1(System.Collections.IEnumerable)
  nameWithType: Enumerable.Cast<TResult>(IEnumerable)
  nameWithType.vb: Enumerable.Cast(Of TResult)(IEnumerable)
- uid: System.Linq.Enumerable
  parent: System.Linq
  isExternal: false
  name: Enumerable
  fullName: System.Linq.Enumerable
  commentId: T:System.Linq.Enumerable
  nameWithType: Enumerable
- uid: System.Linq.Enumerable.OfType``1(System.Collections.IEnumerable)
  isExternal: true
  name: OfType<TResult>(IEnumerable)
  fullName: System.Linq.Enumerable.OfType<TResult>(System.Collections.IEnumerable)
  fullname.vb: System.Linq.Enumerable.OfType(Of TResult)(System.Collections.IEnumerable)
  name.vb: OfType(Of TResult)(IEnumerable)
  spec.csharp:
  - uid: System.Linq.Enumerable.OfType``1(System.Collections.IEnumerable)
    name: OfType<TResult>
    fullName: System.Linq.Enumerable.OfType<TResult>
  - name: (
    fullName: (
  - uid: System.Collections.IEnumerable
    name: IEnumerable
    fullName: System.Collections.IEnumerable
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Linq.Enumerable.OfType``1(System.Collections.IEnumerable)
    name: OfType(Of TResult)
    fullName: System.Linq.Enumerable.OfType(Of TResult)
  - name: (
    fullName: (
  - uid: System.Collections.IEnumerable
    name: IEnumerable
    fullName: System.Collections.IEnumerable
    isExternal: true
  - name: )
    fullName: )
  commentId: M:System.Linq.Enumerable.OfType``1(System.Collections.IEnumerable)
  nameWithType: Enumerable.OfType<TResult>(IEnumerable)
  nameWithType.vb: Enumerable.OfType(Of TResult)(IEnumerable)
- uid: System.Collections
  isExternal: false
  name: System.Collections
  fullName: System.Collections
  commentId: N:System.Collections
  nameWithType: System.Collections
- uid: System.Type
  parent: System
  isExternal: false
  name: Type
  fullName: System.Type
  commentId: T:System.Type
  nameWithType: Type
- uid: System
  isExternal: false
  name: System
  fullName: System
  commentId: N:System
  nameWithType: System
- uid: System.Linq.Expressions.Expression
  parent: System.Linq.Expressions
  isExternal: false
  name: Expression
  fullName: System.Linq.Expressions.Expression
  commentId: T:System.Linq.Expressions.Expression
  nameWithType: Expression
- uid: System.Linq.Expressions
  isExternal: false
  name: System.Linq.Expressions
  fullName: System.Linq.Expressions
  commentId: N:System.Linq.Expressions
  nameWithType: System.Linq.Expressions
- uid: System.Linq.IQueryProvider
  parent: System.Linq
  isExternal: false
  name: IQueryProvider
  fullName: System.Linq.IQueryProvider
  commentId: T:System.Linq.IQueryProvider
  nameWithType: IQueryProvider
