items:
- uid: System.Security.Cryptography.Pkcs.SubjectIdentifierOrKey
  commentId: T:System.Security.Cryptography.Pkcs.SubjectIdentifierOrKey
  id: SubjectIdentifierOrKey
  parent: System.Security.Cryptography.Pkcs
  children:
  - System.Security.Cryptography.Pkcs.SubjectIdentifierOrKey.Type
  - System.Security.Cryptography.Pkcs.SubjectIdentifierOrKey.Value
  langs:
  - csharp
  - vb
  name: SubjectIdentifierOrKey
  fullName: System.Security.Cryptography.Pkcs.SubjectIdentifierOrKey
  type: Class
  source:
    remote:
      path: src/System.Security.Cryptography.Pkcs/src/System/Security/Cryptography/Pkcs/SubjectIdentifierOrKey.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: SubjectIdentifierOrKey
    path: src/System.Security.Cryptography.Pkcs/src/System/Security/Cryptography/Pkcs/SubjectIdentifierOrKey.cs
    startLine: 10
  assemblies:
  - System.Security.Cryptography.Pkcs
  namespace: System.Security.Cryptography.Pkcs
  summary: "\n<p>The <xref href=\"System.Security.Cryptography.Pkcs.SubjectIdentifierOrKey\" data-throw-if-not-resolved=\"false\"></xref> class defines the type of the identifier of a subject, such as a <xref href=\"System.Security.Cryptography.Pkcs.CmsSigner\" data-throw-if-not-resolved=\"false\"></xref> or a <xref href=\"System.Security.Cryptography.Pkcs.CmsRecipient\" data-throw-if-not-resolved=\"false\"></xref>.  The subject can be identified by the certificate issuer and serial number, the hash of the subject key, or the subject key. </p>\n"
  syntax:
    content: public sealed class SubjectIdentifierOrKey
    content.vb: Public NotInheritable Class SubjectIdentifierOrKey
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  modifiers.csharp:
  - public
  - sealed
  - class
  modifiers.vb:
  - Public
  - NotInheritable
  - Class
  nameWithType: SubjectIdentifierOrKey
- uid: System.Security.Cryptography.Pkcs.SubjectIdentifierOrKey.Type
  commentId: P:System.Security.Cryptography.Pkcs.SubjectIdentifierOrKey.Type
  id: Type
  parent: System.Security.Cryptography.Pkcs.SubjectIdentifierOrKey
  langs:
  - csharp
  - vb
  name: Type
  fullName: System.Security.Cryptography.Pkcs.SubjectIdentifierOrKey.Type
  type: Property
  source:
    remote:
      path: src/System.Security.Cryptography.Pkcs/src/System/Security/Cryptography/Pkcs/SubjectIdentifierOrKey.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: Type
    path: src/System.Security.Cryptography.Pkcs/src/System/Security/Cryptography/Pkcs/SubjectIdentifierOrKey.cs
    startLine: 40
  assemblies:
  - System.Security.Cryptography.Pkcs
  namespace: System.Security.Cryptography.Pkcs
  summary: "\n<p>The <xref href=\"System.Security.Cryptography.Pkcs.SubjectIdentifierOrKey.Type\" data-throw-if-not-resolved=\"false\"></xref> property retrieves the type of subject identifier or key. The subject can be identified by the certificate issuer and serial number, the hash of the subject key, or the subject key.</p>\n"
  syntax:
    content: public SubjectIdentifierOrKeyType Type { get; }
    content.vb: Public ReadOnly Property Type As SubjectIdentifierOrKeyType
    parameters: []
    return:
      type: System.Security.Cryptography.Pkcs.SubjectIdentifierOrKeyType
      description: "\n<p>A member of the <xref href=\"System.Security.Cryptography.Pkcs.SubjectIdentifierOrKeyType\" data-throw-if-not-resolved=\"false\"></xref>  enumeration that specifies the type of subject identifier.</p>\n"
  seealso:
  - type: System.Security.Cryptography.Pkcs.SubjectIdentifierOrKey.Value
    commentId: P:System.Security.Cryptography.Pkcs.SubjectIdentifierOrKey.Value
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
  nameWithType: SubjectIdentifierOrKey.Type
- uid: System.Security.Cryptography.Pkcs.SubjectIdentifierOrKey.Value
  commentId: P:System.Security.Cryptography.Pkcs.SubjectIdentifierOrKey.Value
  id: Value
  parent: System.Security.Cryptography.Pkcs.SubjectIdentifierOrKey
  langs:
  - csharp
  - vb
  name: Value
  fullName: System.Security.Cryptography.Pkcs.SubjectIdentifierOrKey.Value
  type: Property
  source:
    remote:
      path: src/System.Security.Cryptography.Pkcs/src/System/Security/Cryptography/Pkcs/SubjectIdentifierOrKey.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: Value
    path: src/System.Security.Cryptography.Pkcs/src/System/Security/Cryptography/Pkcs/SubjectIdentifierOrKey.cs
    startLine: 42
  assemblies:
  - System.Security.Cryptography.Pkcs
  namespace: System.Security.Cryptography.Pkcs
  summary: "\n<p>The <xref href=\"System.Security.Cryptography.Pkcs.SubjectIdentifierOrKey.Value\" data-throw-if-not-resolved=\"false\"></xref> property retrieves the value of the subject identifier or  key. Use the <xref href=\"System.Security.Cryptography.Pkcs.SubjectIdentifierOrKey.Type\" data-throw-if-not-resolved=\"false\"></xref> property to determine the type of subject identifier or key, and use the <xref href=\"System.Security.Cryptography.Pkcs.SubjectIdentifierOrKey.Value\" data-throw-if-not-resolved=\"false\"></xref> property to retrieve the corresponding value.</p>\n"
  syntax:
    content: public object Value { get; }
    content.vb: Public ReadOnly Property Value As Object
    parameters: []
    return:
      type: System.Object
      description: "\n<p>An <xref href=\"System.Object\" data-throw-if-not-resolved=\"false\"></xref> object that represents the value of the subject identifier or key. This <xref href=\"System.Object\" data-throw-if-not-resolved=\"false\"></xref> can be one of the following objects as determined by the <xref href=\"System.Security.Cryptography.Pkcs.SubjectIdentifierOrKey.Type\" data-throw-if-not-resolved=\"false\"></xref> property.</p>\n<p>\n<xref href=\"System.Security.Cryptography.Pkcs.SubjectIdentifierOrKey.Type\" data-throw-if-not-resolved=\"false\"></xref> property</p>\n<p>Object</p>\n<table><tbody><tr><td>\n<p>IssuerAndSerialNumber</p>\n</td><td>\n<p>\n<xref href=\"System.Security.Cryptography.Xml.X509IssuerSerial\" data-throw-if-not-resolved=\"false\"></xref>\n</p>\n</td></tr><tr><td>\n<p>SubjectKeyIdentifier</p>\n</td><td>\n<p>\n<xref href=\"System.String\" data-throw-if-not-resolved=\"false\"></xref>\n</p>\n</td></tr><tr><td>\n<p>PublicKeyInfo</p>\n</td><td>\n<p>\n<xref href=\"System.Security.Cryptography.Pkcs.PublicKeyInfo\" data-throw-if-not-resolved=\"false\"></xref>\n</p>\n</td></tr></tbody></table>\n"
  seealso:
  - type: System.Security.Cryptography.Pkcs.SubjectIdentifierOrKey.Type
    commentId: P:System.Security.Cryptography.Pkcs.SubjectIdentifierOrKey.Type
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
  nameWithType: SubjectIdentifierOrKey.Value
references:
- uid: System.Security.Cryptography.Pkcs
  isExternal: false
  name: System.Security.Cryptography.Pkcs
  fullName: System.Security.Cryptography.Pkcs
  nameWithType: System.Security.Cryptography.Pkcs
  commentId: N:System.Security.Cryptography.Pkcs
- uid: System.Object
  parent: System
  isExternal: false
  name: Object
  fullName: System.Object
  nameWithType: Object
  commentId: T:System.Object
- uid: System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  nameWithType: Object.ToString()
  commentId: M:System.Object.ToString
- uid: System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
  nameWithType: Object.Equals(Object)
  commentId: M:System.Object.Equals(System.Object)
- uid: System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
  nameWithType: Object.Equals(Object, Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
  nameWithType: Object.ReferenceEquals(Object, Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
- uid: System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  nameWithType: Object.GetHashCode()
  commentId: M:System.Object.GetHashCode
- uid: System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  nameWithType: Object.GetType()
  commentId: M:System.Object.GetType
- uid: System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  nameWithType: Object.MemberwiseClone()
  commentId: M:System.Object.MemberwiseClone
- uid: System
  isExternal: false
  name: System
  fullName: System
  nameWithType: System
  commentId: N:System
- uid: System.Security.Cryptography.Pkcs.SubjectIdentifierOrKeyType
  parent: System.Security.Cryptography.Pkcs
  isExternal: false
  name: SubjectIdentifierOrKeyType
  fullName: System.Security.Cryptography.Pkcs.SubjectIdentifierOrKeyType
  nameWithType: SubjectIdentifierOrKeyType
  commentId: T:System.Security.Cryptography.Pkcs.SubjectIdentifierOrKeyType
