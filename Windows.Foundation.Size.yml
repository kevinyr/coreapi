items:
- uid: Windows.Foundation.Size
  commentId: T:Windows.Foundation.Size
  id: Size
  parent: Windows.Foundation
  children:
  - Windows.Foundation.Size.#ctor(System.Double,System.Double)
  - Windows.Foundation.Size.Empty
  - Windows.Foundation.Size.Equals(System.Object)
  - Windows.Foundation.Size.Equals(Windows.Foundation.Size)
  - Windows.Foundation.Size.GetHashCode
  - Windows.Foundation.Size.Height
  - Windows.Foundation.Size.IsEmpty
  - Windows.Foundation.Size.op_Equality(Windows.Foundation.Size,Windows.Foundation.Size)
  - Windows.Foundation.Size.op_Inequality(Windows.Foundation.Size,Windows.Foundation.Size)
  - Windows.Foundation.Size.ToString
  - Windows.Foundation.Size.Width
  langs:
  - csharp
  - vb
  name: Size
  fullName: Windows.Foundation.Size
  type: Struct
  source:
    remote:
      path: src/System.Runtime.WindowsRuntime/ref/System.Runtime.WindowsRuntime.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: Size
    path: src/System.Runtime.WindowsRuntime/ref/System.Runtime.WindowsRuntime.cs
    startLine: 184
  assemblies:
  - System.Runtime.WindowsRuntime
  namespace: Windows.Foundation
  summary: Represents number values that specify a height and width.
  syntax:
    content: >-
      [SecurityCritical]

      [StructLayout(LayoutKind.Sequential)]

      public struct Size
    content.vb: >-
      <SecurityCritical>

      <StructLayout(LayoutKind.Sequential)>

      Public Structure Size
  inheritedMembers:
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetType
  attributes:
  - type: System.Security.SecurityCriticalAttribute
    ctor: System.Security.SecurityCriticalAttribute.#ctor
    arguments: []
  - type: System.Runtime.InteropServices.StructLayoutAttribute
    ctor: System.Runtime.InteropServices.StructLayoutAttribute.#ctor(System.Runtime.InteropServices.LayoutKind)
    arguments:
    - type: System.Runtime.InteropServices.LayoutKind
      value: 0
  modifiers.csharp:
  - public
  - struct
  modifiers.vb:
  - Public
  - Structure
  nameWithType: Size
- uid: Windows.Foundation.Size.#ctor(System.Double,System.Double)
  commentId: M:Windows.Foundation.Size.#ctor(System.Double,System.Double)
  id: '#ctor(System.Double,System.Double)'
  parent: Windows.Foundation.Size
  langs:
  - csharp
  - vb
  name: Size(Double, Double)
  fullName: Windows.Foundation.Size.Size(System.Double, System.Double)
  type: Constructor
  source:
    remote:
      path: src/System.Runtime.WindowsRuntime/ref/System.Runtime.WindowsRuntime.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: .ctor
    path: src/System.Runtime.WindowsRuntime/ref/System.Runtime.WindowsRuntime.cs
    startLine: 188
  assemblies:
  - System.Runtime.WindowsRuntime
  namespace: Windows.Foundation
  summary: Initializes a new instance of the Size structure and assigns it an initial width and height.
  syntax:
    content: public Size(double width, double height)
    content.vb: Public Sub New(width As Double, height As Double)
    parameters:
    - id: width
      type: System.Double
      description: The initial width of the instance of Size.
    - id: height
      type: System.Double
      description: The initial height of the instance of Size.
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  nameWithType: Size.Size(Double, Double)
- uid: Windows.Foundation.Size.Empty
  commentId: P:Windows.Foundation.Size.Empty
  id: Empty
  parent: Windows.Foundation.Size
  langs:
  - csharp
  - vb
  name: Empty
  fullName: Windows.Foundation.Size.Empty
  type: Property
  source:
    remote:
      path: src/System.Runtime.WindowsRuntime/ref/System.Runtime.WindowsRuntime.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: Empty
    path: src/System.Runtime.WindowsRuntime/ref/System.Runtime.WindowsRuntime.cs
    startLine: 189
  assemblies:
  - System.Runtime.WindowsRuntime
  namespace: Windows.Foundation
  summary: Gets a value that represents an empty Size.
  syntax:
    content: public static Size Empty { get; }
    content.vb: Public Shared ReadOnly Property Empty As Size
    parameters: []
    return:
      type: Windows.Foundation.Size
      description: An empty instance of Size.
  modifiers.csharp:
  - public
  - static
  - get
  modifiers.vb:
  - Public
  - Shared
  - ReadOnly
  nameWithType: Size.Empty
- uid: Windows.Foundation.Size.Height
  commentId: P:Windows.Foundation.Size.Height
  id: Height
  parent: Windows.Foundation.Size
  langs:
  - csharp
  - vb
  name: Height
  fullName: Windows.Foundation.Size.Height
  type: Property
  source:
    remote:
      path: src/System.Runtime.WindowsRuntime/ref/System.Runtime.WindowsRuntime.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: Height
    path: src/System.Runtime.WindowsRuntime/ref/System.Runtime.WindowsRuntime.cs
    startLine: 190
  assemblies:
  - System.Runtime.WindowsRuntime
  namespace: Windows.Foundation
  summary: Gets or sets the height of this instance of Size.
  syntax:
    content: public double Height { get; set; }
    content.vb: Public Property Height As Double
    parameters: []
    return:
      type: System.Double
      description: "The Height of this instance of Size, in pixels. he data type is System.Double for C# or Microsoft Visual Basic, or float for Visual C++ component extensions (C++/CX). The default is 0. The value cannot be negative."
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
  nameWithType: Size.Height
- uid: Windows.Foundation.Size.IsEmpty
  commentId: P:Windows.Foundation.Size.IsEmpty
  id: IsEmpty
  parent: Windows.Foundation.Size
  langs:
  - csharp
  - vb
  name: IsEmpty
  fullName: Windows.Foundation.Size.IsEmpty
  type: Property
  source:
    remote:
      path: src/System.Runtime.WindowsRuntime/ref/System.Runtime.WindowsRuntime.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: IsEmpty
    path: src/System.Runtime.WindowsRuntime/ref/System.Runtime.WindowsRuntime.cs
    startLine: 191
  assemblies:
  - System.Runtime.WindowsRuntime
  namespace: Windows.Foundation
  summary: Gets a value that indicates whether this instance of Size is Empty.
  syntax:
    content: public bool IsEmpty { get; }
    content.vb: Public ReadOnly Property IsEmpty As Boolean
    parameters: []
    return:
      type: System.Boolean
      description: true if this instance of size is Empty; otherwise false.
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
  nameWithType: Size.IsEmpty
- uid: Windows.Foundation.Size.Width
  commentId: P:Windows.Foundation.Size.Width
  id: Width
  parent: Windows.Foundation.Size
  langs:
  - csharp
  - vb
  name: Width
  fullName: Windows.Foundation.Size.Width
  type: Property
  source:
    remote:
      path: src/System.Runtime.WindowsRuntime/ref/System.Runtime.WindowsRuntime.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: Width
    path: src/System.Runtime.WindowsRuntime/ref/System.Runtime.WindowsRuntime.cs
    startLine: 192
  assemblies:
  - System.Runtime.WindowsRuntime
  namespace: Windows.Foundation
  summary: Gets or sets the width of this instance of Size.
  syntax:
    content: public double Width { get; set; }
    content.vb: Public Property Width As Double
    parameters: []
    return:
      type: System.Double
      description: "The Width of this instance of Size, in pixels. The data type is System.Double for C# or Microsoft Visual Basic, or float for Visual C++ component extensions (C++/CX). The default value is 0. The value cannot be negative."
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
  nameWithType: Size.Width
- uid: Windows.Foundation.Size.Equals(System.Object)
  commentId: M:Windows.Foundation.Size.Equals(System.Object)
  id: Equals(System.Object)
  parent: Windows.Foundation.Size
  langs:
  - csharp
  - vb
  name: Equals(Object)
  fullName: Windows.Foundation.Size.Equals(System.Object)
  type: Method
  source:
    remote:
      path: src/System.Runtime.WindowsRuntime/ref/System.Runtime.WindowsRuntime.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: Equals
    path: src/System.Runtime.WindowsRuntime/ref/System.Runtime.WindowsRuntime.cs
    startLine: 193
  assemblies:
  - System.Runtime.WindowsRuntime
  namespace: Windows.Foundation
  summary: Determines whether the specified object is equal to a Size.
  syntax:
    content: >-
      [SecuritySafeCritical]

      public override bool Equals(object o)
    content.vb: >-
      <SecuritySafeCritical>

      Public Overrides Function Equals(o As Object) As Boolean
    parameters:
    - id: o
      type: System.Object
      description: Object to check for equality.
    return:
      type: System.Boolean
      description: true if o is equal to this Size; otherwise, false.
  overridden: System.ValueType.Equals(System.Object)
  attributes:
  - type: System.Security.SecuritySafeCriticalAttribute
    ctor: System.Security.SecuritySafeCriticalAttribute.#ctor
    arguments: []
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
  nameWithType: Size.Equals(Object)
- uid: Windows.Foundation.Size.Equals(Windows.Foundation.Size)
  commentId: M:Windows.Foundation.Size.Equals(Windows.Foundation.Size)
  id: Equals(Windows.Foundation.Size)
  parent: Windows.Foundation.Size
  langs:
  - csharp
  - vb
  name: Equals(Size)
  fullName: Windows.Foundation.Size.Equals(Windows.Foundation.Size)
  type: Method
  source:
    remote:
      path: src/System.Runtime.WindowsRuntime/ref/System.Runtime.WindowsRuntime.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: Equals
    path: src/System.Runtime.WindowsRuntime/ref/System.Runtime.WindowsRuntime.cs
    startLine: 195
  assemblies:
  - System.Runtime.WindowsRuntime
  namespace: Windows.Foundation
  syntax:
    content: public bool Equals(Size value)
    content.vb: Public Function Equals(value As Size) As Boolean
    parameters:
    - id: value
      type: Windows.Foundation.Size
    return:
      type: System.Boolean
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  nameWithType: Size.Equals(Size)
- uid: Windows.Foundation.Size.GetHashCode
  commentId: M:Windows.Foundation.Size.GetHashCode
  id: GetHashCode
  parent: Windows.Foundation.Size
  langs:
  - csharp
  - vb
  name: GetHashCode()
  fullName: Windows.Foundation.Size.GetHashCode()
  type: Method
  source:
    remote:
      path: src/System.Runtime.WindowsRuntime/ref/System.Runtime.WindowsRuntime.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: GetHashCode
    path: src/System.Runtime.WindowsRuntime/ref/System.Runtime.WindowsRuntime.cs
    startLine: 196
  assemblies:
  - System.Runtime.WindowsRuntime
  namespace: Windows.Foundation
  syntax:
    content: >-
      [SecuritySafeCritical]

      public override int GetHashCode()
    content.vb: >-
      <SecuritySafeCritical>

      Public Overrides Function GetHashCode As Integer
    return:
      type: System.Int32
  overridden: System.ValueType.GetHashCode
  attributes:
  - type: System.Security.SecuritySafeCriticalAttribute
    ctor: System.Security.SecuritySafeCriticalAttribute.#ctor
    arguments: []
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
  nameWithType: Size.GetHashCode()
- uid: Windows.Foundation.Size.op_Equality(Windows.Foundation.Size,Windows.Foundation.Size)
  commentId: M:Windows.Foundation.Size.op_Equality(Windows.Foundation.Size,Windows.Foundation.Size)
  id: op_Equality(Windows.Foundation.Size,Windows.Foundation.Size)
  parent: Windows.Foundation.Size
  langs:
  - csharp
  - vb
  name: Equality(Size, Size)
  fullName: Windows.Foundation.Size.Equality(Windows.Foundation.Size, Windows.Foundation.Size)
  type: Operator
  source:
    remote:
      path: src/System.Runtime.WindowsRuntime/ref/System.Runtime.WindowsRuntime.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: op_Equality
    path: src/System.Runtime.WindowsRuntime/ref/System.Runtime.WindowsRuntime.cs
    startLine: 198
  assemblies:
  - System.Runtime.WindowsRuntime
  namespace: Windows.Foundation
  summary: Compares two Size structures for equality.
  syntax:
    content: public static bool operator ==(Size size1, Size size2)
    content.vb: Public Shared Operator =(size1 As Size, size2 As Size) As Boolean
    parameters:
    - id: size1
      type: Windows.Foundation.Size
      description: The first Size structure to compare.
    - id: size2
      type: Windows.Foundation.Size
      description: The second Size structure to compare.
    return:
      type: System.Boolean
      description: true if all values of size1 and size2 are equal; otherwise, false.
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  nameWithType: Size.Equality(Size, Size)
- uid: Windows.Foundation.Size.op_Inequality(Windows.Foundation.Size,Windows.Foundation.Size)
  commentId: M:Windows.Foundation.Size.op_Inequality(Windows.Foundation.Size,Windows.Foundation.Size)
  id: op_Inequality(Windows.Foundation.Size,Windows.Foundation.Size)
  parent: Windows.Foundation.Size
  langs:
  - csharp
  - vb
  name: Inequality(Size, Size)
  fullName: Windows.Foundation.Size.Inequality(Windows.Foundation.Size, Windows.Foundation.Size)
  type: Operator
  source:
    remote:
      path: src/System.Runtime.WindowsRuntime/ref/System.Runtime.WindowsRuntime.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: op_Inequality
    path: src/System.Runtime.WindowsRuntime/ref/System.Runtime.WindowsRuntime.cs
    startLine: 199
  assemblies:
  - System.Runtime.WindowsRuntime
  namespace: Windows.Foundation
  syntax:
    content: public static bool operator !=(Size size1, Size size2)
    content.vb: Public Shared Operator <>(size1 As Size, size2 As Size) As Boolean
    parameters:
    - id: size1
      type: Windows.Foundation.Size
    - id: size2
      type: Windows.Foundation.Size
    return:
      type: System.Boolean
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  nameWithType: Size.Inequality(Size, Size)
- uid: Windows.Foundation.Size.ToString
  commentId: M:Windows.Foundation.Size.ToString
  id: ToString
  parent: Windows.Foundation.Size
  langs:
  - csharp
  - vb
  name: ToString()
  fullName: Windows.Foundation.Size.ToString()
  type: Method
  source:
    remote:
      path: src/System.Runtime.WindowsRuntime/ref/System.Runtime.WindowsRuntime.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: ToString
    path: src/System.Runtime.WindowsRuntime/ref/System.Runtime.WindowsRuntime.cs
    startLine: 200
  assemblies:
  - System.Runtime.WindowsRuntime
  namespace: Windows.Foundation
  syntax:
    content: >-
      [SecuritySafeCritical]

      public override string ToString()
    content.vb: >-
      <SecuritySafeCritical>

      Public Overrides Function ToString As String
    return:
      type: System.String
  overridden: System.ValueType.ToString
  attributes:
  - type: System.Security.SecuritySafeCriticalAttribute
    ctor: System.Security.SecuritySafeCriticalAttribute.#ctor
    arguments: []
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
  nameWithType: Size.ToString()
references:
- uid: Windows.Foundation
  isExternal: false
  name: Windows.Foundation
  fullName: Windows.Foundation
  commentId: N:Windows.Foundation
  nameWithType: Windows.Foundation
- uid: System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
  commentId: M:System.Object.Equals(System.Object,System.Object)
  nameWithType: Object.Equals(Object, Object)
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
- uid: System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  commentId: M:System.Object.GetType
  nameWithType: Object.GetType()
- uid: System.Object
  parent: System
  isExternal: false
  name: Object
  fullName: System.Object
  commentId: T:System.Object
  nameWithType: Object
- uid: System
  isExternal: false
  name: System
  fullName: System
  commentId: N:System
  nameWithType: System
- uid: System.Double
  parent: System
  isExternal: false
  name: Double
  fullName: System.Double
  commentId: T:System.Double
  nameWithType: Double
- uid: Windows.Foundation.Size
  parent: Windows.Foundation
  isExternal: false
  name: Size
  fullName: Windows.Foundation.Size
  commentId: T:Windows.Foundation.Size
  nameWithType: Size
- uid: System.Boolean
  parent: System
  isExternal: false
  name: Boolean
  fullName: System.Boolean
  commentId: T:System.Boolean
  nameWithType: Boolean
- uid: System.ValueType.Equals(System.Object)
  parent: System.ValueType
  isExternal: true
  name: Equals(Object)
  fullName: System.ValueType.Equals(System.Object)
  spec.csharp:
  - uid: System.ValueType.Equals(System.Object)
    name: Equals
    fullName: System.ValueType.Equals
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.ValueType.Equals(System.Object)
    name: Equals
    fullName: System.ValueType.Equals
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
  commentId: M:System.ValueType.Equals(System.Object)
  nameWithType: ValueType.Equals(Object)
- uid: System.ValueType
  parent: System
  isExternal: false
  name: ValueType
  fullName: System.ValueType
  commentId: T:System.ValueType
  nameWithType: ValueType
- uid: System.ValueType.GetHashCode
  parent: System.ValueType
  isExternal: false
  name: GetHashCode()
  fullName: System.ValueType.GetHashCode()
  spec.csharp:
  - uid: System.ValueType.GetHashCode
    name: GetHashCode
    fullName: System.ValueType.GetHashCode
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.ValueType.GetHashCode
    name: GetHashCode
    fullName: System.ValueType.GetHashCode
  - name: (
    fullName: (
  - name: )
    fullName: )
  commentId: M:System.ValueType.GetHashCode
  nameWithType: ValueType.GetHashCode()
- uid: System.Int32
  parent: System
  isExternal: false
  name: Int32
  fullName: System.Int32
  commentId: T:System.Int32
  nameWithType: Int32
- uid: System.ValueType.ToString
  parent: System.ValueType
  isExternal: false
  name: ToString()
  fullName: System.ValueType.ToString()
  spec.csharp:
  - uid: System.ValueType.ToString
    name: ToString
    fullName: System.ValueType.ToString
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.ValueType.ToString
    name: ToString
    fullName: System.ValueType.ToString
  - name: (
    fullName: (
  - name: )
    fullName: )
  commentId: M:System.ValueType.ToString
  nameWithType: ValueType.ToString()
- uid: System.String
  parent: System
  isExternal: false
  name: String
  fullName: System.String
  commentId: T:System.String
  nameWithType: String
