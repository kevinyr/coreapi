### YamlMime:ManagedReference
items:
- uid: System.Xml.XmlDictionaryReaderQuotas
  commentId: T:System.Xml.XmlDictionaryReaderQuotas
  id: XmlDictionaryReaderQuotas
  parent: System.Xml
  children:
  - System.Xml.XmlDictionaryReaderQuotas.#ctor
  - System.Xml.XmlDictionaryReaderQuotas.CopyTo(System.Xml.XmlDictionaryReaderQuotas)
  - System.Xml.XmlDictionaryReaderQuotas.Max
  - System.Xml.XmlDictionaryReaderQuotas.MaxArrayLength
  - System.Xml.XmlDictionaryReaderQuotas.MaxBytesPerRead
  - System.Xml.XmlDictionaryReaderQuotas.MaxDepth
  - System.Xml.XmlDictionaryReaderQuotas.MaxNameTableCharCount
  - System.Xml.XmlDictionaryReaderQuotas.MaxStringContentLength
  - System.Xml.XmlDictionaryReaderQuotas.ModifiedQuotas
  langs:
  - csharp
  - vb
  name: XmlDictionaryReaderQuotas
  nameWithType: XmlDictionaryReaderQuotas
  fullName: System.Xml.XmlDictionaryReaderQuotas
  type: Class
  source:
    remote:
      path: src/System.Runtime.Serialization.Xml/ref/System.Runtime.Serialization.Xml.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: XmlDictionaryReaderQuotas
    path: src/System.Runtime.Serialization.Xml/ref/System.Runtime.Serialization.Xml.cs
    startLine: 245
  assemblies:
  - System.Runtime.Serialization.Xml
  namespace: System.Xml
  summary: "\n<p>Contains configurable quota values for XmlDictionaryReaders.</p>\n"
  syntax:
    content: public sealed class XmlDictionaryReaderQuotas
    content.vb: Public NotInheritable Class XmlDictionaryReaderQuotas
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  modifiers.csharp:
  - public
  - sealed
  - class
  modifiers.vb:
  - Public
  - NotInheritable
  - Class
- uid: System.Xml.XmlDictionaryReaderQuotas.#ctor
  commentId: M:System.Xml.XmlDictionaryReaderQuotas.#ctor
  id: '#ctor'
  parent: System.Xml.XmlDictionaryReaderQuotas
  langs:
  - csharp
  - vb
  name: XmlDictionaryReaderQuotas()
  nameWithType: XmlDictionaryReaderQuotas.XmlDictionaryReaderQuotas()
  fullName: System.Xml.XmlDictionaryReaderQuotas.XmlDictionaryReaderQuotas()
  type: Constructor
  source:
    remote:
      path: src/System.Runtime.Serialization.Xml/ref/System.Runtime.Serialization.Xml.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: .ctor
    path: src/System.Runtime.Serialization.Xml/ref/System.Runtime.Serialization.Xml.cs
    startLine: 247
  assemblies:
  - System.Runtime.Serialization.Xml
  namespace: System.Xml
  summary: "\n<p>Creates a new instance of this class. </p>\n"
  syntax:
    content: public XmlDictionaryReaderQuotas()
    content.vb: Public Sub New
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: System.Xml.XmlDictionaryReaderQuotas.Max
  commentId: P:System.Xml.XmlDictionaryReaderQuotas.Max
  id: Max
  parent: System.Xml.XmlDictionaryReaderQuotas
  langs:
  - csharp
  - vb
  name: Max
  nameWithType: XmlDictionaryReaderQuotas.Max
  fullName: System.Xml.XmlDictionaryReaderQuotas.Max
  type: Property
  source:
    remote:
      path: src/System.Runtime.Serialization.Xml/ref/System.Runtime.Serialization.Xml.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: Max
    path: src/System.Runtime.Serialization.Xml/ref/System.Runtime.Serialization.Xml.cs
    startLine: 248
  assemblies:
  - System.Runtime.Serialization.Xml
  namespace: System.Xml
  summary: "\n<p>Gets an instance of this class with all properties set to maximum values.</p>\n"
  syntax:
    content: public static XmlDictionaryReaderQuotas Max { get; }
    content.vb: Public Shared ReadOnly Property Max As XmlDictionaryReaderQuotas
    parameters: []
    return:
      type: System.Xml.XmlDictionaryReaderQuotas
      description: "\n<p>An instance of <xref href=\"System.Xml.XmlDictionaryReaderQuotas\" data-throw-if-not-resolved=\"false\"></xref> with properties set to <xref href=\"System.Int32.MaxValue\" data-throw-if-not-resolved=\"false\"></xref>.</p>\n"
  modifiers.csharp:
  - public
  - static
  - get
  modifiers.vb:
  - Public
  - Shared
  - ReadOnly
- uid: System.Xml.XmlDictionaryReaderQuotas.MaxArrayLength
  commentId: P:System.Xml.XmlDictionaryReaderQuotas.MaxArrayLength
  id: MaxArrayLength
  parent: System.Xml.XmlDictionaryReaderQuotas
  langs:
  - csharp
  - vb
  name: MaxArrayLength
  nameWithType: XmlDictionaryReaderQuotas.MaxArrayLength
  fullName: System.Xml.XmlDictionaryReaderQuotas.MaxArrayLength
  type: Property
  source:
    remote:
      path: src/System.Runtime.Serialization.Xml/ref/System.Runtime.Serialization.Xml.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: MaxArrayLength
    path: src/System.Runtime.Serialization.Xml/ref/System.Runtime.Serialization.Xml.cs
    startLine: 249
  assemblies:
  - System.Runtime.Serialization.Xml
  namespace: System.Xml
  summary: "\n<p>Gets and sets the maximum allowed array length.</p>\n"
  syntax:
    content: public int MaxArrayLength { get; set; }
    content.vb: Public Property MaxArrayLength As Integer
    parameters: []
    return:
      type: System.Int32
      description: "\n<p>The maximum allowed array length. The default is 16384.</p>\n"
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "\n<p>Trying to <strong>set</strong> the value, but quota values are read-only for this instance.</p>\n"
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "\n<p>Trying to <strong>set</strong> the value to less than zero.</p>\n"
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: System.Xml.XmlDictionaryReaderQuotas.MaxBytesPerRead
  commentId: P:System.Xml.XmlDictionaryReaderQuotas.MaxBytesPerRead
  id: MaxBytesPerRead
  parent: System.Xml.XmlDictionaryReaderQuotas
  langs:
  - csharp
  - vb
  name: MaxBytesPerRead
  nameWithType: XmlDictionaryReaderQuotas.MaxBytesPerRead
  fullName: System.Xml.XmlDictionaryReaderQuotas.MaxBytesPerRead
  type: Property
  source:
    remote:
      path: src/System.Runtime.Serialization.Xml/ref/System.Runtime.Serialization.Xml.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: MaxBytesPerRead
    path: src/System.Runtime.Serialization.Xml/ref/System.Runtime.Serialization.Xml.cs
    startLine: 251
  assemblies:
  - System.Runtime.Serialization.Xml
  namespace: System.Xml
  summary: "\n<p>Gets and sets the maximum allowed bytes returned for each read.</p>\n"
  syntax:
    content: public int MaxBytesPerRead { get; set; }
    content.vb: Public Property MaxBytesPerRead As Integer
    parameters: []
    return:
      type: System.Int32
      description: "\n<p>The maximum allowed bytes returned for each read. The default is 4096.</p>\n"
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "\n<p>Trying to <strong>set</strong> the value, but quota values are read-only for this instance.</p>\n"
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "\n<p>Trying to <strong>set</strong> the value to less than zero.</p>\n"
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: System.Xml.XmlDictionaryReaderQuotas.MaxDepth
  commentId: P:System.Xml.XmlDictionaryReaderQuotas.MaxDepth
  id: MaxDepth
  parent: System.Xml.XmlDictionaryReaderQuotas
  langs:
  - csharp
  - vb
  name: MaxDepth
  nameWithType: XmlDictionaryReaderQuotas.MaxDepth
  fullName: System.Xml.XmlDictionaryReaderQuotas.MaxDepth
  type: Property
  source:
    remote:
      path: src/System.Runtime.Serialization.Xml/ref/System.Runtime.Serialization.Xml.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: MaxDepth
    path: src/System.Runtime.Serialization.Xml/ref/System.Runtime.Serialization.Xml.cs
    startLine: 253
  assemblies:
  - System.Runtime.Serialization.Xml
  namespace: System.Xml
  summary: "\n<p>Gets and sets the maximum nested node depth.</p>\n"
  syntax:
    content: public int MaxDepth { get; set; }
    content.vb: Public Property MaxDepth As Integer
    parameters: []
    return:
      type: System.Int32
      description: "\n<p>The maximum nested node depth. The default is 32;</p>\n"
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "\n<p>Trying to <strong>set</strong> the value and quota values are read-only for this instance.</p>\n"
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "\n<p>Trying to <strong>set</strong> the value is less than zero.</p>\n"
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: System.Xml.XmlDictionaryReaderQuotas.MaxNameTableCharCount
  commentId: P:System.Xml.XmlDictionaryReaderQuotas.MaxNameTableCharCount
  id: MaxNameTableCharCount
  parent: System.Xml.XmlDictionaryReaderQuotas
  langs:
  - csharp
  - vb
  name: MaxNameTableCharCount
  nameWithType: XmlDictionaryReaderQuotas.MaxNameTableCharCount
  fullName: System.Xml.XmlDictionaryReaderQuotas.MaxNameTableCharCount
  type: Property
  source:
    remote:
      path: src/System.Runtime.Serialization.Xml/ref/System.Runtime.Serialization.Xml.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: MaxNameTableCharCount
    path: src/System.Runtime.Serialization.Xml/ref/System.Runtime.Serialization.Xml.cs
    startLine: 255
  assemblies:
  - System.Runtime.Serialization.Xml
  namespace: System.Xml
  summary: "\n<p>Gets and sets the maximum characters allowed in a table name.</p>\n"
  syntax:
    content: public int MaxNameTableCharCount { get; set; }
    content.vb: Public Property MaxNameTableCharCount As Integer
    parameters: []
    return:
      type: System.Int32
      description: "\n<p>The maximum characters allowed in a table name. The default is 16384.</p>\n"
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "\n<p>Trying to <strong>set</strong> the value, but quota values are read-only for this instance.</p>\n"
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "\n<p>Trying to <strong>set</strong> the value to less than zero.</p>\n"
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: System.Xml.XmlDictionaryReaderQuotas.MaxStringContentLength
  commentId: P:System.Xml.XmlDictionaryReaderQuotas.MaxStringContentLength
  id: MaxStringContentLength
  parent: System.Xml.XmlDictionaryReaderQuotas
  langs:
  - csharp
  - vb
  name: MaxStringContentLength
  nameWithType: XmlDictionaryReaderQuotas.MaxStringContentLength
  fullName: System.Xml.XmlDictionaryReaderQuotas.MaxStringContentLength
  type: Property
  source:
    remote:
      path: src/System.Runtime.Serialization.Xml/ref/System.Runtime.Serialization.Xml.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: MaxStringContentLength
    path: src/System.Runtime.Serialization.Xml/ref/System.Runtime.Serialization.Xml.cs
    startLine: 257
  assemblies:
  - System.Runtime.Serialization.Xml
  namespace: System.Xml
  summary: "\n<p>Gets and sets the maximum string length returned by the reader.</p>\n"
  syntax:
    content: public int MaxStringContentLength { get; set; }
    content.vb: Public Property MaxStringContentLength As Integer
    parameters: []
    return:
      type: System.Int32
      description: "\n<p>The maximum string length returned by the reader. The default is 8192.</p>\n"
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "\n<p>Trying to <strong>set</strong> the value, but quota values are read-only for this instance.</p>\n"
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "\n<p>Trying to <strong>set</strong> the value to less than zero.</p>\n"
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: System.Xml.XmlDictionaryReaderQuotas.ModifiedQuotas
  commentId: P:System.Xml.XmlDictionaryReaderQuotas.ModifiedQuotas
  id: ModifiedQuotas
  parent: System.Xml.XmlDictionaryReaderQuotas
  langs:
  - csharp
  - vb
  name: ModifiedQuotas
  nameWithType: XmlDictionaryReaderQuotas.ModifiedQuotas
  fullName: System.Xml.XmlDictionaryReaderQuotas.ModifiedQuotas
  type: Property
  source:
    remote:
      path: src/System.Runtime.Serialization.Xml/ref/System.Runtime.Serialization.Xml.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: ModifiedQuotas
    path: src/System.Runtime.Serialization.Xml/ref/System.Runtime.Serialization.Xml.cs
    startLine: 259
  assemblies:
  - System.Runtime.Serialization.Xml
  namespace: System.Xml
  summary: "\n<p>Gets the modified quotas for the <xref href=\"System.Xml.XmlDictionaryReaderQuotas\" data-throw-if-not-resolved=\"false\"></xref>.</p>\n"
  syntax:
    content: public XmlDictionaryReaderQuotaTypes ModifiedQuotas { get; }
    content.vb: Public ReadOnly Property ModifiedQuotas As XmlDictionaryReaderQuotaTypes
    parameters: []
    return:
      type: System.Xml.XmlDictionaryReaderQuotaTypes
      description: "\n<p>The modified quotas for the <xref href=\"System.Xml.XmlDictionaryReaderQuotas\" data-throw-if-not-resolved=\"false\"></xref>.</p>\n"
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: System.Xml.XmlDictionaryReaderQuotas.CopyTo(System.Xml.XmlDictionaryReaderQuotas)
  commentId: M:System.Xml.XmlDictionaryReaderQuotas.CopyTo(System.Xml.XmlDictionaryReaderQuotas)
  id: CopyTo(System.Xml.XmlDictionaryReaderQuotas)
  parent: System.Xml.XmlDictionaryReaderQuotas
  langs:
  - csharp
  - vb
  name: CopyTo(XmlDictionaryReaderQuotas)
  nameWithType: XmlDictionaryReaderQuotas.CopyTo(XmlDictionaryReaderQuotas)
  fullName: System.Xml.XmlDictionaryReaderQuotas.CopyTo(System.Xml.XmlDictionaryReaderQuotas)
  type: Method
  source:
    remote:
      path: src/System.Runtime.Serialization.Xml/ref/System.Runtime.Serialization.Xml.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: CopyTo
    path: src/System.Runtime.Serialization.Xml/ref/System.Runtime.Serialization.Xml.cs
    startLine: 260
  assemblies:
  - System.Runtime.Serialization.Xml
  namespace: System.Xml
  summary: "\n<p>Sets the properties on a passed-in quotas instance, based on the values in this instance.</p>\n"
  syntax:
    content: public void CopyTo(XmlDictionaryReaderQuotas quotas)
    content.vb: Public Sub CopyTo(quotas As XmlDictionaryReaderQuotas)
    parameters:
    - id: quotas
      type: System.Xml.XmlDictionaryReaderQuotas
      description: "\n<p>The <xref href=\"System.Xml.XmlDictionaryReaderQuotas\" data-throw-if-not-resolved=\"false\"></xref> instance to which to copy values.</p>\n"
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "\n<p>Trying to <strong>set</strong> the value, but quota values are read-only for the passed in instance.</p>\n"
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "\n<p>Passed in target<em> quotas</em> is <strong>null</strong>.</p>\n"
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
references:
- uid: System.Xml
  commentId: N:System.Xml
  isExternal: false
  name: System.Xml
  nameWithType: System.Xml
  fullName: System.Xml
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: false
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: System.Xml.XmlDictionaryReaderQuotas
  commentId: T:System.Xml.XmlDictionaryReaderQuotas
  parent: System.Xml
  isExternal: false
  name: Xml.XmlDictionaryReaderQuotas
  nameWithType: Xml.XmlDictionaryReaderQuotas
  fullName: System.Xml.XmlDictionaryReaderQuotas
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: false
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Xml.XmlDictionaryReaderQuotaTypes
  commentId: T:System.Xml.XmlDictionaryReaderQuotaTypes
  parent: System.Xml
  isExternal: false
  name: XmlDictionaryReaderQuotaTypes
  nameWithType: XmlDictionaryReaderQuotaTypes
  fullName: System.Xml.XmlDictionaryReaderQuotaTypes
- uid: System.InvalidOperationException
  commentId: T:System.InvalidOperationException
  parent: System
  isExternal: false
  name: InvalidOperationException
  nameWithType: InvalidOperationException
  fullName: System.InvalidOperationException
- uid: System.ArgumentException
  commentId: T:System.ArgumentException
  parent: System
  isExternal: false
  name: ArgumentException
  nameWithType: ArgumentException
  fullName: System.ArgumentException
- uid: System.ArgumentNullException
  commentId: T:System.ArgumentNullException
  isExternal: false
  name: ArgumentNullException
  nameWithType: ArgumentNullException
  fullName: System.ArgumentNullException
