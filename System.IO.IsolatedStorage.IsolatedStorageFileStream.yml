items:
- uid: System.IO.IsolatedStorage.IsolatedStorageFileStream
  commentId: T:System.IO.IsolatedStorage.IsolatedStorageFileStream
  id: IsolatedStorageFileStream
  parent: System.IO.IsolatedStorage
  children:
  - System.IO.IsolatedStorage.IsolatedStorageFileStream.#ctor(System.String,System.IO.FileMode,System.IO.FileAccess,System.IO.FileShare,System.IO.IsolatedStorage.IsolatedStorageFile)
  - System.IO.IsolatedStorage.IsolatedStorageFileStream.#ctor(System.String,System.IO.FileMode,System.IO.FileAccess,System.IO.IsolatedStorage.IsolatedStorageFile)
  - System.IO.IsolatedStorage.IsolatedStorageFileStream.#ctor(System.String,System.IO.FileMode,System.IO.IsolatedStorage.IsolatedStorageFile)
  - System.IO.IsolatedStorage.IsolatedStorageFileStream.CanRead
  - System.IO.IsolatedStorage.IsolatedStorageFileStream.CanSeek
  - System.IO.IsolatedStorage.IsolatedStorageFileStream.CanWrite
  - System.IO.IsolatedStorage.IsolatedStorageFileStream.Dispose(System.Boolean)
  - System.IO.IsolatedStorage.IsolatedStorageFileStream.Flush
  - System.IO.IsolatedStorage.IsolatedStorageFileStream.FlushAsync(System.Threading.CancellationToken)
  - System.IO.IsolatedStorage.IsolatedStorageFileStream.Length
  - System.IO.IsolatedStorage.IsolatedStorageFileStream.Position
  - System.IO.IsolatedStorage.IsolatedStorageFileStream.Read(System.Byte[],System.Int32,System.Int32)
  - System.IO.IsolatedStorage.IsolatedStorageFileStream.ReadAsync(System.Byte[],System.Int32,System.Int32,System.Threading.CancellationToken)
  - System.IO.IsolatedStorage.IsolatedStorageFileStream.ReadByte
  - System.IO.IsolatedStorage.IsolatedStorageFileStream.Seek(System.Int64,System.IO.SeekOrigin)
  - System.IO.IsolatedStorage.IsolatedStorageFileStream.SetLength(System.Int64)
  - System.IO.IsolatedStorage.IsolatedStorageFileStream.Write(System.Byte[],System.Int32,System.Int32)
  - System.IO.IsolatedStorage.IsolatedStorageFileStream.WriteAsync(System.Byte[],System.Int32,System.Int32,System.Threading.CancellationToken)
  - System.IO.IsolatedStorage.IsolatedStorageFileStream.WriteByte(System.Byte)
  langs:
  - csharp
  - vb
  name: IsolatedStorageFileStream
  fullName: System.IO.IsolatedStorage.IsolatedStorageFileStream
  type: Class
  source:
    remote:
      path: src/System.IO.IsolatedStorage/src/System/IO/IsolatedStorage/IsolatedStorageFileStream.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: IsolatedStorageFileStream
    path: src/System.IO.IsolatedStorage/src/System/IO/IsolatedStorage/IsolatedStorageFileStream.cs
    startLine: 14
  assemblies:
  - System.IO.IsolatedStorage
  namespace: System.IO.IsolatedStorage
  summary: "\n<p>Exposes a file within isolated storage. </p>\n"
  syntax:
    content: 'public class IsolatedStorageFileStream : Stream, IDisposable'
    content.vb: >-
      Public Class IsolatedStorageFileStream
          Inherits Stream
          Implements IDisposable
  inheritance:
  - System.Object
  - System.MarshalByRefObject
  - System.IO.Stream
  implements:
  - System.IDisposable
  inheritedMembers:
  - System.IO.Stream.Null
  - System.IO.Stream.CopyToAsync(System.IO.Stream)
  - System.IO.Stream.CopyToAsync(System.IO.Stream,System.Int32)
  - System.IO.Stream.CopyToAsync(System.IO.Stream,System.Int32,System.Threading.CancellationToken)
  - System.IO.Stream.CopyTo(System.IO.Stream)
  - System.IO.Stream.CopyTo(System.IO.Stream,System.Int32)
  - System.IO.Stream.Close
  - System.IO.Stream.Dispose
  - System.IO.Stream.FlushAsync
  - System.IO.Stream.CreateWaitHandle
  - System.IO.Stream.BeginRead(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)
  - System.IO.Stream.EndRead(System.IAsyncResult)
  - System.IO.Stream.ReadAsync(System.Byte[],System.Int32,System.Int32)
  - System.IO.Stream.BeginWrite(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)
  - System.IO.Stream.EndWrite(System.IAsyncResult)
  - System.IO.Stream.WriteAsync(System.Byte[],System.Int32,System.Int32)
  - System.IO.Stream.Synchronized(System.IO.Stream)
  - System.IO.Stream.ObjectInvariant
  - System.IO.Stream.CanTimeout
  - System.IO.Stream.ReadTimeout
  - System.IO.Stream.WriteTimeout
  - System.MarshalByRefObject.MemberwiseClone(System.Boolean)
  - System.MarshalByRefObject.GetLifetimeService
  - System.MarshalByRefObject.InitializeLifetimeService
  - System.MarshalByRefObject.CreateObjRef(System.Type)
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
  nameWithType: IsolatedStorageFileStream
  extensionMethods:
  - System.IO.Stream.System.IO.WindowsRuntimeStreamExtensions.AsInputStream
  - System.IO.Stream.System.IO.WindowsRuntimeStreamExtensions.AsOutputStream
  - System.IO.Stream.System.IO.WindowsRuntimeStreamExtensions.AsRandomAccessStream
- uid: System.IO.IsolatedStorage.IsolatedStorageFileStream.#ctor(System.String,System.IO.FileMode,System.IO.FileAccess,System.IO.FileShare,System.IO.IsolatedStorage.IsolatedStorageFile)
  commentId: M:System.IO.IsolatedStorage.IsolatedStorageFileStream.#ctor(System.String,System.IO.FileMode,System.IO.FileAccess,System.IO.FileShare,System.IO.IsolatedStorage.IsolatedStorageFile)
  id: '#ctor(System.String,System.IO.FileMode,System.IO.FileAccess,System.IO.FileShare,System.IO.IsolatedStorage.IsolatedStorageFile)'
  parent: System.IO.IsolatedStorage.IsolatedStorageFileStream
  langs:
  - csharp
  - vb
  name: IsolatedStorageFileStream(String, FileMode, FileAccess, FileShare, IsolatedStorageFile)
  fullName: System.IO.IsolatedStorage.IsolatedStorageFileStream.IsolatedStorageFileStream(System.String, System.IO.FileMode, System.IO.FileAccess, System.IO.FileShare, System.IO.IsolatedStorage.IsolatedStorageFile)
  type: Constructor
  source:
    remote:
      path: src/System.IO.IsolatedStorage/src/System/IO/IsolatedStorage/IsolatedStorageFileStream.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: .ctor
    path: src/System.IO.IsolatedStorage/src/System/IO/IsolatedStorage/IsolatedStorageFileStream.cs
    startLine: 36
  assemblies:
  - System.IO.IsolatedStorage
  namespace: System.IO.IsolatedStorage
  summary: "\n<p>Initializes a new instance of the <xref href=\"System.IO.IsolatedStorage.IsolatedStorageFileStream\" data-throw-if-not-resolved=\"false\"></xref> class giving access to the file designated by <em>path</em>, in the specified <em>mode</em>, with the specified file <em>access</em>, using the file sharing mode specified by <em>share</em>, and in the context of the <xref href=\"System.IO.IsolatedStorage.IsolatedStorageFile\" data-throw-if-not-resolved=\"false\"></xref> specified by <em>isf</em>.</p>\n"
  syntax:
    content: public IsolatedStorageFileStream(string path, FileMode mode, FileAccess access, FileShare share, IsolatedStorageFile isf)
    content.vb: Public Sub New(path As String, mode As FileMode, access As FileAccess, share As FileShare, isf As IsolatedStorageFile)
    parameters:
    - id: path
      type: System.String
      description: "\n<p>The relative path of the file within isolated storage. </p>\n"
    - id: mode
      type: System.IO.FileMode
      description: "\n<p>One of the <xref href=\"System.IO.FileMode\" data-throw-if-not-resolved=\"false\"></xref> values. </p>\n"
    - id: access
      type: System.IO.FileAccess
      description: "\n<p>A bitwise combination of the <xref href=\"System.IO.FileAccess\" data-throw-if-not-resolved=\"false\"></xref> values. </p>\n"
    - id: share
      type: System.IO.FileShare
      description: "\n<p>A bitwise combination of the <xref href=\"System.IO.FileShare\" data-throw-if-not-resolved=\"false\"></xref> values. </p>\n"
    - id: isf
      type: System.IO.IsolatedStorage.IsolatedStorageFile
      description: "\n<p>The <xref href=\"System.IO.IsolatedStorage.IsolatedStorageFile\" data-throw-if-not-resolved=\"false\"></xref> in which to open the <xref href=\"System.IO.IsolatedStorage.IsolatedStorageFileStream\" data-throw-if-not-resolved=\"false\"></xref>. </p>\n"
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "\n<p>The <em>path</em> is badly formed. </p>\n"
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "\n<p>The <em>path</em> is <strong>null</strong>. </p>\n"
  - type: System.IO.FileNotFoundException
    commentId: T:System.IO.FileNotFoundException
    description: "\n<p>No file was found and the <em>mode</em> is set to <xref href=\"System.IO.FileMode.Open\" data-throw-if-not-resolved=\"false\"></xref>. </p>\n"
  - type: System.IO.IsolatedStorage.IsolatedStorageException
    commentId: T:System.IO.IsolatedStorage.IsolatedStorageException
    description: "\n<p>\n<em>isf</em> does not have a quota. </p>\n"
  see:
  - type: System.Security.Permissions.IsolatedStorageFilePermission
    commentId: T:System.Security.Permissions.IsolatedStorageFilePermission
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  nameWithType: IsolatedStorageFileStream.IsolatedStorageFileStream(String, FileMode, FileAccess, FileShare, IsolatedStorageFile)
- uid: System.IO.IsolatedStorage.IsolatedStorageFileStream.#ctor(System.String,System.IO.FileMode,System.IO.FileAccess,System.IO.IsolatedStorage.IsolatedStorageFile)
  commentId: M:System.IO.IsolatedStorage.IsolatedStorageFileStream.#ctor(System.String,System.IO.FileMode,System.IO.FileAccess,System.IO.IsolatedStorage.IsolatedStorageFile)
  id: '#ctor(System.String,System.IO.FileMode,System.IO.FileAccess,System.IO.IsolatedStorage.IsolatedStorageFile)'
  parent: System.IO.IsolatedStorage.IsolatedStorageFileStream
  langs:
  - csharp
  - vb
  name: IsolatedStorageFileStream(String, FileMode, FileAccess, IsolatedStorageFile)
  fullName: System.IO.IsolatedStorage.IsolatedStorageFileStream.IsolatedStorageFileStream(System.String, System.IO.FileMode, System.IO.FileAccess, System.IO.IsolatedStorage.IsolatedStorageFile)
  type: Constructor
  source:
    remote:
      path: src/System.IO.IsolatedStorage/src/System/IO/IsolatedStorage/IsolatedStorageFileStream.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: .ctor
    path: src/System.IO.IsolatedStorage/src/System/IO/IsolatedStorage/IsolatedStorageFileStream.cs
    startLine: 30
  assemblies:
  - System.IO.IsolatedStorage
  namespace: System.IO.IsolatedStorage
  summary: "\n<p>Initializes a new instance of the <xref href=\"System.IO.IsolatedStorage.IsolatedStorageFileStream\" data-throw-if-not-resolved=\"false\"></xref> class giving access to the file designated by <em>path</em> in the specified <em>mode</em>, with the specified file <em>access</em>, and in the context of the <xref href=\"System.IO.IsolatedStorage.IsolatedStorageFile\" data-throw-if-not-resolved=\"false\"></xref> specified by <em>isf</em>.</p>\n"
  syntax:
    content: public IsolatedStorageFileStream(string path, FileMode mode, FileAccess access, IsolatedStorageFile isf)
    content.vb: Public Sub New(path As String, mode As FileMode, access As FileAccess, isf As IsolatedStorageFile)
    parameters:
    - id: path
      type: System.String
      description: "\n<p>The relative path of the file within isolated storage. </p>\n"
    - id: mode
      type: System.IO.FileMode
      description: "\n<p>One of the <xref href=\"System.IO.FileMode\" data-throw-if-not-resolved=\"false\"></xref> values. </p>\n"
    - id: access
      type: System.IO.FileAccess
      description: "\n<p>A bitwise combination of the <xref href=\"System.IO.FileAccess\" data-throw-if-not-resolved=\"false\"></xref> values. </p>\n"
    - id: isf
      type: System.IO.IsolatedStorage.IsolatedStorageFile
      description: "\n<p>The <xref href=\"System.IO.IsolatedStorage.IsolatedStorageFile\" data-throw-if-not-resolved=\"false\"></xref> in which to open the <xref href=\"System.IO.IsolatedStorage.IsolatedStorageFileStream\" data-throw-if-not-resolved=\"false\"></xref>. </p>\n"
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "\n<p>The <em>path</em> is badly formed. </p>\n"
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "\n<p>The <em>path</em> is <strong>null</strong>. </p>\n"
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: "\n<p>The isolated store is closed.</p>\n"
  - type: System.IO.FileNotFoundException
    commentId: T:System.IO.FileNotFoundException
    description: "\n<p>No file was found and the <em>mode</em> is set to <xref href=\"System.IO.FileMode.Open\" data-throw-if-not-resolved=\"false\"></xref>. </p>\n"
  - type: System.IO.IsolatedStorage.IsolatedStorageException
    commentId: T:System.IO.IsolatedStorage.IsolatedStorageException
    description: "\n<p>\n<em>isf</em> does not have a quota. </p>\n"
  see:
  - type: System.Security.Permissions.IsolatedStorageFilePermission
    commentId: T:System.Security.Permissions.IsolatedStorageFilePermission
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  nameWithType: IsolatedStorageFileStream.IsolatedStorageFileStream(String, FileMode, FileAccess, IsolatedStorageFile)
- uid: System.IO.IsolatedStorage.IsolatedStorageFileStream.#ctor(System.String,System.IO.FileMode,System.IO.IsolatedStorage.IsolatedStorageFile)
  commentId: M:System.IO.IsolatedStorage.IsolatedStorageFileStream.#ctor(System.String,System.IO.FileMode,System.IO.IsolatedStorage.IsolatedStorageFile)
  id: '#ctor(System.String,System.IO.FileMode,System.IO.IsolatedStorage.IsolatedStorageFile)'
  parent: System.IO.IsolatedStorage.IsolatedStorageFileStream
  langs:
  - csharp
  - vb
  name: IsolatedStorageFileStream(String, FileMode, IsolatedStorageFile)
  fullName: System.IO.IsolatedStorage.IsolatedStorageFileStream.IsolatedStorageFileStream(System.String, System.IO.FileMode, System.IO.IsolatedStorage.IsolatedStorageFile)
  type: Constructor
  source:
    remote:
      path: src/System.IO.IsolatedStorage/src/System/IO/IsolatedStorage/IsolatedStorageFileStream.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: .ctor
    path: src/System.IO.IsolatedStorage/src/System/IO/IsolatedStorage/IsolatedStorageFileStream.cs
    startLine: 25
  assemblies:
  - System.IO.IsolatedStorage
  namespace: System.IO.IsolatedStorage
  summary: "\n<p>Initializes a new instance of the <xref href=\"System.IO.IsolatedStorage.IsolatedStorageFileStream\" data-throw-if-not-resolved=\"false\"></xref> class giving access to the file designated by <em>path</em>, in the specified <em>mode</em>, and in the context of the <xref href=\"System.IO.IsolatedStorage.IsolatedStorageFile\" data-throw-if-not-resolved=\"false\"></xref> specified by <em>isf</em>.</p>\n"
  syntax:
    content: public IsolatedStorageFileStream(string path, FileMode mode, IsolatedStorageFile isf)
    content.vb: Public Sub New(path As String, mode As FileMode, isf As IsolatedStorageFile)
    parameters:
    - id: path
      type: System.String
      description: "\n<p>The relative path of the file within isolated storage. </p>\n"
    - id: mode
      type: System.IO.FileMode
      description: "\n<p>One of the <xref href=\"System.IO.FileMode\" data-throw-if-not-resolved=\"false\"></xref> values. </p>\n"
    - id: isf
      type: System.IO.IsolatedStorage.IsolatedStorageFile
      description: "\n<p>The <xref href=\"System.IO.IsolatedStorage.IsolatedStorageFile\" data-throw-if-not-resolved=\"false\"></xref> in which to open the <xref href=\"System.IO.IsolatedStorage.IsolatedStorageFileStream\" data-throw-if-not-resolved=\"false\"></xref>. </p>\n"
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "\n<p>The <em>path</em> is badly formed. </p>\n"
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "\n<p>The <em>path</em> is <strong>null</strong>. </p>\n"
  - type: System.IO.FileNotFoundException
    commentId: T:System.IO.FileNotFoundException
    description: "\n<p>No file was found and the <em>mode</em> is set to <xref href=\"System.IO.FileMode.Open\" data-throw-if-not-resolved=\"false\"></xref>. </p>\n"
  - type: System.IO.IsolatedStorage.IsolatedStorageException
    commentId: T:System.IO.IsolatedStorage.IsolatedStorageException
    description: "\n<p>\n<em>isf</em> does not have a quota. </p>\n"
  see:
  - type: System.Security.Permissions.IsolatedStorageFilePermission
    commentId: T:System.Security.Permissions.IsolatedStorageFilePermission
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  nameWithType: IsolatedStorageFileStream.IsolatedStorageFileStream(String, FileMode, IsolatedStorageFile)
- uid: System.IO.IsolatedStorage.IsolatedStorageFileStream.CanRead
  commentId: P:System.IO.IsolatedStorage.IsolatedStorageFileStream.CanRead
  id: CanRead
  parent: System.IO.IsolatedStorage.IsolatedStorageFileStream
  langs:
  - csharp
  - vb
  name: CanRead
  fullName: System.IO.IsolatedStorage.IsolatedStorageFileStream.CanRead
  type: Property
  source:
    remote:
      path: src/System.IO.IsolatedStorage/src/System/IO/IsolatedStorage/IsolatedStorageFileStream.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: CanRead
    path: src/System.IO.IsolatedStorage/src/System/IO/IsolatedStorage/IsolatedStorageFileStream.cs
    startLine: 101
  assemblies:
  - System.IO.IsolatedStorage
  namespace: System.IO.IsolatedStorage
  summary: "\n<p>Gets a Boolean value indicating whether the file can be read.</p>\n"
  syntax:
    content: >-
      public override bool CanRead

      {
          [Pure]
          get;
      }
    content.vb: Public Overrides ReadOnly Property CanRead As Boolean
    parameters: []
    return:
      type: System.Boolean
      description: "\n<p>\n<strong>true</strong> if an <xref href=\"System.IO.IsolatedStorage.IsolatedStorageFileStream\" data-throw-if-not-resolved=\"false\"></xref> object can be read; otherwise, <strong>false</strong>.</p>\n"
  overridden: System.IO.Stream.CanRead
  modifiers.csharp:
  - public
  - override
  - get
  modifiers.vb:
  - Public
  - Overrides
  - ReadOnly
  nameWithType: IsolatedStorageFileStream.CanRead
- uid: System.IO.IsolatedStorage.IsolatedStorageFileStream.CanSeek
  commentId: P:System.IO.IsolatedStorage.IsolatedStorageFileStream.CanSeek
  id: CanSeek
  parent: System.IO.IsolatedStorage.IsolatedStorageFileStream
  langs:
  - csharp
  - vb
  name: CanSeek
  fullName: System.IO.IsolatedStorage.IsolatedStorageFileStream.CanSeek
  type: Property
  source:
    remote:
      path: src/System.IO.IsolatedStorage/src/System/IO/IsolatedStorage/IsolatedStorageFileStream.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: CanSeek
    path: src/System.IO.IsolatedStorage/src/System/IO/IsolatedStorage/IsolatedStorageFileStream.cs
    startLine: 119
  assemblies:
  - System.IO.IsolatedStorage
  namespace: System.IO.IsolatedStorage
  summary: "\n<p>Gets a Boolean value indicating whether seek operations are supported.</p>\n"
  syntax:
    content: >-
      public override bool CanSeek

      {
          [Pure]
          get;
      }
    content.vb: Public Overrides ReadOnly Property CanSeek As Boolean
    parameters: []
    return:
      type: System.Boolean
      description: "\n<p>\n<strong>true</strong> if an <xref href=\"System.IO.IsolatedStorage.IsolatedStorageFileStream\" data-throw-if-not-resolved=\"false\"></xref> object supports seek operations; otherwise, <strong>false</strong>.</p>\n"
  overridden: System.IO.Stream.CanSeek
  modifiers.csharp:
  - public
  - override
  - get
  modifiers.vb:
  - Public
  - Overrides
  - ReadOnly
  nameWithType: IsolatedStorageFileStream.CanSeek
- uid: System.IO.IsolatedStorage.IsolatedStorageFileStream.CanWrite
  commentId: P:System.IO.IsolatedStorage.IsolatedStorageFileStream.CanWrite
  id: CanWrite
  parent: System.IO.IsolatedStorage.IsolatedStorageFileStream
  langs:
  - csharp
  - vb
  name: CanWrite
  fullName: System.IO.IsolatedStorage.IsolatedStorageFileStream.CanWrite
  type: Property
  source:
    remote:
      path: src/System.IO.IsolatedStorage/src/System/IO/IsolatedStorage/IsolatedStorageFileStream.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: CanWrite
    path: src/System.IO.IsolatedStorage/src/System/IO/IsolatedStorage/IsolatedStorageFileStream.cs
    startLine: 110
  assemblies:
  - System.IO.IsolatedStorage
  namespace: System.IO.IsolatedStorage
  summary: "\n<p>Gets a Boolean value indicating whether you can write to the file.</p>\n"
  syntax:
    content: >-
      public override bool CanWrite

      {
          [Pure]
          get;
      }
    content.vb: Public Overrides ReadOnly Property CanWrite As Boolean
    parameters: []
    return:
      type: System.Boolean
      description: "\n<p>\n<strong>true</strong> if an <xref href=\"System.IO.IsolatedStorage.IsolatedStorageFileStream\" data-throw-if-not-resolved=\"false\"></xref> object can be written; otherwise, <strong>false</strong>.</p>\n"
  overridden: System.IO.Stream.CanWrite
  modifiers.csharp:
  - public
  - override
  - get
  modifiers.vb:
  - Public
  - Overrides
  - ReadOnly
  nameWithType: IsolatedStorageFileStream.CanWrite
- uid: System.IO.IsolatedStorage.IsolatedStorageFileStream.Length
  commentId: P:System.IO.IsolatedStorage.IsolatedStorageFileStream.Length
  id: Length
  parent: System.IO.IsolatedStorage.IsolatedStorageFileStream
  langs:
  - csharp
  - vb
  name: Length
  fullName: System.IO.IsolatedStorage.IsolatedStorageFileStream.Length
  type: Property
  source:
    remote:
      path: src/System.IO.IsolatedStorage/src/System/IO/IsolatedStorage/IsolatedStorageFileStream.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: Length
    path: src/System.IO.IsolatedStorage/src/System/IO/IsolatedStorage/IsolatedStorageFileStream.cs
    startLine: 128
  assemblies:
  - System.IO.IsolatedStorage
  namespace: System.IO.IsolatedStorage
  summary: "\n<p>Gets the length of the <xref href=\"System.IO.IsolatedStorage.IsolatedStorageFileStream\" data-throw-if-not-resolved=\"false\"></xref> object.</p>\n"
  syntax:
    content: public override long Length { get; }
    content.vb: Public Overrides ReadOnly Property Length As Long
    parameters: []
    return:
      type: System.Int64
      description: "\n<p>The length of the <xref href=\"System.IO.IsolatedStorage.IsolatedStorageFileStream\" data-throw-if-not-resolved=\"false\"></xref> object in bytes.</p>\n"
  overridden: System.IO.Stream.Length
  modifiers.csharp:
  - public
  - override
  - get
  modifiers.vb:
  - Public
  - Overrides
  - ReadOnly
  nameWithType: IsolatedStorageFileStream.Length
- uid: System.IO.IsolatedStorage.IsolatedStorageFileStream.Position
  commentId: P:System.IO.IsolatedStorage.IsolatedStorageFileStream.Position
  id: Position
  parent: System.IO.IsolatedStorage.IsolatedStorageFileStream
  langs:
  - csharp
  - vb
  name: Position
  fullName: System.IO.IsolatedStorage.IsolatedStorageFileStream.Position
  type: Property
  source:
    remote:
      path: src/System.IO.IsolatedStorage/src/System/IO/IsolatedStorage/IsolatedStorageFileStream.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: Position
    path: src/System.IO.IsolatedStorage/src/System/IO/IsolatedStorage/IsolatedStorageFileStream.cs
    startLine: 136
  assemblies:
  - System.IO.IsolatedStorage
  namespace: System.IO.IsolatedStorage
  summary: "\n<p>Gets or sets the current position of the current <xref href=\"System.IO.IsolatedStorage.IsolatedStorageFileStream\" data-throw-if-not-resolved=\"false\"></xref> object.</p>\n"
  syntax:
    content: public override long Position { get; set; }
    content.vb: Public Overrides Property Position As Long
    parameters: []
    return:
      type: System.Int64
      description: "\n<p>The current position of this <xref href=\"System.IO.IsolatedStorage.IsolatedStorageFileStream\" data-throw-if-not-resolved=\"false\"></xref> object.</p>\n"
  overridden: System.IO.Stream.Position
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "\n<p>The position cannot be set to a negative number. </p>\n"
  modifiers.csharp:
  - public
  - override
  - get
  - set
  modifiers.vb:
  - Public
  - Overrides
  nameWithType: IsolatedStorageFileStream.Position
- uid: System.IO.IsolatedStorage.IsolatedStorageFileStream.Dispose(System.Boolean)
  commentId: M:System.IO.IsolatedStorage.IsolatedStorageFileStream.Dispose(System.Boolean)
  id: Dispose(System.Boolean)
  parent: System.IO.IsolatedStorage.IsolatedStorageFileStream
  langs:
  - csharp
  - vb
  name: Dispose(Boolean)
  fullName: System.IO.IsolatedStorage.IsolatedStorageFileStream.Dispose(System.Boolean)
  type: Method
  source:
    remote:
      path: src/System.IO.IsolatedStorage/src/System/IO/IsolatedStorage/IsolatedStorageFileStream.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: Dispose
    path: src/System.IO.IsolatedStorage/src/System/IO/IsolatedStorage/IsolatedStorageFileStream.cs
    startLine: 158
  assemblies:
  - System.IO.IsolatedStorage
  namespace: System.IO.IsolatedStorage
  summary: "\n<p>Releases the unmanaged resources used by the <xref href=\"System.IO.IsolatedStorage.IsolatedStorageFileStream\" data-throw-if-not-resolved=\"false\"></xref> and optionally releases the managed resources.</p>\n"
  syntax:
    content: protected override void Dispose(bool disposing)
    content.vb: Protected Overrides Sub Dispose(disposing As Boolean)
    parameters:
    - id: disposing
      type: System.Boolean
      description: "\n<p>\n<strong>true</strong> to release both managed and unmanaged resources; <strong>false</strong> to release only unmanaged resources </p>\n"
  overridden: System.IO.Stream.Dispose(System.Boolean)
  modifiers.csharp:
  - protected
  - override
  modifiers.vb:
  - Protected
  - Overrides
  nameWithType: IsolatedStorageFileStream.Dispose(Boolean)
- uid: System.IO.IsolatedStorage.IsolatedStorageFileStream.Flush
  commentId: M:System.IO.IsolatedStorage.IsolatedStorageFileStream.Flush
  id: Flush
  parent: System.IO.IsolatedStorage.IsolatedStorageFileStream
  langs:
  - csharp
  - vb
  name: Flush()
  fullName: System.IO.IsolatedStorage.IsolatedStorageFileStream.Flush()
  type: Method
  source:
    remote:
      path: src/System.IO.IsolatedStorage/src/System/IO/IsolatedStorage/IsolatedStorageFileStream.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: Flush
    path: src/System.IO.IsolatedStorage/src/System/IO/IsolatedStorage/IsolatedStorageFileStream.cs
    startLine: 174
  assemblies:
  - System.IO.IsolatedStorage
  namespace: System.IO.IsolatedStorage
  summary: "\n<p>Clears buffers for this stream and causes any buffered data to be written to the file.</p>\n"
  syntax:
    content: public override void Flush()
    content.vb: Public Overrides Sub Flush
  overridden: System.IO.Stream.Flush
  seealso:
  - type: System.IO.IsolatedStorage.IsolatedStorageFileStream.Flush(System.Boolean)
    commentId: M:System.IO.IsolatedStorage.IsolatedStorageFileStream.Flush(System.Boolean)
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
  nameWithType: IsolatedStorageFileStream.Flush()
- uid: System.IO.IsolatedStorage.IsolatedStorageFileStream.FlushAsync(System.Threading.CancellationToken)
  commentId: M:System.IO.IsolatedStorage.IsolatedStorageFileStream.FlushAsync(System.Threading.CancellationToken)
  id: FlushAsync(System.Threading.CancellationToken)
  parent: System.IO.IsolatedStorage.IsolatedStorageFileStream
  langs:
  - csharp
  - vb
  name: FlushAsync(CancellationToken)
  fullName: System.IO.IsolatedStorage.IsolatedStorageFileStream.FlushAsync(System.Threading.CancellationToken)
  type: Method
  source:
    remote:
      path: src/System.IO.IsolatedStorage/src/System/IO/IsolatedStorage/IsolatedStorageFileStream.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: FlushAsync
    path: src/System.IO.IsolatedStorage/src/System/IO/IsolatedStorage/IsolatedStorageFileStream.cs
    startLine: 179
  assemblies:
  - System.IO.IsolatedStorage
  namespace: System.IO.IsolatedStorage
  syntax:
    content: public override Task FlushAsync(CancellationToken cancellationToken)
    content.vb: Public Overrides Function FlushAsync(cancellationToken As CancellationToken) As Task
    parameters:
    - id: cancellationToken
      type: System.Threading.CancellationToken
    return:
      type: System.Threading.Tasks.Task
  overridden: System.IO.Stream.FlushAsync(System.Threading.CancellationToken)
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
  nameWithType: IsolatedStorageFileStream.FlushAsync(CancellationToken)
- uid: System.IO.IsolatedStorage.IsolatedStorageFileStream.Read(System.Byte[],System.Int32,System.Int32)
  commentId: M:System.IO.IsolatedStorage.IsolatedStorageFileStream.Read(System.Byte[],System.Int32,System.Int32)
  id: Read(System.Byte[],System.Int32,System.Int32)
  parent: System.IO.IsolatedStorage.IsolatedStorageFileStream
  langs:
  - csharp
  - vb
  name: Read(Byte[], Int32, Int32)
  fullName: System.IO.IsolatedStorage.IsolatedStorageFileStream.Read(System.Byte[], System.Int32, System.Int32)
  type: Method
  source:
    remote:
      path: src/System.IO.IsolatedStorage/src/System/IO/IsolatedStorage/IsolatedStorageFileStream.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: Read
    path: src/System.IO.IsolatedStorage/src/System/IO/IsolatedStorage/IsolatedStorageFileStream.cs
    startLine: 189
  assemblies:
  - System.IO.IsolatedStorage
  namespace: System.IO.IsolatedStorage
  summary: "\n<p>Copies bytes from the current buffered <xref href=\"System.IO.IsolatedStorage.IsolatedStorageFileStream\" data-throw-if-not-resolved=\"false\"></xref> object to an array.</p>\n"
  syntax:
    content: public override int Read(byte[] buffer, int offset, int count)
    content.vb: Public Overrides Function Read(buffer As Byte(), offset As Integer, count As Integer) As Integer
    parameters:
    - id: buffer
      type: System.Byte[]
      description: "\n<p>The buffer to read. </p>\n"
    - id: offset
      type: System.Int32
      description: "\n<p>The offset in the buffer at which to begin writing. </p>\n"
    - id: count
      type: System.Int32
      description: "\n<p>The maximum number of bytes to read. </p>\n"
    return:
      type: System.Int32
      description: "\n<p>The total number of bytes read into the <em>buffer</em>. This can be less than the number of bytes requested if that many bytes are not currently available, or zero if the end of the stream is reached.</p>\n"
  overridden: System.IO.Stream.Read(System.Byte[],System.Int32,System.Int32)
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
  fullName.vb: System.IO.IsolatedStorage.IsolatedStorageFileStream.Read(System.Byte(), System.Int32, System.Int32)
  name.vb: Read(Byte(), Int32, Int32)
  nameWithType: IsolatedStorageFileStream.Read(Byte[], Int32, Int32)
  nameWithType.vb: IsolatedStorageFileStream.Read(Byte(), Int32, Int32)
- uid: System.IO.IsolatedStorage.IsolatedStorageFileStream.ReadAsync(System.Byte[],System.Int32,System.Int32,System.Threading.CancellationToken)
  commentId: M:System.IO.IsolatedStorage.IsolatedStorageFileStream.ReadAsync(System.Byte[],System.Int32,System.Int32,System.Threading.CancellationToken)
  id: ReadAsync(System.Byte[],System.Int32,System.Int32,System.Threading.CancellationToken)
  parent: System.IO.IsolatedStorage.IsolatedStorageFileStream
  langs:
  - csharp
  - vb
  name: ReadAsync(Byte[], Int32, Int32, CancellationToken)
  fullName: System.IO.IsolatedStorage.IsolatedStorageFileStream.ReadAsync(System.Byte[], System.Int32, System.Int32, System.Threading.CancellationToken)
  type: Method
  source:
    remote:
      path: src/System.IO.IsolatedStorage/src/System/IO/IsolatedStorage/IsolatedStorageFileStream.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: ReadAsync
    path: src/System.IO.IsolatedStorage/src/System/IO/IsolatedStorage/IsolatedStorageFileStream.cs
    startLine: 194
  assemblies:
  - System.IO.IsolatedStorage
  namespace: System.IO.IsolatedStorage
  syntax:
    content: public override Task<int> ReadAsync(byte[] buffer, int offset, int count, CancellationToken cancellationToken)
    content.vb: Public Overrides Function ReadAsync(buffer As Byte(), offset As Integer, count As Integer, cancellationToken As CancellationToken) As Task(Of Integer)
    parameters:
    - id: buffer
      type: System.Byte[]
    - id: offset
      type: System.Int32
    - id: count
      type: System.Int32
    - id: cancellationToken
      type: System.Threading.CancellationToken
    return:
      type: System.Threading.Tasks.Task{System.Int32}
  overridden: System.IO.Stream.ReadAsync(System.Byte[],System.Int32,System.Int32,System.Threading.CancellationToken)
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
  fullName.vb: System.IO.IsolatedStorage.IsolatedStorageFileStream.ReadAsync(System.Byte(), System.Int32, System.Int32, System.Threading.CancellationToken)
  name.vb: ReadAsync(Byte(), Int32, Int32, CancellationToken)
  nameWithType: IsolatedStorageFileStream.ReadAsync(Byte[], Int32, Int32, CancellationToken)
  nameWithType.vb: IsolatedStorageFileStream.ReadAsync(Byte(), Int32, Int32, CancellationToken)
- uid: System.IO.IsolatedStorage.IsolatedStorageFileStream.ReadByte
  commentId: M:System.IO.IsolatedStorage.IsolatedStorageFileStream.ReadByte
  id: ReadByte
  parent: System.IO.IsolatedStorage.IsolatedStorageFileStream
  langs:
  - csharp
  - vb
  name: ReadByte()
  fullName: System.IO.IsolatedStorage.IsolatedStorageFileStream.ReadByte()
  type: Method
  source:
    remote:
      path: src/System.IO.IsolatedStorage/src/System/IO/IsolatedStorage/IsolatedStorageFileStream.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: ReadByte
    path: src/System.IO.IsolatedStorage/src/System/IO/IsolatedStorage/IsolatedStorageFileStream.cs
    startLine: 199
  assemblies:
  - System.IO.IsolatedStorage
  namespace: System.IO.IsolatedStorage
  summary: "\n<p>Reads a single byte from the <xref href=\"System.IO.IsolatedStorage.IsolatedStorageFileStream\" data-throw-if-not-resolved=\"false\"></xref> object in isolated storage.</p>\n"
  syntax:
    content: public override int ReadByte()
    content.vb: Public Overrides Function ReadByte As Integer
    return:
      type: System.Int32
      description: "\n<p>The 8-bit unsigned integer value read from the isolated storage file.</p>\n"
  overridden: System.IO.Stream.ReadByte
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
  nameWithType: IsolatedStorageFileStream.ReadByte()
- uid: System.IO.IsolatedStorage.IsolatedStorageFileStream.Seek(System.Int64,System.IO.SeekOrigin)
  commentId: M:System.IO.IsolatedStorage.IsolatedStorageFileStream.Seek(System.Int64,System.IO.SeekOrigin)
  id: Seek(System.Int64,System.IO.SeekOrigin)
  parent: System.IO.IsolatedStorage.IsolatedStorageFileStream
  langs:
  - csharp
  - vb
  name: Seek(Int64, SeekOrigin)
  fullName: System.IO.IsolatedStorage.IsolatedStorageFileStream.Seek(System.Int64, System.IO.SeekOrigin)
  type: Method
  source:
    remote:
      path: src/System.IO.IsolatedStorage/src/System/IO/IsolatedStorage/IsolatedStorageFileStream.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: Seek
    path: src/System.IO.IsolatedStorage/src/System/IO/IsolatedStorage/IsolatedStorageFileStream.cs
    startLine: 204
  assemblies:
  - System.IO.IsolatedStorage
  namespace: System.IO.IsolatedStorage
  summary: "\n<p>Sets the current position of this <xref href=\"System.IO.IsolatedStorage.IsolatedStorageFileStream\" data-throw-if-not-resolved=\"false\"></xref> object to the specified value.</p>\n"
  syntax:
    content: public override long Seek(long offset, SeekOrigin origin)
    content.vb: Public Overrides Function Seek(offset As Long, origin As SeekOrigin) As Long
    parameters:
    - id: offset
      type: System.Int64
      description: "\n<p>The new position of the <xref href=\"System.IO.IsolatedStorage.IsolatedStorageFileStream\" data-throw-if-not-resolved=\"false\"></xref> object. </p>\n"
    - id: origin
      type: System.IO.SeekOrigin
      description: "\n<p>One of the <xref href=\"System.IO.SeekOrigin\" data-throw-if-not-resolved=\"false\"></xref> values. </p>\n"
    return:
      type: System.Int64
      description: "\n<p>The new position in the <xref href=\"System.IO.IsolatedStorage.IsolatedStorageFileStream\" data-throw-if-not-resolved=\"false\"></xref> object.</p>\n"
  overridden: System.IO.Stream.Seek(System.Int64,System.IO.SeekOrigin)
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "\n<p>The <em>origin</em> must be one of the <xref href=\"System.IO.SeekOrigin\" data-throw-if-not-resolved=\"false\"></xref> values. </p>\n"
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
  nameWithType: IsolatedStorageFileStream.Seek(Int64, SeekOrigin)
- uid: System.IO.IsolatedStorage.IsolatedStorageFileStream.SetLength(System.Int64)
  commentId: M:System.IO.IsolatedStorage.IsolatedStorageFileStream.SetLength(System.Int64)
  id: SetLength(System.Int64)
  parent: System.IO.IsolatedStorage.IsolatedStorageFileStream
  langs:
  - csharp
  - vb
  name: SetLength(Int64)
  fullName: System.IO.IsolatedStorage.IsolatedStorageFileStream.SetLength(System.Int64)
  type: Method
  source:
    remote:
      path: src/System.IO.IsolatedStorage/src/System/IO/IsolatedStorage/IsolatedStorageFileStream.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: SetLength
    path: src/System.IO.IsolatedStorage/src/System/IO/IsolatedStorage/IsolatedStorageFileStream.cs
    startLine: 184
  assemblies:
  - System.IO.IsolatedStorage
  namespace: System.IO.IsolatedStorage
  summary: "\n<p>Sets the length of this <xref href=\"System.IO.IsolatedStorage.IsolatedStorageFileStream\" data-throw-if-not-resolved=\"false\"></xref> object to the specified <em>value</em>.</p>\n"
  syntax:
    content: public override void SetLength(long value)
    content.vb: Public Overrides Sub SetLength(value As Long)
    parameters:
    - id: value
      type: System.Int64
      description: "\n<p>The new length of the <xref href=\"System.IO.IsolatedStorage.IsolatedStorageFileStream\" data-throw-if-not-resolved=\"false\"></xref> object. </p>\n"
  overridden: System.IO.Stream.SetLength(System.Int64)
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "\n<p>\n<em>value</em> is a negative number.</p>\n"
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
  nameWithType: IsolatedStorageFileStream.SetLength(Int64)
- uid: System.IO.IsolatedStorage.IsolatedStorageFileStream.Write(System.Byte[],System.Int32,System.Int32)
  commentId: M:System.IO.IsolatedStorage.IsolatedStorageFileStream.Write(System.Byte[],System.Int32,System.Int32)
  id: Write(System.Byte[],System.Int32,System.Int32)
  parent: System.IO.IsolatedStorage.IsolatedStorageFileStream
  langs:
  - csharp
  - vb
  name: Write(Byte[], Int32, Int32)
  fullName: System.IO.IsolatedStorage.IsolatedStorageFileStream.Write(System.Byte[], System.Int32, System.Int32)
  type: Method
  source:
    remote:
      path: src/System.IO.IsolatedStorage/src/System/IO/IsolatedStorage/IsolatedStorageFileStream.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: Write
    path: src/System.IO.IsolatedStorage/src/System/IO/IsolatedStorage/IsolatedStorageFileStream.cs
    startLine: 211
  assemblies:
  - System.IO.IsolatedStorage
  namespace: System.IO.IsolatedStorage
  summary: "\n<p>Writes a block of bytes to the <xref href=\"System.IO.IsolatedStorage.IsolatedStorageFileStream\" data-throw-if-not-resolved=\"false\"></xref> object using data read from a byte array.</p>\n"
  syntax:
    content: public override void Write(byte[] buffer, int offset, int count)
    content.vb: Public Overrides Sub Write(buffer As Byte(), offset As Integer, count As Integer)
    parameters:
    - id: buffer
      type: System.Byte[]
      description: "\n<p>The buffer to write. </p>\n"
    - id: offset
      type: System.Int32
      description: "\n<p>The byte offset in buffer from which to begin. </p>\n"
    - id: count
      type: System.Int32
      description: "\n<p>The maximum number of bytes to write. </p>\n"
  overridden: System.IO.Stream.Write(System.Byte[],System.Int32,System.Int32)
  exceptions:
  - type: System.IO.IsolatedStorage.IsolatedStorageException
    commentId: T:System.IO.IsolatedStorage.IsolatedStorageException
    description: "\n<p>The write attempt exceeds the quota for the <xref href=\"System.IO.IsolatedStorage.IsolatedStorageFileStream\" data-throw-if-not-resolved=\"false\"></xref> object. </p>\n"
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
  fullName.vb: System.IO.IsolatedStorage.IsolatedStorageFileStream.Write(System.Byte(), System.Int32, System.Int32)
  name.vb: Write(Byte(), Int32, Int32)
  nameWithType: IsolatedStorageFileStream.Write(Byte[], Int32, Int32)
  nameWithType.vb: IsolatedStorageFileStream.Write(Byte(), Int32, Int32)
- uid: System.IO.IsolatedStorage.IsolatedStorageFileStream.WriteAsync(System.Byte[],System.Int32,System.Int32,System.Threading.CancellationToken)
  commentId: M:System.IO.IsolatedStorage.IsolatedStorageFileStream.WriteAsync(System.Byte[],System.Int32,System.Int32,System.Threading.CancellationToken)
  id: WriteAsync(System.Byte[],System.Int32,System.Int32,System.Threading.CancellationToken)
  parent: System.IO.IsolatedStorage.IsolatedStorageFileStream
  langs:
  - csharp
  - vb
  name: WriteAsync(Byte[], Int32, Int32, CancellationToken)
  fullName: System.IO.IsolatedStorage.IsolatedStorageFileStream.WriteAsync(System.Byte[], System.Int32, System.Int32, System.Threading.CancellationToken)
  type: Method
  source:
    remote:
      path: src/System.IO.IsolatedStorage/src/System/IO/IsolatedStorage/IsolatedStorageFileStream.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: WriteAsync
    path: src/System.IO.IsolatedStorage/src/System/IO/IsolatedStorage/IsolatedStorageFileStream.cs
    startLine: 216
  assemblies:
  - System.IO.IsolatedStorage
  namespace: System.IO.IsolatedStorage
  syntax:
    content: public override Task WriteAsync(byte[] buffer, int offset, int count, CancellationToken cancellationToken)
    content.vb: Public Overrides Function WriteAsync(buffer As Byte(), offset As Integer, count As Integer, cancellationToken As CancellationToken) As Task
    parameters:
    - id: buffer
      type: System.Byte[]
    - id: offset
      type: System.Int32
    - id: count
      type: System.Int32
    - id: cancellationToken
      type: System.Threading.CancellationToken
    return:
      type: System.Threading.Tasks.Task
  overridden: System.IO.Stream.WriteAsync(System.Byte[],System.Int32,System.Int32,System.Threading.CancellationToken)
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
  fullName.vb: System.IO.IsolatedStorage.IsolatedStorageFileStream.WriteAsync(System.Byte(), System.Int32, System.Int32, System.Threading.CancellationToken)
  name.vb: WriteAsync(Byte(), Int32, Int32, CancellationToken)
  nameWithType: IsolatedStorageFileStream.WriteAsync(Byte[], Int32, Int32, CancellationToken)
  nameWithType.vb: IsolatedStorageFileStream.WriteAsync(Byte(), Int32, Int32, CancellationToken)
- uid: System.IO.IsolatedStorage.IsolatedStorageFileStream.WriteByte(System.Byte)
  commentId: M:System.IO.IsolatedStorage.IsolatedStorageFileStream.WriteByte(System.Byte)
  id: WriteByte(System.Byte)
  parent: System.IO.IsolatedStorage.IsolatedStorageFileStream
  langs:
  - csharp
  - vb
  name: WriteByte(Byte)
  fullName: System.IO.IsolatedStorage.IsolatedStorageFileStream.WriteByte(System.Byte)
  type: Method
  source:
    remote:
      path: src/System.IO.IsolatedStorage/src/System/IO/IsolatedStorage/IsolatedStorageFileStream.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: WriteByte
    path: src/System.IO.IsolatedStorage/src/System/IO/IsolatedStorage/IsolatedStorageFileStream.cs
    startLine: 221
  assemblies:
  - System.IO.IsolatedStorage
  namespace: System.IO.IsolatedStorage
  summary: "\n<p>Writes a single byte to the <xref href=\"System.IO.IsolatedStorage.IsolatedStorageFileStream\" data-throw-if-not-resolved=\"false\"></xref> object.</p>\n"
  syntax:
    content: public override void WriteByte(byte value)
    content.vb: Public Overrides Sub WriteByte(value As Byte)
    parameters:
    - id: value
      type: System.Byte
      description: "\n<p>The byte value to write to the isolated storage file. </p>\n"
  overridden: System.IO.Stream.WriteByte(System.Byte)
  exceptions:
  - type: System.IO.IsolatedStorage.IsolatedStorageException
    commentId: T:System.IO.IsolatedStorage.IsolatedStorageException
    description: "\n<p>The write attempt exceeds the quota for the <xref href=\"System.IO.IsolatedStorage.IsolatedStorageFileStream\" data-throw-if-not-resolved=\"false\"></xref> object. </p>\n"
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
  nameWithType: IsolatedStorageFileStream.WriteByte(Byte)
references:
- uid: System.IO.IsolatedStorage
  isExternal: false
  name: System.IO.IsolatedStorage
  fullName: System.IO.IsolatedStorage
  nameWithType: System.IO.IsolatedStorage
  commentId: N:System.IO.IsolatedStorage
- uid: System.Object
  parent: System
  isExternal: false
  name: Object
  fullName: System.Object
  nameWithType: Object
  commentId: T:System.Object
- uid: System.MarshalByRefObject
  parent: System
  isExternal: true
  name: MarshalByRefObject
  fullName: System.MarshalByRefObject
  nameWithType: MarshalByRefObject
  commentId: T:System.MarshalByRefObject
- uid: System.IO.Stream
  parent: System.IO
  isExternal: false
  name: Stream
  fullName: System.IO.Stream
  nameWithType: Stream
  commentId: T:System.IO.Stream
- uid: System.IDisposable
  parent: System
  isExternal: false
  name: IDisposable
  fullName: System.IDisposable
  nameWithType: IDisposable
  commentId: T:System.IDisposable
- uid: System.IO.Stream.Null
  parent: System.IO.Stream
  isExternal: false
  fullName: System.IO.Stream.Null
  nameWithType: Stream.Null
  commentId: F:System.IO.Stream.Null
- uid: System.IO.Stream.CopyToAsync(System.IO.Stream)
  parent: System.IO.Stream
  isExternal: false
  name: CopyToAsync(Stream)
  fullName: System.IO.Stream.CopyToAsync(System.IO.Stream)
  spec.csharp:
  - uid: System.IO.Stream.CopyToAsync(System.IO.Stream)
    name: CopyToAsync
    fullName: System.IO.Stream.CopyToAsync
  - name: (
    fullName: (
  - uid: System.IO.Stream
    name: Stream
    fullName: System.IO.Stream
  - name: )
    fullName: )
  spec.vb:
  - uid: System.IO.Stream.CopyToAsync(System.IO.Stream)
    name: CopyToAsync
    fullName: System.IO.Stream.CopyToAsync
  - name: (
    fullName: (
  - uid: System.IO.Stream
    name: Stream
    fullName: System.IO.Stream
  - name: )
    fullName: )
  nameWithType: Stream.CopyToAsync(Stream)
  commentId: M:System.IO.Stream.CopyToAsync(System.IO.Stream)
- uid: System.IO.Stream.CopyToAsync(System.IO.Stream,System.Int32)
  parent: System.IO.Stream
  isExternal: true
  name: CopyToAsync(Stream, Int32)
  fullName: System.IO.Stream.CopyToAsync(System.IO.Stream, System.Int32)
  spec.csharp:
  - uid: System.IO.Stream.CopyToAsync(System.IO.Stream,System.Int32)
    name: CopyToAsync
    fullName: System.IO.Stream.CopyToAsync
  - name: (
    fullName: (
  - uid: System.IO.Stream
    name: Stream
    fullName: System.IO.Stream
  - name: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.IO.Stream.CopyToAsync(System.IO.Stream,System.Int32)
    name: CopyToAsync
    fullName: System.IO.Stream.CopyToAsync
  - name: (
    fullName: (
  - uid: System.IO.Stream
    name: Stream
    fullName: System.IO.Stream
  - name: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    fullName: )
  nameWithType: Stream.CopyToAsync(Stream, Int32)
  commentId: M:System.IO.Stream.CopyToAsync(System.IO.Stream,System.Int32)
- uid: System.IO.Stream.CopyToAsync(System.IO.Stream,System.Int32,System.Threading.CancellationToken)
  parent: System.IO.Stream
  isExternal: true
  name: CopyToAsync(Stream, Int32, CancellationToken)
  fullName: System.IO.Stream.CopyToAsync(System.IO.Stream, System.Int32, System.Threading.CancellationToken)
  spec.csharp:
  - uid: System.IO.Stream.CopyToAsync(System.IO.Stream,System.Int32,System.Threading.CancellationToken)
    name: CopyToAsync
    fullName: System.IO.Stream.CopyToAsync
  - name: (
    fullName: (
  - uid: System.IO.Stream
    name: Stream
    fullName: System.IO.Stream
  - name: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.IO.Stream.CopyToAsync(System.IO.Stream,System.Int32,System.Threading.CancellationToken)
    name: CopyToAsync
    fullName: System.IO.Stream.CopyToAsync
  - name: (
    fullName: (
  - uid: System.IO.Stream
    name: Stream
    fullName: System.IO.Stream
  - name: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    fullName: )
  nameWithType: Stream.CopyToAsync(Stream, Int32, CancellationToken)
  commentId: M:System.IO.Stream.CopyToAsync(System.IO.Stream,System.Int32,System.Threading.CancellationToken)
- uid: System.IO.Stream.CopyTo(System.IO.Stream)
  parent: System.IO.Stream
  isExternal: false
  name: CopyTo(Stream)
  fullName: System.IO.Stream.CopyTo(System.IO.Stream)
  spec.csharp:
  - uid: System.IO.Stream.CopyTo(System.IO.Stream)
    name: CopyTo
    fullName: System.IO.Stream.CopyTo
  - name: (
    fullName: (
  - uid: System.IO.Stream
    name: Stream
    fullName: System.IO.Stream
  - name: )
    fullName: )
  spec.vb:
  - uid: System.IO.Stream.CopyTo(System.IO.Stream)
    name: CopyTo
    fullName: System.IO.Stream.CopyTo
  - name: (
    fullName: (
  - uid: System.IO.Stream
    name: Stream
    fullName: System.IO.Stream
  - name: )
    fullName: )
  nameWithType: Stream.CopyTo(Stream)
  commentId: M:System.IO.Stream.CopyTo(System.IO.Stream)
- uid: System.IO.Stream.CopyTo(System.IO.Stream,System.Int32)
  parent: System.IO.Stream
  isExternal: true
  name: CopyTo(Stream, Int32)
  fullName: System.IO.Stream.CopyTo(System.IO.Stream, System.Int32)
  spec.csharp:
  - uid: System.IO.Stream.CopyTo(System.IO.Stream,System.Int32)
    name: CopyTo
    fullName: System.IO.Stream.CopyTo
  - name: (
    fullName: (
  - uid: System.IO.Stream
    name: Stream
    fullName: System.IO.Stream
  - name: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.IO.Stream.CopyTo(System.IO.Stream,System.Int32)
    name: CopyTo
    fullName: System.IO.Stream.CopyTo
  - name: (
    fullName: (
  - uid: System.IO.Stream
    name: Stream
    fullName: System.IO.Stream
  - name: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    fullName: )
  nameWithType: Stream.CopyTo(Stream, Int32)
  commentId: M:System.IO.Stream.CopyTo(System.IO.Stream,System.Int32)
- uid: System.IO.Stream.Close
  parent: System.IO.Stream
  isExternal: true
  name: Close()
  fullName: System.IO.Stream.Close()
  spec.csharp:
  - uid: System.IO.Stream.Close
    name: Close
    fullName: System.IO.Stream.Close
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.IO.Stream.Close
    name: Close
    fullName: System.IO.Stream.Close
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  nameWithType: Stream.Close()
  commentId: M:System.IO.Stream.Close
- uid: System.IO.Stream.Dispose
  parent: System.IO.Stream
  isExternal: false
  name: Dispose()
  fullName: System.IO.Stream.Dispose()
  spec.csharp:
  - uid: System.IO.Stream.Dispose
    name: Dispose
    fullName: System.IO.Stream.Dispose
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.IO.Stream.Dispose
    name: Dispose
    fullName: System.IO.Stream.Dispose
  - name: (
    fullName: (
  - name: )
    fullName: )
  nameWithType: Stream.Dispose()
  commentId: M:System.IO.Stream.Dispose
- uid: System.IO.Stream.FlushAsync
  parent: System.IO.Stream
  isExternal: false
  name: FlushAsync()
  fullName: System.IO.Stream.FlushAsync()
  spec.csharp:
  - uid: System.IO.Stream.FlushAsync
    name: FlushAsync
    fullName: System.IO.Stream.FlushAsync
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.IO.Stream.FlushAsync
    name: FlushAsync
    fullName: System.IO.Stream.FlushAsync
  - name: (
    fullName: (
  - name: )
    fullName: )
  nameWithType: Stream.FlushAsync()
  commentId: M:System.IO.Stream.FlushAsync
- uid: System.IO.Stream.CreateWaitHandle
  parent: System.IO.Stream
  isExternal: true
  name: CreateWaitHandle()
  fullName: System.IO.Stream.CreateWaitHandle()
  spec.csharp:
  - uid: System.IO.Stream.CreateWaitHandle
    name: CreateWaitHandle
    fullName: System.IO.Stream.CreateWaitHandle
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.IO.Stream.CreateWaitHandle
    name: CreateWaitHandle
    fullName: System.IO.Stream.CreateWaitHandle
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  nameWithType: Stream.CreateWaitHandle()
  commentId: M:System.IO.Stream.CreateWaitHandle
- uid: System.IO.Stream.BeginRead(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)
  parent: System.IO.Stream
  isExternal: true
  name: BeginRead(Byte[], Int32, Int32, AsyncCallback, Object)
  fullName: System.IO.Stream.BeginRead(System.Byte[], System.Int32, System.Int32, System.AsyncCallback, System.Object)
  fullname.vb: System.IO.Stream.BeginRead(System.Byte(), System.Int32, System.Int32, System.AsyncCallback, System.Object)
  name.vb: BeginRead(Byte(), Int32, Int32, AsyncCallback, Object)
  spec.csharp:
  - uid: System.IO.Stream.BeginRead(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)
    name: BeginRead
    fullName: System.IO.Stream.BeginRead
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Byte
    name: Byte
    fullName: System.Byte
    isExternal: true
  - name: '[]'
    fullName: '[]'
  - name: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.AsyncCallback
    name: AsyncCallback
    fullName: System.AsyncCallback
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.IO.Stream.BeginRead(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)
    name: BeginRead
    fullName: System.IO.Stream.BeginRead
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Byte
    name: Byte
    fullName: System.Byte
    isExternal: true
  - name: ()
    fullName: ()
  - name: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.AsyncCallback
    name: AsyncCallback
    fullName: System.AsyncCallback
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
  nameWithType: Stream.BeginRead(Byte[], Int32, Int32, AsyncCallback, Object)
  nameWithType.vb: Stream.BeginRead(Byte(), Int32, Int32, AsyncCallback, Object)
  commentId: M:System.IO.Stream.BeginRead(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)
- uid: System.IO.Stream.EndRead(System.IAsyncResult)
  parent: System.IO.Stream
  isExternal: true
  name: EndRead(IAsyncResult)
  fullName: System.IO.Stream.EndRead(System.IAsyncResult)
  spec.csharp:
  - uid: System.IO.Stream.EndRead(System.IAsyncResult)
    name: EndRead
    fullName: System.IO.Stream.EndRead
    isExternal: true
  - name: (
    fullName: (
  - uid: System.IAsyncResult
    name: IAsyncResult
    fullName: System.IAsyncResult
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.IO.Stream.EndRead(System.IAsyncResult)
    name: EndRead
    fullName: System.IO.Stream.EndRead
    isExternal: true
  - name: (
    fullName: (
  - uid: System.IAsyncResult
    name: IAsyncResult
    fullName: System.IAsyncResult
    isExternal: true
  - name: )
    fullName: )
  nameWithType: Stream.EndRead(IAsyncResult)
  commentId: M:System.IO.Stream.EndRead(System.IAsyncResult)
- uid: System.IO.Stream.ReadAsync(System.Byte[],System.Int32,System.Int32)
  parent: System.IO.Stream
  isExternal: true
  name: ReadAsync(Byte[], Int32, Int32)
  fullName: System.IO.Stream.ReadAsync(System.Byte[], System.Int32, System.Int32)
  fullname.vb: System.IO.Stream.ReadAsync(System.Byte(), System.Int32, System.Int32)
  name.vb: ReadAsync(Byte(), Int32, Int32)
  spec.csharp:
  - uid: System.IO.Stream.ReadAsync(System.Byte[],System.Int32,System.Int32)
    name: ReadAsync
    fullName: System.IO.Stream.ReadAsync
  - name: (
    fullName: (
  - uid: System.Byte
    name: Byte
    fullName: System.Byte
    isExternal: true
  - name: '[]'
    fullName: '[]'
  - name: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.IO.Stream.ReadAsync(System.Byte[],System.Int32,System.Int32)
    name: ReadAsync
    fullName: System.IO.Stream.ReadAsync
  - name: (
    fullName: (
  - uid: System.Byte
    name: Byte
    fullName: System.Byte
    isExternal: true
  - name: ()
    fullName: ()
  - name: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    fullName: )
  nameWithType: Stream.ReadAsync(Byte[], Int32, Int32)
  nameWithType.vb: Stream.ReadAsync(Byte(), Int32, Int32)
  commentId: M:System.IO.Stream.ReadAsync(System.Byte[],System.Int32,System.Int32)
- uid: System.IO.Stream.BeginWrite(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)
  parent: System.IO.Stream
  isExternal: true
  name: BeginWrite(Byte[], Int32, Int32, AsyncCallback, Object)
  fullName: System.IO.Stream.BeginWrite(System.Byte[], System.Int32, System.Int32, System.AsyncCallback, System.Object)
  fullname.vb: System.IO.Stream.BeginWrite(System.Byte(), System.Int32, System.Int32, System.AsyncCallback, System.Object)
  name.vb: BeginWrite(Byte(), Int32, Int32, AsyncCallback, Object)
  spec.csharp:
  - uid: System.IO.Stream.BeginWrite(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)
    name: BeginWrite
    fullName: System.IO.Stream.BeginWrite
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Byte
    name: Byte
    fullName: System.Byte
    isExternal: true
  - name: '[]'
    fullName: '[]'
  - name: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.AsyncCallback
    name: AsyncCallback
    fullName: System.AsyncCallback
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.IO.Stream.BeginWrite(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)
    name: BeginWrite
    fullName: System.IO.Stream.BeginWrite
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Byte
    name: Byte
    fullName: System.Byte
    isExternal: true
  - name: ()
    fullName: ()
  - name: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.AsyncCallback
    name: AsyncCallback
    fullName: System.AsyncCallback
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
  nameWithType: Stream.BeginWrite(Byte[], Int32, Int32, AsyncCallback, Object)
  nameWithType.vb: Stream.BeginWrite(Byte(), Int32, Int32, AsyncCallback, Object)
  commentId: M:System.IO.Stream.BeginWrite(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)
- uid: System.IO.Stream.EndWrite(System.IAsyncResult)
  parent: System.IO.Stream
  isExternal: true
  name: EndWrite(IAsyncResult)
  fullName: System.IO.Stream.EndWrite(System.IAsyncResult)
  spec.csharp:
  - uid: System.IO.Stream.EndWrite(System.IAsyncResult)
    name: EndWrite
    fullName: System.IO.Stream.EndWrite
    isExternal: true
  - name: (
    fullName: (
  - uid: System.IAsyncResult
    name: IAsyncResult
    fullName: System.IAsyncResult
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.IO.Stream.EndWrite(System.IAsyncResult)
    name: EndWrite
    fullName: System.IO.Stream.EndWrite
    isExternal: true
  - name: (
    fullName: (
  - uid: System.IAsyncResult
    name: IAsyncResult
    fullName: System.IAsyncResult
    isExternal: true
  - name: )
    fullName: )
  nameWithType: Stream.EndWrite(IAsyncResult)
  commentId: M:System.IO.Stream.EndWrite(System.IAsyncResult)
- uid: System.IO.Stream.WriteAsync(System.Byte[],System.Int32,System.Int32)
  parent: System.IO.Stream
  isExternal: true
  name: WriteAsync(Byte[], Int32, Int32)
  fullName: System.IO.Stream.WriteAsync(System.Byte[], System.Int32, System.Int32)
  fullname.vb: System.IO.Stream.WriteAsync(System.Byte(), System.Int32, System.Int32)
  name.vb: WriteAsync(Byte(), Int32, Int32)
  spec.csharp:
  - uid: System.IO.Stream.WriteAsync(System.Byte[],System.Int32,System.Int32)
    name: WriteAsync
    fullName: System.IO.Stream.WriteAsync
  - name: (
    fullName: (
  - uid: System.Byte
    name: Byte
    fullName: System.Byte
    isExternal: true
  - name: '[]'
    fullName: '[]'
  - name: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.IO.Stream.WriteAsync(System.Byte[],System.Int32,System.Int32)
    name: WriteAsync
    fullName: System.IO.Stream.WriteAsync
  - name: (
    fullName: (
  - uid: System.Byte
    name: Byte
    fullName: System.Byte
    isExternal: true
  - name: ()
    fullName: ()
  - name: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    fullName: )
  nameWithType: Stream.WriteAsync(Byte[], Int32, Int32)
  nameWithType.vb: Stream.WriteAsync(Byte(), Int32, Int32)
  commentId: M:System.IO.Stream.WriteAsync(System.Byte[],System.Int32,System.Int32)
- uid: System.IO.Stream.Synchronized(System.IO.Stream)
  parent: System.IO.Stream
  isExternal: true
  name: Synchronized(Stream)
  fullName: System.IO.Stream.Synchronized(System.IO.Stream)
  spec.csharp:
  - uid: System.IO.Stream.Synchronized(System.IO.Stream)
    name: Synchronized
    fullName: System.IO.Stream.Synchronized
    isExternal: true
  - name: (
    fullName: (
  - uid: System.IO.Stream
    name: Stream
    fullName: System.IO.Stream
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.IO.Stream.Synchronized(System.IO.Stream)
    name: Synchronized
    fullName: System.IO.Stream.Synchronized
    isExternal: true
  - name: (
    fullName: (
  - uid: System.IO.Stream
    name: Stream
    fullName: System.IO.Stream
    isExternal: true
  - name: )
    fullName: )
  nameWithType: Stream.Synchronized(Stream)
  commentId: M:System.IO.Stream.Synchronized(System.IO.Stream)
- uid: System.IO.Stream.ObjectInvariant
  parent: System.IO.Stream
  isExternal: true
  name: ObjectInvariant()
  fullName: System.IO.Stream.ObjectInvariant()
  spec.csharp:
  - uid: System.IO.Stream.ObjectInvariant
    name: ObjectInvariant
    fullName: System.IO.Stream.ObjectInvariant
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.IO.Stream.ObjectInvariant
    name: ObjectInvariant
    fullName: System.IO.Stream.ObjectInvariant
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  nameWithType: Stream.ObjectInvariant()
  commentId: M:System.IO.Stream.ObjectInvariant
- uid: System.IO.Stream.CanTimeout
  parent: System.IO.Stream
  isExternal: false
  name: CanTimeout
  fullName: System.IO.Stream.CanTimeout
  nameWithType: Stream.CanTimeout
  commentId: P:System.IO.Stream.CanTimeout
- uid: System.IO.Stream.ReadTimeout
  parent: System.IO.Stream
  isExternal: false
  name: ReadTimeout
  fullName: System.IO.Stream.ReadTimeout
  nameWithType: Stream.ReadTimeout
  commentId: P:System.IO.Stream.ReadTimeout
- uid: System.IO.Stream.WriteTimeout
  parent: System.IO.Stream
  isExternal: false
  name: WriteTimeout
  fullName: System.IO.Stream.WriteTimeout
  nameWithType: Stream.WriteTimeout
  commentId: P:System.IO.Stream.WriteTimeout
- uid: System.MarshalByRefObject.MemberwiseClone(System.Boolean)
  parent: System.MarshalByRefObject
  isExternal: true
  name: MemberwiseClone(Boolean)
  fullName: System.MarshalByRefObject.MemberwiseClone(System.Boolean)
  spec.csharp:
  - uid: System.MarshalByRefObject.MemberwiseClone(System.Boolean)
    name: MemberwiseClone
    fullName: System.MarshalByRefObject.MemberwiseClone
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Boolean
    name: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.MarshalByRefObject.MemberwiseClone(System.Boolean)
    name: MemberwiseClone
    fullName: System.MarshalByRefObject.MemberwiseClone
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Boolean
    name: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    fullName: )
  nameWithType: MarshalByRefObject.MemberwiseClone(Boolean)
  commentId: M:System.MarshalByRefObject.MemberwiseClone(System.Boolean)
- uid: System.MarshalByRefObject.GetLifetimeService
  parent: System.MarshalByRefObject
  isExternal: true
  name: GetLifetimeService()
  fullName: System.MarshalByRefObject.GetLifetimeService()
  spec.csharp:
  - uid: System.MarshalByRefObject.GetLifetimeService
    name: GetLifetimeService
    fullName: System.MarshalByRefObject.GetLifetimeService
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.MarshalByRefObject.GetLifetimeService
    name: GetLifetimeService
    fullName: System.MarshalByRefObject.GetLifetimeService
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  nameWithType: MarshalByRefObject.GetLifetimeService()
  commentId: M:System.MarshalByRefObject.GetLifetimeService
- uid: System.MarshalByRefObject.InitializeLifetimeService
  parent: System.MarshalByRefObject
  isExternal: true
  name: InitializeLifetimeService()
  fullName: System.MarshalByRefObject.InitializeLifetimeService()
  spec.csharp:
  - uid: System.MarshalByRefObject.InitializeLifetimeService
    name: InitializeLifetimeService
    fullName: System.MarshalByRefObject.InitializeLifetimeService
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.MarshalByRefObject.InitializeLifetimeService
    name: InitializeLifetimeService
    fullName: System.MarshalByRefObject.InitializeLifetimeService
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  nameWithType: MarshalByRefObject.InitializeLifetimeService()
  commentId: M:System.MarshalByRefObject.InitializeLifetimeService
- uid: System.MarshalByRefObject.CreateObjRef(System.Type)
  parent: System.MarshalByRefObject
  isExternal: true
  name: CreateObjRef(Type)
  fullName: System.MarshalByRefObject.CreateObjRef(System.Type)
  spec.csharp:
  - uid: System.MarshalByRefObject.CreateObjRef(System.Type)
    name: CreateObjRef
    fullName: System.MarshalByRefObject.CreateObjRef
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Type
    name: Type
    fullName: System.Type
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.MarshalByRefObject.CreateObjRef(System.Type)
    name: CreateObjRef
    fullName: System.MarshalByRefObject.CreateObjRef
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Type
    name: Type
    fullName: System.Type
    isExternal: true
  - name: )
    fullName: )
  nameWithType: MarshalByRefObject.CreateObjRef(Type)
  commentId: M:System.MarshalByRefObject.CreateObjRef(System.Type)
- uid: System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  nameWithType: Object.ToString()
  commentId: M:System.Object.ToString
- uid: System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
  nameWithType: Object.Equals(Object)
  commentId: M:System.Object.Equals(System.Object)
- uid: System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
  nameWithType: Object.Equals(Object, Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
  nameWithType: Object.ReferenceEquals(Object, Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
- uid: System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  nameWithType: Object.GetHashCode()
  commentId: M:System.Object.GetHashCode
- uid: System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  nameWithType: Object.GetType()
  commentId: M:System.Object.GetType
- uid: System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  nameWithType: Object.MemberwiseClone()
  commentId: M:System.Object.MemberwiseClone
- uid: System.IO.Stream.System.IO.WindowsRuntimeStreamExtensions.AsInputStream
  parent: System.IO.WindowsRuntimeStreamExtensions
  definition: System.IO.WindowsRuntimeStreamExtensions.AsInputStream(System.IO.Stream)
  name: AsInputStream()
  fullName: System.IO.WindowsRuntimeStreamExtensions.AsInputStream()
  spec.csharp:
  - uid: System.IO.WindowsRuntimeStreamExtensions.AsInputStream
    name: AsInputStream
    fullName: System.IO.WindowsRuntimeStreamExtensions.AsInputStream
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.IO.WindowsRuntimeStreamExtensions.AsInputStream
    name: AsInputStream
    fullName: System.IO.WindowsRuntimeStreamExtensions.AsInputStream
  - name: (
    fullName: (
  - name: )
    fullName: )
  nameWithType: WindowsRuntimeStreamExtensions.AsInputStream()
  commentId: M:System.IO.WindowsRuntimeStreamExtensions.AsInputStream(System.IO.Stream)
- uid: System.IO.Stream.System.IO.WindowsRuntimeStreamExtensions.AsOutputStream
  parent: System.IO.WindowsRuntimeStreamExtensions
  definition: System.IO.WindowsRuntimeStreamExtensions.AsOutputStream(System.IO.Stream)
  name: AsOutputStream()
  fullName: System.IO.WindowsRuntimeStreamExtensions.AsOutputStream()
  spec.csharp:
  - uid: System.IO.WindowsRuntimeStreamExtensions.AsOutputStream
    name: AsOutputStream
    fullName: System.IO.WindowsRuntimeStreamExtensions.AsOutputStream
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.IO.WindowsRuntimeStreamExtensions.AsOutputStream
    name: AsOutputStream
    fullName: System.IO.WindowsRuntimeStreamExtensions.AsOutputStream
  - name: (
    fullName: (
  - name: )
    fullName: )
  nameWithType: WindowsRuntimeStreamExtensions.AsOutputStream()
  commentId: M:System.IO.WindowsRuntimeStreamExtensions.AsOutputStream(System.IO.Stream)
- uid: System.IO.Stream.System.IO.WindowsRuntimeStreamExtensions.AsRandomAccessStream
  parent: System.IO.WindowsRuntimeStreamExtensions
  definition: System.IO.WindowsRuntimeStreamExtensions.AsRandomAccessStream(System.IO.Stream)
  name: AsRandomAccessStream()
  fullName: System.IO.WindowsRuntimeStreamExtensions.AsRandomAccessStream()
  spec.csharp:
  - uid: System.IO.WindowsRuntimeStreamExtensions.AsRandomAccessStream
    name: AsRandomAccessStream
    fullName: System.IO.WindowsRuntimeStreamExtensions.AsRandomAccessStream
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.IO.WindowsRuntimeStreamExtensions.AsRandomAccessStream
    name: AsRandomAccessStream
    fullName: System.IO.WindowsRuntimeStreamExtensions.AsRandomAccessStream
  - name: (
    fullName: (
  - name: )
    fullName: )
  nameWithType: WindowsRuntimeStreamExtensions.AsRandomAccessStream()
  commentId: M:System.IO.WindowsRuntimeStreamExtensions.AsRandomAccessStream(System.IO.Stream)
- uid: System
  isExternal: false
  name: System
  fullName: System
  nameWithType: System
  commentId: N:System
- uid: System.IO
  isExternal: false
  name: System.IO
  fullName: System.IO
  nameWithType: System.IO
  commentId: N:System.IO
- uid: System.IO.WindowsRuntimeStreamExtensions.AsInputStream(System.IO.Stream)
  isExternal: true
  name: AsInputStream(Stream)
  fullName: System.IO.WindowsRuntimeStreamExtensions.AsInputStream(System.IO.Stream)
  spec.csharp:
  - uid: System.IO.WindowsRuntimeStreamExtensions.AsInputStream(System.IO.Stream)
    name: AsInputStream
    fullName: System.IO.WindowsRuntimeStreamExtensions.AsInputStream
  - name: (
    fullName: (
  - uid: System.IO.Stream
    name: Stream
    fullName: System.IO.Stream
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.IO.WindowsRuntimeStreamExtensions.AsInputStream(System.IO.Stream)
    name: AsInputStream
    fullName: System.IO.WindowsRuntimeStreamExtensions.AsInputStream
  - name: (
    fullName: (
  - uid: System.IO.Stream
    name: Stream
    fullName: System.IO.Stream
    isExternal: true
  - name: )
    fullName: )
  nameWithType: WindowsRuntimeStreamExtensions.AsInputStream(Stream)
  commentId: M:System.IO.WindowsRuntimeStreamExtensions.AsInputStream(System.IO.Stream)
- uid: System.IO.WindowsRuntimeStreamExtensions
  parent: System.IO
  isExternal: false
  name: WindowsRuntimeStreamExtensions
  fullName: System.IO.WindowsRuntimeStreamExtensions
  nameWithType: WindowsRuntimeStreamExtensions
  commentId: T:System.IO.WindowsRuntimeStreamExtensions
- uid: System.IO.WindowsRuntimeStreamExtensions.AsOutputStream(System.IO.Stream)
  isExternal: true
  name: AsOutputStream(Stream)
  fullName: System.IO.WindowsRuntimeStreamExtensions.AsOutputStream(System.IO.Stream)
  spec.csharp:
  - uid: System.IO.WindowsRuntimeStreamExtensions.AsOutputStream(System.IO.Stream)
    name: AsOutputStream
    fullName: System.IO.WindowsRuntimeStreamExtensions.AsOutputStream
  - name: (
    fullName: (
  - uid: System.IO.Stream
    name: Stream
    fullName: System.IO.Stream
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.IO.WindowsRuntimeStreamExtensions.AsOutputStream(System.IO.Stream)
    name: AsOutputStream
    fullName: System.IO.WindowsRuntimeStreamExtensions.AsOutputStream
  - name: (
    fullName: (
  - uid: System.IO.Stream
    name: Stream
    fullName: System.IO.Stream
    isExternal: true
  - name: )
    fullName: )
  nameWithType: WindowsRuntimeStreamExtensions.AsOutputStream(Stream)
  commentId: M:System.IO.WindowsRuntimeStreamExtensions.AsOutputStream(System.IO.Stream)
- uid: System.IO.WindowsRuntimeStreamExtensions.AsRandomAccessStream(System.IO.Stream)
  isExternal: true
  name: AsRandomAccessStream(Stream)
  fullName: System.IO.WindowsRuntimeStreamExtensions.AsRandomAccessStream(System.IO.Stream)
  spec.csharp:
  - uid: System.IO.WindowsRuntimeStreamExtensions.AsRandomAccessStream(System.IO.Stream)
    name: AsRandomAccessStream
    fullName: System.IO.WindowsRuntimeStreamExtensions.AsRandomAccessStream
  - name: (
    fullName: (
  - uid: System.IO.Stream
    name: Stream
    fullName: System.IO.Stream
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.IO.WindowsRuntimeStreamExtensions.AsRandomAccessStream(System.IO.Stream)
    name: AsRandomAccessStream
    fullName: System.IO.WindowsRuntimeStreamExtensions.AsRandomAccessStream
  - name: (
    fullName: (
  - uid: System.IO.Stream
    name: Stream
    fullName: System.IO.Stream
    isExternal: true
  - name: )
    fullName: )
  nameWithType: WindowsRuntimeStreamExtensions.AsRandomAccessStream(Stream)
  commentId: M:System.IO.WindowsRuntimeStreamExtensions.AsRandomAccessStream(System.IO.Stream)
- uid: System.String
  parent: System
  isExternal: false
  name: String
  fullName: System.String
  nameWithType: String
  commentId: T:System.String
- uid: System.IO.FileMode
  parent: System.IO
  isExternal: false
  name: FileMode
  fullName: System.IO.FileMode
  nameWithType: FileMode
  commentId: T:System.IO.FileMode
- uid: System.IO.FileAccess
  parent: System.IO
  isExternal: false
  name: FileAccess
  fullName: System.IO.FileAccess
  nameWithType: FileAccess
  commentId: T:System.IO.FileAccess
- uid: System.IO.FileShare
  parent: System.IO
  isExternal: false
  name: FileShare
  fullName: System.IO.FileShare
  nameWithType: FileShare
  commentId: T:System.IO.FileShare
- uid: System.IO.IsolatedStorage.IsolatedStorageFile
  parent: System.IO.IsolatedStorage
  isExternal: false
  name: IsolatedStorageFile
  fullName: System.IO.IsolatedStorage.IsolatedStorageFile
  nameWithType: IsolatedStorageFile
  commentId: T:System.IO.IsolatedStorage.IsolatedStorageFile
- uid: System.IO.Stream.CanRead
  parent: System.IO.Stream
  isExternal: false
  name: CanRead
  fullName: System.IO.Stream.CanRead
  nameWithType: Stream.CanRead
  commentId: P:System.IO.Stream.CanRead
- uid: System.Boolean
  parent: System
  isExternal: false
  name: Boolean
  fullName: System.Boolean
  nameWithType: Boolean
  commentId: T:System.Boolean
- uid: System.IO.Stream.CanSeek
  parent: System.IO.Stream
  isExternal: false
  name: CanSeek
  fullName: System.IO.Stream.CanSeek
  nameWithType: Stream.CanSeek
  commentId: P:System.IO.Stream.CanSeek
- uid: System.IO.Stream.CanWrite
  parent: System.IO.Stream
  isExternal: false
  name: CanWrite
  fullName: System.IO.Stream.CanWrite
  nameWithType: Stream.CanWrite
  commentId: P:System.IO.Stream.CanWrite
- uid: System.IO.Stream.Length
  parent: System.IO.Stream
  isExternal: false
  name: Length
  fullName: System.IO.Stream.Length
  nameWithType: Stream.Length
  commentId: P:System.IO.Stream.Length
- uid: System.Int64
  parent: System
  isExternal: false
  name: Int64
  fullName: System.Int64
  nameWithType: Int64
  commentId: T:System.Int64
- uid: System.IO.Stream.Position
  parent: System.IO.Stream
  isExternal: false
  name: Position
  fullName: System.IO.Stream.Position
  nameWithType: Stream.Position
  commentId: P:System.IO.Stream.Position
- uid: System.IO.Stream.Dispose(System.Boolean)
  parent: System.IO.Stream
  isExternal: true
  name: Dispose(Boolean)
  fullName: System.IO.Stream.Dispose(System.Boolean)
  spec.csharp:
  - uid: System.IO.Stream.Dispose(System.Boolean)
    name: Dispose
    fullName: System.IO.Stream.Dispose
  - name: (
    fullName: (
  - uid: System.Boolean
    name: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.IO.Stream.Dispose(System.Boolean)
    name: Dispose
    fullName: System.IO.Stream.Dispose
  - name: (
    fullName: (
  - uid: System.Boolean
    name: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    fullName: )
  nameWithType: Stream.Dispose(Boolean)
  commentId: M:System.IO.Stream.Dispose(System.Boolean)
- uid: System.IO.Stream.Flush
  parent: System.IO.Stream
  isExternal: false
  name: Flush()
  fullName: System.IO.Stream.Flush()
  spec.csharp:
  - uid: System.IO.Stream.Flush
    name: Flush
    fullName: System.IO.Stream.Flush
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.IO.Stream.Flush
    name: Flush
    fullName: System.IO.Stream.Flush
  - name: (
    fullName: (
  - name: )
    fullName: )
  nameWithType: Stream.Flush()
  commentId: M:System.IO.Stream.Flush
- uid: System.IO.Stream.FlushAsync(System.Threading.CancellationToken)
  parent: System.IO.Stream
  isExternal: true
  name: FlushAsync(CancellationToken)
  fullName: System.IO.Stream.FlushAsync(System.Threading.CancellationToken)
  spec.csharp:
  - uid: System.IO.Stream.FlushAsync(System.Threading.CancellationToken)
    name: FlushAsync
    fullName: System.IO.Stream.FlushAsync
  - name: (
    fullName: (
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.IO.Stream.FlushAsync(System.Threading.CancellationToken)
    name: FlushAsync
    fullName: System.IO.Stream.FlushAsync
  - name: (
    fullName: (
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    fullName: )
  nameWithType: Stream.FlushAsync(CancellationToken)
  commentId: M:System.IO.Stream.FlushAsync(System.Threading.CancellationToken)
- uid: System.Threading.CancellationToken
  parent: System.Threading
  isExternal: false
  name: CancellationToken
  fullName: System.Threading.CancellationToken
  nameWithType: CancellationToken
  commentId: T:System.Threading.CancellationToken
- uid: System.Threading.Tasks.Task
  parent: System.Threading.Tasks
  isExternal: false
  name: Task
  fullName: System.Threading.Tasks.Task
  nameWithType: Task
  commentId: T:System.Threading.Tasks.Task
- uid: System.Threading
  isExternal: false
  name: System.Threading
  fullName: System.Threading
  nameWithType: System.Threading
  commentId: N:System.Threading
- uid: System.Threading.Tasks
  isExternal: false
  name: System.Threading.Tasks
  fullName: System.Threading.Tasks
  nameWithType: System.Threading.Tasks
  commentId: N:System.Threading.Tasks
- uid: System.IO.Stream.Read(System.Byte[],System.Int32,System.Int32)
  parent: System.IO.Stream
  isExternal: true
  name: Read(Byte[], Int32, Int32)
  fullName: System.IO.Stream.Read(System.Byte[], System.Int32, System.Int32)
  fullname.vb: System.IO.Stream.Read(System.Byte(), System.Int32, System.Int32)
  name.vb: Read(Byte(), Int32, Int32)
  spec.csharp:
  - uid: System.IO.Stream.Read(System.Byte[],System.Int32,System.Int32)
    name: Read
    fullName: System.IO.Stream.Read
  - name: (
    fullName: (
  - uid: System.Byte
    name: Byte
    fullName: System.Byte
    isExternal: true
  - name: '[]'
    fullName: '[]'
  - name: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.IO.Stream.Read(System.Byte[],System.Int32,System.Int32)
    name: Read
    fullName: System.IO.Stream.Read
  - name: (
    fullName: (
  - uid: System.Byte
    name: Byte
    fullName: System.Byte
    isExternal: true
  - name: ()
    fullName: ()
  - name: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    fullName: )
  nameWithType: Stream.Read(Byte[], Int32, Int32)
  nameWithType.vb: Stream.Read(Byte(), Int32, Int32)
  commentId: M:System.IO.Stream.Read(System.Byte[],System.Int32,System.Int32)
- uid: System.Byte[]
  name: Byte[]
  fullName: System.Byte[]
  fullname.vb: System.Byte()
  name.vb: Byte()
  spec.csharp:
  - uid: System.Byte
    name: Byte
    fullName: System.Byte
    isExternal: true
  - name: '[]'
    fullName: '[]'
  spec.vb:
  - uid: System.Byte
    name: Byte
    fullName: System.Byte
    isExternal: true
  - name: ()
    fullName: ()
  nameWithType: Byte[]
  nameWithType.vb: Byte()
- uid: System.Int32
  parent: System
  isExternal: false
  name: Int32
  fullName: System.Int32
  nameWithType: Int32
  commentId: T:System.Int32
- uid: System.IO.Stream.ReadAsync(System.Byte[],System.Int32,System.Int32,System.Threading.CancellationToken)
  parent: System.IO.Stream
  isExternal: true
  name: ReadAsync(Byte[], Int32, Int32, CancellationToken)
  fullName: System.IO.Stream.ReadAsync(System.Byte[], System.Int32, System.Int32, System.Threading.CancellationToken)
  fullname.vb: System.IO.Stream.ReadAsync(System.Byte(), System.Int32, System.Int32, System.Threading.CancellationToken)
  name.vb: ReadAsync(Byte(), Int32, Int32, CancellationToken)
  spec.csharp:
  - uid: System.IO.Stream.ReadAsync(System.Byte[],System.Int32,System.Int32,System.Threading.CancellationToken)
    name: ReadAsync
    fullName: System.IO.Stream.ReadAsync
  - name: (
    fullName: (
  - uid: System.Byte
    name: Byte
    fullName: System.Byte
    isExternal: true
  - name: '[]'
    fullName: '[]'
  - name: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.IO.Stream.ReadAsync(System.Byte[],System.Int32,System.Int32,System.Threading.CancellationToken)
    name: ReadAsync
    fullName: System.IO.Stream.ReadAsync
  - name: (
    fullName: (
  - uid: System.Byte
    name: Byte
    fullName: System.Byte
    isExternal: true
  - name: ()
    fullName: ()
  - name: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    fullName: )
  nameWithType: Stream.ReadAsync(Byte[], Int32, Int32, CancellationToken)
  nameWithType.vb: Stream.ReadAsync(Byte(), Int32, Int32, CancellationToken)
  commentId: M:System.IO.Stream.ReadAsync(System.Byte[],System.Int32,System.Int32,System.Threading.CancellationToken)
- uid: System.Threading.Tasks.Task{System.Int32}
  parent: System.Threading.Tasks
  definition: System.Threading.Tasks.Task`1
  name: Task<Int32>
  fullName: System.Threading.Tasks.Task<System.Int32>
  fullname.vb: System.Threading.Tasks.Task(Of System.Int32)
  name.vb: Task(Of Int32)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    fullName: <
  - uid: System.Int32
    name: Int32
    fullName: System.Int32
    isExternal: true
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - uid: System.Int32
    name: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    fullName: )
  nameWithType: Task<Int32>
  nameWithType.vb: Task(Of Int32)
  commentId: T:System.Threading.Tasks.Task{System.Int32}
- uid: System.Threading.Tasks.Task`1
  isExternal: false
  name: Task<TResult>
  fullName: System.Threading.Tasks.Task<TResult>
  fullname.vb: System.Threading.Tasks.Task(Of TResult)
  name.vb: Task(Of TResult)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    fullName: System.Threading.Tasks.Task
  - name: <
    fullName: <
  - name: TResult
    fullName: TResult
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    fullName: System.Threading.Tasks.Task
  - name: '(Of '
    fullName: '(Of '
  - name: TResult
    fullName: TResult
  - name: )
    fullName: )
  nameWithType: Task<TResult>
  nameWithType.vb: Task(Of TResult)
  commentId: T:System.Threading.Tasks.Task`1
- uid: System.IO.Stream.ReadByte
  parent: System.IO.Stream
  isExternal: false
  name: ReadByte()
  fullName: System.IO.Stream.ReadByte()
  spec.csharp:
  - uid: System.IO.Stream.ReadByte
    name: ReadByte
    fullName: System.IO.Stream.ReadByte
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.IO.Stream.ReadByte
    name: ReadByte
    fullName: System.IO.Stream.ReadByte
  - name: (
    fullName: (
  - name: )
    fullName: )
  nameWithType: Stream.ReadByte()
  commentId: M:System.IO.Stream.ReadByte
- uid: System.IO.Stream.Seek(System.Int64,System.IO.SeekOrigin)
  parent: System.IO.Stream
  isExternal: true
  name: Seek(Int64, SeekOrigin)
  fullName: System.IO.Stream.Seek(System.Int64, System.IO.SeekOrigin)
  spec.csharp:
  - uid: System.IO.Stream.Seek(System.Int64,System.IO.SeekOrigin)
    name: Seek
    fullName: System.IO.Stream.Seek
  - name: (
    fullName: (
  - uid: System.Int64
    name: Int64
    fullName: System.Int64
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.IO.SeekOrigin
    name: SeekOrigin
    fullName: System.IO.SeekOrigin
  - name: )
    fullName: )
  spec.vb:
  - uid: System.IO.Stream.Seek(System.Int64,System.IO.SeekOrigin)
    name: Seek
    fullName: System.IO.Stream.Seek
  - name: (
    fullName: (
  - uid: System.Int64
    name: Int64
    fullName: System.Int64
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.IO.SeekOrigin
    name: SeekOrigin
    fullName: System.IO.SeekOrigin
  - name: )
    fullName: )
  nameWithType: Stream.Seek(Int64, SeekOrigin)
  commentId: M:System.IO.Stream.Seek(System.Int64,System.IO.SeekOrigin)
- uid: System.IO.SeekOrigin
  parent: System.IO
  isExternal: false
  name: SeekOrigin
  fullName: System.IO.SeekOrigin
  nameWithType: SeekOrigin
  commentId: T:System.IO.SeekOrigin
- uid: System.IO.Stream.SetLength(System.Int64)
  parent: System.IO.Stream
  isExternal: true
  name: SetLength(Int64)
  fullName: System.IO.Stream.SetLength(System.Int64)
  spec.csharp:
  - uid: System.IO.Stream.SetLength(System.Int64)
    name: SetLength
    fullName: System.IO.Stream.SetLength
  - name: (
    fullName: (
  - uid: System.Int64
    name: Int64
    fullName: System.Int64
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.IO.Stream.SetLength(System.Int64)
    name: SetLength
    fullName: System.IO.Stream.SetLength
  - name: (
    fullName: (
  - uid: System.Int64
    name: Int64
    fullName: System.Int64
    isExternal: true
  - name: )
    fullName: )
  nameWithType: Stream.SetLength(Int64)
  commentId: M:System.IO.Stream.SetLength(System.Int64)
- uid: System.IO.Stream.Write(System.Byte[],System.Int32,System.Int32)
  parent: System.IO.Stream
  isExternal: true
  name: Write(Byte[], Int32, Int32)
  fullName: System.IO.Stream.Write(System.Byte[], System.Int32, System.Int32)
  fullname.vb: System.IO.Stream.Write(System.Byte(), System.Int32, System.Int32)
  name.vb: Write(Byte(), Int32, Int32)
  spec.csharp:
  - uid: System.IO.Stream.Write(System.Byte[],System.Int32,System.Int32)
    name: Write
    fullName: System.IO.Stream.Write
  - name: (
    fullName: (
  - uid: System.Byte
    name: Byte
    fullName: System.Byte
    isExternal: true
  - name: '[]'
    fullName: '[]'
  - name: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.IO.Stream.Write(System.Byte[],System.Int32,System.Int32)
    name: Write
    fullName: System.IO.Stream.Write
  - name: (
    fullName: (
  - uid: System.Byte
    name: Byte
    fullName: System.Byte
    isExternal: true
  - name: ()
    fullName: ()
  - name: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    fullName: )
  nameWithType: Stream.Write(Byte[], Int32, Int32)
  nameWithType.vb: Stream.Write(Byte(), Int32, Int32)
  commentId: M:System.IO.Stream.Write(System.Byte[],System.Int32,System.Int32)
- uid: System.IO.Stream.WriteAsync(System.Byte[],System.Int32,System.Int32,System.Threading.CancellationToken)
  parent: System.IO.Stream
  isExternal: true
  name: WriteAsync(Byte[], Int32, Int32, CancellationToken)
  fullName: System.IO.Stream.WriteAsync(System.Byte[], System.Int32, System.Int32, System.Threading.CancellationToken)
  fullname.vb: System.IO.Stream.WriteAsync(System.Byte(), System.Int32, System.Int32, System.Threading.CancellationToken)
  name.vb: WriteAsync(Byte(), Int32, Int32, CancellationToken)
  spec.csharp:
  - uid: System.IO.Stream.WriteAsync(System.Byte[],System.Int32,System.Int32,System.Threading.CancellationToken)
    name: WriteAsync
    fullName: System.IO.Stream.WriteAsync
  - name: (
    fullName: (
  - uid: System.Byte
    name: Byte
    fullName: System.Byte
    isExternal: true
  - name: '[]'
    fullName: '[]'
  - name: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.IO.Stream.WriteAsync(System.Byte[],System.Int32,System.Int32,System.Threading.CancellationToken)
    name: WriteAsync
    fullName: System.IO.Stream.WriteAsync
  - name: (
    fullName: (
  - uid: System.Byte
    name: Byte
    fullName: System.Byte
    isExternal: true
  - name: ()
    fullName: ()
  - name: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    fullName: )
  nameWithType: Stream.WriteAsync(Byte[], Int32, Int32, CancellationToken)
  nameWithType.vb: Stream.WriteAsync(Byte(), Int32, Int32, CancellationToken)
  commentId: M:System.IO.Stream.WriteAsync(System.Byte[],System.Int32,System.Int32,System.Threading.CancellationToken)
- uid: System.IO.Stream.WriteByte(System.Byte)
  parent: System.IO.Stream
  isExternal: true
  name: WriteByte(Byte)
  fullName: System.IO.Stream.WriteByte(System.Byte)
  spec.csharp:
  - uid: System.IO.Stream.WriteByte(System.Byte)
    name: WriteByte
    fullName: System.IO.Stream.WriteByte
  - name: (
    fullName: (
  - uid: System.Byte
    name: Byte
    fullName: System.Byte
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.IO.Stream.WriteByte(System.Byte)
    name: WriteByte
    fullName: System.IO.Stream.WriteByte
  - name: (
    fullName: (
  - uid: System.Byte
    name: Byte
    fullName: System.Byte
    isExternal: true
  - name: )
    fullName: )
  nameWithType: Stream.WriteByte(Byte)
  commentId: M:System.IO.Stream.WriteByte(System.Byte)
- uid: System.Byte
  parent: System
  isExternal: false
  name: Byte
  fullName: System.Byte
  nameWithType: Byte
  commentId: T:System.Byte
- uid: System.ArgumentException
  parent: System
  isExternal: false
  name: ArgumentException
  fullName: System.ArgumentException
  nameWithType: ArgumentException
  commentId: T:System.ArgumentException
- uid: System.ArgumentNullException
  isExternal: false
  name: ArgumentNullException
  fullName: System.ArgumentNullException
  nameWithType: ArgumentNullException
  commentId: T:System.ArgumentNullException
- uid: System.IO.FileNotFoundException
  isExternal: false
  name: FileNotFoundException
  fullName: System.IO.FileNotFoundException
  nameWithType: FileNotFoundException
  commentId: T:System.IO.FileNotFoundException
- uid: System.IO.IsolatedStorage.IsolatedStorageException
  isExternal: false
  name: IsolatedStorageException
  fullName: System.IO.IsolatedStorage.IsolatedStorageException
  nameWithType: IsolatedStorageException
  commentId: T:System.IO.IsolatedStorage.IsolatedStorageException
- uid: System.ObjectDisposedException
  isExternal: false
  name: ObjectDisposedException
  fullName: System.ObjectDisposedException
  nameWithType: ObjectDisposedException
  commentId: T:System.ObjectDisposedException
- uid: System.ArgumentOutOfRangeException
  isExternal: false
  name: ArgumentOutOfRangeException
  fullName: System.ArgumentOutOfRangeException
  nameWithType: ArgumentOutOfRangeException
  commentId: T:System.ArgumentOutOfRangeException
