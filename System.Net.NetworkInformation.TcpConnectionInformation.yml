items:
- uid: System.Net.NetworkInformation.TcpConnectionInformation
  commentId: T:System.Net.NetworkInformation.TcpConnectionInformation
  id: TcpConnectionInformation
  parent: System.Net.NetworkInformation
  children:
  - System.Net.NetworkInformation.TcpConnectionInformation.#ctor
  - System.Net.NetworkInformation.TcpConnectionInformation.LocalEndPoint
  - System.Net.NetworkInformation.TcpConnectionInformation.RemoteEndPoint
  - System.Net.NetworkInformation.TcpConnectionInformation.State
  langs:
  - csharp
  - vb
  name: TcpConnectionInformation
  fullName: System.Net.NetworkInformation.TcpConnectionInformation
  type: Class
  source:
    remote:
      path: src/System.Net.NetworkInformation/src/System/Net/NetworkInformation/TcpConnection.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: TcpConnectionInformation
    path: src/System.Net.NetworkInformation/src/System/Net/NetworkInformation/TcpConnection.cs
    startLine: 9
  assemblies:
  - System.Net.NetworkInformation
  namespace: System.Net.NetworkInformation
  summary: "\n<p>Provides information about the Transmission Control Protocol (TCP) connections on the local computer.</p>\n"
  syntax:
    content: public abstract class TcpConnectionInformation
    content.vb: Public MustInherit Class TcpConnectionInformation
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  modifiers.csharp:
  - public
  - abstract
  - class
  modifiers.vb:
  - Public
  - MustInherit
  - Class
  nameWithType: TcpConnectionInformation
- uid: System.Net.NetworkInformation.TcpConnectionInformation.#ctor
  commentId: M:System.Net.NetworkInformation.TcpConnectionInformation.#ctor
  id: '#ctor'
  parent: System.Net.NetworkInformation.TcpConnectionInformation
  langs:
  - csharp
  - vb
  name: TcpConnectionInformation()
  fullName: System.Net.NetworkInformation.TcpConnectionInformation.TcpConnectionInformation()
  type: Constructor
  source:
    remote:
      path: src/System.Net.NetworkInformation/ref/System.Net.NetworkInformation.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: .ctor
    path: src/System.Net.NetworkInformation/ref/System.Net.NetworkInformation.cs
    startLine: 370
  assemblies:
  - System.Net.NetworkInformation
  namespace: System.Net.NetworkInformation
  summary: "\n<p>Initializes a new instance of the <xref href=\"System.Net.NetworkInformation.TcpConnectionInformation\" data-throw-if-not-resolved=\"false\"></xref> class.</p>\n"
  syntax:
    content: protected TcpConnectionInformation()
    content.vb: Protected Sub New
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
  nameWithType: TcpConnectionInformation.TcpConnectionInformation()
- uid: System.Net.NetworkInformation.TcpConnectionInformation.LocalEndPoint
  commentId: P:System.Net.NetworkInformation.TcpConnectionInformation.LocalEndPoint
  id: LocalEndPoint
  parent: System.Net.NetworkInformation.TcpConnectionInformation
  langs:
  - csharp
  - vb
  name: LocalEndPoint
  fullName: System.Net.NetworkInformation.TcpConnectionInformation.LocalEndPoint
  type: Property
  source:
    remote:
      path: src/System.Net.NetworkInformation/src/System/Net/NetworkInformation/TcpConnection.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: LocalEndPoint
    path: src/System.Net.NetworkInformation/src/System/Net/NetworkInformation/TcpConnection.cs
    startLine: 14
  assemblies:
  - System.Net.NetworkInformation
  namespace: System.Net.NetworkInformation
  summary: "\n<p>Gets the local endpoint of a Transmission Control Protocol (TCP) connection.</p>\n"
  syntax:
    content: public abstract IPEndPoint LocalEndPoint { get; }
    content.vb: Public MustOverride ReadOnly Property LocalEndPoint As IPEndPoint
    parameters: []
    return:
      type: IPEndPoint
      description: "\n<p>An <xref href=\"System.Net.IPEndPoint\" data-throw-if-not-resolved=\"false\"></xref> instance that contains the IP address and port on the local computer.</p>\n"
  modifiers.csharp:
  - public
  - abstract
  - get
  modifiers.vb:
  - Public
  - MustOverride
  - ReadOnly
  nameWithType: TcpConnectionInformation.LocalEndPoint
- uid: System.Net.NetworkInformation.TcpConnectionInformation.RemoteEndPoint
  commentId: P:System.Net.NetworkInformation.TcpConnectionInformation.RemoteEndPoint
  id: RemoteEndPoint
  parent: System.Net.NetworkInformation.TcpConnectionInformation
  langs:
  - csharp
  - vb
  name: RemoteEndPoint
  fullName: System.Net.NetworkInformation.TcpConnectionInformation.RemoteEndPoint
  type: Property
  source:
    remote:
      path: src/System.Net.NetworkInformation/src/System/Net/NetworkInformation/TcpConnection.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: RemoteEndPoint
    path: src/System.Net.NetworkInformation/src/System/Net/NetworkInformation/TcpConnection.cs
    startLine: 19
  assemblies:
  - System.Net.NetworkInformation
  namespace: System.Net.NetworkInformation
  summary: "\n<p>Gets the remote endpoint of a Transmission Control Protocol (TCP) connection.</p>\n"
  syntax:
    content: public abstract IPEndPoint RemoteEndPoint { get; }
    content.vb: Public MustOverride ReadOnly Property RemoteEndPoint As IPEndPoint
    parameters: []
    return:
      type: IPEndPoint
      description: "\n<p>An <xref href=\"System.Net.IPEndPoint\" data-throw-if-not-resolved=\"false\"></xref> instance that contains the IP address and port on the remote computer.</p>\n"
  modifiers.csharp:
  - public
  - abstract
  - get
  modifiers.vb:
  - Public
  - MustOverride
  - ReadOnly
  nameWithType: TcpConnectionInformation.RemoteEndPoint
- uid: System.Net.NetworkInformation.TcpConnectionInformation.State
  commentId: P:System.Net.NetworkInformation.TcpConnectionInformation.State
  id: State
  parent: System.Net.NetworkInformation.TcpConnectionInformation
  langs:
  - csharp
  - vb
  name: State
  fullName: System.Net.NetworkInformation.TcpConnectionInformation.State
  type: Property
  source:
    remote:
      path: src/System.Net.NetworkInformation/src/System/Net/NetworkInformation/TcpConnection.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: State
    path: src/System.Net.NetworkInformation/src/System/Net/NetworkInformation/TcpConnection.cs
    startLine: 24
  assemblies:
  - System.Net.NetworkInformation
  namespace: System.Net.NetworkInformation
  summary: "\n<p>Gets the state of this Transmission Control Protocol (TCP) connection.</p>\n"
  syntax:
    content: public abstract TcpState State { get; }
    content.vb: Public MustOverride ReadOnly Property State As TcpState
    parameters: []
    return:
      type: System.Net.NetworkInformation.TcpState
      description: "\n<p>One of the <xref href=\"System.Net.NetworkInformation.TcpState\" data-throw-if-not-resolved=\"false\"></xref> enumeration values.</p>\n"
  modifiers.csharp:
  - public
  - abstract
  - get
  modifiers.vb:
  - Public
  - MustOverride
  - ReadOnly
  nameWithType: TcpConnectionInformation.State
references:
- uid: System.Net.NetworkInformation
  isExternal: false
  name: System.Net.NetworkInformation
  fullName: System.Net.NetworkInformation
  nameWithType: System.Net.NetworkInformation
  commentId: N:System.Net.NetworkInformation
- uid: System.Object
  parent: System
  isExternal: false
  name: Object
  fullName: System.Object
  nameWithType: Object
  commentId: T:System.Object
- uid: System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  nameWithType: Object.ToString()
  commentId: M:System.Object.ToString
- uid: System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
  nameWithType: Object.Equals(Object)
  commentId: M:System.Object.Equals(System.Object)
- uid: System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
  nameWithType: Object.Equals(Object, Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
  nameWithType: Object.ReferenceEquals(Object, Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
- uid: System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  nameWithType: Object.GetHashCode()
  commentId: M:System.Object.GetHashCode
- uid: System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  nameWithType: Object.GetType()
  commentId: M:System.Object.GetType
- uid: System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  nameWithType: Object.MemberwiseClone()
  commentId: M:System.Object.MemberwiseClone
- uid: System
  isExternal: false
  name: System
  fullName: System
  nameWithType: System
  commentId: N:System
- uid: System.Net.IPEndPoint
  isExternal: false
  name: IPEndPoint
  fullName: System.Net.IPEndPoint
  nameWithType: IPEndPoint
  commentId: T:System.Net.IPEndPoint
- uid: System.Net.NetworkInformation.TcpState
  parent: System.Net.NetworkInformation
  isExternal: false
  name: TcpState
  fullName: System.Net.NetworkInformation.TcpState
  nameWithType: TcpState
  commentId: T:System.Net.NetworkInformation.TcpState
