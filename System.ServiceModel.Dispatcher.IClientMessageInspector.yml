### YamlMime:ManagedReference
items:
- uid: System.ServiceModel.Dispatcher.IClientMessageInspector
  commentId: T:System.ServiceModel.Dispatcher.IClientMessageInspector
  id: IClientMessageInspector
  parent: System.ServiceModel.Dispatcher
  children:
  - System.ServiceModel.Dispatcher.IClientMessageInspector.AfterReceiveReply(System.ServiceModel.Channels.Message@,System.Object)
  - System.ServiceModel.Dispatcher.IClientMessageInspector.BeforeSendRequest(System.ServiceModel.Channels.Message@,System.ServiceModel.IClientChannel)
  langs:
  - csharp
  - vb
  name: IClientMessageInspector
  nameWithType: IClientMessageInspector
  fullName: System.ServiceModel.Dispatcher.IClientMessageInspector
  type: Interface
  source:
    remote:
      path: src/System.ServiceModel.Primitives/ref/System.ServiceModel.Primitives.cs
      branch: master
      repo: https://github.com/dotnet/wcf.git
    id: IClientMessageInspector
    path: src/System.ServiceModel.Primitives/ref/System.ServiceModel.Primitives.cs
    startLine: 1406
  assemblies:
  - System.ServiceModel.Primitives
  namespace: System.ServiceModel.Dispatcher
  summary: "\n<p>Defines a message inspector object that can be added to the <xref href=\"System.ServiceModel.Dispatcher.ClientRuntime.MessageInspectors\" data-throw-if-not-resolved=\"false\"></xref> collection to view or modify messages.</p>\n"
  syntax:
    content: public interface IClientMessageInspector
    content.vb: Public Interface IClientMessageInspector
  modifiers.csharp:
  - public
  - interface
  modifiers.vb:
  - Public
  - Interface
- uid: System.ServiceModel.Dispatcher.IClientMessageInspector.AfterReceiveReply(System.ServiceModel.Channels.Message@,System.Object)
  commentId: M:System.ServiceModel.Dispatcher.IClientMessageInspector.AfterReceiveReply(System.ServiceModel.Channels.Message@,System.Object)
  id: AfterReceiveReply(System.ServiceModel.Channels.Message@,System.Object)
  parent: System.ServiceModel.Dispatcher.IClientMessageInspector
  langs:
  - csharp
  - vb
  name: AfterReceiveReply(ref Message, Object)
  nameWithType: IClientMessageInspector.AfterReceiveReply(ref Message, Object)
  fullName: System.ServiceModel.Dispatcher.IClientMessageInspector.AfterReceiveReply(ref System.ServiceModel.Channels.Message, System.Object)
  type: Method
  source:
    remote:
      path: src/System.ServiceModel.Primitives/ref/System.ServiceModel.Primitives.cs
      branch: master
      repo: https://github.com/dotnet/wcf.git
    id: AfterReceiveReply
    path: src/System.ServiceModel.Primitives/ref/System.ServiceModel.Primitives.cs
    startLine: 1408
  assemblies:
  - System.ServiceModel.Primitives
  namespace: System.ServiceModel.Dispatcher
  summary: "\n<p>Enables inspection or modification of a message after a reply message is received but prior to passing it back to the client application.</p>\n"
  syntax:
    content: void AfterReceiveReply(ref Message reply, object correlationState)
    content.vb: Sub AfterReceiveReply(ByRef reply As Message, correlationState As Object)
    parameters:
    - id: reply
      type: System.ServiceModel.Channels.Message
      description: "\n<p>The message to be transformed into types and handed back to the client application.</p>\n"
    - id: correlationState
      type: System.Object
      description: "\n<p>Correlation state data.</p>\n"
  nameWithType.vb: IClientMessageInspector.AfterReceiveReply(ByRef Message, Object)
  fullName.vb: System.ServiceModel.Dispatcher.IClientMessageInspector.AfterReceiveReply(ByRef System.ServiceModel.Channels.Message, System.Object)
  name.vb: AfterReceiveReply(ByRef Message, Object)
- uid: System.ServiceModel.Dispatcher.IClientMessageInspector.BeforeSendRequest(System.ServiceModel.Channels.Message@,System.ServiceModel.IClientChannel)
  commentId: M:System.ServiceModel.Dispatcher.IClientMessageInspector.BeforeSendRequest(System.ServiceModel.Channels.Message@,System.ServiceModel.IClientChannel)
  id: BeforeSendRequest(System.ServiceModel.Channels.Message@,System.ServiceModel.IClientChannel)
  parent: System.ServiceModel.Dispatcher.IClientMessageInspector
  langs:
  - csharp
  - vb
  name: BeforeSendRequest(ref Message, IClientChannel)
  nameWithType: IClientMessageInspector.BeforeSendRequest(ref Message, IClientChannel)
  fullName: System.ServiceModel.Dispatcher.IClientMessageInspector.BeforeSendRequest(ref System.ServiceModel.Channels.Message, System.ServiceModel.IClientChannel)
  type: Method
  source:
    remote:
      path: src/System.ServiceModel.Primitives/ref/System.ServiceModel.Primitives.cs
      branch: master
      repo: https://github.com/dotnet/wcf.git
    id: BeforeSendRequest
    path: src/System.ServiceModel.Primitives/ref/System.ServiceModel.Primitives.cs
    startLine: 1409
  assemblies:
  - System.ServiceModel.Primitives
  namespace: System.ServiceModel.Dispatcher
  summary: "\n<p>Enables inspection or modification of a message before a request message is sent to a service.</p>\n"
  syntax:
    content: object BeforeSendRequest(ref Message request, IClientChannel channel)
    content.vb: Function BeforeSendRequest(ByRef request As Message, channel As IClientChannel) As Object
    parameters:
    - id: request
      type: System.ServiceModel.Channels.Message
      description: "\n<p>The message to be sent to the service.</p>\n"
    - id: channel
      type: System.ServiceModel.IClientChannel
      description: "\n<p>The WCF client object channel.</p>\n"
    return:
      type: System.Object
      description: "\n<p>The object that is returned as the <em>correlationState </em>argument of the <xref href=\"System.ServiceModel.Dispatcher.IClientMessageInspector.AfterReceiveReply(System.ServiceModel.Channels.Message@,System.Object)\" data-throw-if-not-resolved=\"false\"></xref> method. This is <strong>null</strong> if no correlation state is used.</p>\n<p>The best practice is to make this a <xref href=\"System.Guid\" data-throw-if-not-resolved=\"false\"></xref> to ensure that no two <em>correlationState</em> objects are the same.</p>\n"
  nameWithType.vb: IClientMessageInspector.BeforeSendRequest(ByRef Message, IClientChannel)
  fullName.vb: System.ServiceModel.Dispatcher.IClientMessageInspector.BeforeSendRequest(ByRef System.ServiceModel.Channels.Message, System.ServiceModel.IClientChannel)
  name.vb: BeforeSendRequest(ByRef Message, IClientChannel)
references:
- uid: System.ServiceModel.Dispatcher
  commentId: N:System.ServiceModel.Dispatcher
  isExternal: false
  name: System.ServiceModel.Dispatcher
  nameWithType: System.ServiceModel.Dispatcher
  fullName: System.ServiceModel.Dispatcher
- uid: System.ServiceModel.Channels.Message
  commentId: T:System.ServiceModel.Channels.Message
  parent: System.ServiceModel.Channels
  isExternal: false
  name: Message
  nameWithType: Message
  fullName: System.ServiceModel.Channels.Message
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: false
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.ServiceModel.Channels
  commentId: N:System.ServiceModel.Channels
  isExternal: false
  name: System.ServiceModel.Channels
  nameWithType: System.ServiceModel.Channels
  fullName: System.ServiceModel.Channels
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: System.ServiceModel.IClientChannel
  commentId: T:System.ServiceModel.IClientChannel
  parent: System.ServiceModel
  isExternal: false
  name: IClientChannel
  nameWithType: IClientChannel
  fullName: System.ServiceModel.IClientChannel
- uid: System.ServiceModel
  commentId: N:System.ServiceModel
  isExternal: false
  name: System.ServiceModel
  nameWithType: System.ServiceModel
  fullName: System.ServiceModel
