items:
- uid: System.DateTimeOffset
  commentId: T:System.DateTimeOffset
  id: DateTimeOffset
  parent: System
  children:
  - System.DateTimeOffset.#ctor(System.DateTime)
  - System.DateTimeOffset.#ctor(System.DateTime,System.TimeSpan)
  - System.DateTimeOffset.#ctor(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.TimeSpan)
  - System.DateTimeOffset.#ctor(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.TimeSpan)
  - System.DateTimeOffset.#ctor(System.Int64,System.TimeSpan)
  - System.DateTimeOffset.Add(System.TimeSpan)
  - System.DateTimeOffset.AddDays(System.Double)
  - System.DateTimeOffset.AddHours(System.Double)
  - System.DateTimeOffset.AddMilliseconds(System.Double)
  - System.DateTimeOffset.AddMinutes(System.Double)
  - System.DateTimeOffset.AddMonths(System.Int32)
  - System.DateTimeOffset.AddSeconds(System.Double)
  - System.DateTimeOffset.AddTicks(System.Int64)
  - System.DateTimeOffset.AddYears(System.Int32)
  - System.DateTimeOffset.Compare(System.DateTimeOffset,System.DateTimeOffset)
  - System.DateTimeOffset.CompareTo(System.DateTimeOffset)
  - System.DateTimeOffset.Date
  - System.DateTimeOffset.DateTime
  - System.DateTimeOffset.Day
  - System.DateTimeOffset.DayOfWeek
  - System.DateTimeOffset.DayOfYear
  - System.DateTimeOffset.Equals(System.DateTimeOffset)
  - System.DateTimeOffset.Equals(System.DateTimeOffset,System.DateTimeOffset)
  - System.DateTimeOffset.Equals(System.Object)
  - System.DateTimeOffset.EqualsExact(System.DateTimeOffset)
  - System.DateTimeOffset.FromFileTime(System.Int64)
  - System.DateTimeOffset.FromUnixTimeMilliseconds(System.Int64)
  - System.DateTimeOffset.FromUnixTimeSeconds(System.Int64)
  - System.DateTimeOffset.GetHashCode
  - System.DateTimeOffset.Hour
  - System.DateTimeOffset.LocalDateTime
  - System.DateTimeOffset.MaxValue
  - System.DateTimeOffset.Millisecond
  - System.DateTimeOffset.Minute
  - System.DateTimeOffset.MinValue
  - System.DateTimeOffset.Month
  - System.DateTimeOffset.Now
  - System.DateTimeOffset.Offset
  - System.DateTimeOffset.op_Addition(System.DateTimeOffset,System.TimeSpan)
  - System.DateTimeOffset.op_Equality(System.DateTimeOffset,System.DateTimeOffset)
  - System.DateTimeOffset.op_GreaterThan(System.DateTimeOffset,System.DateTimeOffset)
  - System.DateTimeOffset.op_GreaterThanOrEqual(System.DateTimeOffset,System.DateTimeOffset)
  - System.DateTimeOffset.op_Implicit(System.DateTime)~System.DateTimeOffset
  - System.DateTimeOffset.op_Inequality(System.DateTimeOffset,System.DateTimeOffset)
  - System.DateTimeOffset.op_LessThan(System.DateTimeOffset,System.DateTimeOffset)
  - System.DateTimeOffset.op_LessThanOrEqual(System.DateTimeOffset,System.DateTimeOffset)
  - System.DateTimeOffset.op_Subtraction(System.DateTimeOffset,System.DateTimeOffset)
  - System.DateTimeOffset.op_Subtraction(System.DateTimeOffset,System.TimeSpan)
  - System.DateTimeOffset.Parse(System.String)
  - System.DateTimeOffset.Parse(System.String,System.IFormatProvider)
  - System.DateTimeOffset.Parse(System.String,System.IFormatProvider,System.Globalization.DateTimeStyles)
  - System.DateTimeOffset.ParseExact(System.String,System.String,System.IFormatProvider)
  - System.DateTimeOffset.ParseExact(System.String,System.String,System.IFormatProvider,System.Globalization.DateTimeStyles)
  - System.DateTimeOffset.ParseExact(System.String,System.String[],System.IFormatProvider,System.Globalization.DateTimeStyles)
  - System.DateTimeOffset.Second
  - System.DateTimeOffset.Subtract(System.DateTimeOffset)
  - System.DateTimeOffset.Subtract(System.TimeSpan)
  - System.DateTimeOffset.System#IComparable#CompareTo(System.Object)
  - System.DateTimeOffset.Ticks
  - System.DateTimeOffset.TimeOfDay
  - System.DateTimeOffset.ToFileTime
  - System.DateTimeOffset.ToLocalTime
  - System.DateTimeOffset.ToOffset(System.TimeSpan)
  - System.DateTimeOffset.ToString
  - System.DateTimeOffset.ToString(System.IFormatProvider)
  - System.DateTimeOffset.ToString(System.String)
  - System.DateTimeOffset.ToString(System.String,System.IFormatProvider)
  - System.DateTimeOffset.ToUniversalTime
  - System.DateTimeOffset.ToUnixTimeMilliseconds
  - System.DateTimeOffset.ToUnixTimeSeconds
  - System.DateTimeOffset.TryParse(System.String,System.DateTimeOffset@)
  - System.DateTimeOffset.TryParse(System.String,System.IFormatProvider,System.Globalization.DateTimeStyles,System.DateTimeOffset@)
  - System.DateTimeOffset.TryParseExact(System.String,System.String,System.IFormatProvider,System.Globalization.DateTimeStyles,System.DateTimeOffset@)
  - System.DateTimeOffset.TryParseExact(System.String,System.String[],System.IFormatProvider,System.Globalization.DateTimeStyles,System.DateTimeOffset@)
  - System.DateTimeOffset.UtcDateTime
  - System.DateTimeOffset.UtcNow
  - System.DateTimeOffset.UtcTicks
  - System.DateTimeOffset.Year
  langs:
  - csharp
  - vb
  name: DateTimeOffset
  fullName: System.DateTimeOffset
  type: Struct
  source:
    remote:
      path: src/mscorlib/src/System/DateTimeOffset.cs
      branch: master
      repo: https://github.com/dotnet/coreclr.git
    id: DateTimeOffset
    path: src/mscorlib/src/System/DateTimeOffset.cs
    startLine: 34
  assemblies:
  - System.Runtime
  namespace: System
  summary: "\n<p>Represents a point in time, typically expressed as a date and time of day, relative to Coordinated Universal Time (UTC).</p>\n"
  syntax:
    content: >-
      [StructLayout(LayoutKind.Auto)]

      public struct DateTimeOffset : IComparable, IFormattable, ISerializable, IDeserializationCallback, IComparable<DateTimeOffset>, IEquatable<DateTimeOffset>
    content.vb: >-
      <StructLayout(LayoutKind.Auto)>

      Public Structure DateTimeOffset
          Implements IComparable, IFormattable, ISerializable, IDeserializationCallback, IComparable(Of DateTimeOffset), IEquatable(Of DateTimeOffset)
  implements:
  - System.IComparable
  - System.IComparable{System.DateTimeOffset}
  - System.IEquatable{System.DateTimeOffset}
  - System.IFormattable
  inheritedMembers:
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetType
  modifiers.csharp:
  - public
  - struct
  modifiers.vb:
  - Public
  - Structure
  nameWithType: DateTimeOffset
- uid: System.DateTimeOffset.MaxValue
  commentId: F:System.DateTimeOffset.MaxValue
  id: MaxValue
  parent: System.DateTimeOffset
  langs:
  - csharp
  - vb
  name: MaxValue
  fullName: System.DateTimeOffset.MaxValue
  type: Field
  source:
    remote:
      path: src/mscorlib/src/System/DateTimeOffset.cs
      branch: master
      repo: https://github.com/dotnet/coreclr.git
    id: MaxValue
    path: src/mscorlib/src/System/DateTimeOffset.cs
    startLine: 54
  assemblies:
  - System.Runtime
  namespace: System
  summary: "\n<p>Represents the greatest possible value of <xref href=\"System.DateTimeOffset\" data-throw-if-not-resolved=\"false\"></xref>. This field is read-only.</p>\n"
  syntax:
    content: public static readonly DateTimeOffset MaxValue
    content.vb: Public Shared ReadOnly MaxValue As DateTimeOffset
    return:
      type: System.DateTimeOffset
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "\n<p>\n<xref href=\"System.DateTime.MaxValue\" data-throw-if-not-resolved=\"false\"></xref> is outside the range of the current or specified culture's default calendar.</p>\n"
  modifiers.csharp:
  - public
  - static
  - readonly
  modifiers.vb:
  - Public
  - Shared
  - ReadOnly
  nameWithType: DateTimeOffset.MaxValue
- uid: System.DateTimeOffset.MinValue
  commentId: F:System.DateTimeOffset.MinValue
  id: MinValue
  parent: System.DateTimeOffset
  langs:
  - csharp
  - vb
  name: MinValue
  fullName: System.DateTimeOffset.MinValue
  type: Field
  source:
    remote:
      path: src/mscorlib/src/System/DateTimeOffset.cs
      branch: master
      repo: https://github.com/dotnet/coreclr.git
    id: MinValue
    path: src/mscorlib/src/System/DateTimeOffset.cs
    startLine: 53
  assemblies:
  - System.Runtime
  namespace: System
  summary: "\n<p>Represents the earliest possible <xref href=\"System.DateTimeOffset\" data-throw-if-not-resolved=\"false\"></xref> value. This field is read-only.</p>\n"
  syntax:
    content: public static readonly DateTimeOffset MinValue
    content.vb: Public Shared ReadOnly MinValue As DateTimeOffset
    return:
      type: System.DateTimeOffset
  seealso:
  - type: System.DateTimeOffset.ParseExact(System.String,System.String,System.IFormatProvider)
    commentId: M:System.DateTimeOffset.ParseExact(System.String,System.String,System.IFormatProvider)
  modifiers.csharp:
  - public
  - static
  - readonly
  modifiers.vb:
  - Public
  - Shared
  - ReadOnly
  nameWithType: DateTimeOffset.MinValue
- uid: System.DateTimeOffset.#ctor(System.DateTime)
  commentId: M:System.DateTimeOffset.#ctor(System.DateTime)
  id: '#ctor(System.DateTime)'
  parent: System.DateTimeOffset
  langs:
  - csharp
  - vb
  name: DateTimeOffset(DateTime)
  fullName: System.DateTimeOffset.DateTimeOffset(System.DateTime)
  type: Constructor
  source:
    remote:
      path: src/mscorlib/src/System/DateTimeOffset.cs
      branch: master
      repo: https://github.com/dotnet/coreclr.git
    id: .ctor
    path: src/mscorlib/src/System/DateTimeOffset.cs
    startLine: 72
  assemblies:
  - System.Runtime
  namespace: System
  summary: "\n<p>Initializes a new instance of the <xref href=\"System.DateTimeOffset\" data-throw-if-not-resolved=\"false\"></xref> structure using the specified <xref href=\"System.DateTime\" data-throw-if-not-resolved=\"false\"></xref> value.</p>\n"
  syntax:
    content: public DateTimeOffset(DateTime dateTime)
    content.vb: Public Sub New(dateTime As Date)
    parameters:
    - id: dateTime
      type: System.DateTime
      description: "\n<p>A date and time.   </p>\n"
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "\n<p>The Coordinated Universal Time (UTC) date and time that results from applying the offset is earlier than <xref href=\"System.DateTimeOffset.MinValue\" data-throw-if-not-resolved=\"false\"></xref>.</p>\n<p>-or-</p>\n<p>The UTC date and time that results from applying the offset is later than <xref href=\"System.DateTimeOffset.MaxValue\" data-throw-if-not-resolved=\"false\"></xref>.</p>\n"
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  nameWithType: DateTimeOffset.DateTimeOffset(DateTime)
- uid: System.DateTimeOffset.#ctor(System.DateTime,System.TimeSpan)
  commentId: M:System.DateTimeOffset.#ctor(System.DateTime,System.TimeSpan)
  id: '#ctor(System.DateTime,System.TimeSpan)'
  parent: System.DateTimeOffset
  langs:
  - csharp
  - vb
  name: DateTimeOffset(DateTime, TimeSpan)
  fullName: System.DateTimeOffset.DateTimeOffset(System.DateTime, System.TimeSpan)
  type: Constructor
  source:
    remote:
      path: src/mscorlib/src/System/DateTimeOffset.cs
      branch: master
      repo: https://github.com/dotnet/coreclr.git
    id: .ctor
    path: src/mscorlib/src/System/DateTimeOffset.cs
    startLine: 88
  assemblies:
  - System.Runtime
  namespace: System
  summary: "\n<p>Initializes a new instance of the <xref href=\"System.DateTimeOffset\" data-throw-if-not-resolved=\"false\"></xref> structure using the specified <xref href=\"System.DateTime\" data-throw-if-not-resolved=\"false\"></xref> value and offset.</p>\n"
  syntax:
    content: public DateTimeOffset(DateTime dateTime, TimeSpan offset)
    content.vb: Public Sub New(dateTime As Date, offset As TimeSpan)
    parameters:
    - id: dateTime
      type: System.DateTime
      description: "\n<p>A date and time.   </p>\n"
    - id: offset
      type: System.TimeSpan
      description: "\n<p>The time's offset from Coordinated Universal Time (UTC).</p>\n"
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "\n<p>\n<em>dateTime.Kind</em> equals <xref href=\"System.DateTimeKind.Utc\" data-throw-if-not-resolved=\"false\"></xref> and <em>offset</em> does not equal zero.</p>\n<p>-or-</p>\n<p>\n<em>dateTime.Kind</em> equals <xref href=\"System.DateTimeKind.Local\" data-throw-if-not-resolved=\"false\"></xref> and <em>offset</em> does not equal the offset of the system's local time zone.</p>\n<p>-or-</p>\n<p>\n<em>offset</em> is not specified in whole minutes.</p>\n"
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "\n<p>\n<em>offset</em> is less than -14 hours or greater than 14 hours.</p>\n<p>-or-</p>\n<p>\n<xref href=\"System.DateTimeOffset.UtcDateTime\" data-throw-if-not-resolved=\"false\"></xref> is less than <xref href=\"System.DateTimeOffset.MinValue\" data-throw-if-not-resolved=\"false\"></xref> or greater than <xref href=\"System.DateTimeOffset.MaxValue\" data-throw-if-not-resolved=\"false\"></xref>. </p>\n"
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  nameWithType: DateTimeOffset.DateTimeOffset(DateTime, TimeSpan)
- uid: System.DateTimeOffset.#ctor(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.TimeSpan)
  commentId: M:System.DateTimeOffset.#ctor(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.TimeSpan)
  id: '#ctor(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.TimeSpan)'
  parent: System.DateTimeOffset
  langs:
  - csharp
  - vb
  name: DateTimeOffset(Int32, Int32, Int32, Int32, Int32, Int32, Int32, TimeSpan)
  fullName: System.DateTimeOffset.DateTimeOffset(System.Int32, System.Int32, System.Int32, System.Int32, System.Int32, System.Int32, System.Int32, System.TimeSpan)
  type: Constructor
  source:
    remote:
      path: src/mscorlib/src/System/DateTimeOffset.cs
      branch: master
      repo: https://github.com/dotnet/coreclr.git
    id: .ctor
    path: src/mscorlib/src/System/DateTimeOffset.cs
    startLine: 112
  assemblies:
  - System.Runtime
  namespace: System
  summary: "\n<p>Initializes a new instance of the <xref href=\"System.DateTimeOffset\" data-throw-if-not-resolved=\"false\"></xref> structure using the specified year, month, day, hour, minute, second, millisecond, and offset.</p>\n"
  syntax:
    content: public DateTimeOffset(int year, int month, int day, int hour, int minute, int second, int millisecond, TimeSpan offset)
    content.vb: Public Sub New(year As Integer, month As Integer, day As Integer, hour As Integer, minute As Integer, second As Integer, millisecond As Integer, offset As TimeSpan)
    parameters:
    - id: year
      type: System.Int32
      description: "\n<p>The year (1 through 9999).</p>\n"
    - id: month
      type: System.Int32
      description: "\n<p>The month (1 through 12).</p>\n"
    - id: day
      type: System.Int32
      description: "\n<p>The day (1 through the number of days in <em>month</em>).</p>\n"
    - id: hour
      type: System.Int32
      description: "\n<p>The hours (0 through 23).   </p>\n"
    - id: minute
      type: System.Int32
      description: "\n<p>The minutes (0 through 59).</p>\n"
    - id: second
      type: System.Int32
      description: "\n<p>The seconds (0 through 59).</p>\n"
    - id: millisecond
      type: System.Int32
      description: "\n<p>The milliseconds (0 through 999).</p>\n"
    - id: offset
      type: System.TimeSpan
      description: "\n<p>The time's offset from Coordinated Universal Time (UTC).</p>\n"
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "\n<p>\n<em>offset</em> does not represent whole minutes.</p>\n"
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "\n<p>\n<em>year</em> is less than one or greater than 9999.</p>\n<p>-or-</p>\n<p>\n<em>month</em> is less than one or greater than 12.</p>\n<p>-or-</p>\n<p>\n<em>day</em> is less than one or greater than the number of days in <em>month</em>.</p>\n<p>-or-</p>\n<p>\n<em>hour</em> is less than zero or greater than 23.</p>\n<p>-or-</p>\n<p>\n<em>minute</em> is less than 0 or greater than 59.</p>\n<p>-or-</p>\n<p>\n<em>second</em> is less than 0 or greater than 59.</p>\n<p>-or-</p>\n<p>\n<em>millisecond</em> is less than 0 or greater than 999.</p>\n<p>-or-</p>\n<p>\n<em>offset</em> is less than -14 or greater than 14.</p>\n<p>-or-</p>\n<p>The <xref href=\"System.DateTimeOffset.UtcDateTime\" data-throw-if-not-resolved=\"false\"></xref> property is earlier than <xref href=\"System.DateTimeOffset.MinValue\" data-throw-if-not-resolved=\"false\"></xref> or later than <xref href=\"System.DateTimeOffset.MaxValue\" data-throw-if-not-resolved=\"false\"></xref>.</p>\n"
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  nameWithType: DateTimeOffset.DateTimeOffset(Int32, Int32, Int32, Int32, Int32, Int32, Int32, TimeSpan)
- uid: System.DateTimeOffset.#ctor(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.TimeSpan)
  commentId: M:System.DateTimeOffset.#ctor(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.TimeSpan)
  id: '#ctor(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.TimeSpan)'
  parent: System.DateTimeOffset
  langs:
  - csharp
  - vb
  name: DateTimeOffset(Int32, Int32, Int32, Int32, Int32, Int32, TimeSpan)
  fullName: System.DateTimeOffset.DateTimeOffset(System.Int32, System.Int32, System.Int32, System.Int32, System.Int32, System.Int32, System.TimeSpan)
  type: Constructor
  source:
    remote:
      path: src/mscorlib/src/System/DateTimeOffset.cs
      branch: master
      repo: https://github.com/dotnet/coreclr.git
    id: .ctor
    path: src/mscorlib/src/System/DateTimeOffset.cs
    startLine: 105
  assemblies:
  - System.Runtime
  namespace: System
  summary: "\n<p>Initializes a new instance of the <xref href=\"System.DateTimeOffset\" data-throw-if-not-resolved=\"false\"></xref> structure using the specified year, month, day, hour, minute, second, and offset.</p>\n"
  syntax:
    content: public DateTimeOffset(int year, int month, int day, int hour, int minute, int second, TimeSpan offset)
    content.vb: Public Sub New(year As Integer, month As Integer, day As Integer, hour As Integer, minute As Integer, second As Integer, offset As TimeSpan)
    parameters:
    - id: year
      type: System.Int32
      description: "\n<p>The year (1 through 9999).</p>\n"
    - id: month
      type: System.Int32
      description: "\n<p>The month (1 through 12).</p>\n"
    - id: day
      type: System.Int32
      description: "\n<p>The day (1 through the number of days in <em>month</em>).</p>\n"
    - id: hour
      type: System.Int32
      description: "\n<p>The hours (0 through 23).   </p>\n"
    - id: minute
      type: System.Int32
      description: "\n<p>The minutes (0 through 59).</p>\n"
    - id: second
      type: System.Int32
      description: "\n<p>The seconds (0 through 59).</p>\n"
    - id: offset
      type: System.TimeSpan
      description: "\n<p>The time's offset from Coordinated Universal Time (UTC).</p>\n"
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "\n<p>\n<em>offset</em> does not represent whole minutes.</p>\n"
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "\n<p>\n<em>year</em> is less than one or greater than 9999.</p>\n<p>-or-</p>\n<p>\n<em>month</em> is less than one or greater than 12.</p>\n<p>-or-</p>\n<p>\n<em>day</em> is less than one or greater than the number of days in <em>month</em>.</p>\n<p>-or-</p>\n<p>\n<em>hour</em> is less than zero or greater than 23.</p>\n<p>-or-</p>\n<p>\n<em>minute</em> is less than 0 or greater than 59.</p>\n<p>-or-</p>\n<p>\n<em>second</em> is less than 0 or greater than 59.</p>\n<p>-or-</p>\n<p>\n<em>offset</em> is less than -14 hours or greater than 14 hours.</p>\n<p>-or-</p>\n<p>The <xref href=\"System.DateTimeOffset.UtcDateTime\" data-throw-if-not-resolved=\"false\"></xref> property is earlier than <xref href=\"System.DateTimeOffset.MinValue\" data-throw-if-not-resolved=\"false\"></xref> or later than <xref href=\"System.DateTimeOffset.MaxValue\" data-throw-if-not-resolved=\"false\"></xref>.</p>\n"
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  nameWithType: DateTimeOffset.DateTimeOffset(Int32, Int32, Int32, Int32, Int32, Int32, TimeSpan)
- uid: System.DateTimeOffset.#ctor(System.Int64,System.TimeSpan)
  commentId: M:System.DateTimeOffset.#ctor(System.Int64,System.TimeSpan)
  id: '#ctor(System.Int64,System.TimeSpan)'
  parent: System.DateTimeOffset
  langs:
  - csharp
  - vb
  name: DateTimeOffset(Int64, TimeSpan)
  fullName: System.DateTimeOffset.DateTimeOffset(System.Int64, System.TimeSpan)
  type: Constructor
  source:
    remote:
      path: src/mscorlib/src/System/DateTimeOffset.cs
      branch: master
      repo: https://github.com/dotnet/coreclr.git
    id: .ctor
    path: src/mscorlib/src/System/DateTimeOffset.cs
    startLine: 63
  assemblies:
  - System.Runtime
  namespace: System
  summary: "\n<p>Initializes a new instance of the <xref href=\"System.DateTimeOffset\" data-throw-if-not-resolved=\"false\"></xref> structure using the specified number of ticks and offset.</p>\n"
  syntax:
    content: public DateTimeOffset(long ticks, TimeSpan offset)
    content.vb: Public Sub New(ticks As Long, offset As TimeSpan)
    parameters:
    - id: ticks
      type: System.Int64
      description: "\n<p>A date and time expressed as the number of 100-nanosecond intervals that have elapsed since 12:00:00 midnight on January 1, 0001.</p>\n"
    - id: offset
      type: System.TimeSpan
      description: "\n<p>The time's offset from Coordinated Universal Time (UTC).</p>\n"
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "\n<p>\n<em>offset</em> is not specified in whole minutes.</p>\n"
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "\n<p>The <xref href=\"System.DateTimeOffset.UtcDateTime\" data-throw-if-not-resolved=\"false\"></xref> property is earlier than <xref href=\"System.DateTimeOffset.MinValue\" data-throw-if-not-resolved=\"false\"></xref> or later than <xref href=\"System.DateTimeOffset.MaxValue\" data-throw-if-not-resolved=\"false\"></xref>.</p>\n<p>-or-</p>\n<p>\n<em>ticks</em> is less than <strong>DateTimeOffset.MinValue.Ticks</strong> or greater than <strong>DateTimeOffset.MaxValue.Ticks</strong>.</p>\n<p>-or-</p>\n<p>\n<em>Offset</em> s less than -14 hours or greater than 14 hours.</p>\n"
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  nameWithType: DateTimeOffset.DateTimeOffset(Int64, TimeSpan)
- uid: System.DateTimeOffset.Date
  commentId: P:System.DateTimeOffset.Date
  id: Date
  parent: System.DateTimeOffset
  langs:
  - csharp
  - vb
  name: Date
  fullName: System.DateTimeOffset.Date
  type: Property
  source:
    remote:
      path: src/mscorlib/src/System/DateTimeOffset.cs
      branch: master
      repo: https://github.com/dotnet/coreclr.git
    id: Date
    path: src/mscorlib/src/System/DateTimeOffset.cs
    startLine: 187
  assemblies:
  - System.Runtime
  namespace: System
  summary: "\n<p>Gets a <xref href=\"System.DateTime\" data-throw-if-not-resolved=\"false\"></xref> value that represents the date component of the current <xref href=\"System.DateTimeOffset\" data-throw-if-not-resolved=\"false\"></xref> object.</p>\n"
  syntax:
    content: public DateTime Date { get; }
    content.vb: Public ReadOnly Property Date As Date
    parameters: []
    return:
      type: System.DateTime
      description: "\n<p>A <xref href=\"System.DateTime\" data-throw-if-not-resolved=\"false\"></xref> value that represents the date component of the current <xref href=\"System.DateTimeOffset\" data-throw-if-not-resolved=\"false\"></xref> object.</p>\n"
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
  nameWithType: DateTimeOffset.Date
- uid: System.DateTimeOffset.DateTime
  commentId: P:System.DateTimeOffset.DateTime
  id: DateTime
  parent: System.DateTimeOffset
  langs:
  - csharp
  - vb
  name: DateTime
  fullName: System.DateTimeOffset.DateTime
  type: Property
  source:
    remote:
      path: src/mscorlib/src/System/DateTimeOffset.cs
      branch: master
      repo: https://github.com/dotnet/coreclr.git
    id: DateTime
    path: src/mscorlib/src/System/DateTimeOffset.cs
    startLine: 143
  assemblies:
  - System.Runtime
  namespace: System
  summary: "\n<p>Gets a <xref href=\"System.DateTime\" data-throw-if-not-resolved=\"false\"></xref> value that represents the date and time of the current <xref href=\"System.DateTimeOffset\" data-throw-if-not-resolved=\"false\"></xref> object.</p>\n"
  syntax:
    content: public DateTime DateTime { get; }
    content.vb: Public ReadOnly Property DateTime As Date
    parameters: []
    return:
      type: System.DateTime
      description: "\n<p>The date and time of the current <xref href=\"System.DateTimeOffset\" data-throw-if-not-resolved=\"false\"></xref> object.</p>\n"
  seealso:
  - type: System.DateTimeOffset.LocalDateTime
    commentId: P:System.DateTimeOffset.LocalDateTime
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
  nameWithType: DateTimeOffset.DateTime
- uid: System.DateTimeOffset.Day
  commentId: P:System.DateTimeOffset.Day
  id: Day
  parent: System.DateTimeOffset
  langs:
  - csharp
  - vb
  name: Day
  fullName: System.DateTimeOffset.Day
  type: Property
  source:
    remote:
      path: src/mscorlib/src/System/DateTimeOffset.cs
      branch: master
      repo: https://github.com/dotnet/coreclr.git
    id: Day
    path: src/mscorlib/src/System/DateTimeOffset.cs
    startLine: 196
  assemblies:
  - System.Runtime
  namespace: System
  summary: "\n<p>Gets the day of the month represented by the current <xref href=\"System.DateTimeOffset\" data-throw-if-not-resolved=\"false\"></xref> object.</p>\n"
  syntax:
    content: public int Day { get; }
    content.vb: Public ReadOnly Property Day As Integer
    parameters: []
    return:
      type: System.Int32
      description: "\n<p>The day component of the current <xref href=\"System.DateTimeOffset\" data-throw-if-not-resolved=\"false\"></xref> object, expressed as a value between 1 and 31.</p>\n"
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
  nameWithType: DateTimeOffset.Day
- uid: System.DateTimeOffset.DayOfWeek
  commentId: P:System.DateTimeOffset.DayOfWeek
  id: DayOfWeek
  parent: System.DateTimeOffset
  langs:
  - csharp
  - vb
  name: DayOfWeek
  fullName: System.DateTimeOffset.DayOfWeek
  type: Property
  source:
    remote:
      path: src/mscorlib/src/System/DateTimeOffset.cs
      branch: master
      repo: https://github.com/dotnet/coreclr.git
    id: DayOfWeek
    path: src/mscorlib/src/System/DateTimeOffset.cs
    startLine: 209
  assemblies:
  - System.Runtime
  namespace: System
  summary: "\n<p>Gets the day of the week represented by the current <xref href=\"System.DateTimeOffset\" data-throw-if-not-resolved=\"false\"></xref> object.</p>\n"
  syntax:
    content: public DayOfWeek DayOfWeek { get; }
    content.vb: Public ReadOnly Property DayOfWeek As DayOfWeek
    parameters: []
    return:
      type: System.DayOfWeek
      description: "\n<p>One of the enumeration values that indicates the day of the week of the current <xref href=\"System.DateTimeOffset\" data-throw-if-not-resolved=\"false\"></xref> object.</p>\n"
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
  nameWithType: DateTimeOffset.DayOfWeek
- uid: System.DateTimeOffset.DayOfYear
  commentId: P:System.DateTimeOffset.DayOfYear
  id: DayOfYear
  parent: System.DateTimeOffset
  langs:
  - csharp
  - vb
  name: DayOfYear
  fullName: System.DateTimeOffset.DayOfYear
  type: Property
  source:
    remote:
      path: src/mscorlib/src/System/DateTimeOffset.cs
      branch: master
      repo: https://github.com/dotnet/coreclr.git
    id: DayOfYear
    path: src/mscorlib/src/System/DateTimeOffset.cs
    startLine: 220
  assemblies:
  - System.Runtime
  namespace: System
  summary: "\n<p>Gets the day of the year represented by the current <xref href=\"System.DateTimeOffset\" data-throw-if-not-resolved=\"false\"></xref> object.</p>\n"
  syntax:
    content: public int DayOfYear { get; }
    content.vb: Public ReadOnly Property DayOfYear As Integer
    parameters: []
    return:
      type: System.Int32
      description: "\n<p>The day of the year of the current <xref href=\"System.DateTimeOffset\" data-throw-if-not-resolved=\"false\"></xref> object, expressed as a value between 1 and 366.</p>\n"
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
  nameWithType: DateTimeOffset.DayOfYear
- uid: System.DateTimeOffset.Hour
  commentId: P:System.DateTimeOffset.Hour
  id: Hour
  parent: System.DateTimeOffset
  langs:
  - csharp
  - vb
  name: Hour
  fullName: System.DateTimeOffset.Hour
  type: Property
  source:
    remote:
      path: src/mscorlib/src/System/DateTimeOffset.cs
      branch: master
      repo: https://github.com/dotnet/coreclr.git
    id: Hour
    path: src/mscorlib/src/System/DateTimeOffset.cs
    startLine: 231
  assemblies:
  - System.Runtime
  namespace: System
  summary: "\n<p>Gets the hour component of the time represented by the current <xref href=\"System.DateTimeOffset\" data-throw-if-not-resolved=\"false\"></xref> object.</p>\n"
  syntax:
    content: public int Hour { get; }
    content.vb: Public ReadOnly Property Hour As Integer
    parameters: []
    return:
      type: System.Int32
      description: "\n<p>The hour component of the current <xref href=\"System.DateTimeOffset\" data-throw-if-not-resolved=\"false\"></xref> object. This property uses a 24-hour clock; the value ranges from 0 to 23.</p>\n"
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
  nameWithType: DateTimeOffset.Hour
- uid: System.DateTimeOffset.LocalDateTime
  commentId: P:System.DateTimeOffset.LocalDateTime
  id: LocalDateTime
  parent: System.DateTimeOffset
  langs:
  - csharp
  - vb
  name: LocalDateTime
  fullName: System.DateTimeOffset.LocalDateTime
  type: Property
  source:
    remote:
      path: src/mscorlib/src/System/DateTimeOffset.cs
      branch: master
      repo: https://github.com/dotnet/coreclr.git
    id: LocalDateTime
    path: src/mscorlib/src/System/DateTimeOffset.cs
    startLine: 157
  assemblies:
  - System.Runtime
  namespace: System
  summary: "\n<p>Gets a <xref href=\"System.DateTime\" data-throw-if-not-resolved=\"false\"></xref> value that represents the local date and time of the current <xref href=\"System.DateTimeOffset\" data-throw-if-not-resolved=\"false\"></xref> object.</p>\n"
  syntax:
    content: public DateTime LocalDateTime { get; }
    content.vb: Public ReadOnly Property LocalDateTime As Date
    parameters: []
    return:
      type: System.DateTime
      description: "\n<p>The local date and time of the current <xref href=\"System.DateTimeOffset\" data-throw-if-not-resolved=\"false\"></xref> object.</p>\n"
  seealso:
  - type: System.DateTimeOffset.DateTime
    commentId: P:System.DateTimeOffset.DateTime
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
  nameWithType: DateTimeOffset.LocalDateTime
- uid: System.DateTimeOffset.Millisecond
  commentId: P:System.DateTimeOffset.Millisecond
  id: Millisecond
  parent: System.DateTimeOffset
  langs:
  - csharp
  - vb
  name: Millisecond
  fullName: System.DateTimeOffset.Millisecond
  type: Property
  source:
    remote:
      path: src/mscorlib/src/System/DateTimeOffset.cs
      branch: master
      repo: https://github.com/dotnet/coreclr.git
    id: Millisecond
    path: src/mscorlib/src/System/DateTimeOffset.cs
    startLine: 243
  assemblies:
  - System.Runtime
  namespace: System
  summary: "\n<p>Gets the millisecond component of the time represented by the current <xref href=\"System.DateTimeOffset\" data-throw-if-not-resolved=\"false\"></xref> object.</p>\n"
  syntax:
    content: public int Millisecond { get; }
    content.vb: Public ReadOnly Property Millisecond As Integer
    parameters: []
    return:
      type: System.Int32
      description: "\n<p>The millisecond component of the current <xref href=\"System.DateTimeOffset\" data-throw-if-not-resolved=\"false\"></xref> object, expressed as an integer between 0 and 999.</p>\n"
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
  nameWithType: DateTimeOffset.Millisecond
- uid: System.DateTimeOffset.Minute
  commentId: P:System.DateTimeOffset.Minute
  id: Minute
  parent: System.DateTimeOffset
  langs:
  - csharp
  - vb
  name: Minute
  fullName: System.DateTimeOffset.Minute
  type: Property
  source:
    remote:
      path: src/mscorlib/src/System/DateTimeOffset.cs
      branch: master
      repo: https://github.com/dotnet/coreclr.git
    id: Minute
    path: src/mscorlib/src/System/DateTimeOffset.cs
    startLine: 254
  assemblies:
  - System.Runtime
  namespace: System
  summary: "\n<p>Gets the minute component of the time represented by the current <xref href=\"System.DateTimeOffset\" data-throw-if-not-resolved=\"false\"></xref> object.</p>\n"
  syntax:
    content: public int Minute { get; }
    content.vb: Public ReadOnly Property Minute As Integer
    parameters: []
    return:
      type: System.Int32
      description: "\n<p>The minute component of the current <xref href=\"System.DateTimeOffset\" data-throw-if-not-resolved=\"false\"></xref> object, expressed as an integer between 0 and 59.</p>\n"
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
  nameWithType: DateTimeOffset.Minute
- uid: System.DateTimeOffset.Month
  commentId: P:System.DateTimeOffset.Month
  id: Month
  parent: System.DateTimeOffset
  langs:
  - csharp
  - vb
  name: Month
  fullName: System.DateTimeOffset.Month
  type: Property
  source:
    remote:
      path: src/mscorlib/src/System/DateTimeOffset.cs
      branch: master
      repo: https://github.com/dotnet/coreclr.git
    id: Month
    path: src/mscorlib/src/System/DateTimeOffset.cs
    startLine: 265
  assemblies:
  - System.Runtime
  namespace: System
  summary: "\n<p>Gets the month component of the date represented by the current <xref href=\"System.DateTimeOffset\" data-throw-if-not-resolved=\"false\"></xref> object.</p>\n"
  syntax:
    content: public int Month { get; }
    content.vb: Public ReadOnly Property Month As Integer
    parameters: []
    return:
      type: System.Int32
      description: "\n<p>The month component of the current <xref href=\"System.DateTimeOffset\" data-throw-if-not-resolved=\"false\"></xref> object, expressed as an integer between 1 and 12.</p>\n"
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
  nameWithType: DateTimeOffset.Month
- uid: System.DateTimeOffset.Now
  commentId: P:System.DateTimeOffset.Now
  id: Now
  parent: System.DateTimeOffset
  langs:
  - csharp
  - vb
  name: Now
  fullName: System.DateTimeOffset.Now
  type: Property
  source:
    remote:
      path: src/mscorlib/src/System/DateTimeOffset.cs
      branch: master
      repo: https://github.com/dotnet/coreclr.git
    id: Now
    path: src/mscorlib/src/System/DateTimeOffset.cs
    startLine: 131
  assemblies:
  - System.Runtime
  namespace: System
  summary: "\n<p>Gets a <xref href=\"System.DateTimeOffset\" data-throw-if-not-resolved=\"false\"></xref> object that is set to the current date and time on the current computer, with the offset set to the local time's offset from Coordinated Universal Time (UTC).</p>\n"
  syntax:
    content: public static DateTimeOffset Now { get; }
    content.vb: Public Shared ReadOnly Property Now As DateTimeOffset
    parameters: []
    return:
      type: System.DateTimeOffset
      description: "\n<p>A <xref href=\"System.DateTimeOffset\" data-throw-if-not-resolved=\"false\"></xref> object whose date and time is the current local time and whose offset is the local time zone's offset from Coordinated Universal Time (UTC).</p>\n"
  seealso:
  - type: System.DateTimeOffset.UtcNow
    commentId: P:System.DateTimeOffset.UtcNow
  modifiers.csharp:
  - public
  - static
  - get
  modifiers.vb:
  - Public
  - Shared
  - ReadOnly
  nameWithType: DateTimeOffset.Now
- uid: System.DateTimeOffset.Offset
  commentId: P:System.DateTimeOffset.Offset
  id: Offset
  parent: System.DateTimeOffset
  langs:
  - csharp
  - vb
  name: Offset
  fullName: System.DateTimeOffset.Offset
  type: Property
  source:
    remote:
      path: src/mscorlib/src/System/DateTimeOffset.cs
      branch: master
      repo: https://github.com/dotnet/coreclr.git
    id: Offset
    path: src/mscorlib/src/System/DateTimeOffset.cs
    startLine: 272
  assemblies:
  - System.Runtime
  namespace: System
  summary: "\n<p>Gets the time's offset from Coordinated Universal Time (UTC). </p>\n"
  syntax:
    content: public TimeSpan Offset { get; }
    content.vb: Public ReadOnly Property Offset As TimeSpan
    parameters: []
    return:
      type: System.TimeSpan
      description: "\n<p>The difference between the current <xref href=\"System.DateTimeOffset\" data-throw-if-not-resolved=\"false\"></xref> object's time value and Coordinated Universal Time (UTC).</p>\n"
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
  nameWithType: DateTimeOffset.Offset
- uid: System.DateTimeOffset.Second
  commentId: P:System.DateTimeOffset.Second
  id: Second
  parent: System.DateTimeOffset
  langs:
  - csharp
  - vb
  name: Second
  fullName: System.DateTimeOffset.Second
  type: Property
  source:
    remote:
      path: src/mscorlib/src/System/DateTimeOffset.cs
      branch: master
      repo: https://github.com/dotnet/coreclr.git
    id: Second
    path: src/mscorlib/src/System/DateTimeOffset.cs
    startLine: 281
  assemblies:
  - System.Runtime
  namespace: System
  summary: "\n<p>Gets the second component of the clock time represented by the current <xref href=\"System.DateTimeOffset\" data-throw-if-not-resolved=\"false\"></xref> object.</p>\n"
  syntax:
    content: public int Second { get; }
    content.vb: Public ReadOnly Property Second As Integer
    parameters: []
    return:
      type: System.Int32
      description: "\n<p>The second component of the <xref href=\"System.DateTimeOffset\" data-throw-if-not-resolved=\"false\"></xref> object, expressed as an integer value between 0 and 59.</p>\n"
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
  nameWithType: DateTimeOffset.Second
- uid: System.DateTimeOffset.Ticks
  commentId: P:System.DateTimeOffset.Ticks
  id: Ticks
  parent: System.DateTimeOffset
  langs:
  - csharp
  - vb
  name: Ticks
  fullName: System.DateTimeOffset.Ticks
  type: Property
  source:
    remote:
      path: src/mscorlib/src/System/DateTimeOffset.cs
      branch: master
      repo: https://github.com/dotnet/coreclr.git
    id: Ticks
    path: src/mscorlib/src/System/DateTimeOffset.cs
    startLine: 293
  assemblies:
  - System.Runtime
  namespace: System
  summary: "\n<p>Gets the number of ticks that represents the date and time of the current <xref href=\"System.DateTimeOffset\" data-throw-if-not-resolved=\"false\"></xref> object in clock time.</p>\n"
  syntax:
    content: public long Ticks { get; }
    content.vb: Public ReadOnly Property Ticks As Long
    parameters: []
    return:
      type: System.Int64
      description: "\n<p>The number of ticks in the <xref href=\"System.DateTimeOffset\" data-throw-if-not-resolved=\"false\"></xref> object's clock time.</p>\n"
  seealso:
  - type: System.DateTimeOffset.UtcDateTime
    commentId: P:System.DateTimeOffset.UtcDateTime
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
  nameWithType: DateTimeOffset.Ticks
- uid: System.DateTimeOffset.TimeOfDay
  commentId: P:System.DateTimeOffset.TimeOfDay
  id: TimeOfDay
  parent: System.DateTimeOffset
  langs:
  - csharp
  - vb
  name: TimeOfDay
  fullName: System.DateTimeOffset.TimeOfDay
  type: Property
  source:
    remote:
      path: src/mscorlib/src/System/DateTimeOffset.cs
      branch: master
      repo: https://github.com/dotnet/coreclr.git
    id: TimeOfDay
    path: src/mscorlib/src/System/DateTimeOffset.cs
    startLine: 308
  assemblies:
  - System.Runtime
  namespace: System
  summary: "\n<p>Gets the time of day for the current <xref href=\"System.DateTimeOffset\" data-throw-if-not-resolved=\"false\"></xref> object.</p>\n"
  syntax:
    content: public TimeSpan TimeOfDay { get; }
    content.vb: Public ReadOnly Property TimeOfDay As TimeSpan
    parameters: []
    return:
      type: System.TimeSpan
      description: "\n<p>The time interval of the current date that has elapsed since midnight.</p>\n"
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
  nameWithType: DateTimeOffset.TimeOfDay
- uid: System.DateTimeOffset.UtcDateTime
  commentId: P:System.DateTimeOffset.UtcDateTime
  id: UtcDateTime
  parent: System.DateTimeOffset
  langs:
  - csharp
  - vb
  name: UtcDateTime
  fullName: System.DateTimeOffset.UtcDateTime
  type: Property
  source:
    remote:
      path: src/mscorlib/src/System/DateTimeOffset.cs
      branch: master
      repo: https://github.com/dotnet/coreclr.git
    id: UtcDateTime
    path: src/mscorlib/src/System/DateTimeOffset.cs
    startLine: 149
  assemblies:
  - System.Runtime
  namespace: System
  summary: "\n<p>Gets a <xref href=\"System.DateTime\" data-throw-if-not-resolved=\"false\"></xref> value that represents the Coordinated Universal Time (UTC) date and time of the current <xref href=\"System.DateTimeOffset\" data-throw-if-not-resolved=\"false\"></xref> object.</p>\n"
  syntax:
    content: public DateTime UtcDateTime { get; }
    content.vb: Public ReadOnly Property UtcDateTime As Date
    parameters: []
    return:
      type: System.DateTime
      description: "\n<p>The Coordinated Universal Time (UTC) date and time of the current <xref href=\"System.DateTimeOffset\" data-throw-if-not-resolved=\"false\"></xref> object.</p>\n"
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
  nameWithType: DateTimeOffset.UtcDateTime
- uid: System.DateTimeOffset.UtcNow
  commentId: P:System.DateTimeOffset.UtcNow
  id: UtcNow
  parent: System.DateTimeOffset
  langs:
  - csharp
  - vb
  name: UtcNow
  fullName: System.DateTimeOffset.UtcNow
  type: Property
  source:
    remote:
      path: src/mscorlib/src/System/DateTimeOffset.cs
      branch: master
      repo: https://github.com/dotnet/coreclr.git
    id: UtcNow
    path: src/mscorlib/src/System/DateTimeOffset.cs
    startLine: 137
  assemblies:
  - System.Runtime
  namespace: System
  summary: "\n<p>Gets a <xref href=\"System.DateTimeOffset\" data-throw-if-not-resolved=\"false\"></xref> object whose date and time are set to the current Coordinated Universal Time (UTC) date and time and whose offset is <xref href=\"System.TimeSpan.Zero\" data-throw-if-not-resolved=\"false\"></xref>.</p>\n"
  syntax:
    content: public static DateTimeOffset UtcNow { get; }
    content.vb: Public Shared ReadOnly Property UtcNow As DateTimeOffset
    parameters: []
    return:
      type: System.DateTimeOffset
      description: "\n<p>An object whose date and time is the current Coordinated Universal Time (UTC) and whose offset is <xref href=\"System.TimeSpan.Zero\" data-throw-if-not-resolved=\"false\"></xref>.</p>\n"
  seealso:
  - type: System.DateTimeOffset.Now
    commentId: P:System.DateTimeOffset.Now
  modifiers.csharp:
  - public
  - static
  - get
  modifiers.vb:
  - Public
  - Shared
  - ReadOnly
  nameWithType: DateTimeOffset.UtcNow
- uid: System.DateTimeOffset.UtcTicks
  commentId: P:System.DateTimeOffset.UtcTicks
  id: UtcTicks
  parent: System.DateTimeOffset
  langs:
  - csharp
  - vb
  name: UtcTicks
  fullName: System.DateTimeOffset.UtcTicks
  type: Property
  source:
    remote:
      path: src/mscorlib/src/System/DateTimeOffset.cs
      branch: master
      repo: https://github.com/dotnet/coreclr.git
    id: UtcTicks
    path: src/mscorlib/src/System/DateTimeOffset.cs
    startLine: 299
  assemblies:
  - System.Runtime
  namespace: System
  summary: "\n<p>Gets the number of ticks that represents the date and time of the current <xref href=\"System.DateTimeOffset\" data-throw-if-not-resolved=\"false\"></xref> object in Coordinated Universal Time (UTC).</p>\n"
  syntax:
    content: public long UtcTicks { get; }
    content.vb: Public ReadOnly Property UtcTicks As Long
    parameters: []
    return:
      type: System.Int64
      description: "\n<p>The number of ticks in the <xref href=\"System.DateTimeOffset\" data-throw-if-not-resolved=\"false\"></xref> object's Coordinated Universal Time (UTC).</p>\n"
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
  nameWithType: DateTimeOffset.UtcTicks
- uid: System.DateTimeOffset.Year
  commentId: P:System.DateTimeOffset.Year
  id: Year
  parent: System.DateTimeOffset
  langs:
  - csharp
  - vb
  name: Year
  fullName: System.DateTimeOffset.Year
  type: Property
  source:
    remote:
      path: src/mscorlib/src/System/DateTimeOffset.cs
      branch: master
      repo: https://github.com/dotnet/coreclr.git
    id: Year
    path: src/mscorlib/src/System/DateTimeOffset.cs
    startLine: 317
  assemblies:
  - System.Runtime
  namespace: System
  summary: "\n<p>Gets the year component of the date represented by the current <xref href=\"System.DateTimeOffset\" data-throw-if-not-resolved=\"false\"></xref> object.</p>\n"
  syntax:
    content: public int Year { get; }
    content.vb: Public ReadOnly Property Year As Integer
    parameters: []
    return:
      type: System.Int32
      description: "\n<p>The year component of the current <xref href=\"System.DateTimeOffset\" data-throw-if-not-resolved=\"false\"></xref> object, expressed as an integer value between 0 and 9999.</p>\n"
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
  nameWithType: DateTimeOffset.Year
- uid: System.DateTimeOffset.Add(System.TimeSpan)
  commentId: M:System.DateTimeOffset.Add(System.TimeSpan)
  id: Add(System.TimeSpan)
  parent: System.DateTimeOffset
  langs:
  - csharp
  - vb
  name: Add(TimeSpan)
  fullName: System.DateTimeOffset.Add(System.TimeSpan)
  type: Method
  source:
    remote:
      path: src/mscorlib/src/System/DateTimeOffset.cs
      branch: master
      repo: https://github.com/dotnet/coreclr.git
    id: Add
    path: src/mscorlib/src/System/DateTimeOffset.cs
    startLine: 327
  assemblies:
  - System.Runtime
  namespace: System
  summary: "\n<p>Returns a new <xref href=\"System.DateTimeOffset\" data-throw-if-not-resolved=\"false\"></xref> object that adds a specified time interval to the value of this instance.</p>\n"
  syntax:
    content: public DateTimeOffset Add(TimeSpan timeSpan)
    content.vb: Public Function Add(timeSpan As TimeSpan) As DateTimeOffset
    parameters:
    - id: timeSpan
      type: System.TimeSpan
      description: "\n<p>A <xref href=\"System.TimeSpan\" data-throw-if-not-resolved=\"false\"></xref> object that represents a positive or a negative time interval.</p>\n"
    return:
      type: System.DateTimeOffset
      description: "\n<p>An object whose value is the sum of the date and time represented by the current <xref href=\"System.DateTimeOffset\" data-throw-if-not-resolved=\"false\"></xref> object and the time interval represented by <em>timeSpan</em>.</p>\n"
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "\n<p>The resulting <xref href=\"System.DateTimeOffset\" data-throw-if-not-resolved=\"false\"></xref> value is less than <xref href=\"System.DateTimeOffset.MinValue\" data-throw-if-not-resolved=\"false\"></xref>.</p>\n<p>-or- </p>\n<p>The resulting <xref href=\"System.DateTimeOffset\" data-throw-if-not-resolved=\"false\"></xref> value is greater than <xref href=\"System.DateTimeOffset.MaxValue\" data-throw-if-not-resolved=\"false\"></xref>.</p>\n"
  seealso:
  - type: System.DateTimeOffset.op_Addition(System.DateTimeOffset,System.TimeSpan)
    commentId: M:System.DateTimeOffset.op_Addition(System.DateTimeOffset,System.TimeSpan)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  nameWithType: DateTimeOffset.Add(TimeSpan)
- uid: System.DateTimeOffset.AddDays(System.Double)
  commentId: M:System.DateTimeOffset.AddDays(System.Double)
  id: AddDays(System.Double)
  parent: System.DateTimeOffset
  langs:
  - csharp
  - vb
  name: AddDays(Double)
  fullName: System.DateTimeOffset.AddDays(System.Double)
  type: Method
  source:
    remote:
      path: src/mscorlib/src/System/DateTimeOffset.cs
      branch: master
      repo: https://github.com/dotnet/coreclr.git
    id: AddDays
    path: src/mscorlib/src/System/DateTimeOffset.cs
    startLine: 337
  assemblies:
  - System.Runtime
  namespace: System
  summary: "\n<p>Returns a new <xref href=\"System.DateTimeOffset\" data-throw-if-not-resolved=\"false\"></xref> object that adds a specified number of whole and fractional days to the value of this instance.</p>\n"
  syntax:
    content: public DateTimeOffset AddDays(double days)
    content.vb: Public Function AddDays(days As Double) As DateTimeOffset
    parameters:
    - id: days
      type: System.Double
      description: "\n<p>A number of whole and fractional days. The number can be negative or positive.</p>\n"
    return:
      type: System.DateTimeOffset
      description: "\n<p>An object whose value is the sum of the date and time represented by the current <xref href=\"System.DateTimeOffset\" data-throw-if-not-resolved=\"false\"></xref> object and the number of days represented by <em>days</em>.</p>\n"
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "\n<p>The resulting <xref href=\"System.DateTimeOffset\" data-throw-if-not-resolved=\"false\"></xref> value is less than <xref href=\"System.DateTimeOffset.MinValue\" data-throw-if-not-resolved=\"false\"></xref>.</p>\n<p>-or- </p>\n<p>The resulting <xref href=\"System.DateTimeOffset\" data-throw-if-not-resolved=\"false\"></xref> value is greater than <xref href=\"System.DateTimeOffset.MaxValue\" data-throw-if-not-resolved=\"false\"></xref>.</p>\n"
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  nameWithType: DateTimeOffset.AddDays(Double)
- uid: System.DateTimeOffset.AddHours(System.Double)
  commentId: M:System.DateTimeOffset.AddHours(System.Double)
  id: AddHours(System.Double)
  parent: System.DateTimeOffset
  langs:
  - csharp
  - vb
  name: AddHours(Double)
  fullName: System.DateTimeOffset.AddHours(System.Double)
  type: Method
  source:
    remote:
      path: src/mscorlib/src/System/DateTimeOffset.cs
      branch: master
      repo: https://github.com/dotnet/coreclr.git
    id: AddHours
    path: src/mscorlib/src/System/DateTimeOffset.cs
    startLine: 347
  assemblies:
  - System.Runtime
  namespace: System
  summary: "\n<p>Returns a new <xref href=\"System.DateTimeOffset\" data-throw-if-not-resolved=\"false\"></xref> object that adds a specified number of whole and fractional hours to the value of this instance.</p>\n"
  syntax:
    content: public DateTimeOffset AddHours(double hours)
    content.vb: Public Function AddHours(hours As Double) As DateTimeOffset
    parameters:
    - id: hours
      type: System.Double
      description: "\n<p>A number of whole and fractional hours. The number can be negative or positive.</p>\n"
    return:
      type: System.DateTimeOffset
      description: "\n<p>An object whose value is the sum of the date and time represented by the current <xref href=\"System.DateTimeOffset\" data-throw-if-not-resolved=\"false\"></xref> object and the number of hours represented by <em>hours</em>.</p>\n"
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "\n<p>The resulting <xref href=\"System.DateTimeOffset\" data-throw-if-not-resolved=\"false\"></xref> value is less than <xref href=\"System.DateTimeOffset.MinValue\" data-throw-if-not-resolved=\"false\"></xref>.</p>\n<p>-or- </p>\n<p>The resulting <xref href=\"System.DateTimeOffset\" data-throw-if-not-resolved=\"false\"></xref> value is greater than <xref href=\"System.DateTimeOffset.MaxValue\" data-throw-if-not-resolved=\"false\"></xref>.</p>\n"
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  nameWithType: DateTimeOffset.AddHours(Double)
- uid: System.DateTimeOffset.AddMilliseconds(System.Double)
  commentId: M:System.DateTimeOffset.AddMilliseconds(System.Double)
  id: AddMilliseconds(System.Double)
  parent: System.DateTimeOffset
  langs:
  - csharp
  - vb
  name: AddMilliseconds(Double)
  fullName: System.DateTimeOffset.AddMilliseconds(System.Double)
  type: Method
  source:
    remote:
      path: src/mscorlib/src/System/DateTimeOffset.cs
      branch: master
      repo: https://github.com/dotnet/coreclr.git
    id: AddMilliseconds
    path: src/mscorlib/src/System/DateTimeOffset.cs
    startLine: 357
  assemblies:
  - System.Runtime
  namespace: System
  summary: "\n<p>Returns a new <xref href=\"System.DateTimeOffset\" data-throw-if-not-resolved=\"false\"></xref> object that adds a specified number of milliseconds to the value of this instance.</p>\n"
  syntax:
    content: public DateTimeOffset AddMilliseconds(double milliseconds)
    content.vb: Public Function AddMilliseconds(milliseconds As Double) As DateTimeOffset
    parameters:
    - id: milliseconds
      type: System.Double
      description: "\n<p>A number of whole and fractional milliseconds. The number can be negative or positive.   </p>\n"
    return:
      type: System.DateTimeOffset
      description: "\n<p>An object whose value is the sum of the date and time represented by the current <xref href=\"System.DateTimeOffset\" data-throw-if-not-resolved=\"false\"></xref> object and the number of whole milliseconds represented by <em>milliseconds</em>.</p>\n"
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "\n<p>The resulting <xref href=\"System.DateTimeOffset\" data-throw-if-not-resolved=\"false\"></xref> value is less than <xref href=\"System.DateTimeOffset.MinValue\" data-throw-if-not-resolved=\"false\"></xref>.</p>\n<p>-or- </p>\n<p>The resulting <xref href=\"System.DateTimeOffset\" data-throw-if-not-resolved=\"false\"></xref> value is greater than <xref href=\"System.DateTimeOffset.MaxValue\" data-throw-if-not-resolved=\"false\"></xref>.</p>\n"
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  nameWithType: DateTimeOffset.AddMilliseconds(Double)
- uid: System.DateTimeOffset.AddMinutes(System.Double)
  commentId: M:System.DateTimeOffset.AddMinutes(System.Double)
  id: AddMinutes(System.Double)
  parent: System.DateTimeOffset
  langs:
  - csharp
  - vb
  name: AddMinutes(Double)
  fullName: System.DateTimeOffset.AddMinutes(System.Double)
  type: Method
  source:
    remote:
      path: src/mscorlib/src/System/DateTimeOffset.cs
      branch: master
      repo: https://github.com/dotnet/coreclr.git
    id: AddMinutes
    path: src/mscorlib/src/System/DateTimeOffset.cs
    startLine: 367
  assemblies:
  - System.Runtime
  namespace: System
  summary: "\n<p>Returns a new <xref href=\"System.DateTimeOffset\" data-throw-if-not-resolved=\"false\"></xref> object that adds a specified number of whole and fractional minutes to the value of this instance.</p>\n"
  syntax:
    content: public DateTimeOffset AddMinutes(double minutes)
    content.vb: Public Function AddMinutes(minutes As Double) As DateTimeOffset
    parameters:
    - id: minutes
      type: System.Double
      description: "\n<p>A number of whole and fractional minutes. The number can be negative or positive.   </p>\n"
    return:
      type: System.DateTimeOffset
      description: "\n<p>An object whose value is the sum of the date and time represented by the current <xref href=\"System.DateTimeOffset\" data-throw-if-not-resolved=\"false\"></xref> object and the number of minutes represented by <em>minutes</em>.</p>\n"
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "\n<p>The resulting <xref href=\"System.DateTimeOffset\" data-throw-if-not-resolved=\"false\"></xref> value is less than <xref href=\"System.DateTimeOffset.MinValue\" data-throw-if-not-resolved=\"false\"></xref>.</p>\n<p>-or- </p>\n<p>The resulting <xref href=\"System.DateTimeOffset\" data-throw-if-not-resolved=\"false\"></xref> value is greater than <xref href=\"System.DateTimeOffset.MaxValue\" data-throw-if-not-resolved=\"false\"></xref>.</p>\n"
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  nameWithType: DateTimeOffset.AddMinutes(Double)
- uid: System.DateTimeOffset.AddMonths(System.Int32)
  commentId: M:System.DateTimeOffset.AddMonths(System.Int32)
  id: AddMonths(System.Int32)
  parent: System.DateTimeOffset
  langs:
  - csharp
  - vb
  name: AddMonths(Int32)
  fullName: System.DateTimeOffset.AddMonths(System.Int32)
  type: Method
  source:
    remote:
      path: src/mscorlib/src/System/DateTimeOffset.cs
      branch: master
      repo: https://github.com/dotnet/coreclr.git
    id: AddMonths
    path: src/mscorlib/src/System/DateTimeOffset.cs
    startLine: 371
  assemblies:
  - System.Runtime
  namespace: System
  summary: "\n<p>Returns a new <xref href=\"System.DateTimeOffset\" data-throw-if-not-resolved=\"false\"></xref> object that adds a specified number of months to the value of this instance.</p>\n"
  syntax:
    content: public DateTimeOffset AddMonths(int months)
    content.vb: Public Function AddMonths(months As Integer) As DateTimeOffset
    parameters:
    - id: months
      type: System.Int32
      description: "\n<p>A number of whole months. The number can be negative or positive.</p>\n"
    return:
      type: System.DateTimeOffset
      description: "\n<p>An object whose value is the sum of the date and time represented by the current <xref href=\"System.DateTimeOffset\" data-throw-if-not-resolved=\"false\"></xref> object and the number of months represented by <em>months</em>.</p>\n"
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "\n<p>The resulting <xref href=\"System.DateTimeOffset\" data-throw-if-not-resolved=\"false\"></xref> value is less than <xref href=\"System.DateTimeOffset.MinValue\" data-throw-if-not-resolved=\"false\"></xref>.</p>\n<p>-or- </p>\n<p>The resulting <xref href=\"System.DateTimeOffset\" data-throw-if-not-resolved=\"false\"></xref> value is greater than <xref href=\"System.DateTimeOffset.MaxValue\" data-throw-if-not-resolved=\"false\"></xref>.</p>\n"
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  nameWithType: DateTimeOffset.AddMonths(Int32)
- uid: System.DateTimeOffset.AddSeconds(System.Double)
  commentId: M:System.DateTimeOffset.AddSeconds(System.Double)
  id: AddSeconds(System.Double)
  parent: System.DateTimeOffset
  langs:
  - csharp
  - vb
  name: AddSeconds(Double)
  fullName: System.DateTimeOffset.AddSeconds(System.Double)
  type: Method
  source:
    remote:
      path: src/mscorlib/src/System/DateTimeOffset.cs
      branch: master
      repo: https://github.com/dotnet/coreclr.git
    id: AddSeconds
    path: src/mscorlib/src/System/DateTimeOffset.cs
    startLine: 381
  assemblies:
  - System.Runtime
  namespace: System
  summary: "\n<p>Returns a new <xref href=\"System.DateTimeOffset\" data-throw-if-not-resolved=\"false\"></xref> object that adds a specified number of whole and fractional seconds to the value of this instance.</p>\n"
  syntax:
    content: public DateTimeOffset AddSeconds(double seconds)
    content.vb: Public Function AddSeconds(seconds As Double) As DateTimeOffset
    parameters:
    - id: seconds
      type: System.Double
      description: "\n<p>A number of whole and fractional seconds. The number can be negative or positive.</p>\n"
    return:
      type: System.DateTimeOffset
      description: "\n<p>An object whose value is the sum of the date and time represented by the current <xref href=\"System.DateTimeOffset\" data-throw-if-not-resolved=\"false\"></xref> object and the number of seconds represented by <em>seconds</em>.</p>\n"
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "\n<p>The resulting <xref href=\"System.DateTimeOffset\" data-throw-if-not-resolved=\"false\"></xref> value is less than <xref href=\"System.DateTimeOffset.MinValue\" data-throw-if-not-resolved=\"false\"></xref>.</p>\n<p>-or- </p>\n<p>The resulting <xref href=\"System.DateTimeOffset\" data-throw-if-not-resolved=\"false\"></xref> value is greater than <xref href=\"System.DateTimeOffset.MaxValue\" data-throw-if-not-resolved=\"false\"></xref>.</p>\n"
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  nameWithType: DateTimeOffset.AddSeconds(Double)
- uid: System.DateTimeOffset.AddTicks(System.Int64)
  commentId: M:System.DateTimeOffset.AddTicks(System.Int64)
  id: AddTicks(System.Int64)
  parent: System.DateTimeOffset
  langs:
  - csharp
  - vb
  name: AddTicks(Int64)
  fullName: System.DateTimeOffset.AddTicks(System.Int64)
  type: Method
  source:
    remote:
      path: src/mscorlib/src/System/DateTimeOffset.cs
      branch: master
      repo: https://github.com/dotnet/coreclr.git
    id: AddTicks
    path: src/mscorlib/src/System/DateTimeOffset.cs
    startLine: 389
  assemblies:
  - System.Runtime
  namespace: System
  summary: "\n<p>Returns a new <xref href=\"System.DateTimeOffset\" data-throw-if-not-resolved=\"false\"></xref> object that adds a specified number of ticks to the value of this instance.</p>\n"
  syntax:
    content: public DateTimeOffset AddTicks(long ticks)
    content.vb: Public Function AddTicks(ticks As Long) As DateTimeOffset
    parameters:
    - id: ticks
      type: System.Int64
      description: "\n<p>A number of 100-nanosecond ticks. The number can be negative or positive.</p>\n"
    return:
      type: System.DateTimeOffset
      description: "\n<p>An object whose value is the sum of the date and time represented by the current <xref href=\"System.DateTimeOffset\" data-throw-if-not-resolved=\"false\"></xref> object and the number of ticks represented by <em>ticks</em>.</p>\n"
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "\n<p>The resulting <xref href=\"System.DateTimeOffset\" data-throw-if-not-resolved=\"false\"></xref> value is less than <xref href=\"System.DateTimeOffset.MinValue\" data-throw-if-not-resolved=\"false\"></xref>.</p>\n<p>-or- </p>\n<p>The resulting <xref href=\"System.DateTimeOffset\" data-throw-if-not-resolved=\"false\"></xref> value is greater than <xref href=\"System.DateTimeOffset.MaxValue\" data-throw-if-not-resolved=\"false\"></xref>.</p>\n"
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  nameWithType: DateTimeOffset.AddTicks(Int64)
- uid: System.DateTimeOffset.AddYears(System.Int32)
  commentId: M:System.DateTimeOffset.AddYears(System.Int32)
  id: AddYears(System.Int32)
  parent: System.DateTimeOffset
  langs:
  - csharp
  - vb
  name: AddYears(Int32)
  fullName: System.DateTimeOffset.AddYears(System.Int32)
  type: Method
  source:
    remote:
      path: src/mscorlib/src/System/DateTimeOffset.cs
      branch: master
      repo: https://github.com/dotnet/coreclr.git
    id: AddYears
    path: src/mscorlib/src/System/DateTimeOffset.cs
    startLine: 401
  assemblies:
  - System.Runtime
  namespace: System
  summary: "\n<p>Returns a new <xref href=\"System.DateTimeOffset\" data-throw-if-not-resolved=\"false\"></xref> object that adds a specified number of years to the value of this instance.</p>\n"
  syntax:
    content: public DateTimeOffset AddYears(int years)
    content.vb: Public Function AddYears(years As Integer) As DateTimeOffset
    parameters:
    - id: years
      type: System.Int32
      description: "\n<p>A number of years. The number can be negative or positive.</p>\n"
    return:
      type: System.DateTimeOffset
      description: "\n<p>An object whose value is the sum of the date and time represented by the current <xref href=\"System.DateTimeOffset\" data-throw-if-not-resolved=\"false\"></xref> object and the number of years represented by <em>years</em>.</p>\n"
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "\n<p>The resulting <xref href=\"System.DateTimeOffset\" data-throw-if-not-resolved=\"false\"></xref> value is less than <xref href=\"System.DateTimeOffset.MinValue\" data-throw-if-not-resolved=\"false\"></xref>.</p>\n<p>-or- </p>\n<p>The resulting <xref href=\"System.DateTimeOffset\" data-throw-if-not-resolved=\"false\"></xref> value is greater than <xref href=\"System.DateTimeOffset.MaxValue\" data-throw-if-not-resolved=\"false\"></xref>.</p>\n"
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  nameWithType: DateTimeOffset.AddYears(Int32)
- uid: System.DateTimeOffset.Compare(System.DateTimeOffset,System.DateTimeOffset)
  commentId: M:System.DateTimeOffset.Compare(System.DateTimeOffset,System.DateTimeOffset)
  id: Compare(System.DateTimeOffset,System.DateTimeOffset)
  parent: System.DateTimeOffset
  langs:
  - csharp
  - vb
  name: Compare(DateTimeOffset, DateTimeOffset)
  fullName: System.DateTimeOffset.Compare(System.DateTimeOffset, System.DateTimeOffset)
  type: Method
  source:
    remote:
      path: src/mscorlib/src/System/DateTimeOffset.cs
      branch: master
      repo: https://github.com/dotnet/coreclr.git
    id: Compare
    path: src/mscorlib/src/System/DateTimeOffset.cs
    startLine: 408
  assemblies:
  - System.Runtime
  namespace: System
  summary: "\n<p>Compares two <xref href=\"System.DateTimeOffset\" data-throw-if-not-resolved=\"false\"></xref> objects and indicates whether the first is earlier than the second, equal to the second, or later than the second.</p>\n"
  syntax:
    content: public static int Compare(DateTimeOffset first, DateTimeOffset second)
    content.vb: Public Shared Function Compare(first As DateTimeOffset, second As DateTimeOffset) As Integer
    parameters:
    - id: first
      type: System.DateTimeOffset
      description: "\n<p>The first object to compare.</p>\n"
    - id: second
      type: System.DateTimeOffset
      description: "\n<p>The second object to compare.</p>\n"
    return:
      type: System.Int32
      description: "\n<p>A signed integer that indicates whether the value of the <em>first</em> parameter is earlier than, later than, or the same time as the value of the <em>second</em> parameter, as the following table shows.</p>\n<p>Return value</p>\n<p>Meaning</p>\n<table><tbody><tr><td>\n<p>Less than zero</p>\n</td><td>\n<p>\n<em>first</em> is earlier than <em>second</em>.</p>\n</td></tr><tr><td>\n<p>Zero</p>\n</td><td>\n<p>\n<em>first</em> is equal to <em>second</em>.</p>\n</td></tr><tr><td>\n<p>Greater than zero</p>\n</td><td>\n<p>\n<em>first</em> is later than <em>second</em>.</p>\n</td></tr></tbody></table>\n"
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  nameWithType: DateTimeOffset.Compare(DateTimeOffset, DateTimeOffset)
- uid: System.DateTimeOffset.CompareTo(System.DateTimeOffset)
  commentId: M:System.DateTimeOffset.CompareTo(System.DateTimeOffset)
  id: CompareTo(System.DateTimeOffset)
  parent: System.DateTimeOffset
  langs:
  - csharp
  - vb
  name: CompareTo(DateTimeOffset)
  fullName: System.DateTimeOffset.CompareTo(System.DateTimeOffset)
  type: Method
  source:
    remote:
      path: src/mscorlib/src/System/DateTimeOffset.cs
      branch: master
      repo: https://github.com/dotnet/coreclr.git
    id: CompareTo
    path: src/mscorlib/src/System/DateTimeOffset.cs
    startLine: 430
  assemblies:
  - System.Runtime
  namespace: System
  summary: "\n<p>Compares the current <xref href=\"System.DateTimeOffset\" data-throw-if-not-resolved=\"false\"></xref> object to a specified <xref href=\"System.DateTimeOffset\" data-throw-if-not-resolved=\"false\"></xref> object and indicates whether the current object is earlier than, the same as, or later than the second <xref href=\"System.DateTimeOffset\" data-throw-if-not-resolved=\"false\"></xref> object.</p>\n"
  syntax:
    content: public int CompareTo(DateTimeOffset other)
    content.vb: Public Function CompareTo(other As DateTimeOffset) As Integer
    parameters:
    - id: other
      type: System.DateTimeOffset
      description: "\n<p>An object to compare with the current <xref href=\"System.DateTimeOffset\" data-throw-if-not-resolved=\"false\"></xref> object.</p>\n"
    return:
      type: System.Int32
      description: "\n<p>A signed integer that indicates the relationship between the current <xref href=\"System.DateTimeOffset\" data-throw-if-not-resolved=\"false\"></xref> object and <em>other</em>, as the following table shows.</p>\n<p>Return Value</p>\n<p>Description</p>\n<table><tbody><tr><td>\n<p>Less than zero</p>\n</td><td>\n<p>The current <xref href=\"System.DateTimeOffset\" data-throw-if-not-resolved=\"false\"></xref> object is earlier than <em>other</em>.</p>\n</td></tr><tr><td>\n<p>Zero</p>\n</td><td>\n<p>The current <xref href=\"System.DateTimeOffset\" data-throw-if-not-resolved=\"false\"></xref> object is the same as <em>other</em>.</p>\n</td></tr><tr><td>\n<p>Greater than zero.</p>\n</td><td>\n<p>The current <xref href=\"System.DateTimeOffset\" data-throw-if-not-resolved=\"false\"></xref> object is later than <em>other</em>.</p>\n</td></tr></tbody></table>\n"
  implements:
  - System.IComparable{System.DateTimeOffset}.CompareTo(System.DateTimeOffset)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  nameWithType: DateTimeOffset.CompareTo(DateTimeOffset)
- uid: System.DateTimeOffset.Equals(System.DateTimeOffset)
  commentId: M:System.DateTimeOffset.Equals(System.DateTimeOffset)
  id: Equals(System.DateTimeOffset)
  parent: System.DateTimeOffset
  langs:
  - csharp
  - vb
  name: Equals(DateTimeOffset)
  fullName: System.DateTimeOffset.Equals(System.DateTimeOffset)
  type: Method
  source:
    remote:
      path: src/mscorlib/src/System/DateTimeOffset.cs
      branch: master
      repo: https://github.com/dotnet/coreclr.git
    id: Equals
    path: src/mscorlib/src/System/DateTimeOffset.cs
    startLine: 451
  assemblies:
  - System.Runtime
  namespace: System
  summary: "\n<p>Determines whether the current <xref href=\"System.DateTimeOffset\" data-throw-if-not-resolved=\"false\"></xref> object represents the same point in time as a specified <xref href=\"System.DateTimeOffset\" data-throw-if-not-resolved=\"false\"></xref> object.</p>\n"
  syntax:
    content: public bool Equals(DateTimeOffset other)
    content.vb: Public Function Equals(other As DateTimeOffset) As Boolean
    parameters:
    - id: other
      type: System.DateTimeOffset
      description: "\n<p>An object to compare to the current <xref href=\"System.DateTimeOffset\" data-throw-if-not-resolved=\"false\"></xref> object.   </p>\n"
    return:
      type: System.Boolean
      description: "\n<p>\n<strong>true</strong> if both <xref href=\"System.DateTimeOffset\" data-throw-if-not-resolved=\"false\"></xref> objects have the same <xref href=\"System.DateTimeOffset.UtcDateTime\" data-throw-if-not-resolved=\"false\"></xref> value; otherwise, <strong>false</strong>.</p>\n"
  seealso:
  - type: System.DateTimeOffset.EqualsExact(System.DateTimeOffset)
    commentId: M:System.DateTimeOffset.EqualsExact(System.DateTimeOffset)
  implements:
  - System.IEquatable{System.DateTimeOffset}.Equals(System.DateTimeOffset)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  nameWithType: DateTimeOffset.Equals(DateTimeOffset)
- uid: System.DateTimeOffset.Equals(System.DateTimeOffset,System.DateTimeOffset)
  commentId: M:System.DateTimeOffset.Equals(System.DateTimeOffset,System.DateTimeOffset)
  id: Equals(System.DateTimeOffset,System.DateTimeOffset)
  parent: System.DateTimeOffset
  langs:
  - csharp
  - vb
  name: Equals(DateTimeOffset, DateTimeOffset)
  fullName: System.DateTimeOffset.Equals(System.DateTimeOffset, System.DateTimeOffset)
  type: Method
  source:
    remote:
      path: src/mscorlib/src/System/DateTimeOffset.cs
      branch: master
      repo: https://github.com/dotnet/coreclr.git
    id: Equals
    path: src/mscorlib/src/System/DateTimeOffset.cs
    startLine: 469
  assemblies:
  - System.Runtime
  namespace: System
  summary: "\n<p>Determines whether two specified <xref href=\"System.DateTimeOffset\" data-throw-if-not-resolved=\"false\"></xref> objects represent the same point in time.</p>\n"
  syntax:
    content: public static bool Equals(DateTimeOffset first, DateTimeOffset second)
    content.vb: Public Shared Function Equals(first As DateTimeOffset, second As DateTimeOffset) As Boolean
    parameters:
    - id: first
      type: System.DateTimeOffset
      description: "\n<p>The first object to compare.</p>\n"
    - id: second
      type: System.DateTimeOffset
      description: "\n<p>The second object to compare.</p>\n"
    return:
      type: System.Boolean
      description: "\n<p>\n<strong>true</strong> if the two <xref href=\"System.DateTimeOffset\" data-throw-if-not-resolved=\"false\"></xref> objects have the same <xref href=\"System.DateTimeOffset.UtcDateTime\" data-throw-if-not-resolved=\"false\"></xref> value; otherwise, <strong>false</strong>.</p>\n"
  seealso:
  - type: System.DateTimeOffset.EqualsExact(System.DateTimeOffset)
    commentId: M:System.DateTimeOffset.EqualsExact(System.DateTimeOffset)
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  nameWithType: DateTimeOffset.Equals(DateTimeOffset, DateTimeOffset)
- uid: System.DateTimeOffset.Equals(System.Object)
  commentId: M:System.DateTimeOffset.Equals(System.Object)
  id: Equals(System.Object)
  parent: System.DateTimeOffset
  langs:
  - csharp
  - vb
  name: Equals(Object)
  fullName: System.DateTimeOffset.Equals(System.Object)
  type: Method
  source:
    remote:
      path: src/mscorlib/src/System/DateTimeOffset.cs
      branch: master
      repo: https://github.com/dotnet/coreclr.git
    id: Equals
    path: src/mscorlib/src/System/DateTimeOffset.cs
    startLine: 444
  assemblies:
  - System.Runtime
  namespace: System
  summary: "\n<p>Determines whether a <xref href=\"System.DateTimeOffset\" data-throw-if-not-resolved=\"false\"></xref> object represents the same point in time as a specified object.</p>\n"
  syntax:
    content: public override bool Equals(object obj)
    content.vb: Public Overrides Function Equals(obj As Object) As Boolean
    parameters:
    - id: obj
      type: System.Object
      description: "\n<p>The object to compare to the current <xref href=\"System.DateTimeOffset\" data-throw-if-not-resolved=\"false\"></xref> object.</p>\n"
    return:
      type: System.Boolean
      description: "\n<p>\n<strong>true</strong> if the <em>obj</em> parameter is a <xref href=\"System.DateTimeOffset\" data-throw-if-not-resolved=\"false\"></xref> object and represents the same point in time as the current <xref href=\"System.DateTimeOffset\" data-throw-if-not-resolved=\"false\"></xref> object; otherwise, <strong>false</strong>.</p>\n"
  overridden: System.ValueType.Equals(System.Object)
  seealso:
  - type: System.DateTimeOffset.EqualsExact(System.DateTimeOffset)
    commentId: M:System.DateTimeOffset.EqualsExact(System.DateTimeOffset)
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
  nameWithType: DateTimeOffset.Equals(Object)
- uid: System.DateTimeOffset.EqualsExact(System.DateTimeOffset)
  commentId: M:System.DateTimeOffset.EqualsExact(System.DateTimeOffset)
  id: EqualsExact(System.DateTimeOffset)
  parent: System.DateTimeOffset
  langs:
  - csharp
  - vb
  name: EqualsExact(DateTimeOffset)
  fullName: System.DateTimeOffset.EqualsExact(System.DateTimeOffset)
  type: Method
  source:
    remote:
      path: src/mscorlib/src/System/DateTimeOffset.cs
      branch: master
      repo: https://github.com/dotnet/coreclr.git
    id: EqualsExact
    path: src/mscorlib/src/System/DateTimeOffset.cs
    startLine: 455
  assemblies:
  - System.Runtime
  namespace: System
  summary: "\n<p>Determines whether the current <xref href=\"System.DateTimeOffset\" data-throw-if-not-resolved=\"false\"></xref> object represents the same time and has the same offset as a specified <xref href=\"System.DateTimeOffset\" data-throw-if-not-resolved=\"false\"></xref> object.</p>\n"
  syntax:
    content: public bool EqualsExact(DateTimeOffset other)
    content.vb: Public Function EqualsExact(other As DateTimeOffset) As Boolean
    parameters:
    - id: other
      type: System.DateTimeOffset
      description: "\n<p>The object to compare to the current <xref href=\"System.DateTimeOffset\" data-throw-if-not-resolved=\"false\"></xref> object. </p>\n"
    return:
      type: System.Boolean
      description: "\n<p>\n<strong>true</strong> if the current <xref href=\"System.DateTimeOffset\" data-throw-if-not-resolved=\"false\"></xref> object and <em>other</em> have the same date and time value and the same <xref href=\"System.DateTimeOffset.Offset\" data-throw-if-not-resolved=\"false\"></xref> value; otherwise, <strong>false</strong>.</p>\n"
  seealso:
  - type: System.DateTimeOffset.Equals(System.DateTimeOffset)
    commentId: M:System.DateTimeOffset.Equals(System.DateTimeOffset)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  nameWithType: DateTimeOffset.EqualsExact(DateTimeOffset)
- uid: System.DateTimeOffset.FromFileTime(System.Int64)
  commentId: M:System.DateTimeOffset.FromFileTime(System.Int64)
  id: FromFileTime(System.Int64)
  parent: System.DateTimeOffset
  langs:
  - csharp
  - vb
  name: FromFileTime(Int64)
  fullName: System.DateTimeOffset.FromFileTime(System.Int64)
  type: Method
  source:
    remote:
      path: src/mscorlib/src/System/DateTimeOffset.cs
      branch: master
      repo: https://github.com/dotnet/coreclr.git
    id: FromFileTime
    path: src/mscorlib/src/System/DateTimeOffset.cs
    startLine: 477
  assemblies:
  - System.Runtime
  namespace: System
  summary: "\n<p>Converts the specified Windows file time to an equivalent local time.</p>\n"
  syntax:
    content: public static DateTimeOffset FromFileTime(long fileTime)
    content.vb: Public Shared Function FromFileTime(fileTime As Long) As DateTimeOffset
    parameters:
    - id: fileTime
      type: System.Int64
      description: "\n<p>A Windows file time, expressed in ticks.</p>\n"
    return:
      type: System.DateTimeOffset
      description: "\n<p>An object that represents the date and time of <em>fileTime</em> with the offset set to the local time offset.</p>\n"
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "\n<p>\n<em>filetime</em> is less than zero.</p>\n<p>-or-</p>\n<p>\n<em>filetime</em> is greater than <strong>DateTimeOffset.MaxValue.Ticks</strong>.</p>\n"
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  nameWithType: DateTimeOffset.FromFileTime(Int64)
- uid: System.DateTimeOffset.FromUnixTimeMilliseconds(System.Int64)
  commentId: M:System.DateTimeOffset.FromUnixTimeMilliseconds(System.Int64)
  id: FromUnixTimeMilliseconds(System.Int64)
  parent: System.DateTimeOffset
  langs:
  - csharp
  - vb
  name: FromUnixTimeMilliseconds(Int64)
  fullName: System.DateTimeOffset.FromUnixTimeMilliseconds(System.Int64)
  type: Method
  source:
    remote:
      path: src/mscorlib/src/System/DateTimeOffset.cs
      branch: master
      repo: https://github.com/dotnet/coreclr.git
    id: FromUnixTimeMilliseconds
    path: src/mscorlib/src/System/DateTimeOffset.cs
    startLine: 491
  assemblies:
  - System.Runtime
  namespace: System
  summary: "\n<p>Converts a Unix time expressed as the number of milliseconds that have elapsed since 1970-01-01T00:00:00Z to a <xref href=\"System.DateTimeOffset\" data-throw-if-not-resolved=\"false\"></xref> value.</p>\n"
  syntax:
    content: public static DateTimeOffset FromUnixTimeMilliseconds(long milliseconds)
    content.vb: Public Shared Function FromUnixTimeMilliseconds(milliseconds As Long) As DateTimeOffset
    parameters:
    - id: milliseconds
      type: System.Int64
      description: "\n<p>A Unix time, expressed as the number of milliseconds that have elapsed since 1970-01-01T00:00:00Z (January 1, 1970, at 12:00 AM UTC). For Unix times before this date, its value is negative. </p>\n"
    return:
      type: System.DateTimeOffset
      description: "\n<p>A date and time value that represents the same moment in time as the Unix time. </p>\n"
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "\n<p>\n<em>milliseconds</em> is less than  -62,135,596,800,000. </p>\n<p>-or-</p>\n<p>\n<em>milliseconds</em> is greater than 253,402,300,799,999. </p>\n"
  seealso:
  - type: System.DateTimeOffset.FromUnixTimeSeconds(System.Int64)
    commentId: M:System.DateTimeOffset.FromUnixTimeSeconds(System.Int64)
  - type: System.DateTimeOffset.ToUnixTimeMilliseconds
    commentId: M:System.DateTimeOffset.ToUnixTimeMilliseconds
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  nameWithType: DateTimeOffset.FromUnixTimeMilliseconds(Int64)
- uid: System.DateTimeOffset.FromUnixTimeSeconds(System.Int64)
  commentId: M:System.DateTimeOffset.FromUnixTimeSeconds(System.Int64)
  id: FromUnixTimeSeconds(System.Int64)
  parent: System.DateTimeOffset
  langs:
  - csharp
  - vb
  name: FromUnixTimeSeconds(Int64)
  fullName: System.DateTimeOffset.FromUnixTimeSeconds(System.Int64)
  type: Method
  source:
    remote:
      path: src/mscorlib/src/System/DateTimeOffset.cs
      branch: master
      repo: https://github.com/dotnet/coreclr.git
    id: FromUnixTimeSeconds
    path: src/mscorlib/src/System/DateTimeOffset.cs
    startLine: 481
  assemblies:
  - System.Runtime
  namespace: System
  summary: "\n<p>Converts a Unix time expressed as the number of seconds that have elapsed since 1970-01-01T00:00:00Z to a <xref href=\"System.DateTimeOffset\" data-throw-if-not-resolved=\"false\"></xref> value. </p>\n"
  syntax:
    content: public static DateTimeOffset FromUnixTimeSeconds(long seconds)
    content.vb: Public Shared Function FromUnixTimeSeconds(seconds As Long) As DateTimeOffset
    parameters:
    - id: seconds
      type: System.Int64
      description: "\n<p>A Unix time, expressed as the number of seconds that have elapsed since 1970-01-01T00:00:00Z (January 1, 1970, at 12:00 AM UTC). For Unix times before this date, its value is negative. </p>\n"
    return:
      type: System.DateTimeOffset
      description: "\n<p>A date and time value that represents the same moment in time as the Unix time. </p>\n"
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "\n<p>\n<em>seconds</em> is less than  -62,135,596,800. </p>\n<p>-or-</p>\n<p>\n<em>seconds</em> is greater than 253,402,300,799. </p>\n"
  seealso:
  - type: System.DateTimeOffset.FromUnixTimeMilliseconds(System.Int64)
    commentId: M:System.DateTimeOffset.FromUnixTimeMilliseconds(System.Int64)
  - type: System.DateTimeOffset.ToUnixTimeSeconds
    commentId: M:System.DateTimeOffset.ToUnixTimeSeconds
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  nameWithType: DateTimeOffset.FromUnixTimeSeconds(Int64)
- uid: System.DateTimeOffset.GetHashCode
  commentId: M:System.DateTimeOffset.GetHashCode
  id: GetHashCode
  parent: System.DateTimeOffset
  langs:
  - csharp
  - vb
  name: GetHashCode()
  fullName: System.DateTimeOffset.GetHashCode()
  type: Method
  source:
    remote:
      path: src/mscorlib/src/System/DateTimeOffset.cs
      branch: master
      repo: https://github.com/dotnet/coreclr.git
    id: GetHashCode
    path: src/mscorlib/src/System/DateTimeOffset.cs
    startLine: 543
  assemblies:
  - System.Runtime
  namespace: System
  summary: "\n<p>Returns the hash code for the current <xref href=\"System.DateTimeOffset\" data-throw-if-not-resolved=\"false\"></xref> object.</p>\n"
  syntax:
    content: public override int GetHashCode()
    content.vb: Public Overrides Function GetHashCode As Integer
    return:
      type: System.Int32
      description: "\n<p>A 32-bit signed integer hash code.</p>\n"
  overridden: System.ValueType.GetHashCode
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
  nameWithType: DateTimeOffset.GetHashCode()
- uid: System.DateTimeOffset.op_Addition(System.DateTimeOffset,System.TimeSpan)
  commentId: M:System.DateTimeOffset.op_Addition(System.DateTimeOffset,System.TimeSpan)
  id: op_Addition(System.DateTimeOffset,System.TimeSpan)
  parent: System.DateTimeOffset
  langs:
  - csharp
  - vb
  name: Addition(DateTimeOffset, TimeSpan)
  fullName: System.DateTimeOffset.Addition(System.DateTimeOffset, System.TimeSpan)
  type: Operator
  source:
    remote:
      path: src/mscorlib/src/System/DateTimeOffset.cs
      branch: master
      repo: https://github.com/dotnet/coreclr.git
    id: op_Addition
    path: src/mscorlib/src/System/DateTimeOffset.cs
    startLine: 796
  assemblies:
  - System.Runtime
  namespace: System
  summary: "\n<p>Adds a specified time interval to a <xref href=\"System.DateTimeOffset\" data-throw-if-not-resolved=\"false\"></xref> object that has a specified date and time, and yields a <xref href=\"System.DateTimeOffset\" data-throw-if-not-resolved=\"false\"></xref> object that has new a date and time.</p>\n"
  syntax:
    content: public static DateTimeOffset operator +(DateTimeOffset dateTimeOffset, TimeSpan timeSpan)
    content.vb: Public Shared Operator +(dateTimeOffset As DateTimeOffset, timeSpan As TimeSpan) As DateTimeOffset
    parameters:
    - id: dateTimeOffset
      type: System.DateTimeOffset
      description: "\n<p>The object to add the time interval to.</p>\n"
    - id: timeSpan
      type: System.TimeSpan
      description: "\n<p>The time interval to add.</p>\n"
    return:
      type: System.DateTimeOffset
      description: "\n<p>An object whose value is the sum of the values of <em>dateTimeTz</em> and <em>timeSpan</em>.</p>\n"
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "\n<p>The resulting <xref href=\"System.DateTimeOffset\" data-throw-if-not-resolved=\"false\"></xref> value is less than <xref href=\"System.DateTimeOffset.MinValue\" data-throw-if-not-resolved=\"false\"></xref>.</p>\n<p>-or- </p>\n<p>The resulting <xref href=\"System.DateTimeOffset\" data-throw-if-not-resolved=\"false\"></xref> value is greater than <xref href=\"System.DateTimeOffset.MaxValue\" data-throw-if-not-resolved=\"false\"></xref>.</p>\n"
  seealso:
  - type: System.DateTimeOffset.Add(System.TimeSpan)
    commentId: M:System.DateTimeOffset.Add(System.TimeSpan)
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  nameWithType: DateTimeOffset.Addition(DateTimeOffset, TimeSpan)
- uid: System.DateTimeOffset.op_Equality(System.DateTimeOffset,System.DateTimeOffset)
  commentId: M:System.DateTimeOffset.op_Equality(System.DateTimeOffset,System.DateTimeOffset)
  id: op_Equality(System.DateTimeOffset,System.DateTimeOffset)
  parent: System.DateTimeOffset
  langs:
  - csharp
  - vb
  name: Equality(DateTimeOffset, DateTimeOffset)
  fullName: System.DateTimeOffset.Equality(System.DateTimeOffset, System.DateTimeOffset)
  type: Operator
  source:
    remote:
      path: src/mscorlib/src/System/DateTimeOffset.cs
      branch: master
      repo: https://github.com/dotnet/coreclr.git
    id: op_Equality
    path: src/mscorlib/src/System/DateTimeOffset.cs
    startLine: 809
  assemblies:
  - System.Runtime
  namespace: System
  summary: "\n<p>Determines whether two specified <xref href=\"System.DateTimeOffset\" data-throw-if-not-resolved=\"false\"></xref> objects represent the same point in time.</p>\n"
  syntax:
    content: public static bool operator ==(DateTimeOffset left, DateTimeOffset right)
    content.vb: Public Shared Operator =(left As DateTimeOffset, right As DateTimeOffset) As Boolean
    parameters:
    - id: left
      type: System.DateTimeOffset
      description: "\n<p>The first object to compare.</p>\n"
    - id: right
      type: System.DateTimeOffset
      description: "\n<p>The second object to compare.</p>\n"
    return:
      type: System.Boolean
      description: "\n<p>\n<strong>true</strong> if both <xref href=\"System.DateTimeOffset\" data-throw-if-not-resolved=\"false\"></xref> objects have the same <xref href=\"System.DateTimeOffset.UtcDateTime\" data-throw-if-not-resolved=\"false\"></xref> value; otherwise, <strong>false</strong>.</p>\n"
  seealso:
  - type: System.DateTimeOffset.Equals(System.DateTimeOffset)
    commentId: M:System.DateTimeOffset.Equals(System.DateTimeOffset)
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  nameWithType: DateTimeOffset.Equality(DateTimeOffset, DateTimeOffset)
- uid: System.DateTimeOffset.op_GreaterThan(System.DateTimeOffset,System.DateTimeOffset)
  commentId: M:System.DateTimeOffset.op_GreaterThan(System.DateTimeOffset,System.DateTimeOffset)
  id: op_GreaterThan(System.DateTimeOffset,System.DateTimeOffset)
  parent: System.DateTimeOffset
  langs:
  - csharp
  - vb
  name: GreaterThan(DateTimeOffset, DateTimeOffset)
  fullName: System.DateTimeOffset.GreaterThan(System.DateTimeOffset, System.DateTimeOffset)
  type: Operator
  source:
    remote:
      path: src/mscorlib/src/System/DateTimeOffset.cs
      branch: master
      repo: https://github.com/dotnet/coreclr.git
    id: op_GreaterThan
    path: src/mscorlib/src/System/DateTimeOffset.cs
    startLine: 825
  assemblies:
  - System.Runtime
  namespace: System
  summary: "\n<p>Determines whether one specified <xref href=\"System.DateTimeOffset\" data-throw-if-not-resolved=\"false\"></xref> object is greater than (or later than) a second specified <xref href=\"System.DateTimeOffset\" data-throw-if-not-resolved=\"false\"></xref> object.</p>\n"
  syntax:
    content: public static bool operator>(DateTimeOffset left, DateTimeOffset right)
    content.vb: Public Shared Operator>(left As DateTimeOffset, right As DateTimeOffset) As Boolean
    parameters:
    - id: left
      type: System.DateTimeOffset
      description: "\n<p>The first object to compare.</p>\n"
    - id: right
      type: System.DateTimeOffset
      description: "\n<p>The second object to compare.</p>\n"
    return:
      type: System.Boolean
      description: "\n<p>\n<strong>true</strong> if the <xref href=\"System.DateTimeOffset.UtcDateTime\" data-throw-if-not-resolved=\"false\"></xref> value of <em>left</em> is later than the <xref href=\"System.DateTimeOffset.UtcDateTime\" data-throw-if-not-resolved=\"false\"></xref> value of <em>right</em>; otherwise, <strong>false</strong>.</p>\n"
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  nameWithType: DateTimeOffset.GreaterThan(DateTimeOffset, DateTimeOffset)
- uid: System.DateTimeOffset.op_GreaterThanOrEqual(System.DateTimeOffset,System.DateTimeOffset)
  commentId: M:System.DateTimeOffset.op_GreaterThanOrEqual(System.DateTimeOffset,System.DateTimeOffset)
  id: op_GreaterThanOrEqual(System.DateTimeOffset,System.DateTimeOffset)
  parent: System.DateTimeOffset
  langs:
  - csharp
  - vb
  name: GreaterThanOrEqual(DateTimeOffset, DateTimeOffset)
  fullName: System.DateTimeOffset.GreaterThanOrEqual(System.DateTimeOffset, System.DateTimeOffset)
  type: Operator
  source:
    remote:
      path: src/mscorlib/src/System/DateTimeOffset.cs
      branch: master
      repo: https://github.com/dotnet/coreclr.git
    id: op_GreaterThanOrEqual
    path: src/mscorlib/src/System/DateTimeOffset.cs
    startLine: 829
  assemblies:
  - System.Runtime
  namespace: System
  summary: "\n<p>Determines whether one specified <xref href=\"System.DateTimeOffset\" data-throw-if-not-resolved=\"false\"></xref> object is greater than or equal to a second specified <xref href=\"System.DateTimeOffset\" data-throw-if-not-resolved=\"false\"></xref> object.</p>\n"
  syntax:
    content: public static bool operator >=(DateTimeOffset left, DateTimeOffset right)
    content.vb: Public Shared Operator >=(left As DateTimeOffset, right As DateTimeOffset) As Boolean
    parameters:
    - id: left
      type: System.DateTimeOffset
      description: "\n<p>The first object to compare.</p>\n"
    - id: right
      type: System.DateTimeOffset
      description: "\n<p>The second object to compare.</p>\n"
    return:
      type: System.Boolean
      description: "\n<p>\n<strong>true</strong> if the <xref href=\"System.DateTimeOffset.UtcDateTime\" data-throw-if-not-resolved=\"false\"></xref> value of <em>left</em> is the same as or later than the <xref href=\"System.DateTimeOffset.UtcDateTime\" data-throw-if-not-resolved=\"false\"></xref> value of <em>right</em>; otherwise, <strong>false</strong>.</p>\n"
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  nameWithType: DateTimeOffset.GreaterThanOrEqual(DateTimeOffset, DateTimeOffset)
- uid: System.DateTimeOffset.op_Implicit(System.DateTime)~System.DateTimeOffset
  commentId: M:System.DateTimeOffset.op_Implicit(System.DateTime)~System.DateTimeOffset
  id: op_Implicit(System.DateTime)~System.DateTimeOffset
  parent: System.DateTimeOffset
  langs:
  - csharp
  - vb
  name: Implicit(DateTime to DateTimeOffset)
  fullName: System.DateTimeOffset.Implicit(System.DateTime to System.DateTimeOffset)
  type: Operator
  source:
    remote:
      path: src/mscorlib/src/System/DateTimeOffset.cs
      branch: master
      repo: https://github.com/dotnet/coreclr.git
    id: op_Implicit
    path: src/mscorlib/src/System/DateTimeOffset.cs
    startLine: 792
  assemblies:
  - System.Runtime
  namespace: System
  summary: "\n<p>Defines an implicit conversion of a <xref href=\"System.DateTime\" data-throw-if-not-resolved=\"false\"></xref> object to a <xref href=\"System.DateTimeOffset\" data-throw-if-not-resolved=\"false\"></xref> object.</p>\n"
  syntax:
    content: public static implicit operator DateTimeOffset(DateTime dateTime)
    content.vb: Public Shared Widening Operator CType(dateTime As Date) As DateTimeOffset
    parameters:
    - id: dateTime
      type: System.DateTime
      description: "\n<p>The object to convert. </p>\n"
    return:
      type: System.DateTimeOffset
      description: "\n<p>The converted object.</p>\n"
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "\n<p>The Coordinated Universal Time (UTC) date and time that results from applying the offset is earlier than <xref href=\"System.DateTimeOffset.MinValue\" data-throw-if-not-resolved=\"false\"></xref>.</p>\n<p>-or-</p>\n<p>The UTC date and time that results from applying the offset is later than <xref href=\"System.DateTimeOffset.MaxValue\" data-throw-if-not-resolved=\"false\"></xref>.</p>\n"
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: System.DateTimeOffset.Widening(System.DateTime to System.DateTimeOffset)
  name.vb: Widening(DateTime to DateTimeOffset)
  nameWithType: DateTimeOffset.Implicit(DateTime to DateTimeOffset)
  nameWithType.vb: DateTimeOffset.Widening(DateTime to DateTimeOffset)
- uid: System.DateTimeOffset.op_Inequality(System.DateTimeOffset,System.DateTimeOffset)
  commentId: M:System.DateTimeOffset.op_Inequality(System.DateTimeOffset,System.DateTimeOffset)
  id: op_Inequality(System.DateTimeOffset,System.DateTimeOffset)
  parent: System.DateTimeOffset
  langs:
  - csharp
  - vb
  name: Inequality(DateTimeOffset, DateTimeOffset)
  fullName: System.DateTimeOffset.Inequality(System.DateTimeOffset, System.DateTimeOffset)
  type: Operator
  source:
    remote:
      path: src/mscorlib/src/System/DateTimeOffset.cs
      branch: master
      repo: https://github.com/dotnet/coreclr.git
    id: op_Inequality
    path: src/mscorlib/src/System/DateTimeOffset.cs
    startLine: 813
  assemblies:
  - System.Runtime
  namespace: System
  summary: "\n<p>Determines whether two specified <xref href=\"System.DateTimeOffset\" data-throw-if-not-resolved=\"false\"></xref> objects refer to different points in time.</p>\n"
  syntax:
    content: public static bool operator !=(DateTimeOffset left, DateTimeOffset right)
    content.vb: Public Shared Operator <>(left As DateTimeOffset, right As DateTimeOffset) As Boolean
    parameters:
    - id: left
      type: System.DateTimeOffset
      description: "\n<p>The first object to compare.</p>\n"
    - id: right
      type: System.DateTimeOffset
      description: "\n<p>The second object to compare.</p>\n"
    return:
      type: System.Boolean
      description: "\n<p>\n<strong>true</strong> if <em>left</em> and <em>right</em> do not have the same <xref href=\"System.DateTimeOffset.UtcDateTime\" data-throw-if-not-resolved=\"false\"></xref> value; otherwise, <strong>false</strong>.</p>\n"
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  nameWithType: DateTimeOffset.Inequality(DateTimeOffset, DateTimeOffset)
- uid: System.DateTimeOffset.op_LessThan(System.DateTimeOffset,System.DateTimeOffset)
  commentId: M:System.DateTimeOffset.op_LessThan(System.DateTimeOffset,System.DateTimeOffset)
  id: op_LessThan(System.DateTimeOffset,System.DateTimeOffset)
  parent: System.DateTimeOffset
  langs:
  - csharp
  - vb
  name: LessThan(DateTimeOffset, DateTimeOffset)
  fullName: System.DateTimeOffset.LessThan(System.DateTimeOffset, System.DateTimeOffset)
  type: Operator
  source:
    remote:
      path: src/mscorlib/src/System/DateTimeOffset.cs
      branch: master
      repo: https://github.com/dotnet/coreclr.git
    id: op_LessThan
    path: src/mscorlib/src/System/DateTimeOffset.cs
    startLine: 817
  assemblies:
  - System.Runtime
  namespace: System
  summary: "\n<p>Determines whether one specified <xref href=\"System.DateTimeOffset\" data-throw-if-not-resolved=\"false\"></xref> object is less than a second specified <xref href=\"System.DateTimeOffset\" data-throw-if-not-resolved=\"false\"></xref> object.</p>\n"
  syntax:
    content: public static bool operator <(DateTimeOffset left, DateTimeOffset right)
    content.vb: Public Shared Operator <(left As DateTimeOffset, right As DateTimeOffset) As Boolean
    parameters:
    - id: left
      type: System.DateTimeOffset
      description: "\n<p>The first object to compare.</p>\n"
    - id: right
      type: System.DateTimeOffset
      description: "\n<p>The second object to compare.</p>\n"
    return:
      type: System.Boolean
      description: "\n<p>\n<strong>true</strong> if the <xref href=\"System.DateTimeOffset.UtcDateTime\" data-throw-if-not-resolved=\"false\"></xref> value of <em>left</em> is earlier than the <xref href=\"System.DateTimeOffset.UtcDateTime\" data-throw-if-not-resolved=\"false\"></xref> value of <em>right</em>; otherwise, <strong>false</strong>.</p>\n"
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  nameWithType: DateTimeOffset.LessThan(DateTimeOffset, DateTimeOffset)
- uid: System.DateTimeOffset.op_LessThanOrEqual(System.DateTimeOffset,System.DateTimeOffset)
  commentId: M:System.DateTimeOffset.op_LessThanOrEqual(System.DateTimeOffset,System.DateTimeOffset)
  id: op_LessThanOrEqual(System.DateTimeOffset,System.DateTimeOffset)
  parent: System.DateTimeOffset
  langs:
  - csharp
  - vb
  name: LessThanOrEqual(DateTimeOffset, DateTimeOffset)
  fullName: System.DateTimeOffset.LessThanOrEqual(System.DateTimeOffset, System.DateTimeOffset)
  type: Operator
  source:
    remote:
      path: src/mscorlib/src/System/DateTimeOffset.cs
      branch: master
      repo: https://github.com/dotnet/coreclr.git
    id: op_LessThanOrEqual
    path: src/mscorlib/src/System/DateTimeOffset.cs
    startLine: 821
  assemblies:
  - System.Runtime
  namespace: System
  summary: "\n<p>Determines whether one specified <xref href=\"System.DateTimeOffset\" data-throw-if-not-resolved=\"false\"></xref> object is less than a second specified <xref href=\"System.DateTimeOffset\" data-throw-if-not-resolved=\"false\"></xref> object.</p>\n"
  syntax:
    content: public static bool operator <=(DateTimeOffset left, DateTimeOffset right)
    content.vb: Public Shared Operator <=(left As DateTimeOffset, right As DateTimeOffset) As Boolean
    parameters:
    - id: left
      type: System.DateTimeOffset
      description: "\n<p>The first object to compare.</p>\n"
    - id: right
      type: System.DateTimeOffset
      description: "\n<p>The second object to compare.</p>\n"
    return:
      type: System.Boolean
      description: "\n<p>\n<strong>true</strong> if the <xref href=\"System.DateTimeOffset.UtcDateTime\" data-throw-if-not-resolved=\"false\"></xref> value of <em>left</em> is earlier than the <xref href=\"System.DateTimeOffset.UtcDateTime\" data-throw-if-not-resolved=\"false\"></xref> value of <em>right</em>; otherwise, <strong>false</strong>.</p>\n"
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  nameWithType: DateTimeOffset.LessThanOrEqual(DateTimeOffset, DateTimeOffset)
- uid: System.DateTimeOffset.op_Subtraction(System.DateTimeOffset,System.DateTimeOffset)
  commentId: M:System.DateTimeOffset.op_Subtraction(System.DateTimeOffset,System.DateTimeOffset)
  id: op_Subtraction(System.DateTimeOffset,System.DateTimeOffset)
  parent: System.DateTimeOffset
  langs:
  - csharp
  - vb
  name: Subtraction(DateTimeOffset, DateTimeOffset)
  fullName: System.DateTimeOffset.Subtraction(System.DateTimeOffset, System.DateTimeOffset)
  type: Operator
  source:
    remote:
      path: src/mscorlib/src/System/DateTimeOffset.cs
      branch: master
      repo: https://github.com/dotnet/coreclr.git
    id: op_Subtraction
    path: src/mscorlib/src/System/DateTimeOffset.cs
    startLine: 805
  assemblies:
  - System.Runtime
  namespace: System
  summary: "\n<p>Subtracts one <xref href=\"System.DateTimeOffset\" data-throw-if-not-resolved=\"false\"></xref> object from another and yields a time interval.</p>\n"
  syntax:
    content: public static TimeSpan operator -(DateTimeOffset left, DateTimeOffset right)
    content.vb: Public Shared Operator -(left As DateTimeOffset, right As DateTimeOffset) As TimeSpan
    parameters:
    - id: left
      type: System.DateTimeOffset
      description: "\n<p>The minuend.   </p>\n"
    - id: right
      type: System.DateTimeOffset
      description: "\n<p>The subtrahend.</p>\n"
    return:
      type: System.TimeSpan
      description: "\n<p>An object that represents the difference between <em>left</em> and <em>right</em>.</p>\n"
  seealso:
  - type: System.DateTimeOffset.Subtract(System.DateTimeOffset)
    commentId: M:System.DateTimeOffset.Subtract(System.DateTimeOffset)
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  nameWithType: DateTimeOffset.Subtraction(DateTimeOffset, DateTimeOffset)
- uid: System.DateTimeOffset.op_Subtraction(System.DateTimeOffset,System.TimeSpan)
  commentId: M:System.DateTimeOffset.op_Subtraction(System.DateTimeOffset,System.TimeSpan)
  id: op_Subtraction(System.DateTimeOffset,System.TimeSpan)
  parent: System.DateTimeOffset
  langs:
  - csharp
  - vb
  name: Subtraction(DateTimeOffset, TimeSpan)
  fullName: System.DateTimeOffset.Subtraction(System.DateTimeOffset, System.TimeSpan)
  type: Operator
  source:
    remote:
      path: src/mscorlib/src/System/DateTimeOffset.cs
      branch: master
      repo: https://github.com/dotnet/coreclr.git
    id: op_Subtraction
    path: src/mscorlib/src/System/DateTimeOffset.cs
    startLine: 801
  assemblies:
  - System.Runtime
  namespace: System
  summary: "\n<p>Subtracts a specified time interval from a specified date and time, and yields a new date and time.</p>\n"
  syntax:
    content: public static DateTimeOffset operator -(DateTimeOffset dateTimeOffset, TimeSpan timeSpan)
    content.vb: Public Shared Operator -(dateTimeOffset As DateTimeOffset, timeSpan As TimeSpan) As DateTimeOffset
    parameters:
    - id: dateTimeOffset
      type: System.DateTimeOffset
      description: "\n<p>The date and time object to subtract from.</p>\n"
    - id: timeSpan
      type: System.TimeSpan
      description: "\n<p>The time interval to subtract.</p>\n"
    return:
      type: System.DateTimeOffset
      description: "\n<p>An object that is equal to the value of <em>dateTimeOffset</em> minus <em>timeSpan</em>.</p>\n"
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "\n<p>The resulting <xref href=\"System.DateTimeOffset\" data-throw-if-not-resolved=\"false\"></xref> value is less than <xref href=\"System.DateTimeOffset.MinValue\" data-throw-if-not-resolved=\"false\"></xref> or greater than <xref href=\"System.DateTimeOffset.MaxValue\" data-throw-if-not-resolved=\"false\"></xref>.</p>\n"
  seealso:
  - type: System.DateTimeOffset.Subtract(System.TimeSpan)
    commentId: M:System.DateTimeOffset.Subtract(System.TimeSpan)
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  nameWithType: DateTimeOffset.Subtraction(DateTimeOffset, TimeSpan)
- uid: System.DateTimeOffset.Parse(System.String)
  commentId: M:System.DateTimeOffset.Parse(System.String)
  id: Parse(System.String)
  parent: System.DateTimeOffset
  langs:
  - csharp
  - vb
  name: Parse(String)
  fullName: System.DateTimeOffset.Parse(System.String)
  type: Method
  source:
    remote:
      path: src/mscorlib/src/System/DateTimeOffset.cs
      branch: master
      repo: https://github.com/dotnet/coreclr.git
    id: Parse
    path: src/mscorlib/src/System/DateTimeOffset.cs
    startLine: 551
  assemblies:
  - System.Runtime
  namespace: System
  summary: "\n<p>Converts the specified string representation of a date, time, and offset to its <xref href=\"System.DateTimeOffset\" data-throw-if-not-resolved=\"false\"></xref> equivalent.</p>\n"
  syntax:
    content: public static DateTimeOffset Parse(string input)
    content.vb: Public Shared Function Parse(input As String) As DateTimeOffset
    parameters:
    - id: input
      type: System.String
      description: "\n<p>A string that contains a date and time to convert.</p>\n"
    return:
      type: System.DateTimeOffset
      description: "\n<p>An object that is equivalent to the date and time that is contained in <em>input</em>.</p>\n"
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "\n<p>The offset is greater than 14 hours or less than -14 hours.</p>\n"
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "\n<p>\n<em>input</em> is <strong>null</strong>.</p>\n"
  - type: System.FormatException
    commentId: T:System.FormatException
    description: "\n<p>\n<em>input</em> does not contain a valid string representation of a date and time.</p>\n<p>-or-</p>\n<p>\n<em>input</em> contains the string representation of an offset value without a date or time.</p>\n"
  seealso:
  - type: System.DateTimeOffset.TryParse(System.String,System.DateTimeOffset@)
    commentId: M:System.DateTimeOffset.TryParse(System.String,System.DateTimeOffset@)
  - type: System.DateTimeOffset.ParseExact(System.String,System.String,System.IFormatProvider)
    commentId: M:System.DateTimeOffset.ParseExact(System.String,System.String,System.IFormatProvider)
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  nameWithType: DateTimeOffset.Parse(String)
- uid: System.DateTimeOffset.Parse(System.String,System.IFormatProvider)
  commentId: M:System.DateTimeOffset.Parse(System.String,System.IFormatProvider)
  id: Parse(System.String,System.IFormatProvider)
  parent: System.DateTimeOffset
  langs:
  - csharp
  - vb
  name: Parse(String, IFormatProvider)
  fullName: System.DateTimeOffset.Parse(System.String, System.IFormatProvider)
  type: Method
  source:
    remote:
      path: src/mscorlib/src/System/DateTimeOffset.cs
      branch: master
      repo: https://github.com/dotnet/coreclr.git
    id: Parse
    path: src/mscorlib/src/System/DateTimeOffset.cs
    startLine: 564
  assemblies:
  - System.Runtime
  namespace: System
  summary: "\n<p>Converts the specified string representation of a date and time to its <xref href=\"System.DateTimeOffset\" data-throw-if-not-resolved=\"false\"></xref> equivalent using the specified culture-specific format information.</p>\n"
  syntax:
    content: public static DateTimeOffset Parse(string input, IFormatProvider formatProvider)
    content.vb: Public Shared Function Parse(input As String, formatProvider As IFormatProvider) As DateTimeOffset
    parameters:
    - id: input
      type: System.String
      description: "\n<p>A string that contains a date and time to convert.   </p>\n"
    - id: formatProvider
      type: System.IFormatProvider
      description: "\n<p>An object that provides culture-specific format information about <em>input</em>.</p>\n"
    return:
      type: System.DateTimeOffset
      description: "\n<p>An object that is equivalent to the date and time that is contained in <em>input</em>, as specified by <em>formatProvider</em>.</p>\n"
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "\n<p>The offset is greater than 14 hours or less than -14 hours.</p>\n"
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "\n<p>\n<em>input</em> is <strong>null</strong>.</p>\n"
  - type: System.FormatException
    commentId: T:System.FormatException
    description: "\n<p>\n<em>input</em> does not contain a valid string representation of a date and time.</p>\n<p>-or-</p>\n<p>\n<em>input</em> contains the string representation of an offset value without a date or time.</p>\n"
  seealso:
  - type: System.DateTimeOffset.TryParse(System.String,System.DateTimeOffset@)
    commentId: M:System.DateTimeOffset.TryParse(System.String,System.DateTimeOffset@)
  - type: System.DateTimeOffset.ParseExact(System.String,System.String,System.IFormatProvider)
    commentId: M:System.DateTimeOffset.ParseExact(System.String,System.String,System.IFormatProvider)
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  nameWithType: DateTimeOffset.Parse(String, IFormatProvider)
- uid: System.DateTimeOffset.Parse(System.String,System.IFormatProvider,System.Globalization.DateTimeStyles)
  commentId: M:System.DateTimeOffset.Parse(System.String,System.IFormatProvider,System.Globalization.DateTimeStyles)
  id: Parse(System.String,System.IFormatProvider,System.Globalization.DateTimeStyles)
  parent: System.DateTimeOffset
  langs:
  - csharp
  - vb
  name: Parse(String, IFormatProvider, DateTimeStyles)
  fullName: System.DateTimeOffset.Parse(System.String, System.IFormatProvider, System.Globalization.DateTimeStyles)
  type: Method
  source:
    remote:
      path: src/mscorlib/src/System/DateTimeOffset.cs
      branch: master
      repo: https://github.com/dotnet/coreclr.git
    id: Parse
    path: src/mscorlib/src/System/DateTimeOffset.cs
    startLine: 568
  assemblies:
  - System.Runtime
  namespace: System
  summary: "\n<p>Converts the specified string representation of a date and time to its <xref href=\"System.DateTimeOffset\" data-throw-if-not-resolved=\"false\"></xref> equivalent using the specified culture-specific format information and formatting style.</p>\n"
  syntax:
    content: public static DateTimeOffset Parse(string input, IFormatProvider formatProvider, DateTimeStyles styles)
    content.vb: Public Shared Function Parse(input As String, formatProvider As IFormatProvider, styles As DateTimeStyles) As DateTimeOffset
    parameters:
    - id: input
      type: System.String
      description: "\n<p>A string that contains a date and time to convert.   </p>\n"
    - id: formatProvider
      type: System.IFormatProvider
      description: "\n<p>An object that provides culture-specific format information about <em>input</em>.</p>\n"
    - id: styles
      type: System.Globalization.DateTimeStyles
      description: "\n<p>A bitwise combination of enumeration values that indicates the permitted format of <em>input</em>. A typical value to specify is <xref href=\"System.Globalization.DateTimeStyles.None\" data-throw-if-not-resolved=\"false\"></xref>.   </p>\n"
    return:
      type: System.DateTimeOffset
      description: "\n<p>An object that is equivalent to the date and time that is contained in <em>input</em> as specified by <em>formatProvider</em> and <em>styles</em>.</p>\n"
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "\n<p>The offset is greater than 14 hours or less than -14 hours.</p>\n<p>-or-</p>\n<p>\n<em>styles</em> is not a valid <xref href=\"System.Globalization.DateTimeStyles\" data-throw-if-not-resolved=\"false\"></xref> value.</p>\n<p>-or-</p>\n<p>\n<em>styles</em> includes an unsupported <xref href=\"System.Globalization.DateTimeStyles\" data-throw-if-not-resolved=\"false\"></xref> value.</p>\n<p>-or-</p>\n<p>\n<em>styles</em> includes <xref href=\"System.Globalization.DateTimeStyles\" data-throw-if-not-resolved=\"false\"></xref> values that cannot be used together.</p>\n"
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "\n<p>\n<em>input</em> is <strong>null</strong>.</p>\n"
  - type: System.FormatException
    commentId: T:System.FormatException
    description: "\n<p>\n<em>input</em> does not contain a valid string representation of a date and time.</p>\n<p>-or-</p>\n<p>\n<em>input</em> contains the string representation of an offset value without a date or time.</p>\n"
  seealso:
  - type: System.DateTimeOffset.TryParse(System.String,System.DateTimeOffset@)
    commentId: M:System.DateTimeOffset.TryParse(System.String,System.DateTimeOffset@)
  - type: System.DateTimeOffset.ParseExact(System.String,System.String,System.IFormatProvider)
    commentId: M:System.DateTimeOffset.ParseExact(System.String,System.String,System.IFormatProvider)
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  nameWithType: DateTimeOffset.Parse(String, IFormatProvider, DateTimeStyles)
- uid: System.DateTimeOffset.ParseExact(System.String,System.String,System.IFormatProvider)
  commentId: M:System.DateTimeOffset.ParseExact(System.String,System.String,System.IFormatProvider)
  id: ParseExact(System.String,System.String,System.IFormatProvider)
  parent: System.DateTimeOffset
  langs:
  - csharp
  - vb
  name: ParseExact(String, String, IFormatProvider)
  fullName: System.DateTimeOffset.ParseExact(System.String, System.String, System.IFormatProvider)
  type: Method
  source:
    remote:
      path: src/mscorlib/src/System/DateTimeOffset.cs
      branch: master
      repo: https://github.com/dotnet/coreclr.git
    id: ParseExact
    path: src/mscorlib/src/System/DateTimeOffset.cs
    startLine: 582
  assemblies:
  - System.Runtime
  namespace: System
  summary: "\n<p>Converts the specified string representation of a date and time to its <xref href=\"System.DateTimeOffset\" data-throw-if-not-resolved=\"false\"></xref> equivalent using the specified format and culture-specific format information. The format of the string representation must match the specified format exactly.</p>\n"
  syntax:
    content: public static DateTimeOffset ParseExact(string input, string format, IFormatProvider formatProvider)
    content.vb: Public Shared Function ParseExact(input As String, format As String, formatProvider As IFormatProvider) As DateTimeOffset
    parameters:
    - id: input
      type: System.String
      description: "\n<p>A string that contains a date and time to convert.</p>\n"
    - id: format
      type: System.String
      description: "\n<p>A format specifier that defines the expected format of <em>input</em>.</p>\n"
    - id: formatProvider
      type: System.IFormatProvider
      description: "\n<p>An object that supplies culture-specific formatting information about <em>input</em>.</p>\n"
    return:
      type: System.DateTimeOffset
      description: "\n<p>An object that is equivalent to the date and time that is contained in <em>input</em> as specified by <em>format</em> and <em>formatProvider</em>.</p>\n"
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "\n<p>The offset is greater than 14 hours or less than -14 hours.</p>\n"
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "\n<p>\n<em>input</em> is <strong>null</strong>.</p>\n<p>-or-</p>\n<p>\n<em>format</em> is <strong>null</strong>.</p>\n"
  - type: System.FormatException
    commentId: T:System.FormatException
    description: "\n<p>\n<em>input</em> is an empty string (\"\").</p>\n<p>-or-</p>\n<p>\n<em>input</em> does not contain a valid string representation of a date and time.</p>\n<p>-or-</p>\n<p>\n<em>format</em> is an empty string.</p>\n<p>-or-</p>\n<p>The hour component and the AM/PM designator in <em>input</em> do not agree.</p>\n"
  seealso:
  - type: System.DateTimeOffset.TryParseExact(System.String,System.String,System.IFormatProvider,System.Globalization.DateTimeStyles,System.DateTimeOffset@)
    commentId: M:System.DateTimeOffset.TryParseExact(System.String,System.String,System.IFormatProvider,System.Globalization.DateTimeStyles,System.DateTimeOffset@)
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  nameWithType: DateTimeOffset.ParseExact(String, String, IFormatProvider)
- uid: System.DateTimeOffset.ParseExact(System.String,System.String,System.IFormatProvider,System.Globalization.DateTimeStyles)
  commentId: M:System.DateTimeOffset.ParseExact(System.String,System.String,System.IFormatProvider,System.Globalization.DateTimeStyles)
  id: ParseExact(System.String,System.String,System.IFormatProvider,System.Globalization.DateTimeStyles)
  parent: System.DateTimeOffset
  langs:
  - csharp
  - vb
  name: ParseExact(String, String, IFormatProvider, DateTimeStyles)
  fullName: System.DateTimeOffset.ParseExact(System.String, System.String, System.IFormatProvider, System.Globalization.DateTimeStyles)
  type: Method
  source:
    remote:
      path: src/mscorlib/src/System/DateTimeOffset.cs
      branch: master
      repo: https://github.com/dotnet/coreclr.git
    id: ParseExact
    path: src/mscorlib/src/System/DateTimeOffset.cs
    startLine: 590
  assemblies:
  - System.Runtime
  namespace: System
  summary: "\n<p>Converts the specified string representation of a date and time to its <xref href=\"System.DateTimeOffset\" data-throw-if-not-resolved=\"false\"></xref> equivalent using the specified format, culture-specific format information, and style. The format of the string representation must match the specified format exactly.</p>\n"
  syntax:
    content: public static DateTimeOffset ParseExact(string input, string format, IFormatProvider formatProvider, DateTimeStyles styles)
    content.vb: Public Shared Function ParseExact(input As String, format As String, formatProvider As IFormatProvider, styles As DateTimeStyles) As DateTimeOffset
    parameters:
    - id: input
      type: System.String
      description: "\n<p>A string that contains a date and time to convert.</p>\n"
    - id: format
      type: System.String
      description: "\n<p>A format specifier that defines the expected format of <em>input</em>.</p>\n"
    - id: formatProvider
      type: System.IFormatProvider
      description: "\n<p>An object that supplies culture-specific formatting information about <em>input</em>.</p>\n"
    - id: styles
      type: System.Globalization.DateTimeStyles
      description: "\n<p>A bitwise combination of enumeration values that indicates the permitted format of <em>input</em>.</p>\n"
    return:
      type: System.DateTimeOffset
      description: "\n<p>An object that is equivalent to the date and time that is contained in the <em>input</em> parameter, as specified by the <em>format</em>, <em>formatProvider</em>, and <em>styles</em> parameters.</p>\n"
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "\n<p>The offset is greater than 14 hours or less than -14 hours.</p>\n<p>-or-</p>\n<p>The <em>styles</em> parameter includes an unsupported value.</p>\n<p>-or-</p>\n<p>The <em>styles</em> parameter contains <xref href=\"System.Globalization.DateTimeStyles\" data-throw-if-not-resolved=\"false\"></xref> values that cannot be used together.</p>\n"
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "\n<p>\n<em>input</em> is <strong>null</strong>.</p>\n<p>-or-</p>\n<p>\n<em>format</em> is <strong>null</strong>.</p>\n"
  - type: System.FormatException
    commentId: T:System.FormatException
    description: "\n<p>\n<em>input</em> is an empty string (\"\").</p>\n<p>-or-</p>\n<p>\n<em>input</em> does not contain a valid string representation of a date and time.</p>\n<p>-or-</p>\n<p>\n<em>format</em> is an empty string.</p>\n<p>-or-</p>\n<p>The hour component and the AM/PM designator in <em>input</em> do not agree. </p>\n"
  seealso:
  - type: System.DateTimeOffset.TryParseExact(System.String,System.String,System.IFormatProvider,System.Globalization.DateTimeStyles,System.DateTimeOffset@)
    commentId: M:System.DateTimeOffset.TryParseExact(System.String,System.String,System.IFormatProvider,System.Globalization.DateTimeStyles,System.DateTimeOffset@)
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  nameWithType: DateTimeOffset.ParseExact(String, String, IFormatProvider, DateTimeStyles)
- uid: System.DateTimeOffset.ParseExact(System.String,System.String[],System.IFormatProvider,System.Globalization.DateTimeStyles)
  commentId: M:System.DateTimeOffset.ParseExact(System.String,System.String[],System.IFormatProvider,System.Globalization.DateTimeStyles)
  id: ParseExact(System.String,System.String[],System.IFormatProvider,System.Globalization.DateTimeStyles)
  parent: System.DateTimeOffset
  langs:
  - csharp
  - vb
  name: ParseExact(String, String[], IFormatProvider, DateTimeStyles)
  fullName: System.DateTimeOffset.ParseExact(System.String, System.String[], System.IFormatProvider, System.Globalization.DateTimeStyles)
  type: Method
  source:
    remote:
      path: src/mscorlib/src/System/DateTimeOffset.cs
      branch: master
      repo: https://github.com/dotnet/coreclr.git
    id: ParseExact
    path: src/mscorlib/src/System/DateTimeOffset.cs
    startLine: 601
  assemblies:
  - System.Runtime
  namespace: System
  summary: "\n<p>Converts the specified string representation of a date and time to its <xref href=\"System.DateTimeOffset\" data-throw-if-not-resolved=\"false\"></xref> equivalent using the specified formats, culture-specific format information, and style. The format of the string representation must match one of the specified formats exactly.</p>\n"
  syntax:
    content: public static DateTimeOffset ParseExact(string input, string[] formats, IFormatProvider formatProvider, DateTimeStyles styles)
    content.vb: Public Shared Function ParseExact(input As String, formats As String(), formatProvider As IFormatProvider, styles As DateTimeStyles) As DateTimeOffset
    parameters:
    - id: input
      type: System.String
      description: "\n<p>A string that contains a date and time to convert.</p>\n"
    - id: formats
      type: System.String[]
      description: "\n<p>An array of format specifiers that define the expected formats of <em>input</em>.</p>\n"
    - id: formatProvider
      type: System.IFormatProvider
      description: "\n<p>An object that supplies culture-specific formatting information about <em>input</em>.</p>\n"
    - id: styles
      type: System.Globalization.DateTimeStyles
      description: "\n<p>A bitwise combination of enumeration values that indicates the permitted format of <em>input</em>.</p>\n"
    return:
      type: System.DateTimeOffset
      description: "\n<p>An object that is equivalent to the date and time that is contained in the <em>input</em> parameter, as specified by the <em>formats</em>, <em>formatProvider</em>, and <em>styles</em> parameters.</p>\n"
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "\n<p>The offset is greater than 14 hours or less than -14 hours.</p>\n<p>-or-</p>\n<p>\n<em>styles</em> includes an unsupported value.</p>\n<p>-or-</p>\n<p>The <em>styles</em> parameter contains <xref href=\"System.Globalization.DateTimeStyles\" data-throw-if-not-resolved=\"false\"></xref> values that cannot be used together.</p>\n"
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "\n<p>\n<em>input</em> is <strong>null</strong>.</p>\n"
  - type: System.FormatException
    commentId: T:System.FormatException
    description: "\n<p>\n<em>input</em> is an empty string (\"\").</p>\n<p>-or-</p>\n<p>\n<em>input</em> does not contain a valid string representation of a date and time.</p>\n<p>-or-</p>\n<p>No element of <em>formats</em> contains a valid format specifier.</p>\n<p>-or-</p>\n<p>The hour component and the AM/PM designator in <em>input</em> do not agree. </p>\n"
  seealso:
  - type: System.DateTimeOffset.TryParseExact(System.String,System.String,System.IFormatProvider,System.Globalization.DateTimeStyles,System.DateTimeOffset@)
    commentId: M:System.DateTimeOffset.TryParseExact(System.String,System.String,System.IFormatProvider,System.Globalization.DateTimeStyles,System.DateTimeOffset@)
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: System.DateTimeOffset.ParseExact(System.String, System.String(), System.IFormatProvider, System.Globalization.DateTimeStyles)
  name.vb: ParseExact(String, String(), IFormatProvider, DateTimeStyles)
  nameWithType: DateTimeOffset.ParseExact(String, String[], IFormatProvider, DateTimeStyles)
  nameWithType.vb: DateTimeOffset.ParseExact(String, String(), IFormatProvider, DateTimeStyles)
- uid: System.DateTimeOffset.Subtract(System.DateTimeOffset)
  commentId: M:System.DateTimeOffset.Subtract(System.DateTimeOffset)
  id: Subtract(System.DateTimeOffset)
  parent: System.DateTimeOffset
  langs:
  - csharp
  - vb
  name: Subtract(DateTimeOffset)
  fullName: System.DateTimeOffset.Subtract(System.DateTimeOffset)
  type: Method
  source:
    remote:
      path: src/mscorlib/src/System/DateTimeOffset.cs
      branch: master
      repo: https://github.com/dotnet/coreclr.git
    id: Subtract
    path: src/mscorlib/src/System/DateTimeOffset.cs
    startLine: 612
  assemblies:
  - System.Runtime
  namespace: System
  summary: "\n<p>Subtracts a <xref href=\"System.DateTimeOffset\" data-throw-if-not-resolved=\"false\"></xref> value that represents a specific date and time from the current <xref href=\"System.DateTimeOffset\" data-throw-if-not-resolved=\"false\"></xref> object.</p>\n"
  syntax:
    content: public TimeSpan Subtract(DateTimeOffset value)
    content.vb: Public Function Subtract(value As DateTimeOffset) As TimeSpan
    parameters:
    - id: value
      type: System.DateTimeOffset
      description: "\n<p>An object that represents the value to subtract. </p>\n"
    return:
      type: System.TimeSpan
      description: "\n<p>An object that specifies the interval between the two <xref href=\"System.DateTimeOffset\" data-throw-if-not-resolved=\"false\"></xref> objects.</p>\n"
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  nameWithType: DateTimeOffset.Subtract(DateTimeOffset)
- uid: System.DateTimeOffset.Subtract(System.TimeSpan)
  commentId: M:System.DateTimeOffset.Subtract(System.TimeSpan)
  id: Subtract(System.TimeSpan)
  parent: System.DateTimeOffset
  langs:
  - csharp
  - vb
  name: Subtract(TimeSpan)
  fullName: System.DateTimeOffset.Subtract(System.TimeSpan)
  type: Method
  source:
    remote:
      path: src/mscorlib/src/System/DateTimeOffset.cs
      branch: master
      repo: https://github.com/dotnet/coreclr.git
    id: Subtract
    path: src/mscorlib/src/System/DateTimeOffset.cs
    startLine: 616
  assemblies:
  - System.Runtime
  namespace: System
  summary: "\n<p>Subtracts a specified time interval from the current <xref href=\"System.DateTimeOffset\" data-throw-if-not-resolved=\"false\"></xref> object.</p>\n"
  syntax:
    content: public DateTimeOffset Subtract(TimeSpan value)
    content.vb: Public Function Subtract(value As TimeSpan) As DateTimeOffset
    parameters:
    - id: value
      type: System.TimeSpan
      description: "\n<p>The time interval to subtract.</p>\n"
    return:
      type: System.DateTimeOffset
      description: "\n<p>An object that is equal to the date and time represented by the current <xref href=\"System.DateTimeOffset\" data-throw-if-not-resolved=\"false\"></xref> object, minus the time interval represented by <em>value</em>.</p>\n"
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "\n<p>The resulting <xref href=\"System.DateTimeOffset\" data-throw-if-not-resolved=\"false\"></xref> value is less than <xref href=\"System.DateTimeOffset.MinValue\" data-throw-if-not-resolved=\"false\"></xref>.</p>\n<p>-or- </p>\n<p>The resulting <xref href=\"System.DateTimeOffset\" data-throw-if-not-resolved=\"false\"></xref> value is greater than <xref href=\"System.DateTimeOffset.MaxValue\" data-throw-if-not-resolved=\"false\"></xref>.</p>\n"
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  nameWithType: DateTimeOffset.Subtract(TimeSpan)
- uid: System.DateTimeOffset.System#IComparable#CompareTo(System.Object)
  commentId: M:System.DateTimeOffset.System#IComparable#CompareTo(System.Object)
  id: System#IComparable#CompareTo(System.Object)
  isEii: true
  parent: System.DateTimeOffset
  langs:
  - csharp
  - vb
  name: IComparable.CompareTo(Object)
  fullName: System.DateTimeOffset.System.IComparable.CompareTo(System.Object)
  type: Method
  source:
    remote:
      path: src/mscorlib/src/System/DateTimeOffset.cs
      branch: master
      repo: https://github.com/dotnet/coreclr.git
    id: System.IComparable.CompareTo
    path: src/mscorlib/src/System/DateTimeOffset.cs
    startLine: 417
  assemblies:
  - System.Runtime
  namespace: System
  summary: "\n<p>Compares the value of the current <xref href=\"System.DateTimeOffset\" data-throw-if-not-resolved=\"false\"></xref> object with another object of the same type.</p>\n"
  syntax:
    content: int IComparable.CompareTo(object obj)
    content.vb: Function System.IComparable.CompareTo(obj As Object) As Integer Implements IComparable.CompareTo
    parameters:
    - id: obj
      type: System.Object
      description: "\n<p>The object to compare with the current <xref href=\"System.DateTimeOffset\" data-throw-if-not-resolved=\"false\"></xref> object.</p>\n"
    return:
      type: System.Int32
      description: "\n<p>A 32-bit signed integer that indicates whether the current <xref href=\"System.DateTimeOffset\" data-throw-if-not-resolved=\"false\"></xref> object is less than, equal to, or greater than <em>obj</em>. The return values of the method are interpreted as follows:</p>\n<p>Return Value</p>\n<p>Description</p>\n<table><tbody><tr><td>\n<p>Less than zero</p>\n</td><td>\n<p>The current <xref href=\"System.DateTimeOffset\" data-throw-if-not-resolved=\"false\"></xref> object is less than (earlier than) <em>obj</em>.</p>\n</td></tr><tr><td>\n<p>Zero</p>\n</td><td>\n<p>The current <xref href=\"System.DateTimeOffset\" data-throw-if-not-resolved=\"false\"></xref> object is equal to (the same point in time as) <em>obj</em>.</p>\n</td></tr><tr><td>\n<p>Greater than zero</p>\n</td><td>\n<p>The current <xref href=\"System.DateTimeOffset\" data-throw-if-not-resolved=\"false\"></xref> object is greater than (later than) <em>obj</em>.</p>\n</td></tr></tbody></table>\n"
  implements:
  - System.IComparable.CompareTo(System.Object)
  name.vb: System.IComparable.CompareTo(Object)
  nameWithType: DateTimeOffset.IComparable.CompareTo(Object)
  nameWithType.vb: DateTimeOffset.System.IComparable.CompareTo(Object)
- uid: System.DateTimeOffset.ToFileTime
  commentId: M:System.DateTimeOffset.ToFileTime
  id: ToFileTime
  parent: System.DateTimeOffset
  langs:
  - csharp
  - vb
  name: ToFileTime()
  fullName: System.DateTimeOffset.ToFileTime()
  type: Method
  source:
    remote:
      path: src/mscorlib/src/System/DateTimeOffset.cs
      branch: master
      repo: https://github.com/dotnet/coreclr.git
    id: ToFileTime
    path: src/mscorlib/src/System/DateTimeOffset.cs
    startLine: 621
  assemblies:
  - System.Runtime
  namespace: System
  summary: "\n<p>Converts the value of the current <xref href=\"System.DateTimeOffset\" data-throw-if-not-resolved=\"false\"></xref> object to a Windows file time.</p>\n"
  syntax:
    content: public long ToFileTime()
    content.vb: Public Function ToFileTime As Long
    return:
      type: System.Int64
      description: "\n<p>The value of the current <xref href=\"System.DateTimeOffset\" data-throw-if-not-resolved=\"false\"></xref> object, expressed as a Windows file time.</p>\n"
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "\n<p>The resulting file time would represent a date and time before midnight on January 1, 1601 C.E. Coordinated Universal Time (UTC).</p>\n"
  seealso:
  - type: System.DateTimeOffset.FromFileTime(System.Int64)
    commentId: M:System.DateTimeOffset.FromFileTime(System.Int64)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  nameWithType: DateTimeOffset.ToFileTime()
- uid: System.DateTimeOffset.ToLocalTime
  commentId: M:System.DateTimeOffset.ToLocalTime
  id: ToLocalTime
  parent: System.DateTimeOffset
  langs:
  - csharp
  - vb
  name: ToLocalTime()
  fullName: System.DateTimeOffset.ToLocalTime()
  type: Method
  source:
    remote:
      path: src/mscorlib/src/System/DateTimeOffset.cs
      branch: master
      repo: https://github.com/dotnet/coreclr.git
    id: ToLocalTime
    path: src/mscorlib/src/System/DateTimeOffset.cs
    startLine: 653
  assemblies:
  - System.Runtime
  namespace: System
  summary: "\n<p>Converts the current <xref href=\"System.DateTimeOffset\" data-throw-if-not-resolved=\"false\"></xref> object to a <xref href=\"System.DateTimeOffset\" data-throw-if-not-resolved=\"false\"></xref> object that represents the local time.</p>\n"
  syntax:
    content: public DateTimeOffset ToLocalTime()
    content.vb: Public Function ToLocalTime As DateTimeOffset
    return:
      type: System.DateTimeOffset
      description: "\n<p>An object that represents the date and time of the current <xref href=\"System.DateTimeOffset\" data-throw-if-not-resolved=\"false\"></xref> object converted to local time.</p>\n"
  seealso:
  - type: System.DateTimeOffset.ToUniversalTime
    commentId: M:System.DateTimeOffset.ToUniversalTime
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  nameWithType: DateTimeOffset.ToLocalTime()
- uid: System.DateTimeOffset.ToOffset(System.TimeSpan)
  commentId: M:System.DateTimeOffset.ToOffset(System.TimeSpan)
  id: ToOffset(System.TimeSpan)
  parent: System.DateTimeOffset
  langs:
  - csharp
  - vb
  name: ToOffset(TimeSpan)
  fullName: System.DateTimeOffset.ToOffset(System.TimeSpan)
  type: Method
  source:
    remote:
      path: src/mscorlib/src/System/DateTimeOffset.cs
      branch: master
      repo: https://github.com/dotnet/coreclr.git
    id: ToOffset
    path: src/mscorlib/src/System/DateTimeOffset.cs
    startLine: 167
  assemblies:
  - System.Runtime
  namespace: System
  summary: "\n<p>Converts the value of the current <xref href=\"System.DateTimeOffset\" data-throw-if-not-resolved=\"false\"></xref> object to the date and time specified by an offset value.</p>\n"
  syntax:
    content: public DateTimeOffset ToOffset(TimeSpan offset)
    content.vb: Public Function ToOffset(offset As TimeSpan) As DateTimeOffset
    parameters:
    - id: offset
      type: System.TimeSpan
      description: "\n<p>The offset to convert the <xref href=\"System.DateTimeOffset\" data-throw-if-not-resolved=\"false\"></xref> value to.   </p>\n"
    return:
      type: System.DateTimeOffset
      description: "\n<p>An object that is equal to the original <xref href=\"System.DateTimeOffset\" data-throw-if-not-resolved=\"false\"></xref> object (that is, their <xref href=\"System.DateTimeOffset.ToUniversalTime\" data-throw-if-not-resolved=\"false\"></xref> methods return identical points in time) but whose <xref href=\"System.DateTimeOffset.Offset\" data-throw-if-not-resolved=\"false\"></xref> property is set to <em>offset</em>.</p>\n"
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "\n<p>The resulting <xref href=\"System.DateTimeOffset\" data-throw-if-not-resolved=\"false\"></xref> object has a <xref href=\"System.DateTimeOffset.DateTime\" data-throw-if-not-resolved=\"false\"></xref> value earlier than <xref href=\"System.DateTimeOffset.MinValue\" data-throw-if-not-resolved=\"false\"></xref>.</p>\n<p>-or-</p>\n<p>The resulting <xref href=\"System.DateTimeOffset\" data-throw-if-not-resolved=\"false\"></xref> object has a <xref href=\"System.DateTimeOffset.DateTime\" data-throw-if-not-resolved=\"false\"></xref> value later than <xref href=\"System.DateTimeOffset.MaxValue\" data-throw-if-not-resolved=\"false\"></xref>.</p>\n"
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "\n<p>\n<em>offset</em> is less than -14 hours.</p>\n<p>-or-</p>\n<p>\n<em>offset</em> is greater than 14 hours.</p>\n"
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  nameWithType: DateTimeOffset.ToOffset(TimeSpan)
- uid: System.DateTimeOffset.ToString
  commentId: M:System.DateTimeOffset.ToString
  id: ToString
  parent: System.DateTimeOffset
  langs:
  - csharp
  - vb
  name: ToString()
  fullName: System.DateTimeOffset.ToString()
  type: Method
  source:
    remote:
      path: src/mscorlib/src/System/DateTimeOffset.cs
      branch: master
      repo: https://github.com/dotnet/coreclr.git
    id: ToString
    path: src/mscorlib/src/System/DateTimeOffset.cs
    startLine: 662
  assemblies:
  - System.Runtime
  namespace: System
  summary: "\n<p>Converts the value of the current <xref href=\"System.DateTimeOffset\" data-throw-if-not-resolved=\"false\"></xref> object to its equivalent string representation.</p>\n"
  syntax:
    content: public override string ToString()
    content.vb: Public Overrides Function ToString As String
    return:
      type: System.String
      description: "\n<p>A string representation of a <xref href=\"System.DateTimeOffset\" data-throw-if-not-resolved=\"false\"></xref> object that includes the offset appended at the end of the string.</p>\n"
  overridden: System.ValueType.ToString
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "\n<p>The date and time is outside the range of dates supported by the calendar used by the current culture. </p>\n"
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
  nameWithType: DateTimeOffset.ToString()
- uid: System.DateTimeOffset.ToString(System.IFormatProvider)
  commentId: M:System.DateTimeOffset.ToString(System.IFormatProvider)
  id: ToString(System.IFormatProvider)
  parent: System.DateTimeOffset
  langs:
  - csharp
  - vb
  name: ToString(IFormatProvider)
  fullName: System.DateTimeOffset.ToString(System.IFormatProvider)
  type: Method
  source:
    remote:
      path: src/mscorlib/src/System/DateTimeOffset.cs
      branch: master
      repo: https://github.com/dotnet/coreclr.git
    id: ToString
    path: src/mscorlib/src/System/DateTimeOffset.cs
    startLine: 672
  assemblies:
  - System.Runtime
  namespace: System
  summary: "\n<p>Converts the value of the current <xref href=\"System.DateTimeOffset\" data-throw-if-not-resolved=\"false\"></xref> object to its equivalent string representation using the specified culture-specific formatting information.</p>\n"
  syntax:
    content: public string ToString(IFormatProvider formatProvider)
    content.vb: Public Function ToString(formatProvider As IFormatProvider) As String
    parameters:
    - id: formatProvider
      type: System.IFormatProvider
      description: "\n<p>An object that supplies culture-specific formatting information.</p>\n"
    return:
      type: System.String
      description: "\n<p>A string representation of the value of the current <xref href=\"System.DateTimeOffset\" data-throw-if-not-resolved=\"false\"></xref> object, as specified by <em>formatProvider</em>.</p>\n"
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "\n<p>The date and time is outside the range of dates supported by the calendar used by <em>formatProvider</em>. </p>\n"
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  nameWithType: DateTimeOffset.ToString(IFormatProvider)
- uid: System.DateTimeOffset.ToString(System.String)
  commentId: M:System.DateTimeOffset.ToString(System.String)
  id: ToString(System.String)
  parent: System.DateTimeOffset
  langs:
  - csharp
  - vb
  name: ToString(String)
  fullName: System.DateTimeOffset.ToString(System.String)
  type: Method
  source:
    remote:
      path: src/mscorlib/src/System/DateTimeOffset.cs
      branch: master
      repo: https://github.com/dotnet/coreclr.git
    id: ToString
    path: src/mscorlib/src/System/DateTimeOffset.cs
    startLine: 667
  assemblies:
  - System.Runtime
  namespace: System
  summary: "\n<p>Converts the value of the current <xref href=\"System.DateTimeOffset\" data-throw-if-not-resolved=\"false\"></xref> object to its equivalent string representation using the specified format.</p>\n"
  syntax:
    content: public string ToString(string format)
    content.vb: Public Function ToString(format As String) As String
    parameters:
    - id: format
      type: System.String
      description: "\n<p>A format string.</p>\n"
    return:
      type: System.String
      description: "\n<p>A string representation of the value of the current <xref href=\"System.DateTimeOffset\" data-throw-if-not-resolved=\"false\"></xref> object, as specified by <em>format</em>.</p>\n"
  exceptions:
  - type: System.FormatException
    commentId: T:System.FormatException
    description: "\n<p>The length of <em>format</em> is one, and it is not one of the standard format specifier characters defined for <xref href=\"System.Globalization.DateTimeFormatInfo\" data-throw-if-not-resolved=\"false\"></xref>. </p>\n<p>-or-</p>\n<p>\n<em>format</em> does not contain a valid custom format pattern.</p>\n"
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "\n<p>The date and time is outside the range of dates supported by the calendar used by the current culture. </p>\n"
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  nameWithType: DateTimeOffset.ToString(String)
- uid: System.DateTimeOffset.ToString(System.String,System.IFormatProvider)
  commentId: M:System.DateTimeOffset.ToString(System.String,System.IFormatProvider)
  id: ToString(System.String,System.IFormatProvider)
  parent: System.DateTimeOffset
  langs:
  - csharp
  - vb
  name: ToString(String, IFormatProvider)
  fullName: System.DateTimeOffset.ToString(System.String, System.IFormatProvider)
  type: Method
  source:
    remote:
      path: src/mscorlib/src/System/DateTimeOffset.cs
      branch: master
      repo: https://github.com/dotnet/coreclr.git
    id: ToString
    path: src/mscorlib/src/System/DateTimeOffset.cs
    startLine: 677
  assemblies:
  - System.Runtime
  namespace: System
  summary: "\n<p>Converts the value of the current <xref href=\"System.DateTimeOffset\" data-throw-if-not-resolved=\"false\"></xref> object to its equivalent string representation using the specified format and culture-specific format information.</p>\n"
  syntax:
    content: public string ToString(string format, IFormatProvider formatProvider)
    content.vb: Public Function ToString(format As String, formatProvider As IFormatProvider) As String
    parameters:
    - id: format
      type: System.String
      description: "\n<p>A format string.</p>\n"
    - id: formatProvider
      type: System.IFormatProvider
      description: "\n<p>An object that supplies culture-specific formatting information.</p>\n"
    return:
      type: System.String
      description: "\n<p>A string representation of the value of the current <xref href=\"System.DateTimeOffset\" data-throw-if-not-resolved=\"false\"></xref> object, as specified by <em>format</em> and <em>provider</em>.</p>\n"
  exceptions:
  - type: System.FormatException
    commentId: T:System.FormatException
    description: "\n<p>The length of <em>format</em> is one, and it is not one of the standard format specifier characters defined for <xref href=\"System.Globalization.DateTimeFormatInfo\" data-throw-if-not-resolved=\"false\"></xref>.</p>\n<p>-or-</p>\n<p>\n<em>format</em> does not contain a valid custom format pattern. </p>\n"
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "\n<p>The date and time is outside the range of dates supported by the calendar used by <em>formatProvider</em>. </p>\n"
  implements:
  - System.IFormattable.ToString(System.String,System.IFormatProvider)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  nameWithType: DateTimeOffset.ToString(String, IFormatProvider)
- uid: System.DateTimeOffset.ToUniversalTime
  commentId: M:System.DateTimeOffset.ToUniversalTime
  id: ToUniversalTime
  parent: System.DateTimeOffset
  langs:
  - csharp
  - vb
  name: ToUniversalTime()
  fullName: System.DateTimeOffset.ToUniversalTime()
  type: Method
  source:
    remote:
      path: src/mscorlib/src/System/DateTimeOffset.cs
      branch: master
      repo: https://github.com/dotnet/coreclr.git
    id: ToUniversalTime
    path: src/mscorlib/src/System/DateTimeOffset.cs
    startLine: 682
  assemblies:
  - System.Runtime
  namespace: System
  summary: "\n<p>Converts the current <xref href=\"System.DateTimeOffset\" data-throw-if-not-resolved=\"false\"></xref> object to a <xref href=\"System.DateTimeOffset\" data-throw-if-not-resolved=\"false\"></xref> value that represents the Coordinated Universal Time (UTC).</p>\n"
  syntax:
    content: public DateTimeOffset ToUniversalTime()
    content.vb: Public Function ToUniversalTime As DateTimeOffset
    return:
      type: System.DateTimeOffset
      description: "\n<p>An object that represents the date and time of the current <xref href=\"System.DateTimeOffset\" data-throw-if-not-resolved=\"false\"></xref> object converted to Coordinated Universal Time (UTC).</p>\n"
  seealso:
  - type: System.DateTimeOffset.ToLocalTime
    commentId: M:System.DateTimeOffset.ToLocalTime
  - type: System.DateTimeOffset.ToOffset(System.TimeSpan)
    commentId: M:System.DateTimeOffset.ToOffset(System.TimeSpan)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  nameWithType: DateTimeOffset.ToUniversalTime()
- uid: System.DateTimeOffset.ToUnixTimeMilliseconds
  commentId: M:System.DateTimeOffset.ToUnixTimeMilliseconds
  id: ToUnixTimeMilliseconds
  parent: System.DateTimeOffset
  langs:
  - csharp
  - vb
  name: ToUnixTimeMilliseconds()
  fullName: System.DateTimeOffset.ToUnixTimeMilliseconds()
  type: Method
  source:
    remote:
      path: src/mscorlib/src/System/DateTimeOffset.cs
      branch: master
      repo: https://github.com/dotnet/coreclr.git
    id: ToUnixTimeMilliseconds
    path: src/mscorlib/src/System/DateTimeOffset.cs
    startLine: 646
  assemblies:
  - System.Runtime
  namespace: System
  summary: "\n<p>Returns the number of milliseconds that have elapsed since 1970-01-01T00:00:00.000Z. </p>\n"
  syntax:
    content: public long ToUnixTimeMilliseconds()
    content.vb: Public Function ToUnixTimeMilliseconds As Long
    return:
      type: System.Int64
      description: "\n<p>The number of milliseconds that have elapsed since 1970-01-01T00:00:00.000Z. </p>\n"
  seealso:
  - type: System.DateTimeOffset.ToUnixTimeSeconds
    commentId: M:System.DateTimeOffset.ToUnixTimeSeconds
  - type: System.DateTimeOffset.FromUnixTimeMilliseconds(System.Int64)
    commentId: M:System.DateTimeOffset.FromUnixTimeMilliseconds(System.Int64)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  nameWithType: DateTimeOffset.ToUnixTimeMilliseconds()
- uid: System.DateTimeOffset.ToUnixTimeSeconds
  commentId: M:System.DateTimeOffset.ToUnixTimeSeconds
  id: ToUnixTimeSeconds
  parent: System.DateTimeOffset
  langs:
  - csharp
  - vb
  name: ToUnixTimeSeconds()
  fullName: System.DateTimeOffset.ToUnixTimeSeconds()
  type: Method
  source:
    remote:
      path: src/mscorlib/src/System/DateTimeOffset.cs
      branch: master
      repo: https://github.com/dotnet/coreclr.git
    id: ToUnixTimeSeconds
    path: src/mscorlib/src/System/DateTimeOffset.cs
    startLine: 625
  assemblies:
  - System.Runtime
  namespace: System
  summary: "\n<p>Returns the number of seconds that have elapsed since 1970-01-01T00:00:00Z. </p>\n"
  syntax:
    content: public long ToUnixTimeSeconds()
    content.vb: Public Function ToUnixTimeSeconds As Long
    return:
      type: System.Int64
      description: "\n<p>The number of seconds that have elapsed since 1970-01-01T00:00:00Z. </p>\n"
  seealso:
  - type: System.DateTimeOffset.FromUnixTimeSeconds(System.Int64)
    commentId: M:System.DateTimeOffset.FromUnixTimeSeconds(System.Int64)
  - type: System.DateTimeOffset.ToUnixTimeMilliseconds
    commentId: M:System.DateTimeOffset.ToUnixTimeMilliseconds
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  nameWithType: DateTimeOffset.ToUnixTimeSeconds()
- uid: System.DateTimeOffset.TryParse(System.String,System.DateTimeOffset@)
  commentId: M:System.DateTimeOffset.TryParse(System.String,System.DateTimeOffset@)
  id: TryParse(System.String,System.DateTimeOffset@)
  parent: System.DateTimeOffset
  langs:
  - csharp
  - vb
  name: TryParse(String, out DateTimeOffset)
  fullName: System.DateTimeOffset.TryParse(System.String, out System.DateTimeOffset)
  type: Method
  source:
    remote:
      path: src/mscorlib/src/System/DateTimeOffset.cs
      branch: master
      repo: https://github.com/dotnet/coreclr.git
    id: TryParse
    path: src/mscorlib/src/System/DateTimeOffset.cs
    startLine: 686
  assemblies:
  - System.Runtime
  namespace: System
  summary: "\n<p>Tries to converts a specified string representation of a date and time to its <xref href=\"System.DateTimeOffset\" data-throw-if-not-resolved=\"false\"></xref> equivalent, and returns a value that indicates whether the conversion succeeded.</p>\n"
  syntax:
    content: public static bool TryParse(string input, out DateTimeOffset result)
    content.vb: Public Shared Function TryParse(input As String, ByRef result As DateTimeOffset) As Boolean
    parameters:
    - id: input
      type: System.String
      description: "\n<p>A string that contains a date and time to convert.</p>\n"
    - id: result
      type: System.DateTimeOffset
      description: "\n<p>When the method returns, contains the <xref href=\"System.DateTimeOffset\" data-throw-if-not-resolved=\"false\"></xref> equivalent to the date and time of <em>input</em>, if the conversion succeeded, or <xref href=\"System.DateTimeOffset.MinValue\" data-throw-if-not-resolved=\"false\"></xref>, if the conversion failed. The conversion fails if the <em>input</em> parameter is <strong>null</strong> or does not contain a valid string representation of a date and time. This parameter is passed uninitialized.</p>\n"
    return:
      type: System.Boolean
      description: "\n<p>\n<strong>true</strong> if the <em>input</em> parameter is successfully converted; otherwise, <strong>false</strong>.</p>\n"
  seealso:
  - type: System.DateTimeOffset.Parse(System.String)
    commentId: M:System.DateTimeOffset.Parse(System.String)
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: System.DateTimeOffset.TryParse(System.String, ByRef System.DateTimeOffset)
  name.vb: TryParse(String, ByRef DateTimeOffset)
  nameWithType: DateTimeOffset.TryParse(String, out DateTimeOffset)
  nameWithType.vb: DateTimeOffset.TryParse(String, ByRef DateTimeOffset)
- uid: System.DateTimeOffset.TryParse(System.String,System.IFormatProvider,System.Globalization.DateTimeStyles,System.DateTimeOffset@)
  commentId: M:System.DateTimeOffset.TryParse(System.String,System.IFormatProvider,System.Globalization.DateTimeStyles,System.DateTimeOffset@)
  id: TryParse(System.String,System.IFormatProvider,System.Globalization.DateTimeStyles,System.DateTimeOffset@)
  parent: System.DateTimeOffset
  langs:
  - csharp
  - vb
  name: TryParse(String, IFormatProvider, DateTimeStyles, out DateTimeOffset)
  fullName: System.DateTimeOffset.TryParse(System.String, System.IFormatProvider, System.Globalization.DateTimeStyles, out System.DateTimeOffset)
  type: Method
  source:
    remote:
      path: src/mscorlib/src/System/DateTimeOffset.cs
      branch: master
      repo: https://github.com/dotnet/coreclr.git
    id: TryParse
    path: src/mscorlib/src/System/DateTimeOffset.cs
    startLine: 698
  assemblies:
  - System.Runtime
  namespace: System
  summary: "\n<p>Tries to convert a specified string representation of a date and time to its <xref href=\"System.DateTimeOffset\" data-throw-if-not-resolved=\"false\"></xref> equivalent, and returns a value that indicates whether the conversion succeeded.</p>\n"
  syntax:
    content: public static bool TryParse(string input, IFormatProvider formatProvider, DateTimeStyles styles, out DateTimeOffset result)
    content.vb: Public Shared Function TryParse(input As String, formatProvider As IFormatProvider, styles As DateTimeStyles, ByRef result As DateTimeOffset) As Boolean
    parameters:
    - id: input
      type: System.String
      description: "\n<p>A string that contains a date and time to convert.</p>\n"
    - id: formatProvider
      type: System.IFormatProvider
      description: "\n<p>An object that provides culture-specific formatting information about <em>input</em>.</p>\n"
    - id: styles
      type: System.Globalization.DateTimeStyles
      description: "\n<p>A bitwise combination of enumeration values that indicates the permitted format of <em>input</em>. </p>\n"
    - id: result
      type: System.DateTimeOffset
      description: "\n<p>When the method returns, contains the <xref href=\"System.DateTimeOffset\" data-throw-if-not-resolved=\"false\"></xref> value equivalent to the date and time of <em>input</em>, if the conversion succeeded, or <xref href=\"System.DateTimeOffset.MinValue\" data-throw-if-not-resolved=\"false\"></xref>, if the conversion failed. The conversion fails if the <em>input</em> parameter is <strong>null</strong> or does not contain a valid string representation of a date and time. This parameter is passed uninitialized.</p>\n"
    return:
      type: System.Boolean
      description: "\n<p>\n<strong>true</strong> if the <em>input</em> parameter is successfully converted; otherwise, <strong>false</strong>.</p>\n"
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "\n<p>\n<em>styles</em> includes an undefined <xref href=\"System.Globalization.DateTimeStyles\" data-throw-if-not-resolved=\"false\"></xref> value.</p>\n<p>-or-</p>\n<p>\n<xref href=\"System.Globalization.DateTimeStyles.NoCurrentDateDefault\" data-throw-if-not-resolved=\"false\"></xref>  is not supported.</p>\n<p>-or-</p>\n<p>\n<em>styles</em> includes mutually exclusive <xref href=\"System.Globalization.DateTimeStyles\" data-throw-if-not-resolved=\"false\"></xref> values.</p>\n"
  seealso:
  - type: System.DateTimeOffset.Parse(System.String)
    commentId: M:System.DateTimeOffset.Parse(System.String)
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: System.DateTimeOffset.TryParse(System.String, System.IFormatProvider, System.Globalization.DateTimeStyles, ByRef System.DateTimeOffset)
  name.vb: TryParse(String, IFormatProvider, DateTimeStyles, ByRef DateTimeOffset)
  nameWithType: DateTimeOffset.TryParse(String, IFormatProvider, DateTimeStyles, out DateTimeOffset)
  nameWithType.vb: DateTimeOffset.TryParse(String, IFormatProvider, DateTimeStyles, ByRef DateTimeOffset)
- uid: System.DateTimeOffset.TryParseExact(System.String,System.String,System.IFormatProvider,System.Globalization.DateTimeStyles,System.DateTimeOffset@)
  commentId: M:System.DateTimeOffset.TryParseExact(System.String,System.String,System.IFormatProvider,System.Globalization.DateTimeStyles,System.DateTimeOffset@)
  id: TryParseExact(System.String,System.String,System.IFormatProvider,System.Globalization.DateTimeStyles,System.DateTimeOffset@)
  parent: System.DateTimeOffset
  langs:
  - csharp
  - vb
  name: TryParseExact(String, String, IFormatProvider, DateTimeStyles, out DateTimeOffset)
  fullName: System.DateTimeOffset.TryParseExact(System.String, System.String, System.IFormatProvider, System.Globalization.DateTimeStyles, out System.DateTimeOffset)
  type: Method
  source:
    remote:
      path: src/mscorlib/src/System/DateTimeOffset.cs
      branch: master
      repo: https://github.com/dotnet/coreclr.git
    id: TryParseExact
    path: src/mscorlib/src/System/DateTimeOffset.cs
    startLine: 711
  assemblies:
  - System.Runtime
  namespace: System
  summary: "\n<p>Converts the specified string representation of a date and time to its <xref href=\"System.DateTimeOffset\" data-throw-if-not-resolved=\"false\"></xref> equivalent using the specified format, culture-specific format information, and style. The format of the string representation must match the specified format exactly.</p>\n"
  syntax:
    content: public static bool TryParseExact(string input, string format, IFormatProvider formatProvider, DateTimeStyles styles, out DateTimeOffset result)
    content.vb: Public Shared Function TryParseExact(input As String, format As String, formatProvider As IFormatProvider, styles As DateTimeStyles, ByRef result As DateTimeOffset) As Boolean
    parameters:
    - id: input
      type: System.String
      description: "\n<p>A string that contains a date and time to convert.</p>\n"
    - id: format
      type: System.String
      description: "\n<p>A format specifier that defines the required format of <em>input</em>.</p>\n"
    - id: formatProvider
      type: System.IFormatProvider
      description: "\n<p>An object that supplies culture-specific formatting information about <em>input</em>.</p>\n"
    - id: styles
      type: System.Globalization.DateTimeStyles
      description: "\n<p>A bitwise combination of enumeration values that indicates the permitted format of input. A typical value to specify is <strong>None</strong>.</p>\n"
    - id: result
      type: System.DateTimeOffset
      description: "\n<p>When the method returns, contains the <xref href=\"System.DateTimeOffset\" data-throw-if-not-resolved=\"false\"></xref> equivalent to the date and time of <em>input</em>, if the conversion succeeded, or <xref href=\"System.DateTimeOffset.MinValue\" data-throw-if-not-resolved=\"false\"></xref>, if the conversion failed. The conversion fails if the <em>input</em> parameter is <strong>null</strong>, or does not contain a valid string representation of a date and time in the expected format defined by <em>format</em> and <em>provider</em>. This parameter is passed uninitialized.</p>\n"
    return:
      type: System.Boolean
      description: "\n<p>\n<strong>true</strong> if the <em>input</em> parameter is successfully converted; otherwise, <strong>false</strong>.</p>\n"
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "\n<p>\n<em>styles</em> includes an undefined <xref href=\"System.Globalization.DateTimeStyles\" data-throw-if-not-resolved=\"false\"></xref> value.</p>\n<p>-or-</p>\n<p>\n<xref href=\"System.Globalization.DateTimeStyles.NoCurrentDateDefault\" data-throw-if-not-resolved=\"false\"></xref>  is not supported.</p>\n<p>-or-</p>\n<p>\n<em>styles</em> includes mutually exclusive <xref href=\"System.Globalization.DateTimeStyles\" data-throw-if-not-resolved=\"false\"></xref> values.</p>\n"
  seealso:
  - type: System.DateTimeOffset.ParseExact(System.String,System.String,System.IFormatProvider)
    commentId: M:System.DateTimeOffset.ParseExact(System.String,System.String,System.IFormatProvider)
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: System.DateTimeOffset.TryParseExact(System.String, System.String, System.IFormatProvider, System.Globalization.DateTimeStyles, ByRef System.DateTimeOffset)
  name.vb: TryParseExact(String, String, IFormatProvider, DateTimeStyles, ByRef DateTimeOffset)
  nameWithType: DateTimeOffset.TryParseExact(String, String, IFormatProvider, DateTimeStyles, out DateTimeOffset)
  nameWithType.vb: DateTimeOffset.TryParseExact(String, String, IFormatProvider, DateTimeStyles, ByRef DateTimeOffset)
- uid: System.DateTimeOffset.TryParseExact(System.String,System.String[],System.IFormatProvider,System.Globalization.DateTimeStyles,System.DateTimeOffset@)
  commentId: M:System.DateTimeOffset.TryParseExact(System.String,System.String[],System.IFormatProvider,System.Globalization.DateTimeStyles,System.DateTimeOffset@)
  id: TryParseExact(System.String,System.String[],System.IFormatProvider,System.Globalization.DateTimeStyles,System.DateTimeOffset@)
  parent: System.DateTimeOffset
  langs:
  - csharp
  - vb
  name: TryParseExact(String, String[], IFormatProvider, DateTimeStyles, out DateTimeOffset)
  fullName: System.DateTimeOffset.TryParseExact(System.String, System.String[], System.IFormatProvider, System.Globalization.DateTimeStyles, out System.DateTimeOffset)
  type: Method
  source:
    remote:
      path: src/mscorlib/src/System/DateTimeOffset.cs
      branch: master
      repo: https://github.com/dotnet/coreclr.git
    id: TryParseExact
    path: src/mscorlib/src/System/DateTimeOffset.cs
    startLine: 726
  assemblies:
  - System.Runtime
  namespace: System
  summary: "\n<p>Converts the specified string representation of a date and time to its <xref href=\"System.DateTimeOffset\" data-throw-if-not-resolved=\"false\"></xref> equivalent using the specified array of formats, culture-specific format information, and style. The format of the string representation must match one of the specified formats exactly.</p>\n"
  syntax:
    content: public static bool TryParseExact(string input, string[] formats, IFormatProvider formatProvider, DateTimeStyles styles, out DateTimeOffset result)
    content.vb: Public Shared Function TryParseExact(input As String, formats As String(), formatProvider As IFormatProvider, styles As DateTimeStyles, ByRef result As DateTimeOffset) As Boolean
    parameters:
    - id: input
      type: System.String
      description: "\n<p>A string that contains a date and time to convert.</p>\n"
    - id: formats
      type: System.String[]
      description: "\n<p>An array that defines the expected formats of <em>input</em>.</p>\n"
    - id: formatProvider
      type: System.IFormatProvider
      description: "\n<p>An object that supplies culture-specific formatting information about <em>input</em>.</p>\n"
    - id: styles
      type: System.Globalization.DateTimeStyles
      description: "\n<p>A bitwise combination of enumeration values that indicates the permitted format of input. A typical value to specify is <strong>None</strong>.</p>\n"
    - id: result
      type: System.DateTimeOffset
      description: "\n<p>When the method returns, contains the <xref href=\"System.DateTimeOffset\" data-throw-if-not-resolved=\"false\"></xref> equivalent to the date and time of <em>input</em>, if the conversion succeeded, or <xref href=\"System.DateTimeOffset.MinValue\" data-throw-if-not-resolved=\"false\"></xref>, if the conversion failed. The conversion fails if the <em>input</em> does not contain a valid string representation of a date and time, or does not contain the date and time in the expected format defined by <em>format</em>, or if <em>formats</em> is <strong>null</strong>. This parameter is passed uninitialized.</p>\n"
    return:
      type: System.Boolean
      description: "\n<p>\n<strong>true</strong> if the <em>input</em> parameter is successfully converted; otherwise, <strong>false</strong>.</p>\n"
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "\n<p>\n<em>styles</em> includes an undefined <xref href=\"System.Globalization.DateTimeStyles\" data-throw-if-not-resolved=\"false\"></xref> value.</p>\n<p>-or-</p>\n<p>\n<xref href=\"System.Globalization.DateTimeStyles.NoCurrentDateDefault\" data-throw-if-not-resolved=\"false\"></xref>  is not supported.</p>\n<p>-or-</p>\n<p>\n<em>styles</em> includes mutually exclusive <xref href=\"System.Globalization.DateTimeStyles\" data-throw-if-not-resolved=\"false\"></xref> values.</p>\n"
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: System.DateTimeOffset.TryParseExact(System.String, System.String(), System.IFormatProvider, System.Globalization.DateTimeStyles, ByRef System.DateTimeOffset)
  name.vb: TryParseExact(String, String(), IFormatProvider, DateTimeStyles, ByRef DateTimeOffset)
  nameWithType: DateTimeOffset.TryParseExact(String, String[], IFormatProvider, DateTimeStyles, out DateTimeOffset)
  nameWithType.vb: DateTimeOffset.TryParseExact(String, String(), IFormatProvider, DateTimeStyles, ByRef DateTimeOffset)
references:
- uid: System
  isExternal: false
  name: System
  fullName: System
  nameWithType: System
  commentId: N:System
- uid: System.IComparable
  parent: System
  isExternal: false
  name: IComparable
  fullName: System.IComparable
  nameWithType: IComparable
  commentId: T:System.IComparable
- uid: System.IComparable{System.DateTimeOffset}
  parent: System
  definition: System.IComparable`1
  name: IComparable<DateTimeOffset>
  fullName: System.IComparable<System.DateTimeOffset>
  fullname.vb: System.IComparable(Of System.DateTimeOffset)
  name.vb: IComparable(Of DateTimeOffset)
  spec.csharp:
  - uid: System.IComparable`1
    name: IComparable
    fullName: System.IComparable
  - name: <
    fullName: <
  - uid: System.DateTimeOffset
    name: DateTimeOffset
    fullName: System.DateTimeOffset
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: System.IComparable`1
    name: IComparable
    fullName: System.IComparable
  - name: '(Of '
    fullName: '(Of '
  - uid: System.DateTimeOffset
    name: DateTimeOffset
    fullName: System.DateTimeOffset
  - name: )
    fullName: )
  nameWithType: IComparable<DateTimeOffset>
  nameWithType.vb: IComparable(Of DateTimeOffset)
  commentId: T:System.IComparable{System.DateTimeOffset}
- uid: System.IEquatable{System.DateTimeOffset}
  parent: System
  definition: System.IEquatable`1
  name: IEquatable<DateTimeOffset>
  fullName: System.IEquatable<System.DateTimeOffset>
  fullname.vb: System.IEquatable(Of System.DateTimeOffset)
  name.vb: IEquatable(Of DateTimeOffset)
  spec.csharp:
  - uid: System.IEquatable`1
    name: IEquatable
    fullName: System.IEquatable
  - name: <
    fullName: <
  - uid: System.DateTimeOffset
    name: DateTimeOffset
    fullName: System.DateTimeOffset
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: System.IEquatable`1
    name: IEquatable
    fullName: System.IEquatable
  - name: '(Of '
    fullName: '(Of '
  - uid: System.DateTimeOffset
    name: DateTimeOffset
    fullName: System.DateTimeOffset
  - name: )
    fullName: )
  nameWithType: IEquatable<DateTimeOffset>
  nameWithType.vb: IEquatable(Of DateTimeOffset)
  commentId: T:System.IEquatable{System.DateTimeOffset}
- uid: System.IFormattable
  parent: System
  isExternal: false
  name: IFormattable
  fullName: System.IFormattable
  nameWithType: IFormattable
  commentId: T:System.IFormattable
- uid: System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
  nameWithType: Object.Equals(Object, Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
  nameWithType: Object.ReferenceEquals(Object, Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
- uid: System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  nameWithType: Object.GetType()
  commentId: M:System.Object.GetType
- uid: System.IComparable`1
  isExternal: false
  name: IComparable<T>
  fullName: System.IComparable<T>
  fullname.vb: System.IComparable(Of T)
  name.vb: IComparable(Of T)
  spec.csharp:
  - uid: System.IComparable`1
    name: IComparable
    fullName: System.IComparable
  - name: <
    fullName: <
  - name: T
    fullName: T
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: System.IComparable`1
    name: IComparable
    fullName: System.IComparable
  - name: '(Of '
    fullName: '(Of '
  - name: T
    fullName: T
  - name: )
    fullName: )
  nameWithType: IComparable<T>
  nameWithType.vb: IComparable(Of T)
  commentId: T:System.IComparable`1
- uid: System.IEquatable`1
  isExternal: false
  name: IEquatable<T>
  fullName: System.IEquatable<T>
  fullname.vb: System.IEquatable(Of T)
  name.vb: IEquatable(Of T)
  spec.csharp:
  - uid: System.IEquatable`1
    name: IEquatable
    fullName: System.IEquatable
  - name: <
    fullName: <
  - name: T
    fullName: T
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: System.IEquatable`1
    name: IEquatable
    fullName: System.IEquatable
  - name: '(Of '
    fullName: '(Of '
  - name: T
    fullName: T
  - name: )
    fullName: )
  nameWithType: IEquatable<T>
  nameWithType.vb: IEquatable(Of T)
  commentId: T:System.IEquatable`1
- uid: System.Object
  parent: System
  isExternal: false
  name: Object
  fullName: System.Object
  nameWithType: Object
  commentId: T:System.Object
- uid: System.DateTimeOffset
  parent: System
  isExternal: false
  name: DateTimeOffset
  fullName: System.DateTimeOffset
  nameWithType: DateTimeOffset
  commentId: T:System.DateTimeOffset
- uid: System.DateTime
  parent: System
  isExternal: false
  name: DateTime
  fullName: System.DateTime
  nameWithType: DateTime
  commentId: T:System.DateTime
- uid: System.TimeSpan
  parent: System
  isExternal: false
  name: TimeSpan
  fullName: System.TimeSpan
  nameWithType: TimeSpan
  commentId: T:System.TimeSpan
- uid: System.Int32
  parent: System
  isExternal: false
  name: Int32
  fullName: System.Int32
  nameWithType: Int32
  commentId: T:System.Int32
- uid: System.Int64
  parent: System
  isExternal: false
  name: Int64
  fullName: System.Int64
  nameWithType: Int64
  commentId: T:System.Int64
- uid: System.DayOfWeek
  parent: System
  isExternal: false
  name: DayOfWeek
  fullName: System.DayOfWeek
  nameWithType: DayOfWeek
  commentId: T:System.DayOfWeek
- uid: System.Double
  parent: System
  isExternal: false
  name: Double
  fullName: System.Double
  nameWithType: Double
  commentId: T:System.Double
- uid: System.IComparable{System.DateTimeOffset}.CompareTo(System.DateTimeOffset)
  parent: System.IComparable{System.DateTimeOffset}
  definition: System.IComparable`1.CompareTo(`0)
  name: CompareTo(DateTimeOffset)
  fullName: System.IComparable<System.DateTimeOffset>.CompareTo(System.DateTimeOffset)
  fullname.vb: System.IComparable(Of System.DateTimeOffset).CompareTo(System.DateTimeOffset)
  spec.csharp:
  - uid: System.IComparable`1.CompareTo(`0)
    name: CompareTo
    fullName: System.IComparable<System.DateTimeOffset>.CompareTo
  - name: (
    fullName: (
  - uid: System.DateTimeOffset
    name: DateTimeOffset
    fullName: System.DateTimeOffset
  - name: )
    fullName: )
  spec.vb:
  - uid: System.IComparable`1.CompareTo(`0)
    name: CompareTo
    fullName: System.IComparable(Of System.DateTimeOffset).CompareTo
  - name: (
    fullName: (
  - uid: System.DateTimeOffset
    name: DateTimeOffset
    fullName: System.DateTimeOffset
  - name: )
    fullName: )
  nameWithType: IComparable<DateTimeOffset>.CompareTo(DateTimeOffset)
  nameWithType.vb: IComparable(Of DateTimeOffset).CompareTo(DateTimeOffset)
  commentId: M:System.IComparable{System.DateTimeOffset}.CompareTo(System.DateTimeOffset)
- uid: System.IComparable`1.CompareTo(`0)
  isExternal: false
  name: CompareTo(T)
  fullName: System.IComparable<T>.CompareTo(T)
  fullname.vb: System.IComparable(Of T).CompareTo(T)
  spec.csharp:
  - uid: System.IComparable`1.CompareTo(`0)
    name: CompareTo
    fullName: System.IComparable<T>.CompareTo
  - name: (
    fullName: (
  - name: T
    fullName: T
  - name: )
    fullName: )
  spec.vb:
  - uid: System.IComparable`1.CompareTo(`0)
    name: CompareTo
    fullName: System.IComparable(Of T).CompareTo
  - name: (
    fullName: (
  - name: T
    fullName: T
  - name: )
    fullName: )
  nameWithType: IComparable<T>.CompareTo(T)
  nameWithType.vb: IComparable(Of T).CompareTo(T)
  commentId: M:System.IComparable`1.CompareTo(`0)
- uid: System.IEquatable{System.DateTimeOffset}.Equals(System.DateTimeOffset)
  parent: System.IEquatable{System.DateTimeOffset}
  definition: System.IEquatable`1.Equals(`0)
  name: Equals(DateTimeOffset)
  fullName: System.IEquatable<System.DateTimeOffset>.Equals(System.DateTimeOffset)
  fullname.vb: System.IEquatable(Of System.DateTimeOffset).Equals(System.DateTimeOffset)
  spec.csharp:
  - uid: System.IEquatable`1.Equals(`0)
    name: Equals
    fullName: System.IEquatable<System.DateTimeOffset>.Equals
  - name: (
    fullName: (
  - uid: System.DateTimeOffset
    name: DateTimeOffset
    fullName: System.DateTimeOffset
  - name: )
    fullName: )
  spec.vb:
  - uid: System.IEquatable`1.Equals(`0)
    name: Equals
    fullName: System.IEquatable(Of System.DateTimeOffset).Equals
  - name: (
    fullName: (
  - uid: System.DateTimeOffset
    name: DateTimeOffset
    fullName: System.DateTimeOffset
  - name: )
    fullName: )
  nameWithType: IEquatable<DateTimeOffset>.Equals(DateTimeOffset)
  nameWithType.vb: IEquatable(Of DateTimeOffset).Equals(DateTimeOffset)
  commentId: M:System.IEquatable{System.DateTimeOffset}.Equals(System.DateTimeOffset)
- uid: System.Boolean
  parent: System
  isExternal: false
  name: Boolean
  fullName: System.Boolean
  nameWithType: Boolean
  commentId: T:System.Boolean
- uid: System.IEquatable`1.Equals(`0)
  isExternal: false
  name: Equals(T)
  fullName: System.IEquatable<T>.Equals(T)
  fullname.vb: System.IEquatable(Of T).Equals(T)
  spec.csharp:
  - uid: System.IEquatable`1.Equals(`0)
    name: Equals
    fullName: System.IEquatable<T>.Equals
  - name: (
    fullName: (
  - name: T
    fullName: T
  - name: )
    fullName: )
  spec.vb:
  - uid: System.IEquatable`1.Equals(`0)
    name: Equals
    fullName: System.IEquatable(Of T).Equals
  - name: (
    fullName: (
  - name: T
    fullName: T
  - name: )
    fullName: )
  nameWithType: IEquatable<T>.Equals(T)
  nameWithType.vb: IEquatable(Of T).Equals(T)
  commentId: M:System.IEquatable`1.Equals(`0)
- uid: System.ValueType.Equals(System.Object)
  parent: System.ValueType
  isExternal: true
  name: Equals(Object)
  fullName: System.ValueType.Equals(System.Object)
  spec.csharp:
  - uid: System.ValueType.Equals(System.Object)
    name: Equals
    fullName: System.ValueType.Equals
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.ValueType.Equals(System.Object)
    name: Equals
    fullName: System.ValueType.Equals
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
  nameWithType: ValueType.Equals(Object)
  commentId: M:System.ValueType.Equals(System.Object)
- uid: System.ValueType
  parent: System
  isExternal: false
  name: ValueType
  fullName: System.ValueType
  nameWithType: ValueType
  commentId: T:System.ValueType
- uid: System.ValueType.GetHashCode
  parent: System.ValueType
  isExternal: false
  name: GetHashCode()
  fullName: System.ValueType.GetHashCode()
  spec.csharp:
  - uid: System.ValueType.GetHashCode
    name: GetHashCode
    fullName: System.ValueType.GetHashCode
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.ValueType.GetHashCode
    name: GetHashCode
    fullName: System.ValueType.GetHashCode
  - name: (
    fullName: (
  - name: )
    fullName: )
  nameWithType: ValueType.GetHashCode()
  commentId: M:System.ValueType.GetHashCode
- uid: System.String
  parent: System
  isExternal: false
  name: String
  fullName: System.String
  nameWithType: String
  commentId: T:System.String
- uid: System.IFormatProvider
  parent: System
  isExternal: false
  name: IFormatProvider
  fullName: System.IFormatProvider
  nameWithType: IFormatProvider
  commentId: T:System.IFormatProvider
- uid: System.Globalization.DateTimeStyles
  parent: System.Globalization
  isExternal: false
  name: DateTimeStyles
  fullName: System.Globalization.DateTimeStyles
  nameWithType: DateTimeStyles
  commentId: T:System.Globalization.DateTimeStyles
- uid: System.Globalization
  isExternal: false
  name: System.Globalization
  fullName: System.Globalization
  nameWithType: System.Globalization
  commentId: N:System.Globalization
- uid: System.String[]
  name: String[]
  fullName: System.String[]
  fullname.vb: System.String()
  name.vb: String()
  spec.csharp:
  - uid: System.String
    name: String
    fullName: System.String
    isExternal: true
  - name: '[]'
    fullName: '[]'
  spec.vb:
  - uid: System.String
    name: String
    fullName: System.String
    isExternal: true
  - name: ()
    fullName: ()
  nameWithType: String[]
  nameWithType.vb: String()
- uid: System.IComparable.CompareTo(System.Object)
  parent: System.IComparable
  isExternal: true
  name: CompareTo(Object)
  fullName: System.IComparable.CompareTo(System.Object)
  spec.csharp:
  - uid: System.IComparable.CompareTo(System.Object)
    name: CompareTo
    fullName: System.IComparable.CompareTo
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.IComparable.CompareTo(System.Object)
    name: CompareTo
    fullName: System.IComparable.CompareTo
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
  nameWithType: IComparable.CompareTo(Object)
  commentId: M:System.IComparable.CompareTo(System.Object)
- uid: System.ValueType.ToString
  parent: System.ValueType
  isExternal: false
  name: ToString()
  fullName: System.ValueType.ToString()
  spec.csharp:
  - uid: System.ValueType.ToString
    name: ToString
    fullName: System.ValueType.ToString
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.ValueType.ToString
    name: ToString
    fullName: System.ValueType.ToString
  - name: (
    fullName: (
  - name: )
    fullName: )
  nameWithType: ValueType.ToString()
  commentId: M:System.ValueType.ToString
- uid: System.IFormattable.ToString(System.String,System.IFormatProvider)
  parent: System.IFormattable
  isExternal: true
  name: ToString(String, IFormatProvider)
  fullName: System.IFormattable.ToString(System.String, System.IFormatProvider)
  spec.csharp:
  - uid: System.IFormattable.ToString(System.String,System.IFormatProvider)
    name: ToString
    fullName: System.IFormattable.ToString
  - name: (
    fullName: (
  - uid: System.String
    name: String
    fullName: System.String
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.IFormatProvider
    name: IFormatProvider
    fullName: System.IFormatProvider
  - name: )
    fullName: )
  spec.vb:
  - uid: System.IFormattable.ToString(System.String,System.IFormatProvider)
    name: ToString
    fullName: System.IFormattable.ToString
  - name: (
    fullName: (
  - uid: System.String
    name: String
    fullName: System.String
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.IFormatProvider
    name: IFormatProvider
    fullName: System.IFormatProvider
  - name: )
    fullName: )
  nameWithType: IFormattable.ToString(String, IFormatProvider)
  commentId: M:System.IFormattable.ToString(System.String,System.IFormatProvider)
- uid: System.ArgumentOutOfRangeException
  isExternal: false
  name: ArgumentOutOfRangeException
  fullName: System.ArgumentOutOfRangeException
  nameWithType: ArgumentOutOfRangeException
  commentId: T:System.ArgumentOutOfRangeException
- uid: System.ArgumentException
  parent: System
  isExternal: false
  name: ArgumentException
  fullName: System.ArgumentException
  nameWithType: ArgumentException
  commentId: T:System.ArgumentException
- uid: System.ArgumentNullException
  isExternal: false
  name: ArgumentNullException
  fullName: System.ArgumentNullException
  nameWithType: ArgumentNullException
  commentId: T:System.ArgumentNullException
- uid: System.FormatException
  parent: System
  isExternal: false
  name: FormatException
  fullName: System.FormatException
  nameWithType: FormatException
  commentId: T:System.FormatException
