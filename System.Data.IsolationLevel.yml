### YamlMime:ManagedReference
items:
- uid: System.Data.IsolationLevel
  commentId: T:System.Data.IsolationLevel
  id: IsolationLevel
  parent: System.Data
  children:
  - System.Data.IsolationLevel.Chaos
  - System.Data.IsolationLevel.ReadCommitted
  - System.Data.IsolationLevel.ReadUncommitted
  - System.Data.IsolationLevel.RepeatableRead
  - System.Data.IsolationLevel.Serializable
  - System.Data.IsolationLevel.Snapshot
  - System.Data.IsolationLevel.Unspecified
  langs:
  - csharp
  - vb
  name: IsolationLevel
  nameWithType: IsolationLevel
  fullName: System.Data.IsolationLevel
  type: Enum
  source:
    remote:
      path: src/System.Data.Common/src/System/Data/IsolationLevel.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: IsolationLevel
    path: src/System.Data.Common/src/System/Data/IsolationLevel.cs
    startLine: 10
  assemblies:
  - System.Data.Common
  namespace: System.Data
  summary: "\n<p>Specifies the transaction locking behavior for the connection.</p>\n"
  syntax:
    content: public enum IsolationLevel
    content.vb: Public Enum IsolationLevel
  modifiers.csharp:
  - public
  - enum
  modifiers.vb:
  - Public
  - Enum
- uid: System.Data.IsolationLevel.Chaos
  commentId: F:System.Data.IsolationLevel.Chaos
  id: Chaos
  parent: System.Data.IsolationLevel
  langs:
  - csharp
  - vb
  name: Chaos
  nameWithType: IsolationLevel.Chaos
  fullName: System.Data.IsolationLevel.Chaos
  type: Field
  source:
    remote:
      path: src/System.Data.Common/src/System/Data/IsolationLevel.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: Chaos
    path: src/System.Data.Common/src/System/Data/IsolationLevel.cs
    startLine: 13
  assemblies:
  - System.Data.Common
  namespace: System.Data
  summary: "\n<p>The pending changes from more highly isolated transactions cannot be overwritten.</p>\n"
  syntax:
    content: Chaos = 16
    return:
      type: System.Data.IsolationLevel
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: System.Data.IsolationLevel.ReadCommitted
  commentId: F:System.Data.IsolationLevel.ReadCommitted
  id: ReadCommitted
  parent: System.Data.IsolationLevel
  langs:
  - csharp
  - vb
  name: ReadCommitted
  nameWithType: IsolationLevel.ReadCommitted
  fullName: System.Data.IsolationLevel.ReadCommitted
  type: Field
  source:
    remote:
      path: src/System.Data.Common/src/System/Data/IsolationLevel.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: ReadCommitted
    path: src/System.Data.Common/src/System/Data/IsolationLevel.cs
    startLine: 15
  assemblies:
  - System.Data.Common
  namespace: System.Data
  summary: "\n<p>Shared locks are held while the data is being read to avoid dirty reads, but the data can be changed before the end of the transaction, resulting in non-repeatable reads or phantom data.</p>\n"
  syntax:
    content: ReadCommitted = 4096
    return:
      type: System.Data.IsolationLevel
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: System.Data.IsolationLevel.ReadUncommitted
  commentId: F:System.Data.IsolationLevel.ReadUncommitted
  id: ReadUncommitted
  parent: System.Data.IsolationLevel
  langs:
  - csharp
  - vb
  name: ReadUncommitted
  nameWithType: IsolationLevel.ReadUncommitted
  fullName: System.Data.IsolationLevel.ReadUncommitted
  type: Field
  source:
    remote:
      path: src/System.Data.Common/src/System/Data/IsolationLevel.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: ReadUncommitted
    path: src/System.Data.Common/src/System/Data/IsolationLevel.cs
    startLine: 14
  assemblies:
  - System.Data.Common
  namespace: System.Data
  summary: "\n<p>A dirty read is possible, meaning that no shared locks are issued and no exclusive locks are honored.</p>\n"
  syntax:
    content: ReadUncommitted = 256
    return:
      type: System.Data.IsolationLevel
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: System.Data.IsolationLevel.RepeatableRead
  commentId: F:System.Data.IsolationLevel.RepeatableRead
  id: RepeatableRead
  parent: System.Data.IsolationLevel
  langs:
  - csharp
  - vb
  name: RepeatableRead
  nameWithType: IsolationLevel.RepeatableRead
  fullName: System.Data.IsolationLevel.RepeatableRead
  type: Field
  source:
    remote:
      path: src/System.Data.Common/src/System/Data/IsolationLevel.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: RepeatableRead
    path: src/System.Data.Common/src/System/Data/IsolationLevel.cs
    startLine: 16
  assemblies:
  - System.Data.Common
  namespace: System.Data
  summary: "\n<p>Locks are placed on all data that is used in a query, preventing other users from updating the data. Prevents non-repeatable reads but phantom rows are still possible.</p>\n"
  syntax:
    content: RepeatableRead = 65536
    return:
      type: System.Data.IsolationLevel
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: System.Data.IsolationLevel.Serializable
  commentId: F:System.Data.IsolationLevel.Serializable
  id: Serializable
  parent: System.Data.IsolationLevel
  langs:
  - csharp
  - vb
  name: Serializable
  nameWithType: IsolationLevel.Serializable
  fullName: System.Data.IsolationLevel.Serializable
  type: Field
  source:
    remote:
      path: src/System.Data.Common/src/System/Data/IsolationLevel.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: Serializable
    path: src/System.Data.Common/src/System/Data/IsolationLevel.cs
    startLine: 17
  assemblies:
  - System.Data.Common
  namespace: System.Data
  summary: "\n<p>A range lock is placed on the <xref href=\"System.Data.DataSet\" data-throw-if-not-resolved=\"false\"></xref>, preventing other users from updating or inserting rows into the dataset until the transaction is complete.</p>\n"
  syntax:
    content: Serializable = 1048576
    return:
      type: System.Data.IsolationLevel
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: System.Data.IsolationLevel.Snapshot
  commentId: F:System.Data.IsolationLevel.Snapshot
  id: Snapshot
  parent: System.Data.IsolationLevel
  langs:
  - csharp
  - vb
  name: Snapshot
  nameWithType: IsolationLevel.Snapshot
  fullName: System.Data.IsolationLevel.Snapshot
  type: Field
  source:
    remote:
      path: src/System.Data.Common/src/System/Data/IsolationLevel.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: Snapshot
    path: src/System.Data.Common/src/System/Data/IsolationLevel.cs
    startLine: 18
  assemblies:
  - System.Data.Common
  namespace: System.Data
  summary: "\n<p>Reduces blocking by storing a version of data that one application can read while another is modifying the same data. Indicates that from one transaction you cannot see changes made in other transactions, even if you requery.</p>\n"
  syntax:
    content: Snapshot = 16777216
    return:
      type: System.Data.IsolationLevel
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: System.Data.IsolationLevel.Unspecified
  commentId: F:System.Data.IsolationLevel.Unspecified
  id: Unspecified
  parent: System.Data.IsolationLevel
  langs:
  - csharp
  - vb
  name: Unspecified
  nameWithType: IsolationLevel.Unspecified
  fullName: System.Data.IsolationLevel.Unspecified
  type: Field
  source:
    remote:
      path: src/System.Data.Common/src/System/Data/IsolationLevel.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: Unspecified
    path: src/System.Data.Common/src/System/Data/IsolationLevel.cs
    startLine: 12
  assemblies:
  - System.Data.Common
  namespace: System.Data
  summary: "\n<p>A different isolation level than the one specified is being used, but the level cannot be determined.</p>\n"
  syntax:
    content: Unspecified = -1
    return:
      type: System.Data.IsolationLevel
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
references:
- uid: System.Data
  commentId: N:System.Data
  isExternal: false
  name: System.Data
  nameWithType: System.Data
  fullName: System.Data
- uid: System.Data.IsolationLevel
  commentId: T:System.Data.IsolationLevel
  parent: System.Data
  isExternal: false
  name: IsolationLevel
  nameWithType: IsolationLevel
  fullName: System.Data.IsolationLevel
