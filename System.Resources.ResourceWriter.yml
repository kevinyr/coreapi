### YamlMime:ManagedReference
items:
- uid: System.Resources.ResourceWriter
  commentId: T:System.Resources.ResourceWriter
  id: ResourceWriter
  parent: System.Resources
  children:
  - System.Resources.ResourceWriter.#ctor(System.IO.Stream)
  - System.Resources.ResourceWriter.AddResource(System.String,System.String)
  - System.Resources.ResourceWriter.Dispose
  - System.Resources.ResourceWriter.Generate
  langs:
  - csharp
  - vb
  name: ResourceWriter
  nameWithType: ResourceWriter
  fullName: System.Resources.ResourceWriter
  type: Class
  source:
    remote:
      path: src/System.Resources.Writer/src/System/Resources/ResourceWriter.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: ResourceWriter
    path: src/System.Resources.Writer/src/System/Resources/ResourceWriter.cs
    startLine: 39
  assemblies:
  - System.Resources.Writer
  namespace: System.Resources
  summary: "\n<p>Writes resources in the system-default format to an output file or an output stream. This class cannot be inherited.</p>\n"
  syntax:
    content: 'public sealed class ResourceWriter : IDisposable'
    content.vb: >-
      Public NotInheritable Class ResourceWriter
          Implements IDisposable
  seealso:
  - linkId: System.Resources.IResourceWriter
    commentId: T:System.Resources.IResourceWriter
  - linkId: System.IDisposable
    commentId: T:System.IDisposable
  inheritance:
  - System.Object
  implements:
  - System.IDisposable
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  modifiers.csharp:
  - public
  - sealed
  - class
  modifiers.vb:
  - Public
  - NotInheritable
  - Class
- uid: System.Resources.ResourceWriter.#ctor(System.IO.Stream)
  commentId: M:System.Resources.ResourceWriter.#ctor(System.IO.Stream)
  id: '#ctor(System.IO.Stream)'
  parent: System.Resources.ResourceWriter
  langs:
  - csharp
  - vb
  name: ResourceWriter(Stream)
  nameWithType: ResourceWriter.ResourceWriter(Stream)
  fullName: System.Resources.ResourceWriter.ResourceWriter(System.IO.Stream)
  type: Constructor
  source:
    remote:
      path: src/System.Resources.Writer/src/System/Resources/ResourceWriter.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: .ctor
    path: src/System.Resources.Writer/src/System/Resources/ResourceWriter.cs
    startLine: 55
  assemblies:
  - System.Resources.Writer
  namespace: System.Resources
  summary: "\n<p>Initializes a new instance of the <xref href=\"System.Resources.ResourceWriter\" data-throw-if-not-resolved=\"false\"></xref> class that writes the resources to the provided stream.</p>\n"
  syntax:
    content: public ResourceWriter(Stream stream)
    content.vb: Public Sub New(stream As Stream)
    parameters:
    - id: stream
      type: System.IO.Stream
      description: "\n<p>The output stream. </p>\n"
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "\n<p>The <em>stream</em> parameter is not writable. </p>\n"
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "\n<p>The <em>stream</em> parameter is <strong>null</strong>. </p>\n"
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: System.Resources.ResourceWriter.AddResource(System.String,System.String)
  commentId: M:System.Resources.ResourceWriter.AddResource(System.String,System.String)
  id: AddResource(System.String,System.String)
  parent: System.Resources.ResourceWriter
  langs:
  - csharp
  - vb
  name: AddResource(String, String)
  nameWithType: ResourceWriter.AddResource(String, String)
  fullName: System.Resources.ResourceWriter.AddResource(System.String, System.String)
  type: Method
  source:
    remote:
      path: src/System.Resources.Writer/src/System/Resources/ResourceWriter.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: AddResource
    path: src/System.Resources.Writer/src/System/Resources/ResourceWriter.cs
    startLine: 70
  assemblies:
  - System.Resources.Writer
  namespace: System.Resources
  summary: "\n<p>Adds a string resource to the list of resources to be written.</p>\n"
  syntax:
    content: public void AddResource(string name, string value)
    content.vb: Public Sub AddResource(name As String, value As String)
    parameters:
    - id: name
      type: System.String
      description: "\n<p>The name of the resource. </p>\n"
    - id: value
      type: System.String
      description: "\n<p>The value of the resource. </p>\n"
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "\n<p>\n<em>name</em> (or a name that varies only by capitalization) has already been added to this ResourceWriter. </p>\n"
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "\n<p>The <em>name</em> parameter is <strong>null</strong>. </p>\n"
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "\n<p>This <xref href=\"System.Resources.ResourceWriter\" data-throw-if-not-resolved=\"false\"></xref> has been closed and its hash table is unavailable. </p>\n"
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: System.Resources.ResourceWriter.Dispose
  commentId: M:System.Resources.ResourceWriter.Dispose
  id: Dispose
  parent: System.Resources.ResourceWriter
  langs:
  - csharp
  - vb
  name: Dispose()
  nameWithType: ResourceWriter.Dispose()
  fullName: System.Resources.ResourceWriter.Dispose()
  type: Method
  source:
    remote:
      path: src/System.Resources.Writer/src/System/Resources/ResourceWriter.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: Dispose
    path: src/System.Resources.Writer/src/System/Resources/ResourceWriter.cs
    startLine: 83
  assemblies:
  - System.Resources.Writer
  namespace: System.Resources
  summary: "\n<p>Allows users to close the resource file or stream, explicitly releasing resources.</p>\n"
  syntax:
    content: public void Dispose()
    content.vb: Public Sub Dispose
  exceptions:
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: "\n<p>An I/O error has occurred. </p>\n"
  - type: System.Runtime.Serialization.SerializationException
    commentId: T:System.Runtime.Serialization.SerializationException
    description: "\n<p>An error has occurred during serialization of the object. </p>\n"
  seealso:
  - linkId: System.IDisposable
    commentId: T:System.IDisposable
  implements:
  - System.IDisposable.Dispose
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: System.Resources.ResourceWriter.Generate
  commentId: M:System.Resources.ResourceWriter.Generate
  id: Generate
  parent: System.Resources.ResourceWriter
  langs:
  - csharp
  - vb
  name: Generate()
  nameWithType: ResourceWriter.Generate()
  fullName: System.Resources.ResourceWriter.Generate()
  type: Method
  source:
    remote:
      path: src/System.Resources.Writer/src/System/Resources/ResourceWriter.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: Generate
    path: src/System.Resources.Writer/src/System/Resources/ResourceWriter.cs
    startLine: 104
  assemblies:
  - System.Resources.Writer
  namespace: System.Resources
  summary: "\n<p>Saves all resources to the output stream in the system default format.</p>\n"
  syntax:
    content: public void Generate()
    content.vb: Public Sub Generate
  exceptions:
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: "\n<p>An I/O error occurred. </p>\n"
  - type: System.Runtime.Serialization.SerializationException
    commentId: T:System.Runtime.Serialization.SerializationException
    description: "\n<p>An error occurred during serialization of the object. </p>\n"
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "\n<p>This <xref href=\"System.Resources.ResourceWriter\" data-throw-if-not-resolved=\"false\"></xref> has been closed and its hash table is unavailable. </p>\n"
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
references:
- uid: System.Resources
  commentId: N:System.Resources
  isExternal: false
  name: System.Resources
  nameWithType: System.Resources
  fullName: System.Resources
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: false
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.IDisposable
  commentId: T:System.IDisposable
  parent: System
  isExternal: false
  name: IDisposable
  nameWithType: IDisposable
  fullName: System.IDisposable
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: System.IO.Stream
  commentId: T:System.IO.Stream
  parent: System.IO
  isExternal: false
  name: Stream
  nameWithType: Stream
  fullName: System.IO.Stream
- uid: System.IO
  commentId: N:System.IO
  isExternal: false
  name: System.IO
  nameWithType: System.IO
  fullName: System.IO
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: false
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.IDisposable.Dispose
  commentId: M:System.IDisposable.Dispose
  parent: System.IDisposable
  isExternal: false
  name: Dispose()
  nameWithType: IDisposable.Dispose()
  fullName: System.IDisposable.Dispose()
  spec.csharp:
  - uid: System.IDisposable.Dispose
    name: Dispose
    nameWithType: IDisposable.Dispose
    fullName: System.IDisposable.Dispose
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.IDisposable.Dispose
    name: Dispose
    nameWithType: IDisposable.Dispose
    fullName: System.IDisposable.Dispose
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.ArgumentException
  commentId: T:System.ArgumentException
  parent: System
  isExternal: false
  name: ArgumentException
  nameWithType: ArgumentException
  fullName: System.ArgumentException
- uid: System.ArgumentNullException
  commentId: T:System.ArgumentNullException
  isExternal: false
  name: ArgumentNullException
  nameWithType: ArgumentNullException
  fullName: System.ArgumentNullException
- uid: System.InvalidOperationException
  commentId: T:System.InvalidOperationException
  parent: System
  isExternal: false
  name: InvalidOperationException
  nameWithType: InvalidOperationException
  fullName: System.InvalidOperationException
- uid: System.IO.IOException
  commentId: T:System.IO.IOException
  parent: System.IO
  isExternal: false
  name: IOException
  nameWithType: IOException
  fullName: System.IO.IOException
- uid: System.Runtime.Serialization.SerializationException
  commentId: T:System.Runtime.Serialization.SerializationException
  isExternal: false
  name: SerializationException
  nameWithType: SerializationException
  fullName: System.Runtime.Serialization.SerializationException
