### YamlMime:ManagedReference
items:
- uid: System.Runtime.InteropServices.WindowsRuntime.WindowsRuntimeMarshal
  commentId: T:System.Runtime.InteropServices.WindowsRuntime.WindowsRuntimeMarshal
  id: WindowsRuntimeMarshal
  parent: System.Runtime.InteropServices.WindowsRuntime
  children:
  - System.Runtime.InteropServices.WindowsRuntime.WindowsRuntimeMarshal.AddEventHandler``1(System.Func{``0,System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken},System.Action{System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken},``0)
  - System.Runtime.InteropServices.WindowsRuntime.WindowsRuntimeMarshal.FreeHString(System.IntPtr)
  - System.Runtime.InteropServices.WindowsRuntime.WindowsRuntimeMarshal.GetActivationFactory(System.Type)
  - System.Runtime.InteropServices.WindowsRuntime.WindowsRuntimeMarshal.PtrToStringHString(System.IntPtr)
  - System.Runtime.InteropServices.WindowsRuntime.WindowsRuntimeMarshal.RemoveAllEventHandlers(System.Action{System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken})
  - System.Runtime.InteropServices.WindowsRuntime.WindowsRuntimeMarshal.RemoveEventHandler``1(System.Action{System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken},``0)
  - System.Runtime.InteropServices.WindowsRuntime.WindowsRuntimeMarshal.StringToHString(System.String)
  langs:
  - csharp
  - vb
  name: WindowsRuntimeMarshal
  nameWithType: WindowsRuntimeMarshal
  fullName: System.Runtime.InteropServices.WindowsRuntime.WindowsRuntimeMarshal
  type: Class
  source:
    remote:
      path: src/mscorlib/src/System/Runtime/InteropServices/WindowsRuntime/WindowsRuntimeMarshal.cs
      branch: master
      repo: https://github.com/dotnet/coreclr.git
    id: WindowsRuntimeMarshal
    path: src/mscorlib/src/System/Runtime/InteropServices/WindowsRuntime/WindowsRuntimeMarshal.cs
    startLine: 18
  assemblies:
  - System.Runtime.InteropServices.WindowsRuntime
  namespace: System.Runtime.InteropServices.WindowsRuntime
  summary: "\n<p>Provides helper methods for marshaling data between the .NET Framework and the Windows Runtime.</p>\n"
  syntax:
    content: public static class WindowsRuntimeMarshal
    content.vb: Public Module WindowsRuntimeMarshal
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  modifiers.csharp:
  - public
  - static
  - class
  modifiers.vb:
  - Public
  - Module
- uid: System.Runtime.InteropServices.WindowsRuntime.WindowsRuntimeMarshal.AddEventHandler``1(System.Func{``0,System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken},System.Action{System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken},``0)
  commentId: M:System.Runtime.InteropServices.WindowsRuntime.WindowsRuntimeMarshal.AddEventHandler``1(System.Func{``0,System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken},System.Action{System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken},``0)
  id: AddEventHandler``1(System.Func{``0,System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken},System.Action{System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken},``0)
  parent: System.Runtime.InteropServices.WindowsRuntime.WindowsRuntimeMarshal
  langs:
  - csharp
  - vb
  name: AddEventHandler<T>(Func<T, EventRegistrationToken>, Action<EventRegistrationToken>, T)
  nameWithType: WindowsRuntimeMarshal.AddEventHandler<T>(Func<T, EventRegistrationToken>, Action<EventRegistrationToken>, T)
  fullName: System.Runtime.InteropServices.WindowsRuntime.WindowsRuntimeMarshal.AddEventHandler<T>(System.Func<T, System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken>, System.Action<System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken>, T)
  type: Method
  source:
    remote:
      path: src/mscorlib/src/System/Runtime/InteropServices/WindowsRuntime/WindowsRuntimeMarshal.cs
      branch: master
      repo: https://github.com/dotnet/coreclr.git
    id: AddEventHandler
    path: src/mscorlib/src/System/Runtime/InteropServices/WindowsRuntime/WindowsRuntimeMarshal.cs
    startLine: 25
  assemblies:
  - System.Runtime.InteropServices.WindowsRuntime
  namespace: System.Runtime.InteropServices.WindowsRuntime
  summary: "\n<p>Adds the specified event handler to a Windows Runtime event.</p>\n"
  syntax:
    content: >-
      [SecurityCritical]

      public static void AddEventHandler<T>(Func<T, EventRegistrationToken> addMethod, Action<EventRegistrationToken> removeMethod, T handler)
    content.vb: >-
      <SecurityCritical>

      Public Shared Sub AddEventHandler(Of T)(addMethod As Func(Of T, EventRegistrationToken), removeMethod As Action(Of EventRegistrationToken), handler As T)
    parameters:
    - id: addMethod
      type: System.Func{{T},System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken}
      description: "\n<p>A delegate that represents the method that adds event handlers to the Windows Runtime event. </p>\n"
    - id: removeMethod
      type: System.Action{System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken}
      description: "\n<p>A delegate that represents the method that removes event handlers from the Windows Runtime event.</p>\n"
    - id: handler
      type: '{T}'
      description: "\n<p>A delegate the represents the event handler that is added. </p>\n"
    typeParameters:
    - id: T
      description: "\n<p>The type of the delegate that represents the event handler. </p>\n"
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "\n<p>\n<em>addMethod</em> is <strong>null</strong>. </p>\n<p>-or-</p>\n<p>\n<em>removeMethod</em> is <strong>null</strong>.</p>\n"
  see:
  - linkId: System.Security.SecurityCriticalAttribute
    commentId: T:System.Security.SecurityCriticalAttribute
  attributes:
  - type: System.Security.SecurityCriticalAttribute
    ctor: System.Security.SecurityCriticalAttribute.#ctor
    arguments: []
  nameWithType.vb: WindowsRuntimeMarshal.AddEventHandler(Of T)(Func(Of T, EventRegistrationToken), Action(Of EventRegistrationToken), T)
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: System.Runtime.InteropServices.WindowsRuntime.WindowsRuntimeMarshal.AddEventHandler(Of T)(System.Func(Of T, System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken), System.Action(Of System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken), T)
  name.vb: AddEventHandler(Of T)(Func(Of T, EventRegistrationToken), Action(Of EventRegistrationToken), T)
- uid: System.Runtime.InteropServices.WindowsRuntime.WindowsRuntimeMarshal.FreeHString(System.IntPtr)
  commentId: M:System.Runtime.InteropServices.WindowsRuntime.WindowsRuntimeMarshal.FreeHString(System.IntPtr)
  id: FreeHString(System.IntPtr)
  parent: System.Runtime.InteropServices.WindowsRuntime.WindowsRuntimeMarshal
  langs:
  - csharp
  - vb
  name: FreeHString(IntPtr)
  nameWithType: WindowsRuntimeMarshal.FreeHString(IntPtr)
  fullName: System.Runtime.InteropServices.WindowsRuntime.WindowsRuntimeMarshal.FreeHString(System.IntPtr)
  type: Method
  source:
    remote:
      path: src/mscorlib/src/System/Runtime/InteropServices/WindowsRuntime/WindowsRuntimeMarshal.cs
      branch: master
      repo: https://github.com/dotnet/coreclr.git
    id: FreeHString
    path: src/mscorlib/src/System/Runtime/InteropServices/WindowsRuntime/WindowsRuntimeMarshal.cs
    startLine: 1322
  assemblies:
  - System.Runtime.InteropServices.WindowsRuntime
  namespace: System.Runtime.InteropServices.WindowsRuntime
  summary: "\n<p>Frees the specified Windows Runtime<a href=\"http://go.microsoft.com/fwlink/p/?LinkId=246451\">HSTRING</a>. </p>\n"
  syntax:
    content: >-
      [SecurityCritical]

      public static void FreeHString(IntPtr ptr)
    content.vb: >-
      <SecurityCritical>

      Public Shared Sub FreeHString(ptr As IntPtr)
    parameters:
    - id: ptr
      type: System.IntPtr
      description: "\n<p>The address of the <a href=\"http://go.microsoft.com/fwlink/p/?LinkId=246451\">HSTRING</a> to free.</p>\n"
  exceptions:
  - type: System.PlatformNotSupportedException
    commentId: T:System.PlatformNotSupportedException
    description: "\n<p>The Windows Runtime is not supported on the current version of the operating system. </p>\n"
  seealso:
  - linkId: System.Runtime.InteropServices.WindowsRuntime.WindowsRuntimeMarshal.StringToHString(System.String)
    commentId: M:System.Runtime.InteropServices.WindowsRuntime.WindowsRuntimeMarshal.StringToHString(System.String)
  see:
  - linkId: System.Security.SecurityCriticalAttribute
    commentId: T:System.Security.SecurityCriticalAttribute
  attributes:
  - type: System.Security.SecurityCriticalAttribute
    ctor: System.Security.SecurityCriticalAttribute.#ctor
    arguments: []
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: System.Runtime.InteropServices.WindowsRuntime.WindowsRuntimeMarshal.GetActivationFactory(System.Type)
  commentId: M:System.Runtime.InteropServices.WindowsRuntime.WindowsRuntimeMarshal.GetActivationFactory(System.Type)
  id: GetActivationFactory(System.Type)
  parent: System.Runtime.InteropServices.WindowsRuntime.WindowsRuntimeMarshal
  langs:
  - csharp
  - vb
  name: GetActivationFactory(Type)
  nameWithType: WindowsRuntimeMarshal.GetActivationFactory(Type)
  fullName: System.Runtime.InteropServices.WindowsRuntime.WindowsRuntimeMarshal.GetActivationFactory(System.Type)
  type: Method
  source:
    remote:
      path: src/mscorlib/src/System/Runtime/InteropServices/WindowsRuntime/WindowsRuntimeMarshal.cs
      branch: master
      repo: https://github.com/dotnet/coreclr.git
    id: GetActivationFactory
    path: src/mscorlib/src/System/Runtime/InteropServices/WindowsRuntime/WindowsRuntimeMarshal.cs
    startLine: 1270
  assemblies:
  - System.Runtime.InteropServices.WindowsRuntime
  namespace: System.Runtime.InteropServices.WindowsRuntime
  summary: "\n<p>Returns an object that implements the activation factory interface for the specified Windows Runtime type. </p>\n"
  syntax:
    content: >-
      [SecurityCritical]

      public static IActivationFactory GetActivationFactory(Type type)
    content.vb: >-
      <SecurityCritical>

      Public Shared Function GetActivationFactory(type As Type) As IActivationFactory
    parameters:
    - id: type
      type: System.Type
      description: "\n<p>The Windows Runtime type to get the activation factory interface for. </p>\n"
    return:
      type: System.Runtime.InteropServices.WindowsRuntime.IActivationFactory
      description: "\n<p>An object that implements the activation factory interface. </p>\n"
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "\n<p>\n<em>type</em> does not represent a Windows Runtime type (that is, belonging to the Windows Runtime itself or defined in a Windows Runtime component). </p>\n<p>-or-</p>\n<p>The object specified for <em>type</em> was not provided by the common language runtime type system. </p>\n"
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "\n<p>\n<em>type</em> is <strong>null</strong>. </p>\n"
  - type: System.TypeLoadException
    commentId: T:System.TypeLoadException
    description: "\n<p>The specified Windows Runtime class is not properly registered. For example, the .winmd file was located, but the Windows Runtime failed to locate the implementation. </p>\n"
  see:
  - linkId: System.Security.SecurityCriticalAttribute
    commentId: T:System.Security.SecurityCriticalAttribute
  attributes:
  - type: System.Security.SecurityCriticalAttribute
    ctor: System.Security.SecurityCriticalAttribute.#ctor
    arguments: []
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: System.Runtime.InteropServices.WindowsRuntime.WindowsRuntimeMarshal.PtrToStringHString(System.IntPtr)
  commentId: M:System.Runtime.InteropServices.WindowsRuntime.WindowsRuntimeMarshal.PtrToStringHString(System.IntPtr)
  id: PtrToStringHString(System.IntPtr)
  parent: System.Runtime.InteropServices.WindowsRuntime.WindowsRuntimeMarshal
  langs:
  - csharp
  - vb
  name: PtrToStringHString(IntPtr)
  nameWithType: WindowsRuntimeMarshal.PtrToStringHString(IntPtr)
  fullName: System.Runtime.InteropServices.WindowsRuntime.WindowsRuntimeMarshal.PtrToStringHString(System.IntPtr)
  type: Method
  source:
    remote:
      path: src/mscorlib/src/System/Runtime/InteropServices/WindowsRuntime/WindowsRuntimeMarshal.cs
      branch: master
      repo: https://github.com/dotnet/coreclr.git
    id: PtrToStringHString
    path: src/mscorlib/src/System/Runtime/InteropServices/WindowsRuntime/WindowsRuntimeMarshal.cs
    startLine: 1311
  assemblies:
  - System.Runtime.InteropServices.WindowsRuntime
  namespace: System.Runtime.InteropServices.WindowsRuntime
  summary: "\n<p>Returns a managed string that contains a copy of the specified Windows Runtime<a href=\"http://go.microsoft.com/fwlink/p/?LinkId=246451\">HSTRING</a>. </p>\n"
  syntax:
    content: >-
      [SecurityCritical]

      public static string PtrToStringHString(IntPtr ptr)
    content.vb: >-
      <SecurityCritical>

      Public Shared Function PtrToStringHString(ptr As IntPtr) As String
    parameters:
    - id: ptr
      type: System.IntPtr
      description: "\n<p>An unmanaged pointer to the <a href=\"http://go.microsoft.com/fwlink/p/?LinkId=246451\">HSTRING</a> to copy. </p>\n"
    return:
      type: System.String
      description: "\n<p>A managed string that contains a copy of the <a href=\"http://go.microsoft.com/fwlink/p/?LinkId=246451\">HSTRING</a> if <em>ptr</em> is not <xref href=\"System.IntPtr.Zero\" data-throw-if-not-resolved=\"false\"></xref>; otherwise, <xref href=\"System.String.Empty\" data-throw-if-not-resolved=\"false\"></xref>. </p>\n"
  exceptions:
  - type: System.PlatformNotSupportedException
    commentId: T:System.PlatformNotSupportedException
    description: "\n<p>The Windows Runtime is not supported on the current version of the operating system. </p>\n"
  see:
  - linkId: System.Security.SecurityCriticalAttribute
    commentId: T:System.Security.SecurityCriticalAttribute
  attributes:
  - type: System.Security.SecurityCriticalAttribute
    ctor: System.Security.SecurityCriticalAttribute.#ctor
    arguments: []
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: System.Runtime.InteropServices.WindowsRuntime.WindowsRuntimeMarshal.RemoveAllEventHandlers(System.Action{System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken})
  commentId: M:System.Runtime.InteropServices.WindowsRuntime.WindowsRuntimeMarshal.RemoveAllEventHandlers(System.Action{System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken})
  id: RemoveAllEventHandlers(System.Action{System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken})
  parent: System.Runtime.InteropServices.WindowsRuntime.WindowsRuntimeMarshal
  langs:
  - csharp
  - vb
  name: RemoveAllEventHandlers(Action<EventRegistrationToken>)
  nameWithType: WindowsRuntimeMarshal.RemoveAllEventHandlers(Action<EventRegistrationToken>)
  fullName: System.Runtime.InteropServices.WindowsRuntime.WindowsRuntimeMarshal.RemoveAllEventHandlers(System.Action<System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken>)
  type: Method
  source:
    remote:
      path: src/mscorlib/src/System/Runtime/InteropServices/WindowsRuntime/WindowsRuntimeMarshal.cs
      branch: master
      repo: https://github.com/dotnet/coreclr.git
    id: RemoveAllEventHandlers
    path: src/mscorlib/src/System/Runtime/InteropServices/WindowsRuntime/WindowsRuntimeMarshal.cs
    startLine: 81
  assemblies:
  - System.Runtime.InteropServices.WindowsRuntime
  namespace: System.Runtime.InteropServices.WindowsRuntime
  summary: "\n<p>Removes all the event handlers that can be removed by using the specified method. </p>\n"
  syntax:
    content: >-
      [SecurityCritical]

      public static void RemoveAllEventHandlers(Action<EventRegistrationToken> removeMethod)
    content.vb: >-
      <SecurityCritical>

      Public Shared Sub RemoveAllEventHandlers(removeMethod As Action(Of EventRegistrationToken))
    parameters:
    - id: removeMethod
      type: System.Action{System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken}
      description: "\n<p>A delegate that represents the method that removes event handlers from the Windows Runtime event. </p>\n"
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "\n<p>\n<em>removeMethod</em> is <strong>null</strong>. </p>\n"
  see:
  - linkId: System.Security.SecurityCriticalAttribute
    commentId: T:System.Security.SecurityCriticalAttribute
  attributes:
  - type: System.Security.SecurityCriticalAttribute
    ctor: System.Security.SecurityCriticalAttribute.#ctor
    arguments: []
  nameWithType.vb: WindowsRuntimeMarshal.RemoveAllEventHandlers(Action(Of EventRegistrationToken))
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: System.Runtime.InteropServices.WindowsRuntime.WindowsRuntimeMarshal.RemoveAllEventHandlers(System.Action(Of System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken))
  name.vb: RemoveAllEventHandlers(Action(Of EventRegistrationToken))
- uid: System.Runtime.InteropServices.WindowsRuntime.WindowsRuntimeMarshal.RemoveEventHandler``1(System.Action{System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken},``0)
  commentId: M:System.Runtime.InteropServices.WindowsRuntime.WindowsRuntimeMarshal.RemoveEventHandler``1(System.Action{System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken},``0)
  id: RemoveEventHandler``1(System.Action{System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken},``0)
  parent: System.Runtime.InteropServices.WindowsRuntime.WindowsRuntimeMarshal
  langs:
  - csharp
  - vb
  name: RemoveEventHandler<T>(Action<EventRegistrationToken>, T)
  nameWithType: WindowsRuntimeMarshal.RemoveEventHandler<T>(Action<EventRegistrationToken>, T)
  fullName: System.Runtime.InteropServices.WindowsRuntime.WindowsRuntimeMarshal.RemoveEventHandler<T>(System.Action<System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken>, T)
  type: Method
  source:
    remote:
      path: src/mscorlib/src/System/Runtime/InteropServices/WindowsRuntime/WindowsRuntimeMarshal.cs
      branch: master
      repo: https://github.com/dotnet/coreclr.git
    id: RemoveEventHandler
    path: src/mscorlib/src/System/Runtime/InteropServices/WindowsRuntime/WindowsRuntimeMarshal.cs
    startLine: 56
  assemblies:
  - System.Runtime.InteropServices.WindowsRuntime
  namespace: System.Runtime.InteropServices.WindowsRuntime
  summary: "\n<p>Removes the specified event handler from a Windows Runtime event. </p>\n"
  syntax:
    content: >-
      [SecurityCritical]

      public static void RemoveEventHandler<T>(Action<EventRegistrationToken> removeMethod, T handler)
    content.vb: >-
      <SecurityCritical>

      Public Shared Sub RemoveEventHandler(Of T)(removeMethod As Action(Of EventRegistrationToken), handler As T)
    parameters:
    - id: removeMethod
      type: System.Action{System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken}
      description: "\n<p>A delegate that represents the method that removes event handlers from the Windows Runtime event. </p>\n"
    - id: handler
      type: '{T}'
      description: "\n<p>The event handler that is removed. </p>\n"
    typeParameters:
    - id: T
      description: "\n<p>The type of the delegate that represents the event handler. </p>\n"
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "\n<p>\n<em>removeMethod</em> is <strong>null</strong>. </p>\n"
  see:
  - linkId: System.Security.SecurityCriticalAttribute
    commentId: T:System.Security.SecurityCriticalAttribute
  attributes:
  - type: System.Security.SecurityCriticalAttribute
    ctor: System.Security.SecurityCriticalAttribute.#ctor
    arguments: []
  nameWithType.vb: WindowsRuntimeMarshal.RemoveEventHandler(Of T)(Action(Of EventRegistrationToken), T)
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: System.Runtime.InteropServices.WindowsRuntime.WindowsRuntimeMarshal.RemoveEventHandler(Of T)(System.Action(Of System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken), T)
  name.vb: RemoveEventHandler(Of T)(Action(Of EventRegistrationToken), T)
- uid: System.Runtime.InteropServices.WindowsRuntime.WindowsRuntimeMarshal.StringToHString(System.String)
  commentId: M:System.Runtime.InteropServices.WindowsRuntime.WindowsRuntimeMarshal.StringToHString(System.String)
  id: StringToHString(System.String)
  parent: System.Runtime.InteropServices.WindowsRuntime.WindowsRuntimeMarshal
  langs:
  - csharp
  - vb
  name: StringToHString(String)
  nameWithType: WindowsRuntimeMarshal.StringToHString(String)
  fullName: System.Runtime.InteropServices.WindowsRuntime.WindowsRuntimeMarshal.StringToHString(System.String)
  type: Method
  source:
    remote:
      path: src/mscorlib/src/System/Runtime/InteropServices/WindowsRuntime/WindowsRuntimeMarshal.cs
      branch: master
      repo: https://github.com/dotnet/coreclr.git
    id: StringToHString
    path: src/mscorlib/src/System/Runtime/InteropServices/WindowsRuntime/WindowsRuntimeMarshal.cs
    startLine: 1293
  assemblies:
  - System.Runtime.InteropServices.WindowsRuntime
  namespace: System.Runtime.InteropServices.WindowsRuntime
  summary: "\n<p>Allocates a Windows Runtime<a href=\"http://go.microsoft.com/fwlink/p/?LinkId=246451\">HSTRING</a> and copies the specified managed string to it. </p>\n"
  syntax:
    content: >-
      [SecurityCritical]

      public static IntPtr StringToHString(string s)
    content.vb: >-
      <SecurityCritical>

      Public Shared Function StringToHString(s As String) As IntPtr
    parameters:
    - id: s
      type: System.String
      description: "\n<p>The managed string to copy. </p>\n"
    return:
      type: System.IntPtr
      description: "\n<p>An unmanaged pointer to the new <a href=\"http://go.microsoft.com/fwlink/p/?LinkId=246451\">HSTRING</a>, or <xref href=\"System.IntPtr.Zero\" data-throw-if-not-resolved=\"false\"></xref> if <em>s</em> is <xref href=\"System.String.Empty\" data-throw-if-not-resolved=\"false\"></xref>. </p>\n"
  exceptions:
  - type: System.PlatformNotSupportedException
    commentId: T:System.PlatformNotSupportedException
    description: "\n<p>The Windows Runtime is not supported on the current version of the operating system. </p>\n"
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "\n<p>\n<em>s</em> is <strong>null</strong>. </p>\n"
  seealso:
  - linkId: System.Runtime.InteropServices.WindowsRuntime.WindowsRuntimeMarshal.FreeHString(System.IntPtr)
    commentId: M:System.Runtime.InteropServices.WindowsRuntime.WindowsRuntimeMarshal.FreeHString(System.IntPtr)
  see:
  - linkId: System.Security.SecurityCriticalAttribute
    commentId: T:System.Security.SecurityCriticalAttribute
  attributes:
  - type: System.Security.SecurityCriticalAttribute
    ctor: System.Security.SecurityCriticalAttribute.#ctor
    arguments: []
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
references:
- uid: System.Runtime.InteropServices.WindowsRuntime
  commentId: N:System.Runtime.InteropServices.WindowsRuntime
  isExternal: false
  name: System.Runtime.InteropServices.WindowsRuntime
  nameWithType: System.Runtime.InteropServices.WindowsRuntime
  fullName: System.Runtime.InteropServices.WindowsRuntime
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: false
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: System.Func{{T},System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken}
  commentId: T:System.Func{``0,System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken}
  parent: System
  definition: System.Func`2
  name: Func<T, EventRegistrationToken>
  nameWithType: Func<T, EventRegistrationToken>
  fullName: System.Func<T, System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken>
  nameWithType.vb: Func(Of T, EventRegistrationToken)
  fullname.vb: System.Func(Of T, System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken)
  name.vb: Func(Of T, EventRegistrationToken)
  spec.csharp:
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken
    name: EventRegistrationToken
    nameWithType: EventRegistrationToken
    fullName: System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken
    name: EventRegistrationToken
    nameWithType: EventRegistrationToken
    fullName: System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Action{System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken}
  commentId: T:System.Action{System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken}
  parent: System
  definition: System.Action`1
  name: Action<EventRegistrationToken>
  nameWithType: Action<EventRegistrationToken>
  fullName: System.Action<System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken>
  nameWithType.vb: Action(Of EventRegistrationToken)
  fullname.vb: System.Action(Of System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken)
  name.vb: Action(Of EventRegistrationToken)
  spec.csharp:
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken
    name: EventRegistrationToken
    nameWithType: EventRegistrationToken
    fullName: System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken
    name: EventRegistrationToken
    nameWithType: EventRegistrationToken
    fullName: System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken
  - name: )
    nameWithType: )
    fullName: )
- uid: '{T}'
  commentId: '!:T'
  definition: T
  name: T
  nameWithType: T
  fullName: T
- uid: System.Func`2
  commentId: T:System.Func`2
  isExternal: false
  name: Func<T, TResult>
  nameWithType: Func<T, TResult>
  fullName: System.Func<T, TResult>
  nameWithType.vb: Func(Of T, TResult)
  fullname.vb: System.Func(Of T, TResult)
  name.vb: Func(Of T, TResult)
  spec.csharp:
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TResult
    nameWithType: TResult
    fullName: TResult
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TResult
    nameWithType: TResult
    fullName: TResult
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Action`1
  commentId: T:System.Action`1
  isExternal: false
  name: Action<T>
  nameWithType: Action<T>
  fullName: System.Action<T>
  nameWithType.vb: Action(Of T)
  fullname.vb: System.Action(Of T)
  name.vb: Action(Of T)
  spec.csharp:
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: T
  isExternal: false
  name: T
  nameWithType: T
  fullName: T
- uid: System.IntPtr
  commentId: T:System.IntPtr
  parent: System
  isExternal: false
  name: IntPtr
  nameWithType: IntPtr
  fullName: System.IntPtr
- uid: System.Type
  commentId: T:System.Type
  parent: System
  isExternal: false
  name: Type
  nameWithType: Type
  fullName: System.Type
- uid: System.Runtime.InteropServices.WindowsRuntime.IActivationFactory
  commentId: T:System.Runtime.InteropServices.WindowsRuntime.IActivationFactory
  parent: System.Runtime.InteropServices.WindowsRuntime
  isExternal: false
  name: IActivationFactory
  nameWithType: IActivationFactory
  fullName: System.Runtime.InteropServices.WindowsRuntime.IActivationFactory
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: false
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.ArgumentNullException
  commentId: T:System.ArgumentNullException
  isExternal: false
  name: ArgumentNullException
  nameWithType: ArgumentNullException
  fullName: System.ArgumentNullException
- uid: System.PlatformNotSupportedException
  commentId: T:System.PlatformNotSupportedException
  isExternal: false
  name: PlatformNotSupportedException
  nameWithType: PlatformNotSupportedException
  fullName: System.PlatformNotSupportedException
- uid: System.ArgumentException
  commentId: T:System.ArgumentException
  parent: System
  isExternal: false
  name: ArgumentException
  nameWithType: ArgumentException
  fullName: System.ArgumentException
- uid: System.TypeLoadException
  commentId: T:System.TypeLoadException
  parent: System
  isExternal: false
  name: TypeLoadException
  nameWithType: TypeLoadException
  fullName: System.TypeLoadException
