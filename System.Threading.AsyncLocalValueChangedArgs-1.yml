### YamlMime:ManagedReference
items:
- uid: System.Threading.AsyncLocalValueChangedArgs`1
  commentId: T:System.Threading.AsyncLocalValueChangedArgs`1
  id: AsyncLocalValueChangedArgs`1
  parent: System.Threading
  children:
  - System.Threading.AsyncLocalValueChangedArgs`1.CurrentValue
  - System.Threading.AsyncLocalValueChangedArgs`1.PreviousValue
  - System.Threading.AsyncLocalValueChangedArgs`1.ThreadContextChanged
  langs:
  - csharp
  - vb
  name: AsyncLocalValueChangedArgs<T>
  nameWithType: AsyncLocalValueChangedArgs<T>
  fullName: System.Threading.AsyncLocalValueChangedArgs<T>
  type: Struct
  source:
    remote:
      path: src/mscorlib/src/System/Threading/AsyncLocal.cs
      branch: master
      repo: https://github.com/dotnet/coreclr.git
    id: AsyncLocalValueChangedArgs
    path: src/mscorlib/src/System/Threading/AsyncLocal.cs
    startLine: 96
  assemblies:
  - System.Threading
  namespace: System.Threading
  summary: "\n<p>The class that provides data change information to <xref href=\"System.Threading.AsyncLocal`1\" data-throw-if-not-resolved=\"false\"></xref> instances that register for change notifications. </p>\n"
  syntax:
    content: public struct AsyncLocalValueChangedArgs<T>
    content.vb: Public Structure AsyncLocalValueChangedArgs(Of T)
    typeParameters:
    - id: T
      description: "\n<p>The type of the data. </p>\n"
  inheritedMembers:
  - System.ValueType.Equals(System.Object)
  - System.ValueType.GetHashCode
  - System.ValueType.ToString
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetType
  attributes:
  - type: System.Runtime.InteropServices.StructLayoutAttribute
    ctor: System.Runtime.InteropServices.StructLayoutAttribute.#ctor(System.Runtime.InteropServices.LayoutKind)
    arguments:
    - type: System.Runtime.InteropServices.LayoutKind
      value: 0
  nameWithType.vb: AsyncLocalValueChangedArgs(Of T)
  modifiers.csharp:
  - public
  - struct
  modifiers.vb:
  - Public
  - Structure
  fullName.vb: System.Threading.AsyncLocalValueChangedArgs(Of T)
  name.vb: AsyncLocalValueChangedArgs(Of T)
- uid: System.Threading.AsyncLocalValueChangedArgs`1.CurrentValue
  commentId: P:System.Threading.AsyncLocalValueChangedArgs`1.CurrentValue
  id: CurrentValue
  parent: System.Threading.AsyncLocalValueChangedArgs`1
  langs:
  - csharp
  - vb
  name: CurrentValue
  nameWithType: AsyncLocalValueChangedArgs<T>.CurrentValue
  fullName: System.Threading.AsyncLocalValueChangedArgs<T>.CurrentValue
  type: Property
  source:
    remote:
      path: src/mscorlib/src/System/Threading/AsyncLocal.cs
      branch: master
      repo: https://github.com/dotnet/coreclr.git
    id: CurrentValue
    path: src/mscorlib/src/System/Threading/AsyncLocal.cs
    startLine: 99
  assemblies:
  - System.Threading
  namespace: System.Threading
  summary: "\n<p>Gets the data's current value. </p>\n"
  syntax:
    content: public T CurrentValue { get; }
    content.vb: Public ReadOnly Property CurrentValue As T
    parameters: []
    return:
      type: '{T}'
      description: "\n<p>The data's current value. </p>\n"
  nameWithType.vb: AsyncLocalValueChangedArgs(Of T).CurrentValue
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
  fullName.vb: System.Threading.AsyncLocalValueChangedArgs(Of T).CurrentValue
- uid: System.Threading.AsyncLocalValueChangedArgs`1.PreviousValue
  commentId: P:System.Threading.AsyncLocalValueChangedArgs`1.PreviousValue
  id: PreviousValue
  parent: System.Threading.AsyncLocalValueChangedArgs`1
  langs:
  - csharp
  - vb
  name: PreviousValue
  nameWithType: AsyncLocalValueChangedArgs<T>.PreviousValue
  fullName: System.Threading.AsyncLocalValueChangedArgs<T>.PreviousValue
  type: Property
  source:
    remote:
      path: src/mscorlib/src/System/Threading/AsyncLocal.cs
      branch: master
      repo: https://github.com/dotnet/coreclr.git
    id: PreviousValue
    path: src/mscorlib/src/System/Threading/AsyncLocal.cs
    startLine: 98
  assemblies:
  - System.Threading
  namespace: System.Threading
  summary: "\n<p>Gets the data's previous value.</p>\n"
  syntax:
    content: public T PreviousValue { get; }
    content.vb: Public ReadOnly Property PreviousValue As T
    parameters: []
    return:
      type: '{T}'
      description: "\n<p>The data's previous value. </p>\n"
  nameWithType.vb: AsyncLocalValueChangedArgs(Of T).PreviousValue
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
  fullName.vb: System.Threading.AsyncLocalValueChangedArgs(Of T).PreviousValue
- uid: System.Threading.AsyncLocalValueChangedArgs`1.ThreadContextChanged
  commentId: P:System.Threading.AsyncLocalValueChangedArgs`1.ThreadContextChanged
  id: ThreadContextChanged
  parent: System.Threading.AsyncLocalValueChangedArgs`1
  langs:
  - csharp
  - vb
  name: ThreadContextChanged
  nameWithType: AsyncLocalValueChangedArgs<T>.ThreadContextChanged
  fullName: System.Threading.AsyncLocalValueChangedArgs<T>.ThreadContextChanged
  type: Property
  source:
    remote:
      path: src/mscorlib/src/System/Threading/AsyncLocal.cs
      branch: master
      repo: https://github.com/dotnet/coreclr.git
    id: ThreadContextChanged
    path: src/mscorlib/src/System/Threading/AsyncLocal.cs
    startLine: 105
  assemblies:
  - System.Threading
  namespace: System.Threading
  summary: "\n<p>Returns a value that indicates whether the value changes because of a change of execution context. </p>\n"
  syntax:
    content: public bool ThreadContextChanged { get; }
    content.vb: Public ReadOnly Property ThreadContextChanged As Boolean
    parameters: []
    return:
      type: System.Boolean
      description: "\n<p>\n<strong>true</strong> if the value changed because of a change of execution context; otherwise, <strong>false</strong>. </p>\n"
  nameWithType.vb: AsyncLocalValueChangedArgs(Of T).ThreadContextChanged
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
  fullName.vb: System.Threading.AsyncLocalValueChangedArgs(Of T).ThreadContextChanged
references:
- uid: System.Threading
  commentId: N:System.Threading
  isExternal: false
  name: System.Threading
  nameWithType: System.Threading
  fullName: System.Threading
- uid: System.ValueType.Equals(System.Object)
  commentId: M:System.ValueType.Equals(System.Object)
  parent: System.ValueType
  isExternal: true
  name: Equals(Object)
  nameWithType: ValueType.Equals(Object)
  fullName: System.ValueType.Equals(System.Object)
  spec.csharp:
  - uid: System.ValueType.Equals(System.Object)
    name: Equals
    nameWithType: ValueType.Equals
    fullName: System.ValueType.Equals
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.ValueType.Equals(System.Object)
    name: Equals
    nameWithType: ValueType.Equals
    fullName: System.ValueType.Equals
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.ValueType.GetHashCode
  commentId: M:System.ValueType.GetHashCode
  parent: System.ValueType
  isExternal: false
  name: GetHashCode()
  nameWithType: ValueType.GetHashCode()
  fullName: System.ValueType.GetHashCode()
  spec.csharp:
  - uid: System.ValueType.GetHashCode
    name: GetHashCode
    nameWithType: ValueType.GetHashCode
    fullName: System.ValueType.GetHashCode
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.ValueType.GetHashCode
    name: GetHashCode
    nameWithType: ValueType.GetHashCode
    fullName: System.ValueType.GetHashCode
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.ValueType.ToString
  commentId: M:System.ValueType.ToString
  parent: System.ValueType
  isExternal: false
  name: ToString()
  nameWithType: ValueType.ToString()
  fullName: System.ValueType.ToString()
  spec.csharp:
  - uid: System.ValueType.ToString
    name: ToString
    nameWithType: ValueType.ToString
    fullName: System.ValueType.ToString
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.ValueType.ToString
    name: ToString
    nameWithType: ValueType.ToString
    fullName: System.ValueType.ToString
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.ValueType
  commentId: T:System.ValueType
  parent: System
  isExternal: false
  name: ValueType
  nameWithType: ValueType
  fullName: System.ValueType
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: false
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: '{T}'
  commentId: '!:T'
  definition: T
  name: T
  nameWithType: T
  fullName: T
- uid: T
  isExternal: false
  name: T
  nameWithType: T
  fullName: T
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: false
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
