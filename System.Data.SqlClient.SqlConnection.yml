items:
- uid: System.Data.SqlClient.SqlConnection
  commentId: T:System.Data.SqlClient.SqlConnection
  id: SqlConnection
  parent: System.Data.SqlClient
  children:
  - System.Data.SqlClient.SqlConnection.#ctor
  - System.Data.SqlClient.SqlConnection.#ctor(System.String)
  - System.Data.SqlClient.SqlConnection.BeginDbTransaction(System.Data.IsolationLevel)
  - System.Data.SqlClient.SqlConnection.BeginTransaction
  - System.Data.SqlClient.SqlConnection.BeginTransaction(System.Data.IsolationLevel)
  - System.Data.SqlClient.SqlConnection.BeginTransaction(System.Data.IsolationLevel,System.String)
  - System.Data.SqlClient.SqlConnection.BeginTransaction(System.String)
  - System.Data.SqlClient.SqlConnection.ChangeDatabase(System.String)
  - System.Data.SqlClient.SqlConnection.ClearAllPools
  - System.Data.SqlClient.SqlConnection.ClearPool(System.Data.SqlClient.SqlConnection)
  - System.Data.SqlClient.SqlConnection.ClientConnectionId
  - System.Data.SqlClient.SqlConnection.Close
  - System.Data.SqlClient.SqlConnection.ConnectionString
  - System.Data.SqlClient.SqlConnection.ConnectionTimeout
  - System.Data.SqlClient.SqlConnection.CreateCommand
  - System.Data.SqlClient.SqlConnection.CreateDbCommand
  - System.Data.SqlClient.SqlConnection.Database
  - System.Data.SqlClient.SqlConnection.DataSource
  - System.Data.SqlClient.SqlConnection.Dispose(System.Boolean)
  - System.Data.SqlClient.SqlConnection.FireInfoMessageEventOnUserErrors
  - System.Data.SqlClient.SqlConnection.InfoMessage
  - System.Data.SqlClient.SqlConnection.Open
  - System.Data.SqlClient.SqlConnection.OpenAsync(System.Threading.CancellationToken)
  - System.Data.SqlClient.SqlConnection.PacketSize
  - System.Data.SqlClient.SqlConnection.ResetStatistics
  - System.Data.SqlClient.SqlConnection.RetrieveStatistics
  - System.Data.SqlClient.SqlConnection.ServerVersion
  - System.Data.SqlClient.SqlConnection.State
  - System.Data.SqlClient.SqlConnection.StatisticsEnabled
  - System.Data.SqlClient.SqlConnection.WorkstationId
  langs:
  - csharp
  - vb
  name: SqlConnection
  fullName: System.Data.SqlClient.SqlConnection
  type: Class
  source:
    remote:
      path: src/System.Data.SqlClient/src/System/Data/SqlClient/SqlConnectionHelper.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: SqlConnection
    path: src/System.Data.SqlClient/src/System/Data/SqlClient/SqlConnectionHelper.cs
    startLine: 16
  assemblies:
  - System.Data.SqlClient
  namespace: System.Data.SqlClient
  summary: "\n<p>Represents an open connection to a SQL Server database. This class cannot be inherited.</p>\n"
  syntax:
    content: 'public sealed class SqlConnection : DbConnection, DbConnection'
    content.vb: >-
      Public NotInheritable Class SqlConnection
          Inherits DbConnection
          Implements DbConnection
  inheritance:
  - System.Object
  implements:
  - System.Data.Common.DbConnection
  modifiers.csharp:
  - public
  - sealed
  - class
  modifiers.vb:
  - Public
  - NotInheritable
  - Class
  nameWithType: SqlConnection
- uid: System.Data.SqlClient.SqlConnection.#ctor
  commentId: M:System.Data.SqlClient.SqlConnection.#ctor
  id: '#ctor'
  parent: System.Data.SqlClient.SqlConnection
  langs:
  - csharp
  - vb
  name: SqlConnection()
  fullName: System.Data.SqlClient.SqlConnection.SqlConnection()
  type: Constructor
  source:
    remote:
      path: src/System.Data.SqlClient/src/System/Data/SqlClient/SqlConnectionHelper.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: .ctor
    path: src/System.Data.SqlClient/src/System/Data/SqlClient/SqlConnectionHelper.cs
    startLine: 26
  assemblies:
  - System.Data.SqlClient
  namespace: System.Data.SqlClient
  summary: "\n<p>Initializes a new instance of the <xref href=\"System.Data.SqlClient.SqlConnection\" data-throw-if-not-resolved=\"false\"></xref> class.</p>\n"
  syntax:
    content: public SqlConnection()
    content.vb: Public Sub New
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  nameWithType: SqlConnection.SqlConnection()
- uid: System.Data.SqlClient.SqlConnection.#ctor(System.String)
  commentId: M:System.Data.SqlClient.SqlConnection.#ctor(System.String)
  id: '#ctor(System.String)'
  parent: System.Data.SqlClient.SqlConnection
  langs:
  - csharp
  - vb
  name: SqlConnection(String)
  fullName: System.Data.SqlClient.SqlConnection.SqlConnection(System.String)
  type: Constructor
  source:
    remote:
      path: src/System.Data.SqlClient/src/System/Data/SqlClient/SqlConnection.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: .ctor
    path: src/System.Data.SqlClient/src/System/Data/SqlClient/SqlConnection.cs
    startLine: 50
  assemblies:
  - System.Data.SqlClient
  namespace: System.Data.SqlClient
  summary: "\n<p>Initializes a new instance of the <xref href=\"System.Data.SqlClient.SqlConnection\" data-throw-if-not-resolved=\"false\"></xref> class when given a string that contains the connection string.</p>\n"
  syntax:
    content: public SqlConnection(string connectionString)
    content.vb: Public Sub New(connectionString As String)
    parameters:
    - id: connectionString
      type: System.String
      description: "\n<p>The connection used to open the SQL Server database.</p>\n"
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  nameWithType: SqlConnection.SqlConnection(String)
- uid: System.Data.SqlClient.SqlConnection.ClientConnectionId
  commentId: P:System.Data.SqlClient.SqlConnection.ClientConnectionId
  id: ClientConnectionId
  parent: System.Data.SqlClient.SqlConnection
  langs:
  - csharp
  - vb
  name: ClientConnectionId
  fullName: System.Data.SqlClient.SqlConnection.ClientConnectionId
  type: Property
  source:
    remote:
      path: src/System.Data.SqlClient/src/System/Data/SqlClient/SqlConnection.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: ClientConnectionId
    path: src/System.Data.SqlClient/src/System/Data/SqlClient/SqlConnection.cs
    startLine: 245
  assemblies:
  - System.Data.SqlClient
  namespace: System.Data.SqlClient
  summary: "\n<p>The connection ID of the most recent connection attempt, regardless of whether the attempt succeeded or failed.</p>\n"
  syntax:
    content: public Guid ClientConnectionId { get; }
    content.vb: Public ReadOnly Property ClientConnectionId As Guid
    parameters: []
    return:
      type: System.Guid
      description: "\n<p>The connection ID of the most recent connection attempt.</p>\n"
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
  nameWithType: SqlConnection.ClientConnectionId
- uid: System.Data.SqlClient.SqlConnection.ConnectionString
  commentId: P:System.Data.SqlClient.SqlConnection.ConnectionString
  id: ConnectionString
  parent: System.Data.SqlClient.SqlConnection
  langs:
  - csharp
  - vb
  name: ConnectionString
  fullName: System.Data.SqlClient.SqlConnection.ConnectionString
  type: Property
  source:
    remote:
      path: src/System.Data.SqlClient/src/System/Data/SqlClient/SqlConnection.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: ConnectionString
    path: src/System.Data.SqlClient/src/System/Data/SqlClient/SqlConnection.cs
    startLine: 156
  assemblies:
  - System.Data.SqlClient
  namespace: System.Data.SqlClient
  summary: "\n<p>Gets or sets the string used to open a SQL Server database.</p>\n"
  syntax:
    content: public override string ConnectionString { get; set; }
    content.vb: Public Overrides Property ConnectionString As String
    parameters: []
    return:
      type: System.String
      description: "\n<p>The connection string that includes the source database name, and other parameters needed to establish the initial connection. The default value is an empty string.</p>\n"
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "\n<p>An invalid connection string argument has been supplied, or a required connection string argument has not been supplied. </p>\n"
  modifiers.csharp:
  - public
  - override
  - get
  - set
  modifiers.vb:
  - Public
  - Overrides
  nameWithType: SqlConnection.ConnectionString
- uid: System.Data.SqlClient.SqlConnection.ConnectionTimeout
  commentId: P:System.Data.SqlClient.SqlConnection.ConnectionTimeout
  id: ConnectionTimeout
  parent: System.Data.SqlClient.SqlConnection
  langs:
  - csharp
  - vb
  name: ConnectionTimeout
  fullName: System.Data.SqlClient.SqlConnection.ConnectionTimeout
  type: Property
  source:
    remote:
      path: src/System.Data.SqlClient/src/System/Data/SqlClient/SqlConnection.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: ConnectionTimeout
    path: src/System.Data.SqlClient/src/System/Data/SqlClient/SqlConnection.cs
    startLine: 170
  assemblies:
  - System.Data.SqlClient
  namespace: System.Data.SqlClient
  summary: "\n<p>Gets the time to wait while trying to establish a connection before terminating the attempt and generating an error.</p>\n"
  syntax:
    content: public override int ConnectionTimeout { get; }
    content.vb: Public Overrides ReadOnly Property ConnectionTimeout As Integer
    parameters: []
    return:
      type: System.Int32
      description: "\n<p>The time (in seconds) to wait for a connection to open. The default value is 15 seconds.</p>\n"
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "\n<p>The value set is less than 0. </p>\n"
  modifiers.csharp:
  - public
  - override
  - get
  modifiers.vb:
  - Public
  - Overrides
  - ReadOnly
  nameWithType: SqlConnection.ConnectionTimeout
- uid: System.Data.SqlClient.SqlConnection.Database
  commentId: P:System.Data.SqlClient.SqlConnection.Database
  id: Database
  parent: System.Data.SqlClient.SqlConnection
  langs:
  - csharp
  - vb
  name: Database
  fullName: System.Data.SqlClient.SqlConnection.Database
  type: Property
  source:
    remote:
      path: src/System.Data.SqlClient/src/System/Data/SqlClient/SqlConnection.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: Database
    path: src/System.Data.SqlClient/src/System/Data/SqlClient/SqlConnection.cs
    startLine: 179
  assemblies:
  - System.Data.SqlClient
  namespace: System.Data.SqlClient
  summary: "\n<p>Gets the name of the current database or the database to be used after a connection is opened.</p>\n"
  syntax:
    content: public override string Database { get; }
    content.vb: Public Overrides ReadOnly Property Database As String
    parameters: []
    return:
      type: System.String
      description: "\n<p>The name of the current database or the name of the database to be used after a connection is opened. The default value is an empty string.</p>\n"
  modifiers.csharp:
  - public
  - override
  - get
  modifiers.vb:
  - Public
  - Overrides
  - ReadOnly
  nameWithType: SqlConnection.Database
- uid: System.Data.SqlClient.SqlConnection.DataSource
  commentId: P:System.Data.SqlClient.SqlConnection.DataSource
  id: DataSource
  parent: System.Data.SqlClient.SqlConnection
  langs:
  - csharp
  - vb
  name: DataSource
  fullName: System.Data.SqlClient.SqlConnection.DataSource
  type: Property
  source:
    remote:
      path: src/System.Data.SqlClient/src/System/Data/SqlClient/SqlConnection.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: DataSource
    path: src/System.Data.SqlClient/src/System/Data/SqlClient/SqlConnection.cs
    startLine: 202
  assemblies:
  - System.Data.SqlClient
  namespace: System.Data.SqlClient
  summary: "\n<p>Gets the name of the instance of SQL Server to which to connect.</p>\n"
  syntax:
    content: public override string DataSource { get; }
    content.vb: Public Overrides ReadOnly Property DataSource As String
    parameters: []
    return:
      type: System.String
      description: "\n<p>The name of the instance of SQL Server to which to connect. The default value is an empty string.</p>\n"
  modifiers.csharp:
  - public
  - override
  - get
  modifiers.vb:
  - Public
  - Overrides
  - ReadOnly
  nameWithType: SqlConnection.DataSource
- uid: System.Data.SqlClient.SqlConnection.FireInfoMessageEventOnUserErrors
  commentId: P:System.Data.SqlClient.SqlConnection.FireInfoMessageEventOnUserErrors
  id: FireInfoMessageEventOnUserErrors
  parent: System.Data.SqlClient.SqlConnection
  langs:
  - csharp
  - vb
  name: FireInfoMessageEventOnUserErrors
  fullName: System.Data.SqlClient.SqlConnection.FireInfoMessageEventOnUserErrors
  type: Property
  source:
    remote:
      path: src/System.Data.SqlClient/src/System/Data/SqlClient/SqlConnection.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: FireInfoMessageEventOnUserErrors
    path: src/System.Data.SqlClient/src/System/Data/SqlClient/SqlConnection.cs
    startLine: 318
  assemblies:
  - System.Data.SqlClient
  namespace: System.Data.SqlClient
  summary: "\n<p>Gets or sets the <xref href=\"System.Data.SqlClient.SqlConnection.FireInfoMessageEventOnUserErrors\" data-throw-if-not-resolved=\"false\"></xref> property.</p>\n"
  syntax:
    content: public bool FireInfoMessageEventOnUserErrors { get; set; }
    content.vb: Public Property FireInfoMessageEventOnUserErrors As Boolean
    parameters: []
    return:
      type: System.Boolean
      description: "\n<p>\n<strong>true</strong> if the <xref href=\"System.Data.SqlClient.SqlConnection.FireInfoMessageEventOnUserErrors\" data-throw-if-not-resolved=\"false\"></xref> property has been set; otherwise <strong>false</strong>.</p>\n"
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
  nameWithType: SqlConnection.FireInfoMessageEventOnUserErrors
- uid: System.Data.SqlClient.SqlConnection.PacketSize
  commentId: P:System.Data.SqlClient.SqlConnection.PacketSize
  id: PacketSize
  parent: System.Data.SqlClient.SqlConnection
  langs:
  - csharp
  - vb
  name: PacketSize
  fullName: System.Data.SqlClient.SqlConnection.PacketSize
  type: Property
  source:
    remote:
      path: src/System.Data.SqlClient/src/System/Data/SqlClient/SqlConnection.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: PacketSize
    path: src/System.Data.SqlClient/src/System/Data/SqlClient/SqlConnection.cs
    startLine: 222
  assemblies:
  - System.Data.SqlClient
  namespace: System.Data.SqlClient
  summary: "\n<p>Gets the size (in bytes) of network packets used to communicate with an instance of SQL Server.</p>\n"
  syntax:
    content: public int PacketSize { get; }
    content.vb: Public ReadOnly Property PacketSize As Integer
    parameters: []
    return:
      type: System.Int32
      description: "\n<p>The size (in bytes) of network packets. The default value is 8000.</p>\n"
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
  nameWithType: SqlConnection.PacketSize
- uid: System.Data.SqlClient.SqlConnection.ServerVersion
  commentId: P:System.Data.SqlClient.SqlConnection.ServerVersion
  id: ServerVersion
  parent: System.Data.SqlClient.SqlConnection
  langs:
  - csharp
  - vb
  name: ServerVersion
  fullName: System.Data.SqlClient.SqlConnection.ServerVersion
  type: Property
  source:
    remote:
      path: src/System.Data.SqlClient/src/System/Data/SqlClient/SqlConnection.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: ServerVersion
    path: src/System.Data.SqlClient/src/System/Data/SqlClient/SqlConnection.cs
    startLine: 267
  assemblies:
  - System.Data.SqlClient
  namespace: System.Data.SqlClient
  summary: "\n<p>Gets a string that contains the version of the instance of SQL Server to which the client is connected.</p>\n"
  syntax:
    content: public override string ServerVersion { get; }
    content.vb: Public Overrides ReadOnly Property ServerVersion As String
    parameters: []
    return:
      type: System.String
      description: "\n<p>The version of the instance of SQL Server.</p>\n"
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "\n<p>The connection is closed. </p>\n<p>\n<xref href=\"System.Data.SqlClient.SqlConnection.ServerVersion\" data-throw-if-not-resolved=\"false\"></xref> was called while the returned Task was not completed and the connection was not opened after a call to <xref href=\"System.Data.SqlClient.SqlConnection.OpenAsync(System.Threading.CancellationToken)\" data-throw-if-not-resolved=\"false\"></xref>.</p>\n"
  modifiers.csharp:
  - public
  - override
  - get
  modifiers.vb:
  - Public
  - Overrides
  - ReadOnly
  nameWithType: SqlConnection.ServerVersion
- uid: System.Data.SqlClient.SqlConnection.State
  commentId: P:System.Data.SqlClient.SqlConnection.State
  id: State
  parent: System.Data.SqlClient.SqlConnection
  langs:
  - csharp
  - vb
  name: State
  fullName: System.Data.SqlClient.SqlConnection.State
  type: Property
  source:
    remote:
      path: src/System.Data.SqlClient/src/System/Data/SqlClient/SqlConnection.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: State
    path: src/System.Data.SqlClient/src/System/Data/SqlClient/SqlConnection.cs
    startLine: 275
  assemblies:
  - System.Data.SqlClient
  namespace: System.Data.SqlClient
  summary: "\n<p>Indicates the state of the <xref href=\"System.Data.SqlClient.SqlConnection\" data-throw-if-not-resolved=\"false\"></xref> during the most recent network operation performed on the connection.</p>\n"
  syntax:
    content: public override ConnectionState State { get; }
    content.vb: Public Overrides ReadOnly Property State As ConnectionState
    parameters: []
    return:
      type: ConnectionState
      description: "\n<p>An <xref href=\"System.Data.ConnectionState\" data-throw-if-not-resolved=\"false\"></xref> enumeration.</p>\n"
  modifiers.csharp:
  - public
  - override
  - get
  modifiers.vb:
  - Public
  - Overrides
  - ReadOnly
  nameWithType: SqlConnection.State
- uid: System.Data.SqlClient.SqlConnection.StatisticsEnabled
  commentId: P:System.Data.SqlClient.SqlConnection.StatisticsEnabled
  id: StatisticsEnabled
  parent: System.Data.SqlClient.SqlConnection
  langs:
  - csharp
  - vb
  name: StatisticsEnabled
  fullName: System.Data.SqlClient.SqlConnection.StatisticsEnabled
  type: Property
  source:
    remote:
      path: src/System.Data.SqlClient/src/System/Data/SqlClient/SqlConnection.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: StatisticsEnabled
    path: src/System.Data.SqlClient/src/System/Data/SqlClient/SqlConnection.cs
    startLine: 81
  assemblies:
  - System.Data.SqlClient
  namespace: System.Data.SqlClient
  summary: "\n<p>When set to <strong>true</strong>, enables statistics gathering for the current connection.</p>\n"
  syntax:
    content: public bool StatisticsEnabled { get; set; }
    content.vb: Public Property StatisticsEnabled As Boolean
    parameters: []
    return:
      type: System.Boolean
      description: "\n<p>Returns <strong>true</strong> if statistics gathering is enabled; otherwise <strong>false</strong>. <strong>false</strong> is the default.</p>\n"
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
  nameWithType: SqlConnection.StatisticsEnabled
- uid: System.Data.SqlClient.SqlConnection.WorkstationId
  commentId: P:System.Data.SqlClient.SqlConnection.WorkstationId
  id: WorkstationId
  parent: System.Data.SqlClient.SqlConnection
  langs:
  - csharp
  - vb
  name: WorkstationId
  fullName: System.Data.SqlClient.SqlConnection.WorkstationId
  type: Property
  source:
    remote:
      path: src/System.Data.SqlClient/src/System/Data/SqlClient/SqlConnection.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: WorkstationId
    path: src/System.Data.SqlClient/src/System/Data/SqlClient/SqlConnection.cs
    startLine: 297
  assemblies:
  - System.Data.SqlClient
  namespace: System.Data.SqlClient
  summary: "\n<p>Gets a string that identifies the database client.</p>\n"
  syntax:
    content: public string WorkstationId { get; }
    content.vb: Public ReadOnly Property WorkstationId As String
    parameters: []
    return:
      type: System.String
      description: "\n<p>A string that identifies the database client. If not specified, the name of the client computer. If neither is specified, the value is an empty string.</p>\n"
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
  nameWithType: SqlConnection.WorkstationId
- uid: System.Data.SqlClient.SqlConnection.InfoMessage
  commentId: E:System.Data.SqlClient.SqlConnection.InfoMessage
  id: InfoMessage
  parent: System.Data.SqlClient.SqlConnection
  langs:
  - csharp
  - vb
  name: InfoMessage
  fullName: System.Data.SqlClient.SqlConnection.InfoMessage
  type: Event
  source:
    remote:
      path: src/System.Data.SqlClient/src/System/Data/SqlClient/SqlConnection.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: InfoMessage
    path: src/System.Data.SqlClient/src/System/Data/SqlClient/SqlConnection.cs
    startLine: 316
  assemblies:
  - System.Data.SqlClient
  namespace: System.Data.SqlClient
  summary: "\n<p>Occurs when SQL Server returns a warning or informational message.</p>\n"
  syntax:
    content: public event SqlInfoMessageEventHandler InfoMessage
    content.vb: Public Event InfoMessage As SqlInfoMessageEventHandler
    return:
      type: System.Data.SqlClient.SqlInfoMessageEventHandler
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  nameWithType: SqlConnection.InfoMessage
- uid: System.Data.SqlClient.SqlConnection.BeginDbTransaction(System.Data.IsolationLevel)
  commentId: M:System.Data.SqlClient.SqlConnection.BeginDbTransaction(System.Data.IsolationLevel)
  id: BeginDbTransaction(System.Data.IsolationLevel)
  parent: System.Data.SqlClient.SqlConnection
  langs:
  - csharp
  - vb
  name: BeginDbTransaction(IsolationLevel)
  fullName: System.Data.SqlClient.SqlConnection.BeginDbTransaction(System.Data.IsolationLevel)
  type: Method
  source:
    remote:
      path: src/System.Data.SqlClient/ref/System.Data.SqlClient.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: BeginDbTransaction
    path: src/System.Data.SqlClient/ref/System.Data.SqlClient.cs
    startLine: 338
  assemblies:
  - System.Data.SqlClient
  namespace: System.Data.SqlClient
  syntax:
    content: protected override Common.DbTransaction BeginDbTransaction(IsolationLevel isolationLevel)
    content.vb: Protected Overrides Function BeginDbTransaction(isolationLevel As IsolationLevel) As Common.DbTransaction
    parameters:
    - id: isolationLevel
      type: System.Data.IsolationLevel
    return:
      type: System.Data.Common.DbTransaction
  modifiers.csharp:
  - protected
  - override
  modifiers.vb:
  - Protected
  - Overrides
  nameWithType: SqlConnection.BeginDbTransaction(IsolationLevel)
- uid: System.Data.SqlClient.SqlConnection.BeginTransaction
  commentId: M:System.Data.SqlClient.SqlConnection.BeginTransaction
  id: BeginTransaction
  parent: System.Data.SqlClient.SqlConnection
  langs:
  - csharp
  - vb
  name: BeginTransaction()
  fullName: System.Data.SqlClient.SqlConnection.BeginTransaction()
  type: Method
  source:
    remote:
      path: src/System.Data.SqlClient/src/System/Data/SqlClient/SqlConnection.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: BeginTransaction
    path: src/System.Data.SqlClient/src/System/Data/SqlClient/SqlConnection.cs
    startLine: 353
  assemblies:
  - System.Data.SqlClient
  namespace: System.Data.SqlClient
  summary: "\n<p>Starts a database transaction.</p>\n"
  syntax:
    content: public SqlTransaction BeginTransaction()
    content.vb: Public Function BeginTransaction As SqlTransaction
    return:
      type: System.Data.SqlClient.SqlTransaction
      description: "\n<p>An object representing the new transaction.</p>\n"
  exceptions:
  - type: System.Data.SqlClient.SqlException
    commentId: T:System.Data.SqlClient.SqlException
    description: "\n<p>Parallel transactions are not allowed when using Multiple Active Result Sets (MARS).</p>\n"
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "\n<p>Parallel transactions are not supported. </p>\n"
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  nameWithType: SqlConnection.BeginTransaction()
- uid: System.Data.SqlClient.SqlConnection.BeginTransaction(System.Data.IsolationLevel)
  commentId: M:System.Data.SqlClient.SqlConnection.BeginTransaction(System.Data.IsolationLevel)
  id: BeginTransaction(System.Data.IsolationLevel)
  parent: System.Data.SqlClient.SqlConnection
  langs:
  - csharp
  - vb
  name: BeginTransaction(IsolationLevel)
  fullName: System.Data.SqlClient.SqlConnection.BeginTransaction(System.Data.IsolationLevel)
  type: Method
  source:
    remote:
      path: src/System.Data.SqlClient/ref/System.Data.SqlClient.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: BeginTransaction
    path: src/System.Data.SqlClient/ref/System.Data.SqlClient.cs
    startLine: 340
  assemblies:
  - System.Data.SqlClient
  namespace: System.Data.SqlClient
  summary: "\n<p>Starts a database transaction with the specified isolation level.</p>\n"
  syntax:
    content: public SqlTransaction BeginTransaction(IsolationLevel iso)
    content.vb: Public Function BeginTransaction(iso As IsolationLevel) As SqlTransaction
    parameters:
    - id: iso
      type: System.Data.IsolationLevel
      description: "\n<p>The isolation level under which the transaction should run. </p>\n"
    return:
      type: System.Data.SqlClient.SqlTransaction
      description: "\n<p>An object representing the new transaction.</p>\n"
  exceptions:
  - type: System.Data.SqlClient.SqlException
    commentId: T:System.Data.SqlClient.SqlException
    description: "\n<p>Parallel transactions are not allowed when using Multiple Active Result Sets (MARS).</p>\n"
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "\n<p>Parallel transactions are not supported. </p>\n"
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  nameWithType: SqlConnection.BeginTransaction(IsolationLevel)
- uid: System.Data.SqlClient.SqlConnection.BeginTransaction(System.Data.IsolationLevel,System.String)
  commentId: M:System.Data.SqlClient.SqlConnection.BeginTransaction(System.Data.IsolationLevel,System.String)
  id: BeginTransaction(System.Data.IsolationLevel,System.String)
  parent: System.Data.SqlClient.SqlConnection
  langs:
  - csharp
  - vb
  name: BeginTransaction(IsolationLevel, String)
  fullName: System.Data.SqlClient.SqlConnection.BeginTransaction(System.Data.IsolationLevel, System.String)
  type: Method
  source:
    remote:
      path: src/System.Data.SqlClient/ref/System.Data.SqlClient.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: BeginTransaction
    path: src/System.Data.SqlClient/ref/System.Data.SqlClient.cs
    startLine: 341
  assemblies:
  - System.Data.SqlClient
  namespace: System.Data.SqlClient
  summary: "\n<p>Starts a database transaction with the specified isolation level and transaction name.</p>\n"
  syntax:
    content: public SqlTransaction BeginTransaction(IsolationLevel iso, string transactionName)
    content.vb: Public Function BeginTransaction(iso As IsolationLevel, transactionName As String) As SqlTransaction
    parameters:
    - id: iso
      type: System.Data.IsolationLevel
      description: "\n<p>The isolation level under which the transaction should run. </p>\n"
    - id: transactionName
      type: System.String
      description: "\n<p>The name of the transaction. </p>\n"
    return:
      type: System.Data.SqlClient.SqlTransaction
      description: "\n<p>An object representing the new transaction.</p>\n"
  exceptions:
  - type: System.Data.SqlClient.SqlException
    commentId: T:System.Data.SqlClient.SqlException
    description: "\n<p>Parallel transactions are not allowed when using Multiple Active Result Sets (MARS).</p>\n"
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "\n<p>Parallel transactions are not supported. </p>\n"
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  nameWithType: SqlConnection.BeginTransaction(IsolationLevel, String)
- uid: System.Data.SqlClient.SqlConnection.BeginTransaction(System.String)
  commentId: M:System.Data.SqlClient.SqlConnection.BeginTransaction(System.String)
  id: BeginTransaction(System.String)
  parent: System.Data.SqlClient.SqlConnection
  langs:
  - csharp
  - vb
  name: BeginTransaction(String)
  fullName: System.Data.SqlClient.SqlConnection.BeginTransaction(System.String)
  type: Method
  source:
    remote:
      path: src/System.Data.SqlClient/src/System/Data/SqlClient/SqlConnection.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: BeginTransaction
    path: src/System.Data.SqlClient/src/System/Data/SqlClient/SqlConnection.cs
    startLine: 365
  assemblies:
  - System.Data.SqlClient
  namespace: System.Data.SqlClient
  summary: "\n<p>Starts a database transaction with the specified transaction name.</p>\n"
  syntax:
    content: public SqlTransaction BeginTransaction(string transactionName)
    content.vb: Public Function BeginTransaction(transactionName As String) As SqlTransaction
    parameters:
    - id: transactionName
      type: System.String
      description: "\n<p>The name of the transaction. </p>\n"
    return:
      type: System.Data.SqlClient.SqlTransaction
      description: "\n<p>An object representing the new transaction.</p>\n"
  exceptions:
  - type: System.Data.SqlClient.SqlException
    commentId: T:System.Data.SqlClient.SqlException
    description: "\n<p>Parallel transactions are not allowed when using Multiple Active Result Sets (MARS).</p>\n"
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "\n<p>Parallel transactions are not supported. </p>\n"
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  nameWithType: SqlConnection.BeginTransaction(String)
- uid: System.Data.SqlClient.SqlConnection.ChangeDatabase(System.String)
  commentId: M:System.Data.SqlClient.SqlConnection.ChangeDatabase(System.String)
  id: ChangeDatabase(System.String)
  parent: System.Data.SqlClient.SqlConnection
  langs:
  - csharp
  - vb
  name: ChangeDatabase(String)
  fullName: System.Data.SqlClient.SqlConnection.ChangeDatabase(System.String)
  type: Method
  source:
    remote:
      path: src/System.Data.SqlClient/src/System/Data/SqlClient/SqlConnection.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: ChangeDatabase
    path: src/System.Data.SqlClient/src/System/Data/SqlClient/SqlConnection.cs
    startLine: 420
  assemblies:
  - System.Data.SqlClient
  namespace: System.Data.SqlClient
  summary: "\n<p>Changes the current database for an open <xref href=\"System.Data.SqlClient.SqlConnection\" data-throw-if-not-resolved=\"false\"></xref>.</p>\n"
  syntax:
    content: public override void ChangeDatabase(string database)
    content.vb: Public Overrides Sub ChangeDatabase(database As String)
    parameters:
    - id: database
      type: System.String
      description: "\n<p>The name of the database to use instead of the current database. </p>\n"
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "\n<p>The database name is not valid.</p>\n"
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "\n<p>The connection is not open. </p>\n"
  - type: System.Data.SqlClient.SqlException
    commentId: T:System.Data.SqlClient.SqlException
    description: "\n<p>Cannot change the database. </p>\n"
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
  nameWithType: SqlConnection.ChangeDatabase(String)
- uid: System.Data.SqlClient.SqlConnection.ClearAllPools
  commentId: M:System.Data.SqlClient.SqlConnection.ClearAllPools
  id: ClearAllPools
  parent: System.Data.SqlClient.SqlConnection
  langs:
  - csharp
  - vb
  name: ClearAllPools()
  fullName: System.Data.SqlClient.SqlConnection.ClearAllPools()
  type: Method
  source:
    remote:
      path: src/System.Data.SqlClient/src/System/Data/SqlClient/SqlConnection.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: ClearAllPools
    path: src/System.Data.SqlClient/src/System/Data/SqlClient/SqlConnection.cs
    startLine: 435
  assemblies:
  - System.Data.SqlClient
  namespace: System.Data.SqlClient
  summary: "\n<p>Empties the connection pool.</p>\n"
  syntax:
    content: public static void ClearAllPools()
    content.vb: Public Shared Sub ClearAllPools
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  nameWithType: SqlConnection.ClearAllPools()
- uid: System.Data.SqlClient.SqlConnection.ClearPool(System.Data.SqlClient.SqlConnection)
  commentId: M:System.Data.SqlClient.SqlConnection.ClearPool(System.Data.SqlClient.SqlConnection)
  id: ClearPool(System.Data.SqlClient.SqlConnection)
  parent: System.Data.SqlClient.SqlConnection
  langs:
  - csharp
  - vb
  name: ClearPool(SqlConnection)
  fullName: System.Data.SqlClient.SqlConnection.ClearPool(System.Data.SqlClient.SqlConnection)
  type: Method
  source:
    remote:
      path: src/System.Data.SqlClient/src/System/Data/SqlClient/SqlConnection.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: ClearPool
    path: src/System.Data.SqlClient/src/System/Data/SqlClient/SqlConnection.cs
    startLine: 440
  assemblies:
  - System.Data.SqlClient
  namespace: System.Data.SqlClient
  summary: "\n<p>Empties the connection pool associated with the specified connection.</p>\n"
  syntax:
    content: public static void ClearPool(SqlConnection connection)
    content.vb: Public Shared Sub ClearPool(connection As SqlConnection)
    parameters:
    - id: connection
      type: System.Data.SqlClient.SqlConnection
      description: "\n<p>The <xref href=\"System.Data.SqlClient.SqlConnection\" data-throw-if-not-resolved=\"false\"></xref> to be cleared from the pool.</p>\n"
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  nameWithType: SqlConnection.ClearPool(SqlConnection)
- uid: System.Data.SqlClient.SqlConnection.Close
  commentId: M:System.Data.SqlClient.SqlConnection.Close
  id: Close
  parent: System.Data.SqlClient.SqlConnection
  langs:
  - csharp
  - vb
  name: Close()
  fullName: System.Data.SqlClient.SqlConnection.Close()
  type: Method
  source:
    remote:
      path: src/System.Data.SqlClient/src/System/Data/SqlClient/SqlConnection.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: Close
    path: src/System.Data.SqlClient/src/System/Data/SqlClient/SqlConnection.cs
    startLine: 462
  assemblies:
  - System.Data.SqlClient
  namespace: System.Data.SqlClient
  summary: "\n<p>Closes the connection to the database. This is the preferred method of closing any open connection.</p>\n"
  syntax:
    content: public override void Close()
    content.vb: Public Overrides Sub Close
  exceptions:
  - type: System.Data.SqlClient.SqlException
    commentId: T:System.Data.SqlClient.SqlException
    description: "\n<p>The connection-level error that occurred while opening the connection. </p>\n"
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
  nameWithType: SqlConnection.Close()
- uid: System.Data.SqlClient.SqlConnection.CreateCommand
  commentId: M:System.Data.SqlClient.SqlConnection.CreateCommand
  id: CreateCommand
  parent: System.Data.SqlClient.SqlConnection
  langs:
  - csharp
  - vb
  name: CreateCommand()
  fullName: System.Data.SqlClient.SqlConnection.CreateCommand()
  type: Method
  source:
    remote:
      path: src/System.Data.SqlClient/src/System/Data/SqlClient/SqlConnection.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: CreateCommand
    path: src/System.Data.SqlClient/src/System/Data/SqlClient/SqlConnection.cs
    startLine: 538
  assemblies:
  - System.Data.SqlClient
  namespace: System.Data.SqlClient
  summary: "\n<p>Creates and returns a <xref href=\"System.Data.SqlClient.SqlCommand\" data-throw-if-not-resolved=\"false\"></xref> object associated with the <xref href=\"System.Data.SqlClient.SqlConnection\" data-throw-if-not-resolved=\"false\"></xref>.</p>\n"
  syntax:
    content: public SqlCommand CreateCommand()
    content.vb: Public Function CreateCommand As SqlCommand
    return:
      type: System.Data.SqlClient.SqlCommand
      description: "\n<p>A <xref href=\"System.Data.SqlClient.SqlCommand\" data-throw-if-not-resolved=\"false\"></xref> object.</p>\n"
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  nameWithType: SqlConnection.CreateCommand()
- uid: System.Data.SqlClient.SqlConnection.CreateDbCommand
  commentId: M:System.Data.SqlClient.SqlConnection.CreateDbCommand
  id: CreateDbCommand
  parent: System.Data.SqlClient.SqlConnection
  langs:
  - csharp
  - vb
  name: CreateDbCommand()
  fullName: System.Data.SqlClient.SqlConnection.CreateDbCommand()
  type: Method
  source:
    remote:
      path: src/System.Data.SqlClient/src/System/Data/SqlClient/SqlConnectionHelper.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: CreateDbCommand
    path: src/System.Data.SqlClient/src/System/Data/SqlClient/SqlConnectionHelper.cs
    startLine: 132
  assemblies:
  - System.Data.SqlClient
  namespace: System.Data.SqlClient
  syntax:
    content: protected override DbCommand CreateDbCommand()
    content.vb: Protected Overrides Function CreateDbCommand As DbCommand
    return:
      type: DbCommand
  modifiers.csharp:
  - protected
  - override
  modifiers.vb:
  - Protected
  - Overrides
  nameWithType: SqlConnection.CreateDbCommand()
- uid: System.Data.SqlClient.SqlConnection.Open
  commentId: M:System.Data.SqlClient.SqlConnection.Open
  id: Open
  parent: System.Data.SqlClient.SqlConnection
  langs:
  - csharp
  - vb
  name: Open()
  fullName: System.Data.SqlClient.SqlConnection.Open()
  type: Method
  source:
    remote:
      path: src/System.Data.SqlClient/src/System/Data/SqlClient/SqlConnection.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: Open
    path: src/System.Data.SqlClient/src/System/Data/SqlClient/SqlConnection.cs
    startLine: 563
  assemblies:
  - System.Data.SqlClient
  namespace: System.Data.SqlClient
  summary: "\n<p>Opens a database connection with the property settings specified by the <xref href=\"System.Data.SqlClient.SqlConnection.ConnectionString\" data-throw-if-not-resolved=\"false\"></xref>.</p>\n"
  syntax:
    content: public override void Open()
    content.vb: Public Overrides Sub Open
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "\n<p>Cannot open a connection without specifying a data source or server.</p>\n<p>or</p>\n<p>The connection is already open.</p>\n"
  - type: System.Data.SqlClient.SqlException
    commentId: T:System.Data.SqlClient.SqlException
    description: "\n<p>A connection-level error occurred while opening the connection. If the <xref href=\"System.Data.SqlClient.SqlException.Number\" data-throw-if-not-resolved=\"false\"></xref> property contains the value 18487 or 18488, this indicates that the specified password has expired or must be reset. See the <xref href=\"System.Data.SqlClient.SqlConnection.ChangePassword(System.String,System.String)\" data-throw-if-not-resolved=\"false\"></xref> method for more information.</p>\n<p>The <strong><system.data.localdb></strong> tag in the app.config file has invalid or unknown elements.</p>\n"
  - type: System.Configuration.ConfigurationErrorsException
    commentId: T:System.Configuration.ConfigurationErrorsException
    description: "\n<p>There are two entries with the same name in the <strong><localdbinstances></strong> section.</p>\n"
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
  nameWithType: SqlConnection.Open()
- uid: System.Data.SqlClient.SqlConnection.OpenAsync(System.Threading.CancellationToken)
  commentId: M:System.Data.SqlClient.SqlConnection.OpenAsync(System.Threading.CancellationToken)
  id: OpenAsync(System.Threading.CancellationToken)
  parent: System.Data.SqlClient.SqlConnection
  langs:
  - csharp
  - vb
  name: OpenAsync(CancellationToken)
  fullName: System.Data.SqlClient.SqlConnection.OpenAsync(System.Threading.CancellationToken)
  type: Method
  source:
    remote:
      path: src/System.Data.SqlClient/src/System/Data/SqlClient/SqlConnection.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: OpenAsync
    path: src/System.Data.SqlClient/src/System/Data/SqlClient/SqlConnection.cs
    startLine: 807
  assemblies:
  - System.Data.SqlClient
  namespace: System.Data.SqlClient
  summary: "\n<p>An asynchronous version of <xref href=\"System.Data.SqlClient.SqlConnection.Open\" data-throw-if-not-resolved=\"false\"></xref>, which opens a database connection with the property settings specified by the <xref href=\"System.Data.SqlClient.SqlConnection.ConnectionString\" data-throw-if-not-resolved=\"false\"></xref>. The cancellation token can be used to request that the operation be abandoned before the connection timeout elapses.  Exceptions will be propagated via the returned Task. If the connection timeout time elapses without successfully connecting, the returned Task will be marked as faulted with an Exception. The implementation returns a Task without blocking the calling thread for both pooled and non-pooled connections.</p>\n"
  syntax:
    content: public override Task OpenAsync(CancellationToken cancellationToken)
    content.vb: Public Overrides Function OpenAsync(cancellationToken As CancellationToken) As Task
    parameters:
    - id: cancellationToken
      type: System.Threading.CancellationToken
      description: "\n<p>The cancellation instruction.</p>\n"
    return:
      type: System.Threading.Tasks.Task
      description: "\n<p>A task representing the asynchronous operation.</p>\n"
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "\n<p>Calling <xref href=\"System.Data.SqlClient.SqlConnection.OpenAsync(System.Threading.CancellationToken)\" data-throw-if-not-resolved=\"false\"></xref> more than once for the same instance before task completion.</p>\n<p>\n<strong>Context Connection=true</strong> is specified in the connection string.</p>\n<p>A connection was not available from the connection pool before the connection time out elapsed.</p>\n"
  - type: System.Data.SqlClient.SqlException
    commentId: T:System.Data.SqlClient.SqlException
    description: "\n<p>Any error returned by SQL Server that occurred while opening the connection.</p>\n"
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
  nameWithType: SqlConnection.OpenAsync(CancellationToken)
- uid: System.Data.SqlClient.SqlConnection.ResetStatistics
  commentId: M:System.Data.SqlClient.SqlConnection.ResetStatistics
  id: ResetStatistics
  parent: System.Data.SqlClient.SqlConnection
  langs:
  - csharp
  - vb
  name: ResetStatistics()
  fullName: System.Data.SqlClient.SqlConnection.ResetStatistics()
  type: Method
  source:
    remote:
      path: src/System.Data.SqlClient/src/System/Data/SqlClient/SqlConnection.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: ResetStatistics
    path: src/System.Data.SqlClient/src/System/Data/SqlClient/SqlConnection.cs
    startLine: 1231
  assemblies:
  - System.Data.SqlClient
  namespace: System.Data.SqlClient
  summary: "\n<p>If statistics gathering is enabled, all values are reset to zero.</p>\n"
  syntax:
    content: public void ResetStatistics()
    content.vb: Public Sub ResetStatistics
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  nameWithType: SqlConnection.ResetStatistics()
- uid: System.Data.SqlClient.SqlConnection.RetrieveStatistics
  commentId: M:System.Data.SqlClient.SqlConnection.RetrieveStatistics
  id: RetrieveStatistics
  parent: System.Data.SqlClient.SqlConnection
  langs:
  - csharp
  - vb
  name: RetrieveStatistics()
  fullName: System.Data.SqlClient.SqlConnection.RetrieveStatistics()
  type: Method
  source:
    remote:
      path: src/System.Data.SqlClient/src/System/Data/SqlClient/SqlConnection.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: RetrieveStatistics
    path: src/System.Data.SqlClient/src/System/Data/SqlClient/SqlConnection.cs
    startLine: 1244
  assemblies:
  - System.Data.SqlClient
  namespace: System.Data.SqlClient
  summary: "\n<p>Returns a name value pair collection of statistics at the point in time the method is called.</p>\n"
  syntax:
    content: public IDictionary RetrieveStatistics()
    content.vb: Public Function RetrieveStatistics As IDictionary
    return:
      type: System.Collections.IDictionary
      description: "\n<p>Returns a reference of type <xref href=\"System.Collections.IDictionary\" data-throw-if-not-resolved=\"false\"></xref> of <xref href=\"System.Collections.DictionaryEntry\" data-throw-if-not-resolved=\"false\"></xref> items.</p>\n"
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  nameWithType: SqlConnection.RetrieveStatistics()
- uid: System.Data.SqlClient.SqlConnection.Dispose(System.Boolean)
  commentId: M:System.Data.SqlClient.SqlConnection.Dispose(System.Boolean)
  id: Dispose(System.Boolean)
  parent: System.Data.SqlClient.SqlConnection
  langs:
  - csharp
  - vb
  name: Dispose(Boolean)
  fullName: System.Data.SqlClient.SqlConnection.Dispose(System.Boolean)
  type: Method
  source:
    remote:
      path: src/System.Data.SqlClient/src/System/Data/SqlClient/SqlConnectionHelper.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: Dispose
    path: src/System.Data.SqlClient/src/System/Data/SqlClient/SqlConnectionHelper.cs
    startLine: 142
  assemblies:
  - System.Data.SqlClient
  namespace: System.Data.SqlClient
  syntax:
    content: protected override void Dispose(bool disposing)
    content.vb: Protected Overrides Sub Dispose(disposing As Boolean)
    parameters:
    - id: disposing
      type: System.Boolean
  modifiers.csharp:
  - protected
  - override
  modifiers.vb:
  - Protected
  - Overrides
  nameWithType: SqlConnection.Dispose(Boolean)
references:
- uid: System.Data.SqlClient
  isExternal: false
  name: System.Data.SqlClient
  fullName: System.Data.SqlClient
  nameWithType: System.Data.SqlClient
  commentId: N:System.Data.SqlClient
- uid: System.Object
  parent: System
  isExternal: false
  name: Object
  fullName: System.Object
  nameWithType: Object
  commentId: T:System.Object
- uid: System.Data.Common.DbConnection
  parent: System.Data.Common
  isExternal: false
  name: Common.DbConnection
  fullName: System.Data.Common.DbConnection
  nameWithType: Common.DbConnection
  commentId: T:System.Data.Common.DbConnection
- uid: System
  isExternal: false
  name: System
  fullName: System
  nameWithType: System
  commentId: N:System
- uid: System.Data.Common
  isExternal: false
  name: System.Data.Common
  fullName: System.Data.Common
  nameWithType: System.Data.Common
  commentId: N:System.Data.Common
- uid: System.String
  parent: System
  isExternal: false
  name: String
  fullName: System.String
  nameWithType: String
  commentId: T:System.String
- uid: System.Guid
  parent: System
  isExternal: false
  name: Guid
  fullName: System.Guid
  nameWithType: Guid
  commentId: T:System.Guid
- uid: System.Int32
  parent: System
  isExternal: false
  name: Int32
  fullName: System.Int32
  nameWithType: Int32
  commentId: T:System.Int32
- uid: System.Boolean
  parent: System
  isExternal: false
  name: Boolean
  fullName: System.Boolean
  nameWithType: Boolean
  commentId: T:System.Boolean
- uid: System.Data.ConnectionState
  parent: System.Data
  isExternal: false
  name: ConnectionState
  fullName: System.Data.ConnectionState
  nameWithType: ConnectionState
  commentId: T:System.Data.ConnectionState
- uid: System.Data
  isExternal: false
  name: System.Data
  fullName: System.Data
  nameWithType: System.Data
  commentId: N:System.Data
- uid: System.Data.SqlClient.SqlInfoMessageEventHandler
  parent: System.Data.SqlClient
  isExternal: false
  name: SqlInfoMessageEventHandler
  fullName: System.Data.SqlClient.SqlInfoMessageEventHandler
  nameWithType: SqlInfoMessageEventHandler
  commentId: T:System.Data.SqlClient.SqlInfoMessageEventHandler
- uid: System.Data.IsolationLevel
  parent: System.Data
  isExternal: false
  name: IsolationLevel
  fullName: System.Data.IsolationLevel
  nameWithType: IsolationLevel
  commentId: T:System.Data.IsolationLevel
- uid: System.Data.Common.DbTransaction
  parent: System.Data.Common
  isExternal: false
  name: Common.DbTransaction
  fullName: System.Data.Common.DbTransaction
  nameWithType: Common.DbTransaction
  commentId: T:System.Data.Common.DbTransaction
- uid: System.Data.SqlClient.SqlTransaction
  parent: System.Data.SqlClient
  isExternal: false
  name: SqlTransaction
  fullName: System.Data.SqlClient.SqlTransaction
  nameWithType: SqlTransaction
  commentId: T:System.Data.SqlClient.SqlTransaction
- uid: System.Data.SqlClient.SqlConnection
  parent: System.Data.SqlClient
  isExternal: false
  name: SqlConnection
  fullName: System.Data.SqlClient.SqlConnection
  nameWithType: SqlConnection
  commentId: T:System.Data.SqlClient.SqlConnection
- uid: System.Data.SqlClient.SqlCommand
  parent: System.Data.SqlClient
  isExternal: false
  name: SqlCommand
  fullName: System.Data.SqlClient.SqlCommand
  nameWithType: SqlCommand
  commentId: T:System.Data.SqlClient.SqlCommand
- uid: System.Data.Common.DbCommand
  parent: System.Data.Common
  isExternal: false
  name: Common.DbCommand
  fullName: System.Data.Common.DbCommand
  nameWithType: Common.DbCommand
  commentId: T:System.Data.Common.DbCommand
- uid: System.Threading.CancellationToken
  parent: System.Threading
  isExternal: false
  name: CancellationToken
  fullName: System.Threading.CancellationToken
  nameWithType: CancellationToken
  commentId: T:System.Threading.CancellationToken
- uid: System.Threading.Tasks.Task
  parent: System.Threading.Tasks
  isExternal: false
  name: Task
  fullName: System.Threading.Tasks.Task
  nameWithType: Task
  commentId: T:System.Threading.Tasks.Task
- uid: System.Threading
  isExternal: false
  name: System.Threading
  fullName: System.Threading
  nameWithType: System.Threading
  commentId: N:System.Threading
- uid: System.Threading.Tasks
  isExternal: false
  name: System.Threading.Tasks
  fullName: System.Threading.Tasks
  nameWithType: System.Threading.Tasks
  commentId: N:System.Threading.Tasks
- uid: System.Collections.IDictionary
  parent: System.Collections
  isExternal: false
  name: IDictionary
  fullName: System.Collections.IDictionary
  nameWithType: IDictionary
  commentId: T:System.Collections.IDictionary
- uid: System.Collections
  isExternal: false
  name: System.Collections
  fullName: System.Collections
  nameWithType: System.Collections
  commentId: N:System.Collections
- uid: System.ArgumentException
  parent: System
  isExternal: false
  name: ArgumentException
  fullName: System.ArgumentException
  nameWithType: ArgumentException
  commentId: T:System.ArgumentException
- uid: System.InvalidOperationException
  parent: System
  isExternal: false
  name: InvalidOperationException
  fullName: System.InvalidOperationException
  nameWithType: InvalidOperationException
  commentId: T:System.InvalidOperationException
- uid: System.Data.SqlClient.SqlException
  isExternal: false
  name: SqlException
  fullName: System.Data.SqlClient.SqlException
  nameWithType: SqlException
  commentId: T:System.Data.SqlClient.SqlException
- uid: System.Configuration.ConfigurationErrorsException
