items:
- uid: Windows.Foundation.Rect
  commentId: T:Windows.Foundation.Rect
  id: Rect
  parent: Windows.Foundation
  children:
  - Windows.Foundation.Rect.#ctor(System.Double,System.Double,System.Double,System.Double)
  - Windows.Foundation.Rect.#ctor(Windows.Foundation.Point,Windows.Foundation.Point)
  - Windows.Foundation.Rect.#ctor(Windows.Foundation.Point,Windows.Foundation.Size)
  - Windows.Foundation.Rect.Bottom
  - Windows.Foundation.Rect.Contains(Windows.Foundation.Point)
  - Windows.Foundation.Rect.Empty
  - Windows.Foundation.Rect.Equals(System.Object)
  - Windows.Foundation.Rect.Equals(Windows.Foundation.Rect)
  - Windows.Foundation.Rect.GetHashCode
  - Windows.Foundation.Rect.Height
  - Windows.Foundation.Rect.Intersect(Windows.Foundation.Rect)
  - Windows.Foundation.Rect.IsEmpty
  - Windows.Foundation.Rect.Left
  - Windows.Foundation.Rect.op_Equality(Windows.Foundation.Rect,Windows.Foundation.Rect)
  - Windows.Foundation.Rect.op_Inequality(Windows.Foundation.Rect,Windows.Foundation.Rect)
  - Windows.Foundation.Rect.Right
  - Windows.Foundation.Rect.System#IFormattable#ToString(System.String,System.IFormatProvider)
  - Windows.Foundation.Rect.Top
  - Windows.Foundation.Rect.ToString
  - Windows.Foundation.Rect.ToString(System.IFormatProvider)
  - Windows.Foundation.Rect.Union(Windows.Foundation.Point)
  - Windows.Foundation.Rect.Union(Windows.Foundation.Rect)
  - Windows.Foundation.Rect.Width
  - Windows.Foundation.Rect.X
  - Windows.Foundation.Rect.Y
  langs:
  - csharp
  - vb
  name: Rect
  fullName: Windows.Foundation.Rect
  type: Struct
  source:
    remote:
      path: src/System.Runtime.WindowsRuntime/src/System/Windows/Rect.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: Rect
    path: src/System.Runtime.WindowsRuntime/src/System/Windows/Rect.cs
    startLine: 32
  assemblies:
  - System.Runtime.WindowsRuntime
  namespace: Windows.Foundation
  summary: Contains number values that represent the location and size of a rectangle.
  syntax:
    content: >-
      [StructLayout(LayoutKind.Sequential)]

      public struct Rect : IFormattable
    content.vb: >-
      <StructLayout(LayoutKind.Sequential)>

      Public Structure Rect
          Implements IFormattable
  implements:
  - System.IFormattable
  inheritedMembers:
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetType
  attributes:
  - type: System.Security.SecurityCriticalAttribute
    ctor: System.Security.SecurityCriticalAttribute.#ctor
    arguments: []
  - type: System.Runtime.InteropServices.StructLayoutAttribute
    ctor: System.Runtime.InteropServices.StructLayoutAttribute.#ctor(System.Runtime.InteropServices.LayoutKind)
    arguments:
    - type: System.Runtime.InteropServices.LayoutKind
      value: 0
  modifiers.csharp:
  - public
  - struct
  modifiers.vb:
  - Public
  - Structure
  nameWithType: Rect
- uid: Windows.Foundation.Rect.#ctor(System.Double,System.Double,System.Double,System.Double)
  commentId: M:Windows.Foundation.Rect.#ctor(System.Double,System.Double,System.Double,System.Double)
  id: '#ctor(System.Double,System.Double,System.Double,System.Double)'
  parent: Windows.Foundation.Rect
  langs:
  - csharp
  - vb
  name: Rect(Double, Double, Double, Double)
  fullName: Windows.Foundation.Rect.Rect(System.Double, System.Double, System.Double, System.Double)
  type: Constructor
  source:
    remote:
      path: src/System.Runtime.WindowsRuntime/src/System/Windows/Rect.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: .ctor
    path: src/System.Runtime.WindowsRuntime/src/System/Windows/Rect.cs
    startLine: 47
  assemblies:
  - System.Runtime.WindowsRuntime
  namespace: Windows.Foundation
  summary: Initializes a Rect structure that has the specified x-coordinate, y-coordinate, width, and height.
  syntax:
    content: public Rect(double x, double y, double width, double height)
    content.vb: Public Sub New(x As Double, y As Double, width As Double, height As Double)
    parameters:
    - id: x
      type: System.Double
      description: The x-coordinate of the top-left corner of the rectangle.
    - id: y
      type: System.Double
      description: The y-coordinate of the top-left corner of the rectangle.
    - id: width
      type: System.Double
      description: The width of the rectangle.
    - id: height
      type: System.Double
      description: The height of the rectangle.
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  nameWithType: Rect.Rect(Double, Double, Double, Double)
- uid: Windows.Foundation.Rect.#ctor(Windows.Foundation.Point,Windows.Foundation.Point)
  commentId: M:Windows.Foundation.Rect.#ctor(Windows.Foundation.Point,Windows.Foundation.Point)
  id: '#ctor(Windows.Foundation.Point,Windows.Foundation.Point)'
  parent: Windows.Foundation.Rect
  langs:
  - csharp
  - vb
  name: Rect(Point, Point)
  fullName: Windows.Foundation.Rect.Rect(Windows.Foundation.Point, Windows.Foundation.Point)
  type: Constructor
  source:
    remote:
      path: src/System.Runtime.WindowsRuntime/src/System/Windows/Rect.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: .ctor
    path: src/System.Runtime.WindowsRuntime/src/System/Windows/Rect.cs
    startLine: 63
  assemblies:
  - System.Runtime.WindowsRuntime
  namespace: Windows.Foundation
  summary: Initializes a Rect structure that is exactly large enough to contain the two specified points.
  syntax:
    content: public Rect(Point point1, Point point2)
    content.vb: Public Sub New(point1 As Point, point2 As Point)
    parameters:
    - id: point1
      type: Windows.Foundation.Point
      description: The first point that the new rectangle must contain.
    - id: point2
      type: Windows.Foundation.Point
      description: The second point that the new rectangle must contain.
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  nameWithType: Rect.Rect(Point, Point)
- uid: Windows.Foundation.Rect.#ctor(Windows.Foundation.Point,Windows.Foundation.Size)
  commentId: M:Windows.Foundation.Rect.#ctor(Windows.Foundation.Point,Windows.Foundation.Size)
  id: '#ctor(Windows.Foundation.Point,Windows.Foundation.Size)'
  parent: Windows.Foundation.Rect
  langs:
  - csharp
  - vb
  name: Rect(Point, Size)
  fullName: Windows.Foundation.Rect.Rect(Windows.Foundation.Point, Windows.Foundation.Size)
  type: Constructor
  source:
    remote:
      path: src/System.Runtime.WindowsRuntime/src/System/Windows/Rect.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: .ctor
    path: src/System.Runtime.WindowsRuntime/src/System/Windows/Rect.cs
    startLine: 73
  assemblies:
  - System.Runtime.WindowsRuntime
  namespace: Windows.Foundation
  summary: Initializes a Rect structure based on an origin and size.
  syntax:
    content: public Rect(Point location, Size size)
    content.vb: Public Sub New(location As Point, size As Size)
    parameters:
    - id: location
      type: Windows.Foundation.Point
      description: The origin of the new Rect.
    - id: size
      type: Windows.Foundation.Size
      description: The size of the new Rect.
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  nameWithType: Rect.Rect(Point, Size)
- uid: Windows.Foundation.Rect.Bottom
  commentId: P:Windows.Foundation.Rect.Bottom
  id: Bottom
  parent: Windows.Foundation.Rect
  langs:
  - csharp
  - vb
  name: Bottom
  fullName: Windows.Foundation.Rect.Bottom
  type: Property
  source:
    remote:
      path: src/System.Runtime.WindowsRuntime/src/System/Windows/Rect.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: Bottom
    path: src/System.Runtime.WindowsRuntime/src/System/Windows/Rect.cs
    startLine: 163
  assemblies:
  - System.Runtime.WindowsRuntime
  namespace: Windows.Foundation
  summary: Gets the y-axis value of the bottom of the rectangle.
  syntax:
    content: public double Bottom { get; }
    content.vb: Public ReadOnly Property Bottom As Double
    parameters: []
    return:
      type: System.Double
      description: "The y-axis value of the bottom of the rectangle. The data type is System.Double for C# or Microsoft Visual Basic, or float for VisualÂ C++ component extensions (C++/CX)."
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
  nameWithType: Rect.Bottom
- uid: Windows.Foundation.Rect.Empty
  commentId: P:Windows.Foundation.Rect.Empty
  id: Empty
  parent: Windows.Foundation.Rect
  langs:
  - csharp
  - vb
  name: Empty
  fullName: Windows.Foundation.Rect.Empty
  type: Property
  source:
    remote:
      path: src/System.Runtime.WindowsRuntime/src/System/Windows/Rect.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: Empty
    path: src/System.Runtime.WindowsRuntime/src/System/Windows/Rect.cs
    startLine: 176
  assemblies:
  - System.Runtime.WindowsRuntime
  namespace: Windows.Foundation
  summary: Gets a special value that represents a rectangle with no position or area.
  syntax:
    content: public static Rect Empty { get; }
    content.vb: Public Shared ReadOnly Property Empty As Rect
    parameters: []
    return:
      type: Windows.Foundation.Rect
      description: The empty rectangle.
  modifiers.csharp:
  - public
  - static
  - get
  modifiers.vb:
  - Public
  - Shared
  - ReadOnly
  nameWithType: Rect.Empty
- uid: Windows.Foundation.Rect.Height
  commentId: P:Windows.Foundation.Rect.Height
  id: Height
  parent: Windows.Foundation.Rect
  langs:
  - csharp
  - vb
  name: Height
  fullName: Windows.Foundation.Rect.Height
  type: Property
  source:
    remote:
      path: src/System.Runtime.WindowsRuntime/src/System/Windows/Rect.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: Height
    path: src/System.Runtime.WindowsRuntime/src/System/Windows/Rect.cs
    startLine: 128
  assemblies:
  - System.Runtime.WindowsRuntime
  namespace: Windows.Foundation
  summary: Gets or sets the height of the rectangle.
  syntax:
    content: public double Height { get; set; }
    content.vb: Public Property Height As Double
    parameters: []
    return:
      type: System.Double
      description: "A value that represents the height of the rectangle. The data type is System.Double for C# or Microsoft Visual Basic, or float for VisualÂ C++ component extensions (C++/CX). The default is 0."
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
  nameWithType: Rect.Height
- uid: Windows.Foundation.Rect.IsEmpty
  commentId: P:Windows.Foundation.Rect.IsEmpty
  id: IsEmpty
  parent: Windows.Foundation.Rect
  langs:
  - csharp
  - vb
  name: IsEmpty
  fullName: Windows.Foundation.Rect.IsEmpty
  type: Property
  source:
    remote:
      path: src/System.Runtime.WindowsRuntime/src/System/Windows/Rect.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: IsEmpty
    path: src/System.Runtime.WindowsRuntime/src/System/Windows/Rect.cs
    startLine: 181
  assemblies:
  - System.Runtime.WindowsRuntime
  namespace: Windows.Foundation
  summary: Gets a value that indicates whether the rectangle is the Empty rectangle.
  syntax:
    content: public bool IsEmpty { get; }
    content.vb: Public ReadOnly Property IsEmpty As Boolean
    parameters: []
    return:
      type: System.Boolean
      description: true if the rectangle is the Empty rectangle; otherwise, false.
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
  nameWithType: Rect.IsEmpty
- uid: Windows.Foundation.Rect.Left
  commentId: P:Windows.Foundation.Rect.Left
  id: Left
  parent: Windows.Foundation.Rect
  langs:
  - csharp
  - vb
  name: Left
  fullName: Windows.Foundation.Rect.Left
  type: Property
  source:
    remote:
      path: src/System.Runtime.WindowsRuntime/src/System/Windows/Rect.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: Left
    path: src/System.Runtime.WindowsRuntime/src/System/Windows/Rect.cs
    startLine: 140
  assemblies:
  - System.Runtime.WindowsRuntime
  namespace: Windows.Foundation
  summary: Gets the x-axis value of the left side of the rectangle.
  syntax:
    content: public double Left { get; }
    content.vb: Public ReadOnly Property Left As Double
    parameters: []
    return:
      type: System.Double
      description: "The x-axis value of the left side of the rectangle. The data type is System.Double for C# or Microsoft Visual Basic, or float for VisualÂ C++ component extensions (C++/CX)."
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
  nameWithType: Rect.Left
- uid: Windows.Foundation.Rect.Right
  commentId: P:Windows.Foundation.Rect.Right
  id: Right
  parent: Windows.Foundation.Rect
  langs:
  - csharp
  - vb
  name: Right
  fullName: Windows.Foundation.Rect.Right
  type: Property
  source:
    remote:
      path: src/System.Runtime.WindowsRuntime/src/System/Windows/Rect.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: Right
    path: src/System.Runtime.WindowsRuntime/src/System/Windows/Rect.cs
    startLine: 150
  assemblies:
  - System.Runtime.WindowsRuntime
  namespace: Windows.Foundation
  summary: Gets the x-axis value of the right side of the rectangle.
  syntax:
    content: public double Right { get; }
    content.vb: Public ReadOnly Property Right As Double
    parameters: []
    return:
      type: System.Double
      description: "The x-axis value of the right side of the rectangle. The data type is System.Double for C# or Microsoft Visual Basic, or float for VisualÂ C++ component extensions (C++/CX)."
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
  nameWithType: Rect.Right
- uid: Windows.Foundation.Rect.Top
  commentId: P:Windows.Foundation.Rect.Top
  id: Top
  parent: Windows.Foundation.Rect
  langs:
  - csharp
  - vb
  name: Top
  fullName: Windows.Foundation.Rect.Top
  type: Property
  source:
    remote:
      path: src/System.Runtime.WindowsRuntime/src/System/Windows/Rect.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: Top
    path: src/System.Runtime.WindowsRuntime/src/System/Windows/Rect.cs
    startLine: 145
  assemblies:
  - System.Runtime.WindowsRuntime
  namespace: Windows.Foundation
  summary: Gets the y-axis position of the top of the rectangle.
  syntax:
    content: public double Top { get; }
    content.vb: Public ReadOnly Property Top As Double
    parameters: []
    return:
      type: System.Double
      description: "The y-axis position of the top of the rectangle. The data type is System.Double for C# or Microsoft Visual Basic, or float for VisualÂ C++ component extensions (C++/CX)."
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
  nameWithType: Rect.Top
- uid: Windows.Foundation.Rect.Width
  commentId: P:Windows.Foundation.Rect.Width
  id: Width
  parent: Windows.Foundation.Rect
  langs:
  - csharp
  - vb
  name: Width
  fullName: Windows.Foundation.Rect.Width
  type: Property
  source:
    remote:
      path: src/System.Runtime.WindowsRuntime/src/System/Windows/Rect.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: Width
    path: src/System.Runtime.WindowsRuntime/src/System/Windows/Rect.cs
    startLine: 116
  assemblies:
  - System.Runtime.WindowsRuntime
  namespace: Windows.Foundation
  summary: Gets or sets the width of the rectangle.
  syntax:
    content: public double Width { get; set; }
    content.vb: Public Property Width As Double
    parameters: []
    return:
      type: System.Double
      description: "A value that represents the width of the rectangle in pixels. The data type is System.Double for C# or Microsoft Visual Basic, or float for VisualÂ C++ component extensions (C++/CX). The default is 0."
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
  nameWithType: Rect.Width
- uid: Windows.Foundation.Rect.X
  commentId: P:Windows.Foundation.Rect.X
  id: X
  parent: Windows.Foundation.Rect
  langs:
  - csharp
  - vb
  name: X
  fullName: Windows.Foundation.Rect.X
  type: Property
  source:
    remote:
      path: src/System.Runtime.WindowsRuntime/src/System/Windows/Rect.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: X
    path: src/System.Runtime.WindowsRuntime/src/System/Windows/Rect.cs
    startLine: 104
  assemblies:
  - System.Runtime.WindowsRuntime
  namespace: Windows.Foundation
  summary: Gets or sets the x-axis value of the left side of the rectangle.
  syntax:
    content: public double X { get; set; }
    content.vb: Public Property X As Double
    parameters: []
    return:
      type: System.Double
      description: "The x-axis value of the left side of the rectangle. The data type is System.Double for C# or Microsoft Visual Basic, or float for VisualÂ C++ component extensions (C++/CX). This value is interpreted as pixels within the coordinate space."
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
  nameWithType: Rect.X
- uid: Windows.Foundation.Rect.Y
  commentId: P:Windows.Foundation.Rect.Y
  id: Y
  parent: Windows.Foundation.Rect
  langs:
  - csharp
  - vb
  name: Y
  fullName: Windows.Foundation.Rect.Y
  type: Property
  source:
    remote:
      path: src/System.Runtime.WindowsRuntime/src/System/Windows/Rect.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: Y
    path: src/System.Runtime.WindowsRuntime/src/System/Windows/Rect.cs
    startLine: 110
  assemblies:
  - System.Runtime.WindowsRuntime
  namespace: Windows.Foundation
  summary: Gets or sets the y-axis value of the top side of the rectangle.
  syntax:
    content: public double Y { get; set; }
    content.vb: Public Property Y As Double
    parameters: []
    return:
      type: System.Double
      description: "The y-axis value of the top side of the rectangle. The data type is System.Double for C# or Microsoft Visual Basic, or float for VisualÂ C++ component extensions (C++/CX). This value is interpreted as pixels within the coordinate space."
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
  nameWithType: Rect.Y
- uid: Windows.Foundation.Rect.Contains(Windows.Foundation.Point)
  commentId: M:Windows.Foundation.Rect.Contains(Windows.Foundation.Point)
  id: Contains(Windows.Foundation.Point)
  parent: Windows.Foundation.Rect
  langs:
  - csharp
  - vb
  name: Contains(Point)
  fullName: Windows.Foundation.Rect.Contains(Windows.Foundation.Point)
  type: Method
  source:
    remote:
      path: src/System.Runtime.WindowsRuntime/src/System/Windows/Rect.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: Contains
    path: src/System.Runtime.WindowsRuntime/src/System/Windows/Rect.cs
    startLine: 186
  assemblies:
  - System.Runtime.WindowsRuntime
  namespace: Windows.Foundation
  summary: Indicates whether the rectangle described by the Rect contains the specified point.
  syntax:
    content: public bool Contains(Point point)
    content.vb: Public Function Contains(point As Point) As Boolean
    parameters:
    - id: point
      type: Windows.Foundation.Point
      description: The point to check.
    return:
      type: System.Boolean
      description: true if the rectangle described by the Rect contains the specified point; otherwise, false.
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  nameWithType: Rect.Contains(Point)
- uid: Windows.Foundation.Rect.Equals(System.Object)
  commentId: M:Windows.Foundation.Rect.Equals(System.Object)
  id: Equals(System.Object)
  parent: Windows.Foundation.Rect
  langs:
  - csharp
  - vb
  name: Equals(Object)
  fullName: Windows.Foundation.Rect.Equals(System.Object)
  type: Method
  source:
    remote:
      path: src/System.Runtime.WindowsRuntime/src/System/Windows/Rect.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: Equals
    path: src/System.Runtime.WindowsRuntime/src/System/Windows/Rect.cs
    startLine: 347
  assemblies:
  - System.Runtime.WindowsRuntime
  namespace: Windows.Foundation
  summary: Determines whether the specified object is equal to a Rect.
  syntax:
    content: public override bool Equals(object o)
    content.vb: Public Overrides Function Equals(o As Object) As Boolean
    parameters:
    - id: o
      type: System.Object
      description: Object to check for equality.
    return:
      type: System.Boolean
      description: true if o is equal to this Rect; otherwise, false.
  overridden: System.ValueType.Equals(System.Object)
  attributes:
  - type: System.Security.SecuritySafeCriticalAttribute
    ctor: System.Security.SecuritySafeCriticalAttribute.#ctor
    arguments: []
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
  nameWithType: Rect.Equals(Object)
- uid: Windows.Foundation.Rect.Equals(Windows.Foundation.Rect)
  commentId: M:Windows.Foundation.Rect.Equals(Windows.Foundation.Rect)
  id: Equals(Windows.Foundation.Rect)
  parent: Windows.Foundation.Rect
  langs:
  - csharp
  - vb
  name: Equals(Rect)
  fullName: Windows.Foundation.Rect.Equals(Windows.Foundation.Rect)
  type: Method
  source:
    remote:
      path: src/System.Runtime.WindowsRuntime/src/System/Windows/Rect.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: Equals
    path: src/System.Runtime.WindowsRuntime/src/System/Windows/Rect.cs
    startLine: 329
  assemblies:
  - System.Runtime.WindowsRuntime
  namespace: Windows.Foundation
  syntax:
    content: public bool Equals(Rect value)
    content.vb: Public Function Equals(value As Rect) As Boolean
    parameters:
    - id: value
      type: Windows.Foundation.Rect
    return:
      type: System.Boolean
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  nameWithType: Rect.Equals(Rect)
- uid: Windows.Foundation.Rect.GetHashCode
  commentId: M:Windows.Foundation.Rect.GetHashCode
  id: GetHashCode
  parent: Windows.Foundation.Rect
  langs:
  - csharp
  - vb
  name: GetHashCode()
  fullName: Windows.Foundation.Rect.GetHashCode()
  type: Method
  source:
    remote:
      path: src/System.Runtime.WindowsRuntime/src/System/Windows/Rect.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: GetHashCode
    path: src/System.Runtime.WindowsRuntime/src/System/Windows/Rect.cs
    startLine: 352
  assemblies:
  - System.Runtime.WindowsRuntime
  namespace: Windows.Foundation
  syntax:
    content: public override int GetHashCode()
    content.vb: Public Overrides Function GetHashCode As Integer
    return:
      type: System.Int32
  overridden: System.ValueType.GetHashCode
  attributes:
  - type: System.Security.SecuritySafeCriticalAttribute
    ctor: System.Security.SecuritySafeCriticalAttribute.#ctor
    arguments: []
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
  nameWithType: Rect.GetHashCode()
- uid: Windows.Foundation.Rect.Intersect(Windows.Foundation.Rect)
  commentId: M:Windows.Foundation.Rect.Intersect(Windows.Foundation.Rect)
  id: Intersect(Windows.Foundation.Rect)
  parent: Windows.Foundation.Rect
  langs:
  - csharp
  - vb
  name: Intersect(Rect)
  fullName: Windows.Foundation.Rect.Intersect(Windows.Foundation.Rect)
  type: Method
  source:
    remote:
      path: src/System.Runtime.WindowsRuntime/src/System/Windows/Rect.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: Intersect
    path: src/System.Runtime.WindowsRuntime/src/System/Windows/Rect.cs
    startLine: 191
  assemblies:
  - System.Runtime.WindowsRuntime
  namespace: Windows.Foundation
  summary: Finds the intersection of the rectangle represented by the current Rect and the rectangle represented by the specified Rect, and stores the result as the current Rect.
  syntax:
    content: public void Intersect(Rect rect)
    content.vb: Public Sub Intersect(rect As Rect)
    parameters:
    - id: rect
      type: Windows.Foundation.Rect
      description: The rectangle to intersect with the current rectangle.
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  nameWithType: Rect.Intersect(Rect)
- uid: Windows.Foundation.Rect.op_Equality(Windows.Foundation.Rect,Windows.Foundation.Rect)
  commentId: M:Windows.Foundation.Rect.op_Equality(Windows.Foundation.Rect,Windows.Foundation.Rect)
  id: op_Equality(Windows.Foundation.Rect,Windows.Foundation.Rect)
  parent: Windows.Foundation.Rect
  langs:
  - csharp
  - vb
  name: Equality(Rect, Rect)
  fullName: Windows.Foundation.Rect.Equality(Windows.Foundation.Rect, Windows.Foundation.Rect)
  type: Operator
  source:
    remote:
      path: src/System.Runtime.WindowsRuntime/src/System/Windows/Rect.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: op_Equality
    path: src/System.Runtime.WindowsRuntime/src/System/Windows/Rect.cs
    startLine: 334
  assemblies:
  - System.Runtime.WindowsRuntime
  namespace: Windows.Foundation
  summary: Compares two Rect structures for equality.
  syntax:
    content: public static bool operator ==(Rect rect1, Rect rect2)
    content.vb: Public Shared Operator =(rect1 As Rect, rect2 As Rect) As Boolean
    parameters:
    - id: rect1
      type: Windows.Foundation.Rect
      description: The first Rect structure to compare.
    - id: rect2
      type: Windows.Foundation.Rect
      description: The second Rect structure to compare.
    return:
      type: System.Boolean
      description: true if all values of rect1 and rect2 are equal; otherwise, false.
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  nameWithType: Rect.Equality(Rect, Rect)
- uid: Windows.Foundation.Rect.op_Inequality(Windows.Foundation.Rect,Windows.Foundation.Rect)
  commentId: M:Windows.Foundation.Rect.op_Inequality(Windows.Foundation.Rect,Windows.Foundation.Rect)
  id: op_Inequality(Windows.Foundation.Rect,Windows.Foundation.Rect)
  parent: Windows.Foundation.Rect
  langs:
  - csharp
  - vb
  name: Inequality(Rect, Rect)
  fullName: Windows.Foundation.Rect.Inequality(Windows.Foundation.Rect, Windows.Foundation.Rect)
  type: Operator
  source:
    remote:
      path: src/System.Runtime.WindowsRuntime/src/System/Windows/Rect.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: op_Inequality
    path: src/System.Runtime.WindowsRuntime/src/System/Windows/Rect.cs
    startLine: 342
  assemblies:
  - System.Runtime.WindowsRuntime
  namespace: Windows.Foundation
  syntax:
    content: public static bool operator !=(Rect rect1, Rect rect2)
    content.vb: Public Shared Operator <>(rect1 As Rect, rect2 As Rect) As Boolean
    parameters:
    - id: rect1
      type: Windows.Foundation.Rect
    - id: rect2
      type: Windows.Foundation.Rect
    return:
      type: System.Boolean
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  nameWithType: Rect.Inequality(Rect, Rect)
- uid: Windows.Foundation.Rect.ToString
  commentId: M:Windows.Foundation.Rect.ToString
  id: ToString
  parent: Windows.Foundation.Rect
  langs:
  - csharp
  - vb
  name: ToString()
  fullName: Windows.Foundation.Rect.ToString()
  type: Method
  source:
    remote:
      path: src/System.Runtime.WindowsRuntime/src/System/Windows/Rect.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: ToString
    path: src/System.Runtime.WindowsRuntime/src/System/Windows/Rect.cs
    startLine: 293
  assemblies:
  - System.Runtime.WindowsRuntime
  namespace: Windows.Foundation
  syntax:
    content: public override string ToString()
    content.vb: Public Overrides Function ToString As String
    return:
      type: System.String
  overridden: System.ValueType.ToString
  attributes:
  - type: System.Security.SecuritySafeCriticalAttribute
    ctor: System.Security.SecuritySafeCriticalAttribute.#ctor
    arguments: []
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
  nameWithType: Rect.ToString()
- uid: Windows.Foundation.Rect.ToString(System.IFormatProvider)
  commentId: M:Windows.Foundation.Rect.ToString(System.IFormatProvider)
  id: ToString(System.IFormatProvider)
  parent: Windows.Foundation.Rect
  langs:
  - csharp
  - vb
  name: ToString(IFormatProvider)
  fullName: Windows.Foundation.Rect.ToString(System.IFormatProvider)
  type: Method
  source:
    remote:
      path: src/System.Runtime.WindowsRuntime/src/System/Windows/Rect.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: ToString
    path: src/System.Runtime.WindowsRuntime/src/System/Windows/Rect.cs
    startLine: 299
  assemblies:
  - System.Runtime.WindowsRuntime
  namespace: Windows.Foundation
  summary: Creates a String representation of this Rect.
  syntax:
    content: public string ToString(IFormatProvider provider)
    content.vb: Public Function ToString(provider As IFormatProvider) As String
    parameters:
    - id: provider
      type: System.IFormatProvider
      description: Culture-specific formatting information.
    return:
      type: System.String
      description: A string representation of the current rectangle that is determined by the specified format provider.
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  nameWithType: Rect.ToString(IFormatProvider)
- uid: Windows.Foundation.Rect.Union(Windows.Foundation.Point)
  commentId: M:Windows.Foundation.Rect.Union(Windows.Foundation.Point)
  id: Union(Windows.Foundation.Point)
  parent: Windows.Foundation.Rect
  langs:
  - csharp
  - vb
  name: Union(Point)
  fullName: Windows.Foundation.Rect.Union(Windows.Foundation.Point)
  type: Method
  source:
    remote:
      path: src/System.Runtime.WindowsRuntime/src/System/Windows/Rect.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: Union
    path: src/System.Runtime.WindowsRuntime/src/System/Windows/Rect.cs
    startLine: 252
  assemblies:
  - System.Runtime.WindowsRuntime
  namespace: Windows.Foundation
  summary: Expands the rectangle represented by the current Rect exactly enough to contain the specified point.
  syntax:
    content: public void Union(Point point)
    content.vb: Public Sub Union(point As Point)
    parameters:
    - id: point
      type: Windows.Foundation.Point
      description: The point to include.
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  nameWithType: Rect.Union(Point)
- uid: Windows.Foundation.Rect.Union(Windows.Foundation.Rect)
  commentId: M:Windows.Foundation.Rect.Union(Windows.Foundation.Rect)
  id: Union(Windows.Foundation.Rect)
  parent: Windows.Foundation.Rect
  langs:
  - csharp
  - vb
  name: Union(Rect)
  fullName: Windows.Foundation.Rect.Union(Windows.Foundation.Rect)
  type: Method
  source:
    remote:
      path: src/System.Runtime.WindowsRuntime/src/System/Windows/Rect.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: Union
    path: src/System.Runtime.WindowsRuntime/src/System/Windows/Rect.cs
    startLine: 211
  assemblies:
  - System.Runtime.WindowsRuntime
  namespace: Windows.Foundation
  summary: Expands the rectangle represented by the current Rect exactly enough to contain the specified rectangle.
  syntax:
    content: public void Union(Rect rect)
    content.vb: Public Sub Union(rect As Rect)
    parameters:
    - id: rect
      type: Windows.Foundation.Rect
      description: The rectangle to include.
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  nameWithType: Rect.Union(Rect)
- uid: Windows.Foundation.Rect.System#IFormattable#ToString(System.String,System.IFormatProvider)
  commentId: M:Windows.Foundation.Rect.System#IFormattable#ToString(System.String,System.IFormatProvider)
  id: System#IFormattable#ToString(System.String,System.IFormatProvider)
  isEii: true
  parent: Windows.Foundation.Rect
  langs:
  - csharp
  - vb
  name: IFormattable.ToString(String, IFormatProvider)
  fullName: Windows.Foundation.Rect.System.IFormattable.ToString(System.String, System.IFormatProvider)
  type: Method
  source:
    remote:
      path: src/System.Runtime.WindowsRuntime/src/System/Windows/Rect.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: System.IFormattable.ToString
    path: src/System.Runtime.WindowsRuntime/src/System/Windows/Rect.cs
    startLine: 305
  assemblies:
  - System.Runtime.WindowsRuntime
  namespace: Windows.Foundation
  syntax:
    content: string IFormattable.ToString(string format, IFormatProvider provider)
    content.vb: Function System.IFormattable.ToString(format As String, provider As IFormatProvider) As String Implements IFormattable.ToString
    parameters:
    - id: format
      type: System.String
    - id: provider
      type: System.IFormatProvider
    return:
      type: System.String
  implements:
  - System.IFormattable.ToString(System.String,System.IFormatProvider)
  attributes:
  - type: System.Security.SecuritySafeCriticalAttribute
    ctor: System.Security.SecuritySafeCriticalAttribute.#ctor
    arguments: []
  name.vb: System.IFormattable.ToString(String, IFormatProvider)
  nameWithType: Rect.IFormattable.ToString(String, IFormatProvider)
  nameWithType.vb: Rect.System.IFormattable.ToString(String, IFormatProvider)
references:
- uid: Windows.Foundation
  isExternal: false
  name: Windows.Foundation
  fullName: Windows.Foundation
  nameWithType: Windows.Foundation
  commentId: N:Windows.Foundation
- uid: System.IFormattable
  parent: System
  isExternal: false
  name: IFormattable
  fullName: System.IFormattable
  nameWithType: IFormattable
  commentId: T:System.IFormattable
- uid: System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
  nameWithType: Object.Equals(Object, Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
  nameWithType: Object.ReferenceEquals(Object, Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
- uid: System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  nameWithType: Object.GetType()
  commentId: M:System.Object.GetType
- uid: System
  isExternal: false
  name: System
  fullName: System
  nameWithType: System
  commentId: N:System
- uid: System.Object
  parent: System
  isExternal: false
  name: Object
  fullName: System.Object
  nameWithType: Object
  commentId: T:System.Object
- uid: System.Double
  parent: System
  isExternal: false
  name: Double
  fullName: System.Double
  nameWithType: Double
  commentId: T:System.Double
- uid: Windows.Foundation.Point
  parent: Windows.Foundation
  isExternal: false
  name: Point
  fullName: Windows.Foundation.Point
  nameWithType: Point
  commentId: T:Windows.Foundation.Point
- uid: Windows.Foundation.Size
  parent: Windows.Foundation
  isExternal: false
  name: Size
  fullName: Windows.Foundation.Size
  nameWithType: Size
  commentId: T:Windows.Foundation.Size
- uid: Windows.Foundation.Rect
  parent: Windows.Foundation
  isExternal: false
  name: Rect
  fullName: Windows.Foundation.Rect
  nameWithType: Rect
  commentId: T:Windows.Foundation.Rect
- uid: System.Boolean
  parent: System
  isExternal: false
  name: Boolean
  fullName: System.Boolean
  nameWithType: Boolean
  commentId: T:System.Boolean
- uid: System.ValueType.Equals(System.Object)
  parent: System.ValueType
  isExternal: true
  name: Equals(Object)
  fullName: System.ValueType.Equals(System.Object)
  spec.csharp:
  - uid: System.ValueType.Equals(System.Object)
    name: Equals
    fullName: System.ValueType.Equals
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.ValueType.Equals(System.Object)
    name: Equals
    fullName: System.ValueType.Equals
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
  nameWithType: ValueType.Equals(Object)
  commentId: M:System.ValueType.Equals(System.Object)
- uid: System.ValueType
  parent: System
  isExternal: false
  name: ValueType
  fullName: System.ValueType
  nameWithType: ValueType
  commentId: T:System.ValueType
- uid: System.ValueType.GetHashCode
  parent: System.ValueType
  isExternal: false
  name: GetHashCode()
  fullName: System.ValueType.GetHashCode()
  spec.csharp:
  - uid: System.ValueType.GetHashCode
    name: GetHashCode
    fullName: System.ValueType.GetHashCode
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.ValueType.GetHashCode
    name: GetHashCode
    fullName: System.ValueType.GetHashCode
  - name: (
    fullName: (
  - name: )
    fullName: )
  nameWithType: ValueType.GetHashCode()
  commentId: M:System.ValueType.GetHashCode
- uid: System.Int32
  parent: System
  isExternal: false
  name: Int32
  fullName: System.Int32
  nameWithType: Int32
  commentId: T:System.Int32
- uid: System.ValueType.ToString
  parent: System.ValueType
  isExternal: false
  name: ToString()
  fullName: System.ValueType.ToString()
  spec.csharp:
  - uid: System.ValueType.ToString
    name: ToString
    fullName: System.ValueType.ToString
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.ValueType.ToString
    name: ToString
    fullName: System.ValueType.ToString
  - name: (
    fullName: (
  - name: )
    fullName: )
  nameWithType: ValueType.ToString()
  commentId: M:System.ValueType.ToString
- uid: System.String
  parent: System
  isExternal: false
  name: String
  fullName: System.String
  nameWithType: String
  commentId: T:System.String
- uid: System.IFormatProvider
  parent: System
  isExternal: false
  name: IFormatProvider
  fullName: System.IFormatProvider
  nameWithType: IFormatProvider
  commentId: T:System.IFormatProvider
- uid: System.IFormattable.ToString(System.String,System.IFormatProvider)
  parent: System.IFormattable
  isExternal: true
  name: ToString(String, IFormatProvider)
  fullName: System.IFormattable.ToString(System.String, System.IFormatProvider)
  spec.csharp:
  - uid: System.IFormattable.ToString(System.String,System.IFormatProvider)
    name: ToString
    fullName: System.IFormattable.ToString
  - name: (
    fullName: (
  - uid: System.String
    name: String
    fullName: System.String
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.IFormatProvider
    name: IFormatProvider
    fullName: System.IFormatProvider
  - name: )
    fullName: )
  spec.vb:
  - uid: System.IFormattable.ToString(System.String,System.IFormatProvider)
    name: ToString
    fullName: System.IFormattable.ToString
  - name: (
    fullName: (
  - uid: System.String
    name: String
    fullName: System.String
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.IFormatProvider
    name: IFormatProvider
    fullName: System.IFormatProvider
  - name: )
    fullName: )
  nameWithType: IFormattable.ToString(String, IFormatProvider)
  commentId: M:System.IFormattable.ToString(System.String,System.IFormatProvider)
