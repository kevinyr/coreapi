items:
- uid: System.ServiceModel.Channels.IRequestChannel
  commentId: T:System.ServiceModel.Channels.IRequestChannel
  id: IRequestChannel
  parent: System.ServiceModel.Channels
  children:
  - System.ServiceModel.Channels.IRequestChannel.BeginRequest(System.ServiceModel.Channels.Message,System.AsyncCallback,System.Object)
  - System.ServiceModel.Channels.IRequestChannel.BeginRequest(System.ServiceModel.Channels.Message,System.TimeSpan,System.AsyncCallback,System.Object)
  - System.ServiceModel.Channels.IRequestChannel.EndRequest(System.IAsyncResult)
  - System.ServiceModel.Channels.IRequestChannel.RemoteAddress
  - System.ServiceModel.Channels.IRequestChannel.Request(System.ServiceModel.Channels.Message)
  - System.ServiceModel.Channels.IRequestChannel.Request(System.ServiceModel.Channels.Message,System.TimeSpan)
  - System.ServiceModel.Channels.IRequestChannel.Via
  langs:
  - csharp
  - vb
  name: IRequestChannel
  fullName: System.ServiceModel.Channels.IRequestChannel
  type: Interface
  source:
    remote:
      path: src/System.Private.ServiceModel/src/System/ServiceModel/Channels/IRequestChannel.cs
      branch: master
      repo: https://github.com/dotnet/wcf.git
    id: IRequestChannel
    path: src/System.Private.ServiceModel/src/System/ServiceModel/Channels/IRequestChannel.cs
    startLine: 9
  assemblies:
  - System.ServiceModel.Primitives
  namespace: System.ServiceModel.Channels
  summary: "\n<p>Defines the contract that a channel must implement to be on the requesting side of a request-reply communication between messaging endpoints. </p>\n"
  syntax:
    content: 'public interface IRequestChannel : IChannel, ICommunicationObject'
    content.vb: >-
      Public Interface IRequestChannel
          Inherits IChannel
  inheritedMembers:
  - System.ServiceModel.Channels.IChannel.GetProperty``1
  - System.ServiceModel.ICommunicationObject.State
  - System.ServiceModel.ICommunicationObject.Closed
  - System.ServiceModel.ICommunicationObject.Closing
  - System.ServiceModel.ICommunicationObject.Faulted
  - System.ServiceModel.ICommunicationObject.Opened
  - System.ServiceModel.ICommunicationObject.Opening
  - System.ServiceModel.ICommunicationObject.Abort
  - System.ServiceModel.ICommunicationObject.BeginClose(System.AsyncCallback,System.Object)
  - System.ServiceModel.ICommunicationObject.BeginClose(System.TimeSpan,System.AsyncCallback,System.Object)
  - System.ServiceModel.ICommunicationObject.BeginOpen(System.AsyncCallback,System.Object)
  - System.ServiceModel.ICommunicationObject.BeginOpen(System.TimeSpan,System.AsyncCallback,System.Object)
  - System.ServiceModel.ICommunicationObject.Close
  - System.ServiceModel.ICommunicationObject.Close(System.TimeSpan)
  - System.ServiceModel.ICommunicationObject.EndClose(System.IAsyncResult)
  - System.ServiceModel.ICommunicationObject.EndOpen(System.IAsyncResult)
  - System.ServiceModel.ICommunicationObject.Open
  - System.ServiceModel.ICommunicationObject.Open(System.TimeSpan)
  modifiers.csharp:
  - public
  - interface
  modifiers.vb:
  - Public
  - Interface
  nameWithType: IRequestChannel
- uid: System.ServiceModel.Channels.IRequestChannel.RemoteAddress
  commentId: P:System.ServiceModel.Channels.IRequestChannel.RemoteAddress
  id: RemoteAddress
  parent: System.ServiceModel.Channels.IRequestChannel
  langs:
  - csharp
  - vb
  name: RemoteAddress
  fullName: System.ServiceModel.Channels.IRequestChannel.RemoteAddress
  type: Property
  source:
    remote:
      path: src/System.Private.ServiceModel/src/System/ServiceModel/Channels/IRequestChannel.cs
      branch: master
      repo: https://github.com/dotnet/wcf.git
    id: RemoteAddress
    path: src/System.Private.ServiceModel/src/System/ServiceModel/Channels/IRequestChannel.cs
    startLine: 11
  assemblies:
  - System.ServiceModel.Primitives
  namespace: System.ServiceModel.Channels
  summary: "\n<p>Gets the remote address to which the request channel sends messages. </p>\n"
  syntax:
    content: EndpointAddress RemoteAddress { get; }
    content.vb: ReadOnly Property RemoteAddress As EndpointAddress
    parameters: []
    return:
      type: System.ServiceModel.EndpointAddress
      description: "\n<p>The <xref href=\"System.ServiceModel.EndpointAddress\" data-throw-if-not-resolved=\"false\"></xref> to which the request channel sends messages. </p>\n"
  modifiers.csharp:
  - get
  modifiers.vb:
  - ReadOnly
  nameWithType: IRequestChannel.RemoteAddress
- uid: System.ServiceModel.Channels.IRequestChannel.Via
  commentId: P:System.ServiceModel.Channels.IRequestChannel.Via
  id: Via
  parent: System.ServiceModel.Channels.IRequestChannel
  langs:
  - csharp
  - vb
  name: Via
  fullName: System.ServiceModel.Channels.IRequestChannel.Via
  type: Property
  source:
    remote:
      path: src/System.Private.ServiceModel/src/System/ServiceModel/Channels/IRequestChannel.cs
      branch: master
      repo: https://github.com/dotnet/wcf.git
    id: Via
    path: src/System.Private.ServiceModel/src/System/ServiceModel/Channels/IRequestChannel.cs
    startLine: 12
  assemblies:
  - System.ServiceModel.Primitives
  namespace: System.ServiceModel.Channels
  summary: "\n<p>Gets the transport address to which the request is send.</p>\n"
  syntax:
    content: Uri Via { get; }
    content.vb: ReadOnly Property Via As Uri
    parameters: []
    return:
      type: Uri
      description: "\n<p>The <xref href=\"System.Uri\" data-throw-if-not-resolved=\"false\"></xref> that contains the transport address to which the message is sent.</p>\n"
  modifiers.csharp:
  - get
  modifiers.vb:
  - ReadOnly
  nameWithType: IRequestChannel.Via
- uid: System.ServiceModel.Channels.IRequestChannel.BeginRequest(System.ServiceModel.Channels.Message,System.AsyncCallback,System.Object)
  commentId: M:System.ServiceModel.Channels.IRequestChannel.BeginRequest(System.ServiceModel.Channels.Message,System.AsyncCallback,System.Object)
  id: BeginRequest(System.ServiceModel.Channels.Message,System.AsyncCallback,System.Object)
  parent: System.ServiceModel.Channels.IRequestChannel
  langs:
  - csharp
  - vb
  name: BeginRequest(Message, AsyncCallback, Object)
  fullName: System.ServiceModel.Channels.IRequestChannel.BeginRequest(System.ServiceModel.Channels.Message, System.AsyncCallback, System.Object)
  type: Method
  source:
    remote:
      path: src/System.Private.ServiceModel/src/System/ServiceModel/Channels/IRequestChannel.cs
      branch: master
      repo: https://github.com/dotnet/wcf.git
    id: BeginRequest
    path: src/System.Private.ServiceModel/src/System/ServiceModel/Channels/IRequestChannel.cs
    startLine: 16
  assemblies:
  - System.ServiceModel.Primitives
  namespace: System.ServiceModel.Channels
  summary: "\n<p>Begins an asynchronous operation to transmit a request message to the reply side of a request-reply message exchange. </p>\n"
  syntax:
    content: IAsyncResult BeginRequest(Message message, AsyncCallback callback, object state)
    content.vb: Function BeginRequest(message As Message, callback As AsyncCallback, state As Object) As IAsyncResult
    parameters:
    - id: message
      type: System.ServiceModel.Channels.Message
      description: "\n<p>The request <xref href=\"System.ServiceModel.Channels.Message\" data-throw-if-not-resolved=\"false\"></xref> to be transmitted.</p>\n"
    - id: callback
      type: System.AsyncCallback
      description: "\n<p>The <xref href=\"System.AsyncCallback\" data-throw-if-not-resolved=\"false\"></xref> delegate that receives the notification of the completion of the asynchronous operation transmitting a request message.</p>\n"
    - id: state
      type: System.Object
      description: "\n<p>An object, specified by the application, that contains state information associated with the asynchronous operation transmitting a request message.</p>\n"
    return:
      type: System.IAsyncResult
      description: "\n<p>The <xref href=\"System.IAsyncResult\" data-throw-if-not-resolved=\"false\"></xref> that references the asynchronous message transmission. </p>\n"
  nameWithType: IRequestChannel.BeginRequest(Message, AsyncCallback, Object)
- uid: System.ServiceModel.Channels.IRequestChannel.BeginRequest(System.ServiceModel.Channels.Message,System.TimeSpan,System.AsyncCallback,System.Object)
  commentId: M:System.ServiceModel.Channels.IRequestChannel.BeginRequest(System.ServiceModel.Channels.Message,System.TimeSpan,System.AsyncCallback,System.Object)
  id: BeginRequest(System.ServiceModel.Channels.Message,System.TimeSpan,System.AsyncCallback,System.Object)
  parent: System.ServiceModel.Channels.IRequestChannel
  langs:
  - csharp
  - vb
  name: BeginRequest(Message, TimeSpan, AsyncCallback, Object)
  fullName: System.ServiceModel.Channels.IRequestChannel.BeginRequest(System.ServiceModel.Channels.Message, System.TimeSpan, System.AsyncCallback, System.Object)
  type: Method
  source:
    remote:
      path: src/System.Private.ServiceModel/src/System/ServiceModel/Channels/IRequestChannel.cs
      branch: master
      repo: https://github.com/dotnet/wcf.git
    id: BeginRequest
    path: src/System.Private.ServiceModel/src/System/ServiceModel/Channels/IRequestChannel.cs
    startLine: 17
  assemblies:
  - System.ServiceModel.Primitives
  namespace: System.ServiceModel.Channels
  summary: "\n<p>Begins an asynchronous operation to transmit a request message to the reply side of a request-reply message exchange within a specified interval of time.</p>\n"
  syntax:
    content: IAsyncResult BeginRequest(Message message, TimeSpan timeout, AsyncCallback callback, object state)
    content.vb: Function BeginRequest(message As Message, timeout As TimeSpan, callback As AsyncCallback, state As Object) As IAsyncResult
    parameters:
    - id: message
      type: System.ServiceModel.Channels.Message
      description: "\n<p>The request <xref href=\"System.ServiceModel.Channels.Message\" data-throw-if-not-resolved=\"false\"></xref> to be transmitted.</p>\n"
    - id: timeout
      type: System.TimeSpan
      description: "\n<p>The <xref href=\"System.TimeSpan\" data-throw-if-not-resolved=\"false\"></xref> that specifies the interval of time within which a response must be received. (For defaults, see the Remarks section.)</p>\n"
    - id: callback
      type: System.AsyncCallback
      description: "\n<p>The <xref href=\"System.AsyncCallback\" data-throw-if-not-resolved=\"false\"></xref> delegate that receives the notification of the completion of the asynchronous operation transmitting a request message.</p>\n"
    - id: state
      type: System.Object
      description: "\n<p>An object, specified by the application, that contains state information associated with the asynchronous operation transmitting a request message.</p>\n"
    return:
      type: System.IAsyncResult
      description: "\n<p>The <xref href=\"System.IAsyncResult\" data-throw-if-not-resolved=\"false\"></xref> that references the asynchronous message transmission. </p>\n"
  nameWithType: IRequestChannel.BeginRequest(Message, TimeSpan, AsyncCallback, Object)
- uid: System.ServiceModel.Channels.IRequestChannel.EndRequest(System.IAsyncResult)
  commentId: M:System.ServiceModel.Channels.IRequestChannel.EndRequest(System.IAsyncResult)
  id: EndRequest(System.IAsyncResult)
  parent: System.ServiceModel.Channels.IRequestChannel
  langs:
  - csharp
  - vb
  name: EndRequest(IAsyncResult)
  fullName: System.ServiceModel.Channels.IRequestChannel.EndRequest(System.IAsyncResult)
  type: Method
  source:
    remote:
      path: src/System.Private.ServiceModel/src/System/ServiceModel/Channels/IRequestChannel.cs
      branch: master
      repo: https://github.com/dotnet/wcf.git
    id: EndRequest
    path: src/System.Private.ServiceModel/src/System/ServiceModel/Channels/IRequestChannel.cs
    startLine: 18
  assemblies:
  - System.ServiceModel.Primitives
  namespace: System.ServiceModel.Channels
  summary: "\n<p>Completes an asynchronous operation to return a message-based response to a transmitted request. </p>\n"
  syntax:
    content: Message EndRequest(IAsyncResult result)
    content.vb: Function EndRequest(result As IAsyncResult) As Message
    parameters:
    - id: result
      type: System.IAsyncResult
      description: "\n<p>The <xref href=\"System.IAsyncResult\" data-throw-if-not-resolved=\"false\"></xref> returned by a call to the <xref href=\"System.ServiceModel.Channels.IInputChannel.BeginReceive\" data-throw-if-not-resolved=\"false\"></xref> method. </p>\n"
    return:
      type: System.ServiceModel.Channels.Message
      description: "\n<p>The <xref href=\"System.ServiceModel.Channels.Message\" data-throw-if-not-resolved=\"false\"></xref> received in response to the request. </p>\n"
  nameWithType: IRequestChannel.EndRequest(IAsyncResult)
- uid: System.ServiceModel.Channels.IRequestChannel.Request(System.ServiceModel.Channels.Message)
  commentId: M:System.ServiceModel.Channels.IRequestChannel.Request(System.ServiceModel.Channels.Message)
  id: Request(System.ServiceModel.Channels.Message)
  parent: System.ServiceModel.Channels.IRequestChannel
  langs:
  - csharp
  - vb
  name: Request(Message)
  fullName: System.ServiceModel.Channels.IRequestChannel.Request(System.ServiceModel.Channels.Message)
  type: Method
  source:
    remote:
      path: src/System.Private.ServiceModel/src/System/ServiceModel/Channels/IRequestChannel.cs
      branch: master
      repo: https://github.com/dotnet/wcf.git
    id: Request
    path: src/System.Private.ServiceModel/src/System/ServiceModel/Channels/IRequestChannel.cs
    startLine: 14
  assemblies:
  - System.ServiceModel.Primitives
  namespace: System.ServiceModel.Channels
  summary: "\n<p>Sends a message-based request and returns the correlated message-based response. </p>\n"
  syntax:
    content: Message Request(Message message)
    content.vb: Function Request(message As Message) As Message
    parameters:
    - id: message
      type: System.ServiceModel.Channels.Message
      description: "\n<p>The request <xref href=\"System.ServiceModel.Channels.Message\" data-throw-if-not-resolved=\"false\"></xref> to be transmitted.</p>\n"
    return:
      type: System.ServiceModel.Channels.Message
      description: "\n<p>The <xref href=\"System.ServiceModel.Channels.Message\" data-throw-if-not-resolved=\"false\"></xref> received in response to the request. </p>\n"
  nameWithType: IRequestChannel.Request(Message)
- uid: System.ServiceModel.Channels.IRequestChannel.Request(System.ServiceModel.Channels.Message,System.TimeSpan)
  commentId: M:System.ServiceModel.Channels.IRequestChannel.Request(System.ServiceModel.Channels.Message,System.TimeSpan)
  id: Request(System.ServiceModel.Channels.Message,System.TimeSpan)
  parent: System.ServiceModel.Channels.IRequestChannel
  langs:
  - csharp
  - vb
  name: Request(Message, TimeSpan)
  fullName: System.ServiceModel.Channels.IRequestChannel.Request(System.ServiceModel.Channels.Message, System.TimeSpan)
  type: Method
  source:
    remote:
      path: src/System.Private.ServiceModel/src/System/ServiceModel/Channels/IRequestChannel.cs
      branch: master
      repo: https://github.com/dotnet/wcf.git
    id: Request
    path: src/System.Private.ServiceModel/src/System/ServiceModel/Channels/IRequestChannel.cs
    startLine: 15
  assemblies:
  - System.ServiceModel.Primitives
  namespace: System.ServiceModel.Channels
  summary: "\n<p>Sends a message-based request and returns the correlated message-based response within a specified interval of time.</p>\n"
  syntax:
    content: Message Request(Message message, TimeSpan timeout)
    content.vb: Function Request(message As Message, timeout As TimeSpan) As Message
    parameters:
    - id: message
      type: System.ServiceModel.Channels.Message
      description: "\n<p>The request <xref href=\"System.ServiceModel.Channels.Message\" data-throw-if-not-resolved=\"false\"></xref> to be transmitted.</p>\n"
    - id: timeout
      type: System.TimeSpan
      description: "\n<p>The <xref href=\"System.TimeSpan\" data-throw-if-not-resolved=\"false\"></xref> that specifies the interval of time within which a response must be received.</p>\n"
    return:
      type: System.ServiceModel.Channels.Message
      description: "\n<p>The <xref href=\"System.ServiceModel.Channels.Message\" data-throw-if-not-resolved=\"false\"></xref> received in response to the request. </p>\n"
  nameWithType: IRequestChannel.Request(Message, TimeSpan)
references:
- uid: System.ServiceModel.Channels
  isExternal: false
  name: System.ServiceModel.Channels
  fullName: System.ServiceModel.Channels
  nameWithType: System.ServiceModel.Channels
  commentId: N:System.ServiceModel.Channels
- uid: System.ServiceModel.Channels.IChannel.GetProperty``1
  parent: System.ServiceModel.Channels.IChannel
  definition: System.ServiceModel.Channels.IChannel.GetProperty``1
  isExternal: false
  name: GetProperty<T>()
  fullName: System.ServiceModel.Channels.IChannel.GetProperty<T>()
  fullname.vb: System.ServiceModel.Channels.IChannel.GetProperty(Of T)()
  name.vb: GetProperty(Of T)()
  spec.csharp:
  - uid: System.ServiceModel.Channels.IChannel.GetProperty``1
    name: GetProperty<T>
    fullName: System.ServiceModel.Channels.IChannel.GetProperty<T>
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.ServiceModel.Channels.IChannel.GetProperty``1
    name: GetProperty(Of T)
    fullName: System.ServiceModel.Channels.IChannel.GetProperty(Of T)
  - name: (
    fullName: (
  - name: )
    fullName: )
  nameWithType: IChannel.GetProperty<T>()
  nameWithType.vb: IChannel.GetProperty(Of T)()
  commentId: M:System.ServiceModel.Channels.IChannel.GetProperty``1
- uid: System.ServiceModel.ICommunicationObject.State
  parent: System.ServiceModel.ICommunicationObject
  isExternal: false
  name: State
  fullName: System.ServiceModel.ICommunicationObject.State
  nameWithType: ICommunicationObject.State
  commentId: P:System.ServiceModel.ICommunicationObject.State
- uid: System.ServiceModel.ICommunicationObject.Closed
  parent: System.ServiceModel.ICommunicationObject
  isExternal: false
  name: Closed
  fullName: System.ServiceModel.ICommunicationObject.Closed
  nameWithType: ICommunicationObject.Closed
  commentId: E:System.ServiceModel.ICommunicationObject.Closed
- uid: System.ServiceModel.ICommunicationObject.Closing
  parent: System.ServiceModel.ICommunicationObject
  isExternal: false
  name: Closing
  fullName: System.ServiceModel.ICommunicationObject.Closing
  nameWithType: ICommunicationObject.Closing
  commentId: E:System.ServiceModel.ICommunicationObject.Closing
- uid: System.ServiceModel.ICommunicationObject.Faulted
  parent: System.ServiceModel.ICommunicationObject
  isExternal: false
  name: Faulted
  fullName: System.ServiceModel.ICommunicationObject.Faulted
  nameWithType: ICommunicationObject.Faulted
  commentId: E:System.ServiceModel.ICommunicationObject.Faulted
- uid: System.ServiceModel.ICommunicationObject.Opened
  parent: System.ServiceModel.ICommunicationObject
  isExternal: false
  name: Opened
  fullName: System.ServiceModel.ICommunicationObject.Opened
  nameWithType: ICommunicationObject.Opened
  commentId: E:System.ServiceModel.ICommunicationObject.Opened
- uid: System.ServiceModel.ICommunicationObject.Opening
  parent: System.ServiceModel.ICommunicationObject
  isExternal: false
  name: Opening
  fullName: System.ServiceModel.ICommunicationObject.Opening
  nameWithType: ICommunicationObject.Opening
  commentId: E:System.ServiceModel.ICommunicationObject.Opening
- uid: System.ServiceModel.ICommunicationObject.Abort
  parent: System.ServiceModel.ICommunicationObject
  isExternal: false
  name: Abort()
  fullName: System.ServiceModel.ICommunicationObject.Abort()
  spec.csharp:
  - uid: System.ServiceModel.ICommunicationObject.Abort
    name: Abort
    fullName: System.ServiceModel.ICommunicationObject.Abort
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.ServiceModel.ICommunicationObject.Abort
    name: Abort
    fullName: System.ServiceModel.ICommunicationObject.Abort
  - name: (
    fullName: (
  - name: )
    fullName: )
  nameWithType: ICommunicationObject.Abort()
  commentId: M:System.ServiceModel.ICommunicationObject.Abort
- uid: System.ServiceModel.ICommunicationObject.BeginClose(System.AsyncCallback,System.Object)
  parent: System.ServiceModel.ICommunicationObject
  isExternal: true
  name: BeginClose(AsyncCallback, Object)
  fullName: System.ServiceModel.ICommunicationObject.BeginClose(System.AsyncCallback, System.Object)
  spec.csharp:
  - uid: System.ServiceModel.ICommunicationObject.BeginClose(System.AsyncCallback,System.Object)
    name: BeginClose
    fullName: System.ServiceModel.ICommunicationObject.BeginClose
  - name: (
    fullName: (
  - uid: System.AsyncCallback
    name: AsyncCallback
    fullName: System.AsyncCallback
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.ServiceModel.ICommunicationObject.BeginClose(System.AsyncCallback,System.Object)
    name: BeginClose
    fullName: System.ServiceModel.ICommunicationObject.BeginClose
  - name: (
    fullName: (
  - uid: System.AsyncCallback
    name: AsyncCallback
    fullName: System.AsyncCallback
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
  nameWithType: ICommunicationObject.BeginClose(AsyncCallback, Object)
  commentId: M:System.ServiceModel.ICommunicationObject.BeginClose(System.AsyncCallback,System.Object)
- uid: System.ServiceModel.ICommunicationObject.BeginClose(System.TimeSpan,System.AsyncCallback,System.Object)
  parent: System.ServiceModel.ICommunicationObject
  isExternal: true
  name: BeginClose(TimeSpan, AsyncCallback, Object)
  fullName: System.ServiceModel.ICommunicationObject.BeginClose(System.TimeSpan, System.AsyncCallback, System.Object)
  spec.csharp:
  - uid: System.ServiceModel.ICommunicationObject.BeginClose(System.TimeSpan,System.AsyncCallback,System.Object)
    name: BeginClose
    fullName: System.ServiceModel.ICommunicationObject.BeginClose
  - name: (
    fullName: (
  - uid: System.TimeSpan
    name: TimeSpan
    fullName: System.TimeSpan
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.AsyncCallback
    name: AsyncCallback
    fullName: System.AsyncCallback
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.ServiceModel.ICommunicationObject.BeginClose(System.TimeSpan,System.AsyncCallback,System.Object)
    name: BeginClose
    fullName: System.ServiceModel.ICommunicationObject.BeginClose
  - name: (
    fullName: (
  - uid: System.TimeSpan
    name: TimeSpan
    fullName: System.TimeSpan
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.AsyncCallback
    name: AsyncCallback
    fullName: System.AsyncCallback
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
  nameWithType: ICommunicationObject.BeginClose(TimeSpan, AsyncCallback, Object)
  commentId: M:System.ServiceModel.ICommunicationObject.BeginClose(System.TimeSpan,System.AsyncCallback,System.Object)
- uid: System.ServiceModel.ICommunicationObject.BeginOpen(System.AsyncCallback,System.Object)
  parent: System.ServiceModel.ICommunicationObject
  isExternal: true
  name: BeginOpen(AsyncCallback, Object)
  fullName: System.ServiceModel.ICommunicationObject.BeginOpen(System.AsyncCallback, System.Object)
  spec.csharp:
  - uid: System.ServiceModel.ICommunicationObject.BeginOpen(System.AsyncCallback,System.Object)
    name: BeginOpen
    fullName: System.ServiceModel.ICommunicationObject.BeginOpen
  - name: (
    fullName: (
  - uid: System.AsyncCallback
    name: AsyncCallback
    fullName: System.AsyncCallback
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.ServiceModel.ICommunicationObject.BeginOpen(System.AsyncCallback,System.Object)
    name: BeginOpen
    fullName: System.ServiceModel.ICommunicationObject.BeginOpen
  - name: (
    fullName: (
  - uid: System.AsyncCallback
    name: AsyncCallback
    fullName: System.AsyncCallback
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
  nameWithType: ICommunicationObject.BeginOpen(AsyncCallback, Object)
  commentId: M:System.ServiceModel.ICommunicationObject.BeginOpen(System.AsyncCallback,System.Object)
- uid: System.ServiceModel.ICommunicationObject.BeginOpen(System.TimeSpan,System.AsyncCallback,System.Object)
  parent: System.ServiceModel.ICommunicationObject
  isExternal: true
  name: BeginOpen(TimeSpan, AsyncCallback, Object)
  fullName: System.ServiceModel.ICommunicationObject.BeginOpen(System.TimeSpan, System.AsyncCallback, System.Object)
  spec.csharp:
  - uid: System.ServiceModel.ICommunicationObject.BeginOpen(System.TimeSpan,System.AsyncCallback,System.Object)
    name: BeginOpen
    fullName: System.ServiceModel.ICommunicationObject.BeginOpen
  - name: (
    fullName: (
  - uid: System.TimeSpan
    name: TimeSpan
    fullName: System.TimeSpan
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.AsyncCallback
    name: AsyncCallback
    fullName: System.AsyncCallback
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.ServiceModel.ICommunicationObject.BeginOpen(System.TimeSpan,System.AsyncCallback,System.Object)
    name: BeginOpen
    fullName: System.ServiceModel.ICommunicationObject.BeginOpen
  - name: (
    fullName: (
  - uid: System.TimeSpan
    name: TimeSpan
    fullName: System.TimeSpan
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.AsyncCallback
    name: AsyncCallback
    fullName: System.AsyncCallback
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
  nameWithType: ICommunicationObject.BeginOpen(TimeSpan, AsyncCallback, Object)
  commentId: M:System.ServiceModel.ICommunicationObject.BeginOpen(System.TimeSpan,System.AsyncCallback,System.Object)
- uid: System.ServiceModel.ICommunicationObject.Close
  parent: System.ServiceModel.ICommunicationObject
  isExternal: false
  name: Close()
  fullName: System.ServiceModel.ICommunicationObject.Close()
  spec.csharp:
  - uid: System.ServiceModel.ICommunicationObject.Close
    name: Close
    fullName: System.ServiceModel.ICommunicationObject.Close
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.ServiceModel.ICommunicationObject.Close
    name: Close
    fullName: System.ServiceModel.ICommunicationObject.Close
  - name: (
    fullName: (
  - name: )
    fullName: )
  nameWithType: ICommunicationObject.Close()
  commentId: M:System.ServiceModel.ICommunicationObject.Close
- uid: System.ServiceModel.ICommunicationObject.Close(System.TimeSpan)
  parent: System.ServiceModel.ICommunicationObject
  isExternal: true
  name: Close(TimeSpan)
  fullName: System.ServiceModel.ICommunicationObject.Close(System.TimeSpan)
  spec.csharp:
  - uid: System.ServiceModel.ICommunicationObject.Close(System.TimeSpan)
    name: Close
    fullName: System.ServiceModel.ICommunicationObject.Close
  - name: (
    fullName: (
  - uid: System.TimeSpan
    name: TimeSpan
    fullName: System.TimeSpan
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.ServiceModel.ICommunicationObject.Close(System.TimeSpan)
    name: Close
    fullName: System.ServiceModel.ICommunicationObject.Close
  - name: (
    fullName: (
  - uid: System.TimeSpan
    name: TimeSpan
    fullName: System.TimeSpan
    isExternal: true
  - name: )
    fullName: )
  nameWithType: ICommunicationObject.Close(TimeSpan)
  commentId: M:System.ServiceModel.ICommunicationObject.Close(System.TimeSpan)
- uid: System.ServiceModel.ICommunicationObject.EndClose(System.IAsyncResult)
  parent: System.ServiceModel.ICommunicationObject
  isExternal: true
  name: EndClose(IAsyncResult)
  fullName: System.ServiceModel.ICommunicationObject.EndClose(System.IAsyncResult)
  spec.csharp:
  - uid: System.ServiceModel.ICommunicationObject.EndClose(System.IAsyncResult)
    name: EndClose
    fullName: System.ServiceModel.ICommunicationObject.EndClose
  - name: (
    fullName: (
  - uid: System.IAsyncResult
    name: IAsyncResult
    fullName: System.IAsyncResult
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.ServiceModel.ICommunicationObject.EndClose(System.IAsyncResult)
    name: EndClose
    fullName: System.ServiceModel.ICommunicationObject.EndClose
  - name: (
    fullName: (
  - uid: System.IAsyncResult
    name: IAsyncResult
    fullName: System.IAsyncResult
    isExternal: true
  - name: )
    fullName: )
  nameWithType: ICommunicationObject.EndClose(IAsyncResult)
  commentId: M:System.ServiceModel.ICommunicationObject.EndClose(System.IAsyncResult)
- uid: System.ServiceModel.ICommunicationObject.EndOpen(System.IAsyncResult)
  parent: System.ServiceModel.ICommunicationObject
  isExternal: true
  name: EndOpen(IAsyncResult)
  fullName: System.ServiceModel.ICommunicationObject.EndOpen(System.IAsyncResult)
  spec.csharp:
  - uid: System.ServiceModel.ICommunicationObject.EndOpen(System.IAsyncResult)
    name: EndOpen
    fullName: System.ServiceModel.ICommunicationObject.EndOpen
  - name: (
    fullName: (
  - uid: System.IAsyncResult
    name: IAsyncResult
    fullName: System.IAsyncResult
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.ServiceModel.ICommunicationObject.EndOpen(System.IAsyncResult)
    name: EndOpen
    fullName: System.ServiceModel.ICommunicationObject.EndOpen
  - name: (
    fullName: (
  - uid: System.IAsyncResult
    name: IAsyncResult
    fullName: System.IAsyncResult
    isExternal: true
  - name: )
    fullName: )
  nameWithType: ICommunicationObject.EndOpen(IAsyncResult)
  commentId: M:System.ServiceModel.ICommunicationObject.EndOpen(System.IAsyncResult)
- uid: System.ServiceModel.ICommunicationObject.Open
  parent: System.ServiceModel.ICommunicationObject
  isExternal: false
  name: Open()
  fullName: System.ServiceModel.ICommunicationObject.Open()
  spec.csharp:
  - uid: System.ServiceModel.ICommunicationObject.Open
    name: Open
    fullName: System.ServiceModel.ICommunicationObject.Open
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.ServiceModel.ICommunicationObject.Open
    name: Open
    fullName: System.ServiceModel.ICommunicationObject.Open
  - name: (
    fullName: (
  - name: )
    fullName: )
  nameWithType: ICommunicationObject.Open()
  commentId: M:System.ServiceModel.ICommunicationObject.Open
- uid: System.ServiceModel.ICommunicationObject.Open(System.TimeSpan)
  parent: System.ServiceModel.ICommunicationObject
  isExternal: true
  name: Open(TimeSpan)
  fullName: System.ServiceModel.ICommunicationObject.Open(System.TimeSpan)
  spec.csharp:
  - uid: System.ServiceModel.ICommunicationObject.Open(System.TimeSpan)
    name: Open
    fullName: System.ServiceModel.ICommunicationObject.Open
  - name: (
    fullName: (
  - uid: System.TimeSpan
    name: TimeSpan
    fullName: System.TimeSpan
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.ServiceModel.ICommunicationObject.Open(System.TimeSpan)
    name: Open
    fullName: System.ServiceModel.ICommunicationObject.Open
  - name: (
    fullName: (
  - uid: System.TimeSpan
    name: TimeSpan
    fullName: System.TimeSpan
    isExternal: true
  - name: )
    fullName: )
  nameWithType: ICommunicationObject.Open(TimeSpan)
  commentId: M:System.ServiceModel.ICommunicationObject.Open(System.TimeSpan)
- uid: System.ServiceModel.Channels.IChannel
  parent: System.ServiceModel.Channels
  isExternal: false
  name: IChannel
  fullName: System.ServiceModel.Channels.IChannel
  nameWithType: IChannel
  commentId: T:System.ServiceModel.Channels.IChannel
- uid: System.ServiceModel.ICommunicationObject
  parent: System.ServiceModel
  isExternal: false
  name: ICommunicationObject
  fullName: System.ServiceModel.ICommunicationObject
  nameWithType: ICommunicationObject
  commentId: T:System.ServiceModel.ICommunicationObject
- uid: System.ServiceModel
  isExternal: false
  name: System.ServiceModel
  fullName: System.ServiceModel
  nameWithType: System.ServiceModel
  commentId: N:System.ServiceModel
- uid: System.ServiceModel.EndpointAddress
  parent: System.ServiceModel
  isExternal: false
  name: EndpointAddress
  fullName: System.ServiceModel.EndpointAddress
  nameWithType: EndpointAddress
  commentId: T:System.ServiceModel.EndpointAddress
- uid: System.Uri
  parent: System
  isExternal: false
  name: Uri
  fullName: System.Uri
  nameWithType: Uri
  commentId: T:System.Uri
- uid: System
  isExternal: false
  name: System
  fullName: System
  nameWithType: System
  commentId: N:System
- uid: System.ServiceModel.Channels.Message
  parent: System.ServiceModel.Channels
  isExternal: false
  name: Message
  fullName: System.ServiceModel.Channels.Message
  nameWithType: Message
  commentId: T:System.ServiceModel.Channels.Message
- uid: System.AsyncCallback
  parent: System
  isExternal: false
  name: AsyncCallback
  fullName: System.AsyncCallback
  nameWithType: AsyncCallback
  commentId: T:System.AsyncCallback
- uid: System.Object
  parent: System
  isExternal: false
  name: Object
  fullName: System.Object
  nameWithType: Object
  commentId: T:System.Object
- uid: System.IAsyncResult
  parent: System
  isExternal: false
  name: IAsyncResult
  fullName: System.IAsyncResult
  nameWithType: IAsyncResult
  commentId: T:System.IAsyncResult
- uid: System.TimeSpan
  parent: System
  isExternal: false
  name: TimeSpan
  fullName: System.TimeSpan
  nameWithType: TimeSpan
  commentId: T:System.TimeSpan
