items:
- uid: System.Security.Cryptography.X509Certificates.X509ChainPolicy
  commentId: T:System.Security.Cryptography.X509Certificates.X509ChainPolicy
  id: X509ChainPolicy
  parent: System.Security.Cryptography.X509Certificates
  children:
  - System.Security.Cryptography.X509Certificates.X509ChainPolicy.#ctor
  - System.Security.Cryptography.X509Certificates.X509ChainPolicy.ApplicationPolicy
  - System.Security.Cryptography.X509Certificates.X509ChainPolicy.CertificatePolicy
  - System.Security.Cryptography.X509Certificates.X509ChainPolicy.ExtraStore
  - System.Security.Cryptography.X509Certificates.X509ChainPolicy.Reset
  - System.Security.Cryptography.X509Certificates.X509ChainPolicy.RevocationFlag
  - System.Security.Cryptography.X509Certificates.X509ChainPolicy.RevocationMode
  - System.Security.Cryptography.X509Certificates.X509ChainPolicy.UrlRetrievalTimeout
  - System.Security.Cryptography.X509Certificates.X509ChainPolicy.VerificationFlags
  - System.Security.Cryptography.X509Certificates.X509ChainPolicy.VerificationTime
  langs:
  - csharp
  - vb
  name: X509ChainPolicy
  fullName: System.Security.Cryptography.X509Certificates.X509ChainPolicy
  type: Class
  source:
    remote:
      path: src/System.Security.Cryptography.X509Certificates/ref/System.Security.Cryptography.X509Certificates.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: X509ChainPolicy
    path: src/System.Security.Cryptography.X509Certificates/ref/System.Security.Cryptography.X509Certificates.cs
    startLine: 255
  assemblies:
  - System.Security.Cryptography.X509Certificates
  namespace: System.Security.Cryptography.X509Certificates
  summary: "\n<p>Represents the chain policy to be applied when building an X509 certificate chain. This class cannot be inherited.</p>\n"
  syntax:
    content: public sealed class X509ChainPolicy
    content.vb: Public NotInheritable Class X509ChainPolicy
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  modifiers.csharp:
  - public
  - sealed
  - class
  modifiers.vb:
  - Public
  - NotInheritable
  - Class
  nameWithType: X509ChainPolicy
- uid: System.Security.Cryptography.X509Certificates.X509ChainPolicy.#ctor
  commentId: M:System.Security.Cryptography.X509Certificates.X509ChainPolicy.#ctor
  id: '#ctor'
  parent: System.Security.Cryptography.X509Certificates.X509ChainPolicy
  langs:
  - csharp
  - vb
  name: X509ChainPolicy()
  fullName: System.Security.Cryptography.X509Certificates.X509ChainPolicy.X509ChainPolicy()
  type: Constructor
  source:
    remote:
      path: src/System.Security.Cryptography.X509Certificates/ref/System.Security.Cryptography.X509Certificates.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: .ctor
    path: src/System.Security.Cryptography.X509Certificates/ref/System.Security.Cryptography.X509Certificates.cs
    startLine: 257
  assemblies:
  - System.Security.Cryptography.X509Certificates
  namespace: System.Security.Cryptography.X509Certificates
  summary: "\n<p>Initializes a new instance of the <xref href=\"System.Security.Cryptography.X509Certificates.X509ChainPolicy\" data-throw-if-not-resolved=\"false\"></xref> class. </p>\n"
  syntax:
    content: public X509ChainPolicy()
    content.vb: Public Sub New
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  nameWithType: X509ChainPolicy.X509ChainPolicy()
- uid: System.Security.Cryptography.X509Certificates.X509ChainPolicy.ApplicationPolicy
  commentId: P:System.Security.Cryptography.X509Certificates.X509ChainPolicy.ApplicationPolicy
  id: ApplicationPolicy
  parent: System.Security.Cryptography.X509Certificates.X509ChainPolicy
  langs:
  - csharp
  - vb
  name: ApplicationPolicy
  fullName: System.Security.Cryptography.X509Certificates.X509ChainPolicy.ApplicationPolicy
  type: Property
  source:
    remote:
      path: src/System.Security.Cryptography.X509Certificates/ref/System.Security.Cryptography.X509Certificates.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: ApplicationPolicy
    path: src/System.Security.Cryptography.X509Certificates/ref/System.Security.Cryptography.X509Certificates.cs
    startLine: 258
  assemblies:
  - System.Security.Cryptography.X509Certificates
  namespace: System.Security.Cryptography.X509Certificates
  summary: "\n<p>Gets a collection of object identifiers (OIDs) specifying which application policies or enhanced key usages (EKUs) the certificate supports.</p>\n"
  syntax:
    content: public OidCollection ApplicationPolicy { get; }
    content.vb: Public ReadOnly Property ApplicationPolicy As OidCollection
    parameters: []
    return:
      type: System.Security.Cryptography.OidCollection
      description: "\n<p>An <xref href=\"System.Security.Cryptography.OidCollection\" data-throw-if-not-resolved=\"false\"></xref>  object.</p>\n"
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
  nameWithType: X509ChainPolicy.ApplicationPolicy
- uid: System.Security.Cryptography.X509Certificates.X509ChainPolicy.CertificatePolicy
  commentId: P:System.Security.Cryptography.X509Certificates.X509ChainPolicy.CertificatePolicy
  id: CertificatePolicy
  parent: System.Security.Cryptography.X509Certificates.X509ChainPolicy
  langs:
  - csharp
  - vb
  name: CertificatePolicy
  fullName: System.Security.Cryptography.X509Certificates.X509ChainPolicy.CertificatePolicy
  type: Property
  source:
    remote:
      path: src/System.Security.Cryptography.X509Certificates/ref/System.Security.Cryptography.X509Certificates.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: CertificatePolicy
    path: src/System.Security.Cryptography.X509Certificates/ref/System.Security.Cryptography.X509Certificates.cs
    startLine: 259
  assemblies:
  - System.Security.Cryptography.X509Certificates
  namespace: System.Security.Cryptography.X509Certificates
  summary: "\n<p>Gets a collection of object identifiers (OIDs) specifying which certificate policies the certificate supports.</p>\n"
  syntax:
    content: public OidCollection CertificatePolicy { get; }
    content.vb: Public ReadOnly Property CertificatePolicy As OidCollection
    parameters: []
    return:
      type: System.Security.Cryptography.OidCollection
      description: "\n<p>An <xref href=\"System.Security.Cryptography.OidCollection\" data-throw-if-not-resolved=\"false\"></xref> object.</p>\n"
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
  nameWithType: X509ChainPolicy.CertificatePolicy
- uid: System.Security.Cryptography.X509Certificates.X509ChainPolicy.ExtraStore
  commentId: P:System.Security.Cryptography.X509Certificates.X509ChainPolicy.ExtraStore
  id: ExtraStore
  parent: System.Security.Cryptography.X509Certificates.X509ChainPolicy
  langs:
  - csharp
  - vb
  name: ExtraStore
  fullName: System.Security.Cryptography.X509Certificates.X509ChainPolicy.ExtraStore
  type: Property
  source:
    remote:
      path: src/System.Security.Cryptography.X509Certificates/ref/System.Security.Cryptography.X509Certificates.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: ExtraStore
    path: src/System.Security.Cryptography.X509Certificates/ref/System.Security.Cryptography.X509Certificates.cs
    startLine: 260
  assemblies:
  - System.Security.Cryptography.X509Certificates
  namespace: System.Security.Cryptography.X509Certificates
  summary: "\n<p>Represents an additional collection of certificates that can be searched by the chaining engine when validating a certificate chain.</p>\n"
  syntax:
    content: public X509Certificate2Collection ExtraStore { get; }
    content.vb: Public ReadOnly Property ExtraStore As X509Certificate2Collection
    parameters: []
    return:
      type: System.Security.Cryptography.X509Certificates.X509Certificate2Collection
      description: "\n<p>An <xref href=\"System.Security.Cryptography.X509Certificates.X509Certificate2Collection\" data-throw-if-not-resolved=\"false\"></xref> object.</p>\n"
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
  nameWithType: X509ChainPolicy.ExtraStore
- uid: System.Security.Cryptography.X509Certificates.X509ChainPolicy.RevocationFlag
  commentId: P:System.Security.Cryptography.X509Certificates.X509ChainPolicy.RevocationFlag
  id: RevocationFlag
  parent: System.Security.Cryptography.X509Certificates.X509ChainPolicy
  langs:
  - csharp
  - vb
  name: RevocationFlag
  fullName: System.Security.Cryptography.X509Certificates.X509ChainPolicy.RevocationFlag
  type: Property
  source:
    remote:
      path: src/System.Security.Cryptography.X509Certificates/ref/System.Security.Cryptography.X509Certificates.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: RevocationFlag
    path: src/System.Security.Cryptography.X509Certificates/ref/System.Security.Cryptography.X509Certificates.cs
    startLine: 261
  assemblies:
  - System.Security.Cryptography.X509Certificates
  namespace: System.Security.Cryptography.X509Certificates
  summary: "\n<p>Gets or sets values for X509 revocation flags.</p>\n"
  syntax:
    content: public X509RevocationFlag RevocationFlag { get; set; }
    content.vb: Public Property RevocationFlag As X509RevocationFlag
    parameters: []
    return:
      type: System.Security.Cryptography.X509Certificates.X509RevocationFlag
      description: "\n<p>An <xref href=\"System.Security.Cryptography.X509Certificates.X509RevocationFlag\" data-throw-if-not-resolved=\"false\"></xref> object.</p>\n"
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "\n<p>The <xref href=\"System.Security.Cryptography.X509Certificates.X509RevocationFlag\" data-throw-if-not-resolved=\"false\"></xref> value supplied is not a valid flag. </p>\n"
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
  nameWithType: X509ChainPolicy.RevocationFlag
- uid: System.Security.Cryptography.X509Certificates.X509ChainPolicy.RevocationMode
  commentId: P:System.Security.Cryptography.X509Certificates.X509ChainPolicy.RevocationMode
  id: RevocationMode
  parent: System.Security.Cryptography.X509Certificates.X509ChainPolicy
  langs:
  - csharp
  - vb
  name: RevocationMode
  fullName: System.Security.Cryptography.X509Certificates.X509ChainPolicy.RevocationMode
  type: Property
  source:
    remote:
      path: src/System.Security.Cryptography.X509Certificates/ref/System.Security.Cryptography.X509Certificates.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: RevocationMode
    path: src/System.Security.Cryptography.X509Certificates/ref/System.Security.Cryptography.X509Certificates.cs
    startLine: 262
  assemblies:
  - System.Security.Cryptography.X509Certificates
  namespace: System.Security.Cryptography.X509Certificates
  summary: "\n<p>Gets or sets values for X509 certificate revocation mode.</p>\n"
  syntax:
    content: public X509RevocationMode RevocationMode { get; set; }
    content.vb: Public Property RevocationMode As X509RevocationMode
    parameters: []
    return:
      type: System.Security.Cryptography.X509Certificates.X509RevocationMode
      description: "\n<p>An <xref href=\"System.Security.Cryptography.X509Certificates.X509RevocationMode\" data-throw-if-not-resolved=\"false\"></xref> object.</p>\n"
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "\n<p>The <xref href=\"System.Security.Cryptography.X509Certificates.X509RevocationMode\" data-throw-if-not-resolved=\"false\"></xref> value supplied is not a valid flag. </p>\n"
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
  nameWithType: X509ChainPolicy.RevocationMode
- uid: System.Security.Cryptography.X509Certificates.X509ChainPolicy.UrlRetrievalTimeout
  commentId: P:System.Security.Cryptography.X509Certificates.X509ChainPolicy.UrlRetrievalTimeout
  id: UrlRetrievalTimeout
  parent: System.Security.Cryptography.X509Certificates.X509ChainPolicy
  langs:
  - csharp
  - vb
  name: UrlRetrievalTimeout
  fullName: System.Security.Cryptography.X509Certificates.X509ChainPolicy.UrlRetrievalTimeout
  type: Property
  source:
    remote:
      path: src/System.Security.Cryptography.X509Certificates/ref/System.Security.Cryptography.X509Certificates.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: UrlRetrievalTimeout
    path: src/System.Security.Cryptography.X509Certificates/ref/System.Security.Cryptography.X509Certificates.cs
    startLine: 263
  assemblies:
  - System.Security.Cryptography.X509Certificates
  namespace: System.Security.Cryptography.X509Certificates
  summary: "\n<p>Gets the time span that elapsed during online revocation verification or downloading the certificate revocation list (CRL).</p>\n"
  syntax:
    content: public TimeSpan UrlRetrievalTimeout { get; set; }
    content.vb: Public Property UrlRetrievalTimeout As TimeSpan
    parameters: []
    return:
      type: System.TimeSpan
      description: "\n<p>A <xref href=\"System.TimeSpan\" data-throw-if-not-resolved=\"false\"></xref> object.</p>\n"
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
  nameWithType: X509ChainPolicy.UrlRetrievalTimeout
- uid: System.Security.Cryptography.X509Certificates.X509ChainPolicy.VerificationFlags
  commentId: P:System.Security.Cryptography.X509Certificates.X509ChainPolicy.VerificationFlags
  id: VerificationFlags
  parent: System.Security.Cryptography.X509Certificates.X509ChainPolicy
  langs:
  - csharp
  - vb
  name: VerificationFlags
  fullName: System.Security.Cryptography.X509Certificates.X509ChainPolicy.VerificationFlags
  type: Property
  source:
    remote:
      path: src/System.Security.Cryptography.X509Certificates/ref/System.Security.Cryptography.X509Certificates.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: VerificationFlags
    path: src/System.Security.Cryptography.X509Certificates/ref/System.Security.Cryptography.X509Certificates.cs
    startLine: 264
  assemblies:
  - System.Security.Cryptography.X509Certificates
  namespace: System.Security.Cryptography.X509Certificates
  summary: "\n<p>Gets verification flags for the certificate.</p>\n"
  syntax:
    content: public X509VerificationFlags VerificationFlags { get; set; }
    content.vb: Public Property VerificationFlags As X509VerificationFlags
    parameters: []
    return:
      type: System.Security.Cryptography.X509Certificates.X509VerificationFlags
      description: "\n<p>A value from the <xref href=\"System.Security.Cryptography.X509Certificates.X509VerificationFlags\" data-throw-if-not-resolved=\"false\"></xref> enumeration.</p>\n"
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "\n<p>The <xref href=\"System.Security.Cryptography.X509Certificates.X509VerificationFlags\" data-throw-if-not-resolved=\"false\"></xref> value supplied is not a valid flag. <xref href=\"System.Security.Cryptography.X509Certificates.X509VerificationFlags.NoFlag\" data-throw-if-not-resolved=\"false\"></xref> is the default value. </p>\n"
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
  nameWithType: X509ChainPolicy.VerificationFlags
- uid: System.Security.Cryptography.X509Certificates.X509ChainPolicy.VerificationTime
  commentId: P:System.Security.Cryptography.X509Certificates.X509ChainPolicy.VerificationTime
  id: VerificationTime
  parent: System.Security.Cryptography.X509Certificates.X509ChainPolicy
  langs:
  - csharp
  - vb
  name: VerificationTime
  fullName: System.Security.Cryptography.X509Certificates.X509ChainPolicy.VerificationTime
  type: Property
  source:
    remote:
      path: src/System.Security.Cryptography.X509Certificates/ref/System.Security.Cryptography.X509Certificates.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: VerificationTime
    path: src/System.Security.Cryptography.X509Certificates/ref/System.Security.Cryptography.X509Certificates.cs
    startLine: 265
  assemblies:
  - System.Security.Cryptography.X509Certificates
  namespace: System.Security.Cryptography.X509Certificates
  summary: "\n<p>The time that the certificate was verified expressed in local time.</p>\n"
  syntax:
    content: public DateTime VerificationTime { get; set; }
    content.vb: Public Property VerificationTime As Date
    parameters: []
    return:
      type: System.DateTime
      description: "\n<p>A <xref href=\"System.DateTime\" data-throw-if-not-resolved=\"false\"></xref> object.</p>\n"
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
  nameWithType: X509ChainPolicy.VerificationTime
- uid: System.Security.Cryptography.X509Certificates.X509ChainPolicy.Reset
  commentId: M:System.Security.Cryptography.X509Certificates.X509ChainPolicy.Reset
  id: Reset
  parent: System.Security.Cryptography.X509Certificates.X509ChainPolicy
  langs:
  - csharp
  - vb
  name: Reset()
  fullName: System.Security.Cryptography.X509Certificates.X509ChainPolicy.Reset()
  type: Method
  source:
    remote:
      path: src/System.Security.Cryptography.X509Certificates/ref/System.Security.Cryptography.X509Certificates.cs
      branch: master
      repo: https://github.com/dotnet/corefx.git
    id: Reset
    path: src/System.Security.Cryptography.X509Certificates/ref/System.Security.Cryptography.X509Certificates.cs
    startLine: 266
  assemblies:
  - System.Security.Cryptography.X509Certificates
  namespace: System.Security.Cryptography.X509Certificates
  summary: "\n<p>Resets the <xref href=\"System.Security.Cryptography.X509Certificates.X509ChainPolicy\" data-throw-if-not-resolved=\"false\"></xref> members to their default values.</p>\n"
  syntax:
    content: public void Reset()
    content.vb: Public Sub Reset
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  nameWithType: X509ChainPolicy.Reset()
references:
- uid: System.Security.Cryptography.X509Certificates
  isExternal: false
  name: System.Security.Cryptography.X509Certificates
  fullName: System.Security.Cryptography.X509Certificates
  commentId: N:System.Security.Cryptography.X509Certificates
  nameWithType: System.Security.Cryptography.X509Certificates
- uid: System.Object
  parent: System
  isExternal: false
  name: Object
  fullName: System.Object
  commentId: T:System.Object
  nameWithType: Object
- uid: System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  commentId: M:System.Object.ToString
  nameWithType: Object.ToString()
- uid: System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
  commentId: M:System.Object.Equals(System.Object)
  nameWithType: Object.Equals(Object)
- uid: System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
  commentId: M:System.Object.Equals(System.Object,System.Object)
  nameWithType: Object.Equals(Object, Object)
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
- uid: System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  commentId: M:System.Object.GetHashCode
  nameWithType: Object.GetHashCode()
- uid: System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  commentId: M:System.Object.GetType
  nameWithType: Object.GetType()
- uid: System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  commentId: M:System.Object.MemberwiseClone
  nameWithType: Object.MemberwiseClone()
- uid: System
  isExternal: false
  name: System
  fullName: System
  commentId: N:System
  nameWithType: System
- uid: System.Security.Cryptography.OidCollection
  isExternal: false
  name: OidCollection
  fullName: System.Security.Cryptography.OidCollection
  commentId: T:System.Security.Cryptography.OidCollection
  nameWithType: OidCollection
- uid: System.Security.Cryptography.X509Certificates.X509Certificate2Collection
  parent: System.Security.Cryptography.X509Certificates
  isExternal: false
  name: X509Certificate2Collection
  fullName: System.Security.Cryptography.X509Certificates.X509Certificate2Collection
  commentId: T:System.Security.Cryptography.X509Certificates.X509Certificate2Collection
  nameWithType: X509Certificate2Collection
- uid: System.Security.Cryptography.X509Certificates.X509RevocationFlag
  parent: System.Security.Cryptography.X509Certificates
  isExternal: false
  name: X509RevocationFlag
  fullName: System.Security.Cryptography.X509Certificates.X509RevocationFlag
  commentId: T:System.Security.Cryptography.X509Certificates.X509RevocationFlag
  nameWithType: X509RevocationFlag
- uid: System.Security.Cryptography.X509Certificates.X509RevocationMode
  parent: System.Security.Cryptography.X509Certificates
  isExternal: false
  name: X509RevocationMode
  fullName: System.Security.Cryptography.X509Certificates.X509RevocationMode
  commentId: T:System.Security.Cryptography.X509Certificates.X509RevocationMode
  nameWithType: X509RevocationMode
- uid: System.TimeSpan
  parent: System
  isExternal: false
  name: TimeSpan
  fullName: System.TimeSpan
  commentId: T:System.TimeSpan
  nameWithType: TimeSpan
- uid: System.Security.Cryptography.X509Certificates.X509VerificationFlags
  parent: System.Security.Cryptography.X509Certificates
  isExternal: false
  name: X509VerificationFlags
  fullName: System.Security.Cryptography.X509Certificates.X509VerificationFlags
  commentId: T:System.Security.Cryptography.X509Certificates.X509VerificationFlags
  nameWithType: X509VerificationFlags
- uid: System.DateTime
  parent: System
  isExternal: false
  name: DateTime
  fullName: System.DateTime
  commentId: T:System.DateTime
  nameWithType: DateTime
- uid: System.ArgumentException
  parent: System
  isExternal: false
  name: ArgumentException
  fullName: System.ArgumentException
  nameWithType: ArgumentException
  commentId: T:System.ArgumentException
